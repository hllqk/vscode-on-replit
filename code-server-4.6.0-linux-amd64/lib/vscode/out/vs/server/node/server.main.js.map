{"version":3,"sources":["out-vscode-reh-web/vs/server/node/fake","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/amd.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/assert.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/codicons.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/decorators.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/errors.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/arrays.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/functional.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/iterator.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/json.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/lazy.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/lifecycle.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/linkedList.ts","out-vscode-reh-web/vs/server/node/vs/base/common/marked/marked.js","out-vscode-reh-web/vs/server/node/vs/base/common/performance.js","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/platform.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/process.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/path.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/mime.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/processes.ts","out-vscode-reh-web/vs/server/node/vs/base/common/semver/semver.js","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/skipList.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/stopwatch.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/event.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/cancellation.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/cache.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/observableValue.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/stream.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/buffer.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/strings.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/hash.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/map.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/filters.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/iconLabels.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/normalization.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/severity.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/types.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/extpath.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/objects.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/uri.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/console.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/marshalling.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/network.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/resources.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/async.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/glob.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/htmlContent.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/labels.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/uriIpc.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/uuid.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/node/decoder.ts","out-vscode-reh-web/vs/server/node/vs/base/node/languagePacks.js","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/node/macAddress.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/node/id.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/node/pfs.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/node/extpath.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/node/ports.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/node/powershell.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/node/ps.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/parts/ipc/common/ipc.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/parts/ipc/common/ipc.net.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/parts/ipc/node/ipc.net.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/parts/storage/common/storage.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/editor/common/core/position.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/editor/common/core/range.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/editor/common/tokenizationRegistry.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/editor/common/languages.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/date.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/errorMessage.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/jsonErrorMessages.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/node/processes.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/node/shell.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/parts/ipc/node/ipc.cp.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/debug/common/extensionHostDebugIpc.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/download/common/downloadIpc.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/editor/common/editor.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/encryption/node/encryptionMainService.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/environment/common/environmentService.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/environment/node/argv.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/environment/node/argvHelper.ts","out-vscode-reh-web/vs/server/node/vs/platform/environment/node/userDataPath.js","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/environment/node/environmentService.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/extensions/common/extensionValidator.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/externalServices/common/serviceMachineId.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/instantiation/common/descriptors.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/instantiation/common/extensions.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/instantiation/common/graph.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/instantiation/common/instantiation.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/configuration/common/configuration.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/contextkey/common/contextkey.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/credentials/common/credentials.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/diagnostics/common/diagnostics.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/download/common/download.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/encryption/common/encryptionService.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/environment/common/environment.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/extensionManagement/common/extensionManagement.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/extensionManagement/common/extensionManagementIpc.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/files/common/files.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/files/common/diskFileSystemProviderClient.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/files/common/io.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/files/common/watcher.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/files/node/watcher/nodejs/nodejsWatcherLib.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/files/node/watcher/nodejs/nodejsWatcher.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/files/node/watcher/nodejs/nodejsClient.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/files/node/watcher/watcherClient.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/instantiation/common/serviceCollection.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/instantiation/common/instantiationService.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/label/common/label.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/languagePacks/common/languagePacks.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/log/common/log.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/credentials/common/credentialsMainService.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/files/common/diskFileSystemProvider.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/files/common/fileService.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/files/node/diskFileSystemProvider.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/files/node/diskFileSystemProviderServer.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/log/common/logIpc.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/log/node/spdlogLog.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/markers/common/markers.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/policy/common/policy.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/product/common/product.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/product/common/productService.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/registry/common/platform.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/jsonschemas/common/jsonContributionRegistry.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/configuration/common/configurationRegistry.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/configuration/common/configurationModels.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/configuration/common/configurations.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/configuration/common/configurationService.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/remote/common/remoteAuthorityResolver.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/remote/common/remoteHosts.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/extensions/common/extensions.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/extensionManagement/common/extensionManagementUtil.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/extensionManagement/common/extensionManagementCLIService.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/extensionManagement/common/extensionsProfileScannerService.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/extensionManagement/node/extensionDownloader.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/extensionManagement/node/extensionsManifestCache.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/languagePacks/node/languagePacks.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/request/common/request.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/download/common/downloadService.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/request/common/requestIpc.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/request/node/proxy.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/shell/node/shellEnv.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/telemetry/common/commonProperties.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/telemetry/common/errorTelemetry.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/telemetry/common/remoteTelemetryChannel.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/telemetry/common/telemetry.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/diagnostics/node/diagnosticsService.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/telemetry/common/telemetryUtils.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/externalServices/common/marketplace.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/telemetry/common/1dsAppender.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/telemetry/common/telemetryService.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/telemetry/common/serverTelemetryService.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/telemetry/node/1dsAppender.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/telemetry/node/errorTelemetry.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/terminal/common/requestStore.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/terminal/common/terminal.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/terminal/node/terminalEnvironment.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/theme/common/theme.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/theme/common/themeService.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/terminal/common/terminalProfiles.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/terminal/common/terminalPlatformConfiguration.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/terminal/node/terminalProfiles.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/terminal/node/ptyHostService.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/uriIdentity/common/uriIdentity.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/extensionManagement/node/extensionsWatcher.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/uriIdentity/common/uriIdentityService.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/workspace/common/workspace.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/userDataProfile/common/userDataProfile.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/extensionManagement/common/abstractExtensionManagementService.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/extensionManagement/common/extensionsScannerService.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/extensionManagement/node/extensionLifecycle.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/storage/common/storage.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/extensionManagement/common/extensionGalleryService.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/server/node/extensionHostStatusService.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/server/node/remoteExtensionManagement.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/server/node/remoteLanguagePacks.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/server/node/extensionsScannerService.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/server/node/serverConnectionToken.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/server/node/serverEnvironmentService.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/credentials/node/credentialsMainService.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/server/node/telemetryClient.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/server/node/webClientServer.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/api/common/extHostRpcService.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/api/common/extHostTypes.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/api/node/uriTransformer.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/server/node/remoteFileSystemProviderServer.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/common/editor.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/contrib/notebook/common/notebookCommon.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/contrib/terminal/common/environmentVariable.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/contrib/terminal/common/environmentVariableCollection.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/contrib/terminal/common/environmentVariableShared.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/contrib/terminal/common/terminalEnvironment.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/contrib/testing/common/testId.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/contrib/testing/common/testTypes.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/contrib/testing/common/testItemCollection.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/api/common/extHostTestingPrivateApi.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/services/configuration/common/configuration.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/services/configurationResolver/common/configurationResolver.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/services/configurationResolver/common/variableResolver.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/services/editor/common/editorGroupsService.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/services/editor/common/editorService.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/api/common/extHostTypeConverters.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/api/common/extHostTestItem.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/contrib/terminal/common/remoteTerminalChannel.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/services/extensions/common/extensionHostEnv.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/server/node/extensionHostConnection.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/services/extensions/common/extensionsUtil.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/server/node/remoteAgentEnvironmentImpl.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/services/extensions/common/proxyIdentifier.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/api/common/extHost.protocol.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/api/common/extHostCommands.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/api/node/extHostCLIServer.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/server/node/remoteTerminalChannel.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/services/remote/common/remoteAgentService.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/services/remote/common/remoteFileSystemProviderClient.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/node/zip.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/extensionManagement/node/extensionManagementUtil.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/extensionManagement/node/extensionManagementService.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/request/node/requestService.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/server/node/remoteExtensionHostAgentCli.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/server/node/serverServices.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/server/node/remoteExtensionHostAgentServer.ts","out-vscode-reh-web/vs/server/node/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/server/node/server.main.ts"],"sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport abstract class LoaderStats {\n\tabstract get amdLoad(): [string, number][];\n\tabstract get amdInvoke(): [string, number][];\n\tabstract get nodeRequire(): [string, number][];\n\tabstract get nodeEval(): [string, number][];\n\tabstract get nodeRequireTotal(): number;\n\n\tstatic get(): LoaderStats {\n\t\tconst amdLoadScript = new Map<string, number>();\n\t\tconst amdInvokeFactory = new Map<string, number>();\n\t\tconst nodeRequire = new Map<string, number>();\n\t\tconst nodeEval = new Map<string, number>();\n\n\t\tfunction mark(map: Map<string, number>, stat: LoaderEvent) {\n\t\t\tif (map.has(stat.detail)) {\n\t\t\t\t// console.warn('BAD events, DOUBLE start', stat);\n\t\t\t\t// map.delete(stat.detail);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tmap.set(stat.detail, -stat.timestamp);\n\t\t}\n\n\t\tfunction diff(map: Map<string, number>, stat: LoaderEvent) {\n\t\t\tconst duration = map.get(stat.detail);\n\t\t\tif (!duration) {\n\t\t\t\t// console.warn('BAD events, end WITHOUT start', stat);\n\t\t\t\t// map.delete(stat.detail);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (duration >= 0) {\n\t\t\t\t// console.warn('BAD events, DOUBLE end', stat);\n\t\t\t\t// map.delete(stat.detail);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tmap.set(stat.detail, duration + stat.timestamp);\n\t\t}\n\n\t\tconst stats = require.getStats().slice(0).sort((a, b) => a.timestamp - b.timestamp);\n\n\t\tfor (const stat of stats) {\n\t\t\tswitch (stat.type) {\n\t\t\t\tcase LoaderEventType.BeginLoadingScript:\n\t\t\t\t\tmark(amdLoadScript, stat);\n\t\t\t\t\tbreak;\n\t\t\t\tcase LoaderEventType.EndLoadingScriptOK:\n\t\t\t\tcase LoaderEventType.EndLoadingScriptError:\n\t\t\t\t\tdiff(amdLoadScript, stat);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase LoaderEventType.BeginInvokeFactory:\n\t\t\t\t\tmark(amdInvokeFactory, stat);\n\t\t\t\t\tbreak;\n\t\t\t\tcase LoaderEventType.EndInvokeFactory:\n\t\t\t\t\tdiff(amdInvokeFactory, stat);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase LoaderEventType.NodeBeginNativeRequire:\n\t\t\t\t\tmark(nodeRequire, stat);\n\t\t\t\t\tbreak;\n\t\t\t\tcase LoaderEventType.NodeEndNativeRequire:\n\t\t\t\t\tdiff(nodeRequire, stat);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase LoaderEventType.NodeBeginEvaluatingScript:\n\t\t\t\t\tmark(nodeEval, stat);\n\t\t\t\t\tbreak;\n\t\t\t\tcase LoaderEventType.NodeEndEvaluatingScript:\n\t\t\t\t\tdiff(nodeEval, stat);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlet nodeRequireTotal = 0;\n\t\tnodeRequire.forEach(value => nodeRequireTotal += value);\n\n\t\tfunction to2dArray(map: Map<string, number>): [string, number][] {\n\t\t\tconst res: [string, number][] = [];\n\t\t\tmap.forEach((value, index) => res.push([index, value]));\n\t\t\treturn res;\n\t\t}\n\n\t\treturn {\n\t\t\tamdLoad: to2dArray(amdLoadScript),\n\t\t\tamdInvoke: to2dArray(amdInvokeFactory),\n\t\t\tnodeRequire: to2dArray(nodeRequire),\n\t\t\tnodeEval: to2dArray(nodeEval),\n\t\t\tnodeRequireTotal\n\t\t};\n\t}\n\n\tstatic toMarkdownTable(header: string[], rows: Array<Array<{ toString(): string } | undefined>>): string {\n\t\tlet result = '';\n\n\t\tconst lengths: number[] = [];\n\t\theader.forEach((cell, ci) => {\n\t\t\tlengths[ci] = cell.length;\n\t\t});\n\t\trows.forEach(row => {\n\t\t\trow.forEach((cell, ci) => {\n\t\t\t\tif (typeof cell === 'undefined') {\n\t\t\t\t\tcell = row[ci] = '-';\n\t\t\t\t}\n\t\t\t\tconst len = cell.toString().length;\n\t\t\t\tlengths[ci] = Math.max(len, lengths[ci]);\n\t\t\t});\n\t\t});\n\n\t\t// header\n\t\theader.forEach((cell, ci) => { result += `| ${cell + ' '.repeat(lengths[ci] - cell.toString().length)} `; });\n\t\tresult += '|\\n';\n\t\theader.forEach((_cell, ci) => { result += `| ${'-'.repeat(lengths[ci])} `; });\n\t\tresult += '|\\n';\n\n\t\t// cells\n\t\trows.forEach(row => {\n\t\t\trow.forEach((cell, ci) => {\n\t\t\t\tif (typeof cell !== 'undefined') {\n\t\t\t\t\tresult += `| ${cell + ' '.repeat(lengths[ci] - cell.toString().length)} `;\n\t\t\t\t}\n\t\t\t});\n\t\t\tresult += '|\\n';\n\t\t});\n\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Throws an error with the provided message if the provided value does not evaluate to a true Javascript value.\n */\nexport function ok(value?: unknown, message?: string) {\n\tif (!value) {\n\t\tthrow new Error(message ? `Assertion failed (${message})` : 'Assertion Failed');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\n\nexport interface IIconRegistry {\n\treadonly all: IterableIterator<Codicon>;\n\treadonly onDidRegister: Event<Codicon>;\n\tget(id: string): Codicon | undefined;\n}\n\n// Selects all codicon names encapsulated in the `$()` syntax and wraps the\n// results with spaces so that screen readers can read the text better.\nexport function getCodiconAriaLabel(text: string | undefined) {\n\tif (!text) {\n\t\treturn '';\n\t}\n\n\treturn text.replace(/\\$\\((.*?)\\)/g, (_match, codiconName) => ` ${codiconName} `).trim();\n}\n\n/**\n * The Codicon library is a set of default icons that are built-in in VS Code.\n *\n * In the product (outside of base) Codicons should only be used as defaults. In order to have all icons in VS Code\n * themeable, component should define new, UI component specific icons using `iconRegistry.registerIcon`.\n * In that call a Codicon can be named as default.\n */\nexport class Codicon implements CSSIcon {\n\n\tprivate constructor(public readonly id: string, public readonly definition: IconDefinition, public description?: string) {\n\t\tCodicon._allCodicons.push(this);\n\t}\n\tpublic get classNames() { return 'codicon codicon-' + this.id; }\n\t// classNamesArray is useful for migrating to ES6 classlist\n\tpublic get classNamesArray() { return ['codicon', 'codicon-' + this.id]; }\n\tpublic get cssSelector() { return '.codicon.codicon-' + this.id; }\n\n\t// registry\n\tprivate static _allCodicons: Codicon[] = [];\n\n\t/**\n\t * @returns Returns all default icons covered by the codicon font. Only to be used by the icon registry in platform.\n\t */\n\tpublic static getAll(): readonly Codicon[] {\n\t\treturn Codicon._allCodicons;\n\t}\n\n\t// built-in icons, with image name\n\tpublic static readonly add = new Codicon('add', { fontCharacter: '\\\\ea60' });\n\tpublic static readonly plus = new Codicon('plus', Codicon.add.definition);\n\tpublic static readonly gistNew = new Codicon('gist-new', Codicon.add.definition);\n\tpublic static readonly repoCreate = new Codicon('repo-create', Codicon.add.definition);\n\tpublic static readonly lightbulb = new Codicon('lightbulb', { fontCharacter: '\\\\ea61' });\n\tpublic static readonly lightBulb = new Codicon('light-bulb', { fontCharacter: '\\\\ea61' });\n\tpublic static readonly repo = new Codicon('repo', { fontCharacter: '\\\\ea62' });\n\tpublic static readonly repoDelete = new Codicon('repo-delete', { fontCharacter: '\\\\ea62' });\n\tpublic static readonly gistFork = new Codicon('gist-fork', { fontCharacter: '\\\\ea63' });\n\tpublic static readonly repoForked = new Codicon('repo-forked', { fontCharacter: '\\\\ea63' });\n\tpublic static readonly gitPullRequest = new Codicon('git-pull-request', { fontCharacter: '\\\\ea64' });\n\tpublic static readonly gitPullRequestAbandoned = new Codicon('git-pull-request-abandoned', { fontCharacter: '\\\\ea64' });\n\tpublic static readonly recordKeys = new Codicon('record-keys', { fontCharacter: '\\\\ea65' });\n\tpublic static readonly keyboard = new Codicon('keyboard', { fontCharacter: '\\\\ea65' });\n\tpublic static readonly tag = new Codicon('tag', { fontCharacter: '\\\\ea66' });\n\tpublic static readonly tagAdd = new Codicon('tag-add', { fontCharacter: '\\\\ea66' });\n\tpublic static readonly tagRemove = new Codicon('tag-remove', { fontCharacter: '\\\\ea66' });\n\tpublic static readonly person = new Codicon('person', { fontCharacter: '\\\\ea67' });\n\tpublic static readonly personFollow = new Codicon('person-follow', { fontCharacter: '\\\\ea67' });\n\tpublic static readonly personOutline = new Codicon('person-outline', { fontCharacter: '\\\\ea67' });\n\tpublic static readonly personFilled = new Codicon('person-filled', { fontCharacter: '\\\\ea67' });\n\tpublic static readonly gitBranch = new Codicon('git-branch', { fontCharacter: '\\\\ea68' });\n\tpublic static readonly gitBranchCreate = new Codicon('git-branch-create', { fontCharacter: '\\\\ea68' });\n\tpublic static readonly gitBranchDelete = new Codicon('git-branch-delete', { fontCharacter: '\\\\ea68' });\n\tpublic static readonly sourceControl = new Codicon('source-control', { fontCharacter: '\\\\ea68' });\n\tpublic static readonly mirror = new Codicon('mirror', { fontCharacter: '\\\\ea69' });\n\tpublic static readonly mirrorPublic = new Codicon('mirror-public', { fontCharacter: '\\\\ea69' });\n\tpublic static readonly star = new Codicon('star', { fontCharacter: '\\\\ea6a' });\n\tpublic static readonly starAdd = new Codicon('star-add', { fontCharacter: '\\\\ea6a' });\n\tpublic static readonly starDelete = new Codicon('star-delete', { fontCharacter: '\\\\ea6a' });\n\tpublic static readonly starEmpty = new Codicon('star-empty', { fontCharacter: '\\\\ea6a' });\n\tpublic static readonly comment = new Codicon('comment', { fontCharacter: '\\\\ea6b' });\n\tpublic static readonly commentAdd = new Codicon('comment-add', { fontCharacter: '\\\\ea6b' });\n\tpublic static readonly alert = new Codicon('alert', { fontCharacter: '\\\\ea6c' });\n\tpublic static readonly warning = new Codicon('warning', { fontCharacter: '\\\\ea6c' });\n\tpublic static readonly search = new Codicon('search', { fontCharacter: '\\\\ea6d' });\n\tpublic static readonly searchSave = new Codicon('search-save', { fontCharacter: '\\\\ea6d' });\n\tpublic static readonly logOut = new Codicon('log-out', { fontCharacter: '\\\\ea6e' });\n\tpublic static readonly signOut = new Codicon('sign-out', { fontCharacter: '\\\\ea6e' });\n\tpublic static readonly logIn = new Codicon('log-in', { fontCharacter: '\\\\ea6f' });\n\tpublic static readonly signIn = new Codicon('sign-in', { fontCharacter: '\\\\ea6f' });\n\tpublic static readonly eye = new Codicon('eye', { fontCharacter: '\\\\ea70' });\n\tpublic static readonly eyeUnwatch = new Codicon('eye-unwatch', { fontCharacter: '\\\\ea70' });\n\tpublic static readonly eyeWatch = new Codicon('eye-watch', { fontCharacter: '\\\\ea70' });\n\tpublic static readonly circleFilled = new Codicon('circle-filled', { fontCharacter: '\\\\ea71' });\n\tpublic static readonly primitiveDot = new Codicon('primitive-dot', { fontCharacter: '\\\\ea71' });\n\tpublic static readonly closeDirty = new Codicon('close-dirty', { fontCharacter: '\\\\ea71' });\n\tpublic static readonly debugBreakpoint = new Codicon('debug-breakpoint', { fontCharacter: '\\\\ea71' });\n\tpublic static readonly debugBreakpointDisabled = new Codicon('debug-breakpoint-disabled', { fontCharacter: '\\\\ea71' });\n\tpublic static readonly debugHint = new Codicon('debug-hint', { fontCharacter: '\\\\ea71' });\n\tpublic static readonly primitiveSquare = new Codicon('primitive-square', { fontCharacter: '\\\\ea72' });\n\tpublic static readonly edit = new Codicon('edit', { fontCharacter: '\\\\ea73' });\n\tpublic static readonly pencil = new Codicon('pencil', { fontCharacter: '\\\\ea73' });\n\tpublic static readonly info = new Codicon('info', { fontCharacter: '\\\\ea74' });\n\tpublic static readonly issueOpened = new Codicon('issue-opened', { fontCharacter: '\\\\ea74' });\n\tpublic static readonly gistPrivate = new Codicon('gist-private', { fontCharacter: '\\\\ea75' });\n\tpublic static readonly gitForkPrivate = new Codicon('git-fork-private', { fontCharacter: '\\\\ea75' });\n\tpublic static readonly lock = new Codicon('lock', { fontCharacter: '\\\\ea75' });\n\tpublic static readonly mirrorPrivate = new Codicon('mirror-private', { fontCharacter: '\\\\ea75' });\n\tpublic static readonly close = new Codicon('close', { fontCharacter: '\\\\ea76' });\n\tpublic static readonly removeClose = new Codicon('remove-close', { fontCharacter: '\\\\ea76' });\n\tpublic static readonly x = new Codicon('x', { fontCharacter: '\\\\ea76' });\n\tpublic static readonly repoSync = new Codicon('repo-sync', { fontCharacter: '\\\\ea77' });\n\tpublic static readonly sync = new Codicon('sync', { fontCharacter: '\\\\ea77' });\n\tpublic static readonly clone = new Codicon('clone', { fontCharacter: '\\\\ea78' });\n\tpublic static readonly desktopDownload = new Codicon('desktop-download', { fontCharacter: '\\\\ea78' });\n\tpublic static readonly beaker = new Codicon('beaker', { fontCharacter: '\\\\ea79' });\n\tpublic static readonly microscope = new Codicon('microscope', { fontCharacter: '\\\\ea79' });\n\tpublic static readonly vm = new Codicon('vm', { fontCharacter: '\\\\ea7a' });\n\tpublic static readonly deviceDesktop = new Codicon('device-desktop', { fontCharacter: '\\\\ea7a' });\n\tpublic static readonly file = new Codicon('file', { fontCharacter: '\\\\ea7b' });\n\tpublic static readonly fileText = new Codicon('file-text', { fontCharacter: '\\\\ea7b' });\n\tpublic static readonly more = new Codicon('more', { fontCharacter: '\\\\ea7c' });\n\tpublic static readonly ellipsis = new Codicon('ellipsis', { fontCharacter: '\\\\ea7c' });\n\tpublic static readonly kebabHorizontal = new Codicon('kebab-horizontal', { fontCharacter: '\\\\ea7c' });\n\tpublic static readonly mailReply = new Codicon('mail-reply', { fontCharacter: '\\\\ea7d' });\n\tpublic static readonly reply = new Codicon('reply', { fontCharacter: '\\\\ea7d' });\n\tpublic static readonly organization = new Codicon('organization', { fontCharacter: '\\\\ea7e' });\n\tpublic static readonly organizationFilled = new Codicon('organization-filled', { fontCharacter: '\\\\ea7e' });\n\tpublic static readonly organizationOutline = new Codicon('organization-outline', { fontCharacter: '\\\\ea7e' });\n\tpublic static readonly newFile = new Codicon('new-file', { fontCharacter: '\\\\ea7f' });\n\tpublic static readonly fileAdd = new Codicon('file-add', { fontCharacter: '\\\\ea7f' });\n\tpublic static readonly newFolder = new Codicon('new-folder', { fontCharacter: '\\\\ea80' });\n\tpublic static readonly fileDirectoryCreate = new Codicon('file-directory-create', { fontCharacter: '\\\\ea80' });\n\tpublic static readonly trash = new Codicon('trash', { fontCharacter: '\\\\ea81' });\n\tpublic static readonly trashcan = new Codicon('trashcan', { fontCharacter: '\\\\ea81' });\n\tpublic static readonly history = new Codicon('history', { fontCharacter: '\\\\ea82' });\n\tpublic static readonly clock = new Codicon('clock', { fontCharacter: '\\\\ea82' });\n\tpublic static readonly folder = new Codicon('folder', { fontCharacter: '\\\\ea83' });\n\tpublic static readonly fileDirectory = new Codicon('file-directory', { fontCharacter: '\\\\ea83' });\n\tpublic static readonly symbolFolder = new Codicon('symbol-folder', { fontCharacter: '\\\\ea83' });\n\tpublic static readonly logoGithub = new Codicon('logo-github', { fontCharacter: '\\\\ea84' });\n\tpublic static readonly markGithub = new Codicon('mark-github', { fontCharacter: '\\\\ea84' });\n\tpublic static readonly github = new Codicon('github', { fontCharacter: '\\\\ea84' });\n\tpublic static readonly terminal = new Codicon('terminal', { fontCharacter: '\\\\ea85' });\n\tpublic static readonly console = new Codicon('console', { fontCharacter: '\\\\ea85' });\n\tpublic static readonly repl = new Codicon('repl', { fontCharacter: '\\\\ea85' });\n\tpublic static readonly zap = new Codicon('zap', { fontCharacter: '\\\\ea86' });\n\tpublic static readonly symbolEvent = new Codicon('symbol-event', { fontCharacter: '\\\\ea86' });\n\tpublic static readonly error = new Codicon('error', { fontCharacter: '\\\\ea87' });\n\tpublic static readonly stop = new Codicon('stop', { fontCharacter: '\\\\ea87' });\n\tpublic static readonly variable = new Codicon('variable', { fontCharacter: '\\\\ea88' });\n\tpublic static readonly symbolVariable = new Codicon('symbol-variable', { fontCharacter: '\\\\ea88' });\n\tpublic static readonly array = new Codicon('array', { fontCharacter: '\\\\ea8a' });\n\tpublic static readonly symbolArray = new Codicon('symbol-array', { fontCharacter: '\\\\ea8a' });\n\tpublic static readonly symbolModule = new Codicon('symbol-module', { fontCharacter: '\\\\ea8b' });\n\tpublic static readonly symbolPackage = new Codicon('symbol-package', { fontCharacter: '\\\\ea8b' });\n\tpublic static readonly symbolNamespace = new Codicon('symbol-namespace', { fontCharacter: '\\\\ea8b' });\n\tpublic static readonly symbolObject = new Codicon('symbol-object', { fontCharacter: '\\\\ea8b' });\n\tpublic static readonly symbolMethod = new Codicon('symbol-method', { fontCharacter: '\\\\ea8c' });\n\tpublic static readonly symbolFunction = new Codicon('symbol-function', { fontCharacter: '\\\\ea8c' });\n\tpublic static readonly symbolConstructor = new Codicon('symbol-constructor', { fontCharacter: '\\\\ea8c' });\n\tpublic static readonly symbolBoolean = new Codicon('symbol-boolean', { fontCharacter: '\\\\ea8f' });\n\tpublic static readonly symbolNull = new Codicon('symbol-null', { fontCharacter: '\\\\ea8f' });\n\tpublic static readonly symbolNumeric = new Codicon('symbol-numeric', { fontCharacter: '\\\\ea90' });\n\tpublic static readonly symbolNumber = new Codicon('symbol-number', { fontCharacter: '\\\\ea90' });\n\tpublic static readonly symbolStructure = new Codicon('symbol-structure', { fontCharacter: '\\\\ea91' });\n\tpublic static readonly symbolStruct = new Codicon('symbol-struct', { fontCharacter: '\\\\ea91' });\n\tpublic static readonly symbolParameter = new Codicon('symbol-parameter', { fontCharacter: '\\\\ea92' });\n\tpublic static readonly symbolTypeParameter = new Codicon('symbol-type-parameter', { fontCharacter: '\\\\ea92' });\n\tpublic static readonly symbolKey = new Codicon('symbol-key', { fontCharacter: '\\\\ea93' });\n\tpublic static readonly symbolText = new Codicon('symbol-text', { fontCharacter: '\\\\ea93' });\n\tpublic static readonly symbolReference = new Codicon('symbol-reference', { fontCharacter: '\\\\ea94' });\n\tpublic static readonly goToFile = new Codicon('go-to-file', { fontCharacter: '\\\\ea94' });\n\tpublic static readonly symbolEnum = new Codicon('symbol-enum', { fontCharacter: '\\\\ea95' });\n\tpublic static readonly symbolValue = new Codicon('symbol-value', { fontCharacter: '\\\\ea95' });\n\tpublic static readonly symbolRuler = new Codicon('symbol-ruler', { fontCharacter: '\\\\ea96' });\n\tpublic static readonly symbolUnit = new Codicon('symbol-unit', { fontCharacter: '\\\\ea96' });\n\tpublic static readonly activateBreakpoints = new Codicon('activate-breakpoints', { fontCharacter: '\\\\ea97' });\n\tpublic static readonly archive = new Codicon('archive', { fontCharacter: '\\\\ea98' });\n\tpublic static readonly arrowBoth = new Codicon('arrow-both', { fontCharacter: '\\\\ea99' });\n\tpublic static readonly arrowDown = new Codicon('arrow-down', { fontCharacter: '\\\\ea9a' });\n\tpublic static readonly arrowLeft = new Codicon('arrow-left', { fontCharacter: '\\\\ea9b' });\n\tpublic static readonly arrowRight = new Codicon('arrow-right', { fontCharacter: '\\\\ea9c' });\n\tpublic static readonly arrowSmallDown = new Codicon('arrow-small-down', { fontCharacter: '\\\\ea9d' });\n\tpublic static readonly arrowSmallLeft = new Codicon('arrow-small-left', { fontCharacter: '\\\\ea9e' });\n\tpublic static readonly arrowSmallRight = new Codicon('arrow-small-right', { fontCharacter: '\\\\ea9f' });\n\tpublic static readonly arrowSmallUp = new Codicon('arrow-small-up', { fontCharacter: '\\\\eaa0' });\n\tpublic static readonly arrowUp = new Codicon('arrow-up', { fontCharacter: '\\\\eaa1' });\n\tpublic static readonly bell = new Codicon('bell', { fontCharacter: '\\\\eaa2' });\n\tpublic static readonly bold = new Codicon('bold', { fontCharacter: '\\\\eaa3' });\n\tpublic static readonly book = new Codicon('book', { fontCharacter: '\\\\eaa4' });\n\tpublic static readonly bookmark = new Codicon('bookmark', { fontCharacter: '\\\\eaa5' });\n\tpublic static readonly debugBreakpointConditionalUnverified = new Codicon('debug-breakpoint-conditional-unverified', { fontCharacter: '\\\\eaa6' });\n\tpublic static readonly debugBreakpointConditional = new Codicon('debug-breakpoint-conditional', { fontCharacter: '\\\\eaa7' });\n\tpublic static readonly debugBreakpointConditionalDisabled = new Codicon('debug-breakpoint-conditional-disabled', { fontCharacter: '\\\\eaa7' });\n\tpublic static readonly debugBreakpointDataUnverified = new Codicon('debug-breakpoint-data-unverified', { fontCharacter: '\\\\eaa8' });\n\tpublic static readonly debugBreakpointData = new Codicon('debug-breakpoint-data', { fontCharacter: '\\\\eaa9' });\n\tpublic static readonly debugBreakpointDataDisabled = new Codicon('debug-breakpoint-data-disabled', { fontCharacter: '\\\\eaa9' });\n\tpublic static readonly debugBreakpointLogUnverified = new Codicon('debug-breakpoint-log-unverified', { fontCharacter: '\\\\eaaa' });\n\tpublic static readonly debugBreakpointLog = new Codicon('debug-breakpoint-log', { fontCharacter: '\\\\eaab' });\n\tpublic static readonly debugBreakpointLogDisabled = new Codicon('debug-breakpoint-log-disabled', { fontCharacter: '\\\\eaab' });\n\tpublic static readonly briefcase = new Codicon('briefcase', { fontCharacter: '\\\\eaac' });\n\tpublic static readonly broadcast = new Codicon('broadcast', { fontCharacter: '\\\\eaad' });\n\tpublic static readonly browser = new Codicon('browser', { fontCharacter: '\\\\eaae' });\n\tpublic static readonly bug = new Codicon('bug', { fontCharacter: '\\\\eaaf' });\n\tpublic static readonly calendar = new Codicon('calendar', { fontCharacter: '\\\\eab0' });\n\tpublic static readonly caseSensitive = new Codicon('case-sensitive', { fontCharacter: '\\\\eab1' });\n\tpublic static readonly check = new Codicon('check', { fontCharacter: '\\\\eab2' });\n\tpublic static readonly checklist = new Codicon('checklist', { fontCharacter: '\\\\eab3' });\n\tpublic static readonly chevronDown = new Codicon('chevron-down', { fontCharacter: '\\\\eab4' });\n\tpublic static readonly dropDownButton = new Codicon('drop-down-button', Codicon.chevronDown.definition);\n\tpublic static readonly chevronLeft = new Codicon('chevron-left', { fontCharacter: '\\\\eab5' });\n\tpublic static readonly chevronRight = new Codicon('chevron-right', { fontCharacter: '\\\\eab6' });\n\tpublic static readonly chevronUp = new Codicon('chevron-up', { fontCharacter: '\\\\eab7' });\n\tpublic static readonly chromeClose = new Codicon('chrome-close', { fontCharacter: '\\\\eab8' });\n\tpublic static readonly chromeMaximize = new Codicon('chrome-maximize', { fontCharacter: '\\\\eab9' });\n\tpublic static readonly chromeMinimize = new Codicon('chrome-minimize', { fontCharacter: '\\\\eaba' });\n\tpublic static readonly chromeRestore = new Codicon('chrome-restore', { fontCharacter: '\\\\eabb' });\n\tpublic static readonly circleOutline = new Codicon('circle-outline', { fontCharacter: '\\\\eabc' });\n\tpublic static readonly debugBreakpointUnverified = new Codicon('debug-breakpoint-unverified', { fontCharacter: '\\\\eabc' });\n\tpublic static readonly circleSlash = new Codicon('circle-slash', { fontCharacter: '\\\\eabd' });\n\tpublic static readonly circuitBoard = new Codicon('circuit-board', { fontCharacter: '\\\\eabe' });\n\tpublic static readonly clearAll = new Codicon('clear-all', { fontCharacter: '\\\\eabf' });\n\tpublic static readonly clippy = new Codicon('clippy', { fontCharacter: '\\\\eac0' });\n\tpublic static readonly closeAll = new Codicon('close-all', { fontCharacter: '\\\\eac1' });\n\tpublic static readonly cloudDownload = new Codicon('cloud-download', { fontCharacter: '\\\\eac2' });\n\tpublic static readonly cloudUpload = new Codicon('cloud-upload', { fontCharacter: '\\\\eac3' });\n\tpublic static readonly code = new Codicon('code', { fontCharacter: '\\\\eac4' });\n\tpublic static readonly collapseAll = new Codicon('collapse-all', { fontCharacter: '\\\\eac5' });\n\tpublic static readonly colorMode = new Codicon('color-mode', { fontCharacter: '\\\\eac6' });\n\tpublic static readonly commentDiscussion = new Codicon('comment-discussion', { fontCharacter: '\\\\eac7' });\n\tpublic static readonly compareChanges = new Codicon('compare-changes', { fontCharacter: '\\\\eafd' });\n\tpublic static readonly creditCard = new Codicon('credit-card', { fontCharacter: '\\\\eac9' });\n\tpublic static readonly dash = new Codicon('dash', { fontCharacter: '\\\\eacc' });\n\tpublic static readonly dashboard = new Codicon('dashboard', { fontCharacter: '\\\\eacd' });\n\tpublic static readonly database = new Codicon('database', { fontCharacter: '\\\\eace' });\n\tpublic static readonly debugContinue = new Codicon('debug-continue', { fontCharacter: '\\\\eacf' });\n\tpublic static readonly debugDisconnect = new Codicon('debug-disconnect', { fontCharacter: '\\\\ead0' });\n\tpublic static readonly debugPause = new Codicon('debug-pause', { fontCharacter: '\\\\ead1' });\n\tpublic static readonly debugRestart = new Codicon('debug-restart', { fontCharacter: '\\\\ead2' });\n\tpublic static readonly debugStart = new Codicon('debug-start', { fontCharacter: '\\\\ead3' });\n\tpublic static readonly debugStepInto = new Codicon('debug-step-into', { fontCharacter: '\\\\ead4' });\n\tpublic static readonly debugStepOut = new Codicon('debug-step-out', { fontCharacter: '\\\\ead5' });\n\tpublic static readonly debugStepOver = new Codicon('debug-step-over', { fontCharacter: '\\\\ead6' });\n\tpublic static readonly debugStop = new Codicon('debug-stop', { fontCharacter: '\\\\ead7' });\n\tpublic static readonly debug = new Codicon('debug', { fontCharacter: '\\\\ead8' });\n\tpublic static readonly deviceCameraVideo = new Codicon('device-camera-video', { fontCharacter: '\\\\ead9' });\n\tpublic static readonly deviceCamera = new Codicon('device-camera', { fontCharacter: '\\\\eada' });\n\tpublic static readonly deviceMobile = new Codicon('device-mobile', { fontCharacter: '\\\\eadb' });\n\tpublic static readonly diffAdded = new Codicon('diff-added', { fontCharacter: '\\\\eadc' });\n\tpublic static readonly diffIgnored = new Codicon('diff-ignored', { fontCharacter: '\\\\eadd' });\n\tpublic static readonly diffModified = new Codicon('diff-modified', { fontCharacter: '\\\\eade' });\n\tpublic static readonly diffRemoved = new Codicon('diff-removed', { fontCharacter: '\\\\eadf' });\n\tpublic static readonly diffRenamed = new Codicon('diff-renamed', { fontCharacter: '\\\\eae0' });\n\tpublic static readonly diff = new Codicon('diff', { fontCharacter: '\\\\eae1' });\n\tpublic static readonly discard = new Codicon('discard', { fontCharacter: '\\\\eae2' });\n\tpublic static readonly editorLayout = new Codicon('editor-layout', { fontCharacter: '\\\\eae3' });\n\tpublic static readonly emptyWindow = new Codicon('empty-window', { fontCharacter: '\\\\eae4' });\n\tpublic static readonly exclude = new Codicon('exclude', { fontCharacter: '\\\\eae5' });\n\tpublic static readonly extensions = new Codicon('extensions', { fontCharacter: '\\\\eae6' });\n\tpublic static readonly eyeClosed = new Codicon('eye-closed', { fontCharacter: '\\\\eae7' });\n\tpublic static readonly fileBinary = new Codicon('file-binary', { fontCharacter: '\\\\eae8' });\n\tpublic static readonly fileCode = new Codicon('file-code', { fontCharacter: '\\\\eae9' });\n\tpublic static readonly fileMedia = new Codicon('file-media', { fontCharacter: '\\\\eaea' });\n\tpublic static readonly filePdf = new Codicon('file-pdf', { fontCharacter: '\\\\eaeb' });\n\tpublic static readonly fileSubmodule = new Codicon('file-submodule', { fontCharacter: '\\\\eaec' });\n\tpublic static readonly fileSymlinkDirectory = new Codicon('file-symlink-directory', { fontCharacter: '\\\\eaed' });\n\tpublic static readonly fileSymlinkFile = new Codicon('file-symlink-file', { fontCharacter: '\\\\eaee' });\n\tpublic static readonly fileZip = new Codicon('file-zip', { fontCharacter: '\\\\eaef' });\n\tpublic static readonly files = new Codicon('files', { fontCharacter: '\\\\eaf0' });\n\tpublic static readonly filter = new Codicon('filter', { fontCharacter: '\\\\eaf1' });\n\tpublic static readonly flame = new Codicon('flame', { fontCharacter: '\\\\eaf2' });\n\tpublic static readonly foldDown = new Codicon('fold-down', { fontCharacter: '\\\\eaf3' });\n\tpublic static readonly foldUp = new Codicon('fold-up', { fontCharacter: '\\\\eaf4' });\n\tpublic static readonly fold = new Codicon('fold', { fontCharacter: '\\\\eaf5' });\n\tpublic static readonly folderActive = new Codicon('folder-active', { fontCharacter: '\\\\eaf6' });\n\tpublic static readonly folderOpened = new Codicon('folder-opened', { fontCharacter: '\\\\eaf7' });\n\tpublic static readonly gear = new Codicon('gear', { fontCharacter: '\\\\eaf8' });\n\tpublic static readonly gift = new Codicon('gift', { fontCharacter: '\\\\eaf9' });\n\tpublic static readonly gistSecret = new Codicon('gist-secret', { fontCharacter: '\\\\eafa' });\n\tpublic static readonly gist = new Codicon('gist', { fontCharacter: '\\\\eafb' });\n\tpublic static readonly gitCommit = new Codicon('git-commit', { fontCharacter: '\\\\eafc' });\n\tpublic static readonly gitCompare = new Codicon('git-compare', { fontCharacter: '\\\\eafd' });\n\tpublic static readonly gitMerge = new Codicon('git-merge', { fontCharacter: '\\\\eafe' });\n\tpublic static readonly githubAction = new Codicon('github-action', { fontCharacter: '\\\\eaff' });\n\tpublic static readonly githubAlt = new Codicon('github-alt', { fontCharacter: '\\\\eb00' });\n\tpublic static readonly globe = new Codicon('globe', { fontCharacter: '\\\\eb01' });\n\tpublic static readonly grabber = new Codicon('grabber', { fontCharacter: '\\\\eb02' });\n\tpublic static readonly graph = new Codicon('graph', { fontCharacter: '\\\\eb03' });\n\tpublic static readonly gripper = new Codicon('gripper', { fontCharacter: '\\\\eb04' });\n\tpublic static readonly heart = new Codicon('heart', { fontCharacter: '\\\\eb05' });\n\tpublic static readonly home = new Codicon('home', { fontCharacter: '\\\\eb06' });\n\tpublic static readonly horizontalRule = new Codicon('horizontal-rule', { fontCharacter: '\\\\eb07' });\n\tpublic static readonly hubot = new Codicon('hubot', { fontCharacter: '\\\\eb08' });\n\tpublic static readonly inbox = new Codicon('inbox', { fontCharacter: '\\\\eb09' });\n\tpublic static readonly issueClosed = new Codicon('issue-closed', { fontCharacter: '\\\\eba4' });\n\tpublic static readonly issueReopened = new Codicon('issue-reopened', { fontCharacter: '\\\\eb0b' });\n\tpublic static readonly issues = new Codicon('issues', { fontCharacter: '\\\\eb0c' });\n\tpublic static readonly italic = new Codicon('italic', { fontCharacter: '\\\\eb0d' });\n\tpublic static readonly jersey = new Codicon('jersey', { fontCharacter: '\\\\eb0e' });\n\tpublic static readonly json = new Codicon('json', { fontCharacter: '\\\\eb0f' });\n\tpublic static readonly kebabVertical = new Codicon('kebab-vertical', { fontCharacter: '\\\\eb10' });\n\tpublic static readonly key = new Codicon('key', { fontCharacter: '\\\\eb11' });\n\tpublic static readonly law = new Codicon('law', { fontCharacter: '\\\\eb12' });\n\tpublic static readonly lightbulbAutofix = new Codicon('lightbulb-autofix', { fontCharacter: '\\\\eb13' });\n\tpublic static readonly linkExternal = new Codicon('link-external', { fontCharacter: '\\\\eb14' });\n\tpublic static readonly link = new Codicon('link', { fontCharacter: '\\\\eb15' });\n\tpublic static readonly listOrdered = new Codicon('list-ordered', { fontCharacter: '\\\\eb16' });\n\tpublic static readonly listUnordered = new Codicon('list-unordered', { fontCharacter: '\\\\eb17' });\n\tpublic static readonly liveShare = new Codicon('live-share', { fontCharacter: '\\\\eb18' });\n\tpublic static readonly loading = new Codicon('loading', { fontCharacter: '\\\\eb19' });\n\tpublic static readonly location = new Codicon('location', { fontCharacter: '\\\\eb1a' });\n\tpublic static readonly mailRead = new Codicon('mail-read', { fontCharacter: '\\\\eb1b' });\n\tpublic static readonly mail = new Codicon('mail', { fontCharacter: '\\\\eb1c' });\n\tpublic static readonly markdown = new Codicon('markdown', { fontCharacter: '\\\\eb1d' });\n\tpublic static readonly megaphone = new Codicon('megaphone', { fontCharacter: '\\\\eb1e' });\n\tpublic static readonly mention = new Codicon('mention', { fontCharacter: '\\\\eb1f' });\n\tpublic static readonly milestone = new Codicon('milestone', { fontCharacter: '\\\\eb20' });\n\tpublic static readonly mortarBoard = new Codicon('mortar-board', { fontCharacter: '\\\\eb21' });\n\tpublic static readonly move = new Codicon('move', { fontCharacter: '\\\\eb22' });\n\tpublic static readonly multipleWindows = new Codicon('multiple-windows', { fontCharacter: '\\\\eb23' });\n\tpublic static readonly mute = new Codicon('mute', { fontCharacter: '\\\\eb24' });\n\tpublic static readonly noNewline = new Codicon('no-newline', { fontCharacter: '\\\\eb25' });\n\tpublic static readonly note = new Codicon('note', { fontCharacter: '\\\\eb26' });\n\tpublic static readonly octoface = new Codicon('octoface', { fontCharacter: '\\\\eb27' });\n\tpublic static readonly openPreview = new Codicon('open-preview', { fontCharacter: '\\\\eb28' });\n\tpublic static readonly package_ = new Codicon('package', { fontCharacter: '\\\\eb29' });\n\tpublic static readonly paintcan = new Codicon('paintcan', { fontCharacter: '\\\\eb2a' });\n\tpublic static readonly pin = new Codicon('pin', { fontCharacter: '\\\\eb2b' });\n\tpublic static readonly play = new Codicon('play', { fontCharacter: '\\\\eb2c' });\n\tpublic static readonly run = new Codicon('run', { fontCharacter: '\\\\eb2c' });\n\tpublic static readonly plug = new Codicon('plug', { fontCharacter: '\\\\eb2d' });\n\tpublic static readonly preserveCase = new Codicon('preserve-case', { fontCharacter: '\\\\eb2e' });\n\tpublic static readonly preview = new Codicon('preview', { fontCharacter: '\\\\eb2f' });\n\tpublic static readonly project = new Codicon('project', { fontCharacter: '\\\\eb30' });\n\tpublic static readonly pulse = new Codicon('pulse', { fontCharacter: '\\\\eb31' });\n\tpublic static readonly question = new Codicon('question', { fontCharacter: '\\\\eb32' });\n\tpublic static readonly quote = new Codicon('quote', { fontCharacter: '\\\\eb33' });\n\tpublic static readonly radioTower = new Codicon('radio-tower', { fontCharacter: '\\\\eb34' });\n\tpublic static readonly reactions = new Codicon('reactions', { fontCharacter: '\\\\eb35' });\n\tpublic static readonly references = new Codicon('references', { fontCharacter: '\\\\eb36' });\n\tpublic static readonly refresh = new Codicon('refresh', { fontCharacter: '\\\\eb37' });\n\tpublic static readonly regex = new Codicon('regex', { fontCharacter: '\\\\eb38' });\n\tpublic static readonly remoteExplorer = new Codicon('remote-explorer', { fontCharacter: '\\\\eb39' });\n\tpublic static readonly remote = new Codicon('remote', { fontCharacter: '\\\\eb3a' });\n\tpublic static readonly remove = new Codicon('remove', { fontCharacter: '\\\\eb3b' });\n\tpublic static readonly replaceAll = new Codicon('replace-all', { fontCharacter: '\\\\eb3c' });\n\tpublic static readonly replace = new Codicon('replace', { fontCharacter: '\\\\eb3d' });\n\tpublic static readonly repoClone = new Codicon('repo-clone', { fontCharacter: '\\\\eb3e' });\n\tpublic static readonly repoForcePush = new Codicon('repo-force-push', { fontCharacter: '\\\\eb3f' });\n\tpublic static readonly repoPull = new Codicon('repo-pull', { fontCharacter: '\\\\eb40' });\n\tpublic static readonly repoPush = new Codicon('repo-push', { fontCharacter: '\\\\eb41' });\n\tpublic static readonly report = new Codicon('report', { fontCharacter: '\\\\eb42' });\n\tpublic static readonly requestChanges = new Codicon('request-changes', { fontCharacter: '\\\\eb43' });\n\tpublic static readonly rocket = new Codicon('rocket', { fontCharacter: '\\\\eb44' });\n\tpublic static readonly rootFolderOpened = new Codicon('root-folder-opened', { fontCharacter: '\\\\eb45' });\n\tpublic static readonly rootFolder = new Codicon('root-folder', { fontCharacter: '\\\\eb46' });\n\tpublic static readonly rss = new Codicon('rss', { fontCharacter: '\\\\eb47' });\n\tpublic static readonly ruby = new Codicon('ruby', { fontCharacter: '\\\\eb48' });\n\tpublic static readonly saveAll = new Codicon('save-all', { fontCharacter: '\\\\eb49' });\n\tpublic static readonly saveAs = new Codicon('save-as', { fontCharacter: '\\\\eb4a' });\n\tpublic static readonly save = new Codicon('save', { fontCharacter: '\\\\eb4b' });\n\tpublic static readonly screenFull = new Codicon('screen-full', { fontCharacter: '\\\\eb4c' });\n\tpublic static readonly screenNormal = new Codicon('screen-normal', { fontCharacter: '\\\\eb4d' });\n\tpublic static readonly searchStop = new Codicon('search-stop', { fontCharacter: '\\\\eb4e' });\n\tpublic static readonly server = new Codicon('server', { fontCharacter: '\\\\eb50' });\n\tpublic static readonly settingsGear = new Codicon('settings-gear', { fontCharacter: '\\\\eb51' });\n\tpublic static readonly settings = new Codicon('settings', { fontCharacter: '\\\\eb52' });\n\tpublic static readonly shield = new Codicon('shield', { fontCharacter: '\\\\eb53' });\n\tpublic static readonly smiley = new Codicon('smiley', { fontCharacter: '\\\\eb54' });\n\tpublic static readonly sortPrecedence = new Codicon('sort-precedence', { fontCharacter: '\\\\eb55' });\n\tpublic static readonly splitHorizontal = new Codicon('split-horizontal', { fontCharacter: '\\\\eb56' });\n\tpublic static readonly splitVertical = new Codicon('split-vertical', { fontCharacter: '\\\\eb57' });\n\tpublic static readonly squirrel = new Codicon('squirrel', { fontCharacter: '\\\\eb58' });\n\tpublic static readonly starFull = new Codicon('star-full', { fontCharacter: '\\\\eb59' });\n\tpublic static readonly starHalf = new Codicon('star-half', { fontCharacter: '\\\\eb5a' });\n\tpublic static readonly symbolClass = new Codicon('symbol-class', { fontCharacter: '\\\\eb5b' });\n\tpublic static readonly symbolColor = new Codicon('symbol-color', { fontCharacter: '\\\\eb5c' });\n\tpublic static readonly symbolCustomColor = new Codicon('symbol-customcolor', { fontCharacter: '\\\\eb5c' });\n\tpublic static readonly symbolConstant = new Codicon('symbol-constant', { fontCharacter: '\\\\eb5d' });\n\tpublic static readonly symbolEnumMember = new Codicon('symbol-enum-member', { fontCharacter: '\\\\eb5e' });\n\tpublic static readonly symbolField = new Codicon('symbol-field', { fontCharacter: '\\\\eb5f' });\n\tpublic static readonly symbolFile = new Codicon('symbol-file', { fontCharacter: '\\\\eb60' });\n\tpublic static readonly symbolInterface = new Codicon('symbol-interface', { fontCharacter: '\\\\eb61' });\n\tpublic static readonly symbolKeyword = new Codicon('symbol-keyword', { fontCharacter: '\\\\eb62' });\n\tpublic static readonly symbolMisc = new Codicon('symbol-misc', { fontCharacter: '\\\\eb63' });\n\tpublic static readonly symbolOperator = new Codicon('symbol-operator', { fontCharacter: '\\\\eb64' });\n\tpublic static readonly symbolProperty = new Codicon('symbol-property', { fontCharacter: '\\\\eb65' });\n\tpublic static readonly wrench = new Codicon('wrench', { fontCharacter: '\\\\eb65' });\n\tpublic static readonly wrenchSubaction = new Codicon('wrench-subaction', { fontCharacter: '\\\\eb65' });\n\tpublic static readonly symbolSnippet = new Codicon('symbol-snippet', { fontCharacter: '\\\\eb66' });\n\tpublic static readonly tasklist = new Codicon('tasklist', { fontCharacter: '\\\\eb67' });\n\tpublic static readonly telescope = new Codicon('telescope', { fontCharacter: '\\\\eb68' });\n\tpublic static readonly textSize = new Codicon('text-size', { fontCharacter: '\\\\eb69' });\n\tpublic static readonly threeBars = new Codicon('three-bars', { fontCharacter: '\\\\eb6a' });\n\tpublic static readonly thumbsdown = new Codicon('thumbsdown', { fontCharacter: '\\\\eb6b' });\n\tpublic static readonly thumbsup = new Codicon('thumbsup', { fontCharacter: '\\\\eb6c' });\n\tpublic static readonly tools = new Codicon('tools', { fontCharacter: '\\\\eb6d' });\n\tpublic static readonly triangleDown = new Codicon('triangle-down', { fontCharacter: '\\\\eb6e' });\n\tpublic static readonly triangleLeft = new Codicon('triangle-left', { fontCharacter: '\\\\eb6f' });\n\tpublic static readonly triangleRight = new Codicon('triangle-right', { fontCharacter: '\\\\eb70' });\n\tpublic static readonly triangleUp = new Codicon('triangle-up', { fontCharacter: '\\\\eb71' });\n\tpublic static readonly twitter = new Codicon('twitter', { fontCharacter: '\\\\eb72' });\n\tpublic static readonly unfold = new Codicon('unfold', { fontCharacter: '\\\\eb73' });\n\tpublic static readonly unlock = new Codicon('unlock', { fontCharacter: '\\\\eb74' });\n\tpublic static readonly unmute = new Codicon('unmute', { fontCharacter: '\\\\eb75' });\n\tpublic static readonly unverified = new Codicon('unverified', { fontCharacter: '\\\\eb76' });\n\tpublic static readonly verified = new Codicon('verified', { fontCharacter: '\\\\eb77' });\n\tpublic static readonly versions = new Codicon('versions', { fontCharacter: '\\\\eb78' });\n\tpublic static readonly vmActive = new Codicon('vm-active', { fontCharacter: '\\\\eb79' });\n\tpublic static readonly vmOutline = new Codicon('vm-outline', { fontCharacter: '\\\\eb7a' });\n\tpublic static readonly vmRunning = new Codicon('vm-running', { fontCharacter: '\\\\eb7b' });\n\tpublic static readonly watch = new Codicon('watch', { fontCharacter: '\\\\eb7c' });\n\tpublic static readonly whitespace = new Codicon('whitespace', { fontCharacter: '\\\\eb7d' });\n\tpublic static readonly wholeWord = new Codicon('whole-word', { fontCharacter: '\\\\eb7e' });\n\tpublic static readonly window = new Codicon('window', { fontCharacter: '\\\\eb7f' });\n\tpublic static readonly wordWrap = new Codicon('word-wrap', { fontCharacter: '\\\\eb80' });\n\tpublic static readonly zoomIn = new Codicon('zoom-in', { fontCharacter: '\\\\eb81' });\n\tpublic static readonly zoomOut = new Codicon('zoom-out', { fontCharacter: '\\\\eb82' });\n\tpublic static readonly listFilter = new Codicon('list-filter', { fontCharacter: '\\\\eb83' });\n\tpublic static readonly listFlat = new Codicon('list-flat', { fontCharacter: '\\\\eb84' });\n\tpublic static readonly listSelection = new Codicon('list-selection', { fontCharacter: '\\\\eb85' });\n\tpublic static readonly selection = new Codicon('selection', { fontCharacter: '\\\\eb85' });\n\tpublic static readonly listTree = new Codicon('list-tree', { fontCharacter: '\\\\eb86' });\n\tpublic static readonly debugBreakpointFunctionUnverified = new Codicon('debug-breakpoint-function-unverified', { fontCharacter: '\\\\eb87' });\n\tpublic static readonly debugBreakpointFunction = new Codicon('debug-breakpoint-function', { fontCharacter: '\\\\eb88' });\n\tpublic static readonly debugBreakpointFunctionDisabled = new Codicon('debug-breakpoint-function-disabled', { fontCharacter: '\\\\eb88' });\n\tpublic static readonly debugStackframeActive = new Codicon('debug-stackframe-active', { fontCharacter: '\\\\eb89' });\n\tpublic static readonly circleSmallFilled = new Codicon('circle-small-filled', { fontCharacter: '\\\\eb8a' });\n\tpublic static readonly debugStackframeDot = new Codicon('debug-stackframe-dot', Codicon.circleSmallFilled.definition);\n\tpublic static readonly debugStackframe = new Codicon('debug-stackframe', { fontCharacter: '\\\\eb8b' });\n\tpublic static readonly debugStackframeFocused = new Codicon('debug-stackframe-focused', { fontCharacter: '\\\\eb8b' });\n\tpublic static readonly debugBreakpointUnsupported = new Codicon('debug-breakpoint-unsupported', { fontCharacter: '\\\\eb8c' });\n\tpublic static readonly symbolString = new Codicon('symbol-string', { fontCharacter: '\\\\eb8d' });\n\tpublic static readonly debugReverseContinue = new Codicon('debug-reverse-continue', { fontCharacter: '\\\\eb8e' });\n\tpublic static readonly debugStepBack = new Codicon('debug-step-back', { fontCharacter: '\\\\eb8f' });\n\tpublic static readonly debugRestartFrame = new Codicon('debug-restart-frame', { fontCharacter: '\\\\eb90' });\n\tpublic static readonly callIncoming = new Codicon('call-incoming', { fontCharacter: '\\\\eb92' });\n\tpublic static readonly callOutgoing = new Codicon('call-outgoing', { fontCharacter: '\\\\eb93' });\n\tpublic static readonly menu = new Codicon('menu', { fontCharacter: '\\\\eb94' });\n\tpublic static readonly expandAll = new Codicon('expand-all', { fontCharacter: '\\\\eb95' });\n\tpublic static readonly feedback = new Codicon('feedback', { fontCharacter: '\\\\eb96' });\n\tpublic static readonly groupByRefType = new Codicon('group-by-ref-type', { fontCharacter: '\\\\eb97' });\n\tpublic static readonly ungroupByRefType = new Codicon('ungroup-by-ref-type', { fontCharacter: '\\\\eb98' });\n\tpublic static readonly account = new Codicon('account', { fontCharacter: '\\\\eb99' });\n\tpublic static readonly bellDot = new Codicon('bell-dot', { fontCharacter: '\\\\eb9a' });\n\tpublic static readonly debugConsole = new Codicon('debug-console', { fontCharacter: '\\\\eb9b' });\n\tpublic static readonly library = new Codicon('library', { fontCharacter: '\\\\eb9c' });\n\tpublic static readonly output = new Codicon('output', { fontCharacter: '\\\\eb9d' });\n\tpublic static readonly runAll = new Codicon('run-all', { fontCharacter: '\\\\eb9e' });\n\tpublic static readonly syncIgnored = new Codicon('sync-ignored', { fontCharacter: '\\\\eb9f' });\n\tpublic static readonly pinned = new Codicon('pinned', { fontCharacter: '\\\\eba0' });\n\tpublic static readonly githubInverted = new Codicon('github-inverted', { fontCharacter: '\\\\eba1' });\n\tpublic static readonly debugAlt = new Codicon('debug-alt', { fontCharacter: '\\\\eb91' });\n\tpublic static readonly serverProcess = new Codicon('server-process', { fontCharacter: '\\\\eba2' });\n\tpublic static readonly serverEnvironment = new Codicon('server-environment', { fontCharacter: '\\\\eba3' });\n\tpublic static readonly pass = new Codicon('pass', { fontCharacter: '\\\\eba4' });\n\tpublic static readonly stopCircle = new Codicon('stop-circle', { fontCharacter: '\\\\eba5' });\n\tpublic static readonly playCircle = new Codicon('play-circle', { fontCharacter: '\\\\eba6' });\n\tpublic static readonly record = new Codicon('record', { fontCharacter: '\\\\eba7' });\n\tpublic static readonly debugAltSmall = new Codicon('debug-alt-small', { fontCharacter: '\\\\eba8' });\n\tpublic static readonly vmConnect = new Codicon('vm-connect', { fontCharacter: '\\\\eba9' });\n\tpublic static readonly cloud = new Codicon('cloud', { fontCharacter: '\\\\ebaa' });\n\tpublic static readonly merge = new Codicon('merge', { fontCharacter: '\\\\ebab' });\n\tpublic static readonly exportIcon = new Codicon('export', { fontCharacter: '\\\\ebac' });\n\tpublic static readonly graphLeft = new Codicon('graph-left', { fontCharacter: '\\\\ebad' });\n\tpublic static readonly magnet = new Codicon('magnet', { fontCharacter: '\\\\ebae' });\n\tpublic static readonly notebook = new Codicon('notebook', { fontCharacter: '\\\\ebaf' });\n\tpublic static readonly redo = new Codicon('redo', { fontCharacter: '\\\\ebb0' });\n\tpublic static readonly checkAll = new Codicon('check-all', { fontCharacter: '\\\\ebb1' });\n\tpublic static readonly pinnedDirty = new Codicon('pinned-dirty', { fontCharacter: '\\\\ebb2' });\n\tpublic static readonly passFilled = new Codicon('pass-filled', { fontCharacter: '\\\\ebb3' });\n\tpublic static readonly circleLargeFilled = new Codicon('circle-large-filled', { fontCharacter: '\\\\ebb4' });\n\tpublic static readonly circleLargeOutline = new Codicon('circle-large-outline', { fontCharacter: '\\\\ebb5' });\n\tpublic static readonly combine = new Codicon('combine', { fontCharacter: '\\\\ebb6' });\n\tpublic static readonly gather = new Codicon('gather', { fontCharacter: '\\\\ebb6' });\n\tpublic static readonly table = new Codicon('table', { fontCharacter: '\\\\ebb7' });\n\tpublic static readonly variableGroup = new Codicon('variable-group', { fontCharacter: '\\\\ebb8' });\n\tpublic static readonly typeHierarchy = new Codicon('type-hierarchy', { fontCharacter: '\\\\ebb9' });\n\tpublic static readonly typeHierarchySub = new Codicon('type-hierarchy-sub', { fontCharacter: '\\\\ebba' });\n\tpublic static readonly typeHierarchySuper = new Codicon('type-hierarchy-super', { fontCharacter: '\\\\ebbb' });\n\tpublic static readonly gitPullRequestCreate = new Codicon('git-pull-request-create', { fontCharacter: '\\\\ebbc' });\n\tpublic static readonly runAbove = new Codicon('run-above', { fontCharacter: '\\\\ebbd' });\n\tpublic static readonly runBelow = new Codicon('run-below', { fontCharacter: '\\\\ebbe' });\n\tpublic static readonly notebookTemplate = new Codicon('notebook-template', { fontCharacter: '\\\\ebbf' });\n\tpublic static readonly debugRerun = new Codicon('debug-rerun', { fontCharacter: '\\\\ebc0' });\n\tpublic static readonly workspaceTrusted = new Codicon('workspace-trusted', { fontCharacter: '\\\\ebc1' });\n\tpublic static readonly workspaceUntrusted = new Codicon('workspace-untrusted', { fontCharacter: '\\\\ebc2' });\n\tpublic static readonly workspaceUnspecified = new Codicon('workspace-unspecified', { fontCharacter: '\\\\ebc3' });\n\tpublic static readonly terminalCmd = new Codicon('terminal-cmd', { fontCharacter: '\\\\ebc4' });\n\tpublic static readonly terminalDebian = new Codicon('terminal-debian', { fontCharacter: '\\\\ebc5' });\n\tpublic static readonly terminalLinux = new Codicon('terminal-linux', { fontCharacter: '\\\\ebc6' });\n\tpublic static readonly terminalPowershell = new Codicon('terminal-powershell', { fontCharacter: '\\\\ebc7' });\n\tpublic static readonly terminalTmux = new Codicon('terminal-tmux', { fontCharacter: '\\\\ebc8' });\n\tpublic static readonly terminalUbuntu = new Codicon('terminal-ubuntu', { fontCharacter: '\\\\ebc9' });\n\tpublic static readonly terminalBash = new Codicon('terminal-bash', { fontCharacter: '\\\\ebca' });\n\tpublic static readonly arrowSwap = new Codicon('arrow-swap', { fontCharacter: '\\\\ebcb' });\n\tpublic static readonly copy = new Codicon('copy', { fontCharacter: '\\\\ebcc' });\n\tpublic static readonly personAdd = new Codicon('person-add', { fontCharacter: '\\\\ebcd' });\n\tpublic static readonly filterFilled = new Codicon('filter-filled', { fontCharacter: '\\\\ebce' });\n\tpublic static readonly wand = new Codicon('wand', { fontCharacter: '\\\\ebcf' });\n\tpublic static readonly debugLineByLine = new Codicon('debug-line-by-line', { fontCharacter: '\\\\ebd0' });\n\tpublic static readonly inspect = new Codicon('inspect', { fontCharacter: '\\\\ebd1' });\n\tpublic static readonly layers = new Codicon('layers', { fontCharacter: '\\\\ebd2' });\n\tpublic static readonly layersDot = new Codicon('layers-dot', { fontCharacter: '\\\\ebd3' });\n\tpublic static readonly layersActive = new Codicon('layers-active', { fontCharacter: '\\\\ebd4' });\n\tpublic static readonly compass = new Codicon('compass', { fontCharacter: '\\\\ebd5' });\n\tpublic static readonly compassDot = new Codicon('compass-dot', { fontCharacter: '\\\\ebd6' });\n\tpublic static readonly compassActive = new Codicon('compass-active', { fontCharacter: '\\\\ebd7' });\n\tpublic static readonly azure = new Codicon('azure', { fontCharacter: '\\\\ebd8' });\n\tpublic static readonly issueDraft = new Codicon('issue-draft', { fontCharacter: '\\\\ebd9' });\n\tpublic static readonly gitPullRequestClosed = new Codicon('git-pull-request-closed', { fontCharacter: '\\\\ebda' });\n\tpublic static readonly gitPullRequestDraft = new Codicon('git-pull-request-draft', { fontCharacter: '\\\\ebdb' });\n\tpublic static readonly debugAll = new Codicon('debug-all', { fontCharacter: '\\\\ebdc' });\n\tpublic static readonly debugCoverage = new Codicon('debug-coverage', { fontCharacter: '\\\\ebdd' });\n\tpublic static readonly runErrors = new Codicon('run-errors', { fontCharacter: '\\\\ebde' });\n\tpublic static readonly folderLibrary = new Codicon('folder-library', { fontCharacter: '\\\\ebdf' });\n\tpublic static readonly debugContinueSmall = new Codicon('debug-continue-small', { fontCharacter: '\\\\ebe0' });\n\tpublic static readonly beakerStop = new Codicon('beaker-stop', { fontCharacter: '\\\\ebe1' });\n\tpublic static readonly graphLine = new Codicon('graph-line', { fontCharacter: '\\\\ebe2' });\n\tpublic static readonly graphScatter = new Codicon('graph-scatter', { fontCharacter: '\\\\ebe3' });\n\tpublic static readonly pieChart = new Codicon('pie-chart', { fontCharacter: '\\\\ebe4' });\n\tpublic static readonly bracket = new Codicon('bracket', Codicon.json.definition);\n\tpublic static readonly bracketDot = new Codicon('bracket-dot', { fontCharacter: '\\\\ebe5' });\n\tpublic static readonly bracketError = new Codicon('bracket-error', { fontCharacter: '\\\\ebe6' });\n\tpublic static readonly lockSmall = new Codicon('lock-small', { fontCharacter: '\\\\ebe7' });\n\tpublic static readonly azureDevops = new Codicon('azure-devops', { fontCharacter: '\\\\ebe8' });\n\tpublic static readonly verifiedFilled = new Codicon('verified-filled', { fontCharacter: '\\\\ebe9' });\n\tpublic static readonly newLine = new Codicon('newline', { fontCharacter: '\\\\ebea' });\n\tpublic static readonly layout = new Codicon('layout', { fontCharacter: '\\\\ebeb' });\n\tpublic static readonly layoutActivitybarLeft = new Codicon('layout-activitybar-left', { fontCharacter: '\\\\ebec' });\n\tpublic static readonly layoutActivitybarRight = new Codicon('layout-activitybar-right', { fontCharacter: '\\\\ebed' });\n\tpublic static readonly layoutPanelLeft = new Codicon('layout-panel-left', { fontCharacter: '\\\\ebee' });\n\tpublic static readonly layoutPanelCenter = new Codicon('layout-panel-center', { fontCharacter: '\\\\ebef' });\n\tpublic static readonly layoutPanelJustify = new Codicon('layout-panel-justify', { fontCharacter: '\\\\ebf0' });\n\tpublic static readonly layoutPanelRight = new Codicon('layout-panel-right', { fontCharacter: '\\\\ebf1' });\n\tpublic static readonly layoutPanel = new Codicon('layout-panel', { fontCharacter: '\\\\ebf2' });\n\tpublic static readonly layoutSidebarLeft = new Codicon('layout-sidebar-left', { fontCharacter: '\\\\ebf3' });\n\tpublic static readonly layoutSidebarRight = new Codicon('layout-sidebar-right', { fontCharacter: '\\\\ebf4' });\n\tpublic static readonly layoutStatusbar = new Codicon('layout-statusbar', { fontCharacter: '\\\\ebf5' });\n\tpublic static readonly layoutMenubar = new Codicon('layout-menubar', { fontCharacter: '\\\\ebf6' });\n\tpublic static readonly layoutCentered = new Codicon('layout-centered', { fontCharacter: '\\\\ebf7' });\n\tpublic static readonly layoutSidebarRightOff = new Codicon('layout-sidebar-right-off', { fontCharacter: '\\\\ec00' });\n\tpublic static readonly layoutPanelOff = new Codicon('layout-panel-off', { fontCharacter: '\\\\ec01' });\n\tpublic static readonly layoutSidebarLeftOff = new Codicon('layout-sidebar-left-off', { fontCharacter: '\\\\ec02' });\n\tpublic static readonly target = new Codicon('target', { fontCharacter: '\\\\ebf8' });\n\tpublic static readonly indent = new Codicon('indent', { fontCharacter: '\\\\ebf9' });\n\tpublic static readonly recordSmall = new Codicon('record-small', { fontCharacter: '\\\\ebfa' });\n\tpublic static readonly errorSmall = new Codicon('error-small', { fontCharacter: '\\\\ebfb' });\n\tpublic static readonly arrowCircleDown = new Codicon('arrow-circle-down', { fontCharacter: '\\\\ebfc' });\n\tpublic static readonly arrowCircleLeft = new Codicon('arrow-circle-left', { fontCharacter: '\\\\ebfd' });\n\tpublic static readonly arrowCircleRight = new Codicon('arrow-circle-right', { fontCharacter: '\\\\ebfe' });\n\tpublic static readonly arrowCircleUp = new Codicon('arrow-circle-up', { fontCharacter: '\\\\ebff' });\n\tpublic static readonly heartFilled = new Codicon('heart-filled', { fontCharacter: '\\\\ec04' });\n\tpublic static readonly map = new Codicon('map', { fontCharacter: '\\\\ec05' });\n\tpublic static readonly mapFilled = new Codicon('map-filled', { fontCharacter: '\\\\ec06' });\n\tpublic static readonly circleSmall = new Codicon('circle-small', { fontCharacter: '\\\\ec07' });\n\tpublic static readonly bellSlash = new Codicon('bell-slash', { fontCharacter: '\\\\ec08' });\n\tpublic static readonly bellSlashDot = new Codicon('bell-slash-dot', { fontCharacter: '\\\\ec09' });\n\tpublic static readonly commentUnresolved = new Codicon('comment-unresolved', { fontCharacter: '\\\\ec0a' });\n\tpublic static readonly gitPullRequestGoToChanges = new Codicon('git-pull-request-go-to-changes', { fontCharacter: '\\\\ec0b' });\n\tpublic static readonly gitPullRequestNewChanges = new Codicon('git-pull-request-new-changes', { fontCharacter: '\\\\ec0c' });\n\n\n\t// derived icons, that could become separate icons\n\n\tpublic static readonly dialogError = new Codicon('dialog-error', Codicon.error.definition);\n\tpublic static readonly dialogWarning = new Codicon('dialog-warning', Codicon.warning.definition);\n\tpublic static readonly dialogInfo = new Codicon('dialog-info', Codicon.info.definition);\n\tpublic static readonly dialogClose = new Codicon('dialog-close', Codicon.close.definition);\n\n\tpublic static readonly treeItemExpanded = new Codicon('tree-item-expanded', Codicon.chevronDown.definition); // collapsed is done with rotation\n\n\tpublic static readonly treeFilterOnTypeOn = new Codicon('tree-filter-on-type-on', Codicon.listFilter.definition);\n\tpublic static readonly treeFilterOnTypeOff = new Codicon('tree-filter-on-type-off', Codicon.listSelection.definition);\n\tpublic static readonly treeFilterClear = new Codicon('tree-filter-clear', Codicon.close.definition);\n\n\tpublic static readonly treeItemLoading = new Codicon('tree-item-loading', Codicon.loading.definition);\n\n\tpublic static readonly menuSelection = new Codicon('menu-selection', Codicon.check.definition);\n\tpublic static readonly menuSubmenu = new Codicon('menu-submenu', Codicon.chevronRight.definition);\n\n\tpublic static readonly menuBarMore = new Codicon('menubar-more', Codicon.more.definition);\n\n\tpublic static readonly scrollbarButtonLeft = new Codicon('scrollbar-button-left', Codicon.triangleLeft.definition);\n\tpublic static readonly scrollbarButtonRight = new Codicon('scrollbar-button-right', Codicon.triangleRight.definition);\n\n\tpublic static readonly scrollbarButtonUp = new Codicon('scrollbar-button-up', Codicon.triangleUp.definition);\n\tpublic static readonly scrollbarButtonDown = new Codicon('scrollbar-button-down', Codicon.triangleDown.definition);\n\n\tpublic static readonly toolBarMore = new Codicon('toolbar-more', Codicon.more.definition);\n\n\tpublic static readonly quickInputBack = new Codicon('quick-input-back', Codicon.arrowLeft.definition);\n}\n\nexport function getClassNamesArray(id: string, modifier?: string) {\n\tconst classNames = ['codicon', 'codicon-' + id];\n\tif (modifier) {\n\t\tclassNames.push('codicon-modifier-' + modifier);\n\t}\n\treturn classNames;\n}\n\nexport interface CSSIcon {\n\treadonly id: string;\n}\n\n\nexport namespace CSSIcon {\n\texport const iconNameSegment = '[A-Za-z0-9]+';\n\texport const iconNameExpression = '[A-Za-z0-9-]+';\n\texport const iconModifierExpression = '~[A-Za-z]+';\n\texport const iconNameCharacter = '[A-Za-z0-9~-]';\n\n\tconst cssIconIdRegex = new RegExp(`^(${iconNameExpression})(${iconModifierExpression})?$`);\n\n\texport function asClassNameArray(icon: CSSIcon): string[] {\n\t\tif (icon instanceof Codicon) {\n\t\t\treturn ['codicon', 'codicon-' + icon.id];\n\t\t}\n\t\tconst match = cssIconIdRegex.exec(icon.id);\n\t\tif (!match) {\n\t\t\treturn asClassNameArray(Codicon.error);\n\t\t}\n\t\tconst [, id, modifier] = match;\n\t\tconst classNames = ['codicon', 'codicon-' + id];\n\t\tif (modifier) {\n\t\t\tclassNames.push('codicon-modifier-' + modifier.substr(1));\n\t\t}\n\t\treturn classNames;\n\t}\n\n\texport function asClassName(icon: CSSIcon): string {\n\t\treturn asClassNameArray(icon).join(' ');\n\t}\n\n\texport function asCSSSelector(icon: CSSIcon): string {\n\t\treturn '.' + asClassNameArray(icon).join('.');\n\t}\n}\n\n\ninterface IconDefinition {\n\tfontCharacter: string;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function createDecorator(mapFn: (fn: Function, key: string) => Function): Function {\n\treturn (target: any, key: string, descriptor: any) => {\n\t\tlet fnKey: string | null = null;\n\t\tlet fn: Function | null = null;\n\n\t\tif (typeof descriptor.value === 'function') {\n\t\t\tfnKey = 'value';\n\t\t\tfn = descriptor.value;\n\t\t} else if (typeof descriptor.get === 'function') {\n\t\t\tfnKey = 'get';\n\t\t\tfn = descriptor.get;\n\t\t}\n\n\t\tif (!fn) {\n\t\t\tthrow new Error('not supported');\n\t\t}\n\n\t\tdescriptor[fnKey!] = mapFn(fn, key);\n\t};\n}\n\nexport function memoize(_target: any, key: string, descriptor: any) {\n\tlet fnKey: string | null = null;\n\tlet fn: Function | null = null;\n\n\tif (typeof descriptor.value === 'function') {\n\t\tfnKey = 'value';\n\t\tfn = descriptor.value;\n\n\t\tif (fn!.length !== 0) {\n\t\t\tconsole.warn('Memoize should only be used in functions with zero parameters');\n\t\t}\n\t} else if (typeof descriptor.get === 'function') {\n\t\tfnKey = 'get';\n\t\tfn = descriptor.get;\n\t}\n\n\tif (!fn) {\n\t\tthrow new Error('not supported');\n\t}\n\n\tconst memoizeKey = `$memoize$${key}`;\n\tdescriptor[fnKey!] = function (...args: any[]) {\n\t\tif (!this.hasOwnProperty(memoizeKey)) {\n\t\t\tObject.defineProperty(this, memoizeKey, {\n\t\t\t\tconfigurable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\twritable: false,\n\t\t\t\tvalue: fn!.apply(this, args)\n\t\t\t});\n\t\t}\n\n\t\treturn this[memoizeKey];\n\t};\n}\n\nexport interface IDebounceReducer<T> {\n\t(previousValue: T, ...args: any[]): T;\n}\n\nexport function debounce<T>(delay: number, reducer?: IDebounceReducer<T>, initialValueProvider?: () => T): Function {\n\treturn createDecorator((fn, key) => {\n\t\tconst timerKey = `$debounce$${key}`;\n\t\tconst resultKey = `$debounce$result$${key}`;\n\n\t\treturn function (this: any, ...args: any[]) {\n\t\t\tif (!this[resultKey]) {\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}\n\n\t\t\tclearTimeout(this[timerKey]);\n\n\t\t\tif (reducer) {\n\t\t\t\tthis[resultKey] = reducer(this[resultKey], ...args);\n\t\t\t\targs = [this[resultKey]];\n\t\t\t}\n\n\t\t\tthis[timerKey] = setTimeout(() => {\n\t\t\t\tfn.apply(this, args);\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}, delay);\n\t\t};\n\t});\n}\n\nexport function throttle<T>(delay: number, reducer?: IDebounceReducer<T>, initialValueProvider?: () => T): Function {\n\treturn createDecorator((fn, key) => {\n\t\tconst timerKey = `$throttle$timer$${key}`;\n\t\tconst resultKey = `$throttle$result$${key}`;\n\t\tconst lastRunKey = `$throttle$lastRun$${key}`;\n\t\tconst pendingKey = `$throttle$pending$${key}`;\n\n\t\treturn function (this: any, ...args: any[]) {\n\t\t\tif (!this[resultKey]) {\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}\n\t\t\tif (this[lastRunKey] === null || this[lastRunKey] === undefined) {\n\t\t\t\tthis[lastRunKey] = -Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tif (reducer) {\n\t\t\t\tthis[resultKey] = reducer(this[resultKey], ...args);\n\t\t\t}\n\n\t\t\tif (this[pendingKey]) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst nextTime = this[lastRunKey] + delay;\n\t\t\tif (nextTime <= Date.now()) {\n\t\t\t\tthis[lastRunKey] = Date.now();\n\t\t\t\tfn.apply(this, [this[resultKey]]);\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t} else {\n\t\t\t\tthis[pendingKey] = true;\n\t\t\t\tthis[timerKey] = setTimeout(() => {\n\t\t\t\t\tthis[pendingKey] = false;\n\t\t\t\t\tthis[lastRunKey] = Date.now();\n\t\t\t\t\tfn.apply(this, [this[resultKey]]);\n\t\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t\t}, nextTime - Date.now());\n\t\t\t}\n\t\t};\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ErrorListenerCallback {\n\t(error: any): void;\n}\n\nexport interface ErrorListenerUnbind {\n\t(): void;\n}\n\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n\tprivate unexpectedErrorHandler: (e: any) => void;\n\tprivate listeners: ErrorListenerCallback[];\n\n\tconstructor() {\n\n\t\tthis.listeners = [];\n\n\t\tthis.unexpectedErrorHandler = function (e: any) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (e.stack) {\n\t\t\t\t\tif (ErrorNoTelemetry.isErrorNoTelemetry(e)) {\n\t\t\t\t\t\tthrow new ErrorNoTelemetry(e.message + '\\n\\n' + e.stack);\n\t\t\t\t\t}\n\n\t\t\t\t\tthrow new Error(e.message + '\\n\\n' + e.stack);\n\t\t\t\t}\n\n\t\t\t\tthrow e;\n\t\t\t}, 0);\n\t\t};\n\t}\n\n\taddListener(listener: ErrorListenerCallback): ErrorListenerUnbind {\n\t\tthis.listeners.push(listener);\n\n\t\treturn () => {\n\t\t\tthis._removeListener(listener);\n\t\t};\n\t}\n\n\tprivate emit(e: any): void {\n\t\tthis.listeners.forEach((listener) => {\n\t\t\tlistener(e);\n\t\t});\n\t}\n\n\tprivate _removeListener(listener: ErrorListenerCallback): void {\n\t\tthis.listeners.splice(this.listeners.indexOf(listener), 1);\n\t}\n\n\tsetUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\t\tthis.unexpectedErrorHandler = newUnexpectedErrorHandler;\n\t}\n\n\tgetUnexpectedErrorHandler(): (e: any) => void {\n\t\treturn this.unexpectedErrorHandler;\n\t}\n\n\tonUnexpectedError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t\tthis.emit(e);\n\t}\n\n\t// For external errors, we don't want the listeners to be called\n\tonUnexpectedExternalError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t}\n}\n\nexport const errorHandler = new ErrorHandler();\n\nexport function setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\terrorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\n\nexport function onUnexpectedError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isCancellationError(e)) {\n\t\terrorHandler.onUnexpectedError(e);\n\t}\n\treturn undefined;\n}\n\nexport function onUnexpectedExternalError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isCancellationError(e)) {\n\t\terrorHandler.onUnexpectedExternalError(e);\n\t}\n\treturn undefined;\n}\n\nexport interface SerializedError {\n\treadonly $isError: true;\n\treadonly name: string;\n\treadonly message: string;\n\treadonly stack: string;\n\treadonly noTelemetry: boolean;\n}\n\nexport function transformErrorForSerialization(error: Error): SerializedError;\nexport function transformErrorForSerialization(error: any): any;\nexport function transformErrorForSerialization(error: any): any {\n\tif (error instanceof Error) {\n\t\tconst { name, message } = error;\n\t\tconst stack: string = (<any>error).stacktrace || (<any>error).stack;\n\t\treturn {\n\t\t\t$isError: true,\n\t\t\tname,\n\t\t\tmessage,\n\t\t\tstack,\n\t\t\tnoTelemetry: ErrorNoTelemetry.isErrorNoTelemetry(error)\n\t\t};\n\t}\n\n\t// return as is\n\treturn error;\n}\n\n// see https://github.com/v8/v8/wiki/Stack%20Trace%20API#basic-stack-traces\nexport interface V8CallSite {\n\tgetThis(): any;\n\tgetTypeName(): string;\n\tgetFunction(): string;\n\tgetFunctionName(): string;\n\tgetMethodName(): string;\n\tgetFileName(): string;\n\tgetLineNumber(): number;\n\tgetColumnNumber(): number;\n\tgetEvalOrigin(): string;\n\tisToplevel(): boolean;\n\tisEval(): boolean;\n\tisNative(): boolean;\n\tisConstructor(): boolean;\n\ttoString(): string;\n}\n\nconst canceledName = 'Canceled';\n\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isCancellationError(error: any): boolean {\n\tif (error instanceof CancellationError) {\n\t\treturn true;\n\t}\n\treturn error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n\n// !!!IMPORTANT!!!\n// Do NOT change this class because it is also used as an API-type.\nexport class CancellationError extends Error {\n\tconstructor() {\n\t\tsuper(canceledName);\n\t\tthis.name = this.message;\n\t}\n}\n\n/**\n * @deprecated use {@link CancellationError `new CancellationError()`} instead\n */\nexport function canceled(): Error {\n\tconst error = new Error(canceledName);\n\terror.name = error.message;\n\treturn error;\n}\n\nexport function illegalArgument(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal argument: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal argument');\n\t}\n}\n\nexport function illegalState(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal state: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal state');\n\t}\n}\n\nexport function readonly(name?: string): Error {\n\treturn name\n\t\t? new Error(`readonly property '${name} cannot be changed'`)\n\t\t: new Error('readonly property cannot be changed');\n}\n\nexport function disposed(what: string): Error {\n\tconst result = new Error(`${what} has been disposed`);\n\tresult.name = 'DISPOSED';\n\treturn result;\n}\n\nexport function getErrorMessage(err: any): string {\n\tif (!err) {\n\t\treturn 'Error';\n\t}\n\n\tif (err.message) {\n\t\treturn err.message;\n\t}\n\n\tif (err.stack) {\n\t\treturn err.stack.split('\\n')[0];\n\t}\n\n\treturn String(err);\n}\n\nexport class NotImplementedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotImplemented');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n\nexport class NotSupportedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotSupported');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n\nexport class ExpectedError extends Error {\n\treadonly isExpected = true;\n}\n\n/**\n * Error that when thrown won't be logged in telemetry as an unhandled error.\n */\nexport class ErrorNoTelemetry extends Error {\n\toverride readonly name: string;\n\n\tconstructor(msg?: string) {\n\t\tsuper(msg);\n\t\tthis.name = 'ErrorNoTelemetry';\n\t}\n\n\tpublic static fromError(err: Error): ErrorNoTelemetry {\n\t\tif (err instanceof ErrorNoTelemetry) {\n\t\t\treturn err;\n\t\t}\n\n\t\tconst result = new ErrorNoTelemetry();\n\t\tresult.message = err.message;\n\t\tresult.stack = err.stack;\n\t\treturn result;\n\t}\n\n\tpublic static isErrorNoTelemetry(err: Error): err is ErrorNoTelemetry {\n\t\treturn err.name === 'ErrorNoTelemetry';\n\t}\n}\n\n/**\n * This error indicates a bug.\n * Do not throw this for invalid user input.\n * Only catch this error to recover gracefully from bugs.\n */\nexport class BugIndicatingError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message || 'An unexpected bug occurred.');\n\t\tObject.setPrototypeOf(this, BugIndicatingError.prototype);\n\n\t\t// Because we know for sure only buggy code throws this,\n\t\t// we definitely want to break here and fix the bug.\n\t\t// eslint-disable-next-line no-debugger\n\t\tdebugger;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { CancellationError } from 'vs/base/common/errors';\nimport { ISplice } from 'vs/base/common/sequence';\n\n/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail<T>(array: ArrayLike<T>, n: number = 0): T {\n\treturn array[array.length - (1 + n)];\n}\n\nexport function tail2<T>(arr: T[]): [T[], T] {\n\tif (arr.length === 0) {\n\t\tthrow new Error('Invalid tail call');\n\t}\n\n\treturn [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\n\nexport function equals<T>(one: ReadonlyArray<T> | undefined, other: ReadonlyArray<T> | undefined, itemEquals: (a: T, b: T) => boolean = (a, b) => a === b): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\n\tif (!one || !other) {\n\t\treturn false;\n\t}\n\n\tif (one.length !== other.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0, len = one.length; i < len; i++) {\n\t\tif (!itemEquals(one[i], other[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Remove the element at `index` by replacing it with the last element. This is faster than `splice`\n * but changes the order of the array\n */\nexport function removeFastWithoutKeepingOrder<T>(array: T[], index: number) {\n\tconst last = array.length - 1;\n\tif (index < last) {\n\t\tarray[index] = array[last];\n\t}\n\tarray.pop();\n}\n\n/**\n * Performs a binary search algorithm over a sorted array.\n *\n * @param array The array being searched.\n * @param key The value we search for.\n * @param comparator A function that takes two array elements and returns zero\n *   if they are equal, a negative number if the first element precedes the\n *   second one in the sorting order, or a positive number if the second element\n *   precedes the first one.\n * @return See {@link binarySearch2}\n */\nexport function binarySearch<T>(array: ReadonlyArray<T>, key: T, comparator: (op1: T, op2: T) => number): number {\n\treturn binarySearch2(array.length, i => comparator(array[i], key));\n}\n\n/**\n * Performs a binary search algorithm over a sorted collection. Useful for cases\n * when we need to perform a binary search over something that isn't actually an\n * array, and converting data to an array would defeat the use of binary search\n * in the first place.\n *\n * @param length The collection length.\n * @param compareToKey A function that takes an index of an element in the\n *   collection and returns zero if the value at this index is equal to the\n *   search key, a negative number if the value precedes the search key in the\n *   sorting order, or a positive number if the search key precedes the value.\n * @return A non-negative index of an element, if found. If not found, the\n *   result is -(n+1) (or ~n, using bitwise notation), where n is the index\n *   where the key should be inserted to maintain the sorting order.\n */\nexport function binarySearch2(length: number, compareToKey: (index: number) => number): number {\n\tlet low = 0,\n\t\thigh = length - 1;\n\n\twhile (low <= high) {\n\t\tconst mid = ((low + high) / 2) | 0;\n\t\tconst comp = compareToKey(mid);\n\t\tif (comp < 0) {\n\t\t\tlow = mid + 1;\n\t\t} else if (comp > 0) {\n\t\t\thigh = mid - 1;\n\t\t} else {\n\t\t\treturn mid;\n\t\t}\n\t}\n\treturn -(low + 1);\n}\n\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirstInSorted<T>(array: ReadonlyArray<T>, p: (x: T) => boolean): number {\n\tlet low = 0, high = array.length;\n\tif (high === 0) {\n\t\treturn 0; // no children\n\t}\n\twhile (low < high) {\n\t\tconst mid = Math.floor((low + high) / 2);\n\t\tif (p(array[mid])) {\n\t\t\thigh = mid;\n\t\t} else {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;\n}\n\ntype Compare<T> = (a: T, b: T) => number;\n\n\nexport function quickSelect<T>(nth: number, data: T[], compare: Compare<T>): T {\n\n\tnth = nth | 0;\n\n\tif (nth >= data.length) {\n\t\tthrow new TypeError('invalid index');\n\t}\n\n\tconst pivotValue = data[Math.floor(data.length * Math.random())];\n\tconst lower: T[] = [];\n\tconst higher: T[] = [];\n\tconst pivots: T[] = [];\n\n\tfor (const value of data) {\n\t\tconst val = compare(value, pivotValue);\n\t\tif (val < 0) {\n\t\t\tlower.push(value);\n\t\t} else if (val > 0) {\n\t\t\thigher.push(value);\n\t\t} else {\n\t\t\tpivots.push(value);\n\t\t}\n\t}\n\n\tif (nth < lower.length) {\n\t\treturn quickSelect(nth, lower, compare);\n\t} else if (nth < lower.length + pivots.length) {\n\t\treturn pivots[0];\n\t} else {\n\t\treturn quickSelect(nth - (lower.length + pivots.length), higher, compare);\n\t}\n}\n\nexport function groupBy<T>(data: ReadonlyArray<T>, compare: (a: T, b: T) => number): T[][] {\n\tconst result: T[][] = [];\n\tlet currentGroup: T[] | undefined = undefined;\n\tfor (const element of data.slice(0).sort(compare)) {\n\t\tif (!currentGroup || compare(currentGroup[0], element) !== 0) {\n\t\t\tcurrentGroup = [element];\n\t\t\tresult.push(currentGroup);\n\t\t} else {\n\t\t\tcurrentGroup.push(element);\n\t\t}\n\t}\n\treturn result;\n}\n\ninterface IMutableSplice<T> extends ISplice<T> {\n\tdeleteCount: number;\n}\n\n/**\n * Diffs two *sorted* arrays and computes the splices which apply the diff.\n */\nexport function sortedDiff<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): ISplice<T>[] {\n\tconst result: IMutableSplice<T>[] = [];\n\n\tfunction pushSplice(start: number, deleteCount: number, toInsert: T[]): void {\n\t\tif (deleteCount === 0 && toInsert.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst latest = result[result.length - 1];\n\n\t\tif (latest && latest.start + latest.deleteCount === start) {\n\t\t\tlatest.deleteCount += deleteCount;\n\t\t\tlatest.toInsert.push(...toInsert);\n\t\t} else {\n\t\t\tresult.push({ start, deleteCount, toInsert });\n\t\t}\n\t}\n\n\tlet beforeIdx = 0;\n\tlet afterIdx = 0;\n\n\twhile (true) {\n\t\tif (beforeIdx === before.length) {\n\t\t\tpushSplice(beforeIdx, 0, after.slice(afterIdx));\n\t\t\tbreak;\n\t\t}\n\t\tif (afterIdx === after.length) {\n\t\t\tpushSplice(beforeIdx, before.length - beforeIdx, []);\n\t\t\tbreak;\n\t\t}\n\n\t\tconst beforeElement = before[beforeIdx];\n\t\tconst afterElement = after[afterIdx];\n\t\tconst n = compare(beforeElement, afterElement);\n\t\tif (n === 0) {\n\t\t\t// equal\n\t\t\tbeforeIdx += 1;\n\t\t\tafterIdx += 1;\n\t\t} else if (n < 0) {\n\t\t\t// beforeElement is smaller -> before element removed\n\t\t\tpushSplice(beforeIdx, 1, []);\n\t\t\tbeforeIdx += 1;\n\t\t} else if (n > 0) {\n\t\t\t// beforeElement is greater -> after element added\n\t\t\tpushSplice(beforeIdx, 0, [afterElement]);\n\t\t\tafterIdx += 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Takes two *sorted* arrays and computes their delta (removed, added elements).\n * Finishes in `Math.min(before.length, after.length)` steps.\n */\nexport function delta<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): { removed: T[]; added: T[] } {\n\tconst splices = sortedDiff(before, after, compare);\n\tconst removed: T[] = [];\n\tconst added: T[] = [];\n\n\tfor (const splice of splices) {\n\t\tremoved.push(...before.slice(splice.start, splice.start + splice.deleteCount));\n\t\tadded.push(...splice.toInsert);\n\t}\n\n\treturn { removed, added };\n}\n\n/**\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @return The first n elements from array when sorted with compare.\n */\nexport function top<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, n: number): T[] {\n\tif (n === 0) {\n\t\treturn [];\n\t}\n\tconst result = array.slice(0, n).sort(compare);\n\ttopStep(array, compare, result, n, array.length);\n\treturn result;\n}\n\n/**\n * Asynchronous variant of `top()` allowing for splitting up work in batches between which the event loop can run.\n *\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @param batch The number of elements to examine before yielding to the event loop.\n * @return The first n elements from array when sorted with compare.\n */\nexport function topAsync<T>(array: T[], compare: (a: T, b: T) => number, n: number, batch: number, token?: CancellationToken): Promise<T[]> {\n\tif (n === 0) {\n\t\treturn Promise.resolve([]);\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\t(async () => {\n\t\t\tconst o = array.length;\n\t\t\tconst result = array.slice(0, n).sort(compare);\n\t\t\tfor (let i = n, m = Math.min(n + batch, o); i < o; i = m, m = Math.min(m + batch, o)) {\n\t\t\t\tif (i > n) {\n\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve)); // any other delay function would starve I/O\n\t\t\t\t}\n\t\t\t\tif (token && token.isCancellationRequested) {\n\t\t\t\t\tthrow new CancellationError();\n\t\t\t\t}\n\t\t\t\ttopStep(array, compare, result, i, m);\n\t\t\t}\n\t\t\treturn result;\n\t\t})()\n\t\t\t.then(resolve, reject);\n\t});\n}\n\nfunction topStep<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, result: T[], i: number, m: number): void {\n\tfor (const n = result.length; i < m; i++) {\n\t\tconst element = array[i];\n\t\tif (compare(element, result[n - 1]) < 0) {\n\t\t\tresult.pop();\n\t\t\tconst j = findFirstInSorted(result, e => compare(element, e) < 0);\n\t\t\tresult.splice(j, 0, element);\n\t\t}\n\t}\n}\n\n/**\n * @returns New array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce<T>(array: ReadonlyArray<T | undefined | null>): T[] {\n\treturn <T[]>array.filter(e => !!e);\n}\n\n/**\n * Remove all falsy values from `array`. The original array IS modified.\n */\nexport function coalesceInPlace<T>(array: Array<T | undefined | null>): void {\n\tlet to = 0;\n\tfor (let i = 0; i < array.length; i++) {\n\t\tif (!!array[i]) {\n\t\t\tarray[to] = array[i];\n\t\t\tto += 1;\n\t\t}\n\t}\n\tarray.length = to;\n}\n\n/**\n * @deprecated Use `Array.copyWithin` instead\n */\nexport function move(array: any[], from: number, to: number): void {\n\tarray.splice(to, 0, array.splice(from, 1)[0]);\n}\n\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj: any): boolean {\n\treturn !Array.isArray(obj) || obj.length === 0;\n}\n\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nexport function isNonEmptyArray<T>(obj: T[] | undefined | null): obj is T[];\nexport function isNonEmptyArray<T>(obj: readonly T[] | undefined | null): obj is readonly T[];\nexport function isNonEmptyArray<T>(obj: T[] | readonly T[] | undefined | null): obj is T[] | readonly T[] {\n\treturn Array.isArray(obj) && obj.length > 0;\n}\n\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equality by returning an alternate value for each.\n */\nexport function distinct<T>(array: ReadonlyArray<T>, keyFn: (value: T) => any = value => value): T[] {\n\tconst seen = new Set<any>();\n\n\treturn array.filter(element => {\n\t\tconst key = keyFn!(element);\n\t\tif (seen.has(key)) {\n\t\t\treturn false;\n\t\t}\n\t\tseen.add(key);\n\t\treturn true;\n\t});\n}\n\nexport function uniqueFilter<T, R>(keyFn: (t: T) => R): (t: T) => boolean {\n\tconst seen = new Set<R>();\n\n\treturn element => {\n\t\tconst key = keyFn(element);\n\n\t\tif (seen.has(key)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen.add(key);\n\t\treturn true;\n\t};\n}\n\nexport function findLast<T>(arr: readonly T[], predicate: (item: T) => boolean): T | undefined {\n\tconst idx = lastIndex(arr, predicate);\n\tif (idx === -1) {\n\t\treturn undefined;\n\t}\n\treturn arr[idx];\n}\n\nexport function lastIndex<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): number {\n\tfor (let i = array.length - 1; i >= 0; i--) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue: NotFound): T | NotFound;\nexport function firstOrDefault<T>(array: ReadonlyArray<T>): T | undefined;\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue?: NotFound): T | NotFound | undefined {\n\treturn array.length > 0 ? array[0] : notFoundValue;\n}\n\nexport function lastOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue: NotFound): T | NotFound;\nexport function lastOrDefault<T>(array: ReadonlyArray<T>): T | undefined;\nexport function lastOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue?: NotFound): T | NotFound | undefined {\n\treturn array.length > 0 ? array[array.length - 1] : notFoundValue;\n}\n\nexport function commonPrefixLength<T>(one: ReadonlyArray<T>, other: ReadonlyArray<T>, equals: (a: T, b: T) => boolean = (a, b) => a === b): number {\n\tlet result = 0;\n\n\tfor (let i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\n\t\tresult++;\n\t}\n\n\treturn result;\n}\n\n/**\n * @deprecated Use `[].flat()`\n */\nexport function flatten<T>(arr: T[][]): T[] {\n\treturn (<T[]>[]).concat(...arr);\n}\n\nexport function range(to: number): number[];\nexport function range(from: number, to: number): number[];\nexport function range(arg: number, to?: number): number[] {\n\tlet from = typeof to === 'number' ? arg : 0;\n\n\tif (typeof to === 'number') {\n\t\tfrom = arg;\n\t} else {\n\t\tfrom = 0;\n\t\tto = arg;\n\t}\n\n\tconst result: number[] = [];\n\n\tif (from <= to) {\n\t\tfor (let i = from; i < to; i++) {\n\t\t\tresult.push(i);\n\t\t}\n\t} else {\n\t\tfor (let i = from; i > to; i--) {\n\t\t\tresult.push(i);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function index<T>(array: ReadonlyArray<T>, indexer: (t: T) => string): { [key: string]: T };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, mapper: (t: T) => R): { [key: string]: R };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, mapper?: (t: T) => R): { [key: string]: R } {\n\treturn array.reduce((r, t) => {\n\t\tr[indexer(t)] = mapper ? mapper(t) : t;\n\t\treturn r;\n\t}, Object.create(null));\n}\n\n/**\n * Inserts an element into an array. Returns a function which, when\n * called, will remove that element from the array.\n *\n * @deprecated In almost all cases, use a `Set<T>` instead.\n */\nexport function insert<T>(array: T[], element: T): () => void {\n\tarray.push(element);\n\n\treturn () => remove(array, element);\n}\n\n/**\n * Removes an element from an array if it can be found.\n *\n * @deprecated In almost all cases, use a `Set<T>` instead.\n */\nexport function remove<T>(array: T[], element: T): T | undefined {\n\tconst index = array.indexOf(element);\n\tif (index > -1) {\n\t\tarray.splice(index, 1);\n\n\t\treturn element;\n\t}\n\n\treturn undefined;\n}\n\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert<T>(target: T[], insertIndex: number, insertArr: T[]): T[] {\n\tconst before = target.slice(0, insertIndex);\n\tconst after = target.slice(insertIndex);\n\treturn before.concat(insertArr, after);\n}\n\n/**\n * Uses Fisher-Yates shuffle to shuffle the given array\n */\nexport function shuffle<T>(array: T[], _seed?: number): void {\n\tlet rand: () => number;\n\n\tif (typeof _seed === 'number') {\n\t\tlet seed = _seed;\n\t\t// Seeded random number generator in JS. Modified from:\n\t\t// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\n\t\trand = () => {\n\t\t\tconst x = Math.sin(seed++) * 179426549; // throw away most significant digits and reduce any potential bias\n\t\t\treturn x - Math.floor(x);\n\t\t};\n\t} else {\n\t\trand = Math.random;\n\t}\n\n\tfor (let i = array.length - 1; i > 0; i -= 1) {\n\t\tconst j = Math.floor(rand() * (i + 1));\n\t\tconst temp = array[i];\n\t\tarray[i] = array[j];\n\t\tarray[j] = temp;\n\t}\n}\n\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.unshift(value);\n\t}\n}\n\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.push(value);\n\t}\n}\n\nexport function pushMany<T>(arr: T[], items: ReadonlyArray<T>): void {\n\tfor (const item of items) {\n\t\tarr.push(item);\n\t}\n}\n\nexport function mapArrayOrNot<T, U>(items: T | T[], fn: (_: T) => U): U | U[] {\n\treturn Array.isArray(items) ?\n\t\titems.map(fn) :\n\t\tfn(items);\n}\n\nexport function asArray<T>(x: T | T[]): T[];\nexport function asArray<T>(x: T | readonly T[]): readonly T[];\nexport function asArray<T>(x: T | T[]): T[] {\n\treturn Array.isArray(x) ? x : [x];\n}\n\nexport function getRandomElement<T>(arr: T[]): T | undefined {\n\treturn arr[Math.floor(Math.random() * arr.length)];\n}\n\n/**\n * Returns the first mapped value of the array which is not undefined.\n */\nexport function mapFind<T, R>(array: Iterable<T>, mapFn: (value: T) => R | undefined): R | undefined {\n\tfor (const value of array) {\n\t\tconst mapped = mapFn(value);\n\t\tif (mapped !== undefined) {\n\t\t\treturn mapped;\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\n/**\n * Insert the new items in the array.\n * @param array The original array.\n * @param start The zero-based location in the array from which to start inserting elements.\n * @param newItems The items to be inserted\n */\nexport function insertInto<T>(array: T[], start: number, newItems: T[]): void {\n\tconst startIdx = getActualStartIndex(array, start);\n\tconst originalLength = array.length;\n\tconst newItemsLength = newItems.length;\n\tarray.length = originalLength + newItemsLength;\n\t// Move the items after the start index, start from the end so that we don't overwrite any value.\n\tfor (let i = originalLength - 1; i >= startIdx; i--) {\n\t\tarray[i + newItemsLength] = array[i];\n\t}\n\n\tfor (let i = 0; i < newItemsLength; i++) {\n\t\tarray[i + startIdx] = newItems[i];\n\t}\n}\n\n/**\n * Removes elements from an array and inserts new elements in their place, returning the deleted elements. Alternative to the native Array.splice method, it\n * can only support limited number of items due to the maximum call stack size limit.\n * @param array The original array.\n * @param start The zero-based location in the array from which to start removing elements.\n * @param deleteCount The number of elements to remove.\n * @returns An array containing the elements that were deleted.\n */\nexport function splice<T>(array: T[], start: number, deleteCount: number, newItems: T[]): T[] {\n\tconst index = getActualStartIndex(array, start);\n\tconst result = array.splice(index, deleteCount);\n\tinsertInto(array, index, newItems);\n\treturn result;\n}\n\n/**\n * Determine the actual start index (same logic as the native splice() or slice())\n * If greater than the length of the array, start will be set to the length of the array. In this case, no element will be deleted but the method will behave as an adding function, adding as many element as item[n*] provided.\n * If negative, it will begin that many elements from the end of the array. (In this case, the origin -1, meaning -n is the index of the nth last element, and is therefore equivalent to the index of array.length - n.) If array.length + start is less than 0, it will begin from index 0.\n * @param array The target array.\n * @param start The operation index.\n */\nfunction getActualStartIndex<T>(array: T[], start: number): number {\n\treturn start < 0 ? Math.max(start + array.length, 0) : Math.min(start, array.length);\n}\n\n/**\n * When comparing two values,\n * a negative number indicates that the first value is less than the second,\n * a positive number indicates that the first value is greater than the second,\n * and zero indicates that neither is the case.\n*/\nexport type CompareResult = number;\n\nexport namespace CompareResult {\n\texport function isLessThan(result: CompareResult): boolean {\n\t\treturn result < 0;\n\t}\n\n\texport function isGreaterThan(result: CompareResult): boolean {\n\t\treturn result > 0;\n\t}\n\n\texport function isNeitherLessOrGreaterThan(result: CompareResult): boolean {\n\t\treturn result === 0;\n\t}\n\n\texport const greaterThan = 1;\n\texport const lessThan = -1;\n\texport const neitherLessOrGreaterThan = 0;\n}\n\n/**\n * A comparator `c` defines a total order `<=` on `T` as following:\n * `c(a, b) <= 0` iff `a` <= `b`.\n * We also have `c(a, b) == 0` iff `c(b, a) == 0`.\n*/\nexport type Comparator<T> = (a: T, b: T) => CompareResult;\n\nexport function compareBy<TItem, TCompareBy>(selector: (item: TItem) => TCompareBy, comparator: Comparator<TCompareBy>): Comparator<TItem> {\n\treturn (a, b) => comparator(selector(a), selector(b));\n}\n\nexport function tieBreakComparators<TItem>(...comparators: Comparator<TItem>[]): Comparator<TItem> {\n\treturn (item1, item2) => {\n\t\tfor (const comparator of comparators) {\n\t\t\tconst result = comparator(item1, item2);\n\t\t\tif (!CompareResult.isNeitherLessOrGreaterThan(result)) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t\treturn CompareResult.neitherLessOrGreaterThan;\n\t};\n}\n\n/**\n * The natural order on numbers.\n*/\nexport const numberComparator: Comparator<number> = (a, b) => a - b;\n\n/**\n * Returns the first item that is equal to or greater than every other item.\n*/\nexport function findMaxBy<T>(items: readonly T[], comparator: Comparator<T>): T | undefined {\n\tif (items.length === 0) {\n\t\treturn undefined;\n\t}\n\n\tlet max = items[0];\n\tfor (let i = 1; i < items.length; i++) {\n\t\tconst item = items[i];\n\t\tif (comparator(item, max) > 0) {\n\t\t\tmax = item;\n\t\t}\n\t}\n\treturn max;\n}\n\n/**\n * Returns the last item that is equal to or greater than every other item.\n*/\nexport function findLastMaxBy<T>(items: readonly T[], comparator: Comparator<T>): T | undefined {\n\tif (items.length === 0) {\n\t\treturn undefined;\n\t}\n\n\tlet max = items[0];\n\tfor (let i = 1; i < items.length; i++) {\n\t\tconst item = items[i];\n\t\tif (comparator(item, max) >= 0) {\n\t\t\tmax = item;\n\t\t}\n\t}\n\treturn max;\n}\n\n/**\n * Returns the first item that is equal to or less than every other item.\n*/\nexport function findMinBy<T>(items: readonly T[], comparator: Comparator<T>): T | undefined {\n\treturn findMaxBy(items, (a, b) => -comparator(a, b));\n}\n\nexport class ArrayQueue<T> {\n\tprivate firstIdx = 0;\n\tprivate lastIdx = this.items.length - 1;\n\n\t/**\n\t * Constructs a queue that is backed by the given array. Runtime is O(1).\n\t*/\n\tconstructor(private readonly items: readonly T[]) { }\n\n\tget length(): number {\n\t\treturn this.lastIdx - this.firstIdx + 1;\n\t}\n\n\t/**\n\t * Consumes elements from the beginning of the queue as long as the predicate returns true.\n\t * If no elements were consumed, `null` is returned. Has a runtime of O(result.length).\n\t*/\n\ttakeWhile(predicate: (value: T) => boolean): T[] | null {\n\t\t// P(k) := k <= this.lastIdx && predicate(this.items[k])\n\t\t// Find s := min { k | k >= this.firstIdx && !P(k) } and return this.data[this.firstIdx...s)\n\n\t\tlet startIdx = this.firstIdx;\n\t\twhile (startIdx < this.items.length && predicate(this.items[startIdx])) {\n\t\t\tstartIdx++;\n\t\t}\n\t\tconst result = startIdx === this.firstIdx ? null : this.items.slice(this.firstIdx, startIdx);\n\t\tthis.firstIdx = startIdx;\n\t\treturn result;\n\t}\n\n\t/**\n\t * Consumes elements from the end of the queue as long as the predicate returns true.\n\t * If no elements were consumed, `null` is returned.\n\t * The result has the same order as the underlying array!\n\t*/\n\ttakeFromEndWhile(predicate: (value: T) => boolean): T[] | null {\n\t\t// P(k) := this.firstIdx >= k && predicate(this.items[k])\n\t\t// Find s := max { k | k <= this.lastIdx && !P(k) } and return this.data(s...this.lastIdx]\n\n\t\tlet endIdx = this.lastIdx;\n\t\twhile (endIdx >= 0 && predicate(this.items[endIdx])) {\n\t\t\tendIdx--;\n\t\t}\n\t\tconst result = endIdx === this.lastIdx ? null : this.items.slice(endIdx + 1, this.lastIdx + 1);\n\t\tthis.lastIdx = endIdx;\n\t\treturn result;\n\t}\n\n\tpeek(): T | undefined {\n\t\tif (this.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this.items[this.firstIdx];\n\t}\n\n\tpeekLast(): T | undefined {\n\t\tif (this.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this.items[this.lastIdx];\n\t}\n\n\tdequeue(): T | undefined {\n\t\tconst result = this.items[this.firstIdx];\n\t\tthis.firstIdx++;\n\t\treturn result;\n\t}\n\n\tremoveLast(): T | undefined {\n\t\tconst result = this.items[this.lastIdx];\n\t\tthis.lastIdx--;\n\t\treturn result;\n\t}\n\n\ttakeCount(count: number): T[] {\n\t\tconst result = this.items.slice(this.firstIdx, this.firstIdx + count);\n\t\tthis.firstIdx += count;\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function once<T extends Function>(this: unknown, fn: T): T {\n\tconst _this = this;\n\tlet didCall = false;\n\tlet result: unknown;\n\n\treturn function () {\n\t\tif (didCall) {\n\t\t\treturn result;\n\t\t}\n\n\t\tdidCall = true;\n\t\tresult = fn.apply(_this, arguments);\n\n\t\treturn result;\n\t} as unknown as T;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport namespace Iterable {\n\n\texport function is<T = any>(thing: any): thing is IterableIterator<T> {\n\t\treturn thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\n\t}\n\n\tconst _empty: Iterable<any> = Object.freeze([]);\n\texport function empty<T = any>(): Iterable<T> {\n\t\treturn _empty;\n\t}\n\n\texport function* single<T>(element: T): Iterable<T> {\n\t\tyield element;\n\t}\n\n\texport function from<T>(iterable: Iterable<T> | undefined | null): Iterable<T> {\n\t\treturn iterable || _empty;\n\t}\n\n\texport function isEmpty<T>(iterable: Iterable<T> | undefined | null): boolean {\n\t\treturn !iterable || iterable[Symbol.iterator]().next().done === true;\n\t}\n\n\texport function first<T>(iterable: Iterable<T>): T | undefined {\n\t\treturn iterable[Symbol.iterator]().next().value;\n\t}\n\n\texport function some<T>(iterable: Iterable<T>, predicate: (t: T) => unknown): boolean {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\texport function find<T, R extends T>(iterable: Iterable<T>, predicate: (t: T) => t is R): T | undefined;\n\texport function find<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): T | undefined;\n\texport function find<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): T | undefined {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\treturn element;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\texport function filter<T, R extends T>(iterable: Iterable<T>, predicate: (t: T) => t is R): Iterable<R>;\n\texport function filter<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): Iterable<T>;\n\texport function* filter<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): Iterable<T> {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function* map<T, R>(iterable: Iterable<T>, fn: (t: T, index: number) => R): Iterable<R> {\n\t\tlet index = 0;\n\t\tfor (const element of iterable) {\n\t\t\tyield fn(element, index++);\n\t\t}\n\t}\n\n\texport function* concat<T>(...iterables: Iterable<T>[]): Iterable<T> {\n\t\tfor (const iterable of iterables) {\n\t\t\tfor (const element of iterable) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function* concatNested<T>(iterables: Iterable<Iterable<T>>): Iterable<T> {\n\t\tfor (const iterable of iterables) {\n\t\t\tfor (const element of iterable) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function reduce<T, R>(iterable: Iterable<T>, reducer: (previousValue: R, currentValue: T) => R, initialValue: R): R {\n\t\tlet value = initialValue;\n\t\tfor (const element of iterable) {\n\t\t\tvalue = reducer(value, element);\n\t\t}\n\t\treturn value;\n\t}\n\n\texport function forEach<T>(iterable: Iterable<T>, fn: (t: T, index: number) => any): void {\n\t\tlet index = 0;\n\t\tfor (const element of iterable) {\n\t\t\tfn(element, index++);\n\t\t}\n\t}\n\n\t/**\n\t * Returns an iterable slice of the array, with the same semantics as `array.slice()`.\n\t */\n\texport function* slice<T>(arr: ReadonlyArray<T>, from: number, to = arr.length): Iterable<T> {\n\t\tif (from < 0) {\n\t\t\tfrom += arr.length;\n\t\t}\n\n\t\tif (to < 0) {\n\t\t\tto += arr.length;\n\t\t} else if (to > arr.length) {\n\t\t\tto = arr.length;\n\t\t}\n\n\t\tfor (; from < to; from++) {\n\t\t\tyield arr[from];\n\t\t}\n\t}\n\n\t/**\n\t * Consumes `atMost` elements from iterable and returns the consumed elements,\n\t * and an iterable for the rest of the elements.\n\t */\n\texport function consume<T>(iterable: Iterable<T>, atMost: number = Number.POSITIVE_INFINITY): [T[], Iterable<T>] {\n\t\tconst consumed: T[] = [];\n\n\t\tif (atMost === 0) {\n\t\t\treturn [consumed, iterable];\n\t\t}\n\n\t\tconst iterator = iterable[Symbol.iterator]();\n\n\t\tfor (let i = 0; i < atMost; i++) {\n\t\t\tconst next = iterator.next();\n\n\t\t\tif (next.done) {\n\t\t\t\treturn [consumed, Iterable.empty()];\n\t\t\t}\n\n\t\t\tconsumed.push(next.value);\n\t\t}\n\n\t\treturn [consumed, { [Symbol.iterator]() { return iterator; } }];\n\t}\n\n\t/**\n\t * Consumes `atMost` elements from iterable and returns the consumed elements,\n\t * and an iterable for the rest of the elements.\n\t */\n\texport function collect<T>(iterable: Iterable<T>): T[] {\n\t\treturn consume(iterable)[0];\n\t}\n\n\t/**\n\t * Returns whether the iterables are the same length and all items are\n\t * equal using the comparator function.\n\t */\n\texport function equals<T>(a: Iterable<T>, b: Iterable<T>, comparator = (at: T, bt: T) => at === bt) {\n\t\tconst ai = a[Symbol.iterator]();\n\t\tconst bi = b[Symbol.iterator]();\n\t\twhile (true) {\n\t\t\tconst an = ai.next();\n\t\t\tconst bn = bi.next();\n\n\t\t\tif (an.done !== bn.done) {\n\t\t\t\treturn false;\n\t\t\t} else if (an.done) {\n\t\t\t\treturn true;\n\t\t\t} else if (!comparator(an.value, bn.value)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const enum ScanError {\n\tNone = 0,\n\tUnexpectedEndOfComment = 1,\n\tUnexpectedEndOfString = 2,\n\tUnexpectedEndOfNumber = 3,\n\tInvalidUnicode = 4,\n\tInvalidEscapeCharacter = 5,\n\tInvalidCharacter = 6\n}\n\nexport const enum SyntaxKind {\n\tOpenBraceToken = 1,\n\tCloseBraceToken = 2,\n\tOpenBracketToken = 3,\n\tCloseBracketToken = 4,\n\tCommaToken = 5,\n\tColonToken = 6,\n\tNullKeyword = 7,\n\tTrueKeyword = 8,\n\tFalseKeyword = 9,\n\tStringLiteral = 10,\n\tNumericLiteral = 11,\n\tLineCommentTrivia = 12,\n\tBlockCommentTrivia = 13,\n\tLineBreakTrivia = 14,\n\tTrivia = 15,\n\tUnknown = 16,\n\tEOF = 17\n}\n\n/**\n * The scanner object, representing a JSON scanner at a position in the input string.\n */\nexport interface JSONScanner {\n\t/**\n\t * Sets the scan position to a new offset. A call to 'scan' is needed to get the first token.\n\t */\n\tsetPosition(pos: number): void;\n\t/**\n\t * Read the next token. Returns the token code.\n\t */\n\tscan(): SyntaxKind;\n\t/**\n\t * Returns the current scan position, which is after the last read token.\n\t */\n\tgetPosition(): number;\n\t/**\n\t * Returns the last read token.\n\t */\n\tgetToken(): SyntaxKind;\n\t/**\n\t * Returns the last read token value. The value for strings is the decoded string content. For numbers its of type number, for boolean it's true or false.\n\t */\n\tgetTokenValue(): string;\n\t/**\n\t * The start offset of the last read token.\n\t */\n\tgetTokenOffset(): number;\n\t/**\n\t * The length of the last read token.\n\t */\n\tgetTokenLength(): number;\n\t/**\n\t * An error code of the last scan.\n\t */\n\tgetTokenError(): ScanError;\n}\n\n\n\nexport interface ParseError {\n\terror: ParseErrorCode;\n\toffset: number;\n\tlength: number;\n}\n\nexport const enum ParseErrorCode {\n\tInvalidSymbol = 1,\n\tInvalidNumberFormat = 2,\n\tPropertyNameExpected = 3,\n\tValueExpected = 4,\n\tColonExpected = 5,\n\tCommaExpected = 6,\n\tCloseBraceExpected = 7,\n\tCloseBracketExpected = 8,\n\tEndOfFileExpected = 9,\n\tInvalidCommentToken = 10,\n\tUnexpectedEndOfComment = 11,\n\tUnexpectedEndOfString = 12,\n\tUnexpectedEndOfNumber = 13,\n\tInvalidUnicode = 14,\n\tInvalidEscapeCharacter = 15,\n\tInvalidCharacter = 16\n}\n\nexport type NodeType = 'object' | 'array' | 'property' | 'string' | 'number' | 'boolean' | 'null';\n\nexport interface Node {\n\treadonly type: NodeType;\n\treadonly value?: any;\n\treadonly offset: number;\n\treadonly length: number;\n\treadonly colonOffset?: number;\n\treadonly parent?: Node;\n\treadonly children?: Node[];\n}\n\nexport type Segment = string | number;\nexport type JSONPath = Segment[];\n\nexport interface Location {\n\t/**\n\t * The previous property key or literal value (string, number, boolean or null) or undefined.\n\t */\n\tpreviousNode?: Node;\n\t/**\n\t * The path describing the location in the JSON document. The path consists of a sequence strings\n\t * representing an object property or numbers for array indices.\n\t */\n\tpath: JSONPath;\n\t/**\n\t * Matches the locations path against a pattern consisting of strings (for properties) and numbers (for array indices).\n\t * '*' will match a single segment, of any property name or index.\n\t * '**' will match a sequence of segments or no segment, of any property name or index.\n\t */\n\tmatches: (patterns: JSONPath) => boolean;\n\t/**\n\t * If set, the location's offset is at a property key.\n\t */\n\tisAtPropertyKey: boolean;\n}\n\nexport interface ParseOptions {\n\tdisallowComments?: boolean;\n\tallowTrailingComma?: boolean;\n\tallowEmptyContent?: boolean;\n}\n\nexport namespace ParseOptions {\n\texport const DEFAULT = {\n\t\tallowTrailingComma: true\n\t};\n}\n\nexport interface JSONVisitor {\n\t/**\n\t * Invoked when an open brace is encountered and an object is started. The offset and length represent the location of the open brace.\n\t */\n\tonObjectBegin?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a property is encountered. The offset and length represent the location of the property name.\n\t */\n\tonObjectProperty?: (property: string, offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a closing brace is encountered and an object is completed. The offset and length represent the location of the closing brace.\n\t */\n\tonObjectEnd?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when an open bracket is encountered. The offset and length represent the location of the open bracket.\n\t */\n\tonArrayBegin?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a closing bracket is encountered. The offset and length represent the location of the closing bracket.\n\t */\n\tonArrayEnd?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a literal value is encountered. The offset and length represent the location of the literal value.\n\t */\n\tonLiteralValue?: (value: any, offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a comma or colon separator is encountered. The offset and length represent the location of the separator.\n\t */\n\tonSeparator?: (character: string, offset: number, length: number) => void;\n\n\t/**\n\t * When comments are allowed, invoked when a line or block comment is encountered. The offset and length represent the location of the comment.\n\t */\n\tonComment?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked on an error.\n\t */\n\tonError?: (error: ParseErrorCode, offset: number, length: number) => void;\n}\n\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text: string, ignoreTrivia: boolean = false): JSONScanner {\n\n\tlet pos = 0;\n\tconst len = text.length;\n\tlet value: string = '';\n\tlet tokenOffset = 0;\n\tlet token: SyntaxKind = SyntaxKind.Unknown;\n\tlet scanError: ScanError = ScanError.None;\n\n\tfunction scanHexDigits(count: number): number {\n\t\tlet digits = 0;\n\t\tlet hexValue = 0;\n\t\twhile (digits < count) {\n\t\t\tconst ch = text.charCodeAt(pos);\n\t\t\tif (ch >= CharacterCodes._0 && ch <= CharacterCodes._9) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes._0;\n\t\t\t}\n\t\t\telse if (ch >= CharacterCodes.A && ch <= CharacterCodes.F) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes.A + 10;\n\t\t\t}\n\t\t\telse if (ch >= CharacterCodes.a && ch <= CharacterCodes.f) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes.a + 10;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpos++;\n\t\t\tdigits++;\n\t\t}\n\t\tif (digits < count) {\n\t\t\thexValue = -1;\n\t\t}\n\t\treturn hexValue;\n\t}\n\n\tfunction setPosition(newPosition: number) {\n\t\tpos = newPosition;\n\t\tvalue = '';\n\t\ttokenOffset = 0;\n\t\ttoken = SyntaxKind.Unknown;\n\t\tscanError = ScanError.None;\n\t}\n\n\tfunction scanNumber(): string {\n\t\tconst start = pos;\n\t\tif (text.charCodeAt(pos) === CharacterCodes._0) {\n\t\t\tpos++;\n\t\t} else {\n\t\t\tpos++;\n\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t}\n\t\t}\n\t\tif (pos < text.length && text.charCodeAt(pos) === CharacterCodes.dot) {\n\t\t\tpos++;\n\t\t\tif (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tscanError = ScanError.UnexpectedEndOfNumber;\n\t\t\t\treturn text.substring(start, pos);\n\t\t\t}\n\t\t}\n\t\tlet end = pos;\n\t\tif (pos < text.length && (text.charCodeAt(pos) === CharacterCodes.E || text.charCodeAt(pos) === CharacterCodes.e)) {\n\t\t\tpos++;\n\t\t\tif (pos < text.length && text.charCodeAt(pos) === CharacterCodes.plus || text.charCodeAt(pos) === CharacterCodes.minus) {\n\t\t\t\tpos++;\n\t\t\t}\n\t\t\tif (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t\tend = pos;\n\t\t\t} else {\n\t\t\t\tscanError = ScanError.UnexpectedEndOfNumber;\n\t\t\t}\n\t\t}\n\t\treturn text.substring(start, end);\n\t}\n\n\tfunction scanString(): string {\n\n\t\tlet result = '',\n\t\t\tstart = pos;\n\n\t\twhile (true) {\n\t\t\tif (pos >= len) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst ch = text.charCodeAt(pos);\n\t\t\tif (ch === CharacterCodes.doubleQuote) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tpos++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (ch === CharacterCodes.backslash) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tpos++;\n\t\t\t\tif (pos >= len) {\n\t\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tconst ch2 = text.charCodeAt(pos++);\n\t\t\t\tswitch (ch2) {\n\t\t\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\t\t\t\tresult += '\\\"';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.backslash:\n\t\t\t\t\t\tresult += '\\\\';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.slash:\n\t\t\t\t\t\tresult += '/';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.b:\n\t\t\t\t\t\tresult += '\\b';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.f:\n\t\t\t\t\t\tresult += '\\f';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.n:\n\t\t\t\t\t\tresult += '\\n';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.r:\n\t\t\t\t\t\tresult += '\\r';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.t:\n\t\t\t\t\t\tresult += '\\t';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.u: {\n\t\t\t\t\t\tconst ch3 = scanHexDigits(4);\n\t\t\t\t\t\tif (ch3 >= 0) {\n\t\t\t\t\t\t\tresult += String.fromCharCode(ch3);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscanError = ScanError.InvalidUnicode;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tscanError = ScanError.InvalidEscapeCharacter;\n\t\t\t\t}\n\t\t\t\tstart = pos;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (ch >= 0 && ch <= 0x1F) {\n\t\t\t\tif (isLineBreak(ch)) {\n\t\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tscanError = ScanError.InvalidCharacter;\n\t\t\t\t\t// mark as error but continue with string\n\t\t\t\t}\n\t\t\t}\n\t\t\tpos++;\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction scanNext(): SyntaxKind {\n\n\t\tvalue = '';\n\t\tscanError = ScanError.None;\n\n\t\ttokenOffset = pos;\n\n\t\tif (pos >= len) {\n\t\t\t// at the end\n\t\t\ttokenOffset = len;\n\t\t\treturn token = SyntaxKind.EOF;\n\t\t}\n\n\t\tlet code = text.charCodeAt(pos);\n\t\t// trivia: whitespace\n\t\tif (isWhitespace(code)) {\n\t\t\tdo {\n\t\t\t\tpos++;\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tcode = text.charCodeAt(pos);\n\t\t\t} while (isWhitespace(code));\n\n\t\t\treturn token = SyntaxKind.Trivia;\n\t\t}\n\n\t\t// trivia: newlines\n\t\tif (isLineBreak(code)) {\n\t\t\tpos++;\n\t\t\tvalue += String.fromCharCode(code);\n\t\t\tif (code === CharacterCodes.carriageReturn && text.charCodeAt(pos) === CharacterCodes.lineFeed) {\n\t\t\t\tpos++;\n\t\t\t\tvalue += '\\n';\n\t\t\t}\n\t\t\treturn token = SyntaxKind.LineBreakTrivia;\n\t\t}\n\n\t\tswitch (code) {\n\t\t\t// tokens: []{}:,\n\t\t\tcase CharacterCodes.openBrace:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.OpenBraceToken;\n\t\t\tcase CharacterCodes.closeBrace:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CloseBraceToken;\n\t\t\tcase CharacterCodes.openBracket:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.OpenBracketToken;\n\t\t\tcase CharacterCodes.closeBracket:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CloseBracketToken;\n\t\t\tcase CharacterCodes.colon:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.ColonToken;\n\t\t\tcase CharacterCodes.comma:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CommaToken;\n\n\t\t\t// strings\n\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\t\tpos++;\n\t\t\t\tvalue = scanString();\n\t\t\t\treturn token = SyntaxKind.StringLiteral;\n\n\t\t\t// comments\n\t\t\tcase CharacterCodes.slash: {\n\t\t\t\tconst start = pos - 1;\n\t\t\t\t// Single-line comment\n\t\t\t\tif (text.charCodeAt(pos + 1) === CharacterCodes.slash) {\n\t\t\t\t\tpos += 2;\n\n\t\t\t\t\twhile (pos < len) {\n\t\t\t\t\t\tif (isLineBreak(text.charCodeAt(pos))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\n\t\t\t\t\t}\n\t\t\t\t\tvalue = text.substring(start, pos);\n\t\t\t\t\treturn token = SyntaxKind.LineCommentTrivia;\n\t\t\t\t}\n\n\t\t\t\t// Multi-line comment\n\t\t\t\tif (text.charCodeAt(pos + 1) === CharacterCodes.asterisk) {\n\t\t\t\t\tpos += 2;\n\n\t\t\t\t\tconst safeLength = len - 1; // For lookahead.\n\t\t\t\t\tlet commentClosed = false;\n\t\t\t\t\twhile (pos < safeLength) {\n\t\t\t\t\t\tconst ch = text.charCodeAt(pos);\n\n\t\t\t\t\t\tif (ch === CharacterCodes.asterisk && text.charCodeAt(pos + 1) === CharacterCodes.slash) {\n\t\t\t\t\t\t\tpos += 2;\n\t\t\t\t\t\t\tcommentClosed = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!commentClosed) {\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t\tscanError = ScanError.UnexpectedEndOfComment;\n\t\t\t\t\t}\n\n\t\t\t\t\tvalue = text.substring(start, pos);\n\t\t\t\t\treturn token = SyntaxKind.BlockCommentTrivia;\n\t\t\t\t}\n\t\t\t\t// just a single slash\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t}\n\t\t\t// numbers\n\t\t\tcase CharacterCodes.minus:\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\tif (pos === len || !isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t\t}\n\t\t\t// found a minus, followed by a number so\n\t\t\t// we fall through to proceed with scanning\n\t\t\t// numbers\n\t\t\tcase CharacterCodes._0:\n\t\t\tcase CharacterCodes._1:\n\t\t\tcase CharacterCodes._2:\n\t\t\tcase CharacterCodes._3:\n\t\t\tcase CharacterCodes._4:\n\t\t\tcase CharacterCodes._5:\n\t\t\tcase CharacterCodes._6:\n\t\t\tcase CharacterCodes._7:\n\t\t\tcase CharacterCodes._8:\n\t\t\tcase CharacterCodes._9:\n\t\t\t\tvalue += scanNumber();\n\t\t\t\treturn token = SyntaxKind.NumericLiteral;\n\t\t\t// literals and unknown symbols\n\t\t\tdefault:\n\t\t\t\t// is a literal? Read the full word.\n\t\t\t\twhile (pos < len && isUnknownContentCharacter(code)) {\n\t\t\t\t\tpos++;\n\t\t\t\t\tcode = text.charCodeAt(pos);\n\t\t\t\t}\n\t\t\t\tif (tokenOffset !== pos) {\n\t\t\t\t\tvalue = text.substring(tokenOffset, pos);\n\t\t\t\t\t// keywords: true, false, null\n\t\t\t\t\tswitch (value) {\n\t\t\t\t\t\tcase 'true': return token = SyntaxKind.TrueKeyword;\n\t\t\t\t\t\tcase 'false': return token = SyntaxKind.FalseKeyword;\n\t\t\t\t\t\tcase 'null': return token = SyntaxKind.NullKeyword;\n\t\t\t\t\t}\n\t\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t\t}\n\t\t\t\t// some\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t}\n\t}\n\n\tfunction isUnknownContentCharacter(code: CharacterCodes) {\n\t\tif (isWhitespace(code) || isLineBreak(code)) {\n\t\t\treturn false;\n\t\t}\n\t\tswitch (code) {\n\t\t\tcase CharacterCodes.closeBrace:\n\t\t\tcase CharacterCodes.closeBracket:\n\t\t\tcase CharacterCodes.openBrace:\n\t\t\tcase CharacterCodes.openBracket:\n\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\tcase CharacterCodes.colon:\n\t\t\tcase CharacterCodes.comma:\n\t\t\tcase CharacterCodes.slash:\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\n\tfunction scanNextNonTrivia(): SyntaxKind {\n\t\tlet result: SyntaxKind;\n\t\tdo {\n\t\t\tresult = scanNext();\n\t\t} while (result >= SyntaxKind.LineCommentTrivia && result <= SyntaxKind.Trivia);\n\t\treturn result;\n\t}\n\n\treturn {\n\t\tsetPosition: setPosition,\n\t\tgetPosition: () => pos,\n\t\tscan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n\t\tgetToken: () => token,\n\t\tgetTokenValue: () => value,\n\t\tgetTokenOffset: () => tokenOffset,\n\t\tgetTokenLength: () => pos - tokenOffset,\n\t\tgetTokenError: () => scanError\n\t};\n}\n\nfunction isWhitespace(ch: number): boolean {\n\treturn ch === CharacterCodes.space || ch === CharacterCodes.tab || ch === CharacterCodes.verticalTab || ch === CharacterCodes.formFeed ||\n\t\tch === CharacterCodes.nonBreakingSpace || ch === CharacterCodes.ogham || ch >= CharacterCodes.enQuad && ch <= CharacterCodes.zeroWidthSpace ||\n\t\tch === CharacterCodes.narrowNoBreakSpace || ch === CharacterCodes.mathematicalSpace || ch === CharacterCodes.ideographicSpace || ch === CharacterCodes.byteOrderMark;\n}\n\nfunction isLineBreak(ch: number): boolean {\n\treturn ch === CharacterCodes.lineFeed || ch === CharacterCodes.carriageReturn || ch === CharacterCodes.lineSeparator || ch === CharacterCodes.paragraphSeparator;\n}\n\nfunction isDigit(ch: number): boolean {\n\treturn ch >= CharacterCodes._0 && ch <= CharacterCodes._9;\n}\n\nconst enum CharacterCodes {\n\tnullCharacter = 0,\n\tmaxAsciiCharacter = 0x7F,\n\n\tlineFeed = 0x0A,              // \\n\n\tcarriageReturn = 0x0D,        // \\r\n\tlineSeparator = 0x2028,\n\tparagraphSeparator = 0x2029,\n\n\t// REVIEW: do we need to support this?  The scanner doesn't, but our IText does.  This seems\n\t// like an odd disparity?  (Or maybe it's completely fine for them to be different).\n\tnextLine = 0x0085,\n\n\t// Unicode 3.0 space characters\n\tspace = 0x0020,   // \" \"\n\tnonBreakingSpace = 0x00A0,   //\n\tenQuad = 0x2000,\n\temQuad = 0x2001,\n\tenSpace = 0x2002,\n\temSpace = 0x2003,\n\tthreePerEmSpace = 0x2004,\n\tfourPerEmSpace = 0x2005,\n\tsixPerEmSpace = 0x2006,\n\tfigureSpace = 0x2007,\n\tpunctuationSpace = 0x2008,\n\tthinSpace = 0x2009,\n\thairSpace = 0x200A,\n\tzeroWidthSpace = 0x200B,\n\tnarrowNoBreakSpace = 0x202F,\n\tideographicSpace = 0x3000,\n\tmathematicalSpace = 0x205F,\n\togham = 0x1680,\n\n\t_ = 0x5F,\n\t$ = 0x24,\n\n\t_0 = 0x30,\n\t_1 = 0x31,\n\t_2 = 0x32,\n\t_3 = 0x33,\n\t_4 = 0x34,\n\t_5 = 0x35,\n\t_6 = 0x36,\n\t_7 = 0x37,\n\t_8 = 0x38,\n\t_9 = 0x39,\n\n\ta = 0x61,\n\tb = 0x62,\n\tc = 0x63,\n\td = 0x64,\n\te = 0x65,\n\tf = 0x66,\n\tg = 0x67,\n\th = 0x68,\n\ti = 0x69,\n\tj = 0x6A,\n\tk = 0x6B,\n\tl = 0x6C,\n\tm = 0x6D,\n\tn = 0x6E,\n\to = 0x6F,\n\tp = 0x70,\n\tq = 0x71,\n\tr = 0x72,\n\ts = 0x73,\n\tt = 0x74,\n\tu = 0x75,\n\tv = 0x76,\n\tw = 0x77,\n\tx = 0x78,\n\ty = 0x79,\n\tz = 0x7A,\n\n\tA = 0x41,\n\tB = 0x42,\n\tC = 0x43,\n\tD = 0x44,\n\tE = 0x45,\n\tF = 0x46,\n\tG = 0x47,\n\tH = 0x48,\n\tI = 0x49,\n\tJ = 0x4A,\n\tK = 0x4B,\n\tL = 0x4C,\n\tM = 0x4D,\n\tN = 0x4E,\n\tO = 0x4F,\n\tP = 0x50,\n\tQ = 0x51,\n\tR = 0x52,\n\tS = 0x53,\n\tT = 0x54,\n\tU = 0x55,\n\tV = 0x56,\n\tW = 0x57,\n\tX = 0x58,\n\tY = 0x59,\n\tZ = 0x5A,\n\n\tampersand = 0x26,             // &\n\tasterisk = 0x2A,              // *\n\tat = 0x40,                    // @\n\tbackslash = 0x5C,             // \\\n\tbar = 0x7C,                   // |\n\tcaret = 0x5E,                 // ^\n\tcloseBrace = 0x7D,            // }\n\tcloseBracket = 0x5D,          // ]\n\tcloseParen = 0x29,            // )\n\tcolon = 0x3A,                 // :\n\tcomma = 0x2C,                 // ,\n\tdot = 0x2E,                   // .\n\tdoubleQuote = 0x22,           // \"\n\tequals = 0x3D,                // =\n\texclamation = 0x21,           // !\n\tgreaterThan = 0x3E,           // >\n\tlessThan = 0x3C,              // <\n\tminus = 0x2D,                 // -\n\topenBrace = 0x7B,             // {\n\topenBracket = 0x5B,           // [\n\topenParen = 0x28,             // (\n\tpercent = 0x25,               // %\n\tplus = 0x2B,                  // +\n\tquestion = 0x3F,              // ?\n\tsemicolon = 0x3B,             // ;\n\tsingleQuote = 0x27,           // '\n\tslash = 0x2F,                 // /\n\ttilde = 0x7E,                 // ~\n\n\tbackspace = 0x08,             // \\b\n\tformFeed = 0x0C,              // \\f\n\tbyteOrderMark = 0xFEFF,\n\ttab = 0x09,                   // \\t\n\tverticalTab = 0x0B,           // \\v\n}\n\ninterface NodeImpl extends Node {\n\ttype: NodeType;\n\tvalue?: any;\n\toffset: number;\n\tlength: number;\n\tcolonOffset?: number;\n\tparent?: NodeImpl;\n\tchildren?: NodeImpl[];\n}\n\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text: string, position: number): Location {\n\tconst segments: Segment[] = []; // strings or numbers\n\tconst earlyReturnException = new Object();\n\tlet previousNode: NodeImpl | undefined = undefined;\n\tconst previousNodeInst: NodeImpl = {\n\t\tvalue: {},\n\t\toffset: 0,\n\t\tlength: 0,\n\t\ttype: 'object',\n\t\tparent: undefined\n\t};\n\tlet isAtPropertyKey = false;\n\tfunction setPreviousNode(value: string, offset: number, length: number, type: NodeType) {\n\t\tpreviousNodeInst.value = value;\n\t\tpreviousNodeInst.offset = offset;\n\t\tpreviousNodeInst.length = length;\n\t\tpreviousNodeInst.type = type;\n\t\tpreviousNodeInst.colonOffset = undefined;\n\t\tpreviousNode = previousNodeInst;\n\t}\n\ttry {\n\n\t\tvisit(text, {\n\t\t\tonObjectBegin: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tisAtPropertyKey = position > offset;\n\t\t\t\tsegments.push(''); // push a placeholder (will be replaced)\n\t\t\t},\n\t\t\tonObjectProperty: (name: string, offset: number, length: number) => {\n\t\t\t\tif (position < offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tsetPreviousNode(name, offset, length, 'property');\n\t\t\t\tsegments[segments.length - 1] = name;\n\t\t\t\tif (position <= offset + length) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonObjectEnd: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.pop();\n\t\t\t},\n\t\t\tonArrayBegin: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.push(0);\n\t\t\t},\n\t\t\tonArrayEnd: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.pop();\n\t\t\t},\n\t\t\tonLiteralValue: (value: any, offset: number, length: number) => {\n\t\t\t\tif (position < offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tsetPreviousNode(value, offset, length, getNodeType(value));\n\n\t\t\t\tif (position <= offset + length) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonSeparator: (sep: string, offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tif (sep === ':' && previousNode && previousNode.type === 'property') {\n\t\t\t\t\tpreviousNode.colonOffset = offset;\n\t\t\t\t\tisAtPropertyKey = false;\n\t\t\t\t\tpreviousNode = undefined;\n\t\t\t\t} else if (sep === ',') {\n\t\t\t\t\tconst last = segments[segments.length - 1];\n\t\t\t\t\tif (typeof last === 'number') {\n\t\t\t\t\t\tsegments[segments.length - 1] = last + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisAtPropertyKey = true;\n\t\t\t\t\t\tsegments[segments.length - 1] = '';\n\t\t\t\t\t}\n\t\t\t\t\tpreviousNode = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} catch (e) {\n\t\tif (e !== earlyReturnException) {\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\treturn {\n\t\tpath: segments,\n\t\tpreviousNode,\n\t\tisAtPropertyKey,\n\t\tmatches: (pattern: Segment[]) => {\n\t\t\tlet k = 0;\n\t\t\tfor (let i = 0; k < pattern.length && i < segments.length; i++) {\n\t\t\t\tif (pattern[k] === segments[i] || pattern[k] === '*') {\n\t\t\t\t\tk++;\n\t\t\t\t} else if (pattern[k] !== '**') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn k === pattern.length;\n\t\t}\n\t};\n}\n\n\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text: string, errors: ParseError[] = [], options: ParseOptions = ParseOptions.DEFAULT): any {\n\tlet currentProperty: string | null = null;\n\tlet currentParent: any = [];\n\tconst previousParents: any[] = [];\n\n\tfunction onValue(value: any) {\n\t\tif (Array.isArray(currentParent)) {\n\t\t\t(<any[]>currentParent).push(value);\n\t\t} else if (currentProperty !== null) {\n\t\t\tcurrentParent[currentProperty] = value;\n\t\t}\n\t}\n\n\tconst visitor: JSONVisitor = {\n\t\tonObjectBegin: () => {\n\t\t\tconst object = {};\n\t\t\tonValue(object);\n\t\t\tpreviousParents.push(currentParent);\n\t\t\tcurrentParent = object;\n\t\t\tcurrentProperty = null;\n\t\t},\n\t\tonObjectProperty: (name: string) => {\n\t\t\tcurrentProperty = name;\n\t\t},\n\t\tonObjectEnd: () => {\n\t\t\tcurrentParent = previousParents.pop();\n\t\t},\n\t\tonArrayBegin: () => {\n\t\t\tconst array: any[] = [];\n\t\t\tonValue(array);\n\t\t\tpreviousParents.push(currentParent);\n\t\t\tcurrentParent = array;\n\t\t\tcurrentProperty = null;\n\t\t},\n\t\tonArrayEnd: () => {\n\t\t\tcurrentParent = previousParents.pop();\n\t\t},\n\t\tonLiteralValue: onValue,\n\t\tonError: (error: ParseErrorCode, offset: number, length: number) => {\n\t\t\terrors.push({ error, offset, length });\n\t\t}\n\t};\n\tvisit(text, visitor, options);\n\treturn currentParent[0];\n}\n\n\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text: string, errors: ParseError[] = [], options: ParseOptions = ParseOptions.DEFAULT): Node {\n\tlet currentParent: NodeImpl = { type: 'array', offset: -1, length: -1, children: [], parent: undefined }; // artificial root\n\n\tfunction ensurePropertyComplete(endOffset: number) {\n\t\tif (currentParent.type === 'property') {\n\t\t\tcurrentParent.length = endOffset - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t}\n\t}\n\n\tfunction onValue(valueNode: Node): Node {\n\t\tcurrentParent.children!.push(valueNode);\n\t\treturn valueNode;\n\t}\n\n\tconst visitor: JSONVisitor = {\n\t\tonObjectBegin: (offset: number) => {\n\t\t\tcurrentParent = onValue({ type: 'object', offset, length: -1, parent: currentParent, children: [] });\n\t\t},\n\t\tonObjectProperty: (name: string, offset: number, length: number) => {\n\t\t\tcurrentParent = onValue({ type: 'property', offset, length: -1, parent: currentParent, children: [] });\n\t\t\tcurrentParent.children!.push({ type: 'string', value: name, offset, length, parent: currentParent });\n\t\t},\n\t\tonObjectEnd: (offset: number, length: number) => {\n\t\t\tcurrentParent.length = offset + length - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonArrayBegin: (offset: number, length: number) => {\n\t\t\tcurrentParent = onValue({ type: 'array', offset, length: -1, parent: currentParent, children: [] });\n\t\t},\n\t\tonArrayEnd: (offset: number, length: number) => {\n\t\t\tcurrentParent.length = offset + length - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonLiteralValue: (value: any, offset: number, length: number) => {\n\t\t\tonValue({ type: getNodeType(value), offset, length, parent: currentParent, value });\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonSeparator: (sep: string, offset: number, length: number) => {\n\t\t\tif (currentParent.type === 'property') {\n\t\t\t\tif (sep === ':') {\n\t\t\t\t\tcurrentParent.colonOffset = offset;\n\t\t\t\t} else if (sep === ',') {\n\t\t\t\t\tensurePropertyComplete(offset);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonError: (error: ParseErrorCode, offset: number, length: number) => {\n\t\t\terrors.push({ error, offset, length });\n\t\t}\n\t};\n\tvisit(text, visitor, options);\n\n\tconst result = currentParent.children![0];\n\tif (result) {\n\t\tdelete result.parent;\n\t}\n\treturn result;\n}\n\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root: Node, path: JSONPath): Node | undefined {\n\tif (!root) {\n\t\treturn undefined;\n\t}\n\tlet node = root;\n\tfor (const segment of path) {\n\t\tif (typeof segment === 'string') {\n\t\t\tif (node.type !== 'object' || !Array.isArray(node.children)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tlet found = false;\n\t\t\tfor (const propertyNode of node.children) {\n\t\t\t\tif (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {\n\t\t\t\t\tnode = propertyNode.children[1];\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!found) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t} else {\n\t\t\tconst index = <number>segment;\n\t\t\tif (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tnode = node.children[index];\n\t\t}\n\t}\n\treturn node;\n}\n\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport function getNodePath(node: Node): JSONPath {\n\tif (!node.parent || !node.parent.children) {\n\t\treturn [];\n\t}\n\tconst path = getNodePath(node.parent);\n\tif (node.parent.type === 'property') {\n\t\tconst key = node.parent.children[0].value;\n\t\tpath.push(key);\n\t} else if (node.parent.type === 'array') {\n\t\tconst index = node.parent.children.indexOf(node);\n\t\tif (index !== -1) {\n\t\t\tpath.push(index);\n\t\t}\n\t}\n\treturn path;\n}\n\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node: Node): any {\n\tswitch (node.type) {\n\t\tcase 'array':\n\t\t\treturn node.children!.map(getNodeValue);\n\t\tcase 'object': {\n\t\t\tconst obj = Object.create(null);\n\t\t\tfor (const prop of node.children!) {\n\t\t\t\tconst valueNode = prop.children![1];\n\t\t\t\tif (valueNode) {\n\t\t\t\t\tobj[prop.children![0].value] = getNodeValue(valueNode);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn obj;\n\t\t}\n\t\tcase 'null':\n\t\tcase 'string':\n\t\tcase 'number':\n\t\tcase 'boolean':\n\t\t\treturn node.value;\n\t\tdefault:\n\t\t\treturn undefined;\n\t}\n\n}\n\nexport function contains(node: Node, offset: number, includeRightBound = false): boolean {\n\treturn (offset >= node.offset && offset < (node.offset + node.length)) || includeRightBound && (offset === (node.offset + node.length));\n}\n\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport function findNodeAtOffset(node: Node, offset: number, includeRightBound = false): Node | undefined {\n\tif (contains(node, offset, includeRightBound)) {\n\t\tconst children = node.children;\n\t\tif (Array.isArray(children)) {\n\t\t\tfor (let i = 0; i < children.length && children[i].offset <= offset; i++) {\n\t\t\t\tconst item = findNodeAtOffset(children[i], offset, includeRightBound);\n\t\t\t\tif (item) {\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\treturn node;\n\t}\n\treturn undefined;\n}\n\n\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text: string, visitor: JSONVisitor, options: ParseOptions = ParseOptions.DEFAULT): any {\n\n\tconst _scanner = createScanner(text, false);\n\n\tfunction toNoArgVisit(visitFunction?: (offset: number, length: number) => void): () => void {\n\t\treturn visitFunction ? () => visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength()) : () => true;\n\t}\n\tfunction toOneArgVisit<T>(visitFunction?: (arg: T, offset: number, length: number) => void): (arg: T) => void {\n\t\treturn visitFunction ? (arg: T) => visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength()) : () => true;\n\t}\n\n\tconst onObjectBegin = toNoArgVisit(visitor.onObjectBegin),\n\t\tonObjectProperty = toOneArgVisit(visitor.onObjectProperty),\n\t\tonObjectEnd = toNoArgVisit(visitor.onObjectEnd),\n\t\tonArrayBegin = toNoArgVisit(visitor.onArrayBegin),\n\t\tonArrayEnd = toNoArgVisit(visitor.onArrayEnd),\n\t\tonLiteralValue = toOneArgVisit(visitor.onLiteralValue),\n\t\tonSeparator = toOneArgVisit(visitor.onSeparator),\n\t\tonComment = toNoArgVisit(visitor.onComment),\n\t\tonError = toOneArgVisit(visitor.onError);\n\n\tconst disallowComments = options && options.disallowComments;\n\tconst allowTrailingComma = options && options.allowTrailingComma;\n\tfunction scanNext(): SyntaxKind {\n\t\twhile (true) {\n\t\t\tconst token = _scanner.scan();\n\t\t\tswitch (_scanner.getTokenError()) {\n\t\t\t\tcase ScanError.InvalidUnicode:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidUnicode);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.InvalidEscapeCharacter:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidEscapeCharacter);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfNumber:\n\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfNumber);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfComment:\n\t\t\t\t\tif (!disallowComments) {\n\t\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfComment);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfString:\n\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfString);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.InvalidCharacter:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidCharacter);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tswitch (token) {\n\t\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\t\t\tif (disallowComments) {\n\t\t\t\t\t\thandleError(ParseErrorCode.InvalidCommentToken);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tonComment();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Unknown:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidSymbol);\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Trivia:\n\t\t\t\tcase SyntaxKind.LineBreakTrivia:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn token;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleError(error: ParseErrorCode, skipUntilAfter: SyntaxKind[] = [], skipUntil: SyntaxKind[] = []): void {\n\t\tonError(error);\n\t\tif (skipUntilAfter.length + skipUntil.length > 0) {\n\t\t\tlet token = _scanner.getToken();\n\t\t\twhile (token !== SyntaxKind.EOF) {\n\t\t\t\tif (skipUntilAfter.indexOf(token) !== -1) {\n\t\t\t\t\tscanNext();\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (skipUntil.indexOf(token) !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttoken = scanNext();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction parseString(isValue: boolean): boolean {\n\t\tconst value = _scanner.getTokenValue();\n\t\tif (isValue) {\n\t\t\tonLiteralValue(value);\n\t\t} else {\n\t\t\tonObjectProperty(value);\n\t\t}\n\t\tscanNext();\n\t\treturn true;\n\t}\n\n\tfunction parseLiteral(): boolean {\n\t\tswitch (_scanner.getToken()) {\n\t\t\tcase SyntaxKind.NumericLiteral: {\n\t\t\t\tlet value = 0;\n\t\t\t\ttry {\n\t\t\t\t\tvalue = JSON.parse(_scanner.getTokenValue());\n\t\t\t\t\tif (typeof value !== 'number') {\n\t\t\t\t\t\thandleError(ParseErrorCode.InvalidNumberFormat);\n\t\t\t\t\t\tvalue = 0;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\thandleError(ParseErrorCode.InvalidNumberFormat);\n\t\t\t\t}\n\t\t\t\tonLiteralValue(value);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase SyntaxKind.NullKeyword:\n\t\t\t\tonLiteralValue(null);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.TrueKeyword:\n\t\t\t\tonLiteralValue(true);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.FalseKeyword:\n\t\t\t\tonLiteralValue(false);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t\tscanNext();\n\t\treturn true;\n\t}\n\n\tfunction parseProperty(): boolean {\n\t\tif (_scanner.getToken() !== SyntaxKind.StringLiteral) {\n\t\t\thandleError(ParseErrorCode.PropertyNameExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\treturn false;\n\t\t}\n\t\tparseString(false);\n\t\tif (_scanner.getToken() === SyntaxKind.ColonToken) {\n\t\t\tonSeparator(':');\n\t\t\tscanNext(); // consume colon\n\n\t\t\tif (!parseValue()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t} else {\n\t\t\thandleError(ParseErrorCode.ColonExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseObject(): boolean {\n\t\tonObjectBegin();\n\t\tscanNext(); // consume open brace\n\n\t\tlet needsComma = false;\n\t\twhile (_scanner.getToken() !== SyntaxKind.CloseBraceToken && _scanner.getToken() !== SyntaxKind.EOF) {\n\t\t\tif (_scanner.getToken() === SyntaxKind.CommaToken) {\n\t\t\t\tif (!needsComma) {\n\t\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\t\t\t}\n\t\t\t\tonSeparator(',');\n\t\t\t\tscanNext(); // consume comma\n\t\t\t\tif (_scanner.getToken() === SyntaxKind.CloseBraceToken && allowTrailingComma) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (needsComma) {\n\t\t\t\thandleError(ParseErrorCode.CommaExpected, [], []);\n\t\t\t}\n\t\t\tif (!parseProperty()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t\tneedsComma = true;\n\t\t}\n\t\tonObjectEnd();\n\t\tif (_scanner.getToken() !== SyntaxKind.CloseBraceToken) {\n\t\t\thandleError(ParseErrorCode.CloseBraceExpected, [SyntaxKind.CloseBraceToken], []);\n\t\t} else {\n\t\t\tscanNext(); // consume close brace\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseArray(): boolean {\n\t\tonArrayBegin();\n\t\tscanNext(); // consume open bracket\n\n\t\tlet needsComma = false;\n\t\twhile (_scanner.getToken() !== SyntaxKind.CloseBracketToken && _scanner.getToken() !== SyntaxKind.EOF) {\n\t\t\tif (_scanner.getToken() === SyntaxKind.CommaToken) {\n\t\t\t\tif (!needsComma) {\n\t\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\t\t\t}\n\t\t\t\tonSeparator(',');\n\t\t\t\tscanNext(); // consume comma\n\t\t\t\tif (_scanner.getToken() === SyntaxKind.CloseBracketToken && allowTrailingComma) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (needsComma) {\n\t\t\t\thandleError(ParseErrorCode.CommaExpected, [], []);\n\t\t\t}\n\t\t\tif (!parseValue()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBracketToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t\tneedsComma = true;\n\t\t}\n\t\tonArrayEnd();\n\t\tif (_scanner.getToken() !== SyntaxKind.CloseBracketToken) {\n\t\t\thandleError(ParseErrorCode.CloseBracketExpected, [SyntaxKind.CloseBracketToken], []);\n\t\t} else {\n\t\t\tscanNext(); // consume close bracket\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseValue(): boolean {\n\t\tswitch (_scanner.getToken()) {\n\t\t\tcase SyntaxKind.OpenBracketToken:\n\t\t\t\treturn parseArray();\n\t\t\tcase SyntaxKind.OpenBraceToken:\n\t\t\t\treturn parseObject();\n\t\t\tcase SyntaxKind.StringLiteral:\n\t\t\t\treturn parseString(true);\n\t\t\tdefault:\n\t\t\t\treturn parseLiteral();\n\t\t}\n\t}\n\n\tscanNext();\n\tif (_scanner.getToken() === SyntaxKind.EOF) {\n\t\tif (options.allowEmptyContent) {\n\t\t\treturn true;\n\t\t}\n\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\treturn false;\n\t}\n\tif (!parseValue()) {\n\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\treturn false;\n\t}\n\tif (_scanner.getToken() !== SyntaxKind.EOF) {\n\t\thandleError(ParseErrorCode.EndOfFileExpected, [], []);\n\t}\n\treturn true;\n}\n\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text: string, replaceCh?: string): string {\n\n\tconst _scanner = createScanner(text);\n\tconst parts: string[] = [];\n\tlet kind: SyntaxKind;\n\tlet offset = 0;\n\tlet pos: number;\n\n\tdo {\n\t\tpos = _scanner.getPosition();\n\t\tkind = _scanner.scan();\n\t\tswitch (kind) {\n\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\tcase SyntaxKind.EOF:\n\t\t\t\tif (offset !== pos) {\n\t\t\t\t\tparts.push(text.substring(offset, pos));\n\t\t\t\t}\n\t\t\t\tif (replaceCh !== undefined) {\n\t\t\t\t\tparts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n\t\t\t\t}\n\t\t\t\toffset = _scanner.getPosition();\n\t\t\t\tbreak;\n\t\t}\n\t} while (kind !== SyntaxKind.EOF);\n\n\treturn parts.join('');\n}\n\nexport function getNodeType(value: any): NodeType {\n\tswitch (typeof value) {\n\t\tcase 'boolean': return 'boolean';\n\t\tcase 'number': return 'number';\n\t\tcase 'string': return 'string';\n\t\tcase 'object': {\n\t\t\tif (!value) {\n\t\t\t\treturn 'null';\n\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\treturn 'array';\n\t\t\t}\n\t\t\treturn 'object';\n\t\t}\n\t\tdefault: return 'null';\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * A value that is resolved synchronously when it is first needed.\n */\nexport interface Lazy<T> {\n\n\thasValue(): boolean;\n\n\n\tgetValue(): T;\n\n\n\tmap<R>(f: (x: T) => R): Lazy<R>;\n}\n\nexport class Lazy<T> {\n\n\tprivate _didRun: boolean = false;\n\tprivate _value?: T;\n\tprivate _error: Error | undefined;\n\n\tconstructor(\n\t\tprivate readonly executor: () => T,\n\t) { }\n\n\t/**\n\t * True if the lazy value has been resolved.\n\t */\n\thasValue() { return this._didRun; }\n\n\t/**\n\t * Get the wrapped value.\n\t *\n\t * This will force evaluation of the lazy value if it has not been resolved yet. Lazy values are only\n\t * resolved once. `getValue` will re-throw exceptions that are hit while resolving the value\n\t */\n\tgetValue(): T {\n\t\tif (!this._didRun) {\n\t\t\ttry {\n\t\t\t\tthis._value = this.executor();\n\t\t\t} catch (err) {\n\t\t\t\tthis._error = err;\n\t\t\t} finally {\n\t\t\t\tthis._didRun = true;\n\t\t\t}\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value!;\n\t}\n\n\t/**\n\t * Get the wrapped value without forcing evaluation.\n\t */\n\tget rawValue(): T | undefined { return this._value; }\n\n\t/**\n\t * Create a new lazy value that is the result of applying `f` to the wrapped value.\n\t *\n\t * This does not force the evaluation of the current lazy value.\n\t */\n\tmap<R>(f: (x: T) => R): Lazy<R> {\n\t\treturn new Lazy<R>(() => f(this.getValue()));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { once } from 'vs/base/common/functional';\nimport { Iterable } from 'vs/base/common/iterator';\n\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\nlet disposableTracker: IDisposableTracker | null = null;\n\nexport interface IDisposableTracker {\n\t/**\n\t * Is called on construction of a disposable.\n\t*/\n\ttrackDisposable(disposable: IDisposable): void;\n\n\t/**\n\t * Is called when a disposable is registered as child of another disposable (e.g. {@link DisposableStore}).\n\t * If parent is `null`, the disposable is removed from its former parent.\n\t*/\n\tsetParent(child: IDisposable, parent: IDisposable | null): void;\n\n\t/**\n\t * Is called after a disposable is disposed.\n\t*/\n\tmarkAsDisposed(disposable: IDisposable): void;\n\n\t/**\n\t * Indicates that the given object is a singleton which does not need to be disposed.\n\t*/\n\tmarkAsSingleton(disposable: IDisposable): void;\n}\n\nexport function setDisposableTracker(tracker: IDisposableTracker | null): void {\n\tdisposableTracker = tracker;\n}\n\nif (TRACK_DISPOSABLES) {\n\tconst __is_disposable_tracked__ = '__is_disposable_tracked__';\n\tsetDisposableTracker(new class implements IDisposableTracker {\n\t\ttrackDisposable(x: IDisposable): void {\n\t\t\tconst stack = new Error('Potentially leaked disposable').stack!;\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (!(x as any)[__is_disposable_tracked__]) {\n\t\t\t\t\tconsole.log(stack);\n\t\t\t\t}\n\t\t\t}, 3000);\n\t\t}\n\n\t\tsetParent(child: IDisposable, parent: IDisposable | null): void {\n\t\t\tif (child && child !== Disposable.None) {\n\t\t\t\ttry {\n\t\t\t\t\t(child as any)[__is_disposable_tracked__] = true;\n\t\t\t\t} catch {\n\t\t\t\t\t// noop\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmarkAsDisposed(disposable: IDisposable): void {\n\t\t\tif (disposable && disposable !== Disposable.None) {\n\t\t\t\ttry {\n\t\t\t\t\t(disposable as any)[__is_disposable_tracked__] = true;\n\t\t\t\t} catch {\n\t\t\t\t\t// noop\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tmarkAsSingleton(disposable: IDisposable): void { }\n\t});\n}\n\nfunction trackDisposable<T extends IDisposable>(x: T): T {\n\tdisposableTracker?.trackDisposable(x);\n\treturn x;\n}\n\nfunction markAsDisposed(disposable: IDisposable): void {\n\tdisposableTracker?.markAsDisposed(disposable);\n}\n\nfunction setParentOfDisposable(child: IDisposable, parent: IDisposable | null): void {\n\tdisposableTracker?.setParent(child, parent);\n}\n\nfunction setParentOfDisposables(children: IDisposable[], parent: IDisposable | null): void {\n\tif (!disposableTracker) {\n\t\treturn;\n\t}\n\tfor (const child of children) {\n\t\tdisposableTracker.setParent(child, parent);\n\t}\n}\n\n/**\n * Indicates that the given object is a singleton which does not need to be disposed.\n*/\nexport function markAsSingleton<T extends IDisposable>(singleton: T): T {\n\tdisposableTracker?.markAsSingleton(singleton);\n\treturn singleton;\n}\n\nexport class MultiDisposeError extends Error {\n\tconstructor(\n\t\tpublic readonly errors: any[]\n\t) {\n\t\tsuper(`Encountered errors while disposing of store. Errors: [${errors.join(', ')}]`);\n\t}\n}\n\nexport interface IDisposable {\n\tdispose(): void;\n}\n\nexport function isDisposable<E extends object>(thing: E): thing is E & IDisposable {\n\treturn typeof (<IDisposable>thing).dispose === 'function' && (<IDisposable>thing).dispose.length === 0;\n}\n\nexport function dispose<T extends IDisposable>(disposable: T): T;\nexport function dispose<T extends IDisposable>(disposable: T | undefined): T | undefined;\nexport function dispose<T extends IDisposable, A extends IterableIterator<T> = IterableIterator<T>>(disposables: IterableIterator<T>): A;\nexport function dispose<T extends IDisposable>(disposables: Array<T>): Array<T>;\nexport function dispose<T extends IDisposable>(disposables: ReadonlyArray<T>): ReadonlyArray<T>;\nexport function dispose<T extends IDisposable>(arg: T | IterableIterator<T> | undefined): any {\n\tif (Iterable.is(arg)) {\n\t\tconst errors: any[] = [];\n\n\t\tfor (const d of arg) {\n\t\t\tif (d) {\n\t\t\t\ttry {\n\t\t\t\t\td.dispose();\n\t\t\t\t} catch (e) {\n\t\t\t\t\terrors.push(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (errors.length === 1) {\n\t\t\tthrow errors[0];\n\t\t} else if (errors.length > 1) {\n\t\t\tthrow new MultiDisposeError(errors);\n\t\t}\n\n\t\treturn Array.isArray(arg) ? [] : arg;\n\t} else if (arg) {\n\t\targ.dispose();\n\t\treturn arg;\n\t}\n}\n\n\nexport function combinedDisposable(...disposables: IDisposable[]): IDisposable {\n\tconst parent = toDisposable(() => dispose(disposables));\n\tsetParentOfDisposables(disposables, parent);\n\treturn parent;\n}\n\nexport function toDisposable(fn: () => void): IDisposable {\n\tconst self = trackDisposable({\n\t\tdispose: once(() => {\n\t\t\tmarkAsDisposed(self);\n\t\t\tfn();\n\t\t})\n\t});\n\treturn self;\n}\n\nexport class DisposableStore implements IDisposable {\n\n\tstatic DISABLE_DISPOSED_WARNING = false;\n\n\tprivate _toDispose = new Set<IDisposable>();\n\tprivate _isDisposed = false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\t/**\n\t * Dispose of all registered disposables and mark this object as disposed.\n\t *\n\t * Any future disposables added to this object will be disposed of on `add`.\n\t */\n\tpublic dispose(): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tmarkAsDisposed(this);\n\t\tthis._isDisposed = true;\n\t\tthis.clear();\n\t}\n\n\t/**\n\t * Returns `true` if this object has been disposed\n\t */\n\tpublic get isDisposed(): boolean {\n\t\treturn this._isDisposed;\n\t}\n\n\t/**\n\t * Dispose of all registered disposables but do not mark this object as disposed.\n\t */\n\tpublic clear(): void {\n\t\ttry {\n\t\t\tdispose(this._toDispose.values());\n\t\t} finally {\n\t\t\tthis._toDispose.clear();\n\t\t}\n\t}\n\n\tpublic add<T extends IDisposable>(o: T): T {\n\t\tif (!o) {\n\t\t\treturn o;\n\t\t}\n\t\tif ((o as unknown as DisposableStore) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\n\t\tsetParentOfDisposable(o, this);\n\t\tif (this._isDisposed) {\n\t\t\tif (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n\t\t\t\tconsole.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._toDispose.add(o);\n\t\t}\n\n\t\treturn o;\n\t}\n}\n\nexport abstract class Disposable implements IDisposable {\n\n\tstatic readonly None = Object.freeze<IDisposable>({ dispose() { } });\n\n\tprotected readonly _store = new DisposableStore();\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t\tsetParentOfDisposable(this._store, this);\n\t}\n\n\tpublic dispose(): void {\n\t\tmarkAsDisposed(this);\n\n\t\tthis._store.dispose();\n\t}\n\n\tprotected _register<T extends IDisposable>(o: T): T {\n\t\tif ((o as unknown as Disposable) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\t\treturn this._store.add(o);\n\t}\n}\n\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n\tprivate _value?: T;\n\tprivate _isDisposed = false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tget value(): T | undefined {\n\t\treturn this._isDisposed ? undefined : this._value;\n\t}\n\n\tset value(value: T | undefined) {\n\t\tif (this._isDisposed || value === this._value) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._value?.dispose();\n\t\tif (value) {\n\t\t\tsetParentOfDisposable(value, this);\n\t\t}\n\t\tthis._value = value;\n\t}\n\n\tclear() {\n\t\tthis.value = undefined;\n\t}\n\n\tdispose(): void {\n\t\tthis._isDisposed = true;\n\t\tmarkAsDisposed(this);\n\t\tthis._value?.dispose();\n\t\tthis._value = undefined;\n\t}\n\n\t/**\n\t * Clears the value, but does not dispose it.\n\t * The old value is returned.\n\t*/\n\tclearAndLeak(): T | undefined {\n\t\tconst oldValue = this._value;\n\t\tthis._value = undefined;\n\t\tif (oldValue) {\n\t\t\tsetParentOfDisposable(oldValue, null);\n\t\t}\n\t\treturn oldValue;\n\t}\n}\n\nexport class RefCountedDisposable {\n\n\tprivate _counter: number = 1;\n\n\tconstructor(\n\t\tprivate readonly _disposable: IDisposable,\n\t) { }\n\n\tacquire() {\n\t\tthis._counter++;\n\t\treturn this;\n\t}\n\n\trelease() {\n\t\tif (--this._counter === 0) {\n\t\t\tthis._disposable.dispose();\n\t\t}\n\t\treturn this;\n\t}\n}\n\n/**\n * A safe disposable can be `unset` so that a leaked reference (listener)\n * can be cut-off.\n */\nexport class SafeDisposable implements IDisposable {\n\n\tdispose: () => void = () => { };\n\tunset: () => void = () => { };\n\tisset: () => boolean = () => false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tset(fn: Function) {\n\t\tlet callback: Function | undefined = fn;\n\t\tthis.unset = () => callback = undefined;\n\t\tthis.isset = () => callback !== undefined;\n\t\tthis.dispose = () => {\n\t\t\tif (callback) {\n\t\t\t\tcallback();\n\t\t\t\tcallback = undefined;\n\t\t\t\tmarkAsDisposed(this);\n\t\t\t}\n\t\t};\n\t\treturn this;\n\t}\n}\n\nexport interface IReference<T> extends IDisposable {\n\treadonly object: T;\n}\n\nexport abstract class ReferenceCollection<T> {\n\n\tprivate readonly references: Map<string, { readonly object: T; counter: number }> = new Map();\n\n\tacquire(key: string, ...args: any[]): IReference<T> {\n\t\tlet reference = this.references.get(key);\n\n\t\tif (!reference) {\n\t\t\treference = { counter: 0, object: this.createReferencedObject(key, ...args) };\n\t\t\tthis.references.set(key, reference);\n\t\t}\n\n\t\tconst { object } = reference;\n\t\tconst dispose = once(() => {\n\t\t\tif (--reference!.counter === 0) {\n\t\t\t\tthis.destroyReferencedObject(key, reference!.object);\n\t\t\t\tthis.references.delete(key);\n\t\t\t}\n\t\t});\n\n\t\treference.counter++;\n\n\t\treturn { object, dispose };\n\t}\n\n\tprotected abstract createReferencedObject(key: string, ...args: any[]): T;\n\tprotected abstract destroyReferencedObject(key: string, object: T): void;\n}\n\n/**\n * Unwraps a reference collection of promised values. Makes sure\n * references are disposed whenever promises get rejected.\n */\nexport class AsyncReferenceCollection<T> {\n\n\tconstructor(private referenceCollection: ReferenceCollection<Promise<T>>) { }\n\n\tasync acquire(key: string, ...args: any[]): Promise<IReference<T>> {\n\t\tconst ref = this.referenceCollection.acquire(key, ...args);\n\n\t\ttry {\n\t\t\tconst object = await ref.object;\n\n\t\t\treturn {\n\t\t\t\tobject,\n\t\t\t\tdispose: () => ref.dispose()\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tref.dispose();\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport class ImmortalReference<T> implements IReference<T> {\n\tconstructor(public object: T) { }\n\tdispose(): void { /* noop */ }\n}\n\nexport function disposeOnReturn(fn: (store: DisposableStore) => void): void {\n\tconst store = new DisposableStore();\n\ttry {\n\t\tfn(store);\n\t} finally {\n\t\tstore.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nclass Node<E> {\n\n\tstatic readonly Undefined = new Node<any>(undefined);\n\n\telement: E;\n\tnext: Node<E>;\n\tprev: Node<E>;\n\n\tconstructor(element: E) {\n\t\tthis.element = element;\n\t\tthis.next = Node.Undefined;\n\t\tthis.prev = Node.Undefined;\n\t}\n}\n\nexport class LinkedList<E> {\n\n\tprivate _first: Node<E> = Node.Undefined;\n\tprivate _last: Node<E> = Node.Undefined;\n\tprivate _size: number = 0;\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._first === Node.Undefined;\n\t}\n\n\tclear(): void {\n\t\tlet node = this._first;\n\t\twhile (node !== Node.Undefined) {\n\t\t\tconst next = node.next;\n\t\t\tnode.prev = Node.Undefined;\n\t\t\tnode.next = Node.Undefined;\n\t\t\tnode = next;\n\t\t}\n\n\t\tthis._first = Node.Undefined;\n\t\tthis._last = Node.Undefined;\n\t\tthis._size = 0;\n\t}\n\n\tunshift(element: E): () => void {\n\t\treturn this._insert(element, false);\n\t}\n\n\tpush(element: E): () => void {\n\t\treturn this._insert(element, true);\n\t}\n\n\tprivate _insert(element: E, atTheEnd: boolean): () => void {\n\t\tconst newNode = new Node(element);\n\t\tif (this._first === Node.Undefined) {\n\t\t\tthis._first = newNode;\n\t\t\tthis._last = newNode;\n\n\t\t} else if (atTheEnd) {\n\t\t\t// push\n\t\t\tconst oldLast = this._last!;\n\t\t\tthis._last = newNode;\n\t\t\tnewNode.prev = oldLast;\n\t\t\toldLast.next = newNode;\n\n\t\t} else {\n\t\t\t// unshift\n\t\t\tconst oldFirst = this._first;\n\t\t\tthis._first = newNode;\n\t\t\tnewNode.next = oldFirst;\n\t\t\toldFirst.prev = newNode;\n\t\t}\n\t\tthis._size += 1;\n\n\t\tlet didRemove = false;\n\t\treturn () => {\n\t\t\tif (!didRemove) {\n\t\t\t\tdidRemove = true;\n\t\t\t\tthis._remove(newNode);\n\t\t\t}\n\t\t};\n\t}\n\n\tshift(): E | undefined {\n\t\tif (this._first === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._first.element;\n\t\t\tthis._remove(this._first);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tpop(): E | undefined {\n\t\tif (this._last === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._last.element;\n\t\t\tthis._remove(this._last);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tprivate _remove(node: Node<E>): void {\n\t\tif (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n\t\t\t// middle\n\t\t\tconst anchor = node.prev;\n\t\t\tanchor.next = node.next;\n\t\t\tnode.next.prev = anchor;\n\n\t\t} else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n\t\t\t// only node\n\t\t\tthis._first = Node.Undefined;\n\t\t\tthis._last = Node.Undefined;\n\n\t\t} else if (node.next === Node.Undefined) {\n\t\t\t// last\n\t\t\tthis._last = this._last!.prev!;\n\t\t\tthis._last.next = Node.Undefined;\n\n\t\t} else if (node.prev === Node.Undefined) {\n\t\t\t// first\n\t\t\tthis._first = this._first!.next!;\n\t\t\tthis._first.prev = Node.Undefined;\n\t\t}\n\n\t\t// done\n\t\tthis._size -= 1;\n\t}\n\n\t*[Symbol.iterator](): Iterator<E> {\n\t\tlet node = this._first;\n\t\twhile (node !== Node.Undefined) {\n\t\t\tyield node.element;\n\t\t\tnode = node.next;\n\t\t}\n\t}\n}\n","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2022, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n// ESM-uncomment-begin\n// let __marked_exports = {};\n// (function() {\n//   function define(deps, factory) {\n//     factory(__marked_exports);\n//   }\n//   define.amd = true;\n// ESM-uncomment-end\n\n (function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(__m[134/*vs/base/common/marked/marked*/], __M([1/*exports*/]), factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.marked = {}));\n})(this, (function (exports) { 'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n      writable: false\n    });\n    return Constructor;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n    if (it) return (it = it.call(o)).next.bind(it);\n\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  function getDefaults() {\n    return {\n      baseUrl: null,\n      breaks: false,\n      extensions: null,\n      gfm: true,\n      headerIds: true,\n      headerPrefix: '',\n      highlight: null,\n      langPrefix: 'language-',\n      mangle: true,\n      pedantic: false,\n      renderer: null,\n      sanitize: false,\n      sanitizer: null,\n      silent: false,\n      smartLists: false,\n      smartypants: false,\n      tokenizer: null,\n      walkTokens: null,\n      xhtml: false\n    };\n  }\n  exports.defaults = getDefaults();\n  function changeDefaults(newDefaults) {\n    exports.defaults = newDefaults;\n  }\n\n  /**\n   * Helpers\n   */\n  var escapeTest = /[&<>\"']/;\n  var escapeReplace = /[&<>\"']/g;\n  var escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n  var escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n  var escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\n    return escapeReplacements[ch];\n  };\n\n  function escape(html, encode) {\n    if (encode) {\n      if (escapeTest.test(html)) {\n        return html.replace(escapeReplace, getEscapeReplacement);\n      }\n    } else {\n      if (escapeTestNoEncode.test(html)) {\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n      }\n    }\n\n    return html;\n  }\n  var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n  /**\n   * @param {string} html\n   */\n\n  function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n  var caret = /(^|[^\\[])\\^/g;\n  /**\n   * @param {string | RegExp} regex\n   * @param {string} opt\n   */\n\n  function edit(regex, opt) {\n    regex = typeof regex === 'string' ? regex : regex.source;\n    opt = opt || '';\n    var obj = {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(caret, '$1');\n        regex = regex.replace(name, val);\n        return obj;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n    return obj;\n  }\n  var nonWordAndColonTest = /[^\\w:]/g;\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n  /**\n   * @param {boolean} sanitize\n   * @param {string} base\n   * @param {string} href\n   */\n\n  function cleanUrl(sanitize, base, href) {\n    if (sanitize) {\n      var prot;\n\n      try {\n        prot = decodeURIComponent(unescape(href)).replace(nonWordAndColonTest, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n\n    return href;\n  }\n  var baseUrls = {};\n  var justDomain = /^[^:]+:\\/*[^/]*$/;\n  var protocol = /^([^:]+:)[\\s\\S]*$/;\n  var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n  /**\n   * @param {string} base\n   * @param {string} href\n   */\n\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (justDomain.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim(base, '/', true);\n      }\n    }\n\n    base = baseUrls[' ' + base];\n    var relativeBase = base.indexOf(':') === -1;\n\n    if (href.substring(0, 2) === '//') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(protocol, '$1') + href;\n    } else if (href.charAt(0) === '/') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(domain, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n  var noopTest = {\n    exec: function noopTest() {}\n  };\n  function merge(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n  function splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n      var escaped = false,\n          curr = offset;\n\n      while (--curr >= 0 && str[curr] === '\\\\') {\n        escaped = !escaped;\n      }\n\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n        cells = row.split(/ \\|/);\n    var i = 0; // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n\n    if (!cells[0].trim()) {\n      cells.shift();\n    }\n\n    if (cells.length > 0 && !cells[cells.length - 1].trim()) {\n      cells.pop();\n    }\n\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n\n    return cells;\n  }\n  /**\n   * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n   * /c*$/ is vulnerable to REDOS.\n   *\n   * @param {string} str\n   * @param {string} c\n   * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n   */\n\n  function rtrim(str, c, invert) {\n    var l = str.length;\n\n    if (l === 0) {\n      return '';\n    } // Length of suffix matching the invert condition.\n\n\n    var suffLen = 0; // Step left until we fail to match the invert condition.\n\n    while (suffLen < l) {\n      var currChar = str.charAt(l - suffLen - 1);\n\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n\n    return str.slice(0, l - suffLen);\n  }\n  function findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n\n    var l = str.length;\n    var level = 0,\n        i = 0;\n\n    for (; i < l; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n  function checkSanitizeDeprecation(opt) {\n    if (opt && opt.sanitize && !opt.silent) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n  } // copied from https://stackoverflow.com/a/5450113/806777\n\n  /**\n   * @param {string} pattern\n   * @param {number} count\n   */\n\n  function repeatString(pattern, count) {\n    if (count < 1) {\n      return '';\n    }\n\n    var result = '';\n\n    while (count > 1) {\n      if (count & 1) {\n        result += pattern;\n      }\n\n      count >>= 1;\n      pattern += pattern;\n    }\n\n    return result + pattern;\n  }\n\n  function outputLink(cap, link, raw, lexer) {\n    var href = link.href;\n    var title = link.title ? escape(link.title) : null;\n    var text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n    if (cap[0].charAt(0) !== '!') {\n      lexer.state.inLink = true;\n      var token = {\n        type: 'link',\n        raw: raw,\n        href: href,\n        title: title,\n        text: text,\n        tokens: lexer.inlineTokens(text, [])\n      };\n      lexer.state.inLink = false;\n      return token;\n    }\n\n    return {\n      type: 'image',\n      raw: raw,\n      href: href,\n      title: title,\n      text: escape(text)\n    };\n  }\n\n  function indentCodeCompensation(raw, text) {\n    var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n    if (matchIndentToCode === null) {\n      return text;\n    }\n\n    var indentToCode = matchIndentToCode[1];\n    return text.split('\\n').map(function (node) {\n      var matchIndentInNode = node.match(/^\\s+/);\n\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      var indentInNode = matchIndentInNode[0];\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    }).join('\\n');\n  }\n  /**\n   * Tokenizer\n   */\n\n\n  var Tokenizer = /*#__PURE__*/function () {\n    function Tokenizer(options) {\n      this.options = options || exports.defaults;\n    }\n\n    var _proto = Tokenizer.prototype;\n\n    _proto.space = function space(src) {\n      var cap = this.rules.block.newline.exec(src);\n\n      if (cap && cap[0].length > 0) {\n        return {\n          type: 'space',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.code = function code(src) {\n      var cap = this.rules.block.code.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ {1,4}/gm, '');\n        return {\n          type: 'code',\n          raw: cap[0],\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic ? rtrim(text, '\\n') : text\n        };\n      }\n    };\n\n    _proto.fences = function fences(src) {\n      var cap = this.rules.block.fences.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var text = indentCodeCompensation(raw, cap[3] || '');\n        return {\n          type: 'code',\n          raw: raw,\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: text\n        };\n      }\n    };\n\n    _proto.heading = function heading(src) {\n      var cap = this.rules.block.heading.exec(src);\n\n      if (cap) {\n        var text = cap[2].trim(); // remove trailing #s\n\n        if (/#$/.test(text)) {\n          var trimmed = rtrim(text, '#');\n\n          if (this.options.pedantic) {\n            text = trimmed.trim();\n          } else if (!trimmed || / $/.test(trimmed)) {\n            // CommonMark requires space before trailing #s\n            text = trimmed.trim();\n          }\n        }\n\n        var token = {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[1].length,\n          text: text,\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.hr = function hr(src) {\n      var cap = this.rules.block.hr.exec(src);\n\n      if (cap) {\n        return {\n          type: 'hr',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.blockquote = function blockquote(src) {\n      var cap = this.rules.block.blockquote.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n        return {\n          type: 'blockquote',\n          raw: cap[0],\n          tokens: this.lexer.blockTokens(text, []),\n          text: text\n        };\n      }\n    };\n\n    _proto.list = function list(src) {\n      var cap = this.rules.block.list.exec(src);\n\n      if (cap) {\n        var raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine, line, nextLine, rawLine, itemContents, endEarly;\n        var bull = cap[1].trim();\n        var isordered = bull.length > 1;\n        var list = {\n          type: 'list',\n          raw: '',\n          ordered: isordered,\n          start: isordered ? +bull.slice(0, -1) : '',\n          loose: false,\n          items: []\n        };\n        bull = isordered ? \"\\\\d{1,9}\\\\\" + bull.slice(-1) : \"\\\\\" + bull;\n\n        if (this.options.pedantic) {\n          bull = isordered ? bull : '[*+-]';\n        } // Get next list item\n\n\n        var itemRegex = new RegExp(\"^( {0,3}\" + bull + \")((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))\"); // Check if current bullet point can start a new List Item\n\n        while (src) {\n          endEarly = false;\n\n          if (!(cap = itemRegex.exec(src))) {\n            break;\n          }\n\n          if (this.rules.block.hr.test(src)) {\n            // End list if bullet was actually HR (possibly move into itemRegex?)\n            break;\n          }\n\n          raw = cap[0];\n          src = src.substring(raw.length);\n          line = cap[2].split('\\n', 1)[0];\n          nextLine = src.split('\\n', 1)[0];\n\n          if (this.options.pedantic) {\n            indent = 2;\n            itemContents = line.trimLeft();\n          } else {\n            indent = cap[2].search(/[^ ]/); // Find first non-space char\n\n            indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n\n            itemContents = line.slice(indent);\n            indent += cap[1].length;\n          }\n\n          blankLine = false;\n\n          if (!line && /^ *$/.test(nextLine)) {\n            // Items begin with at most one blank line\n            raw += nextLine + '\\n';\n            src = src.substring(nextLine.length + 1);\n            endEarly = true;\n          }\n\n          if (!endEarly) {\n            var nextBulletRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}(?:[*+-]|\\\\d{1,9}[.)])((?: [^\\\\n]*)?(?:\\\\n|$))\");\n            var hrRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)\"); // Check if following lines should be included in List Item\n\n            while (src) {\n              rawLine = src.split('\\n', 1)[0];\n              line = rawLine; // Re-align to follow commonmark nesting rules\n\n              if (this.options.pedantic) {\n                line = line.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n              } // End list item if found start of new bullet\n\n\n              if (nextBulletRegex.test(line)) {\n                break;\n              } // Horizontal rule found\n\n\n              if (hrRegex.test(src)) {\n                break;\n              }\n\n              if (line.search(/[^ ]/) >= indent || !line.trim()) {\n                // Dedent if possible\n                itemContents += '\\n' + line.slice(indent);\n              } else if (!blankLine) {\n                // Until blank line, item doesn't need indentation\n                itemContents += '\\n' + line;\n              } else {\n                // Otherwise, improper indentation ends this item\n                break;\n              }\n\n              if (!blankLine && !line.trim()) {\n                // Check if current line is blank\n                blankLine = true;\n              }\n\n              raw += rawLine + '\\n';\n              src = src.substring(rawLine.length + 1);\n            }\n          }\n\n          if (!list.loose) {\n            // If the previous item ended with a blank line, the list is loose\n            if (endsWithBlankLine) {\n              list.loose = true;\n            } else if (/\\n *\\n *$/.test(raw)) {\n              endsWithBlankLine = true;\n            }\n          } // Check for task list items\n\n\n          if (this.options.gfm) {\n            istask = /^\\[[ xX]\\] /.exec(itemContents);\n\n            if (istask) {\n              ischecked = istask[0] !== '[ ] ';\n              itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n            }\n          }\n\n          list.items.push({\n            type: 'list_item',\n            raw: raw,\n            task: !!istask,\n            checked: ischecked,\n            loose: false,\n            text: itemContents\n          });\n          list.raw += raw;\n        } // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n\n\n        list.items[list.items.length - 1].raw = raw.trimRight();\n        list.items[list.items.length - 1].text = itemContents.trimRight();\n        list.raw = list.raw.trimRight();\n        var l = list.items.length; // Item child tokens handled here at end because we needed to have the final item to trim it first\n\n        for (i = 0; i < l; i++) {\n          this.lexer.state.top = false;\n          list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n          var spacers = list.items[i].tokens.filter(function (t) {\n            return t.type === 'space';\n          });\n          var hasMultipleLineBreaks = spacers.every(function (t) {\n            var chars = t.raw.split('');\n            var lineBreaks = 0;\n\n            for (var _iterator = _createForOfIteratorHelperLoose(chars), _step; !(_step = _iterator()).done;) {\n              var _char = _step.value;\n\n              if (_char === '\\n') {\n                lineBreaks += 1;\n              }\n\n              if (lineBreaks > 1) {\n                return true;\n              }\n            }\n\n            return false;\n          });\n\n          if (!list.loose && spacers.length && hasMultipleLineBreaks) {\n            // Having a single line break doesn't mean a list is loose. A single line break is terminating the last list item\n            list.loose = true;\n            list.items[i].loose = true;\n          }\n        }\n\n        return list;\n      }\n    };\n\n    _proto.html = function html(src) {\n      var cap = this.rules.block.html.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'html',\n          raw: cap[0],\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: cap[0]\n        };\n\n        if (this.options.sanitize) {\n          token.type = 'paragraph';\n          token.text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n          token.tokens = [];\n          this.lexer.inline(token.text, token.tokens);\n        }\n\n        return token;\n      }\n    };\n\n    _proto.def = function def(src) {\n      var cap = this.rules.block.def.exec(src);\n\n      if (cap) {\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        var tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        return {\n          type: 'def',\n          tag: tag,\n          raw: cap[0],\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n    };\n\n    _proto.table = function table(src) {\n      var cap = this.rules.block.table.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells(cap[1]).map(function (c) {\n            return {\n              text: c\n            };\n          }),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          item.raw = cap[0];\n          var l = item.align.length;\n          var i, j, k, row;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.rows.length;\n\n          for (i = 0; i < l; i++) {\n            item.rows[i] = splitCells(item.rows[i], item.header.length).map(function (c) {\n              return {\n                text: c\n              };\n            });\n          } // parse child tokens inside headers and cells\n          // header child tokens\n\n\n          l = item.header.length;\n\n          for (j = 0; j < l; j++) {\n            item.header[j].tokens = [];\n            this.lexer.inline(item.header[j].text, item.header[j].tokens);\n          } // cell child tokens\n\n\n          l = item.rows.length;\n\n          for (j = 0; j < l; j++) {\n            row = item.rows[j];\n\n            for (k = 0; k < row.length; k++) {\n              row[k].tokens = [];\n              this.lexer.inline(row[k].text, row[k].tokens);\n            }\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.lheading = function lheading(src) {\n      var cap = this.rules.block.lheading.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1],\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.paragraph = function paragraph(src) {\n      var cap = this.rules.block.paragraph.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'paragraph',\n          raw: cap[0],\n          text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1],\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.text = function text(src) {\n      var cap = this.rules.block.text.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'text',\n          raw: cap[0],\n          text: cap[0],\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.escape = function escape$1(src) {\n      var cap = this.rules.inline.escape.exec(src);\n\n      if (cap) {\n        return {\n          type: 'escape',\n          raw: cap[0],\n          text: escape(cap[1])\n        };\n      }\n    };\n\n    _proto.tag = function tag(src) {\n      var cap = this.rules.inline.tag.exec(src);\n\n      if (cap) {\n        if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n          this.lexer.state.inLink = true;\n        } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n          this.lexer.state.inLink = false;\n        }\n\n        if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.lexer.state.inRawBlock = true;\n        } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.lexer.state.inRawBlock = false;\n        }\n\n        return {\n          type: this.options.sanitize ? 'text' : 'html',\n          raw: cap[0],\n          inLink: this.lexer.state.inLink,\n          inRawBlock: this.lexer.state.inRawBlock,\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.link = function link(src) {\n      var cap = this.rules.inline.link.exec(src);\n\n      if (cap) {\n        var trimmedUrl = cap[2].trim();\n\n        if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n          // commonmark requires matching angle brackets\n          if (!/>$/.test(trimmedUrl)) {\n            return;\n          } // ending angle bracket cannot be escaped\n\n\n          var rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n\n          if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n            return;\n          }\n        } else {\n          // find closing parenthesis\n          var lastParenIndex = findClosingBracket(cap[2], '()');\n\n          if (lastParenIndex > -1) {\n            var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n            var linkLen = start + cap[1].length + lastParenIndex;\n            cap[2] = cap[2].substring(0, lastParenIndex);\n            cap[0] = cap[0].substring(0, linkLen).trim();\n            cap[3] = '';\n          }\n        }\n\n        var href = cap[2];\n        var title = '';\n\n        if (this.options.pedantic) {\n          // split pedantic href and title\n          var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n\n        href = href.trim();\n\n        if (/^</.test(href)) {\n          if (this.options.pedantic && !/>$/.test(trimmedUrl)) {\n            // pedantic allows starting angle bracket without ending angle bracket\n            href = href.slice(1);\n          } else {\n            href = href.slice(1, -1);\n          }\n        }\n\n        return outputLink(cap, {\n          href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n          title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n        }, cap[0], this.lexer);\n      }\n    };\n\n    _proto.reflink = function reflink(src, links) {\n      var cap;\n\n      if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n        var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = links[link.toLowerCase()];\n\n        if (!link || !link.href) {\n          var text = cap[0].charAt(0);\n          return {\n            type: 'text',\n            raw: text,\n            text: text\n          };\n        }\n\n        return outputLink(cap, link, cap[0], this.lexer);\n      }\n    };\n\n    _proto.emStrong = function emStrong(src, maskedSrc, prevChar) {\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n\n      var match = this.rules.inline.emStrong.lDelim.exec(src);\n      if (!match) return; // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n\n      if (match[3] && prevChar.match(/(?:[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xBC-\\xBE\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u0660-\\u0669\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C9\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0966-\\u096F\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09F9\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AEF\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B71-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0BE6-\\u0BF2\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D58-\\u0D61\\u0D66-\\u0D78\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DE6-\\u0DEF\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F20-\\u0F33\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F-\\u1049\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u1090-\\u1099\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1369-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u1711\\u171F-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4C\\u1B50-\\u1B59\\u1B83-\\u1BA0\\u1BAE-\\u1BE5\\u1C00-\\u1C23\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2150-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2CFD\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3192-\\u3195\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA830-\\uA835\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uA9E0-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE1-\\uDEFB\\uDF00-\\uDF23\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67\\uDF80-\\uDF85\\uDF87-\\uDFB0\\uDFB2-\\uDFBA]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC58-\\uDC76\\uDC79-\\uDC9E\\uDCA7-\\uDCAF\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDD1B\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE40-\\uDE48\\uDE60-\\uDE7E\\uDE80-\\uDE9F\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDEEB-\\uDEEF\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF58-\\uDF72\\uDF78-\\uDF91\\uDFA9-\\uDFAF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDD23\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF27\\uDF30-\\uDF45\\uDF51-\\uDF54\\uDF70-\\uDF81\\uDFB0-\\uDFCB\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC52-\\uDC6F\\uDC71\\uDC72\\uDC75\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD03-\\uDD26\\uDD36-\\uDD3F\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDD0-\\uDDDA\\uDDDC\\uDDE1-\\uDDF4\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDEF0-\\uDEF9\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC50-\\uDC59\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEAA\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF30-\\uDF3B\\uDF40-\\uDF46]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCF2\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEB0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC50-\\uDC6C\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF2\\uDFB0\\uDFC0-\\uDFD4]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|\\uD80B[\\uDF90-\\uDFF0]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDE70-\\uDEBE\\uDEC0-\\uDEC9\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE96\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82B[\\uDFF0-\\uDFF3\\uDFF5-\\uDFFB\\uDFFD\\uDFFE]|\\uD82C[\\uDC00-\\uDD22\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD837[\\uDF00-\\uDF1E]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDE90-\\uDEAD\\uDEC0-\\uDEEB\\uDEF0-\\uDEF9]|\\uD839[\\uDFE0-\\uDFE6\\uDFE8-\\uDFEB\\uDFED\\uDFEE\\uDFF0-\\uDFFE]|\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCCF\\uDD00-\\uDD43\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDF\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF38\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])/)) return;\n      var nextChar = match[1] || match[2] || '';\n\n      if (!nextChar || nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))) {\n        var lLength = match[0].length - 1;\n        var rDelim,\n            rLength,\n            delimTotal = lLength,\n            midDelimTotal = 0;\n        var endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n        endReg.lastIndex = 0; // Clip maskedSrc to same section of string as src (move to lexer?)\n\n        maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n        while ((match = endReg.exec(maskedSrc)) != null) {\n          rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n          if (!rDelim) continue; // skip single * in __abc*abc__\n\n          rLength = rDelim.length;\n\n          if (match[3] || match[4]) {\n            // found another Left Delim\n            delimTotal += rLength;\n            continue;\n          } else if (match[5] || match[6]) {\n            // either Left or Right Delim\n            if (lLength % 3 && !((lLength + rLength) % 3)) {\n              midDelimTotal += rLength;\n              continue; // CommonMark Emphasis Rules 9-10\n            }\n          }\n\n          delimTotal -= rLength;\n          if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n          // Remove extra characters. *a*** -> *a*\n\n          rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal); // Create `em` if smallest delimiter has odd char count. *a***\n\n          if (Math.min(lLength, rLength) % 2) {\n            var _text = src.slice(1, lLength + match.index + rLength);\n\n            return {\n              type: 'em',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: _text,\n              tokens: this.lexer.inlineTokens(_text, [])\n            };\n          } // Create 'strong' if smallest delimiter has even char count. **a***\n\n\n          var text = src.slice(2, lLength + match.index + rLength - 1);\n          return {\n            type: 'strong',\n            raw: src.slice(0, lLength + match.index + rLength + 1),\n            text: text,\n            tokens: this.lexer.inlineTokens(text, [])\n          };\n        }\n      }\n    };\n\n    _proto.codespan = function codespan(src) {\n      var cap = this.rules.inline.code.exec(src);\n\n      if (cap) {\n        var text = cap[2].replace(/\\n/g, ' ');\n        var hasNonSpaceChars = /[^ ]/.test(text);\n        var hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n\n        if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n          text = text.substring(1, text.length - 1);\n        }\n\n        text = escape(text, true);\n        return {\n          type: 'codespan',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.br = function br(src) {\n      var cap = this.rules.inline.br.exec(src);\n\n      if (cap) {\n        return {\n          type: 'br',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.del = function del(src) {\n      var cap = this.rules.inline.del.exec(src);\n\n      if (cap) {\n        return {\n          type: 'del',\n          raw: cap[0],\n          text: cap[2],\n          tokens: this.lexer.inlineTokens(cap[2], [])\n        };\n      }\n    };\n\n    _proto.autolink = function autolink(src, mangle) {\n      var cap = this.rules.inline.autolink.exec(src);\n\n      if (cap) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n          href = 'mailto:' + text;\n        } else {\n          text = escape(cap[1]);\n          href = text;\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.url = function url(src, mangle) {\n      var cap;\n\n      if (cap = this.rules.inline.url.exec(src)) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          var prevCapZero;\n\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n\n          text = escape(cap[0]);\n\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.inlineText = function inlineText(src, smartypants) {\n      var cap = this.rules.inline.text.exec(src);\n\n      if (cap) {\n        var text;\n\n        if (this.lexer.state.inRawBlock) {\n          text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0];\n        } else {\n          text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n        }\n\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    return Tokenizer;\n  }();\n\n  /**\n   * Block-Level Grammar\n   */\n\n  var block = {\n    newline: /^(?: *(?:\\n|$))+/,\n    code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n    hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?<?([^\\s>]+)>?(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n    table: noopTest,\n    lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\n  block._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block.def = edit(block.def).replace('label', block._label).replace('title', block._title).getRegex();\n  block.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\n  block.listItemStart = edit(/^( *)(bull) */).replace('bull', block.bullet).getRegex();\n  block.list = edit(block.list).replace(/bull/g, block.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block.def.source + ')').getRegex();\n  block._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\n  block.html = edit(block.html, 'i').replace('comment', block._comment).replace('tag', block._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block.paragraph = edit(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '').replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block.blockquote = edit(block.blockquote).replace('paragraph', block.paragraph).getRegex();\n  /**\n   * Normal Block Grammar\n   */\n\n  block.normal = merge({}, block);\n  /**\n   * GFM Block Grammar\n   */\n\n  block.gfm = merge({}, block.normal, {\n    table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n\n  });\n  block.gfm.table = edit(block.gfm.table).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  block.gfm.paragraph = edit(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block.pedantic = merge({}, block.normal, {\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest,\n    // fences not supported\n    paragraph: edit(block.normal._paragraph).replace('hr', block.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n    nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n    reflinkSearch: 'reflink|nolink(?!\\\\()',\n    emStrong: {\n      lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n      //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n      //          () Skip orphan inside strong  () Consume to delim (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n      rDelimAst: /^[^_*]*?\\_\\_[^_*]*?\\*[^_*]*?(?=\\_\\_)|[^*]+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n      rDelimUnd: /^[^_*]*?\\*\\*[^_*]*?\\_[^_*]*?(?=\\*\\*)|[^_]+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n\n    },\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest,\n    text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n    punctuation: /^([\\spunctuation])/\n  }; // list of punctuation marks from CommonMark spec\n  // without * and _ to handle the different emphasis markers * and _\n\n  inline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\n  inline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex(); // sequences em should skip over [title](link), `code`, <html>\n\n  inline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n  inline.escapedEmSt = /\\\\\\*|\\\\_/g;\n  inline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n  inline.emStrong.lDelim = edit(inline.emStrong.lDelim).replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline.autolink = edit(inline.autolink).replace('scheme', inline._scheme).replace('email', inline._email).getRegex();\n  inline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline.tag = edit(inline.tag).replace('comment', inline._comment).replace('attribute', inline._attribute).getRegex();\n  inline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\n  inline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline.link = edit(inline.link).replace('label', inline._label).replace('href', inline._href).replace('title', inline._title).getRegex();\n  inline.reflink = edit(inline.reflink).replace('label', inline._label).replace('ref', block._label).getRegex();\n  inline.nolink = edit(inline.nolink).replace('ref', block._label).getRegex();\n  inline.reflinkSearch = edit(inline.reflinkSearch, 'g').replace('reflink', inline.reflink).replace('nolink', inline.nolink).getRegex();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline.normal = merge({}, inline);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline.pedantic = merge({}, inline.normal, {\n    strong: {\n      start: /^__|\\*\\*/,\n      middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n      endAst: /\\*\\*(?!\\*)/g,\n      endUnd: /__(?!_)/g\n    },\n    em: {\n      start: /^_|\\*/,\n      middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n      endAst: /\\*(?!\\*)/g,\n      endUnd: /_(?!_)/g\n    },\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline._label).getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline._label).getRegex()\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline.gfm = merge({}, inline.normal, {\n    escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n  });\n  inline.gfm.url = edit(inline.gfm.url, 'i').replace('email', inline.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline.breaks = merge({}, inline.gfm, {\n    br: edit(inline.br).replace('{2,}', '*').getRegex(),\n    text: edit(inline.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n\n  /**\n   * smartypants text replacement\n   * @param {string} text\n   */\n\n  function smartypants(text) {\n    return text // em-dashes\n    .replace(/---/g, \"\\u2014\") // en-dashes\n    .replace(/--/g, \"\\u2013\") // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n    .replace(/'/g, \"\\u2019\") // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n    .replace(/\"/g, \"\\u201D\") // ellipses\n    .replace(/\\.{3}/g, \"\\u2026\");\n  }\n  /**\n   * mangle email addresses\n   * @param {string} text\n   */\n\n\n  function mangle(text) {\n    var out = '',\n        i,\n        ch;\n    var l = text.length;\n\n    for (i = 0; i < l; i++) {\n      ch = text.charCodeAt(i);\n\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n  /**\n   * Block Lexer\n   */\n\n\n  var Lexer = /*#__PURE__*/function () {\n    function Lexer(options) {\n      this.tokens = [];\n      this.tokens.links = Object.create(null);\n      this.options = options || exports.defaults;\n      this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n      this.tokenizer = this.options.tokenizer;\n      this.tokenizer.options = this.options;\n      this.tokenizer.lexer = this;\n      this.inlineQueue = [];\n      this.state = {\n        inLink: false,\n        inRawBlock: false,\n        top: true\n      };\n      var rules = {\n        block: block.normal,\n        inline: inline.normal\n      };\n\n      if (this.options.pedantic) {\n        rules.block = block.pedantic;\n        rules.inline = inline.pedantic;\n      } else if (this.options.gfm) {\n        rules.block = block.gfm;\n\n        if (this.options.breaks) {\n          rules.inline = inline.breaks;\n        } else {\n          rules.inline = inline.gfm;\n        }\n      }\n\n      this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n\n\n    /**\n     * Static Lex Method\n     */\n    Lexer.lex = function lex(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    ;\n\n    Lexer.lexInline = function lexInline(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    ;\n\n    var _proto = Lexer.prototype;\n\n    _proto.lex = function lex(src) {\n      src = src.replace(/\\r\\n|\\r/g, '\\n');\n      this.blockTokens(src, this.tokens);\n      var next;\n\n      while (next = this.inlineQueue.shift()) {\n        this.inlineTokens(next.src, next.tokens);\n      }\n\n      return this.tokens;\n    }\n    /**\n     * Lexing\n     */\n    ;\n\n    _proto.blockTokens = function blockTokens(src, tokens) {\n      var _this = this;\n\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (this.options.pedantic) {\n        src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n      } else {\n        src = src.replace(/^( *)(\\t+)/gm, function (_, leading, tabs) {\n          return leading + '    '.repeat(tabs.length);\n        });\n      }\n\n      var token, lastToken, cutSrc, lastParagraphClipped;\n\n      while (src) {\n        if (this.options.extensions && this.options.extensions.block && this.options.extensions.block.some(function (extTokenizer) {\n          if (token = extTokenizer.call({\n            lexer: _this\n          }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n\n          return false;\n        })) {\n          continue;\n        } // newline\n\n\n        if (token = this.tokenizer.space(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.raw.length === 1 && tokens.length > 0) {\n            // if there's a single \\n as a spacer, it's terminating the last line,\n            // so move it there so that we don't get unecessary paragraph tags\n            tokens[tokens.length - 1].raw += '\\n';\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.code(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1]; // An indented code block cannot interrupt a paragraph.\n\n          if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // fences\n\n\n        if (token = this.tokenizer.fences(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // heading\n\n\n        if (token = this.tokenizer.heading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // hr\n\n\n        if (token = this.tokenizer.hr(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // blockquote\n\n\n        if (token = this.tokenizer.blockquote(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // list\n\n\n        if (token = this.tokenizer.list(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // html\n\n\n        if (token = this.tokenizer.html(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // def\n\n\n        if (token = this.tokenizer.def(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.raw;\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else if (!this.tokens.links[token.tag]) {\n            this.tokens.links[token.tag] = {\n              href: token.href,\n              title: token.title\n            };\n          }\n\n          continue;\n        } // table (gfm)\n\n\n        if (token = this.tokenizer.table(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // lheading\n\n\n        if (token = this.tokenizer.lheading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // top-level paragraph\n        // prevent paragraph consuming extensions by clipping 'src' to extension start\n\n\n        cutSrc = src;\n\n        if (this.options.extensions && this.options.extensions.startBlock) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n\n            _this.options.extensions.startBlock.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call({\n                lexer: this\n              }, tempSrc);\n\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n\n        if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastParagraphClipped && lastToken.type === 'paragraph') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue.pop();\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          lastParagraphClipped = cutSrc.length !== src.length;\n          src = src.substring(token.raw.length);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.text(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue.pop();\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      this.state.top = true;\n      return tokens;\n    };\n\n    _proto.inline = function inline(src, tokens) {\n      this.inlineQueue.push({\n        src: src,\n        tokens: tokens\n      });\n    }\n    /**\n     * Lexing/Compiling\n     */\n    ;\n\n    _proto.inlineTokens = function inlineTokens(src, tokens) {\n      var _this2 = this;\n\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      var token, lastToken, cutSrc; // String with links masked to avoid interference with em and strong\n\n      var maskedSrc = src;\n      var match;\n      var keepPrevChar, prevChar; // Mask out reflinks\n\n      if (this.tokens.links) {\n        var links = Object.keys(this.tokens.links);\n\n        if (links.length > 0) {\n          while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n            if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n              maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n            }\n          }\n        }\n      } // Mask out other blocks\n\n\n      while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n      } // Mask out escaped em & strong delimiters\n\n\n      while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      }\n\n      while (src) {\n        if (!keepPrevChar) {\n          prevChar = '';\n        }\n\n        keepPrevChar = false; // extensions\n\n        if (this.options.extensions && this.options.extensions.inline && this.options.extensions.inline.some(function (extTokenizer) {\n          if (token = extTokenizer.call({\n            lexer: _this2\n          }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n\n          return false;\n        })) {\n          continue;\n        } // escape\n\n\n        if (token = this.tokenizer.escape(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // tag\n\n\n        if (token = this.tokenizer.tag(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // link\n\n\n        if (token = this.tokenizer.link(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // reflink, nolink\n\n\n        if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // em & strong\n\n\n        if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.codespan(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // br\n\n\n        if (token = this.tokenizer.br(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // del (gfm)\n\n\n        if (token = this.tokenizer.del(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // autolink\n\n\n        if (token = this.tokenizer.autolink(src, mangle)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // url (gfm)\n\n\n        if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n        // prevent inlineText consuming extensions by clipping 'src' to extension start\n\n\n        cutSrc = src;\n\n        if (this.options.extensions && this.options.extensions.startInline) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n\n            _this2.options.extensions.startInline.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call({\n                lexer: this\n              }, tempSrc);\n\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n\n        if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n          src = src.substring(token.raw.length);\n\n          if (token.raw.slice(-1) !== '_') {\n            // Track prevChar before string of ____ started\n            prevChar = token.raw.slice(-1);\n          }\n\n          keepPrevChar = true;\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _createClass(Lexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return {\n          block: block,\n          inline: inline\n        };\n      }\n    }]);\n\n    return Lexer;\n  }();\n\n  /**\n   * Renderer\n   */\n\n  var Renderer = /*#__PURE__*/function () {\n    function Renderer(options) {\n      this.options = options || exports.defaults;\n    }\n\n    var _proto = Renderer.prototype;\n\n    _proto.code = function code(_code, infostring, escaped) {\n      var lang = (infostring || '').match(/\\S*/)[0];\n\n      if (this.options.highlight) {\n        var out = this.options.highlight(_code, lang);\n\n        if (out != null && out !== _code) {\n          escaped = true;\n          _code = out;\n        }\n      }\n\n      _code = _code.replace(/\\n$/, '') + '\\n';\n\n      if (!lang) {\n        return '<pre><code>' + (escaped ? _code : escape(_code, true)) + '</code></pre>\\n';\n      }\n\n      return '<pre><code class=\"' + this.options.langPrefix + escape(lang, true) + '\">' + (escaped ? _code : escape(_code, true)) + '</code></pre>\\n';\n    }\n    /**\n     * @param {string} quote\n     */\n    ;\n\n    _proto.blockquote = function blockquote(quote) {\n      return \"<blockquote>\\n\" + quote + \"</blockquote>\\n\";\n    };\n\n    _proto.html = function html(_html) {\n      return _html;\n    }\n    /**\n     * @param {string} text\n     * @param {string} level\n     * @param {string} raw\n     * @param {any} slugger\n     */\n    ;\n\n    _proto.heading = function heading(text, level, raw, slugger) {\n      if (this.options.headerIds) {\n        var id = this.options.headerPrefix + slugger.slug(raw);\n        return \"<h\" + level + \" id=\\\"\" + id + \"\\\">\" + text + \"</h\" + level + \">\\n\";\n      } // ignore IDs\n\n\n      return \"<h\" + level + \">\" + text + \"</h\" + level + \">\\n\";\n    };\n\n    _proto.hr = function hr() {\n      return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n\n    _proto.list = function list(body, ordered, start) {\n      var type = ordered ? 'ol' : 'ul',\n          startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n      return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.listitem = function listitem(text) {\n      return \"<li>\" + text + \"</li>\\n\";\n    };\n\n    _proto.checkbox = function checkbox(checked) {\n      return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.paragraph = function paragraph(text) {\n      return \"<p>\" + text + \"</p>\\n\";\n    }\n    /**\n     * @param {string} header\n     * @param {string} body\n     */\n    ;\n\n    _proto.table = function table(header, body) {\n      if (body) body = \"<tbody>\" + body + \"</tbody>\";\n      return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n    }\n    /**\n     * @param {string} content\n     */\n    ;\n\n    _proto.tablerow = function tablerow(content) {\n      return \"<tr>\\n\" + content + \"</tr>\\n\";\n    };\n\n    _proto.tablecell = function tablecell(content, flags) {\n      var type = flags.header ? 'th' : 'td';\n      var tag = flags.align ? \"<\" + type + \" align=\\\"\" + flags.align + \"\\\">\" : \"<\" + type + \">\";\n      return tag + content + (\"</\" + type + \">\\n\");\n    }\n    /**\n     * span level renderer\n     * @param {string} text\n     */\n    ;\n\n    _proto.strong = function strong(text) {\n      return \"<strong>\" + text + \"</strong>\";\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.em = function em(text) {\n      return \"<em>\" + text + \"</em>\";\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.codespan = function codespan(text) {\n      return \"<code>\" + text + \"</code>\";\n    };\n\n    _proto.br = function br() {\n      return this.options.xhtml ? '<br/>' : '<br>';\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.del = function del(text) {\n      return \"<del>\" + text + \"</del>\";\n    }\n    /**\n     * @param {string} href\n     * @param {string} title\n     * @param {string} text\n     */\n    ;\n\n    _proto.link = function link(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<a href=\"' + escape(href) + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += '>' + text + '</a>';\n      return out;\n    }\n    /**\n     * @param {string} href\n     * @param {string} title\n     * @param {string} text\n     */\n    ;\n\n    _proto.image = function image(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = \"<img src=\\\"\" + href + \"\\\" alt=\\\"\" + text + \"\\\"\";\n\n      if (title) {\n        out += \" title=\\\"\" + title + \"\\\"\";\n      }\n\n      out += this.options.xhtml ? '/>' : '>';\n      return out;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    return Renderer;\n  }();\n\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n  var TextRenderer = /*#__PURE__*/function () {\n    function TextRenderer() {}\n\n    var _proto = TextRenderer.prototype;\n\n    // no need for block level renderers\n    _proto.strong = function strong(text) {\n      return text;\n    };\n\n    _proto.em = function em(text) {\n      return text;\n    };\n\n    _proto.codespan = function codespan(text) {\n      return text;\n    };\n\n    _proto.del = function del(text) {\n      return text;\n    };\n\n    _proto.html = function html(text) {\n      return text;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    _proto.link = function link(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.image = function image(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.br = function br() {\n      return '';\n    };\n\n    return TextRenderer;\n  }();\n\n  /**\n   * Slugger generates header id\n   */\n  var Slugger = /*#__PURE__*/function () {\n    function Slugger() {\n      this.seen = {};\n    }\n    /**\n     * @param {string} value\n     */\n\n\n    var _proto = Slugger.prototype;\n\n    _proto.serialize = function serialize(value) {\n      return value.toLowerCase().trim() // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '') // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n    }\n    /**\n     * Finds the next safe (unique) slug to use\n     * @param {string} originalSlug\n     * @param {boolean} isDryRun\n     */\n    ;\n\n    _proto.getNextSafeSlug = function getNextSafeSlug(originalSlug, isDryRun) {\n      var slug = originalSlug;\n      var occurenceAccumulator = 0;\n\n      if (this.seen.hasOwnProperty(slug)) {\n        occurenceAccumulator = this.seen[originalSlug];\n\n        do {\n          occurenceAccumulator++;\n          slug = originalSlug + '-' + occurenceAccumulator;\n        } while (this.seen.hasOwnProperty(slug));\n      }\n\n      if (!isDryRun) {\n        this.seen[originalSlug] = occurenceAccumulator;\n        this.seen[slug] = 0;\n      }\n\n      return slug;\n    }\n    /**\n     * Convert string to unique id\n     * @param {object} [options]\n     * @param {boolean} [options.dryrun] Generates the next unique slug without\n     * updating the internal accumulator.\n     */\n    ;\n\n    _proto.slug = function slug(value, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var slug = this.serialize(value);\n      return this.getNextSafeSlug(slug, options.dryrun);\n    };\n\n    return Slugger;\n  }();\n\n  /**\n   * Parsing & Compiling\n   */\n\n  var Parser = /*#__PURE__*/function () {\n    function Parser(options) {\n      this.options = options || exports.defaults;\n      this.options.renderer = this.options.renderer || new Renderer();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n      this.textRenderer = new TextRenderer();\n      this.slugger = new Slugger();\n    }\n    /**\n     * Static Parse Method\n     */\n\n\n    Parser.parse = function parse(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    ;\n\n    Parser.parseInline = function parseInline(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    ;\n\n    var _proto = Parser.prototype;\n\n    _proto.parse = function parse(tokens, top) {\n      if (top === void 0) {\n        top = true;\n      }\n\n      var out = '',\n          i,\n          j,\n          k,\n          l2,\n          l3,\n          row,\n          cell,\n          header,\n          body,\n          token,\n          ordered,\n          start,\n          loose,\n          itemBody,\n          item,\n          checked,\n          task,\n          checkbox,\n          ret;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i]; // Run any renderer extensions\n\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call({\n            parser: this\n          }, token);\n\n          if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n\n        switch (token.type) {\n          case 'space':\n            {\n              continue;\n            }\n\n          case 'hr':\n            {\n              out += this.renderer.hr();\n              continue;\n            }\n\n          case 'heading':\n            {\n              out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n              continue;\n            }\n\n          case 'code':\n            {\n              out += this.renderer.code(token.text, token.lang, token.escaped);\n              continue;\n            }\n\n          case 'table':\n            {\n              header = ''; // header\n\n              cell = '';\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                cell += this.renderer.tablecell(this.parseInline(token.header[j].tokens), {\n                  header: true,\n                  align: token.align[j]\n                });\n              }\n\n              header += this.renderer.tablerow(cell);\n              body = '';\n              l2 = token.rows.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.rows[j];\n                cell = '';\n                l3 = row.length;\n\n                for (k = 0; k < l3; k++) {\n                  cell += this.renderer.tablecell(this.parseInline(row[k].tokens), {\n                    header: false,\n                    align: token.align[k]\n                  });\n                }\n\n                body += this.renderer.tablerow(cell);\n              }\n\n              out += this.renderer.table(header, body);\n              continue;\n            }\n\n          case 'blockquote':\n            {\n              body = this.parse(token.tokens);\n              out += this.renderer.blockquote(body);\n              continue;\n            }\n\n          case 'list':\n            {\n              ordered = token.ordered;\n              start = token.start;\n              loose = token.loose;\n              l2 = token.items.length;\n              body = '';\n\n              for (j = 0; j < l2; j++) {\n                item = token.items[j];\n                checked = item.checked;\n                task = item.task;\n                itemBody = '';\n\n                if (item.task) {\n                  checkbox = this.renderer.checkbox(checked);\n\n                  if (loose) {\n                    if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                      item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n\n                      if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                      }\n                    } else {\n                      item.tokens.unshift({\n                        type: 'text',\n                        text: checkbox\n                      });\n                    }\n                  } else {\n                    itemBody += checkbox;\n                  }\n                }\n\n                itemBody += this.parse(item.tokens, loose);\n                body += this.renderer.listitem(itemBody, task, checked);\n              }\n\n              out += this.renderer.list(body, ordered, start);\n              continue;\n            }\n\n          case 'html':\n            {\n              // TODO parse inline content if parameter markdown=1\n              out += this.renderer.html(token.text);\n              continue;\n            }\n\n          case 'paragraph':\n            {\n              out += this.renderer.paragraph(this.parseInline(token.tokens));\n              continue;\n            }\n\n          case 'text':\n            {\n              body = token.tokens ? this.parseInline(token.tokens) : token.text;\n\n              while (i + 1 < l && tokens[i + 1].type === 'text') {\n                token = tokens[++i];\n                body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n              }\n\n              out += top ? this.renderer.paragraph(body) : body;\n              continue;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    ;\n\n    _proto.parseInline = function parseInline(tokens, renderer) {\n      renderer = renderer || this.renderer;\n      var out = '',\n          i,\n          token,\n          ret;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i]; // Run any renderer extensions\n\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call({\n            parser: this\n          }, token);\n\n          if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n\n        switch (token.type) {\n          case 'escape':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          case 'html':\n            {\n              out += renderer.html(token.text);\n              break;\n            }\n\n          case 'link':\n            {\n              out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'image':\n            {\n              out += renderer.image(token.href, token.title, token.text);\n              break;\n            }\n\n          case 'strong':\n            {\n              out += renderer.strong(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'em':\n            {\n              out += renderer.em(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'codespan':\n            {\n              out += renderer.codespan(token.text);\n              break;\n            }\n\n          case 'br':\n            {\n              out += renderer.br();\n              break;\n            }\n\n          case 'del':\n            {\n              out += renderer.del(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'text':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    };\n\n    return Parser;\n  }();\n\n  /**\n   * Marked\n   */\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    if (callback) {\n      var highlight = opt.highlight;\n      var tokens;\n\n      try {\n        tokens = Lexer.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n\n      var done = function done(err) {\n        var out;\n\n        if (!err) {\n          try {\n            if (opt.walkTokens) {\n              marked.walkTokens(tokens, opt.walkTokens);\n            }\n\n            out = Parser.parse(tokens, opt);\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n      if (!tokens.length) return done();\n      var pending = 0;\n      marked.walkTokens(tokens, function (token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(function () {\n            highlight(token.text, token.lang, function (err, code) {\n              if (err) {\n                return done(err);\n              }\n\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    try {\n      var _tokens = Lexer.lex(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(_tokens, opt.walkTokens);\n      }\n\n      return Parser.parse(_tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  }\n  /**\n   * Options\n   */\n\n  marked.options = marked.setOptions = function (opt) {\n    merge(marked.defaults, opt);\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n\n  marked.getDefaults = getDefaults;\n  marked.defaults = exports.defaults;\n  /**\n   * Use Extension\n   */\n\n  marked.use = function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var opts = merge.apply(void 0, [{}].concat(args));\n    var extensions = marked.defaults.extensions || {\n      renderers: {},\n      childTokens: {}\n    };\n    var hasExtensions;\n    args.forEach(function (pack) {\n      // ==-- Parse \"addon\" extensions --== //\n      if (pack.extensions) {\n        hasExtensions = true;\n        pack.extensions.forEach(function (ext) {\n          if (!ext.name) {\n            throw new Error('extension name required');\n          }\n\n          if (ext.renderer) {\n            // Renderer extensions\n            var prevRenderer = extensions.renderers ? extensions.renderers[ext.name] : null;\n\n            if (prevRenderer) {\n              // Replace extension with func to run new extension but fall back if false\n              extensions.renderers[ext.name] = function () {\n                for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                  args[_key2] = arguments[_key2];\n                }\n\n                var ret = ext.renderer.apply(this, args);\n\n                if (ret === false) {\n                  ret = prevRenderer.apply(this, args);\n                }\n\n                return ret;\n              };\n            } else {\n              extensions.renderers[ext.name] = ext.renderer;\n            }\n          }\n\n          if (ext.tokenizer) {\n            // Tokenizer Extensions\n            if (!ext.level || ext.level !== 'block' && ext.level !== 'inline') {\n              throw new Error(\"extension level must be 'block' or 'inline'\");\n            }\n\n            if (extensions[ext.level]) {\n              extensions[ext.level].unshift(ext.tokenizer);\n            } else {\n              extensions[ext.level] = [ext.tokenizer];\n            }\n\n            if (ext.start) {\n              // Function to check for start of token\n              if (ext.level === 'block') {\n                if (extensions.startBlock) {\n                  extensions.startBlock.push(ext.start);\n                } else {\n                  extensions.startBlock = [ext.start];\n                }\n              } else if (ext.level === 'inline') {\n                if (extensions.startInline) {\n                  extensions.startInline.push(ext.start);\n                } else {\n                  extensions.startInline = [ext.start];\n                }\n              }\n            }\n          }\n\n          if (ext.childTokens) {\n            // Child tokens to be visited by walkTokens\n            extensions.childTokens[ext.name] = ext.childTokens;\n          }\n        });\n      } // ==-- Parse \"overwrite\" extensions --== //\n\n\n      if (pack.renderer) {\n        (function () {\n          var renderer = marked.defaults.renderer || new Renderer();\n\n          var _loop = function _loop(prop) {\n            var prevRenderer = renderer[prop]; // Replace renderer with func to run extension, but fall back if false\n\n            renderer[prop] = function () {\n              for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                args[_key3] = arguments[_key3];\n              }\n\n              var ret = pack.renderer[prop].apply(renderer, args);\n\n              if (ret === false) {\n                ret = prevRenderer.apply(renderer, args);\n              }\n\n              return ret;\n            };\n          };\n\n          for (var prop in pack.renderer) {\n            _loop(prop);\n          }\n\n          opts.renderer = renderer;\n        })();\n      }\n\n      if (pack.tokenizer) {\n        (function () {\n          var tokenizer = marked.defaults.tokenizer || new Tokenizer();\n\n          var _loop2 = function _loop2(prop) {\n            var prevTokenizer = tokenizer[prop]; // Replace tokenizer with func to run extension, but fall back if false\n\n            tokenizer[prop] = function () {\n              for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n                args[_key4] = arguments[_key4];\n              }\n\n              var ret = pack.tokenizer[prop].apply(tokenizer, args);\n\n              if (ret === false) {\n                ret = prevTokenizer.apply(tokenizer, args);\n              }\n\n              return ret;\n            };\n          };\n\n          for (var prop in pack.tokenizer) {\n            _loop2(prop);\n          }\n\n          opts.tokenizer = tokenizer;\n        })();\n      } // ==-- Parse WalkTokens extensions --== //\n\n\n      if (pack.walkTokens) {\n        var _walkTokens = marked.defaults.walkTokens;\n\n        opts.walkTokens = function (token) {\n          pack.walkTokens.call(this, token);\n\n          if (_walkTokens) {\n            _walkTokens.call(this, token);\n          }\n        };\n      }\n\n      if (hasExtensions) {\n        opts.extensions = extensions;\n      }\n\n      marked.setOptions(opts);\n    });\n  };\n  /**\n   * Run callback for every token\n   */\n\n\n  marked.walkTokens = function (tokens, callback) {\n    var _loop3 = function _loop3() {\n      var token = _step.value;\n      callback.call(marked, token);\n\n      switch (token.type) {\n        case 'table':\n          {\n            for (var _iterator2 = _createForOfIteratorHelperLoose(token.header), _step2; !(_step2 = _iterator2()).done;) {\n              var cell = _step2.value;\n              marked.walkTokens(cell.tokens, callback);\n            }\n\n            for (var _iterator3 = _createForOfIteratorHelperLoose(token.rows), _step3; !(_step3 = _iterator3()).done;) {\n              var row = _step3.value;\n\n              for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\n                var _cell = _step4.value;\n                marked.walkTokens(_cell.tokens, callback);\n              }\n            }\n\n            break;\n          }\n\n        case 'list':\n          {\n            marked.walkTokens(token.items, callback);\n            break;\n          }\n\n        default:\n          {\n            if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) {\n              // Walk any extensions\n              marked.defaults.extensions.childTokens[token.type].forEach(function (childTokens) {\n                marked.walkTokens(token[childTokens], callback);\n              });\n            } else if (token.tokens) {\n              marked.walkTokens(token.tokens, callback);\n            }\n          }\n      }\n    };\n\n    for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n      _loop3();\n    }\n  };\n  /**\n   * Parse Inline\n   * @param {string} src\n   */\n\n\n  marked.parseInline = function (src, opt) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked.parseInline(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked.parseInline(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    try {\n      var tokens = Lexer.lexInline(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n\n      return Parser.parseInline(tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  };\n  /**\n   * Expose\n   */\n\n\n  marked.Parser = Parser;\n  marked.parser = Parser.parse;\n  marked.Renderer = Renderer;\n  marked.TextRenderer = TextRenderer;\n  marked.Lexer = Lexer;\n  marked.lexer = Lexer.lex;\n  marked.Tokenizer = Tokenizer;\n  marked.Slugger = Slugger;\n  marked.parse = marked;\n  var options = marked.options;\n  var setOptions = marked.setOptions;\n  var use = marked.use;\n  var walkTokens = marked.walkTokens;\n  var parseInline = marked.parseInline;\n  var parse = marked;\n  var parser = Parser.parse;\n  var lexer = Lexer.lex;\n\n  exports.Lexer = Lexer;\n  exports.Parser = Parser;\n  exports.Renderer = Renderer;\n  exports.Slugger = Slugger;\n  exports.TextRenderer = TextRenderer;\n  exports.Tokenizer = Tokenizer;\n  exports.getDefaults = getDefaults;\n  exports.lexer = lexer;\n  exports.marked = marked;\n  exports.options = options;\n  exports.parse = parse;\n  exports.parseInline = parseInline;\n  exports.parser = parser;\n  exports.setOptions = setOptions;\n  exports.use = use;\n  exports.walkTokens = walkTokens;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n// ESM-uncomment-begin\n// })();\n// export var marked = (__marked_exports || exports);\n// ESM-uncomment-end\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\n//@ts-check\n\n(function () {\n\n\t/**\n\t * @returns {{mark(name:string):void, getMarks():{name:string, startTime:number}[]}}\n\t */\n\tfunction _definePolyfillMarks(timeOrigin) {\n\n\t\tconst _data = [];\n\t\tif (typeof timeOrigin === 'number') {\n\t\t\t_data.push('code/timeOrigin', timeOrigin);\n\t\t}\n\n\t\tfunction mark(name) {\n\t\t\t_data.push(name, Date.now());\n\t\t}\n\t\tfunction getMarks() {\n\t\t\tconst result = [];\n\t\t\tfor (let i = 0; i < _data.length; i += 2) {\n\t\t\t\tresult.push({\n\t\t\t\t\tname: _data[i],\n\t\t\t\t\tstartTime: _data[i + 1],\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\treturn { mark, getMarks };\n\t}\n\n\t/**\n\t * @returns {{mark(name:string):void, getMarks():{name:string, startTime:number}[]}}\n\t */\n\tfunction _define() {\n\n\t\t// Identify browser environment when following property is not present\n\t\t// https://nodejs.org/dist/latest-v16.x/docs/api/perf_hooks.html#performancenodetiming\n\t\tif (typeof performance === 'object' && typeof performance.mark === 'function' && !performance.nodeTiming) {\n\t\t\t// in a browser context, reuse performance-util\n\n\t\t\tif (typeof performance.timeOrigin !== 'number' && !performance.timing) {\n\t\t\t\t// safari & webworker: because there is no timeOrigin and no workaround\n\t\t\t\t// we use the `Date.now`-based polyfill.\n\t\t\t\treturn _definePolyfillMarks();\n\n\t\t\t} else {\n\t\t\t\t// use \"native\" performance for mark and getMarks\n\t\t\t\treturn {\n\t\t\t\t\tmark(name) {\n\t\t\t\t\t\tperformance.mark(name);\n\t\t\t\t\t},\n\t\t\t\t\tgetMarks() {\n\t\t\t\t\t\tlet timeOrigin = performance.timeOrigin;\n\t\t\t\t\t\tif (typeof timeOrigin !== 'number') {\n\t\t\t\t\t\t\t// safari: there is no timerOrigin but in renderers there is the timing-property\n\t\t\t\t\t\t\t// see https://bugs.webkit.org/show_bug.cgi?id=174862\n\t\t\t\t\t\t\ttimeOrigin = performance.timing.navigationStart || performance.timing.redirectStart || performance.timing.fetchStart;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst result = [{ name: 'code/timeOrigin', startTime: Math.round(timeOrigin) }];\n\t\t\t\t\t\tfor (const entry of performance.getEntriesByType('mark')) {\n\t\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\t\tname: entry.name,\n\t\t\t\t\t\t\t\tstartTime: Math.round(timeOrigin + entry.startTime)\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t} else if (typeof process === 'object') {\n\t\t\t// node.js: use the normal polyfill but add the timeOrigin\n\t\t\t// from the node perf_hooks API as very first mark\n\t\t\tconst timeOrigin = Math.round((require.nodeRequire || require)('perf_hooks').performance.timeOrigin);\n\t\t\treturn _definePolyfillMarks(timeOrigin);\n\n\t\t} else {\n\t\t\t// unknown environment\n\t\t\tconsole.trace('perf-util loaded in UNKNOWN environment');\n\t\t\treturn _definePolyfillMarks();\n\t\t}\n\t}\n\n\tfunction _factory(sharedObj) {\n\t\tif (!sharedObj.MonacoPerformanceMarks) {\n\t\t\tsharedObj.MonacoPerformanceMarks = _define();\n\t\t}\n\t\treturn sharedObj.MonacoPerformanceMarks;\n\t}\n\n\t// This module can be loaded in an amd and commonjs-context.\n\t// Because we want both instances to use the same perf-data\n\t// we store them globally\n\n\t// eslint-disable-next-line no-var\n\tvar sharedObj;\n\tif (typeof global === 'object') {\n\t\t// nodejs\n\t\tsharedObj = global;\n\t} else if (typeof self === 'object') {\n\t\t// browser\n\t\tsharedObj = self;\n\t} else {\n\t\tsharedObj = {};\n\t}\n\n\tif (typeof define === 'function') {\n\t\t// amd\n\t\tdefine(\"vs/base/common/performance\", [], function () { return _factory(sharedObj); });\n\t} else if (typeof module === 'object' && typeof module.exports === 'object') {\n\t\t// commonjs\n\t\tmodule.exports = _factory(sharedObj);\n\t} else {\n\t\tconsole.trace('perf-util defined in UNKNOWN context (neither requirejs or commonjs)');\n\t\tsharedObj.perf = _factory(sharedObj);\n\t}\n\n})();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nconst LANGUAGE_DEFAULT = 'en';\n\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isLinuxSnap = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isElectron = false;\nlet _isIOS = false;\nlet _isCI = false;\nlet _locale: string | undefined = undefined;\nlet _language: string = LANGUAGE_DEFAULT;\nlet _translationsConfigFile: string | undefined = undefined;\nlet _userAgent: string | undefined = undefined;\n\ninterface NLSConfig {\n\tlocale: string;\n\tavailableLanguages: { [key: string]: string };\n\t_translationsConfigFile: string;\n}\n\nexport interface IProcessEnvironment {\n\t[key: string]: string | undefined;\n}\n\n/**\n * This interface is intentionally not identical to node.js\n * process because it also works in sandboxed environments\n * where the process object is implemented differently. We\n * define the properties here that we need for `platform`\n * to work and nothing else.\n */\nexport interface INodeProcess {\n\tplatform: string;\n\tarch: string;\n\tenv: IProcessEnvironment;\n\tversions?: {\n\t\telectron?: string;\n\t};\n\ttype?: string;\n\tcwd: () => string;\n}\n\ndeclare const process: INodeProcess;\ndeclare const global: unknown;\ndeclare const self: unknown;\n\nexport const globals: any = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});\n\nlet nodeProcess: INodeProcess | undefined = undefined;\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n\t// Native environment (sandboxed)\n\tnodeProcess = globals.vscode.process;\n} else if (typeof process !== 'undefined') {\n\t// Native environment (non-sandboxed)\n\tnodeProcess = process;\n}\n\nconst isElectronProcess = typeof nodeProcess?.versions?.electron === 'string';\nconst isElectronRenderer = isElectronProcess && nodeProcess?.type === 'renderer';\n\ninterface INavigator {\n\tuserAgent: string;\n\tmaxTouchPoints?: number;\n}\ndeclare const navigator: INavigator;\n\n// Web environment\nif (typeof navigator === 'object' && !isElectronRenderer) {\n\t_userAgent = navigator.userAgent;\n\t_isWindows = _userAgent.indexOf('Windows') >= 0;\n\t_isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n\t_isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n\t_isLinux = _userAgent.indexOf('Linux') >= 0;\n\t_isWeb = true;\n\n\t_locale = LANGUAGE_DEFAULT;\n\n\t_language = _locale;\n\tconst el = typeof document !== 'undefined' && document.getElementById('vscode-remote-nls-configuration');\n\tconst rawNlsConfig = el && el.getAttribute('data-settings');\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t\t_language = nlsConfig.availableLanguages['*'] || LANGUAGE_DEFAULT;\n\t\t} catch (error) { /* Oh well. */ }\n\t}\n}\n\n// Native environment\nelse if (typeof nodeProcess === 'object') {\n\t_isWindows = (nodeProcess.platform === 'win32');\n\t_isMacintosh = (nodeProcess.platform === 'darwin');\n\t_isLinux = (nodeProcess.platform === 'linux');\n\t_isLinuxSnap = _isLinux && !!nodeProcess.env['SNAP'] && !!nodeProcess.env['SNAP_REVISION'];\n\t_isElectron = isElectronProcess;\n\t_isCI = !!nodeProcess.env['CI'] || !!nodeProcess.env['BUILD_ARTIFACTSTAGINGDIRECTORY'];\n\t_locale = LANGUAGE_DEFAULT;\n\t_language = LANGUAGE_DEFAULT;\n\tconst rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\tconst resolved = nlsConfig.availableLanguages['*'];\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t// VSCode's default language is 'en'\n\t\t\t_language = resolved ? resolved : LANGUAGE_DEFAULT;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t} catch (e) {\n\t\t}\n\t}\n\t_isNative = true;\n}\n\n// Unknown environment\nelse {\n\tconsole.error('Unable to resolve platform.');\n}\n\nexport const enum Platform {\n\tWeb,\n\tMac,\n\tLinux,\n\tWindows\n}\nexport function PlatformToString(platform: Platform) {\n\tswitch (platform) {\n\t\tcase Platform.Web: return 'Web';\n\t\tcase Platform.Mac: return 'Mac';\n\t\tcase Platform.Linux: return 'Linux';\n\t\tcase Platform.Windows: return 'Windows';\n\t}\n}\n\nlet _platform: Platform = Platform.Web;\nif (_isMacintosh) {\n\t_platform = Platform.Mac;\n} else if (_isWindows) {\n\t_platform = Platform.Windows;\n} else if (_isLinux) {\n\t_platform = Platform.Linux;\n}\n\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isLinuxSnap = _isLinuxSnap;\nexport const isNative = _isNative;\nexport const isElectron = _isElectron;\nexport const isWeb = _isWeb;\nexport const isWebWorker = (_isWeb && typeof globals.importScripts === 'function');\nexport const isIOS = _isIOS;\n/**\n * Whether we run inside a CI environment, such as\n * GH actions or Azure Pipelines.\n */\nexport const isCI = _isCI;\nexport const platform = _platform;\nexport const userAgent = _userAgent;\n\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport const language = _language;\n\nexport namespace Language {\n\n\texport function value(): string {\n\t\treturn language;\n\t}\n\n\texport function isDefaultVariant(): boolean {\n\t\tif (language.length === 2) {\n\t\t\treturn language === 'en';\n\t\t} else if (language.length >= 3) {\n\t\t\treturn language[0] === 'e' && language[1] === 'n' && language[2] === '-';\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\texport function isDefault(): boolean {\n\t\treturn language === 'en';\n\t}\n}\n\n/**\n * The OS locale or the locale specified by --locale. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese). The UI is not necessarily shown in the provided locale.\n */\nexport const locale = _locale;\n\n/**\n * The translations that are available through language packs.\n */\nexport const translationsConfigFile = _translationsConfigFile;\n\nexport const setTimeout0IsFaster = (typeof globals.postMessage === 'function' && !globals.importScripts);\n\n/**\n * See https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#:~:text=than%204%2C%20then-,set%20timeout%20to%204,-.\n *\n * Works similarly to `setTimeout(0)` but doesn't suffer from the 4ms artificial delay\n * that browsers set when the nesting level is > 5.\n */\nexport const setTimeout0 = (() => {\n\tif (setTimeout0IsFaster) {\n\t\tinterface IQueueElement {\n\t\t\tid: number;\n\t\t\tcallback: () => void;\n\t\t}\n\t\tconst pending: IQueueElement[] = [];\n\t\tglobals.addEventListener('message', (e: MessageEvent) => {\n\t\t\tif (e.data && e.data.vscodeScheduleAsyncWork) {\n\t\t\t\tfor (let i = 0, len = pending.length; i < len; i++) {\n\t\t\t\t\tconst candidate = pending[i];\n\t\t\t\t\tif (candidate.id === e.data.vscodeScheduleAsyncWork) {\n\t\t\t\t\t\tpending.splice(i, 1);\n\t\t\t\t\t\tcandidate.callback();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tlet lastId = 0;\n\t\treturn (callback: () => void) => {\n\t\t\tconst myId = ++lastId;\n\t\t\tpending.push({\n\t\t\t\tid: myId,\n\t\t\t\tcallback: callback\n\t\t\t});\n\t\t\tglobals.postMessage({ vscodeScheduleAsyncWork: myId }, '*');\n\t\t};\n\t}\n\treturn (callback: () => void) => setTimeout(callback);\n})();\n\nexport const enum OperatingSystem {\n\tWindows = 1,\n\tMacintosh = 2,\n\tLinux = 3\n}\nexport const OS = (_isMacintosh || _isIOS ? OperatingSystem.Macintosh : (_isWindows ? OperatingSystem.Windows : OperatingSystem.Linux));\n\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nexport function isLittleEndian(): boolean {\n\tif (!_isLittleEndianComputed) {\n\t\t_isLittleEndianComputed = true;\n\t\tconst test = new Uint8Array(2);\n\t\ttest[0] = 1;\n\t\ttest[1] = 2;\n\t\tconst view = new Uint16Array(test.buffer);\n\t\t_isLittleEndian = (view[0] === (2 << 8) + 1);\n\t}\n\treturn _isLittleEndian;\n}\n\nexport const isChrome = !!(userAgent && userAgent.indexOf('Chrome') >= 0);\nexport const isFirefox = !!(userAgent && userAgent.indexOf('Firefox') >= 0);\nexport const isSafari = !!(!isChrome && (userAgent && userAgent.indexOf('Safari') >= 0));\nexport const isEdge = !!(userAgent && userAgent.indexOf('Edg/') >= 0);\nexport const isAndroid = !!(userAgent && userAgent.indexOf('Android') >= 0);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { globals, INodeProcess, isMacintosh, isWindows } from 'vs/base/common/platform';\n\nlet safeProcess: Omit<INodeProcess, 'arch'> & { arch: string | undefined };\ndeclare const process: INodeProcess;\n\n// Native sandbox environment\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n\tconst sandboxProcess: INodeProcess = globals.vscode.process;\n\tsafeProcess = {\n\t\tget platform() { return sandboxProcess.platform; },\n\t\tget arch() { return sandboxProcess.arch; },\n\t\tget env() { return sandboxProcess.env; },\n\t\tcwd() { return sandboxProcess.cwd(); }\n\t};\n}\n\n// Native node.js environment\nelse if (typeof process !== 'undefined') {\n\tsafeProcess = {\n\t\tget platform() { return process.platform; },\n\t\tget arch() { return process.arch; },\n\t\tget env() { return process.env; },\n\t\tcwd() { return process.env['VSCODE_CWD'] || process.cwd(); }\n\t};\n}\n\n// Web environment\nelse {\n\tsafeProcess = {\n\n\t\t// Supported\n\t\tget platform() { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n\t\tget arch() { return undefined; /* arch is undefined in web */ },\n\n\t\t// Unsupported\n\t\tget env() { return {}; },\n\t\tcwd() { return '/'; }\n\t};\n}\n\n/**\n * Provides safe access to the `cwd` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `/`.\n */\nexport const cwd = safeProcess.cwd;\n\n/**\n * Provides safe access to the `env` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `{}`.\n */\nexport const env = safeProcess.env;\n\n/**\n * Provides safe access to the `platform` property in node.js, sandboxed or web\n * environments.\n */\nexport const platform = safeProcess.platform;\n\n/**\n * Provides safe access to the `arch` method in node.js, sandboxed or web\n * environments.\n * Note: `arch` is `undefined` in web\n */\nexport const arch = safeProcess.arch;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/blob/v14.16.0/lib/path.js\n\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as process from 'vs/base/common/process';\n\nconst CHAR_UPPERCASE_A = 65;/* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\n\nclass ErrorInvalidArgType extends Error {\n\tcode: 'ERR_INVALID_ARG_TYPE';\n\tconstructor(name: string, expected: string, actual: unknown) {\n\t\t// determiner: 'must be' or 'must not be'\n\t\tlet determiner;\n\t\tif (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n\t\t\tdeterminer = 'must not be';\n\t\t\texpected = expected.replace(/^not /, '');\n\t\t} else {\n\t\t\tdeterminer = 'must be';\n\t\t}\n\n\t\tconst type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n\t\tlet msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n\n\t\tmsg += `. Received type ${typeof actual}`;\n\t\tsuper(msg);\n\n\t\tthis.code = 'ERR_INVALID_ARG_TYPE';\n\t}\n}\n\nfunction validateString(value: string, name: string) {\n\tif (typeof value !== 'string') {\n\t\tthrow new ErrorInvalidArgType(name, 'string', value);\n\t}\n}\n\nfunction isPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code: number) {\n\treturn (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\n\t\t(code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path: string, allowAboveRoot: boolean, separator: string, isPathSeparator: (code?: number) => boolean) {\n\tlet res = '';\n\tlet lastSegmentLength = 0;\n\tlet lastSlash = -1;\n\tlet dots = 0;\n\tlet code = 0;\n\tfor (let i = 0; i <= path.length; ++i) {\n\t\tif (i < path.length) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t}\n\t\telse if (isPathSeparator(code)) {\n\t\t\tbreak;\n\t\t}\n\t\telse {\n\t\t\tcode = CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\tif (isPathSeparator(code)) {\n\t\t\tif (lastSlash === i - 1 || dots === 1) {\n\t\t\t\t// NOOP\n\t\t\t} else if (dots === 2) {\n\t\t\t\tif (res.length < 2 || lastSegmentLength !== 2 ||\n\t\t\t\t\tres.charCodeAt(res.length - 1) !== CHAR_DOT ||\n\t\t\t\t\tres.charCodeAt(res.length - 2) !== CHAR_DOT) {\n\t\t\t\t\tif (res.length > 2) {\n\t\t\t\t\t\tconst lastSlashIndex = res.lastIndexOf(separator);\n\t\t\t\t\t\tif (lastSlashIndex === -1) {\n\t\t\t\t\t\t\tres = '';\n\t\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tres = res.slice(0, lastSlashIndex);\n\t\t\t\t\t\t\tlastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (res.length !== 0) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (allowAboveRoot) {\n\t\t\t\t\tres += res.length > 0 ? `${separator}..` : '..';\n\t\t\t\t\tlastSegmentLength = 2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (res.length > 0) {\n\t\t\t\t\tres += `${separator}${path.slice(lastSlash + 1, i)}`;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tres = path.slice(lastSlash + 1, i);\n\t\t\t\t}\n\t\t\t\tlastSegmentLength = i - lastSlash - 1;\n\t\t\t}\n\t\t\tlastSlash = i;\n\t\t\tdots = 0;\n\t\t} else if (code === CHAR_DOT && dots !== -1) {\n\t\t\t++dots;\n\t\t} else {\n\t\t\tdots = -1;\n\t\t}\n\t}\n\treturn res;\n}\n\nfunction _format(sep: string, pathObject: ParsedPath) {\n\tif (pathObject === null || typeof pathObject !== 'object') {\n\t\tthrow new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n\t}\n\tconst dir = pathObject.dir || pathObject.root;\n\tconst base = pathObject.base ||\n\t\t`${pathObject.name || ''}${pathObject.ext || ''}`;\n\tif (!dir) {\n\t\treturn base;\n\t}\n\treturn dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\n\nexport interface ParsedPath {\n\troot: string;\n\tdir: string;\n\tbase: string;\n\text: string;\n\tname: string;\n}\n\nexport interface IPath {\n\tnormalize(path: string): string;\n\tisAbsolute(path: string): boolean;\n\tjoin(...paths: string[]): string;\n\tresolve(...pathSegments: string[]): string;\n\trelative(from: string, to: string): string;\n\tdirname(path: string): string;\n\tbasename(path: string, ext?: string): string;\n\textname(path: string): string;\n\tformat(pathObject: ParsedPath): string;\n\tparse(path: string): ParsedPath;\n\ttoNamespacedPath(path: string): string;\n\tsep: '\\\\' | '/';\n\tdelimiter: string;\n\twin32: IPath | null;\n\tposix: IPath | null;\n}\n\nexport const win32: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedDevice = '';\n\t\tlet resolvedTail = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1; i--) {\n\t\t\tlet path;\n\t\t\tif (i >= 0) {\n\t\t\t\tpath = pathSegments[i];\n\t\t\t\tvalidateString(path, 'path');\n\n\t\t\t\t// Skip empty entries\n\t\t\t\tif (path.length === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} else if (resolvedDevice.length === 0) {\n\t\t\t\tpath = process.cwd();\n\t\t\t} else {\n\t\t\t\t// Windows has the concept of drive-specific current working\n\t\t\t\t// directories. If we've resolved a drive letter but not yet an\n\t\t\t\t// absolute path, get cwd for that drive, or the process cwd if\n\t\t\t\t// the drive cwd is not available. We're sure the device is not\n\t\t\t\t// a UNC path at this points, because UNC paths are always absolute.\n\t\t\t\tpath = process.env[`=${resolvedDevice}`] || process.cwd();\n\n\t\t\t\t// Verify that a cwd was found and that it actually points\n\t\t\t\t// to our drive. If not, default to the drive's root.\n\t\t\t\tif (path === undefined ||\n\t\t\t\t\t(path.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n\t\t\t\t\t\tpath.charCodeAt(2) === CHAR_BACKWARD_SLASH)) {\n\t\t\t\t\tpath = `${resolvedDevice}\\\\`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst len = path.length;\n\t\t\tlet rootEnd = 0;\n\t\t\tlet device = '';\n\t\t\tlet isAbsolute = false;\n\t\t\tconst code = path.charCodeAt(0);\n\n\t\t\t// Try to match a root\n\t\t\tif (len === 1) {\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// `path` contains just a path separator\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t}\n\t\t\t} else if (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\t// If we started with a separator, we know we at least have an\n\t\t\t\t// absolute path of some kind (UNC or otherwise)\n\t\t\t\tisAbsolute = true;\n\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len || j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root\n\t\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code) &&\n\t\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t// Possible device root\n\t\t\t\tdevice = path.slice(0, 2);\n\t\t\t\trootEnd = 2;\n\t\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t\t// indicator\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t\trootEnd = 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (device.length > 0) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tif (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n\t\t\t\t\t\t// This path points to another device so it is not applicable\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresolvedDevice = device;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (resolvedAbsolute) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n\t\t\t\tresolvedAbsolute = isAbsolute;\n\t\t\t\tif (isAbsolute && resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path,\n\t\t// but handle relative paths to be safe (might happen when process.cwd()\n\t\t// fails)\n\n\t\t// Normalize the tail path\n\t\tresolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\',\n\t\t\tisPathSeparator);\n\n\t\treturn resolvedAbsolute ?\n\t\t\t`${resolvedDevice}\\\\${resolvedTail}` :\n\t\t\t`${resolvedDevice}${resolvedTail}` || '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = 0;\n\t\tlet device;\n\t\tlet isAbsolute = false;\n\t\tconst code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a single char, exit early to avoid\n\t\t\t// unnecessary work\n\t\t\treturn isPosixPathSeparator(code) ? '\\\\' : path;\n\t\t}\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\t// If we started with a separator, we know we at least have an absolute\n\t\t\t// path of some kind (UNC or otherwise)\n\t\t\tisAbsolute = true;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\t// Return the normalized version of the UNC root since there\n\t\t\t\t\t\t\t// is nothing left to process\n\t\t\t\t\t\t\treturn `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trootEnd = 1;\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tdevice = path.slice(0, 2);\n\t\t\trootEnd = 2;\n\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t// indicator\n\t\t\t\tisAbsolute = true;\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\n\t\tlet tail = rootEnd < len ?\n\t\t\tnormalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n\t\t\t'';\n\t\tif (tail.length === 0 && !isAbsolute) {\n\t\t\ttail = '.';\n\t\t}\n\t\tif (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n\t\t\ttail += '\\\\';\n\t\t}\n\t\tif (device === undefined) {\n\t\t\treturn isAbsolute ? `\\\\${tail}` : tail;\n\t\t}\n\t\treturn isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst code = path.charCodeAt(0);\n\t\treturn isPathSeparator(code) ||\n\t\t\t// Possible device root\n\t\t\t(len > 2 &&\n\t\t\t\tisWindowsDeviceRoot(code) &&\n\t\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\t\tisPathSeparator(path.charCodeAt(2)));\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tlet joined;\n\t\tlet firstPart: string | undefined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = firstPart = arg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjoined += `\\\\${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\n\t\t// Make sure that the joined path doesn't start with two slashes, because\n\t\t// normalize() will mistake it for a UNC path then.\n\t\t//\n\t\t// This step is skipped when it is very clear that the user actually\n\t\t// intended to point at a UNC path. This is assumed when the first\n\t\t// non-empty string arguments starts with exactly two slashes followed by\n\t\t// at least one more non-slash character.\n\t\t//\n\t\t// Note that for normalize() to treat a path as a UNC path it needs to\n\t\t// have at least 2 components, so we don't filter for that here.\n\t\t// This means that the user can use join to construct UNC paths from\n\t\t// a server name and a share name; for example:\n\t\t//   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n\t\tlet needsReplace = true;\n\t\tlet slashCount = 0;\n\t\tif (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n\t\t\t++slashCount;\n\t\t\tconst firstLen = firstPart.length;\n\t\t\tif (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n\t\t\t\t++slashCount;\n\t\t\t\tif (firstLen > 2) {\n\t\t\t\t\tif (isPathSeparator(firstPart.charCodeAt(2))) {\n\t\t\t\t\t\t++slashCount;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// We matched a UNC path in the first part\n\t\t\t\t\t\tneedsReplace = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (needsReplace) {\n\t\t\t// Find any more consecutive slashes we need to replace\n\t\t\twhile (slashCount < joined.length &&\n\t\t\t\tisPathSeparator(joined.charCodeAt(slashCount))) {\n\t\t\t\tslashCount++;\n\t\t\t}\n\n\t\t\t// Replace the slashes if needed\n\t\t\tif (slashCount >= 2) {\n\t\t\t\tjoined = `\\\\${joined.slice(slashCount)}`;\n\t\t\t}\n\t\t}\n\n\t\treturn win32.normalize(joined);\n\t},\n\n\n\t// It will solve the relative path from `from` to `to`, for instance:\n\t//  from = 'C:\\\\orandea\\\\test\\\\aaa'\n\t//  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n\t// The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromOrig = win32.resolve(from);\n\t\tconst toOrig = win32.resolve(to);\n\n\t\tif (fromOrig === toOrig) {\n\t\t\treturn '';\n\t\t}\n\n\t\tfrom = fromOrig.toLowerCase();\n\t\tto = toOrig.toLowerCase();\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim any leading backslashes\n\t\tlet fromStart = 0;\n\t\twhile (fromStart < from.length &&\n\t\t\tfrom.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet fromEnd = from.length;\n\t\twhile (fromEnd - 1 > fromStart &&\n\t\t\tfrom.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromEnd--;\n\t\t}\n\t\tconst fromLen = fromEnd - fromStart;\n\n\t\t// Trim any leading backslashes\n\t\tlet toStart = 0;\n\t\twhile (toStart < to.length &&\n\t\t\tto.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet toEnd = to.length;\n\t\twhile (toEnd - 1 > toStart &&\n\t\t\tto.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoEnd--;\n\t\t}\n\t\tconst toLen = toEnd - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = fromLen < toLen ? fromLen : toLen;\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_BACKWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\n\t\t// We found a mismatch before the first common path separator was seen, so\n\t\t// return the original `to`.\n\t\tif (i !== length) {\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\treturn toOrig;\n\t\t\t}\n\t\t} else {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n\t\t\t\t\treturn toOrig.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 2) {\n\t\t\t\t\t// We get here if `from` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\'; to='C:\\\\foo'\n\t\t\t\t\treturn toOrig.slice(toStart + i);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 2) {\n\t\t\t\t\t// We get here if `to` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n\t\t\t\t\tlastCommonSep = 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\tlastCommonSep = 0;\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to` and\n\t\t// `from`\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '\\\\..';\n\t\t\t}\n\t\t}\n\n\t\ttoStart += lastCommonSep;\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts\n\t\tif (out.length > 0) {\n\t\t\treturn `${out}${toOrig.slice(toStart, toEnd)}`;\n\t\t}\n\n\t\tif (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\t++toStart;\n\t\t}\n\n\t\treturn toOrig.slice(toStart, toEnd);\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Note: this will *probably* throw somewhere.\n\t\tif (typeof path !== 'string') {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (path.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst resolvedPath = win32.resolve(path);\n\n\t\tif (resolvedPath.length <= 2) {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Possible UNC root\n\t\t\tif (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tconst code = resolvedPath.charCodeAt(2);\n\t\t\t\tif (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n\t\t\t\t\t// Matched non-long UNC root, convert the path to a long UNC path\n\t\t\t\t\treturn `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n\t\t\tresolvedPath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tresolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Matched device root, convert the path to a long UNC path\n\t\t\treturn `\\\\\\\\?\\\\${resolvedPath}`;\n\t\t}\n\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = -1;\n\t\tlet offset = 0;\n\t\tconst code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t// unnecessary work or a dot.\n\t\t\treturn isPathSeparator(code) ? path : '.';\n\t\t}\n\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = offset = 1;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\treturn path;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t// Offset by 1 to include the separator after the UNC root to\n\t\t\t\t\t\t\t// treat it as a \"normal root\" on top of a (UNC) root\n\t\t\t\t\t\t\trootEnd = offset = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Possible device root\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\trootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n\t\t\toffset = rootEnd;\n\t\t}\n\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = len - 1; i >= offset; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\tif (rootEnd === -1) {\n\t\t\t\treturn '.';\n\t\t\t}\n\n\t\t\tend = rootEnd;\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\t\tif (path.length >= 2 &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0)) &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\tstart = 2;\n\t\t}\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\n\t\tif (path.length >= 2 &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0))) {\n\t\t\tstart = startPart = 2;\n\t\t}\n\n\t\tfor (let i = path.length - 1; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '\\\\'),\n\n\tparse(path) {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tconst len = path.length;\n\t\tlet rootEnd = 0;\n\t\tlet code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\tret.base = ret.name = path;\n\t\t\treturn ret;\n\t\t}\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = 1;\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\trootEnd = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tif (len <= 2) {\n\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\trootEnd = 2;\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tif (len === 3) {\n\t\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t\t// unnecessary work\n\t\t\t\t\tret.root = ret.dir = path;\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\t\tif (rootEnd > 0) {\n\t\t\tret.root = path.slice(0, rootEnd);\n\t\t}\n\n\t\tlet startDot = -1;\n\t\tlet startPart = rootEnd;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= rootEnd; --i) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(startPart, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(startPart, startDot);\n\t\t\t\tret.base = path.slice(startPart, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\t// If the directory is the root, use the entire root as the `dir` including\n\t\t// the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n\t\t// trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n\t\tif (startPart > 0 && startPart !== rootEnd) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else {\n\t\t\tret.dir = ret.root;\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '\\\\',\n\tdelimiter: ';',\n\twin32: null,\n\tposix: null\n};\n\nexport const posix: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedPath = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n\t\t\tconst path = i >= 0 ? pathSegments[i] : process.cwd();\n\n\t\t\tvalidateString(path, 'path');\n\n\t\t\t// Skip empty entries\n\t\t\tif (path.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tresolvedPath = `${path}/${resolvedPath}`;\n\t\t\tresolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path, but\n\t\t// handle relative paths to be safe (might happen when process.cwd() fails)\n\n\t\t// Normalize the path\n\t\tresolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/',\n\t\t\tisPosixPathSeparator);\n\n\t\tif (resolvedAbsolute) {\n\t\t\treturn `/${resolvedPath}`;\n\t\t}\n\t\treturn resolvedPath.length > 0 ? resolvedPath : '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tconst trailingSeparator =\n\t\t\tpath.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n\n\t\t// Normalize the path\n\t\tpath = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n\n\t\tif (path.length === 0) {\n\t\t\tif (isAbsolute) {\n\t\t\t\treturn '/';\n\t\t\t}\n\t\t\treturn trailingSeparator ? './' : '.';\n\t\t}\n\t\tif (trailingSeparator) {\n\t\t\tpath += '/';\n\t\t}\n\n\t\treturn isAbsolute ? `/${path}` : path;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\treturn path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet joined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = arg;\n\t\t\t\t} else {\n\t\t\t\t\tjoined += `/${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\t\treturn posix.normalize(joined);\n\t},\n\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim leading forward slashes.\n\t\tfrom = posix.resolve(from);\n\t\tto = posix.resolve(to);\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromStart = 1;\n\t\tconst fromEnd = from.length;\n\t\tconst fromLen = fromEnd - fromStart;\n\t\tconst toStart = 1;\n\t\tconst toLen = to.length - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = (fromLen < toLen ? fromLen : toLen);\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_FORWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\t\tif (i === length) {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/foo/bar/baz'\n\t\t\t\t\treturn to.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\t// We get here if `from` is the root\n\t\t\t\t\t// For example: from='/'; to='/foo'\n\t\t\t\t\treturn to.slice(toStart + i);\n\t\t\t\t}\n\t\t\t} else if (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='/foo/bar/baz'; to='/foo/bar'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t// We get here if `to` is the root.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/'\n\t\t\t\t\tlastCommonSep = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to`\n\t\t// and `from`.\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '/..';\n\t\t\t}\n\t\t}\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts.\n\t\treturn `${out}${to.slice(toStart + lastCommonSep)}`;\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Non-op on posix systems\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tconst hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = path.length - 1; i >= 1; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn hasRoot ? '/' : '.';\n\t\t}\n\t\tif (hasRoot && end === 1) {\n\t\t\treturn '//';\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\t\tfor (let i = path.length - 1; i >= 0; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '/'),\n\n\tparse(path: string): ParsedPath {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet start;\n\t\tif (isAbsolute) {\n\t\t\tret.root = '/';\n\t\t\tstart = 1;\n\t\t} else {\n\t\t\tstart = 0;\n\t\t}\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tconst start = startPart === 0 && isAbsolute ? 1 : startPart;\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(start, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(start, startDot);\n\t\t\t\tret.base = path.slice(start, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\tif (startPart > 0) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else if (isAbsolute) {\n\t\t\tret.dir = '/';\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '/',\n\tdelimiter: ':',\n\twin32: null,\n\tposix: null\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\nexport const normalize = (process.platform === 'win32' ? win32.normalize : posix.normalize);\nexport const isAbsolute = (process.platform === 'win32' ? win32.isAbsolute : posix.isAbsolute);\nexport const join = (process.platform === 'win32' ? win32.join : posix.join);\nexport const resolve = (process.platform === 'win32' ? win32.resolve : posix.resolve);\nexport const relative = (process.platform === 'win32' ? win32.relative : posix.relative);\nexport const dirname = (process.platform === 'win32' ? win32.dirname : posix.dirname);\nexport const basename = (process.platform === 'win32' ? win32.basename : posix.basename);\nexport const extname = (process.platform === 'win32' ? win32.extname : posix.extname);\nexport const format = (process.platform === 'win32' ? win32.format : posix.format);\nexport const parse = (process.platform === 'win32' ? win32.parse : posix.parse);\nexport const toNamespacedPath = (process.platform === 'win32' ? win32.toNamespacedPath : posix.toNamespacedPath);\nexport const sep = (process.platform === 'win32' ? win32.sep : posix.sep);\nexport const delimiter = (process.platform === 'win32' ? win32.delimiter : posix.delimiter);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { extname } from 'vs/base/common/path';\n\nexport const Mimes = Object.freeze({\n\ttext: 'text/plain',\n\tbinary: 'application/octet-stream',\n\tunknown: 'application/unknown',\n\tmarkdown: 'text/markdown',\n\tlatex: 'text/latex',\n\turiList: 'text/uri-list',\n});\n\ninterface MapExtToMediaMimes {\n\t[index: string]: string;\n}\n\nconst mapExtToTextMimes: MapExtToMediaMimes = {\n\t'.css': 'text/css',\n\t'.csv': 'text/csv',\n\t'.htm': 'text/html',\n\t'.html': 'text/html',\n\t'.ics': 'text/calendar',\n\t'.js': 'text/javascript',\n\t'.mjs': 'text/javascript',\n\t'.txt': 'text/plain',\n\t'.xml': 'text/xml'\n};\n\n// Known media mimes that we can handle\nconst mapExtToMediaMimes: MapExtToMediaMimes = {\n\t'.aac': 'audio/x-aac',\n\t'.avi': 'video/x-msvideo',\n\t'.bmp': 'image/bmp',\n\t'.flv': 'video/x-flv',\n\t'.gif': 'image/gif',\n\t'.ico': 'image/x-icon',\n\t'.jpe': 'image/jpg',\n\t'.jpeg': 'image/jpg',\n\t'.jpg': 'image/jpg',\n\t'.m1v': 'video/mpeg',\n\t'.m2a': 'audio/mpeg',\n\t'.m2v': 'video/mpeg',\n\t'.m3a': 'audio/mpeg',\n\t'.mid': 'audio/midi',\n\t'.midi': 'audio/midi',\n\t'.mk3d': 'video/x-matroska',\n\t'.mks': 'video/x-matroska',\n\t'.mkv': 'video/x-matroska',\n\t'.mov': 'video/quicktime',\n\t'.movie': 'video/x-sgi-movie',\n\t'.mp2': 'audio/mpeg',\n\t'.mp2a': 'audio/mpeg',\n\t'.mp3': 'audio/mpeg',\n\t'.mp4': 'video/mp4',\n\t'.mp4a': 'audio/mp4',\n\t'.mp4v': 'video/mp4',\n\t'.mpe': 'video/mpeg',\n\t'.mpeg': 'video/mpeg',\n\t'.mpg': 'video/mpeg',\n\t'.mpg4': 'video/mp4',\n\t'.mpga': 'audio/mpeg',\n\t'.oga': 'audio/ogg',\n\t'.ogg': 'audio/ogg',\n\t'.opus': 'audio/opus',\n\t'.ogv': 'video/ogg',\n\t'.png': 'image/png',\n\t'.psd': 'image/vnd.adobe.photoshop',\n\t'.qt': 'video/quicktime',\n\t'.spx': 'audio/ogg',\n\t'.svg': 'image/svg+xml',\n\t'.tga': 'image/x-tga',\n\t'.tif': 'image/tiff',\n\t'.tiff': 'image/tiff',\n\t'.wav': 'audio/x-wav',\n\t'.webm': 'video/webm',\n\t'.webp': 'image/webp',\n\t'.wma': 'audio/x-ms-wma',\n\t'.wmv': 'video/x-ms-wmv',\n\t'.woff': 'application/font-woff',\n};\n\nexport function getMediaOrTextMime(path: string): string | undefined {\n\tconst ext = extname(path);\n\tconst textMime = mapExtToTextMimes[ext.toLowerCase()];\n\tif (textMime !== undefined) {\n\t\treturn textMime;\n\t} else {\n\t\treturn getMediaMime(path);\n\t}\n}\n\nexport function getMediaMime(path: string): string | undefined {\n\tconst ext = extname(path);\n\treturn mapExtToMediaMimes[ext.toLowerCase()];\n}\n\nexport function getExtensionForMimeType(mimeType: string): string | undefined {\n\tfor (const extension in mapExtToMediaMimes) {\n\t\tif (mapExtToMediaMimes[extension] === mimeType) {\n\t\t\treturn extension;\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nconst _simplePattern = /^(.+)\\/(.+?)(;.+)?$/;\n\nexport function normalizeMimeType(mimeType: string): string;\nexport function normalizeMimeType(mimeType: string, strict: true): string | undefined;\nexport function normalizeMimeType(mimeType: string, strict?: true): string | undefined {\n\n\tconst match = _simplePattern.exec(mimeType);\n\tif (!match) {\n\t\treturn strict\n\t\t\t? undefined\n\t\t\t: mimeType;\n\t}\n\t// https://datatracker.ietf.org/doc/html/rfc2045#section-5.1\n\t// media and subtype must ALWAYS be lowercase, parameter not\n\treturn `${match[1].toLowerCase()}/${match[2].toLowerCase()}${match[3] ?? ''}`;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IProcessEnvironment, isLinux, isMacintosh } from 'vs/base/common/platform';\n\n/**\n * Options to be passed to the external program or shell.\n */\nexport interface CommandOptions {\n\t/**\n\t * The current working directory of the executed program or shell.\n\t * If omitted VSCode's current workspace root is used.\n\t */\n\tcwd?: string;\n\n\t/**\n\t * The environment of the executed program or shell. If omitted\n\t * the parent process' environment is used.\n\t */\n\tenv?: { [key: string]: string };\n}\n\nexport interface Executable {\n\t/**\n\t * The command to be executed. Can be an external program or a shell\n\t * command.\n\t */\n\tcommand: string;\n\n\t/**\n\t * Specifies whether the command is a shell command and therefore must\n\t * be executed in a shell interpreter (e.g. cmd.exe, bash, ...).\n\t */\n\tisShellCommand: boolean;\n\n\t/**\n\t * The arguments passed to the command.\n\t */\n\targs: string[];\n\n\t/**\n\t * The command options used when the command is executed. Can be omitted.\n\t */\n\toptions?: CommandOptions;\n}\n\nexport interface ForkOptions extends CommandOptions {\n\texecArgv?: string[];\n}\n\nexport const enum Source {\n\tstdout,\n\tstderr\n}\n\n/**\n * The data send via a success callback\n */\nexport interface SuccessData {\n\terror?: Error;\n\tcmdCode?: number;\n\tterminated?: boolean;\n}\n\n/**\n * The data send via a error callback\n */\nexport interface ErrorData {\n\terror?: Error;\n\tterminated?: boolean;\n\tstdout?: string;\n\tstderr?: string;\n}\n\nexport interface TerminateResponse {\n\tsuccess: boolean;\n\tcode?: TerminateResponseCode;\n\terror?: any;\n}\n\nexport const enum TerminateResponseCode {\n\tSuccess = 0,\n\tUnknown = 1,\n\tAccessDenied = 2,\n\tProcessNotFound = 3,\n}\n\nexport interface ProcessItem {\n\tname: string;\n\tcmd: string;\n\tpid: number;\n\tppid: number;\n\tload: number;\n\tmem: number;\n\n\tchildren?: ProcessItem[];\n}\n\n/**\n * Sanitizes a VS Code process environment by removing all Electron/VS Code-related values.\n */\nexport function sanitizeProcessEnvironment(env: IProcessEnvironment, ...preserve: string[]): void {\n\tconst set = preserve.reduce((set, key) => {\n\t\tset[key] = true;\n\t\treturn set;\n\t}, {} as Record<string, boolean>);\n\tconst keysToRemove = [\n\t\t/^ELECTRON_.+$/,\n\t\t/^VSCODE_(?!SHELL_LOGIN).+$/,\n\t\t/^SNAP(|_.*)$/,\n\t\t/^GDK_PIXBUF_.+$/,\n\t\t/^CODE_SERVER_.+$/,\n\t\t/^CS_.+$/,\n\t];\n\tconst envKeys = Object.keys(env);\n\tenvKeys\n\t\t.filter(key => !set[key])\n\t\t.forEach(envKey => {\n\t\t\tfor (let i = 0; i < keysToRemove.length; i++) {\n\t\t\t\tif (envKey.search(keysToRemove[i]) !== -1) {\n\t\t\t\t\tdelete env[envKey];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n}\n\n/**\n * Remove dangerous environment variables that have caused crashes\n * in forked processes (i.e. in ELECTRON_RUN_AS_NODE processes)\n *\n * @param env The env object to change\n */\nexport function removeDangerousEnvVariables(env: IProcessEnvironment | undefined): void {\n\tif (!env) {\n\t\treturn;\n\t}\n\n\t// Unset `DEBUG`, as an invalid value might lead to process crashes\n\t// See https://github.com/microsoft/vscode/issues/130072\n\tdelete env['DEBUG'];\n\n\tif (isMacintosh) {\n\t\t// Unset `DYLD_LIBRARY_PATH`, as it leads to process crashes\n\t\t// See https://github.com/microsoft/vscode/issues/104525\n\t\t// See https://github.com/microsoft/vscode/issues/105848\n\t\tdelete env['DYLD_LIBRARY_PATH'];\n\t}\n\n\tif (isLinux) {\n\t\t// Unset `LD_PRELOAD`, as it might lead to process crashes\n\t\t// See https://github.com/microsoft/vscode/issues/134177\n\t\tdelete env['LD_PRELOAD'];\n\t}\n}\n","/**\n * Semver UMD module\n * Copyright (c) Isaac Z. Schlueter and Contributors\n * https://github.com/npm/node-semver\n */\n\n/**\n * DO NOT EDIT THIS FILE\n */\n\n!function(e,r){if(\"object\"==typeof exports&&\"object\"==typeof module)module.exports=r();else if(\"function\"==typeof define&&define.amd)define(\"vs/base/common/semver/semver\", [],r);else{var t=r();for(var n in t)(\"object\"==typeof exports?exports:e)[n]=t[n]}}(\"undefined\"!=typeof self?self:this,(function(){return function(e){var r={};function t(n){if(r[n])return r[n].exports;var o=r[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,t),o.l=!0,o.exports}return t.m=e,t.c=r,t.d=function(e,r,n){t.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:n})},t.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},t.t=function(e,r){if(1&r&&(e=t(e)),8&r)return e;if(4&r&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(t.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&r&&\"string\"!=typeof e)for(var o in e)t.d(n,o,function(r){return e[r]}.bind(null,o));return n},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,\"a\",r),r},t.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},t.p=\"\",t(t.s=0)}([function(e,r,t){(function(t){var n;r=e.exports=H,n=\"object\"==typeof t&&t.env&&t.env.NODE_DEBUG&&/\\bsemver\\b/i.test(t.env.NODE_DEBUG)?function(){var e=Array.prototype.slice.call(arguments,0);e.unshift(\"SEMVER\"),console.log.apply(console,e)}:function(){},r.SEMVER_SPEC_VERSION=\"2.0.0\";var o=256,i=Number.MAX_SAFE_INTEGER||9007199254740991,s=r.re=[],a=r.src=[],u=0,c=u++;a[c]=\"0|[1-9]\\\\d*\";var p=u++;a[p]=\"[0-9]+\";var f=u++;a[f]=\"\\\\d*[a-zA-Z-][a-zA-Z0-9-]*\";var l=u++;a[l]=\"(\"+a[c]+\")\\\\.(\"+a[c]+\")\\\\.(\"+a[c]+\")\";var h=u++;a[h]=\"(\"+a[p]+\")\\\\.(\"+a[p]+\")\\\\.(\"+a[p]+\")\";var v=u++;a[v]=\"(?:\"+a[c]+\"|\"+a[f]+\")\";var m=u++;a[m]=\"(?:\"+a[p]+\"|\"+a[f]+\")\";var w=u++;a[w]=\"(?:-(\"+a[v]+\"(?:\\\\.\"+a[v]+\")*))\";var g=u++;a[g]=\"(?:-?(\"+a[m]+\"(?:\\\\.\"+a[m]+\")*))\";var y=u++;a[y]=\"[0-9A-Za-z-]+\";var d=u++;a[d]=\"(?:\\\\+(\"+a[y]+\"(?:\\\\.\"+a[y]+\")*))\";var b=u++,j=\"v?\"+a[l]+a[w]+\"?\"+a[d]+\"?\";a[b]=\"^\"+j+\"$\";var E=\"[v=\\\\s]*\"+a[h]+a[g]+\"?\"+a[d]+\"?\",T=u++;a[T]=\"^\"+E+\"$\";var x=u++;a[x]=\"((?:<|>)?=?)\";var $=u++;a[$]=a[p]+\"|x|X|\\\\*\";var k=u++;a[k]=a[c]+\"|x|X|\\\\*\";var S=u++;a[S]=\"[v=\\\\s]*(\"+a[k]+\")(?:\\\\.(\"+a[k]+\")(?:\\\\.(\"+a[k]+\")(?:\"+a[w]+\")?\"+a[d]+\"?)?)?\";var R=u++;a[R]=\"[v=\\\\s]*(\"+a[$]+\")(?:\\\\.(\"+a[$]+\")(?:\\\\.(\"+a[$]+\")(?:\"+a[g]+\")?\"+a[d]+\"?)?)?\";var I=u++;a[I]=\"^\"+a[x]+\"\\\\s*\"+a[S]+\"$\";var _=u++;a[_]=\"^\"+a[x]+\"\\\\s*\"+a[R]+\"$\";var O=u++;a[O]=\"(?:^|[^\\\\d])(\\\\d{1,16})(?:\\\\.(\\\\d{1,16}))?(?:\\\\.(\\\\d{1,16}))?(?:$|[^\\\\d])\";var A=u++;a[A]=\"(?:~>?)\";var M=u++;a[M]=\"(\\\\s*)\"+a[A]+\"\\\\s+\",s[M]=new RegExp(a[M],\"g\");var V=u++;a[V]=\"^\"+a[A]+a[S]+\"$\";var P=u++;a[P]=\"^\"+a[A]+a[R]+\"$\";var C=u++;a[C]=\"(?:\\\\^)\";var L=u++;a[L]=\"(\\\\s*)\"+a[C]+\"\\\\s+\",s[L]=new RegExp(a[L],\"g\");var N=u++;a[N]=\"^\"+a[C]+a[S]+\"$\";var q=u++;a[q]=\"^\"+a[C]+a[R]+\"$\";var D=u++;a[D]=\"^\"+a[x]+\"\\\\s*(\"+E+\")$|^$\";var X=u++;a[X]=\"^\"+a[x]+\"\\\\s*(\"+j+\")$|^$\";var z=u++;a[z]=\"(\\\\s*)\"+a[x]+\"\\\\s*(\"+E+\"|\"+a[S]+\")\",s[z]=new RegExp(a[z],\"g\");var G=u++;a[G]=\"^\\\\s*(\"+a[S]+\")\\\\s+-\\\\s+(\"+a[S]+\")\\\\s*$\";var Z=u++;a[Z]=\"^\\\\s*(\"+a[R]+\")\\\\s+-\\\\s+(\"+a[R]+\")\\\\s*$\";var B=u++;a[B]=\"(<|>)?=?\\\\s*\\\\*\";for(var U=0;U<35;U++)n(U,a[U]),s[U]||(s[U]=new RegExp(a[U]));function F(e,r){if(e instanceof H)return e;if(\"string\"!=typeof e)return null;if(e.length>o)return null;if(!(r?s[T]:s[b]).test(e))return null;try{return new H(e,r)}catch(e){return null}}function H(e,r){if(e instanceof H){if(e.loose===r)return e;e=e.version}else if(\"string\"!=typeof e)throw new TypeError(\"Invalid Version: \"+e);if(e.length>o)throw new TypeError(\"version is longer than \"+o+\" characters\");if(!(this instanceof H))return new H(e,r);n(\"SemVer\",e,r),this.loose=r;var t=e.trim().match(r?s[T]:s[b]);if(!t)throw new TypeError(\"Invalid Version: \"+e);if(this.raw=e,this.major=+t[1],this.minor=+t[2],this.patch=+t[3],this.major>i||this.major<0)throw new TypeError(\"Invalid major version\");if(this.minor>i||this.minor<0)throw new TypeError(\"Invalid minor version\");if(this.patch>i||this.patch<0)throw new TypeError(\"Invalid patch version\");t[4]?this.prerelease=t[4].split(\".\").map((function(e){if(/^[0-9]+$/.test(e)){var r=+e;if(r>=0&&r<i)return r}return e})):this.prerelease=[],this.build=t[5]?t[5].split(\".\"):[],this.format()}r.parse=F,r.valid=function(e,r){var t=F(e,r);return t?t.version:null},r.clean=function(e,r){var t=F(e.trim().replace(/^[=v]+/,\"\"),r);return t?t.version:null},r.SemVer=H,H.prototype.format=function(){return this.version=this.major+\".\"+this.minor+\".\"+this.patch,this.prerelease.length&&(this.version+=\"-\"+this.prerelease.join(\".\")),this.version},H.prototype.toString=function(){return this.version},H.prototype.compare=function(e){return n(\"SemVer.compare\",this.version,this.loose,e),e instanceof H||(e=new H(e,this.loose)),this.compareMain(e)||this.comparePre(e)},H.prototype.compareMain=function(e){return e instanceof H||(e=new H(e,this.loose)),K(this.major,e.major)||K(this.minor,e.minor)||K(this.patch,e.patch)},H.prototype.comparePre=function(e){if(e instanceof H||(e=new H(e,this.loose)),this.prerelease.length&&!e.prerelease.length)return-1;if(!this.prerelease.length&&e.prerelease.length)return 1;if(!this.prerelease.length&&!e.prerelease.length)return 0;var r=0;do{var t=this.prerelease[r],o=e.prerelease[r];if(n(\"prerelease compare\",r,t,o),void 0===t&&void 0===o)return 0;if(void 0===o)return 1;if(void 0===t)return-1;if(t!==o)return K(t,o)}while(++r)},H.prototype.inc=function(e,r){switch(e){case\"premajor\":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc(\"pre\",r);break;case\"preminor\":this.prerelease.length=0,this.patch=0,this.minor++,this.inc(\"pre\",r);break;case\"prepatch\":this.prerelease.length=0,this.inc(\"patch\",r),this.inc(\"pre\",r);break;case\"prerelease\":0===this.prerelease.length&&this.inc(\"patch\",r),this.inc(\"pre\",r);break;case\"major\":0===this.minor&&0===this.patch&&0!==this.prerelease.length||this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case\"minor\":0===this.patch&&0!==this.prerelease.length||this.minor++,this.patch=0,this.prerelease=[];break;case\"patch\":0===this.prerelease.length&&this.patch++,this.prerelease=[];break;case\"pre\":if(0===this.prerelease.length)this.prerelease=[0];else{for(var t=this.prerelease.length;--t>=0;)\"number\"==typeof this.prerelease[t]&&(this.prerelease[t]++,t=-2);-1===t&&this.prerelease.push(0)}r&&(this.prerelease[0]===r?isNaN(this.prerelease[1])&&(this.prerelease=[r,0]):this.prerelease=[r,0]);break;default:throw new Error(\"invalid increment argument: \"+e)}return this.format(),this.raw=this.version,this},r.inc=function(e,r,t,n){\"string\"==typeof t&&(n=t,t=void 0);try{return new H(e,t).inc(r,n).version}catch(e){return null}},r.diff=function(e,r){if(ee(e,r))return null;var t=F(e),n=F(r);if(t.prerelease.length||n.prerelease.length){for(var o in t)if((\"major\"===o||\"minor\"===o||\"patch\"===o)&&t[o]!==n[o])return\"pre\"+o;return\"prerelease\"}for(var o in t)if((\"major\"===o||\"minor\"===o||\"patch\"===o)&&t[o]!==n[o])return o},r.compareIdentifiers=K;var J=/^[0-9]+$/;function K(e,r){var t=J.test(e),n=J.test(r);return t&&n&&(e=+e,r=+r),t&&!n?-1:n&&!t?1:e<r?-1:e>r?1:0}function Q(e,r,t){return new H(e,t).compare(new H(r,t))}function W(e,r,t){return Q(e,r,t)>0}function Y(e,r,t){return Q(e,r,t)<0}function ee(e,r,t){return 0===Q(e,r,t)}function re(e,r,t){return 0!==Q(e,r,t)}function te(e,r,t){return Q(e,r,t)>=0}function ne(e,r,t){return Q(e,r,t)<=0}function oe(e,r,t,n){var o;switch(r){case\"===\":\"object\"==typeof e&&(e=e.version),\"object\"==typeof t&&(t=t.version),o=e===t;break;case\"!==\":\"object\"==typeof e&&(e=e.version),\"object\"==typeof t&&(t=t.version),o=e!==t;break;case\"\":case\"=\":case\"==\":o=ee(e,t,n);break;case\"!=\":o=re(e,t,n);break;case\">\":o=W(e,t,n);break;case\">=\":o=te(e,t,n);break;case\"<\":o=Y(e,t,n);break;case\"<=\":o=ne(e,t,n);break;default:throw new TypeError(\"Invalid operator: \"+r)}return o}function ie(e,r){if(e instanceof ie){if(e.loose===r)return e;e=e.value}if(!(this instanceof ie))return new ie(e,r);n(\"comparator\",e,r),this.loose=r,this.parse(e),this.semver===se?this.value=\"\":this.value=this.operator+this.semver.version,n(\"comp\",this)}r.rcompareIdentifiers=function(e,r){return K(r,e)},r.major=function(e,r){return new H(e,r).major},r.minor=function(e,r){return new H(e,r).minor},r.patch=function(e,r){return new H(e,r).patch},r.compare=Q,r.compareLoose=function(e,r){return Q(e,r,!0)},r.rcompare=function(e,r,t){return Q(r,e,t)},r.sort=function(e,t){return e.sort((function(e,n){return r.compare(e,n,t)}))},r.rsort=function(e,t){return e.sort((function(e,n){return r.rcompare(e,n,t)}))},r.gt=W,r.lt=Y,r.eq=ee,r.neq=re,r.gte=te,r.lte=ne,r.cmp=oe,r.Comparator=ie;var se={};function ae(e,r){if(e instanceof ae)return e.loose===r?e:new ae(e.raw,r);if(e instanceof ie)return new ae(e.value,r);if(!(this instanceof ae))return new ae(e,r);if(this.loose=r,this.raw=e,this.set=e.split(/\\s*\\|\\|\\s*/).map((function(e){return this.parseRange(e.trim())}),this).filter((function(e){return e.length})),!this.set.length)throw new TypeError(\"Invalid SemVer Range: \"+e);this.format()}function ue(e){return!e||\"x\"===e.toLowerCase()||\"*\"===e}function ce(e,r,t,n,o,i,s,a,u,c,p,f,l){return((r=ue(t)?\"\":ue(n)?\">=\"+t+\".0.0\":ue(o)?\">=\"+t+\".\"+n+\".0\":\">=\"+r)+\" \"+(a=ue(u)?\"\":ue(c)?\"<\"+(+u+1)+\".0.0\":ue(p)?\"<\"+u+\".\"+(+c+1)+\".0\":f?\"<=\"+u+\".\"+c+\".\"+p+\"-\"+f:\"<=\"+a)).trim()}function pe(e,r){for(var t=0;t<e.length;t++)if(!e[t].test(r))return!1;if(r.prerelease.length){for(t=0;t<e.length;t++)if(n(e[t].semver),e[t].semver!==se&&e[t].semver.prerelease.length>0){var o=e[t].semver;if(o.major===r.major&&o.minor===r.minor&&o.patch===r.patch)return!0}return!1}return!0}function fe(e,r,t){try{r=new ae(r,t)}catch(e){return!1}return r.test(e)}function le(e,r,t,n){var o,i,s,a,u;switch(e=new H(e,n),r=new ae(r,n),t){case\">\":o=W,i=ne,s=Y,a=\">\",u=\">=\";break;case\"<\":o=Y,i=te,s=W,a=\"<\",u=\"<=\";break;default:throw new TypeError('Must provide a hilo val of \"<\" or \">\"')}if(fe(e,r,n))return!1;for(var c=0;c<r.set.length;++c){var p=r.set[c],f=null,l=null;if(p.forEach((function(e){e.semver===se&&(e=new ie(\">=0.0.0\")),f=f||e,l=l||e,o(e.semver,f.semver,n)?f=e:s(e.semver,l.semver,n)&&(l=e)})),f.operator===a||f.operator===u)return!1;if((!l.operator||l.operator===a)&&i(e,l.semver))return!1;if(l.operator===u&&s(e,l.semver))return!1}return!0}ie.prototype.parse=function(e){var r=this.loose?s[D]:s[X],t=e.match(r);if(!t)throw new TypeError(\"Invalid comparator: \"+e);this.operator=t[1],\"=\"===this.operator&&(this.operator=\"\"),t[2]?this.semver=new H(t[2],this.loose):this.semver=se},ie.prototype.toString=function(){return this.value},ie.prototype.test=function(e){return n(\"Comparator.test\",e,this.loose),this.semver===se||(\"string\"==typeof e&&(e=new H(e,this.loose)),oe(e,this.operator,this.semver,this.loose))},ie.prototype.intersects=function(e,r){if(!(e instanceof ie))throw new TypeError(\"a Comparator is required\");var t;if(\"\"===this.operator)return t=new ae(e.value,r),fe(this.value,t,r);if(\"\"===e.operator)return t=new ae(this.value,r),fe(e.semver,t,r);var n=!(\">=\"!==this.operator&&\">\"!==this.operator||\">=\"!==e.operator&&\">\"!==e.operator),o=!(\"<=\"!==this.operator&&\"<\"!==this.operator||\"<=\"!==e.operator&&\"<\"!==e.operator),i=this.semver.version===e.semver.version,s=!(\">=\"!==this.operator&&\"<=\"!==this.operator||\">=\"!==e.operator&&\"<=\"!==e.operator),a=oe(this.semver,\"<\",e.semver,r)&&(\">=\"===this.operator||\">\"===this.operator)&&(\"<=\"===e.operator||\"<\"===e.operator),u=oe(this.semver,\">\",e.semver,r)&&(\"<=\"===this.operator||\"<\"===this.operator)&&(\">=\"===e.operator||\">\"===e.operator);return n||o||i&&s||a||u},r.Range=ae,ae.prototype.format=function(){return this.range=this.set.map((function(e){return e.join(\" \").trim()})).join(\"||\").trim(),this.range},ae.prototype.toString=function(){return this.range},ae.prototype.parseRange=function(e){var r=this.loose;e=e.trim(),n(\"range\",e,r);var t=r?s[Z]:s[G];e=e.replace(t,ce),n(\"hyphen replace\",e),e=e.replace(s[z],\"$1$2$3\"),n(\"comparator trim\",e,s[z]),e=(e=(e=e.replace(s[M],\"$1~\")).replace(s[L],\"$1^\")).split(/\\s+/).join(\" \");var o=r?s[D]:s[X],i=e.split(\" \").map((function(e){return function(e,r){return n(\"comp\",e),e=function(e,r){return e.trim().split(/\\s+/).map((function(e){return function(e,r){n(\"caret\",e,r);var t=r?s[q]:s[N];return e.replace(t,(function(r,t,o,i,s){var a;return n(\"caret\",e,r,t,o,i,s),ue(t)?a=\"\":ue(o)?a=\">=\"+t+\".0.0 <\"+(+t+1)+\".0.0\":ue(i)?a=\"0\"===t?\">=\"+t+\".\"+o+\".0 <\"+t+\".\"+(+o+1)+\".0\":\">=\"+t+\".\"+o+\".0 <\"+(+t+1)+\".0.0\":s?(n(\"replaceCaret pr\",s),\"-\"!==s.charAt(0)&&(s=\"-\"+s),a=\"0\"===t?\"0\"===o?\">=\"+t+\".\"+o+\".\"+i+s+\" <\"+t+\".\"+o+\".\"+(+i+1):\">=\"+t+\".\"+o+\".\"+i+s+\" <\"+t+\".\"+(+o+1)+\".0\":\">=\"+t+\".\"+o+\".\"+i+s+\" <\"+(+t+1)+\".0.0\"):(n(\"no pr\"),a=\"0\"===t?\"0\"===o?\">=\"+t+\".\"+o+\".\"+i+\" <\"+t+\".\"+o+\".\"+(+i+1):\">=\"+t+\".\"+o+\".\"+i+\" <\"+t+\".\"+(+o+1)+\".0\":\">=\"+t+\".\"+o+\".\"+i+\" <\"+(+t+1)+\".0.0\"),n(\"caret return\",a),a}))}(e,r)})).join(\" \")}(e,r),n(\"caret\",e),e=function(e,r){return e.trim().split(/\\s+/).map((function(e){return function(e,r){var t=r?s[P]:s[V];return e.replace(t,(function(r,t,o,i,s){var a;return n(\"tilde\",e,r,t,o,i,s),ue(t)?a=\"\":ue(o)?a=\">=\"+t+\".0.0 <\"+(+t+1)+\".0.0\":ue(i)?a=\">=\"+t+\".\"+o+\".0 <\"+t+\".\"+(+o+1)+\".0\":s?(n(\"replaceTilde pr\",s),\"-\"!==s.charAt(0)&&(s=\"-\"+s),a=\">=\"+t+\".\"+o+\".\"+i+s+\" <\"+t+\".\"+(+o+1)+\".0\"):a=\">=\"+t+\".\"+o+\".\"+i+\" <\"+t+\".\"+(+o+1)+\".0\",n(\"tilde return\",a),a}))}(e,r)})).join(\" \")}(e,r),n(\"tildes\",e),e=function(e,r){return n(\"replaceXRanges\",e,r),e.split(/\\s+/).map((function(e){return function(e,r){e=e.trim();var t=r?s[_]:s[I];return e.replace(t,(function(r,t,o,i,s,a){n(\"xRange\",e,r,t,o,i,s,a);var u=ue(o),c=u||ue(i),p=c||ue(s);return\"=\"===t&&p&&(t=\"\"),u?r=\">\"===t||\"<\"===t?\"<0.0.0\":\"*\":t&&p?(c&&(i=0),p&&(s=0),\">\"===t?(t=\">=\",c?(o=+o+1,i=0,s=0):p&&(i=+i+1,s=0)):\"<=\"===t&&(t=\"<\",c?o=+o+1:i=+i+1),r=t+o+\".\"+i+\".\"+s):c?r=\">=\"+o+\".0.0 <\"+(+o+1)+\".0.0\":p&&(r=\">=\"+o+\".\"+i+\".0 <\"+o+\".\"+(+i+1)+\".0\"),n(\"xRange return\",r),r}))}(e,r)})).join(\" \")}(e,r),n(\"xrange\",e),e=function(e,r){return n(\"replaceStars\",e,r),e.trim().replace(s[B],\"\")}(e,r),n(\"stars\",e),e}(e,r)})).join(\" \").split(/\\s+/);return this.loose&&(i=i.filter((function(e){return!!e.match(o)}))),i=i.map((function(e){return new ie(e,r)}))},ae.prototype.intersects=function(e,r){if(!(e instanceof ae))throw new TypeError(\"a Range is required\");return this.set.some((function(t){return t.every((function(t){return e.set.some((function(e){return e.every((function(e){return t.intersects(e,r)}))}))}))}))},r.toComparators=function(e,r){return new ae(e,r).set.map((function(e){return e.map((function(e){return e.value})).join(\" \").trim().split(\" \")}))},ae.prototype.test=function(e){if(!e)return!1;\"string\"==typeof e&&(e=new H(e,this.loose));for(var r=0;r<this.set.length;r++)if(pe(this.set[r],e))return!0;return!1},r.satisfies=fe,r.maxSatisfying=function(e,r,t){var n=null,o=null;try{var i=new ae(r,t)}catch(e){return null}return e.forEach((function(e){i.test(e)&&(n&&-1!==o.compare(e)||(o=new H(n=e,t)))})),n},r.minSatisfying=function(e,r,t){var n=null,o=null;try{var i=new ae(r,t)}catch(e){return null}return e.forEach((function(e){i.test(e)&&(n&&1!==o.compare(e)||(o=new H(n=e,t)))})),n},r.validRange=function(e,r){try{return new ae(e,r).range||\"*\"}catch(e){return null}},r.ltr=function(e,r,t){return le(e,r,\"<\",t)},r.gtr=function(e,r,t){return le(e,r,\">\",t)},r.outside=le,r.prerelease=function(e,r){var t=F(e,r);return t&&t.prerelease.length?t.prerelease:null},r.intersects=function(e,r,t){return e=new ae(e,t),r=new ae(r,t),e.intersects(r)},r.coerce=function(e){if(e instanceof H)return e;if(\"string\"!=typeof e)return null;var r=e.match(s[O]);return null==r?null:F((r[1]||\"0\")+\".\"+(r[2]||\"0\")+\".\"+(r[3]||\"0\"))}}).call(this,t(1))},function(e,r){var t,n,o=e.exports={};function i(){throw new Error(\"setTimeout has not been defined\")}function s(){throw new Error(\"clearTimeout has not been defined\")}function a(e){if(t===setTimeout)return setTimeout(e,0);if((t===i||!t)&&setTimeout)return t=setTimeout,setTimeout(e,0);try{return t(e,0)}catch(r){try{return t.call(null,e,0)}catch(r){return t.call(this,e,0)}}}!function(){try{t=\"function\"==typeof setTimeout?setTimeout:i}catch(e){t=i}try{n=\"function\"==typeof clearTimeout?clearTimeout:s}catch(e){n=s}}();var u,c=[],p=!1,f=-1;function l(){p&&u&&(p=!1,u.length?c=u.concat(c):f=-1,c.length&&h())}function h(){if(!p){var e=a(l);p=!0;for(var r=c.length;r;){for(u=c,c=[];++f<r;)u&&u[f].run();f=-1,r=c.length}u=null,p=!1,function(e){if(n===clearTimeout)return clearTimeout(e);if((n===s||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(e);try{n(e)}catch(r){try{return n.call(null,e)}catch(r){return n.call(this,e)}}}(e)}}function v(e,r){this.fun=e,this.array=r}function m(){}o.nextTick=function(e){var r=new Array(arguments.length-1);if(arguments.length>1)for(var t=1;t<arguments.length;t++)r[t-1]=arguments[t];c.push(new v(e,r)),1!==c.length||p||a(h)},v.prototype.run=function(){this.fun.apply(null,this.array)},o.title=\"browser\",o.browser=!0,o.env={},o.argv=[],o.version=\"\",o.versions={},o.on=m,o.addListener=m,o.once=m,o.off=m,o.removeListener=m,o.removeAllListeners=m,o.emit=m,o.prependListener=m,o.prependOnceListener=m,o.listeners=function(e){return[]},o.binding=function(e){throw new Error(\"process.binding is not supported\")},o.cwd=function(){return\"/\"},o.chdir=function(e){throw new Error(\"process.chdir is not supported\")},o.umask=function(){return 0}}])}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nclass Node<K, V> {\n\treadonly forward: Node<K, V>[];\n\tconstructor(readonly level: number, readonly key: K, public value: V) {\n\t\tthis.forward = [];\n\t}\n}\n\nconst NIL: undefined = undefined;\n\ninterface Comparator<K> {\n\t(a: K, b: K): number;\n}\n\nexport class SkipList<K, V> implements Map<K, V> {\n\n\treadonly [Symbol.toStringTag] = 'SkipList';\n\n\tprivate _maxLevel: number;\n\tprivate _level: number = 0;\n\tprivate _header: Node<K, V>;\n\tprivate _size: number = 0;\n\n\t/**\n\t *\n\t * @param capacity Capacity at which the list performs best\n\t */\n\tconstructor(\n\t\treadonly comparator: (a: K, b: K) => number,\n\t\tcapacity: number = 2 ** 16\n\t) {\n\t\tthis._maxLevel = Math.max(1, Math.log2(capacity) | 0);\n\t\tthis._header = <any>new Node(this._maxLevel, NIL, NIL);\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tclear(): void {\n\t\tthis._header = <any>new Node(this._maxLevel, NIL, NIL);\n\t}\n\n\thas(key: K): boolean {\n\t\treturn Boolean(SkipList._search(this, key, this.comparator));\n\t}\n\n\tget(key: K): V | undefined {\n\t\treturn SkipList._search(this, key, this.comparator)?.value;\n\t}\n\n\tset(key: K, value: V): this {\n\t\tif (SkipList._insert(this, key, value, this.comparator)) {\n\t\t\tthis._size += 1;\n\t\t}\n\t\treturn this;\n\t}\n\n\tdelete(key: K): boolean {\n\t\tconst didDelete = SkipList._delete(this, key, this.comparator);\n\t\tif (didDelete) {\n\t\t\tthis._size -= 1;\n\t\t}\n\t\treturn didDelete;\n\t}\n\n\t// --- iteration\n\n\tforEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void {\n\t\tlet node = this._header.forward[0];\n\t\twhile (node) {\n\t\t\tcallbackfn.call(thisArg, node.value, node.key, this);\n\t\t\tnode = node.forward[0];\n\t\t}\n\t}\n\n\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\treturn this.entries();\n\t}\n\n\t*entries(): IterableIterator<[K, V]> {\n\t\tlet node = this._header.forward[0];\n\t\twhile (node) {\n\t\t\tyield [node.key, node.value];\n\t\t\tnode = node.forward[0];\n\t\t}\n\t}\n\n\t*keys(): IterableIterator<K> {\n\t\tlet node = this._header.forward[0];\n\t\twhile (node) {\n\t\t\tyield node.key;\n\t\t\tnode = node.forward[0];\n\t\t}\n\t}\n\n\t*values(): IterableIterator<V> {\n\t\tlet node = this._header.forward[0];\n\t\twhile (node) {\n\t\t\tyield node.value;\n\t\t\tnode = node.forward[0];\n\t\t}\n\t}\n\n\ttoString(): string {\n\t\t// debug string...\n\t\tlet result = '[SkipList]:';\n\t\tlet node = this._header.forward[0];\n\t\twhile (node) {\n\t\t\tresult += `node(${node.key}, ${node.value}, lvl:${node.level})`;\n\t\t\tnode = node.forward[0];\n\t\t}\n\t\treturn result;\n\t}\n\n\t// from https://www.epaperpress.com/sortsearch/download/skiplist.pdf\n\n\tprivate static _search<K, V>(list: SkipList<K, V>, searchKey: K, comparator: Comparator<K>) {\n\t\tlet x = list._header;\n\t\tfor (let i = list._level - 1; i >= 0; i--) {\n\t\t\twhile (x.forward[i] && comparator(x.forward[i].key, searchKey) < 0) {\n\t\t\t\tx = x.forward[i];\n\t\t\t}\n\t\t}\n\t\tx = x.forward[0];\n\t\tif (x && comparator(x.key, searchKey) === 0) {\n\t\t\treturn x;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate static _insert<K, V>(list: SkipList<K, V>, searchKey: K, value: V, comparator: Comparator<K>) {\n\t\tconst update: Node<K, V>[] = [];\n\t\tlet x = list._header;\n\t\tfor (let i = list._level - 1; i >= 0; i--) {\n\t\t\twhile (x.forward[i] && comparator(x.forward[i].key, searchKey) < 0) {\n\t\t\t\tx = x.forward[i];\n\t\t\t}\n\t\t\tupdate[i] = x;\n\t\t}\n\t\tx = x.forward[0];\n\t\tif (x && comparator(x.key, searchKey) === 0) {\n\t\t\t// update\n\t\t\tx.value = value;\n\t\t\treturn false;\n\t\t} else {\n\t\t\t// insert\n\t\t\tconst lvl = SkipList._randomLevel(list);\n\t\t\tif (lvl > list._level) {\n\t\t\t\tfor (let i = list._level; i < lvl; i++) {\n\t\t\t\t\tupdate[i] = list._header;\n\t\t\t\t}\n\t\t\t\tlist._level = lvl;\n\t\t\t}\n\t\t\tx = new Node<K, V>(lvl, searchKey, value);\n\t\t\tfor (let i = 0; i < lvl; i++) {\n\t\t\t\tx.forward[i] = update[i].forward[i];\n\t\t\t\tupdate[i].forward[i] = x;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tprivate static _randomLevel(list: SkipList<any, any>, p: number = 0.5): number {\n\t\tlet lvl = 1;\n\t\twhile (Math.random() < p && lvl < list._maxLevel) {\n\t\t\tlvl += 1;\n\t\t}\n\t\treturn lvl;\n\t}\n\n\tprivate static _delete<K, V>(list: SkipList<K, V>, searchKey: K, comparator: Comparator<K>) {\n\t\tconst update: Node<K, V>[] = [];\n\t\tlet x = list._header;\n\t\tfor (let i = list._level - 1; i >= 0; i--) {\n\t\t\twhile (x.forward[i] && comparator(x.forward[i].key, searchKey) < 0) {\n\t\t\t\tx = x.forward[i];\n\t\t\t}\n\t\t\tupdate[i] = x;\n\t\t}\n\t\tx = x.forward[0];\n\t\tif (!x || comparator(x.key, searchKey) !== 0) {\n\t\t\t// not found\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0; i < list._level; i++) {\n\t\t\tif (update[i].forward[i] !== x) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tupdate[i].forward[i] = x.forward[i];\n\t\t}\n\t\twhile (list._level > 0 && list._header.forward[list._level - 1] === NIL) {\n\t\t\tlist._level -= 1;\n\t\t}\n\t\treturn true;\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { globals } from 'vs/base/common/platform';\n\nconst hasPerformanceNow = (globals.performance && typeof globals.performance.now === 'function');\n\nexport class StopWatch {\n\n\tprivate _highResolution: boolean;\n\tprivate _startTime: number;\n\tprivate _stopTime: number;\n\n\tpublic static create(highResolution: boolean = true): StopWatch {\n\t\treturn new StopWatch(highResolution);\n\t}\n\n\tconstructor(highResolution: boolean) {\n\t\tthis._highResolution = hasPerformanceNow && highResolution;\n\t\tthis._startTime = this._now();\n\t\tthis._stopTime = -1;\n\t}\n\n\tpublic stop(): void {\n\t\tthis._stopTime = this._now();\n\t}\n\n\tpublic elapsed(): number {\n\t\tif (this._stopTime !== -1) {\n\t\t\treturn this._stopTime - this._startTime;\n\t\t}\n\t\treturn this._now() - this._startTime;\n\t}\n\n\tprivate _now(): number {\n\t\treturn this._highResolution ? globals.performance.now() : Date.now();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { once as onceFn } from 'vs/base/common/functional';\nimport { combinedDisposable, Disposable, DisposableStore, IDisposable, SafeDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { LinkedList } from 'vs/base/common/linkedList';\nimport { IObservable, IObserver } from 'vs/base/common/observable';\nimport { StopWatch } from 'vs/base/common/stopwatch';\n\n\n// -----------------------------------------------------------------------------------------------------------------------\n// Uncomment the next line to print warnings whenever an emitter with listeners is disposed. That is a sign of code smell.\n// -----------------------------------------------------------------------------------------------------------------------\nconst _enableDisposeWithListenerWarning = false;\n// _enableDisposeWithListenerWarning = Boolean(\"TRUE\"); // causes a linter warning so that it cannot be pushed\n\n\n// -----------------------------------------------------------------------------------------------------------------------\n// Uncomment the next line to print warnings whenever a snapshotted event is used repeatedly without cleanup.\n// See https://github.com/microsoft/vscode/issues/142851\n// -----------------------------------------------------------------------------------------------------------------------\nconst _enableSnapshotPotentialLeakWarning = false;\n// _enableSnapshotPotentialLeakWarning = Boolean(\"TRUE\"); // causes a linter warning so that it cannot be pushed\n\n/**\n * To an event a function with one or zero parameters\n * can be subscribed. The event is the subscriber function itself.\n */\nexport interface Event<T> {\n\t(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n}\n\nexport namespace Event {\n\texport const None: Event<any> = () => Disposable.None;\n\n\n\tfunction _addLeakageTraceLogic(options: EmitterOptions) {\n\t\tif (_enableSnapshotPotentialLeakWarning) {\n\t\t\tconst { onListenerDidAdd: origListenerDidAdd } = options;\n\t\t\tconst stack = Stacktrace.create();\n\t\t\tlet count = 0;\n\t\t\toptions.onListenerDidAdd = () => {\n\t\t\t\tif (++count === 2) {\n\t\t\t\t\tconsole.warn('snapshotted emitter LIKELY used public and SHOULD HAVE BEEN created with DisposableStore. snapshotted here');\n\t\t\t\t\tstack.print();\n\t\t\t\t}\n\t\t\t\torigListenerDidAdd?.();\n\t\t\t};\n\t\t}\n\t}\n\n\n\t/**\n\t * Given an event, returns another event which only fires once.\n\t */\n\texport function once<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => {\n\t\t\t// we need this, in case the event fires during the listener call\n\t\t\tlet didFire = false;\n\t\t\tlet result: IDisposable | undefined = undefined;\n\t\t\tresult = event(e => {\n\t\t\t\tif (didFire) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (result) {\n\t\t\t\t\tresult.dispose();\n\t\t\t\t} else {\n\t\t\t\t\tdidFire = true;\n\t\t\t\t}\n\n\t\t\t\treturn listener.call(thisArgs, e);\n\t\t\t}, null, disposables);\n\n\t\t\tif (didFire) {\n\t\t\t\tresult.dispose();\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t}\n\n\t/**\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function map<I, O>(event: Event<I>, map: (i: I) => O, disposable?: DisposableStore): Event<O> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => listener.call(thisArgs, map(i)), null, disposables), disposable);\n\t}\n\n\t/**\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function forEach<I>(event: Event<I>, each: (i: I) => void, disposable?: DisposableStore): Event<I> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables), disposable);\n\t}\n\n\t/**\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function filter<T, U>(event: Event<T | U>, filter: (e: T | U) => e is T, disposable?: DisposableStore): Event<T>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean, disposable?: DisposableStore): Event<T>;\n\texport function filter<T, R>(event: Event<T | R>, filter: (e: T | R) => e is R, disposable?: DisposableStore): Event<R>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean, disposable?: DisposableStore): Event<T> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables), disposable);\n\t}\n\n\t/**\n\t * Given an event, returns the same event but typed as `Event<void>`.\n\t */\n\texport function signal<T>(event: Event<T>): Event<void> {\n\t\treturn event as Event<any> as Event<void>;\n\t}\n\n\t/**\n\t * Given a collection of events, returns a single event which emits\n\t * whenever any of the provided events emit.\n\t */\n\texport function any<T>(...events: Event<T>[]): Event<T>;\n\texport function any(...events: Event<any>[]): Event<void>;\n\texport function any<T>(...events: Event<T>[]): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\n\t}\n\n\t/**\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function reduce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, initial?: O, disposable?: DisposableStore): Event<O> {\n\t\tlet output: O | undefined = initial;\n\n\t\treturn map<I, O>(event, e => {\n\t\t\toutput = merge(output, e);\n\t\t\treturn output;\n\t\t}, disposable);\n\t}\n\n\tfunction snapshot<T>(event: Event<T>, disposable: DisposableStore | undefined): Event<T> {\n\t\tlet listener: IDisposable | undefined;\n\n\t\tconst options: EmitterOptions | undefined = {\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tlistener?.dispose();\n\t\t\t}\n\t\t};\n\n\t\tif (!disposable) {\n\t\t\t_addLeakageTraceLogic(options);\n\t\t}\n\n\t\tconst emitter = new Emitter<T>(options);\n\n\t\tdisposable?.add(emitter);\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function debounce<T>(event: Event<T>, merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number, disposable?: DisposableStore): Event<T>;\n\t/**\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay?: number, leading?: boolean, leakWarningThreshold?: number, disposable?: DisposableStore): Event<O>;\n\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay: number = 100, leading = false, leakWarningThreshold?: number, disposable?: DisposableStore): Event<O> {\n\n\t\tlet subscription: IDisposable;\n\t\tlet output: O | undefined = undefined;\n\t\tlet handle: any = undefined;\n\t\tlet numDebouncedCalls = 0;\n\n\t\tconst options: EmitterOptions | undefined = {\n\t\t\tleakWarningThreshold,\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tsubscription = event(cur => {\n\t\t\t\t\tnumDebouncedCalls++;\n\t\t\t\t\toutput = merge(output, cur);\n\n\t\t\t\t\tif (leading && !handle) {\n\t\t\t\t\t\temitter.fire(output);\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t\thandle = setTimeout(() => {\n\t\t\t\t\t\tconst _output = output;\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t\thandle = undefined;\n\t\t\t\t\t\tif (!leading || numDebouncedCalls > 1) {\n\t\t\t\t\t\t\temitter.fire(_output!);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnumDebouncedCalls = 0;\n\t\t\t\t\t}, delay);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tsubscription.dispose();\n\t\t\t}\n\t\t};\n\n\t\tif (!disposable) {\n\t\t\t_addLeakageTraceLogic(options);\n\t\t}\n\n\t\tconst emitter = new Emitter<O>(options);\n\n\t\tdisposable?.add(emitter);\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function latch<T>(event: Event<T>, equals: (a: T, b: T) => boolean = (a, b) => a === b, disposable?: DisposableStore): Event<T> {\n\t\tlet firstCall = true;\n\t\tlet cache: T;\n\n\t\treturn filter(event, value => {\n\t\t\tconst shouldEmit = firstCall || !equals(value, cache);\n\t\t\tfirstCall = false;\n\t\t\tcache = value;\n\t\t\treturn shouldEmit;\n\t\t}, disposable);\n\t}\n\n\t/**\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function split<T, U>(event: Event<T | U>, isT: (e: T | U) => e is T, disposable?: DisposableStore): [Event<T>, Event<U>] {\n\t\treturn [\n\t\t\tEvent.filter(event, isT, disposable),\n\t\t\tEvent.filter(event, e => !isT(e), disposable) as Event<U>,\n\t\t];\n\t}\n\n\t/**\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function buffer<T>(event: Event<T>, flushAfterTimeout = false, _buffer: T[] = []): Event<T> {\n\t\tlet buffer: T[] | null = _buffer.slice();\n\n\t\tlet listener: IDisposable | null = event(e => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.push(e);\n\t\t\t} else {\n\t\t\t\temitter.fire(e);\n\t\t\t}\n\t\t});\n\n\t\tconst flush = () => {\n\t\t\tbuffer?.forEach(e => emitter.fire(e));\n\t\t\tbuffer = null;\n\t\t};\n\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tif (!listener) {\n\t\t\t\t\tlistener = event(e => emitter.fire(e));\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonFirstListenerDidAdd() {\n\t\t\t\tif (buffer) {\n\t\t\t\t\tif (flushAfterTimeout) {\n\t\t\t\t\t\tsetTimeout(flush);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tflush();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonLastListenerRemove() {\n\t\t\t\tif (listener) {\n\t\t\t\t\tlistener.dispose();\n\t\t\t\t}\n\t\t\t\tlistener = null;\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\texport interface IChainableEvent<T> extends IDisposable {\n\n\t\tevent: Event<T>;\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O>;\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R>;\n\t\tlatch(): IChainableEvent<T>;\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\ton(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n\t\tonce(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n\t}\n\n\tclass ChainableEvent<T> implements IChainableEvent<T> {\n\n\t\tprivate readonly disposables = new DisposableStore();\n\n\t\tconstructor(readonly event: Event<T>) { }\n\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O> {\n\t\t\treturn new ChainableEvent(map(this.event, fn, this.disposables));\n\t\t}\n\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(forEach(this.event, fn, this.disposables));\n\t\t}\n\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(filter(this.event, fn, this.disposables));\n\t\t}\n\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(reduce(this.event, merge, initial, this.disposables));\n\t\t}\n\n\t\tlatch(): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(latch(this.event, undefined, this.disposables));\n\t\t}\n\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay: number = 100, leading = false, leakWarningThreshold?: number): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(debounce(this.event, merge, delay, leading, leakWarningThreshold, this.disposables));\n\t\t}\n\n\t\ton(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[] | DisposableStore) {\n\t\t\treturn this.event(listener, thisArgs, disposables);\n\t\t}\n\n\t\tonce(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[]) {\n\t\t\treturn once(this.event)(listener, thisArgs, disposables);\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.disposables.dispose();\n\t\t}\n\t}\n\n\texport function chain<T>(event: Event<T>): IChainableEvent<T> {\n\t\treturn new ChainableEvent(event);\n\t}\n\n\texport interface NodeEventEmitter {\n\t\ton(event: string | symbol, listener: Function): unknown;\n\t\tremoveListener(event: string | symbol, listener: Function): unknown;\n\t}\n\n\texport function fromNodeEventEmitter<T>(emitter: NodeEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.on(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport interface DOMEventEmitter {\n\t\taddEventListener(event: string | symbol, listener: Function): void;\n\t\tremoveEventListener(event: string | symbol, listener: Function): void;\n\t}\n\n\texport function fromDOMEventEmitter<T>(emitter: DOMEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport function toPromise<T>(event: Event<T>): Promise<T> {\n\t\treturn new Promise(resolve => once(event)(resolve));\n\t}\n\n\texport function runAndSubscribe<T>(event: Event<T>, handler: (e: T | undefined) => any): IDisposable {\n\t\thandler(undefined);\n\t\treturn event(e => handler(e));\n\t}\n\n\texport function runAndSubscribeWithStore<T>(event: Event<T>, handler: (e: T | undefined, disposableStore: DisposableStore) => any): IDisposable {\n\t\tlet store: DisposableStore | null = null;\n\n\t\tfunction run(e: T | undefined) {\n\t\t\tstore?.dispose();\n\t\t\tstore = new DisposableStore();\n\t\t\thandler(e, store);\n\t\t}\n\n\t\trun(undefined);\n\t\tconst disposable = event(e => run(e));\n\t\treturn toDisposable(() => {\n\t\t\tdisposable.dispose();\n\t\t\tstore?.dispose();\n\t\t});\n\t}\n\n\tclass EmitterObserver<T> implements IObserver {\n\n\t\treadonly emitter: Emitter<T>;\n\n\t\tprivate _counter = 0;\n\t\tprivate _hasChanged = false;\n\n\t\tconstructor(readonly obs: IObservable<T, any>, store: DisposableStore | undefined) {\n\t\t\tconst options = {\n\t\t\t\tonFirstListenerAdd: () => {\n\t\t\t\t\tobs.addObserver(this);\n\t\t\t\t},\n\t\t\t\tonLastListenerRemove: () => {\n\t\t\t\t\tobs.removeObserver(this);\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (!store) {\n\t\t\t\t_addLeakageTraceLogic(options);\n\t\t\t}\n\t\t\tthis.emitter = new Emitter<T>(options);\n\t\t\tif (store) {\n\t\t\t\tstore.add(this.emitter);\n\t\t\t}\n\t\t}\n\n\t\tbeginUpdate<T>(_observable: IObservable<T, void>): void {\n\t\t\t// console.assert(_observable === this.obs);\n\t\t\tthis._counter++;\n\t\t}\n\n\t\thandleChange<T, TChange>(_observable: IObservable<T, TChange>, _change: TChange): void {\n\t\t\tthis._hasChanged = true;\n\t\t}\n\n\t\tendUpdate<T>(_observable: IObservable<T, void>): void {\n\t\t\tif (--this._counter === 0) {\n\t\t\t\tif (this._hasChanged) {\n\t\t\t\t\tthis._hasChanged = false;\n\t\t\t\t\tthis.emitter.fire(this.obs.get());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\texport function fromObservable<T>(obs: IObservable<T, any>, store?: DisposableStore): Event<T> {\n\t\tconst observer = new EmitterObserver(obs, store);\n\t\treturn observer.emitter.event;\n\t}\n}\n\nexport interface EmitterOptions {\n\tonFirstListenerAdd?: Function;\n\tonFirstListenerDidAdd?: Function;\n\tonListenerDidAdd?: Function;\n\tonLastListenerRemove?: Function;\n\tleakWarningThreshold?: number;\n\n\t/**\n\t * Pass in a delivery queue, which is useful for ensuring\n\t * in order event delivery across multiple emitters.\n\t */\n\tdeliveryQueue?: EventDeliveryQueue;\n\n\t/** ONLY enable this during development */\n\t_profName?: string;\n}\n\n\nclass EventProfiling {\n\n\tprivate static _idPool = 0;\n\n\tprivate _name: string;\n\tprivate _stopWatch?: StopWatch;\n\tprivate _listenerCount: number = 0;\n\tprivate _invocationCount = 0;\n\tprivate _elapsedOverall = 0;\n\n\tconstructor(name: string) {\n\t\tthis._name = `${name}_${EventProfiling._idPool++}`;\n\t}\n\n\tstart(listenerCount: number): void {\n\t\tthis._stopWatch = new StopWatch(true);\n\t\tthis._listenerCount = listenerCount;\n\t}\n\n\tstop(): void {\n\t\tif (this._stopWatch) {\n\t\t\tconst elapsed = this._stopWatch.elapsed();\n\t\t\tthis._elapsedOverall += elapsed;\n\t\t\tthis._invocationCount += 1;\n\n\t\t\tconsole.info(`did FIRE ${this._name}: elapsed_ms: ${elapsed.toFixed(5)}, listener: ${this._listenerCount} (elapsed_overall: ${this._elapsedOverall.toFixed(2)}, invocations: ${this._invocationCount})`);\n\t\t\tthis._stopWatch = undefined;\n\t\t}\n\t}\n}\n\nlet _globalLeakWarningThreshold = -1;\nexport function setGlobalLeakWarningThreshold(n: number): IDisposable {\n\tconst oldValue = _globalLeakWarningThreshold;\n\t_globalLeakWarningThreshold = n;\n\treturn {\n\t\tdispose() {\n\t\t\t_globalLeakWarningThreshold = oldValue;\n\t\t}\n\t};\n}\n\nclass LeakageMonitor {\n\n\tprivate _stacks: Map<string, number> | undefined;\n\tprivate _warnCountdown: number = 0;\n\n\tconstructor(\n\t\treadonly customThreshold?: number,\n\t\treadonly name: string = Math.random().toString(18).slice(2, 5),\n\t) { }\n\n\tdispose(): void {\n\t\tif (this._stacks) {\n\t\t\tthis._stacks.clear();\n\t\t}\n\t}\n\n\tcheck(stack: Stacktrace, listenerCount: number): undefined | (() => void) {\n\n\t\tlet threshold = _globalLeakWarningThreshold;\n\t\tif (typeof this.customThreshold === 'number') {\n\t\t\tthreshold = this.customThreshold;\n\t\t}\n\n\t\tif (threshold <= 0 || listenerCount < threshold) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this._stacks) {\n\t\t\tthis._stacks = new Map();\n\t\t}\n\t\tconst count = (this._stacks.get(stack.value) || 0);\n\t\tthis._stacks.set(stack.value, count + 1);\n\t\tthis._warnCountdown -= 1;\n\n\t\tif (this._warnCountdown <= 0) {\n\t\t\t// only warn on first exceed and then every time the limit\n\t\t\t// is exceeded by 50% again\n\t\t\tthis._warnCountdown = threshold * 0.5;\n\n\t\t\t// find most frequent listener and print warning\n\t\t\tlet topStack: string | undefined;\n\t\t\tlet topCount: number = 0;\n\t\t\tfor (const [stack, count] of this._stacks) {\n\t\t\t\tif (!topStack || topCount < count) {\n\t\t\t\t\ttopStack = stack;\n\t\t\t\t\ttopCount = count;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconsole.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n\t\t\tconsole.warn(topStack!);\n\t\t}\n\n\t\treturn () => {\n\t\t\tconst count = (this._stacks!.get(stack.value) || 0);\n\t\t\tthis._stacks!.set(stack.value, count - 1);\n\t\t};\n\t}\n}\n\nclass Stacktrace {\n\n\tstatic create() {\n\t\treturn new Stacktrace(new Error().stack ?? '');\n\t}\n\n\tprivate constructor(readonly value: string) { }\n\n\tprint() {\n\t\tconsole.warn(this.value.split('\\n').slice(2).join('\\n'));\n\t}\n}\n\nclass Listener<T> {\n\n\treadonly subscription = new SafeDisposable();\n\n\tconstructor(\n\t\treadonly callback: (e: T) => void,\n\t\treadonly callbackThis: any | undefined,\n\t\treadonly stack: Stacktrace | undefined\n\t) { }\n\n\tinvoke(e: T) {\n\t\tthis.callback.call(this.callbackThis, e);\n\t}\n}\n\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n\tclass Document {\n\n\t\tprivate readonly _onDidChange = new Emitter<(value:string)=>any>();\n\n\t\tpublic onDidChange = this._onDidChange.event;\n\n\t\t// getter-style\n\t\t// get onDidChange(): Event<(value:string)=>any> {\n\t\t// \treturn this._onDidChange.event;\n\t\t// }\n\n\t\tprivate _doIt() {\n\t\t\t//...\n\t\t\tthis._onDidChange.fire(value);\n\t\t}\n\t}\n */\nexport class Emitter<T> {\n\n\tprivate readonly _options?: EmitterOptions;\n\tprivate readonly _leakageMon?: LeakageMonitor;\n\tprivate readonly _perfMon?: EventProfiling;\n\tprivate _disposed: boolean = false;\n\tprivate _event?: Event<T>;\n\tprivate _deliveryQueue?: EventDeliveryQueue;\n\tprotected _listeners?: LinkedList<Listener<T>>;\n\n\tconstructor(options?: EmitterOptions) {\n\t\tthis._options = options;\n\t\tthis._leakageMon = _globalLeakWarningThreshold > 0 ? new LeakageMonitor(this._options && this._options.leakWarningThreshold) : undefined;\n\t\tthis._perfMon = this._options?._profName ? new EventProfiling(this._options._profName) : undefined;\n\t\tthis._deliveryQueue = this._options?.deliveryQueue;\n\t}\n\n\tdispose() {\n\t\tif (!this._disposed) {\n\t\t\tthis._disposed = true;\n\n\t\t\t// It is bad to have listeners at the time of disposing an emitter, it is worst to have listeners keep the emitter\n\t\t\t// alive via the reference that's embedded in their disposables. Therefore we loop over all remaining listeners and\n\t\t\t// unset their subscriptions/disposables. Looping and blaming remaining listeners is done on next tick because the\n\t\t\t// the following programming pattern is very popular:\n\t\t\t//\n\t\t\t// const someModel = this._disposables.add(new ModelObject()); // (1) create and register model\n\t\t\t// this._disposables.add(someModel.onDidChange(() => { ... }); // (2) subscribe and register model-event listener\n\t\t\t// ...later...\n\t\t\t// this._disposables.dispose(); disposes (1) then (2): don't warn after (1) but after the \"overall dispose\" is done\n\n\t\t\tif (this._listeners) {\n\t\t\t\tif (_enableDisposeWithListenerWarning) {\n\t\t\t\t\tconst listeners = Array.from(this._listeners);\n\t\t\t\t\tqueueMicrotask(() => {\n\t\t\t\t\t\tfor (const listener of listeners) {\n\t\t\t\t\t\t\tif (listener.subscription.isset()) {\n\t\t\t\t\t\t\t\tlistener.subscription.unset();\n\t\t\t\t\t\t\t\tlistener.stack?.print();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis._listeners.clear();\n\t\t\t}\n\t\t\tthis._deliveryQueue?.clear(this);\n\t\t\tthis._options?.onLastListenerRemove?.();\n\t\t\tthis._leakageMon?.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * For the public to allow to subscribe\n\t * to events from this Emitter\n\t */\n\tget event(): Event<T> {\n\t\tif (!this._event) {\n\t\t\tthis._event = (callback: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore) => {\n\t\t\t\tif (!this._listeners) {\n\t\t\t\t\tthis._listeners = new LinkedList();\n\t\t\t\t}\n\n\t\t\t\tconst firstListener = this._listeners.isEmpty();\n\n\t\t\t\tif (firstListener && this._options?.onFirstListenerAdd) {\n\t\t\t\t\tthis._options.onFirstListenerAdd(this);\n\t\t\t\t}\n\n\t\t\t\tlet removeMonitor: Function | undefined;\n\t\t\t\tlet stack: Stacktrace | undefined;\n\t\t\t\tif (this._leakageMon && this._listeners.size >= 30) {\n\t\t\t\t\t// check and record this emitter for potential leakage\n\t\t\t\t\tstack = Stacktrace.create();\n\t\t\t\t\tremoveMonitor = this._leakageMon.check(stack, this._listeners.size + 1);\n\t\t\t\t}\n\n\t\t\t\tif (_enableDisposeWithListenerWarning) {\n\t\t\t\t\tstack = stack ?? Stacktrace.create();\n\t\t\t\t}\n\n\t\t\t\tconst listener = new Listener(callback, thisArgs, stack);\n\t\t\t\tconst removeListener = this._listeners.push(listener);\n\n\t\t\t\tif (firstListener && this._options?.onFirstListenerDidAdd) {\n\t\t\t\t\tthis._options.onFirstListenerDidAdd(this);\n\t\t\t\t}\n\n\t\t\t\tif (this._options?.onListenerDidAdd) {\n\t\t\t\t\tthis._options.onListenerDidAdd(this, callback, thisArgs);\n\t\t\t\t}\n\n\t\t\t\tconst result = listener.subscription.set(() => {\n\t\t\t\t\tremoveMonitor?.();\n\t\t\t\t\tif (!this._disposed) {\n\t\t\t\t\t\tremoveListener();\n\t\t\t\t\t\tif (this._options && this._options.onLastListenerRemove) {\n\t\t\t\t\t\t\tconst hasListeners = (this._listeners && !this._listeners.isEmpty());\n\t\t\t\t\t\t\tif (!hasListeners) {\n\t\t\t\t\t\t\t\tthis._options.onLastListenerRemove(this);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (disposables instanceof DisposableStore) {\n\t\t\t\t\tdisposables.add(result);\n\t\t\t\t} else if (Array.isArray(disposables)) {\n\t\t\t\t\tdisposables.push(result);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\treturn this._event;\n\t}\n\n\t/**\n\t * To be kept private to fire an event to\n\t * subscribers\n\t */\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\t// put all [listener,event]-pairs into delivery queue\n\t\t\t// then emit all event. an inner/nested event might be\n\t\t\t// the driver of this\n\n\t\t\tif (!this._deliveryQueue) {\n\t\t\t\tthis._deliveryQueue = new PrivateEventDeliveryQueue();\n\t\t\t}\n\n\t\t\tfor (const listener of this._listeners) {\n\t\t\t\tthis._deliveryQueue.push(this, listener, event);\n\t\t\t}\n\n\t\t\t// start/stop performance insight collection\n\t\t\tthis._perfMon?.start(this._deliveryQueue.size);\n\n\t\t\tthis._deliveryQueue.deliver();\n\n\t\t\tthis._perfMon?.stop();\n\t\t}\n\t}\n\n\thasListeners(): boolean {\n\t\tif (!this._listeners) {\n\t\t\treturn false;\n\t\t}\n\t\treturn (!this._listeners.isEmpty());\n\t}\n}\n\nexport class EventDeliveryQueue {\n\tprotected _queue = new LinkedList<EventDeliveryQueueElement>();\n\n\tget size(): number {\n\t\treturn this._queue.size;\n\t}\n\n\tpush<T>(emitter: Emitter<T>, listener: Listener<T>, event: T): void {\n\t\tthis._queue.push(new EventDeliveryQueueElement(emitter, listener, event));\n\t}\n\n\tclear<T>(emitter: Emitter<T>): void {\n\t\tconst newQueue = new LinkedList<EventDeliveryQueueElement>();\n\t\tfor (const element of this._queue) {\n\t\t\tif (element.emitter !== emitter) {\n\t\t\t\tnewQueue.push(element);\n\t\t\t}\n\t\t}\n\t\tthis._queue = newQueue;\n\t}\n\n\tdeliver(): void {\n\t\twhile (this._queue.size > 0) {\n\t\t\tconst element = this._queue.shift()!;\n\t\t\ttry {\n\t\t\t\telement.listener.invoke(element.event);\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * An `EventDeliveryQueue` that is guaranteed to be used by a single `Emitter`.\n */\nclass PrivateEventDeliveryQueue extends EventDeliveryQueue {\n\toverride clear<T>(emitter: Emitter<T>): void {\n\t\t// Here we can just clear the entire linked list because\n\t\t// all elements are guaranteed to belong to this emitter\n\t\tthis._queue.clear();\n\t}\n}\n\nclass EventDeliveryQueueElement<T = any> {\n\tconstructor(\n\t\treadonly emitter: Emitter<T>,\n\t\treadonly listener: Listener<T>,\n\t\treadonly event: T\n\t) { }\n}\n\nexport interface IWaitUntil {\n\ttoken: CancellationToken;\n\twaitUntil(thenable: Promise<unknown>): void;\n}\n\nexport type IWaitUntilData<T> = Omit<Omit<T, 'waitUntil'>, 'token'>;\n\nexport class AsyncEmitter<T extends IWaitUntil> extends Emitter<T> {\n\n\tprivate _asyncDeliveryQueue?: LinkedList<[Listener<T>, IWaitUntilData<T>]>;\n\n\tasync fireAsync(data: IWaitUntilData<T>, token: CancellationToken, promiseJoin?: (p: Promise<unknown>, listener: Function) => Promise<unknown>): Promise<void> {\n\t\tif (!this._listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._asyncDeliveryQueue) {\n\t\t\tthis._asyncDeliveryQueue = new LinkedList();\n\t\t}\n\n\t\tfor (const listener of this._listeners) {\n\t\t\tthis._asyncDeliveryQueue.push([listener, data]);\n\t\t}\n\n\t\twhile (this._asyncDeliveryQueue.size > 0 && !token.isCancellationRequested) {\n\n\t\t\tconst [listener, data] = this._asyncDeliveryQueue.shift()!;\n\t\t\tconst thenables: Promise<unknown>[] = [];\n\n\t\t\tconst event = <T>{\n\t\t\t\t...data,\n\t\t\t\ttoken,\n\t\t\t\twaitUntil: (p: Promise<unknown>): void => {\n\t\t\t\t\tif (Object.isFrozen(thenables)) {\n\t\t\t\t\t\tthrow new Error('waitUntil can NOT be called asynchronous');\n\t\t\t\t\t}\n\t\t\t\t\tif (promiseJoin) {\n\t\t\t\t\t\tp = promiseJoin(p, listener.callback);\n\t\t\t\t\t}\n\t\t\t\t\tthenables.push(p);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tlistener.invoke(event);\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// freeze thenables-collection to enforce sync-calls to\n\t\t\t// wait until and then wait for all thenables to resolve\n\t\t\tObject.freeze(thenables);\n\n\t\t\tawait Promise.allSettled(thenables).then(values => {\n\t\t\t\tfor (const value of values) {\n\t\t\t\t\tif (value.status === 'rejected') {\n\t\t\t\t\t\tonUnexpectedError(value.reason);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\n\nexport class PauseableEmitter<T> extends Emitter<T> {\n\n\tprivate _isPaused = 0;\n\tprotected _eventQueue = new LinkedList<T>();\n\tprivate _mergeFn?: (input: T[]) => T;\n\n\tconstructor(options?: EmitterOptions & { merge?: (input: T[]) => T }) {\n\t\tsuper(options);\n\t\tthis._mergeFn = options?.merge;\n\t}\n\n\tpause(): void {\n\t\tthis._isPaused++;\n\t}\n\n\tresume(): void {\n\t\tif (this._isPaused !== 0 && --this._isPaused === 0) {\n\t\t\tif (this._mergeFn) {\n\t\t\t\t// use the merge function to create a single composite\n\t\t\t\t// event. make a copy in case firing pauses this emitter\n\t\t\t\tconst events = Array.from(this._eventQueue);\n\t\t\t\tthis._eventQueue.clear();\n\t\t\t\tsuper.fire(this._mergeFn(events));\n\n\t\t\t} else {\n\t\t\t\t// no merging, fire each event individually and test\n\t\t\t\t// that this emitter isn't paused halfway through\n\t\t\t\twhile (!this._isPaused && this._eventQueue.size !== 0) {\n\t\t\t\t\tsuper.fire(this._eventQueue.shift()!);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\toverride fire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\tif (this._isPaused !== 0) {\n\t\t\t\tthis._eventQueue.push(event);\n\t\t\t} else {\n\t\t\t\tsuper.fire(event);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class DebounceEmitter<T> extends PauseableEmitter<T> {\n\n\tprivate readonly _delay: number;\n\tprivate _handle: any | undefined;\n\n\tconstructor(options: EmitterOptions & { merge: (input: T[]) => T; delay?: number }) {\n\t\tsuper(options);\n\t\tthis._delay = options.delay ?? 100;\n\t}\n\n\toverride fire(event: T): void {\n\t\tif (!this._handle) {\n\t\t\tthis.pause();\n\t\t\tthis._handle = setTimeout(() => {\n\t\t\t\tthis._handle = undefined;\n\t\t\t\tthis.resume();\n\t\t\t}, this._delay);\n\t\t}\n\t\tsuper.fire(event);\n\t}\n}\n\n/**\n * An emitter which queue all events and then process them at the\n * end of the event loop.\n */\nexport class MicrotaskEmitter<T> extends Emitter<T> {\n\tprivate _queuedEvents: T[] = [];\n\tprivate _mergeFn?: (input: T[]) => T;\n\n\tconstructor(options?: EmitterOptions & { merge?: (input: T[]) => T }) {\n\t\tsuper(options);\n\t\tthis._mergeFn = options?.merge;\n\t}\n\toverride fire(event: T): void {\n\t\tthis._queuedEvents.push(event);\n\t\tif (this._queuedEvents.length === 1) {\n\t\t\tqueueMicrotask(() => {\n\t\t\t\tif (this._mergeFn) {\n\t\t\t\t\tsuper.fire(this._mergeFn(this._queuedEvents));\n\t\t\t\t} else {\n\t\t\t\t\tthis._queuedEvents.forEach(e => super.fire(e));\n\t\t\t\t}\n\t\t\t\tthis._queuedEvents = [];\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport class EventMultiplexer<T> implements IDisposable {\n\n\tprivate readonly emitter: Emitter<T>;\n\tprivate hasListeners = false;\n\tprivate events: { event: Event<T>; listener: IDisposable | null }[] = [];\n\n\tconstructor() {\n\t\tthis.emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => this.onFirstListenerAdd(),\n\t\t\tonLastListenerRemove: () => this.onLastListenerRemove()\n\t\t});\n\t}\n\n\tget event(): Event<T> {\n\t\treturn this.emitter.event;\n\t}\n\n\tadd(event: Event<T>): IDisposable {\n\t\tconst e = { event: event, listener: null };\n\t\tthis.events.push(e);\n\n\t\tif (this.hasListeners) {\n\t\t\tthis.hook(e);\n\t\t}\n\n\t\tconst dispose = () => {\n\t\t\tif (this.hasListeners) {\n\t\t\t\tthis.unhook(e);\n\t\t\t}\n\n\t\t\tconst idx = this.events.indexOf(e);\n\t\t\tthis.events.splice(idx, 1);\n\t\t};\n\n\t\treturn toDisposable(onceFn(dispose));\n\t}\n\n\tprivate onFirstListenerAdd(): void {\n\t\tthis.hasListeners = true;\n\t\tthis.events.forEach(e => this.hook(e));\n\t}\n\n\tprivate onLastListenerRemove(): void {\n\t\tthis.hasListeners = false;\n\t\tthis.events.forEach(e => this.unhook(e));\n\t}\n\n\tprivate hook(e: { event: Event<T>; listener: IDisposable | null }): void {\n\t\te.listener = e.event(r => this.emitter.fire(r));\n\t}\n\n\tprivate unhook(e: { event: Event<T>; listener: IDisposable | null }): void {\n\t\tif (e.listener) {\n\t\t\te.listener.dispose();\n\t\t}\n\t\te.listener = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.emitter.dispose();\n\t}\n}\n\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n\n\tprivate buffers: Function[][] = [];\n\n\twrapEvent<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs?, disposables?) => {\n\t\t\treturn event(i => {\n\t\t\t\tconst buffer = this.buffers[this.buffers.length - 1];\n\n\t\t\t\tif (buffer) {\n\t\t\t\t\tbuffer.push(() => listener.call(thisArgs, i));\n\t\t\t\t} else {\n\t\t\t\t\tlistener.call(thisArgs, i);\n\t\t\t\t}\n\t\t\t}, undefined, disposables);\n\t\t};\n\t}\n\n\tbufferEvents<R = void>(fn: () => R): R {\n\t\tconst buffer: Array<() => R> = [];\n\t\tthis.buffers.push(buffer);\n\t\tconst r = fn();\n\t\tthis.buffers.pop();\n\t\tbuffer.forEach(flush => flush());\n\t\treturn r;\n\t}\n}\n\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay<T> implements IDisposable {\n\n\tprivate listening = false;\n\tprivate inputEvent: Event<T> = Event.None;\n\tprivate inputEventListener: IDisposable = Disposable.None;\n\n\tprivate readonly emitter = new Emitter<T>({\n\t\tonFirstListenerDidAdd: () => {\n\t\t\tthis.listening = true;\n\t\t\tthis.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n\t\t},\n\t\tonLastListenerRemove: () => {\n\t\t\tthis.listening = false;\n\t\t\tthis.inputEventListener.dispose();\n\t\t}\n\t});\n\n\treadonly event: Event<T> = this.emitter.event;\n\n\tset input(event: Event<T>) {\n\t\tthis.inputEvent = event;\n\n\t\tif (this.listening) {\n\t\t\tthis.inputEventListener.dispose();\n\t\t\tthis.inputEventListener = event(this.emitter.fire, this.emitter);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.inputEventListener.dispose();\n\t\tthis.emitter.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport interface CancellationToken {\n\n\t/**\n\t * A flag signalling is cancellation has been requested.\n\t */\n\treadonly isCancellationRequested: boolean;\n\n\t/**\n\t * An event which fires when cancellation is requested. This event\n\t * only ever fires `once` as cancellation can only happen once. Listeners\n\t * that are registered after cancellation will be called (next event loop run),\n\t * but also only once.\n\t *\n\t * @event\n\t */\n\treadonly onCancellationRequested: (listener: (e: any) => any, thisArgs?: any, disposables?: IDisposable[]) => IDisposable;\n}\n\nconst shortcutEvent: Event<any> = Object.freeze(function (callback, context?): IDisposable {\n\tconst handle = setTimeout(callback.bind(context), 0);\n\treturn { dispose() { clearTimeout(handle); } };\n});\n\nexport namespace CancellationToken {\n\n\texport function isCancellationToken(thing: unknown): thing is CancellationToken {\n\t\tif (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n\t\t\treturn true;\n\t\t}\n\t\tif (thing instanceof MutableToken) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing || typeof thing !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (thing as CancellationToken).isCancellationRequested === 'boolean'\n\t\t\t&& typeof (thing as CancellationToken).onCancellationRequested === 'function';\n\t}\n\n\n\texport const None = Object.freeze<CancellationToken>({\n\t\tisCancellationRequested: false,\n\t\tonCancellationRequested: Event.None\n\t});\n\n\texport const Cancelled = Object.freeze<CancellationToken>({\n\t\tisCancellationRequested: true,\n\t\tonCancellationRequested: shortcutEvent\n\t});\n}\n\nclass MutableToken implements CancellationToken {\n\n\tprivate _isCancelled: boolean = false;\n\tprivate _emitter: Emitter<any> | null = null;\n\n\tpublic cancel() {\n\t\tif (!this._isCancelled) {\n\t\t\tthis._isCancelled = true;\n\t\t\tif (this._emitter) {\n\t\t\t\tthis._emitter.fire(undefined);\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tget isCancellationRequested(): boolean {\n\t\treturn this._isCancelled;\n\t}\n\n\tget onCancellationRequested(): Event<any> {\n\t\tif (this._isCancelled) {\n\t\t\treturn shortcutEvent;\n\t\t}\n\t\tif (!this._emitter) {\n\t\t\tthis._emitter = new Emitter<any>();\n\t\t}\n\t\treturn this._emitter.event;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._emitter) {\n\t\t\tthis._emitter.dispose();\n\t\t\tthis._emitter = null;\n\t\t}\n\t}\n}\n\nexport class CancellationTokenSource {\n\n\tprivate _token?: CancellationToken = undefined;\n\tprivate _parentListener?: IDisposable = undefined;\n\n\tconstructor(parent?: CancellationToken) {\n\t\tthis._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n\t}\n\n\tget token(): CancellationToken {\n\t\tif (!this._token) {\n\t\t\t// be lazy and create the token only when\n\t\t\t// actually needed\n\t\t\tthis._token = new MutableToken();\n\t\t}\n\t\treturn this._token;\n\t}\n\n\tcancel(): void {\n\t\tif (!this._token) {\n\t\t\t// save an object by returning the default\n\t\t\t// cancelled token when cancellation happens\n\t\t\t// before someone asks for the token\n\t\t\tthis._token = CancellationToken.Cancelled;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually cancel\n\t\t\tthis._token.cancel();\n\t\t}\n\t}\n\n\tdispose(cancel: boolean = false): void {\n\t\tif (cancel) {\n\t\t\tthis.cancel();\n\t\t}\n\t\tif (this._parentListener) {\n\t\t\tthis._parentListener.dispose();\n\t\t}\n\t\tif (!this._token) {\n\t\t\t// ensure to initialize with an empty token if we had none\n\t\t\tthis._token = CancellationToken.None;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually dispose\n\t\t\tthis._token.dispose();\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport interface CacheResult<T> extends IDisposable {\n\tpromise: Promise<T>;\n}\n\nexport class Cache<T> {\n\n\tprivate result: CacheResult<T> | null = null;\n\tconstructor(private task: (ct: CancellationToken) => Promise<T>) { }\n\n\tget(): CacheResult<T> {\n\t\tif (this.result) {\n\t\t\treturn this.result;\n\t\t}\n\n\t\tconst cts = new CancellationTokenSource();\n\t\tconst promise = this.task(cts.token);\n\n\t\tthis.result = {\n\t\t\tpromise,\n\t\t\tdispose: () => {\n\t\t\t\tthis.result = null;\n\t\t\t\tcts.cancel();\n\t\t\t\tcts.dispose();\n\t\t\t}\n\t\t};\n\n\t\treturn this.result;\n\t}\n}\n\n/**\n * Uses a LRU cache to make a given parametrized function cached.\n * Caches just the last value.\n * The key must be JSON serializable.\n*/\nexport class LRUCachedFunction<TArg, TComputed> {\n\tprivate lastCache: TComputed | undefined = undefined;\n\tprivate lastArgKey: string | undefined = undefined;\n\n\tconstructor(private readonly fn: (arg: TArg) => TComputed) {\n\t}\n\n\tpublic get(arg: TArg): TComputed {\n\t\tconst key = JSON.stringify(arg);\n\t\tif (this.lastArgKey !== key) {\n\t\t\tthis.lastArgKey = key;\n\t\t\tthis.lastCache = this.fn(arg);\n\t\t}\n\t\treturn this.lastCache!;\n\t}\n}\n\n/**\n * Uses an unbounded cache (referential equality) to memoize the results of the given function.\n*/\nexport class CachedFunction<TArg, TValue> {\n\tprivate readonly _map = new Map<TArg, TValue>();\n\tpublic get cachedValues(): ReadonlyMap<TArg, TValue> {\n\t\treturn this._map;\n\t}\n\n\tconstructor(private readonly fn: (arg: TArg) => TValue) { }\n\n\tpublic get(arg: TArg): TValue {\n\t\tif (this._map.has(arg)) {\n\t\t\treturn this._map.get(arg)!;\n\t\t}\n\t\tconst value = this.fn(arg);\n\t\tthis._map.set(arg, value);\n\t\treturn value;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\n//@ts-ignore\nimport type { IObservable } from 'vs/base/common/observable';\n\n/**\n * @deprecated Use {@link IObservable} instead.\n */\nexport interface IObservableValue<T> {\n\tonDidChange: Event<T>;\n\treadonly value: T;\n}\n\n/**\n * @deprecated Use {@link IObservable} instead.\n */\nexport const staticObservableValue = <T>(value: T): IObservableValue<T> => ({\n\tonDidChange: Event.None,\n\tvalue,\n});\n\n/**\n * @deprecated Use {@link IObservable} instead.\n */\nexport class MutableObservableValue<T> extends Disposable implements IObservableValue<T> {\n\tprivate readonly changeEmitter = this._register(new Emitter<T>());\n\n\tpublic readonly onDidChange = this.changeEmitter.event;\n\n\tpublic get value() {\n\t\treturn this._value;\n\t}\n\n\tpublic set value(v: T) {\n\t\tif (v !== this._value) {\n\t\t\tthis._value = v;\n\t\t\tthis.changeEmitter.fire(v);\n\t\t}\n\t}\n\n\tconstructor(private _value: T) {\n\t\tsuper();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { DisposableStore, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\n\n/**\n * The payload that flows in readable stream events.\n */\nexport type ReadableStreamEventPayload<T> = T | Error | 'end';\n\nexport interface ReadableStreamEvents<T> {\n\n\t/**\n\t * The 'data' event is emitted whenever the stream is\n\t * relinquishing ownership of a chunk of data to a consumer.\n\t *\n\t * NOTE: PLEASE UNDERSTAND THAT ADDING A DATA LISTENER CAN\n\t * TURN THE STREAM INTO FLOWING MODE. IT IS THEREFOR THE\n\t * LAST LISTENER THAT SHOULD BE ADDED AND NOT THE FIRST\n\t *\n\t * Use `listenStream` as a helper method to listen to\n\t * stream events in the right order.\n\t */\n\ton(event: 'data', callback: (data: T) => void): void;\n\n\t/**\n\t * Emitted when any error occurs.\n\t */\n\ton(event: 'error', callback: (err: Error) => void): void;\n\n\t/**\n\t * The 'end' event is emitted when there is no more data\n\t * to be consumed from the stream. The 'end' event will\n\t * not be emitted unless the data is completely consumed.\n\t */\n\ton(event: 'end', callback: () => void): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * stream for use in native and web environments.\n */\nexport interface ReadableStream<T> extends ReadableStreamEvents<T> {\n\n\t/**\n\t * Stops emitting any events until resume() is called.\n\t */\n\tpause(): void;\n\n\t/**\n\t * Starts emitting events again after pause() was called.\n\t */\n\tresume(): void;\n\n\t/**\n\t * Destroys the stream and stops emitting any event.\n\t */\n\tdestroy(): void;\n\n\t/**\n\t * Allows to remove a listener that was previously added.\n\t */\n\tremoveListener(event: string, callback: Function): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * for use in native and web environments.\n */\nexport interface Readable<T> {\n\n\t/**\n\t * Read data from the underlying source. Will return\n\t * null to indicate that no more data can be read.\n\t */\n\tread(): T | null;\n}\n\nexport function isReadable<T>(obj: unknown): obj is Readable<T> {\n\tconst candidate = obj as Readable<T> | undefined;\n\tif (!candidate) {\n\t\treturn false;\n\t}\n\n\treturn typeof candidate.read === 'function';\n}\n\n/**\n * A interface that emulates the API shape of a node.js writeable\n * stream for use in native and web environments.\n */\nexport interface WriteableStream<T> extends ReadableStream<T> {\n\n\t/**\n\t * Writing data to the stream will trigger the on('data')\n\t * event listener if the stream is flowing and buffer the\n\t * data otherwise until the stream is flowing.\n\t *\n\t * If a `highWaterMark` is configured and writing to the\n\t * stream reaches this mark, a promise will be returned\n\t * that should be awaited on before writing more data.\n\t * Otherwise there is a risk of buffering a large number\n\t * of data chunks without consumer.\n\t */\n\twrite(data: T): void | Promise<void>;\n\n\t/**\n\t * Signals an error to the consumer of the stream via the\n\t * on('error') handler if the stream is flowing.\n\t *\n\t * NOTE: call `end` to signal that the stream has ended,\n\t * this DOES NOT happen automatically from `error`.\n\t */\n\terror(error: Error): void;\n\n\t/**\n\t * Signals the end of the stream to the consumer. If the\n\t * result is provided, will trigger the on('data') event\n\t * listener if the stream is flowing and buffer the data\n\t * otherwise until the stream is flowing.\n\t */\n\tend(result?: T): void;\n}\n\n/**\n * A stream that has a buffer already read. Returns the original stream\n * that was read as well as the chunks that got read.\n *\n * The `ended` flag indicates if the stream has been fully consumed.\n */\nexport interface ReadableBufferedStream<T> {\n\n\t/**\n\t * The original stream that is being read.\n\t */\n\tstream: ReadableStream<T>;\n\n\t/**\n\t * An array of chunks already read from this stream.\n\t */\n\tbuffer: T[];\n\n\t/**\n\t * Signals if the stream has ended or not. If not, consumers\n\t * should continue to read from the stream until consumed.\n\t */\n\tended: boolean;\n}\n\nexport function isReadableStream<T>(obj: unknown): obj is ReadableStream<T> {\n\tconst candidate = obj as ReadableStream<T> | undefined;\n\tif (!candidate) {\n\t\treturn false;\n\t}\n\n\treturn [candidate.on, candidate.pause, candidate.resume, candidate.destroy].every(fn => typeof fn === 'function');\n}\n\nexport function isReadableBufferedStream<T>(obj: unknown): obj is ReadableBufferedStream<T> {\n\tconst candidate = obj as ReadableBufferedStream<T> | undefined;\n\tif (!candidate) {\n\t\treturn false;\n\t}\n\n\treturn isReadableStream(candidate.stream) && Array.isArray(candidate.buffer) && typeof candidate.ended === 'boolean';\n}\n\nexport interface IReducer<T, R = T> {\n\t(data: T[]): R;\n}\n\nexport interface IDataTransformer<Original, Transformed> {\n\t(data: Original): Transformed;\n}\n\nexport interface IErrorTransformer {\n\t(error: Error): Error;\n}\n\nexport interface ITransformer<Original, Transformed> {\n\tdata: IDataTransformer<Original, Transformed>;\n\terror?: IErrorTransformer;\n}\n\nexport function newWriteableStream<T>(reducer: IReducer<T>, options?: WriteableStreamOptions): WriteableStream<T> {\n\treturn new WriteableStreamImpl<T>(reducer, options);\n}\n\nexport interface WriteableStreamOptions {\n\n\t/**\n\t * The number of objects to buffer before WriteableStream#write()\n\t * signals back that the buffer is full. Can be used to reduce\n\t * the memory pressure when the stream is not flowing.\n\t */\n\thighWaterMark?: number;\n}\n\nclass WriteableStreamImpl<T> implements WriteableStream<T> {\n\n\tprivate readonly state = {\n\t\tflowing: false,\n\t\tended: false,\n\t\tdestroyed: false\n\t};\n\n\tprivate readonly buffer = {\n\t\tdata: [] as T[],\n\t\terror: [] as Error[]\n\t};\n\n\tprivate readonly listeners = {\n\t\tdata: [] as { (data: T): void }[],\n\t\terror: [] as { (error: Error): void }[],\n\t\tend: [] as { (): void }[]\n\t};\n\n\tprivate readonly pendingWritePromises: Function[] = [];\n\n\tconstructor(private reducer: IReducer<T>, private options?: WriteableStreamOptions) { }\n\n\tpause(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state.flowing = false;\n\t}\n\n\tresume(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.state.flowing) {\n\t\t\tthis.state.flowing = true;\n\n\t\t\t// emit buffered events\n\t\t\tthis.flowData();\n\t\t\tthis.flowErrors();\n\t\t\tthis.flowEnd();\n\t\t}\n\t}\n\n\twrite(data: T): void | Promise<void> {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the data to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.emitData(data);\n\t\t}\n\n\t\t// not yet flowing: buffer data until flowing\n\t\telse {\n\t\t\tthis.buffer.data.push(data);\n\n\t\t\t// highWaterMark: if configured, signal back when buffer reached limits\n\t\t\tif (typeof this.options?.highWaterMark === 'number' && this.buffer.data.length > this.options.highWaterMark) {\n\t\t\t\treturn new Promise(resolve => this.pendingWritePromises.push(resolve));\n\t\t\t}\n\t\t}\n\t}\n\n\terror(error: Error): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the error to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.emitError(error);\n\t\t}\n\n\t\t// not yet flowing: buffer errors until flowing\n\t\telse {\n\t\t\tthis.buffer.error.push(error);\n\t\t}\n\t}\n\n\tend(result?: T): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// end with data if provided\n\t\tif (typeof result !== 'undefined') {\n\t\t\tthis.write(result);\n\t\t}\n\n\t\t// flowing: send end event to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.emitEnd();\n\n\t\t\tthis.destroy();\n\t\t}\n\n\t\t// not yet flowing: remember state\n\t\telse {\n\t\t\tthis.state.ended = true;\n\t\t}\n\t}\n\n\tprivate emitData(data: T): void {\n\t\tthis.listeners.data.slice(0).forEach(listener => listener(data)); // slice to avoid listener mutation from delivering event\n\t}\n\n\tprivate emitError(error: Error): void {\n\t\tif (this.listeners.error.length === 0) {\n\t\t\tonUnexpectedError(error); // nobody listened to this error so we log it as unexpected\n\t\t} else {\n\t\t\tthis.listeners.error.slice(0).forEach(listener => listener(error)); // slice to avoid listener mutation from delivering event\n\t\t}\n\t}\n\n\tprivate emitEnd(): void {\n\t\tthis.listeners.end.slice(0).forEach(listener => listener()); // slice to avoid listener mutation from delivering event\n\t}\n\n\ton(event: 'data', callback: (data: T) => void): void;\n\ton(event: 'error', callback: (err: Error) => void): void;\n\ton(event: 'end', callback: () => void): void;\n\ton(event: 'data' | 'error' | 'end', callback: (arg0?: any) => void): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tthis.listeners.data.push(callback);\n\n\t\t\t\t// switch into flowing mode as soon as the first 'data'\n\t\t\t\t// listener is added and we are not yet in flowing mode\n\t\t\t\tthis.resume();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tthis.listeners.end.push(callback);\n\n\t\t\t\t// emit 'end' event directly if we are flowing\n\t\t\t\t// and the end has already been reached\n\t\t\t\t//\n\t\t\t\t// finish() when it went through\n\t\t\t\tif (this.state.flowing && this.flowEnd()) {\n\t\t\t\t\tthis.destroy();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tthis.listeners.error.push(callback);\n\n\t\t\t\t// emit buffered 'error' events unless done already\n\t\t\t\t// now that we know that we have at least one listener\n\t\t\t\tif (this.state.flowing) {\n\t\t\t\t\tthis.flowErrors();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tremoveListener(event: string, callback: Function): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet listeners: unknown[] | undefined = undefined;\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tlisteners = this.listeners.data;\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tlisteners = this.listeners.end;\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tlisteners = this.listeners.error;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (listeners) {\n\t\t\tconst index = listeners.indexOf(callback);\n\t\t\tif (index >= 0) {\n\t\t\t\tlisteners.splice(index, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate flowData(): void {\n\t\tif (this.buffer.data.length > 0) {\n\t\t\tconst fullDataBuffer = this.reducer(this.buffer.data);\n\n\t\t\tthis.emitData(fullDataBuffer);\n\n\t\t\tthis.buffer.data.length = 0;\n\n\t\t\t// When the buffer is empty, resolve all pending writers\n\t\t\tconst pendingWritePromises = [...this.pendingWritePromises];\n\t\t\tthis.pendingWritePromises.length = 0;\n\t\t\tpendingWritePromises.forEach(pendingWritePromise => pendingWritePromise());\n\t\t}\n\t}\n\n\tprivate flowErrors(): void {\n\t\tif (this.listeners.error.length > 0) {\n\t\t\tfor (const error of this.buffer.error) {\n\t\t\t\tthis.emitError(error);\n\t\t\t}\n\n\t\t\tthis.buffer.error.length = 0;\n\t\t}\n\t}\n\n\tprivate flowEnd(): boolean {\n\t\tif (this.state.ended) {\n\t\t\tthis.emitEnd();\n\n\t\t\treturn this.listeners.end.length > 0;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tdestroy(): void {\n\t\tif (!this.state.destroyed) {\n\t\t\tthis.state.destroyed = true;\n\t\t\tthis.state.ended = true;\n\n\t\t\tthis.buffer.data.length = 0;\n\t\t\tthis.buffer.error.length = 0;\n\n\t\t\tthis.listeners.data.length = 0;\n\t\t\tthis.listeners.error.length = 0;\n\t\t\tthis.listeners.end.length = 0;\n\n\t\t\tthis.pendingWritePromises.length = 0;\n\t\t}\n\t}\n}\n\n/**\n * Helper to fully read a T readable into a T.\n */\nexport function consumeReadable<T>(readable: Readable<T>, reducer: IReducer<T>): T {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null;\n\twhile ((chunk = readable.read()) !== null) {\n\t\tchunks.push(chunk);\n\t}\n\n\treturn reducer(chunks);\n}\n\n/**\n * Helper to read a T readable up to a maximum of chunks. If the limit is\n * reached, will return a readable instead to ensure all data can still\n * be read.\n */\nexport function peekReadable<T>(readable: Readable<T>, reducer: IReducer<T>, maxChunks: number): T | Readable<T> {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null | undefined = undefined;\n\twhile ((chunk = readable.read()) !== null && chunks.length < maxChunks) {\n\t\tchunks.push(chunk);\n\t}\n\n\t// If the last chunk is null, it means we reached the end of\n\t// the readable and return all the data at once\n\tif (chunk === null && chunks.length > 0) {\n\t\treturn reducer(chunks);\n\t}\n\n\t// Otherwise, we still have a chunk, it means we reached the maxChunks\n\t// value and as such we return a new Readable that first returns\n\t// the existing read chunks and then continues with reading from\n\t// the underlying readable.\n\treturn {\n\t\tread: () => {\n\n\t\t\t// First consume chunks from our array\n\t\t\tif (chunks.length > 0) {\n\t\t\t\treturn chunks.shift()!;\n\t\t\t}\n\n\t\t\t// Then ensure to return our last read chunk\n\t\t\tif (typeof chunk !== 'undefined') {\n\t\t\t\tconst lastReadChunk = chunk;\n\n\t\t\t\t// explicitly use undefined here to indicate that we consumed\n\t\t\t\t// the chunk, which could have either been null or valued.\n\t\t\t\tchunk = undefined;\n\n\t\t\t\treturn lastReadChunk;\n\t\t\t}\n\n\t\t\t// Finally delegate back to the Readable\n\t\t\treturn readable.read();\n\t\t}\n\t};\n}\n\n/**\n * Helper to fully read a T stream into a T or consuming\n * a stream fully, awaiting all the events without caring\n * about the data.\n */\nexport function consumeStream<T, R = T>(stream: ReadableStreamEvents<T>, reducer: IReducer<T, R>): Promise<R>;\nexport function consumeStream(stream: ReadableStreamEvents<unknown>): Promise<undefined>;\nexport function consumeStream<T, R = T>(stream: ReadableStreamEvents<T>, reducer?: IReducer<T, R>): Promise<R | undefined> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst chunks: T[] = [];\n\n\t\tlistenStream(stream, {\n\t\t\tonData: chunk => {\n\t\t\t\tif (reducer) {\n\t\t\t\t\tchunks.push(chunk);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonError: error => {\n\t\t\t\tif (reducer) {\n\t\t\t\t\treject(error);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(undefined);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonEnd: () => {\n\t\t\t\tif (reducer) {\n\t\t\t\t\tresolve(reducer(chunks));\n\t\t\t\t} else {\n\t\t\t\t\tresolve(undefined);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport interface IStreamListener<T> {\n\n\t/**\n\t * The 'data' event is emitted whenever the stream is\n\t * relinquishing ownership of a chunk of data to a consumer.\n\t */\n\tonData(data: T): void;\n\n\t/**\n\t * Emitted when any error occurs.\n\t */\n\tonError(err: Error): void;\n\n\t/**\n\t * The 'end' event is emitted when there is no more data\n\t * to be consumed from the stream. The 'end' event will\n\t * not be emitted unless the data is completely consumed.\n\t */\n\tonEnd(): void;\n}\n\n/**\n * Helper to listen to all events of a T stream in proper order.\n */\nexport function listenStream<T>(stream: ReadableStreamEvents<T>, listener: IStreamListener<T>): IDisposable {\n\tlet destroyed = false;\n\n\tstream.on('error', error => {\n\t\tif (!destroyed) {\n\t\t\tlistener.onError(error);\n\t\t}\n\t});\n\n\tstream.on('end', () => {\n\t\tif (!destroyed) {\n\t\t\tlistener.onEnd();\n\t\t}\n\t});\n\n\t// Adding the `data` listener will turn the stream\n\t// into flowing mode. As such it is important to\n\t// add this listener last (DO NOT CHANGE!)\n\tstream.on('data', data => {\n\t\tif (!destroyed) {\n\t\t\tlistener.onData(data);\n\t\t}\n\t});\n\n\treturn toDisposable(() => destroyed = true);\n}\n\n/**\n * Helper to peek up to `maxChunks` into a stream. The return type signals if\n * the stream has ended or not. If not, caller needs to add a `data` listener\n * to continue reading.\n */\nexport function peekStream<T>(stream: ReadableStream<T>, maxChunks: number): Promise<ReadableBufferedStream<T>> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst streamListeners = new DisposableStore();\n\t\tconst buffer: T[] = [];\n\n\t\t// Data Listener\n\t\tconst dataListener = (chunk: T) => {\n\n\t\t\t// Add to buffer\n\t\t\tbuffer.push(chunk);\n\n\t\t\t// We reached maxChunks and thus need to return\n\t\t\tif (buffer.length > maxChunks) {\n\n\t\t\t\t// Dispose any listeners and ensure to pause the\n\t\t\t\t// stream so that it can be consumed again by caller\n\t\t\t\tstreamListeners.dispose();\n\t\t\t\tstream.pause();\n\n\t\t\t\treturn resolve({ stream, buffer, ended: false });\n\t\t\t}\n\t\t};\n\n\t\t// Error Listener\n\t\tconst errorListener = (error: Error) => {\n\t\t\treturn reject(error);\n\t\t};\n\n\t\t// End Listener\n\t\tconst endListener = () => {\n\t\t\treturn resolve({ stream, buffer, ended: true });\n\t\t};\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('error', errorListener)));\n\t\tstream.on('error', errorListener);\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('end', endListener)));\n\t\tstream.on('end', endListener);\n\n\t\t// Important: leave the `data` listener last because\n\t\t// this can turn the stream into flowing mode and we\n\t\t// want `error` events to be received as well.\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('data', dataListener)));\n\t\tstream.on('data', dataListener);\n\t});\n}\n\n/**\n * Helper to create a readable stream from an existing T.\n */\nexport function toStream<T>(t: T, reducer: IReducer<T>): ReadableStream<T> {\n\tconst stream = newWriteableStream<T>(reducer);\n\n\tstream.end(t);\n\n\treturn stream;\n}\n\n/**\n * Helper to create an empty stream\n */\nexport function emptyStream(): ReadableStream<never> {\n\tconst stream = newWriteableStream<never>(() => { throw new Error('not supported'); });\n\tstream.end();\n\n\treturn stream;\n}\n\n/**\n * Helper to convert a T into a Readable<T>.\n */\nexport function toReadable<T>(t: T): Readable<T> {\n\tlet consumed = false;\n\n\treturn {\n\t\tread: () => {\n\t\t\tif (consumed) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconsumed = true;\n\n\t\t\treturn t;\n\t\t}\n\t};\n}\n\n/**\n * Helper to transform a readable stream into another stream.\n */\nexport function transform<Original, Transformed>(stream: ReadableStreamEvents<Original>, transformer: ITransformer<Original, Transformed>, reducer: IReducer<Transformed>): ReadableStream<Transformed> {\n\tconst target = newWriteableStream<Transformed>(reducer);\n\n\tlistenStream(stream, {\n\t\tonData: data => target.write(transformer.data(data)),\n\t\tonError: error => target.error(transformer.error ? transformer.error(error) : error),\n\t\tonEnd: () => target.end()\n\t});\n\n\treturn target;\n}\n\n/**\n * Helper to take an existing readable that will\n * have a prefix injected to the beginning.\n */\nexport function prefixedReadable<T>(prefix: T, readable: Readable<T>, reducer: IReducer<T>): Readable<T> {\n\tlet prefixHandled = false;\n\n\treturn {\n\t\tread: () => {\n\t\t\tconst chunk = readable.read();\n\n\t\t\t// Handle prefix only once\n\t\t\tif (!prefixHandled) {\n\t\t\t\tprefixHandled = true;\n\n\t\t\t\t// If we have also a read-result, make\n\t\t\t\t// sure to reduce it to a single result\n\t\t\t\tif (chunk !== null) {\n\t\t\t\t\treturn reducer([prefix, chunk]);\n\t\t\t\t}\n\n\t\t\t\t// Otherwise, just return prefix directly\n\t\t\t\treturn prefix;\n\t\t\t}\n\n\t\t\treturn chunk;\n\t\t}\n\t};\n}\n\n/**\n * Helper to take an existing stream that will\n * have a prefix injected to the beginning.\n */\nexport function prefixedStream<T>(prefix: T, stream: ReadableStream<T>, reducer: IReducer<T>): ReadableStream<T> {\n\tlet prefixHandled = false;\n\n\tconst target = newWriteableStream<T>(reducer);\n\n\tlistenStream(stream, {\n\t\tonData: data => {\n\n\t\t\t// Handle prefix only once\n\t\t\tif (!prefixHandled) {\n\t\t\t\tprefixHandled = true;\n\n\t\t\t\treturn target.write(reducer([prefix, data]));\n\t\t\t}\n\n\t\t\treturn target.write(data);\n\t\t},\n\t\tonError: error => target.error(error),\n\t\tonEnd: () => {\n\n\t\t\t// Handle prefix only once\n\t\t\tif (!prefixHandled) {\n\t\t\t\tprefixHandled = true;\n\n\t\t\t\ttarget.write(prefix);\n\t\t\t}\n\n\t\t\ttarget.end();\n\t\t}\n\t});\n\n\treturn target;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as streams from 'vs/base/common/stream';\n\ndeclare const Buffer: any;\n\nconst hasBuffer = (typeof Buffer !== 'undefined');\n\nlet textEncoder: TextEncoder | null;\nlet textDecoder: TextDecoder | null;\n\nexport class VSBuffer {\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tstatic alloc(byteLength: number): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.allocUnsafe(byteLength));\n\t\t} else {\n\t\t\treturn new VSBuffer(new Uint8Array(byteLength));\n\t\t}\n\t}\n\n\t/**\n\t * When running in a nodejs context, if `actual` is not a nodejs Buffer, the backing store for\n\t * the returned `VSBuffer` instance might use a nodejs Buffer allocated from node's Buffer pool,\n\t * which is not transferrable.\n\t */\n\tstatic wrap(actual: Uint8Array): VSBuffer {\n\t\tif (hasBuffer && !(Buffer.isBuffer(actual))) {\n\t\t\t// https://nodejs.org/dist/latest-v10.x/docs/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\n\t\t\t// Create a zero-copy Buffer wrapper around the ArrayBuffer pointed to by the Uint8Array\n\t\t\tactual = Buffer.from(actual.buffer, actual.byteOffset, actual.byteLength);\n\t\t}\n\t\treturn new VSBuffer(actual);\n\t}\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tstatic fromString(source: string, options?: { dontUseNodeBuffer?: boolean }): VSBuffer {\n\t\tconst dontUseNodeBuffer = options?.dontUseNodeBuffer || false;\n\t\tif (!dontUseNodeBuffer && hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.from(source));\n\t\t} else {\n\t\t\tif (!textEncoder) {\n\t\t\t\ttextEncoder = new TextEncoder();\n\t\t\t}\n\t\t\treturn new VSBuffer(textEncoder.encode(source));\n\t\t}\n\t}\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tstatic fromByteArray(source: number[]): VSBuffer {\n\t\tconst result = VSBuffer.alloc(source.length);\n\t\tfor (let i = 0, len = source.length; i < len; i++) {\n\t\t\tresult.buffer[i] = source[i];\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tstatic concat(buffers: VSBuffer[], totalLength?: number): VSBuffer {\n\t\tif (typeof totalLength === 'undefined') {\n\t\t\ttotalLength = 0;\n\t\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\t\ttotalLength += buffers[i].byteLength;\n\t\t\t}\n\t\t}\n\n\t\tconst ret = VSBuffer.alloc(totalLength);\n\t\tlet offset = 0;\n\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\tconst element = buffers[i];\n\t\t\tret.set(element, offset);\n\t\t\toffset += element.byteLength;\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\treadonly buffer: Uint8Array;\n\treadonly byteLength: number;\n\n\tprivate constructor(buffer: Uint8Array) {\n\t\tthis.buffer = buffer;\n\t\tthis.byteLength = this.buffer.byteLength;\n\t}\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tclone(): VSBuffer {\n\t\tconst result = VSBuffer.alloc(this.byteLength);\n\t\tresult.set(this);\n\t\treturn result;\n\t}\n\n\ttoString(): string {\n\t\tif (hasBuffer) {\n\t\t\treturn this.buffer.toString();\n\t\t} else {\n\t\t\tif (!textDecoder) {\n\t\t\t\ttextDecoder = new TextDecoder();\n\t\t\t}\n\t\t\treturn textDecoder.decode(this.buffer);\n\t\t}\n\t}\n\n\tslice(start?: number, end?: number): VSBuffer {\n\t\t// IMPORTANT: use subarray instead of slice because TypedArray#slice\n\t\t// creates shallow copy and NodeBuffer#slice doesn't. The use of subarray\n\t\t// ensures the same, performance, behaviour.\n\t\treturn new VSBuffer(this.buffer.subarray(start, end));\n\t}\n\n\tset(array: VSBuffer, offset?: number): void;\n\tset(array: Uint8Array, offset?: number): void;\n\tset(array: ArrayBuffer, offset?: number): void;\n\tset(array: ArrayBufferView, offset?: number): void;\n\tset(array: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView, offset?: number): void;\n\tset(array: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView, offset?: number): void {\n\t\tif (array instanceof VSBuffer) {\n\t\t\tthis.buffer.set(array.buffer, offset);\n\t\t} else if (array instanceof Uint8Array) {\n\t\t\tthis.buffer.set(array, offset);\n\t\t} else if (array instanceof ArrayBuffer) {\n\t\t\tthis.buffer.set(new Uint8Array(array), offset);\n\t\t} else if (ArrayBuffer.isView(array)) {\n\t\t\tthis.buffer.set(new Uint8Array(array.buffer, array.byteOffset, array.byteLength), offset);\n\t\t} else {\n\t\t\tthrow new Error(`Unknown argument 'array'`);\n\t\t}\n\t}\n\n\treadUInt32BE(offset: number): number {\n\t\treturn readUInt32BE(this.buffer, offset);\n\t}\n\n\twriteUInt32BE(value: number, offset: number): void {\n\t\twriteUInt32BE(this.buffer, value, offset);\n\t}\n\n\treadUInt32LE(offset: number): number {\n\t\treturn readUInt32LE(this.buffer, offset);\n\t}\n\n\twriteUInt32LE(value: number, offset: number): void {\n\t\twriteUInt32LE(this.buffer, value, offset);\n\t}\n\n\treadUInt8(offset: number): number {\n\t\treturn readUInt8(this.buffer, offset);\n\t}\n\n\twriteUInt8(value: number, offset: number): void {\n\t\twriteUInt8(this.buffer, value, offset);\n\t}\n}\n\nexport function readUInt16LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0)\n\t);\n}\n\nexport function writeUInt16LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n}\n\nexport function readUInt32BE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\tsource[offset] * 2 ** 24\n\t\t+ source[offset + 1] * 2 ** 16\n\t\t+ source[offset + 2] * 2 ** 8\n\t\t+ source[offset + 3]\n\t);\n}\n\nexport function writeUInt32BE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 3] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = value;\n\tvalue = value >>> 8;\n\tdestination[offset] = value;\n}\n\nexport function readUInt32LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0) |\n\t\t((source[offset + 2] << 16) >>> 0) |\n\t\t((source[offset + 3] << 24) >>> 0)\n\t);\n}\n\nexport function writeUInt32LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 3] = (value & 0b11111111);\n}\n\nexport function readUInt8(source: Uint8Array, offset: number): number {\n\treturn source[offset];\n}\n\nexport function writeUInt8(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset] = value;\n}\n\nexport interface VSBufferReadable extends streams.Readable<VSBuffer> { }\n\nexport interface VSBufferReadableStream extends streams.ReadableStream<VSBuffer> { }\n\nexport interface VSBufferWriteableStream extends streams.WriteableStream<VSBuffer> { }\n\nexport interface VSBufferReadableBufferedStream extends streams.ReadableBufferedStream<VSBuffer> { }\n\nexport function readableToBuffer(readable: VSBufferReadable): VSBuffer {\n\treturn streams.consumeReadable<VSBuffer>(readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function bufferToReadable(buffer: VSBuffer): VSBufferReadable {\n\treturn streams.toReadable<VSBuffer>(buffer);\n}\n\nexport function streamToBuffer(stream: streams.ReadableStream<VSBuffer>): Promise<VSBuffer> {\n\treturn streams.consumeStream<VSBuffer>(stream, chunks => VSBuffer.concat(chunks));\n}\n\nexport async function bufferedStreamToBuffer(bufferedStream: streams.ReadableBufferedStream<VSBuffer>): Promise<VSBuffer> {\n\tif (bufferedStream.ended) {\n\t\treturn VSBuffer.concat(bufferedStream.buffer);\n\t}\n\n\treturn VSBuffer.concat([\n\n\t\t// Include already read chunks...\n\t\t...bufferedStream.buffer,\n\n\t\t// ...and all additional chunks\n\t\tawait streamToBuffer(bufferedStream.stream)\n\t]);\n}\n\nexport function bufferToStream(buffer: VSBuffer): streams.ReadableStream<VSBuffer> {\n\treturn streams.toStream<VSBuffer>(buffer, chunks => VSBuffer.concat(chunks));\n}\n\nexport function streamToBufferReadableStream(stream: streams.ReadableStreamEvents<Uint8Array | string>): streams.ReadableStream<VSBuffer> {\n\treturn streams.transform<Uint8Array | string, VSBuffer>(stream, { data: data => typeof data === 'string' ? VSBuffer.fromString(data) : VSBuffer.wrap(data) }, chunks => VSBuffer.concat(chunks));\n}\n\nexport function newWriteableBufferStream(options?: streams.WriteableStreamOptions): streams.WriteableStream<VSBuffer> {\n\treturn streams.newWriteableStream<VSBuffer>(chunks => VSBuffer.concat(chunks), options);\n}\n\nexport function prefixedBufferReadable(prefix: VSBuffer, readable: VSBufferReadable): VSBufferReadable {\n\treturn streams.prefixedReadable(prefix, readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function prefixedBufferStream(prefix: VSBuffer, stream: VSBufferReadableStream): VSBufferReadableStream {\n\treturn streams.prefixedStream(prefix, stream, chunks => VSBuffer.concat(chunks));\n}\n\n/** Decodes base64 to a uint8 array. URL-encoded and unpadded base64 is allowed. */\nexport function decodeBase64(encoded: string) {\n\tlet building = 0;\n\tlet remainder = 0;\n\tlet bufi = 0;\n\n\t// The simpler way to do this is `Uint8Array.from(atob(str), c => c.charCodeAt(0))`,\n\t// but that's about 10-20x slower than this function in current Chromium versions.\n\n\tconst buffer = new Uint8Array(Math.floor(encoded.length / 4 * 3));\n\tconst append = (value: number) => {\n\t\tswitch (remainder) {\n\t\t\tcase 3:\n\t\t\t\tbuffer[bufi++] = building | value;\n\t\t\t\tremainder = 0;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tbuffer[bufi++] = building | (value >>> 2);\n\t\t\t\tbuilding = value << 6;\n\t\t\t\tremainder = 3;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tbuffer[bufi++] = building | (value >>> 4);\n\t\t\t\tbuilding = value << 4;\n\t\t\t\tremainder = 2;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbuilding = value << 2;\n\t\t\t\tremainder = 1;\n\t\t}\n\t};\n\n\tfor (let i = 0; i < encoded.length; i++) {\n\t\tconst code = encoded.charCodeAt(i);\n\t\t// See https://datatracker.ietf.org/doc/html/rfc4648#section-4\n\t\t// This branchy code is about 3x faster than an indexOf on a base64 char string.\n\t\tif (code >= 65 && code <= 90) {\n\t\t\tappend(code - 65); // A-Z starts ranges from char code 65 to 90\n\t\t} else if (code >= 97 && code <= 122) {\n\t\t\tappend(code - 97 + 26); // a-z starts ranges from char code 97 to 122, starting at byte 26\n\t\t} else if (code >= 48 && code <= 57) {\n\t\t\tappend(code - 48 + 52); // 0-9 starts ranges from char code 48 to 58, starting at byte 52\n\t\t} else if (code === 43 || code === 45) {\n\t\t\tappend(62); // \"+\" or \"-\" for URLS\n\t\t} else if (code === 47 || code === 95) {\n\t\t\tappend(63); // \"/\" or \"_\" for URLS\n\t\t} else if (code === 61) {\n\t\t\tbreak; // \"=\"\n\t\t} else {\n\t\t\tthrow new SyntaxError(`Unexpected base64 character ${encoded[i]}`);\n\t\t}\n\t}\n\n\tconst unpadded = bufi;\n\twhile (remainder > 0) {\n\t\tappend(0);\n\t}\n\n\t// slice is needed to account for overestimation due to padding\n\treturn VSBuffer.wrap(buffer).slice(0, unpadded);\n}\n\nconst base64Alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst base64UrlSafeAlphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_';\n\n/** Encodes a buffer to a base64 string. */\nexport function encodeBase64({ buffer }: VSBuffer, padded = true, urlSafe = false) {\n\tconst dictionary = urlSafe ? base64UrlSafeAlphabet : base64Alphabet;\n\tlet output = '';\n\n\tconst remainder = buffer.byteLength % 3;\n\n\tlet i = 0;\n\tfor (; i < buffer.byteLength - remainder; i += 3) {\n\t\tconst a = buffer[i + 0];\n\t\tconst b = buffer[i + 1];\n\t\tconst c = buffer[i + 2];\n\n\t\toutput += dictionary[a >>> 2];\n\t\toutput += dictionary[(a << 4 | b >>> 4) & 0b111111];\n\t\toutput += dictionary[(b << 2 | c >>> 6) & 0b111111];\n\t\toutput += dictionary[c & 0b111111];\n\t}\n\n\tif (remainder === 1) {\n\t\tconst a = buffer[i + 0];\n\t\toutput += dictionary[a >>> 2];\n\t\toutput += dictionary[(a << 4) & 0b111111];\n\t\tif (padded) { output += '=='; }\n\t} else if (remainder === 2) {\n\t\tconst a = buffer[i + 0];\n\t\tconst b = buffer[i + 1];\n\t\toutput += dictionary[a >>> 2];\n\t\toutput += dictionary[(a << 4 | b >>> 4) & 0b111111];\n\t\toutput += dictionary[(b << 2) & 0b111111];\n\t\tif (padded) { output += '='; }\n\t}\n\n\treturn output;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LRUCachedFunction } from 'vs/base/common/cache';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { Lazy } from 'vs/base/common/lazy';\nimport { Constants } from 'vs/base/common/uint';\n\nexport function isFalsyOrWhitespace(str: string | undefined): boolean {\n\tif (!str || typeof str !== 'string') {\n\t\treturn true;\n\t}\n\treturn str.trim().length === 0;\n}\n\nconst _formatRegexp = /{(\\d+)}/g;\n\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value: string, ...args: any[]): string {\n\tif (args.length === 0) {\n\t\treturn value;\n\t}\n\treturn value.replace(_formatRegexp, function (match, group) {\n\t\tconst idx = parseInt(group, 10);\n\t\treturn isNaN(idx) || idx < 0 || idx >= args.length ?\n\t\t\tmatch :\n\t\t\targs[idx];\n\t});\n}\n\nconst _format2Regexp = /{([^}]+)}/g;\n\n/**\n * Helper to create a string from a template and a string record.\n * Similar to `format` but with objects instead of positional arguments.\n */\nexport function format2(template: string, values: Record<string, unknown>): string {\n\treturn template.replace(_format2Regexp, (match, group) => (values[group] ?? match) as string);\n}\n\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html: string): string {\n\treturn html.replace(/[<>&]/g, function (match) {\n\t\tswitch (match) {\n\t\t\tcase '<': return '&lt;';\n\t\t\tcase '>': return '&gt;';\n\t\t\tcase '&': return '&amp;';\n\t\t\tdefault: return match;\n\t\t}\n\t});\n}\n\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value: string): string {\n\treturn value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n\n/**\n * Counts how often `character` occurs inside `value`.\n */\nexport function count(value: string, character: string): number {\n\tlet result = 0;\n\tconst ch = character.charCodeAt(0);\n\tfor (let i = value.length - 1; i >= 0; i--) {\n\t\tif (value.charCodeAt(i) === ch) {\n\t\t\tresult++;\n\t\t}\n\t}\n\treturn result;\n}\n\nexport function truncate(value: string, maxLength: number, suffix = '…'): string {\n\tif (value.length <= maxLength) {\n\t\treturn value;\n\t}\n\n\treturn `${value.substr(0, maxLength)}${suffix}`;\n}\n\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack: string, needle: string = ' '): string {\n\tconst trimmed = ltrim(haystack, needle);\n\treturn rtrim(trimmed, needle);\n}\n\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length;\n\tif (needleLen === 0 || haystack.length === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = 0;\n\n\twhile (haystack.indexOf(needle, offset) === offset) {\n\t\toffset = offset + needleLen;\n\t}\n\treturn haystack.substring(offset);\n}\n\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length,\n\t\thaystackLen = haystack.length;\n\n\tif (needleLen === 0 || haystackLen === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = haystackLen,\n\t\tidx = -1;\n\n\twhile (true) {\n\t\tidx = haystack.lastIndexOf(needle, offset - 1);\n\t\tif (idx === -1 || idx + needleLen !== offset) {\n\t\t\tbreak;\n\t\t}\n\t\tif (idx === 0) {\n\t\t\treturn '';\n\t\t}\n\t\toffset = idx;\n\t}\n\n\treturn haystack.substring(0, offset);\n}\n\nexport function convertSimple2RegExpPattern(pattern: string): string {\n\treturn pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n\nexport function stripWildcards(pattern: string): string {\n\treturn pattern.replace(/\\*/g, '');\n}\n\nexport interface RegExpOptions {\n\tmatchCase?: boolean;\n\twholeWord?: boolean;\n\tmultiline?: boolean;\n\tglobal?: boolean;\n\tunicode?: boolean;\n}\n\nexport function createRegExp(searchString: string, isRegex: boolean, options: RegExpOptions = {}): RegExp {\n\tif (!searchString) {\n\t\tthrow new Error('Cannot create regex from empty string');\n\t}\n\tif (!isRegex) {\n\t\tsearchString = escapeRegExpCharacters(searchString);\n\t}\n\tif (options.wholeWord) {\n\t\tif (!/\\B/.test(searchString.charAt(0))) {\n\t\t\tsearchString = '\\\\b' + searchString;\n\t\t}\n\t\tif (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n\t\t\tsearchString = searchString + '\\\\b';\n\t\t}\n\t}\n\tlet modifiers = '';\n\tif (options.global) {\n\t\tmodifiers += 'g';\n\t}\n\tif (!options.matchCase) {\n\t\tmodifiers += 'i';\n\t}\n\tif (options.multiline) {\n\t\tmodifiers += 'm';\n\t}\n\tif (options.unicode) {\n\t\tmodifiers += 'u';\n\t}\n\n\treturn new RegExp(searchString, modifiers);\n}\n\nexport function regExpLeadsToEndlessLoop(regexp: RegExp): boolean {\n\t// Exit early if it's one of these special cases which are meant to match\n\t// against an empty string\n\tif (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n\t\treturn false;\n\t}\n\n\t// We check against an empty string. If the regular expression doesn't advance\n\t// (e.g. ends in an endless loop) it will match an empty string.\n\tconst match = regexp.exec('');\n\treturn !!(match && regexp.lastIndex === 0);\n}\n\nexport function regExpContainsBackreference(regexpValue: string): boolean {\n\treturn !!regexpValue.match(/([^\\\\]|^)(\\\\\\\\)*\\\\\\d+/);\n}\n\nexport function regExpFlags(regexp: RegExp): string {\n\treturn (regexp.global ? 'g' : '')\n\t\t+ (regexp.ignoreCase ? 'i' : '')\n\t\t+ (regexp.multiline ? 'm' : '')\n\t\t+ ((regexp as any /* standalone editor compilation */).unicode ? 'u' : '');\n}\n\nexport function splitLines(str: string): string[] {\n\treturn str.split(/\\r\\n|\\r|\\n/);\n}\n\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str: string): number {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str: string, start: number = 0, end: number = str.length): string {\n\tfor (let i = start; i < end; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn str.substring(start, i);\n\t\t}\n\t}\n\treturn str.substring(start, end);\n}\n\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str: string, startIndex: number = str.length - 1): number {\n\tfor (let i = startIndex; i >= 0; i--) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Function that works identically to String.prototype.replace, except, the\n * replace function is allowed to be async and return a Promise.\n */\nexport function replaceAsync(str: string, search: RegExp, replacer: (match: string, ...args: any[]) => Promise<string>): Promise<string> {\n\tconst parts: (string | Promise<string>)[] = [];\n\n\tlet last = 0;\n\tfor (const match of str.matchAll(search)) {\n\t\tparts.push(str.slice(last, match.index));\n\t\tif (match.index === undefined) {\n\t\t\tthrow new Error('match.index should be defined');\n\t\t}\n\n\t\tlast = match.index + match[0].length;\n\t\tparts.push(replacer(match[0], ...match.slice(1), match.index, str, match.groups));\n\t}\n\n\tparts.push(str.slice(last));\n\n\treturn Promise.all(parts).then(p => p.join(''));\n}\n\nexport function compare(a: string, b: string): number {\n\tif (a < b) {\n\t\treturn -1;\n\t} else if (a > b) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function compareSubstring(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\t\tconst codeA = a.charCodeAt(aStart);\n\t\tconst codeB = b.charCodeAt(bStart);\n\t\tif (codeA < codeB) {\n\t\t\treturn -1;\n\t\t} else if (codeA > codeB) {\n\t\t\treturn 1;\n\t\t}\n\t}\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\nexport function compareIgnoreCase(a: string, b: string): number {\n\treturn compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\n\nexport function compareSubstringIgnoreCase(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\n\t\tlet codeA = a.charCodeAt(aStart);\n\t\tlet codeB = b.charCodeAt(bStart);\n\n\t\tif (codeA === codeB) {\n\t\t\t// equal\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (codeA >= 128 || codeB >= 128) {\n\t\t\t// not ASCII letters -> fallback to lower-casing strings\n\t\t\treturn compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n\t\t}\n\n\t\t// mapper lower-case ascii letter onto upper-case varinats\n\t\t// [97-122] (lower ascii) --> [65-90] (upper ascii)\n\t\tif (isLowerAsciiLetter(codeA)) {\n\t\t\tcodeA -= 32;\n\t\t}\n\t\tif (isLowerAsciiLetter(codeB)) {\n\t\t\tcodeB -= 32;\n\t\t}\n\n\t\t// compare both code points\n\t\tconst diff = codeA - codeB;\n\t\tif (diff === 0) {\n\t\t\tcontinue;\n\t\t}\n\n\t\treturn diff;\n\t}\n\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\n\treturn 0;\n}\n\nexport function isAsciiDigit(code: number): boolean {\n\treturn code >= CharCode.Digit0 && code <= CharCode.Digit9;\n}\n\nexport function isLowerAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.a && code <= CharCode.z;\n}\n\nexport function isUpperAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.A && code <= CharCode.Z;\n}\n\nexport function equalsIgnoreCase(a: string, b: string): boolean {\n\treturn a.length === b.length && compareSubstringIgnoreCase(a, b) === 0;\n}\n\nexport function startsWithIgnoreCase(str: string, candidate: string): boolean {\n\tconst candidateLength = candidate.length;\n\tif (candidate.length > str.length) {\n\t\treturn false;\n\t}\n\n\treturn compareSubstringIgnoreCase(str, candidate, 0, candidateLength) === 0;\n}\n\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a: string, b: string): number {\n\n\tconst len = Math.min(a.length, b.length);\n\tlet i: number;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(i) !== b.charCodeAt(i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a: string, b: string): number {\n\n\tconst len = Math.min(a.length, b.length);\n\tlet i: number;\n\n\tconst aLastIndex = a.length - 1;\n\tconst bLastIndex = b.length - 1;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isHighSurrogate(charCode: number): boolean {\n\treturn (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isLowSurrogate(charCode: number): boolean {\n\treturn (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function computeCodePoint(highSurrogate: number, lowSurrogate: number): number {\n\treturn ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str: string, len: number, offset: number): number {\n\tconst charCode = str.charCodeAt(offset);\n\tif (isHighSurrogate(charCode) && offset + 1 < len) {\n\t\tconst nextCharCode = str.charCodeAt(offset + 1);\n\t\tif (isLowSurrogate(nextCharCode)) {\n\t\t\treturn computeCodePoint(charCode, nextCharCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str: string, offset: number): number {\n\tconst charCode = str.charCodeAt(offset - 1);\n\tif (isLowSurrogate(charCode) && offset > 1) {\n\t\tconst prevCharCode = str.charCodeAt(offset - 2);\n\t\tif (isHighSurrogate(prevCharCode)) {\n\t\t\treturn computeCodePoint(prevCharCode, charCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\nexport class CodePointIterator {\n\n\tprivate readonly _str: string;\n\tprivate readonly _len: number;\n\tprivate _offset: number;\n\n\tpublic get offset(): number {\n\t\treturn this._offset;\n\t}\n\n\tconstructor(str: string, offset: number = 0) {\n\t\tthis._str = str;\n\t\tthis._len = str.length;\n\t\tthis._offset = offset;\n\t}\n\n\tpublic setOffset(offset: number): void {\n\t\tthis._offset = offset;\n\t}\n\n\tpublic prevCodePoint(): number {\n\t\tconst codePoint = getPrevCodePoint(this._str, this._offset);\n\t\tthis._offset -= (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\treturn codePoint;\n\t}\n\n\tpublic nextCodePoint(): number {\n\t\tconst codePoint = getNextCodePoint(this._str, this._len, this._offset);\n\t\tthis._offset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\treturn codePoint;\n\t}\n\n\tpublic eol(): boolean {\n\t\treturn (this._offset >= this._len);\n\t}\n}\n\nexport class GraphemeIterator {\n\n\tprivate readonly _iterator: CodePointIterator;\n\n\tpublic get offset(): number {\n\t\treturn this._iterator.offset;\n\t}\n\n\tconstructor(str: string, offset: number = 0) {\n\t\tthis._iterator = new CodePointIterator(str, offset);\n\t}\n\n\tpublic nextGraphemeLength(): number {\n\t\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\t\tconst iterator = this._iterator;\n\t\tconst initialOffset = iterator.offset;\n\n\t\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n\t\twhile (!iterator.eol()) {\n\t\t\tconst offset = iterator.offset;\n\t\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n\t\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\t\t// move iterator back\n\t\t\t\titerator.setOffset(offset);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t\t}\n\t\treturn (iterator.offset - initialOffset);\n\t}\n\n\tpublic prevGraphemeLength(): number {\n\t\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\t\tconst iterator = this._iterator;\n\t\tconst initialOffset = iterator.offset;\n\n\t\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n\t\twhile (iterator.offset > 0) {\n\t\t\tconst offset = iterator.offset;\n\t\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n\t\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\t\t// move iterator back\n\t\t\t\titerator.setOffset(offset);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t\t}\n\t\treturn (initialOffset - iterator.offset);\n\t}\n\n\tpublic eol(): boolean {\n\t\treturn this._iterator.eol();\n\t}\n}\n\nexport function nextCharLength(str: string, initialOffset: number): number {\n\tconst iterator = new GraphemeIterator(str, initialOffset);\n\treturn iterator.nextGraphemeLength();\n}\n\nexport function prevCharLength(str: string, initialOffset: number): number {\n\tconst iterator = new GraphemeIterator(str, initialOffset);\n\treturn iterator.prevGraphemeLength();\n}\n\nexport function getCharContainingOffset(str: string, offset: number): [number, number] {\n\tif (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n\t\toffset--;\n\t}\n\tconst endOffset = offset + nextCharLength(str, offset);\n\tconst startOffset = endOffset - prevCharLength(str, endOffset);\n\treturn [startOffset, endOffset];\n}\n\n/**\n * Generated using https://github.com/alexdima/unicode-utils/blob/main/rtl-test.js\n */\nconst CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u088E\\u08A0-\\u08C9\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE35\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDD23\\uDE80-\\uDEA9\\uDEAD-\\uDF45\\uDF51-\\uDF81\\uDF86-\\uDFF6]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD4B-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str: string): boolean {\n\treturn CONTAINS_RTL.test(str);\n}\n\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str: string): boolean {\n\treturn IS_BASIC_ASCII.test(str);\n}\n\nexport const UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/; // LINE SEPARATOR (LS) or PARAGRAPH SEPARATOR (PS)\n/**\n * Returns true if `str` contains unusual line terminators, like LS or PS\n */\nexport function containsUnusualLineTerminators(str: string): boolean {\n\treturn UNUSUAL_LINE_TERMINATORS.test(str);\n}\n\nexport function isFullWidthCharacter(charCode: number): boolean {\n\t// Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n\t// http://jrgraphix.net/research/unicode_blocks.php\n\t//          2E80 - 2EFF   CJK Radicals Supplement\n\t//          2F00 - 2FDF   Kangxi Radicals\n\t//          2FF0 - 2FFF   Ideographic Description Characters\n\t//          3000 - 303F   CJK Symbols and Punctuation\n\t//          3040 - 309F   Hiragana\n\t//          30A0 - 30FF   Katakana\n\t//          3100 - 312F   Bopomofo\n\t//          3130 - 318F   Hangul Compatibility Jamo\n\t//          3190 - 319F   Kanbun\n\t//          31A0 - 31BF   Bopomofo Extended\n\t//          31F0 - 31FF   Katakana Phonetic Extensions\n\t//          3200 - 32FF   Enclosed CJK Letters and Months\n\t//          3300 - 33FF   CJK Compatibility\n\t//          3400 - 4DBF   CJK Unified Ideographs Extension A\n\t//          4DC0 - 4DFF   Yijing Hexagram Symbols\n\t//          4E00 - 9FFF   CJK Unified Ideographs\n\t//          A000 - A48F   Yi Syllables\n\t//          A490 - A4CF   Yi Radicals\n\t//          AC00 - D7AF   Hangul Syllables\n\t// [IGNORE] D800 - DB7F   High Surrogates\n\t// [IGNORE] DB80 - DBFF   High Private Use Surrogates\n\t// [IGNORE] DC00 - DFFF   Low Surrogates\n\t// [IGNORE] E000 - F8FF   Private Use Area\n\t//          F900 - FAFF   CJK Compatibility Ideographs\n\t// [IGNORE] FB00 - FB4F   Alphabetic Presentation Forms\n\t// [IGNORE] FB50 - FDFF   Arabic Presentation Forms-A\n\t// [IGNORE] FE00 - FE0F   Variation Selectors\n\t// [IGNORE] FE20 - FE2F   Combining Half Marks\n\t// [IGNORE] FE30 - FE4F   CJK Compatibility Forms\n\t// [IGNORE] FE50 - FE6F   Small Form Variants\n\t// [IGNORE] FE70 - FEFF   Arabic Presentation Forms-B\n\t//          FF00 - FFEF   Halfwidth and Fullwidth Forms\n\t//               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n\t//               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n\t// [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n\t// [IGNORE] FFF0 - FFFF   Specials\n\treturn (\n\t\t(charCode >= 0x2E80 && charCode <= 0xD7AF)\n\t\t|| (charCode >= 0xF900 && charCode <= 0xFAFF)\n\t\t|| (charCode >= 0xFF01 && charCode <= 0xFF5E)\n\t);\n}\n\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexdima/unicode-utils/blob/main/emoji-test.js\n */\nexport function isEmojiImprecise(x: number): boolean {\n\treturn (\n\t\t(x >= 0x1F1E6 && x <= 0x1F1FF) || (x === 8986) || (x === 8987) || (x === 9200)\n\t\t|| (x === 9203) || (x >= 9728 && x <= 10175) || (x === 11088) || (x === 11093)\n\t\t|| (x >= 127744 && x <= 128591) || (x >= 128640 && x <= 128764)\n\t\t|| (x >= 128992 && x <= 129008) || (x >= 129280 && x <= 129535)\n\t\t|| (x >= 129648 && x <= 129782)\n\t);\n}\n\n/**\n * Given a string and a max length returns a shorted version. Shorting\n * happens at favorable positions - such as whitespace or punctuation characters.\n */\nexport function lcut(text: string, n: number) {\n\tif (text.length < n) {\n\t\treturn text;\n\t}\n\n\tconst re = /\\b/g;\n\tlet i = 0;\n\twhile (re.test(text)) {\n\t\tif (text.length - re.lastIndex < n) {\n\t\t\tbreak;\n\t\t}\n\n\t\ti = re.lastIndex;\n\t\tre.lastIndex += 1;\n\t}\n\n\treturn text.substring(i).replace(/^\\s/, '');\n}\n\n// Escape codes\n// http://en.wikipedia.org/wiki/ANSI_escape_code\nconst EL = /\\x1B\\x5B[12]?K/g; // Erase in line\nconst COLOR_START = /\\x1b\\[\\d+m/g; // Color\nconst COLOR_END = /\\x1b\\[0?m/g; // Color\n\nexport function removeAnsiEscapeCodes(str: string): string {\n\tif (str) {\n\t\tstr = str.replace(EL, '');\n\t\tstr = str.replace(COLOR_START, '');\n\t\tstr = str.replace(COLOR_END, '');\n\t}\n\n\treturn str;\n}\n\n// -- UTF-8 BOM\n\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(CharCode.UTF8_BOM);\n\nexport function startsWithUTF8BOM(str: string): boolean {\n\treturn !!(str && str.length > 0 && str.charCodeAt(0) === CharCode.UTF8_BOM);\n}\n\nexport function stripUTF8BOM(str: string): string {\n\treturn startsWithUTF8BOM(str) ? str.substr(1) : str;\n}\n\n/**\n * Checks if the characters of the provided query string are included in the\n * target string. The characters do not have to be contiguous within the string.\n */\nexport function fuzzyContains(target: string, query: string): boolean {\n\tif (!target || !query) {\n\t\treturn false; // return early if target or query are undefined\n\t}\n\n\tif (target.length < query.length) {\n\t\treturn false; // impossible for query to be contained in target\n\t}\n\n\tconst queryLen = query.length;\n\tconst targetLower = target.toLowerCase();\n\n\tlet index = 0;\n\tlet lastIndexOf = -1;\n\twhile (index < queryLen) {\n\t\tconst indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);\n\t\tif (indexOf < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlastIndexOf = indexOf;\n\n\t\tindex++;\n\t}\n\n\treturn true;\n}\n\nexport function containsUppercaseCharacter(target: string, ignoreEscapedChars = false): boolean {\n\tif (!target) {\n\t\treturn false;\n\t}\n\n\tif (ignoreEscapedChars) {\n\t\ttarget = target.replace(/\\\\./g, '');\n\t}\n\n\treturn target.toLowerCase() !== target;\n}\n\nexport function uppercaseFirstLetter(str: string): string {\n\treturn str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function getNLines(str: string, n = 1): string {\n\tif (n === 0) {\n\t\treturn '';\n\t}\n\n\tlet idx = -1;\n\tdo {\n\t\tidx = str.indexOf('\\n', idx + 1);\n\t\tn--;\n\t} while (n > 0 && idx >= 0);\n\n\tif (idx === -1) {\n\t\treturn str;\n\t}\n\n\tif (str[idx - 1] === '\\r') {\n\t\tidx--;\n\t}\n\n\treturn str.substr(0, idx);\n}\n\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n: number): string {\n\tconst LETTERS_CNT = (CharCode.Z - CharCode.A + 1);\n\n\tn = n % (2 * LETTERS_CNT);\n\n\tif (n < LETTERS_CNT) {\n\t\treturn String.fromCharCode(CharCode.a + n);\n\t}\n\n\treturn String.fromCharCode(CharCode.A + n - LETTERS_CNT);\n}\n\n//#region Unicode Grapheme Break\n\nexport function getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\treturn graphemeBreakTree.getGraphemeBreakType(codePoint);\n}\n\nfunction breakBetweenGraphemeBreakType(breakTypeA: GraphemeBreakType, breakTypeB: GraphemeBreakType): boolean {\n\t// http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n\n\t// !!! Let's make the common case a bit faster\n\tif (breakTypeA === GraphemeBreakType.Other) {\n\t\t// see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n\t\treturn (breakTypeB !== GraphemeBreakType.Extend && breakTypeB !== GraphemeBreakType.SpacingMark);\n\t}\n\n\t// Do not break between a CR and LF. Otherwise, break before and after controls.\n\t// GB3                                        CR × LF\n\t// GB4                       (Control | CR | LF) ÷\n\t// GB5                                           ÷ (Control | CR | LF)\n\tif (breakTypeA === GraphemeBreakType.CR) {\n\t\tif (breakTypeB === GraphemeBreakType.LF) {\n\t\t\treturn false; // GB3\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.Control || breakTypeA === GraphemeBreakType.CR || breakTypeA === GraphemeBreakType.LF) {\n\t\treturn true; // GB4\n\t}\n\tif (breakTypeB === GraphemeBreakType.Control || breakTypeB === GraphemeBreakType.CR || breakTypeB === GraphemeBreakType.LF) {\n\t\treturn true; // GB5\n\t}\n\n\t// Do not break Hangul syllable sequences.\n\t// GB6                                         L × (L | V | LV | LVT)\n\t// GB7                                  (LV | V) × (V | T)\n\t// GB8                                 (LVT | T) × T\n\tif (breakTypeA === GraphemeBreakType.L) {\n\t\tif (breakTypeB === GraphemeBreakType.L || breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.LV || breakTypeB === GraphemeBreakType.LVT) {\n\t\t\treturn false; // GB6\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LV || breakTypeA === GraphemeBreakType.V) {\n\t\tif (breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB7\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LVT || breakTypeA === GraphemeBreakType.T) {\n\t\tif (breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB8\n\t\t}\n\t}\n\n\t// Do not break before extending characters or ZWJ.\n\t// GB9                                           × (Extend | ZWJ)\n\tif (breakTypeB === GraphemeBreakType.Extend || breakTypeB === GraphemeBreakType.ZWJ) {\n\t\treturn false; // GB9\n\t}\n\n\t// The GB9a and GB9b rules only apply to extended grapheme clusters:\n\t// Do not break before SpacingMarks, or after Prepend characters.\n\t// GB9a                                          × SpacingMark\n\t// GB9b                                  Prepend ×\n\tif (breakTypeB === GraphemeBreakType.SpacingMark) {\n\t\treturn false; // GB9a\n\t}\n\tif (breakTypeA === GraphemeBreakType.Prepend) {\n\t\treturn false; // GB9b\n\t}\n\n\t// Do not break within emoji modifier sequences or emoji zwj sequences.\n\t// GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n\tif (breakTypeA === GraphemeBreakType.ZWJ && breakTypeB === GraphemeBreakType.Extended_Pictographic) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB11\n\t}\n\n\t// GB12                          sot (RI RI)* RI × RI\n\t// GB13                        [^RI] (RI RI)* RI × RI\n\tif (breakTypeA === GraphemeBreakType.Regional_Indicator && breakTypeB === GraphemeBreakType.Regional_Indicator) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB12 & GB13\n\t}\n\n\t// GB999                                     Any ÷ Any\n\treturn true;\n}\n\nexport const enum GraphemeBreakType {\n\tOther = 0,\n\tPrepend = 1,\n\tCR = 2,\n\tLF = 3,\n\tControl = 4,\n\tExtend = 5,\n\tRegional_Indicator = 6,\n\tSpacingMark = 7,\n\tL = 8,\n\tV = 9,\n\tT = 10,\n\tLV = 11,\n\tLVT = 12,\n\tZWJ = 13,\n\tExtended_Pictographic = 14\n}\n\nclass GraphemeBreakTree {\n\n\tprivate static _INSTANCE: GraphemeBreakTree | null = null;\n\tpublic static getInstance(): GraphemeBreakTree {\n\t\tif (!GraphemeBreakTree._INSTANCE) {\n\t\t\tGraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n\t\t}\n\t\treturn GraphemeBreakTree._INSTANCE;\n\t}\n\n\tprivate readonly _data: number[];\n\n\tconstructor() {\n\t\tthis._data = getGraphemeBreakRawData();\n\t}\n\n\tpublic getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\t\t// !!! Let's make 7bit ASCII a bit faster: 0..31\n\t\tif (codePoint < 32) {\n\t\t\tif (codePoint === CharCode.LineFeed) {\n\t\t\t\treturn GraphemeBreakType.LF;\n\t\t\t}\n\t\t\tif (codePoint === CharCode.CarriageReturn) {\n\t\t\t\treturn GraphemeBreakType.CR;\n\t\t\t}\n\t\t\treturn GraphemeBreakType.Control;\n\t\t}\n\t\t// !!! Let's make 7bit ASCII a bit faster: 32..126\n\t\tif (codePoint < 127) {\n\t\t\treturn GraphemeBreakType.Other;\n\t\t}\n\n\t\tconst data = this._data;\n\t\tconst nodeCount = data.length / 3;\n\t\tlet nodeIndex = 1;\n\t\twhile (nodeIndex <= nodeCount) {\n\t\t\tif (codePoint < data[3 * nodeIndex]) {\n\t\t\t\t// go left\n\t\t\t\tnodeIndex = 2 * nodeIndex;\n\t\t\t} else if (codePoint > data[3 * nodeIndex + 1]) {\n\t\t\t\t// go right\n\t\t\t\tnodeIndex = 2 * nodeIndex + 1;\n\t\t\t} else {\n\t\t\t\t// hit\n\t\t\t\treturn data[3 * nodeIndex + 2];\n\t\t\t}\n\t\t}\n\n\t\treturn GraphemeBreakType.Other;\n\t}\n}\n\nfunction getGraphemeBreakRawData(): number[] {\n\t// generated using https://github.com/alexdima/unicode-utils/blob/main/grapheme-break.js\n\treturn JSON.parse('[0,0,0,51229,51255,12,44061,44087,12,127462,127487,6,7083,7085,5,47645,47671,12,54813,54839,12,128678,128678,14,3270,3270,5,9919,9923,14,45853,45879,12,49437,49463,12,53021,53047,12,71216,71218,7,128398,128399,14,129360,129374,14,2519,2519,5,4448,4519,9,9742,9742,14,12336,12336,14,44957,44983,12,46749,46775,12,48541,48567,12,50333,50359,12,52125,52151,12,53917,53943,12,69888,69890,5,73018,73018,5,127990,127990,14,128558,128559,14,128759,128760,14,129653,129655,14,2027,2035,5,2891,2892,7,3761,3761,5,6683,6683,5,8293,8293,4,9825,9826,14,9999,9999,14,43452,43453,5,44509,44535,12,45405,45431,12,46301,46327,12,47197,47223,12,48093,48119,12,48989,49015,12,49885,49911,12,50781,50807,12,51677,51703,12,52573,52599,12,53469,53495,12,54365,54391,12,65279,65279,4,70471,70472,7,72145,72147,7,119173,119179,5,127799,127818,14,128240,128244,14,128512,128512,14,128652,128652,14,128721,128722,14,129292,129292,14,129445,129450,14,129734,129743,14,1476,1477,5,2366,2368,7,2750,2752,7,3076,3076,5,3415,3415,5,4141,4144,5,6109,6109,5,6964,6964,5,7394,7400,5,9197,9198,14,9770,9770,14,9877,9877,14,9968,9969,14,10084,10084,14,43052,43052,5,43713,43713,5,44285,44311,12,44733,44759,12,45181,45207,12,45629,45655,12,46077,46103,12,46525,46551,12,46973,46999,12,47421,47447,12,47869,47895,12,48317,48343,12,48765,48791,12,49213,49239,12,49661,49687,12,50109,50135,12,50557,50583,12,51005,51031,12,51453,51479,12,51901,51927,12,52349,52375,12,52797,52823,12,53245,53271,12,53693,53719,12,54141,54167,12,54589,54615,12,55037,55063,12,69506,69509,5,70191,70193,5,70841,70841,7,71463,71467,5,72330,72342,5,94031,94031,5,123628,123631,5,127763,127765,14,127941,127941,14,128043,128062,14,128302,128317,14,128465,128467,14,128539,128539,14,128640,128640,14,128662,128662,14,128703,128703,14,128745,128745,14,129004,129007,14,129329,129330,14,129402,129402,14,129483,129483,14,129686,129704,14,130048,131069,14,173,173,4,1757,1757,1,2200,2207,5,2434,2435,7,2631,2632,5,2817,2817,5,3008,3008,5,3201,3201,5,3387,3388,5,3542,3542,5,3902,3903,7,4190,4192,5,6002,6003,5,6439,6440,5,6765,6770,7,7019,7027,5,7154,7155,7,8205,8205,13,8505,8505,14,9654,9654,14,9757,9757,14,9792,9792,14,9852,9853,14,9890,9894,14,9937,9937,14,9981,9981,14,10035,10036,14,11035,11036,14,42654,42655,5,43346,43347,7,43587,43587,5,44006,44007,7,44173,44199,12,44397,44423,12,44621,44647,12,44845,44871,12,45069,45095,12,45293,45319,12,45517,45543,12,45741,45767,12,45965,45991,12,46189,46215,12,46413,46439,12,46637,46663,12,46861,46887,12,47085,47111,12,47309,47335,12,47533,47559,12,47757,47783,12,47981,48007,12,48205,48231,12,48429,48455,12,48653,48679,12,48877,48903,12,49101,49127,12,49325,49351,12,49549,49575,12,49773,49799,12,49997,50023,12,50221,50247,12,50445,50471,12,50669,50695,12,50893,50919,12,51117,51143,12,51341,51367,12,51565,51591,12,51789,51815,12,52013,52039,12,52237,52263,12,52461,52487,12,52685,52711,12,52909,52935,12,53133,53159,12,53357,53383,12,53581,53607,12,53805,53831,12,54029,54055,12,54253,54279,12,54477,54503,12,54701,54727,12,54925,54951,12,55149,55175,12,68101,68102,5,69762,69762,7,70067,70069,7,70371,70378,5,70720,70721,7,71087,71087,5,71341,71341,5,71995,71996,5,72249,72249,7,72850,72871,5,73109,73109,5,118576,118598,5,121505,121519,5,127245,127247,14,127568,127569,14,127777,127777,14,127872,127891,14,127956,127967,14,128015,128016,14,128110,128172,14,128259,128259,14,128367,128368,14,128424,128424,14,128488,128488,14,128530,128532,14,128550,128551,14,128566,128566,14,128647,128647,14,128656,128656,14,128667,128673,14,128691,128693,14,128715,128715,14,128728,128732,14,128752,128752,14,128765,128767,14,129096,129103,14,129311,129311,14,129344,129349,14,129394,129394,14,129413,129425,14,129466,129471,14,129511,129535,14,129664,129666,14,129719,129722,14,129760,129767,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2307,2307,7,2382,2383,7,2497,2500,5,2563,2563,7,2677,2677,5,2763,2764,7,2879,2879,5,2914,2915,5,3021,3021,5,3142,3144,5,3263,3263,5,3285,3286,5,3398,3400,7,3530,3530,5,3633,3633,5,3864,3865,5,3974,3975,5,4155,4156,7,4229,4230,5,5909,5909,7,6078,6085,7,6277,6278,5,6451,6456,7,6744,6750,5,6846,6846,5,6972,6972,5,7074,7077,5,7146,7148,7,7222,7223,5,7416,7417,5,8234,8238,4,8417,8417,5,9000,9000,14,9203,9203,14,9730,9731,14,9748,9749,14,9762,9763,14,9776,9783,14,9800,9811,14,9831,9831,14,9872,9873,14,9882,9882,14,9900,9903,14,9929,9933,14,9941,9960,14,9974,9974,14,9989,9989,14,10006,10006,14,10062,10062,14,10160,10160,14,11647,11647,5,12953,12953,14,43019,43019,5,43232,43249,5,43443,43443,5,43567,43568,7,43696,43696,5,43765,43765,7,44013,44013,5,44117,44143,12,44229,44255,12,44341,44367,12,44453,44479,12,44565,44591,12,44677,44703,12,44789,44815,12,44901,44927,12,45013,45039,12,45125,45151,12,45237,45263,12,45349,45375,12,45461,45487,12,45573,45599,12,45685,45711,12,45797,45823,12,45909,45935,12,46021,46047,12,46133,46159,12,46245,46271,12,46357,46383,12,46469,46495,12,46581,46607,12,46693,46719,12,46805,46831,12,46917,46943,12,47029,47055,12,47141,47167,12,47253,47279,12,47365,47391,12,47477,47503,12,47589,47615,12,47701,47727,12,47813,47839,12,47925,47951,12,48037,48063,12,48149,48175,12,48261,48287,12,48373,48399,12,48485,48511,12,48597,48623,12,48709,48735,12,48821,48847,12,48933,48959,12,49045,49071,12,49157,49183,12,49269,49295,12,49381,49407,12,49493,49519,12,49605,49631,12,49717,49743,12,49829,49855,12,49941,49967,12,50053,50079,12,50165,50191,12,50277,50303,12,50389,50415,12,50501,50527,12,50613,50639,12,50725,50751,12,50837,50863,12,50949,50975,12,51061,51087,12,51173,51199,12,51285,51311,12,51397,51423,12,51509,51535,12,51621,51647,12,51733,51759,12,51845,51871,12,51957,51983,12,52069,52095,12,52181,52207,12,52293,52319,12,52405,52431,12,52517,52543,12,52629,52655,12,52741,52767,12,52853,52879,12,52965,52991,12,53077,53103,12,53189,53215,12,53301,53327,12,53413,53439,12,53525,53551,12,53637,53663,12,53749,53775,12,53861,53887,12,53973,53999,12,54085,54111,12,54197,54223,12,54309,54335,12,54421,54447,12,54533,54559,12,54645,54671,12,54757,54783,12,54869,54895,12,54981,55007,12,55093,55119,12,55243,55291,10,66045,66045,5,68325,68326,5,69688,69702,5,69817,69818,5,69957,69958,7,70089,70092,5,70198,70199,5,70462,70462,5,70502,70508,5,70750,70750,5,70846,70846,7,71100,71101,5,71230,71230,7,71351,71351,5,71737,71738,5,72000,72000,7,72160,72160,5,72273,72278,5,72752,72758,5,72882,72883,5,73031,73031,5,73461,73462,7,94192,94193,7,119149,119149,7,121403,121452,5,122915,122916,5,126980,126980,14,127358,127359,14,127535,127535,14,127759,127759,14,127771,127771,14,127792,127793,14,127825,127867,14,127897,127899,14,127945,127945,14,127985,127986,14,128000,128007,14,128021,128021,14,128066,128100,14,128184,128235,14,128249,128252,14,128266,128276,14,128335,128335,14,128379,128390,14,128407,128419,14,128444,128444,14,128481,128481,14,128499,128499,14,128526,128526,14,128536,128536,14,128543,128543,14,128556,128556,14,128564,128564,14,128577,128580,14,128643,128645,14,128649,128649,14,128654,128654,14,128660,128660,14,128664,128664,14,128675,128675,14,128686,128689,14,128695,128696,14,128705,128709,14,128717,128719,14,128725,128725,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129009,129023,14,129160,129167,14,129296,129304,14,129320,129327,14,129340,129342,14,129356,129356,14,129388,129392,14,129399,129400,14,129404,129407,14,129432,129442,14,129454,129455,14,129473,129474,14,129485,129487,14,129648,129651,14,129659,129660,14,129671,129679,14,129709,129711,14,129728,129730,14,129751,129753,14,129776,129782,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2274,2274,1,2363,2363,7,2377,2380,7,2402,2403,5,2494,2494,5,2507,2508,7,2558,2558,5,2622,2624,7,2641,2641,5,2691,2691,7,2759,2760,5,2786,2787,5,2876,2876,5,2881,2884,5,2901,2902,5,3006,3006,5,3014,3016,7,3072,3072,5,3134,3136,5,3157,3158,5,3260,3260,5,3266,3266,5,3274,3275,7,3328,3329,5,3391,3392,7,3405,3405,5,3457,3457,5,3536,3537,7,3551,3551,5,3636,3642,5,3764,3772,5,3895,3895,5,3967,3967,7,3993,4028,5,4146,4151,5,4182,4183,7,4226,4226,5,4253,4253,5,4957,4959,5,5940,5940,7,6070,6070,7,6087,6088,7,6158,6158,4,6432,6434,5,6448,6449,7,6679,6680,5,6742,6742,5,6754,6754,5,6783,6783,5,6912,6915,5,6966,6970,5,6978,6978,5,7042,7042,7,7080,7081,5,7143,7143,7,7150,7150,7,7212,7219,5,7380,7392,5,7412,7412,5,8203,8203,4,8232,8232,4,8265,8265,14,8400,8412,5,8421,8432,5,8617,8618,14,9167,9167,14,9200,9200,14,9410,9410,14,9723,9726,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9774,14,9786,9786,14,9794,9794,14,9823,9823,14,9828,9828,14,9833,9850,14,9855,9855,14,9875,9875,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9935,9935,14,9939,9939,14,9962,9962,14,9972,9972,14,9978,9978,14,9986,9986,14,9997,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10133,10135,14,10548,10549,14,11093,11093,14,12330,12333,5,12441,12442,5,42608,42610,5,43010,43010,5,43045,43046,5,43188,43203,7,43302,43309,5,43392,43394,5,43446,43449,5,43493,43493,5,43571,43572,7,43597,43597,7,43703,43704,5,43756,43757,5,44003,44004,7,44009,44010,7,44033,44059,12,44089,44115,12,44145,44171,12,44201,44227,12,44257,44283,12,44313,44339,12,44369,44395,12,44425,44451,12,44481,44507,12,44537,44563,12,44593,44619,12,44649,44675,12,44705,44731,12,44761,44787,12,44817,44843,12,44873,44899,12,44929,44955,12,44985,45011,12,45041,45067,12,45097,45123,12,45153,45179,12,45209,45235,12,45265,45291,12,45321,45347,12,45377,45403,12,45433,45459,12,45489,45515,12,45545,45571,12,45601,45627,12,45657,45683,12,45713,45739,12,45769,45795,12,45825,45851,12,45881,45907,12,45937,45963,12,45993,46019,12,46049,46075,12,46105,46131,12,46161,46187,12,46217,46243,12,46273,46299,12,46329,46355,12,46385,46411,12,46441,46467,12,46497,46523,12,46553,46579,12,46609,46635,12,46665,46691,12,46721,46747,12,46777,46803,12,46833,46859,12,46889,46915,12,46945,46971,12,47001,47027,12,47057,47083,12,47113,47139,12,47169,47195,12,47225,47251,12,47281,47307,12,47337,47363,12,47393,47419,12,47449,47475,12,47505,47531,12,47561,47587,12,47617,47643,12,47673,47699,12,47729,47755,12,47785,47811,12,47841,47867,12,47897,47923,12,47953,47979,12,48009,48035,12,48065,48091,12,48121,48147,12,48177,48203,12,48233,48259,12,48289,48315,12,48345,48371,12,48401,48427,12,48457,48483,12,48513,48539,12,48569,48595,12,48625,48651,12,48681,48707,12,48737,48763,12,48793,48819,12,48849,48875,12,48905,48931,12,48961,48987,12,49017,49043,12,49073,49099,12,49129,49155,12,49185,49211,12,49241,49267,12,49297,49323,12,49353,49379,12,49409,49435,12,49465,49491,12,49521,49547,12,49577,49603,12,49633,49659,12,49689,49715,12,49745,49771,12,49801,49827,12,49857,49883,12,49913,49939,12,49969,49995,12,50025,50051,12,50081,50107,12,50137,50163,12,50193,50219,12,50249,50275,12,50305,50331,12,50361,50387,12,50417,50443,12,50473,50499,12,50529,50555,12,50585,50611,12,50641,50667,12,50697,50723,12,50753,50779,12,50809,50835,12,50865,50891,12,50921,50947,12,50977,51003,12,51033,51059,12,51089,51115,12,51145,51171,12,51201,51227,12,51257,51283,12,51313,51339,12,51369,51395,12,51425,51451,12,51481,51507,12,51537,51563,12,51593,51619,12,51649,51675,12,51705,51731,12,51761,51787,12,51817,51843,12,51873,51899,12,51929,51955,12,51985,52011,12,52041,52067,12,52097,52123,12,52153,52179,12,52209,52235,12,52265,52291,12,52321,52347,12,52377,52403,12,52433,52459,12,52489,52515,12,52545,52571,12,52601,52627,12,52657,52683,12,52713,52739,12,52769,52795,12,52825,52851,12,52881,52907,12,52937,52963,12,52993,53019,12,53049,53075,12,53105,53131,12,53161,53187,12,53217,53243,12,53273,53299,12,53329,53355,12,53385,53411,12,53441,53467,12,53497,53523,12,53553,53579,12,53609,53635,12,53665,53691,12,53721,53747,12,53777,53803,12,53833,53859,12,53889,53915,12,53945,53971,12,54001,54027,12,54057,54083,12,54113,54139,12,54169,54195,12,54225,54251,12,54281,54307,12,54337,54363,12,54393,54419,12,54449,54475,12,54505,54531,12,54561,54587,12,54617,54643,12,54673,54699,12,54729,54755,12,54785,54811,12,54841,54867,12,54897,54923,12,54953,54979,12,55009,55035,12,55065,55091,12,55121,55147,12,55177,55203,12,65024,65039,5,65520,65528,4,66422,66426,5,68152,68154,5,69291,69292,5,69633,69633,5,69747,69748,5,69811,69814,5,69826,69826,5,69932,69932,7,70016,70017,5,70079,70080,7,70095,70095,5,70196,70196,5,70367,70367,5,70402,70403,7,70464,70464,5,70487,70487,5,70709,70711,7,70725,70725,7,70833,70834,7,70843,70844,7,70849,70849,7,71090,71093,5,71103,71104,5,71227,71228,7,71339,71339,5,71344,71349,5,71458,71461,5,71727,71735,5,71985,71989,7,71998,71998,5,72002,72002,7,72154,72155,5,72193,72202,5,72251,72254,5,72281,72283,5,72344,72345,5,72766,72766,7,72874,72880,5,72885,72886,5,73023,73029,5,73104,73105,5,73111,73111,5,92912,92916,5,94095,94098,5,113824,113827,4,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,125252,125258,5,127183,127183,14,127340,127343,14,127377,127386,14,127491,127503,14,127548,127551,14,127744,127756,14,127761,127761,14,127769,127769,14,127773,127774,14,127780,127788,14,127796,127797,14,127820,127823,14,127869,127869,14,127894,127895,14,127902,127903,14,127943,127943,14,127947,127950,14,127972,127972,14,127988,127988,14,127992,127994,14,128009,128011,14,128019,128019,14,128023,128041,14,128064,128064,14,128102,128107,14,128174,128181,14,128238,128238,14,128246,128247,14,128254,128254,14,128264,128264,14,128278,128299,14,128329,128330,14,128348,128359,14,128371,128377,14,128392,128393,14,128401,128404,14,128421,128421,14,128433,128434,14,128450,128452,14,128476,128478,14,128483,128483,14,128495,128495,14,128506,128506,14,128519,128520,14,128528,128528,14,128534,128534,14,128538,128538,14,128540,128542,14,128544,128549,14,128552,128555,14,128557,128557,14,128560,128563,14,128565,128565,14,128567,128576,14,128581,128591,14,128641,128642,14,128646,128646,14,128648,128648,14,128650,128651,14,128653,128653,14,128655,128655,14,128657,128659,14,128661,128661,14,128663,128663,14,128665,128666,14,128674,128674,14,128676,128677,14,128679,128685,14,128690,128690,14,128694,128694,14,128697,128702,14,128704,128704,14,128710,128714,14,128716,128716,14,128720,128720,14,128723,128724,14,128726,128727,14,128733,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129008,129008,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129661,129663,14,129667,129670,14,129680,129685,14,129705,129708,14,129712,129718,14,129723,129727,14,129731,129733,14,129744,129750,14,129754,129759,14,129768,129775,14,129783,129791,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2192,2193,1,2250,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3132,3132,5,3137,3140,7,3146,3149,5,3170,3171,5,3202,3203,7,3262,3262,7,3264,3265,7,3267,3268,7,3271,3272,7,3276,3277,5,3298,3299,5,3330,3331,7,3390,3390,5,3393,3396,5,3402,3404,7,3406,3406,1,3426,3427,5,3458,3459,7,3535,3535,5,3538,3540,5,3544,3550,7,3570,3571,7,3635,3635,7,3655,3662,5,3763,3763,7,3784,3789,5,3893,3893,5,3897,3897,5,3953,3966,5,3968,3972,5,3981,3991,5,4038,4038,5,4145,4145,7,4153,4154,5,4157,4158,5,4184,4185,5,4209,4212,5,4228,4228,7,4237,4237,5,4352,4447,8,4520,4607,10,5906,5908,5,5938,5939,5,5970,5971,5,6068,6069,5,6071,6077,5,6086,6086,5,6089,6099,5,6155,6157,5,6159,6159,5,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6862,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7679,5,8204,8204,5,8206,8207,4,8233,8233,4,8252,8252,14,8288,8292,4,8294,8303,4,8413,8416,5,8418,8420,5,8482,8482,14,8596,8601,14,8986,8987,14,9096,9096,14,9193,9196,14,9199,9199,14,9201,9202,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9729,14,9732,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9775,9775,14,9784,9785,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9874,14,9876,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9934,14,9936,9936,14,9938,9938,14,9940,9940,14,9961,9961,14,9963,9967,14,9970,9971,14,9973,9973,14,9975,9977,14,9979,9980,14,9982,9985,14,9987,9988,14,9992,9996,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10083,14,10085,10087,14,10145,10145,14,10175,10175,14,11013,11015,14,11088,11088,14,11503,11505,5,11744,11775,5,12334,12335,5,12349,12349,14,12951,12951,14,42607,42607,5,42612,42621,5,42736,42737,5,43014,43014,5,43043,43044,7,43047,43047,7,43136,43137,7,43204,43205,5,43263,43263,5,43335,43345,5,43360,43388,8,43395,43395,7,43444,43445,7,43450,43451,7,43454,43456,7,43561,43566,5,43569,43570,5,43573,43574,5,43596,43596,5,43644,43644,5,43698,43700,5,43710,43711,5,43755,43755,7,43758,43759,7,43766,43766,5,44005,44005,5,44008,44008,5,44012,44012,7,44032,44032,11,44060,44060,11,44088,44088,11,44116,44116,11,44144,44144,11,44172,44172,11,44200,44200,11,44228,44228,11,44256,44256,11,44284,44284,11,44312,44312,11,44340,44340,11,44368,44368,11,44396,44396,11,44424,44424,11,44452,44452,11,44480,44480,11,44508,44508,11,44536,44536,11,44564,44564,11,44592,44592,11,44620,44620,11,44648,44648,11,44676,44676,11,44704,44704,11,44732,44732,11,44760,44760,11,44788,44788,11,44816,44816,11,44844,44844,11,44872,44872,11,44900,44900,11,44928,44928,11,44956,44956,11,44984,44984,11,45012,45012,11,45040,45040,11,45068,45068,11,45096,45096,11,45124,45124,11,45152,45152,11,45180,45180,11,45208,45208,11,45236,45236,11,45264,45264,11,45292,45292,11,45320,45320,11,45348,45348,11,45376,45376,11,45404,45404,11,45432,45432,11,45460,45460,11,45488,45488,11,45516,45516,11,45544,45544,11,45572,45572,11,45600,45600,11,45628,45628,11,45656,45656,11,45684,45684,11,45712,45712,11,45740,45740,11,45768,45768,11,45796,45796,11,45824,45824,11,45852,45852,11,45880,45880,11,45908,45908,11,45936,45936,11,45964,45964,11,45992,45992,11,46020,46020,11,46048,46048,11,46076,46076,11,46104,46104,11,46132,46132,11,46160,46160,11,46188,46188,11,46216,46216,11,46244,46244,11,46272,46272,11,46300,46300,11,46328,46328,11,46356,46356,11,46384,46384,11,46412,46412,11,46440,46440,11,46468,46468,11,46496,46496,11,46524,46524,11,46552,46552,11,46580,46580,11,46608,46608,11,46636,46636,11,46664,46664,11,46692,46692,11,46720,46720,11,46748,46748,11,46776,46776,11,46804,46804,11,46832,46832,11,46860,46860,11,46888,46888,11,46916,46916,11,46944,46944,11,46972,46972,11,47000,47000,11,47028,47028,11,47056,47056,11,47084,47084,11,47112,47112,11,47140,47140,11,47168,47168,11,47196,47196,11,47224,47224,11,47252,47252,11,47280,47280,11,47308,47308,11,47336,47336,11,47364,47364,11,47392,47392,11,47420,47420,11,47448,47448,11,47476,47476,11,47504,47504,11,47532,47532,11,47560,47560,11,47588,47588,11,47616,47616,11,47644,47644,11,47672,47672,11,47700,47700,11,47728,47728,11,47756,47756,11,47784,47784,11,47812,47812,11,47840,47840,11,47868,47868,11,47896,47896,11,47924,47924,11,47952,47952,11,47980,47980,11,48008,48008,11,48036,48036,11,48064,48064,11,48092,48092,11,48120,48120,11,48148,48148,11,48176,48176,11,48204,48204,11,48232,48232,11,48260,48260,11,48288,48288,11,48316,48316,11,48344,48344,11,48372,48372,11,48400,48400,11,48428,48428,11,48456,48456,11,48484,48484,11,48512,48512,11,48540,48540,11,48568,48568,11,48596,48596,11,48624,48624,11,48652,48652,11,48680,48680,11,48708,48708,11,48736,48736,11,48764,48764,11,48792,48792,11,48820,48820,11,48848,48848,11,48876,48876,11,48904,48904,11,48932,48932,11,48960,48960,11,48988,48988,11,49016,49016,11,49044,49044,11,49072,49072,11,49100,49100,11,49128,49128,11,49156,49156,11,49184,49184,11,49212,49212,11,49240,49240,11,49268,49268,11,49296,49296,11,49324,49324,11,49352,49352,11,49380,49380,11,49408,49408,11,49436,49436,11,49464,49464,11,49492,49492,11,49520,49520,11,49548,49548,11,49576,49576,11,49604,49604,11,49632,49632,11,49660,49660,11,49688,49688,11,49716,49716,11,49744,49744,11,49772,49772,11,49800,49800,11,49828,49828,11,49856,49856,11,49884,49884,11,49912,49912,11,49940,49940,11,49968,49968,11,49996,49996,11,50024,50024,11,50052,50052,11,50080,50080,11,50108,50108,11,50136,50136,11,50164,50164,11,50192,50192,11,50220,50220,11,50248,50248,11,50276,50276,11,50304,50304,11,50332,50332,11,50360,50360,11,50388,50388,11,50416,50416,11,50444,50444,11,50472,50472,11,50500,50500,11,50528,50528,11,50556,50556,11,50584,50584,11,50612,50612,11,50640,50640,11,50668,50668,11,50696,50696,11,50724,50724,11,50752,50752,11,50780,50780,11,50808,50808,11,50836,50836,11,50864,50864,11,50892,50892,11,50920,50920,11,50948,50948,11,50976,50976,11,51004,51004,11,51032,51032,11,51060,51060,11,51088,51088,11,51116,51116,11,51144,51144,11,51172,51172,11,51200,51200,11,51228,51228,11,51256,51256,11,51284,51284,11,51312,51312,11,51340,51340,11,51368,51368,11,51396,51396,11,51424,51424,11,51452,51452,11,51480,51480,11,51508,51508,11,51536,51536,11,51564,51564,11,51592,51592,11,51620,51620,11,51648,51648,11,51676,51676,11,51704,51704,11,51732,51732,11,51760,51760,11,51788,51788,11,51816,51816,11,51844,51844,11,51872,51872,11,51900,51900,11,51928,51928,11,51956,51956,11,51984,51984,11,52012,52012,11,52040,52040,11,52068,52068,11,52096,52096,11,52124,52124,11,52152,52152,11,52180,52180,11,52208,52208,11,52236,52236,11,52264,52264,11,52292,52292,11,52320,52320,11,52348,52348,11,52376,52376,11,52404,52404,11,52432,52432,11,52460,52460,11,52488,52488,11,52516,52516,11,52544,52544,11,52572,52572,11,52600,52600,11,52628,52628,11,52656,52656,11,52684,52684,11,52712,52712,11,52740,52740,11,52768,52768,11,52796,52796,11,52824,52824,11,52852,52852,11,52880,52880,11,52908,52908,11,52936,52936,11,52964,52964,11,52992,52992,11,53020,53020,11,53048,53048,11,53076,53076,11,53104,53104,11,53132,53132,11,53160,53160,11,53188,53188,11,53216,53216,11,53244,53244,11,53272,53272,11,53300,53300,11,53328,53328,11,53356,53356,11,53384,53384,11,53412,53412,11,53440,53440,11,53468,53468,11,53496,53496,11,53524,53524,11,53552,53552,11,53580,53580,11,53608,53608,11,53636,53636,11,53664,53664,11,53692,53692,11,53720,53720,11,53748,53748,11,53776,53776,11,53804,53804,11,53832,53832,11,53860,53860,11,53888,53888,11,53916,53916,11,53944,53944,11,53972,53972,11,54000,54000,11,54028,54028,11,54056,54056,11,54084,54084,11,54112,54112,11,54140,54140,11,54168,54168,11,54196,54196,11,54224,54224,11,54252,54252,11,54280,54280,11,54308,54308,11,54336,54336,11,54364,54364,11,54392,54392,11,54420,54420,11,54448,54448,11,54476,54476,11,54504,54504,11,54532,54532,11,54560,54560,11,54588,54588,11,54616,54616,11,54644,54644,11,54672,54672,11,54700,54700,11,54728,54728,11,54756,54756,11,54784,54784,11,54812,54812,11,54840,54840,11,54868,54868,11,54896,54896,11,54924,54924,11,54952,54952,11,54980,54980,11,55008,55008,11,55036,55036,11,55064,55064,11,55092,55092,11,55120,55120,11,55148,55148,11,55176,55176,11,55216,55238,9,64286,64286,5,65056,65071,5,65438,65439,5,65529,65531,4,66272,66272,5,68097,68099,5,68108,68111,5,68159,68159,5,68900,68903,5,69446,69456,5,69632,69632,7,69634,69634,7,69744,69744,5,69759,69761,5,69808,69810,7,69815,69816,7,69821,69821,1,69837,69837,1,69927,69931,5,69933,69940,5,70003,70003,5,70018,70018,7,70070,70078,5,70082,70083,1,70094,70094,7,70188,70190,7,70194,70195,7,70197,70197,7,70206,70206,5,70368,70370,7,70400,70401,5,70459,70460,5,70463,70463,7,70465,70468,7,70475,70477,7,70498,70499,7,70512,70516,5,70712,70719,5,70722,70724,5,70726,70726,5,70832,70832,5,70835,70840,5,70842,70842,5,70845,70845,5,70847,70848,5,70850,70851,5,71088,71089,7,71096,71099,7,71102,71102,7,71132,71133,5,71219,71226,5,71229,71229,5,71231,71232,5,71340,71340,7,71342,71343,7,71350,71350,7,71453,71455,5,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,118528,118573,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123566,123566,5,125136,125142,5,126976,126979,14,126981,127182,14,127184,127231,14,127279,127279,14,127344,127345,14,127374,127374,14,127405,127461,14,127489,127490,14,127514,127514,14,127538,127546,14,127561,127567,14,127570,127743,14,127757,127758,14,127760,127760,14,127762,127762,14,127766,127768,14,127770,127770,14,127772,127772,14,127775,127776,14,127778,127779,14,127789,127791,14,127794,127795,14,127798,127798,14,127819,127819,14,127824,127824,14,127868,127868,14,127870,127871,14,127892,127893,14,127896,127896,14,127900,127901,14,127904,127940,14,127942,127942,14,127944,127944,14,127946,127946,14,127951,127955,14,127968,127971,14,127973,127984,14,127987,127987,14,127989,127989,14,127991,127991,14,127995,127999,5,128008,128008,14,128012,128014,14,128017,128018,14,128020,128020,14,128022,128022,14,128042,128042,14,128063,128063,14,128065,128065,14,128101,128101,14,128108,128109,14,128173,128173,14,128182,128183,14,128236,128237,14,128239,128239,14,128245,128245,14,128248,128248,14,128253,128253,14,128255,128258,14,128260,128263,14,128265,128265,14,128277,128277,14,128300,128301,14,128326,128328,14,128331,128334,14,128336,128347,14,128360,128366,14,128369,128370,14,128378,128378,14,128391,128391,14,128394,128397,14,128400,128400,14,128405,128406,14,128420,128420,14,128422,128423,14,128425,128432,14,128435,128443,14,128445,128449,14,128453,128464,14,128468,128475,14,128479,128480,14,128482,128482,14,128484,128487,14,128489,128494,14,128496,128498,14,128500,128505,14,128507,128511,14,128513,128518,14,128521,128525,14,128527,128527,14,128529,128529,14,128533,128533,14,128535,128535,14,128537,128537,14]');\n}\n\n//#endregion\n\n/**\n * Computes the offset after performing a left delete on the given string,\n * while considering unicode grapheme/emoji rules.\n*/\nexport function getLeftDeleteOffset(offset: number, str: string): number {\n\tif (offset === 0) {\n\t\treturn 0;\n\t}\n\n\t// Try to delete emoji part.\n\tconst emojiOffset = getOffsetBeforeLastEmojiComponent(offset, str);\n\tif (emojiOffset !== undefined) {\n\t\treturn emojiOffset;\n\t}\n\n\t// Otherwise, just skip a single code point.\n\tconst iterator = new CodePointIterator(str, offset);\n\titerator.prevCodePoint();\n\treturn iterator.offset;\n}\n\nfunction getOffsetBeforeLastEmojiComponent(initialOffset: number, str: string): number | undefined {\n\t// See https://www.unicode.org/reports/tr51/tr51-14.html#EBNF_and_Regex for the\n\t// structure of emojis.\n\tconst iterator = new CodePointIterator(str, initialOffset);\n\tlet codePoint = iterator.prevCodePoint();\n\n\t// Skip modifiers\n\twhile ((isEmojiModifier(codePoint) || codePoint === CodePoint.emojiVariantSelector || codePoint === CodePoint.enclosingKeyCap)) {\n\t\tif (iterator.offset === 0) {\n\t\t\t// Cannot skip modifier, no preceding emoji base.\n\t\t\treturn undefined;\n\t\t}\n\t\tcodePoint = iterator.prevCodePoint();\n\t}\n\n\t// Expect base emoji\n\tif (!isEmojiImprecise(codePoint)) {\n\t\t// Unexpected code point, not a valid emoji.\n\t\treturn undefined;\n\t}\n\n\tlet resultOffset = iterator.offset;\n\n\tif (resultOffset > 0) {\n\t\t// Skip optional ZWJ code points that combine multiple emojis.\n\t\t// In theory, we should check if that ZWJ actually combines multiple emojis\n\t\t// to prevent deleting ZWJs in situations we didn't account for.\n\t\tconst optionalZwjCodePoint = iterator.prevCodePoint();\n\t\tif (optionalZwjCodePoint === CodePoint.zwj) {\n\t\t\tresultOffset = iterator.offset;\n\t\t}\n\t}\n\n\treturn resultOffset;\n}\n\nfunction isEmojiModifier(codePoint: number): boolean {\n\treturn 0x1F3FB <= codePoint && codePoint <= 0x1F3FF;\n}\n\nconst enum CodePoint {\n\tzwj = 0x200D,\n\n\t/**\n\t * Variation Selector-16 (VS16)\n\t*/\n\temojiVariantSelector = 0xFE0F,\n\n\t/**\n\t * Combining Enclosing Keycap\n\t */\n\tenclosingKeyCap = 0x20E3,\n}\n\nexport const noBreakWhitespace = '\\xa0';\n\nexport class AmbiguousCharacters {\n\tprivate static readonly ambiguousCharacterData = new Lazy<\n\t\tRecord<\n\t\t\tstring | '_common' | '_default',\n\t\t\t/* code point -> ascii code point */ number[]\n\t\t>\n\t>(() => {\n\t\t// Generated using https://github.com/hediet/vscode-unicode-data\n\t\t// Stored as key1, value1, key2, value2, ...\n\t\treturn JSON.parse(\n\t\t\t'{\\\"_common\\\":[8232,32,8233,32,5760,32,8192,32,8193,32,8194,32,8195,32,8196,32,8197,32,8198,32,8200,32,8201,32,8202,32,8287,32,8199,32,8239,32,2042,95,65101,95,65102,95,65103,95,8208,45,8209,45,8210,45,65112,45,1748,45,8259,45,727,45,8722,45,10134,45,11450,45,1549,44,1643,44,8218,44,184,44,42233,44,894,59,2307,58,2691,58,1417,58,1795,58,1796,58,5868,58,65072,58,6147,58,6153,58,8282,58,1475,58,760,58,42889,58,8758,58,720,58,42237,58,451,33,11601,33,660,63,577,63,2429,63,5038,63,42731,63,119149,46,8228,46,1793,46,1794,46,42510,46,68176,46,1632,46,1776,46,42232,46,1373,96,65287,96,8219,96,8242,96,1370,96,1523,96,8175,96,65344,96,900,96,8189,96,8125,96,8127,96,8190,96,697,96,884,96,712,96,714,96,715,96,756,96,699,96,701,96,700,96,702,96,42892,96,1497,96,2036,96,2037,96,5194,96,5836,96,94033,96,94034,96,65339,91,10088,40,10098,40,12308,40,64830,40,65341,93,10089,41,10099,41,12309,41,64831,41,10100,123,119060,123,10101,125,65342,94,8270,42,1645,42,8727,42,66335,42,5941,47,8257,47,8725,47,8260,47,9585,47,10187,47,10744,47,119354,47,12755,47,12339,47,11462,47,20031,47,12035,47,65340,92,65128,92,8726,92,10189,92,10741,92,10745,92,119311,92,119355,92,12756,92,20022,92,12034,92,42872,38,708,94,710,94,5869,43,10133,43,66203,43,8249,60,10094,60,706,60,119350,60,5176,60,5810,60,5120,61,11840,61,12448,61,42239,61,8250,62,10095,62,707,62,119351,62,5171,62,94015,62,8275,126,732,126,8128,126,8764,126,65372,124,65293,45,120784,50,120794,50,120804,50,120814,50,120824,50,130034,50,42842,50,423,50,1000,50,42564,50,5311,50,42735,50,119302,51,120785,51,120795,51,120805,51,120815,51,120825,51,130035,51,42923,51,540,51,439,51,42858,51,11468,51,1248,51,94011,51,71882,51,120786,52,120796,52,120806,52,120816,52,120826,52,130036,52,5070,52,71855,52,120787,53,120797,53,120807,53,120817,53,120827,53,130037,53,444,53,71867,53,120788,54,120798,54,120808,54,120818,54,120828,54,130038,54,11474,54,5102,54,71893,54,119314,55,120789,55,120799,55,120809,55,120819,55,120829,55,130039,55,66770,55,71878,55,2819,56,2538,56,2666,56,125131,56,120790,56,120800,56,120810,56,120820,56,120830,56,130040,56,547,56,546,56,66330,56,2663,57,2920,57,2541,57,3437,57,120791,57,120801,57,120811,57,120821,57,120831,57,130041,57,42862,57,11466,57,71884,57,71852,57,71894,57,9082,97,65345,97,119834,97,119886,97,119938,97,119990,97,120042,97,120094,97,120146,97,120198,97,120250,97,120302,97,120354,97,120406,97,120458,97,593,97,945,97,120514,97,120572,97,120630,97,120688,97,120746,97,65313,65,119808,65,119860,65,119912,65,119964,65,120016,65,120068,65,120120,65,120172,65,120224,65,120276,65,120328,65,120380,65,120432,65,913,65,120488,65,120546,65,120604,65,120662,65,120720,65,5034,65,5573,65,42222,65,94016,65,66208,65,119835,98,119887,98,119939,98,119991,98,120043,98,120095,98,120147,98,120199,98,120251,98,120303,98,120355,98,120407,98,120459,98,388,98,5071,98,5234,98,5551,98,65314,66,8492,66,119809,66,119861,66,119913,66,120017,66,120069,66,120121,66,120173,66,120225,66,120277,66,120329,66,120381,66,120433,66,42932,66,914,66,120489,66,120547,66,120605,66,120663,66,120721,66,5108,66,5623,66,42192,66,66178,66,66209,66,66305,66,65347,99,8573,99,119836,99,119888,99,119940,99,119992,99,120044,99,120096,99,120148,99,120200,99,120252,99,120304,99,120356,99,120408,99,120460,99,7428,99,1010,99,11429,99,43951,99,66621,99,128844,67,71922,67,71913,67,65315,67,8557,67,8450,67,8493,67,119810,67,119862,67,119914,67,119966,67,120018,67,120174,67,120226,67,120278,67,120330,67,120382,67,120434,67,1017,67,11428,67,5087,67,42202,67,66210,67,66306,67,66581,67,66844,67,8574,100,8518,100,119837,100,119889,100,119941,100,119993,100,120045,100,120097,100,120149,100,120201,100,120253,100,120305,100,120357,100,120409,100,120461,100,1281,100,5095,100,5231,100,42194,100,8558,68,8517,68,119811,68,119863,68,119915,68,119967,68,120019,68,120071,68,120123,68,120175,68,120227,68,120279,68,120331,68,120383,68,120435,68,5024,68,5598,68,5610,68,42195,68,8494,101,65349,101,8495,101,8519,101,119838,101,119890,101,119942,101,120046,101,120098,101,120150,101,120202,101,120254,101,120306,101,120358,101,120410,101,120462,101,43826,101,1213,101,8959,69,65317,69,8496,69,119812,69,119864,69,119916,69,120020,69,120072,69,120124,69,120176,69,120228,69,120280,69,120332,69,120384,69,120436,69,917,69,120492,69,120550,69,120608,69,120666,69,120724,69,11577,69,5036,69,42224,69,71846,69,71854,69,66182,69,119839,102,119891,102,119943,102,119995,102,120047,102,120099,102,120151,102,120203,102,120255,102,120307,102,120359,102,120411,102,120463,102,43829,102,42905,102,383,102,7837,102,1412,102,119315,70,8497,70,119813,70,119865,70,119917,70,120021,70,120073,70,120125,70,120177,70,120229,70,120281,70,120333,70,120385,70,120437,70,42904,70,988,70,120778,70,5556,70,42205,70,71874,70,71842,70,66183,70,66213,70,66853,70,65351,103,8458,103,119840,103,119892,103,119944,103,120048,103,120100,103,120152,103,120204,103,120256,103,120308,103,120360,103,120412,103,120464,103,609,103,7555,103,397,103,1409,103,119814,71,119866,71,119918,71,119970,71,120022,71,120074,71,120126,71,120178,71,120230,71,120282,71,120334,71,120386,71,120438,71,1292,71,5056,71,5107,71,42198,71,65352,104,8462,104,119841,104,119945,104,119997,104,120049,104,120101,104,120153,104,120205,104,120257,104,120309,104,120361,104,120413,104,120465,104,1211,104,1392,104,5058,104,65320,72,8459,72,8460,72,8461,72,119815,72,119867,72,119919,72,120023,72,120179,72,120231,72,120283,72,120335,72,120387,72,120439,72,919,72,120494,72,120552,72,120610,72,120668,72,120726,72,11406,72,5051,72,5500,72,42215,72,66255,72,731,105,9075,105,65353,105,8560,105,8505,105,8520,105,119842,105,119894,105,119946,105,119998,105,120050,105,120102,105,120154,105,120206,105,120258,105,120310,105,120362,105,120414,105,120466,105,120484,105,618,105,617,105,953,105,8126,105,890,105,120522,105,120580,105,120638,105,120696,105,120754,105,1110,105,42567,105,1231,105,43893,105,5029,105,71875,105,65354,106,8521,106,119843,106,119895,106,119947,106,119999,106,120051,106,120103,106,120155,106,120207,106,120259,106,120311,106,120363,106,120415,106,120467,106,1011,106,1112,106,65322,74,119817,74,119869,74,119921,74,119973,74,120025,74,120077,74,120129,74,120181,74,120233,74,120285,74,120337,74,120389,74,120441,74,42930,74,895,74,1032,74,5035,74,5261,74,42201,74,119844,107,119896,107,119948,107,120000,107,120052,107,120104,107,120156,107,120208,107,120260,107,120312,107,120364,107,120416,107,120468,107,8490,75,65323,75,119818,75,119870,75,119922,75,119974,75,120026,75,120078,75,120130,75,120182,75,120234,75,120286,75,120338,75,120390,75,120442,75,922,75,120497,75,120555,75,120613,75,120671,75,120729,75,11412,75,5094,75,5845,75,42199,75,66840,75,1472,108,8739,73,9213,73,65512,73,1633,108,1777,73,66336,108,125127,108,120783,73,120793,73,120803,73,120813,73,120823,73,130033,73,65321,73,8544,73,8464,73,8465,73,119816,73,119868,73,119920,73,120024,73,120128,73,120180,73,120232,73,120284,73,120336,73,120388,73,120440,73,65356,108,8572,73,8467,108,119845,108,119897,108,119949,108,120001,108,120053,108,120105,73,120157,73,120209,73,120261,73,120313,73,120365,73,120417,73,120469,73,448,73,120496,73,120554,73,120612,73,120670,73,120728,73,11410,73,1030,73,1216,73,1493,108,1503,108,1575,108,126464,108,126592,108,65166,108,65165,108,1994,108,11599,73,5825,73,42226,73,93992,73,66186,124,66313,124,119338,76,8556,76,8466,76,119819,76,119871,76,119923,76,120027,76,120079,76,120131,76,120183,76,120235,76,120287,76,120339,76,120391,76,120443,76,11472,76,5086,76,5290,76,42209,76,93974,76,71843,76,71858,76,66587,76,66854,76,65325,77,8559,77,8499,77,119820,77,119872,77,119924,77,120028,77,120080,77,120132,77,120184,77,120236,77,120288,77,120340,77,120392,77,120444,77,924,77,120499,77,120557,77,120615,77,120673,77,120731,77,1018,77,11416,77,5047,77,5616,77,5846,77,42207,77,66224,77,66321,77,119847,110,119899,110,119951,110,120003,110,120055,110,120107,110,120159,110,120211,110,120263,110,120315,110,120367,110,120419,110,120471,110,1400,110,1404,110,65326,78,8469,78,119821,78,119873,78,119925,78,119977,78,120029,78,120081,78,120185,78,120237,78,120289,78,120341,78,120393,78,120445,78,925,78,120500,78,120558,78,120616,78,120674,78,120732,78,11418,78,42208,78,66835,78,3074,111,3202,111,3330,111,3458,111,2406,111,2662,111,2790,111,3046,111,3174,111,3302,111,3430,111,3664,111,3792,111,4160,111,1637,111,1781,111,65359,111,8500,111,119848,111,119900,111,119952,111,120056,111,120108,111,120160,111,120212,111,120264,111,120316,111,120368,111,120420,111,120472,111,7439,111,7441,111,43837,111,959,111,120528,111,120586,111,120644,111,120702,111,120760,111,963,111,120532,111,120590,111,120648,111,120706,111,120764,111,11423,111,4351,111,1413,111,1505,111,1607,111,126500,111,126564,111,126596,111,65259,111,65260,111,65258,111,65257,111,1726,111,64428,111,64429,111,64427,111,64426,111,1729,111,64424,111,64425,111,64423,111,64422,111,1749,111,3360,111,4125,111,66794,111,71880,111,71895,111,66604,111,1984,79,2534,79,2918,79,12295,79,70864,79,71904,79,120782,79,120792,79,120802,79,120812,79,120822,79,130032,79,65327,79,119822,79,119874,79,119926,79,119978,79,120030,79,120082,79,120134,79,120186,79,120238,79,120290,79,120342,79,120394,79,120446,79,927,79,120502,79,120560,79,120618,79,120676,79,120734,79,11422,79,1365,79,11604,79,4816,79,2848,79,66754,79,42227,79,71861,79,66194,79,66219,79,66564,79,66838,79,9076,112,65360,112,119849,112,119901,112,119953,112,120005,112,120057,112,120109,112,120161,112,120213,112,120265,112,120317,112,120369,112,120421,112,120473,112,961,112,120530,112,120544,112,120588,112,120602,112,120646,112,120660,112,120704,112,120718,112,120762,112,120776,112,11427,112,65328,80,8473,80,119823,80,119875,80,119927,80,119979,80,120031,80,120083,80,120187,80,120239,80,120291,80,120343,80,120395,80,120447,80,929,80,120504,80,120562,80,120620,80,120678,80,120736,80,11426,80,5090,80,5229,80,42193,80,66197,80,119850,113,119902,113,119954,113,120006,113,120058,113,120110,113,120162,113,120214,113,120266,113,120318,113,120370,113,120422,113,120474,113,1307,113,1379,113,1382,113,8474,81,119824,81,119876,81,119928,81,119980,81,120032,81,120084,81,120188,81,120240,81,120292,81,120344,81,120396,81,120448,81,11605,81,119851,114,119903,114,119955,114,120007,114,120059,114,120111,114,120163,114,120215,114,120267,114,120319,114,120371,114,120423,114,120475,114,43847,114,43848,114,7462,114,11397,114,43905,114,119318,82,8475,82,8476,82,8477,82,119825,82,119877,82,119929,82,120033,82,120189,82,120241,82,120293,82,120345,82,120397,82,120449,82,422,82,5025,82,5074,82,66740,82,5511,82,42211,82,94005,82,65363,115,119852,115,119904,115,119956,115,120008,115,120060,115,120112,115,120164,115,120216,115,120268,115,120320,115,120372,115,120424,115,120476,115,42801,115,445,115,1109,115,43946,115,71873,115,66632,115,65331,83,119826,83,119878,83,119930,83,119982,83,120034,83,120086,83,120138,83,120190,83,120242,83,120294,83,120346,83,120398,83,120450,83,1029,83,1359,83,5077,83,5082,83,42210,83,94010,83,66198,83,66592,83,119853,116,119905,116,119957,116,120009,116,120061,116,120113,116,120165,116,120217,116,120269,116,120321,116,120373,116,120425,116,120477,116,8868,84,10201,84,128872,84,65332,84,119827,84,119879,84,119931,84,119983,84,120035,84,120087,84,120139,84,120191,84,120243,84,120295,84,120347,84,120399,84,120451,84,932,84,120507,84,120565,84,120623,84,120681,84,120739,84,11430,84,5026,84,42196,84,93962,84,71868,84,66199,84,66225,84,66325,84,119854,117,119906,117,119958,117,120010,117,120062,117,120114,117,120166,117,120218,117,120270,117,120322,117,120374,117,120426,117,120478,117,42911,117,7452,117,43854,117,43858,117,651,117,965,117,120534,117,120592,117,120650,117,120708,117,120766,117,1405,117,66806,117,71896,117,8746,85,8899,85,119828,85,119880,85,119932,85,119984,85,120036,85,120088,85,120140,85,120192,85,120244,85,120296,85,120348,85,120400,85,120452,85,1357,85,4608,85,66766,85,5196,85,42228,85,94018,85,71864,85,8744,118,8897,118,65366,118,8564,118,119855,118,119907,118,119959,118,120011,118,120063,118,120115,118,120167,118,120219,118,120271,118,120323,118,120375,118,120427,118,120479,118,7456,118,957,118,120526,118,120584,118,120642,118,120700,118,120758,118,1141,118,1496,118,71430,118,43945,118,71872,118,119309,86,1639,86,1783,86,8548,86,119829,86,119881,86,119933,86,119985,86,120037,86,120089,86,120141,86,120193,86,120245,86,120297,86,120349,86,120401,86,120453,86,1140,86,11576,86,5081,86,5167,86,42719,86,42214,86,93960,86,71840,86,66845,86,623,119,119856,119,119908,119,119960,119,120012,119,120064,119,120116,119,120168,119,120220,119,120272,119,120324,119,120376,119,120428,119,120480,119,7457,119,1121,119,1309,119,1377,119,71434,119,71438,119,71439,119,43907,119,71919,87,71910,87,119830,87,119882,87,119934,87,119986,87,120038,87,120090,87,120142,87,120194,87,120246,87,120298,87,120350,87,120402,87,120454,87,1308,87,5043,87,5076,87,42218,87,5742,120,10539,120,10540,120,10799,120,65368,120,8569,120,119857,120,119909,120,119961,120,120013,120,120065,120,120117,120,120169,120,120221,120,120273,120,120325,120,120377,120,120429,120,120481,120,5441,120,5501,120,5741,88,9587,88,66338,88,71916,88,65336,88,8553,88,119831,88,119883,88,119935,88,119987,88,120039,88,120091,88,120143,88,120195,88,120247,88,120299,88,120351,88,120403,88,120455,88,42931,88,935,88,120510,88,120568,88,120626,88,120684,88,120742,88,11436,88,11613,88,5815,88,42219,88,66192,88,66228,88,66327,88,66855,88,611,121,7564,121,65369,121,119858,121,119910,121,119962,121,120014,121,120066,121,120118,121,120170,121,120222,121,120274,121,120326,121,120378,121,120430,121,120482,121,655,121,7935,121,43866,121,947,121,8509,121,120516,121,120574,121,120632,121,120690,121,120748,121,1199,121,4327,121,71900,121,65337,89,119832,89,119884,89,119936,89,119988,89,120040,89,120092,89,120144,89,120196,89,120248,89,120300,89,120352,89,120404,89,120456,89,933,89,978,89,120508,89,120566,89,120624,89,120682,89,120740,89,11432,89,1198,89,5033,89,5053,89,42220,89,94019,89,71844,89,66226,89,119859,122,119911,122,119963,122,120015,122,120067,122,120119,122,120171,122,120223,122,120275,122,120327,122,120379,122,120431,122,120483,122,7458,122,43923,122,71876,122,66293,90,71909,90,65338,90,8484,90,8488,90,119833,90,119885,90,119937,90,119989,90,120041,90,120197,90,120249,90,120301,90,120353,90,120405,90,120457,90,918,90,120493,90,120551,90,120609,90,120667,90,120725,90,5059,90,42204,90,71849,90,65282,34,65284,36,65285,37,65286,38,65290,42,65291,43,65294,46,65295,47,65296,48,65297,49,65298,50,65299,51,65300,52,65301,53,65302,54,65303,55,65304,56,65305,57,65308,60,65309,61,65310,62,65312,64,65316,68,65318,70,65319,71,65324,76,65329,81,65330,82,65333,85,65334,86,65335,87,65343,95,65346,98,65348,100,65350,102,65355,107,65357,109,65358,110,65361,113,65362,114,65364,116,65365,117,65367,119,65370,122,65371,123,65373,125],\\\"_default\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"cs\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"de\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"es\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"fr\\\":[65374,126,65306,58,65281,33,8216,96,8245,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"it\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ja\\\":[8211,45,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65292,44,65307,59],\\\"ko\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pl\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pt-BR\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"qps-ploc\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ru\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,305,105,921,73,1009,112,215,120,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"tr\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"zh-hans\\\":[65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41],\\\"zh-hant\\\":[8211,45,65374,126,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65307,59]}'\n\t\t);\n\t});\n\n\tprivate static readonly cache = new LRUCachedFunction<\n\t\tstring[],\n\t\tAmbiguousCharacters\n\t>((locales) => {\n\t\tfunction arrayToMap(arr: number[]): Map<number, number> {\n\t\t\tconst result = new Map<number, number>();\n\t\t\tfor (let i = 0; i < arr.length; i += 2) {\n\t\t\t\tresult.set(arr[i], arr[i + 1]);\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tfunction mergeMaps(\n\t\t\tmap1: Map<number, number>,\n\t\t\tmap2: Map<number, number>\n\t\t): Map<number, number> {\n\t\t\tconst result = new Map<number, number>(map1);\n\t\t\tfor (const [key, value] of map2) {\n\t\t\t\tresult.set(key, value);\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tfunction intersectMaps(\n\t\t\tmap1: Map<number, number> | undefined,\n\t\t\tmap2: Map<number, number>\n\t\t) {\n\t\t\tif (!map1) {\n\t\t\t\treturn map2;\n\t\t\t}\n\t\t\tconst result = new Map<number, number>();\n\t\t\tfor (const [key, value] of map1) {\n\t\t\t\tif (map2.has(key)) {\n\t\t\t\t\tresult.set(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tconst data = this.ambiguousCharacterData.getValue();\n\n\t\tlet filteredLocales = locales.filter(\n\t\t\t(l) => !l.startsWith('_') && l in data\n\t\t);\n\t\tif (filteredLocales.length === 0) {\n\t\t\tfilteredLocales = ['_default'];\n\t\t}\n\n\t\tlet languageSpecificMap: Map<number, number> | undefined = undefined;\n\t\tfor (const locale of filteredLocales) {\n\t\t\tconst map = arrayToMap(data[locale]);\n\t\t\tlanguageSpecificMap = intersectMaps(languageSpecificMap, map);\n\t\t}\n\n\t\tconst commonMap = arrayToMap(data['_common']);\n\t\tconst map = mergeMaps(commonMap, languageSpecificMap!);\n\n\t\treturn new AmbiguousCharacters(map);\n\t});\n\n\tpublic static getInstance(locales: Set<string>): AmbiguousCharacters {\n\t\treturn AmbiguousCharacters.cache.get(Array.from(locales));\n\t}\n\n\tprivate static _locales = new Lazy<string[]>(() =>\n\t\tObject.keys(AmbiguousCharacters.ambiguousCharacterData.getValue()).filter(\n\t\t\t(k) => !k.startsWith('_')\n\t\t)\n\t);\n\tpublic static getLocales(): string[] {\n\t\treturn AmbiguousCharacters._locales.getValue();\n\t}\n\n\tprivate constructor(\n\t\tprivate readonly confusableDictionary: Map<number, number>\n\t) { }\n\n\tpublic isAmbiguous(codePoint: number): boolean {\n\t\treturn this.confusableDictionary.has(codePoint);\n\t}\n\n\t/**\n\t * Returns the non basic ASCII code point that the given code point can be confused,\n\t * or undefined if such code point does note exist.\n\t */\n\tpublic getPrimaryConfusable(codePoint: number): number | undefined {\n\t\treturn this.confusableDictionary.get(codePoint);\n\t}\n\n\tpublic getConfusableCodePoints(): ReadonlySet<number> {\n\t\treturn new Set(this.confusableDictionary.keys());\n\t}\n}\n\nexport class InvisibleCharacters {\n\tprivate static getRawData(): number[] {\n\t\t// Generated using https://github.com/hediet/vscode-unicode-data\n\t\treturn JSON.parse('[9,10,11,12,13,32,127,160,173,847,1564,4447,4448,6068,6069,6155,6156,6157,6158,7355,7356,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8234,8235,8236,8237,8238,8239,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,10240,12288,12644,65024,65025,65026,65027,65028,65029,65030,65031,65032,65033,65034,65035,65036,65037,65038,65039,65279,65440,65520,65521,65522,65523,65524,65525,65526,65527,65528,65532,78844,119155,119156,119157,119158,119159,119160,119161,119162,917504,917505,917506,917507,917508,917509,917510,917511,917512,917513,917514,917515,917516,917517,917518,917519,917520,917521,917522,917523,917524,917525,917526,917527,917528,917529,917530,917531,917532,917533,917534,917535,917536,917537,917538,917539,917540,917541,917542,917543,917544,917545,917546,917547,917548,917549,917550,917551,917552,917553,917554,917555,917556,917557,917558,917559,917560,917561,917562,917563,917564,917565,917566,917567,917568,917569,917570,917571,917572,917573,917574,917575,917576,917577,917578,917579,917580,917581,917582,917583,917584,917585,917586,917587,917588,917589,917590,917591,917592,917593,917594,917595,917596,917597,917598,917599,917600,917601,917602,917603,917604,917605,917606,917607,917608,917609,917610,917611,917612,917613,917614,917615,917616,917617,917618,917619,917620,917621,917622,917623,917624,917625,917626,917627,917628,917629,917630,917631,917760,917761,917762,917763,917764,917765,917766,917767,917768,917769,917770,917771,917772,917773,917774,917775,917776,917777,917778,917779,917780,917781,917782,917783,917784,917785,917786,917787,917788,917789,917790,917791,917792,917793,917794,917795,917796,917797,917798,917799,917800,917801,917802,917803,917804,917805,917806,917807,917808,917809,917810,917811,917812,917813,917814,917815,917816,917817,917818,917819,917820,917821,917822,917823,917824,917825,917826,917827,917828,917829,917830,917831,917832,917833,917834,917835,917836,917837,917838,917839,917840,917841,917842,917843,917844,917845,917846,917847,917848,917849,917850,917851,917852,917853,917854,917855,917856,917857,917858,917859,917860,917861,917862,917863,917864,917865,917866,917867,917868,917869,917870,917871,917872,917873,917874,917875,917876,917877,917878,917879,917880,917881,917882,917883,917884,917885,917886,917887,917888,917889,917890,917891,917892,917893,917894,917895,917896,917897,917898,917899,917900,917901,917902,917903,917904,917905,917906,917907,917908,917909,917910,917911,917912,917913,917914,917915,917916,917917,917918,917919,917920,917921,917922,917923,917924,917925,917926,917927,917928,917929,917930,917931,917932,917933,917934,917935,917936,917937,917938,917939,917940,917941,917942,917943,917944,917945,917946,917947,917948,917949,917950,917951,917952,917953,917954,917955,917956,917957,917958,917959,917960,917961,917962,917963,917964,917965,917966,917967,917968,917969,917970,917971,917972,917973,917974,917975,917976,917977,917978,917979,917980,917981,917982,917983,917984,917985,917986,917987,917988,917989,917990,917991,917992,917993,917994,917995,917996,917997,917998,917999]');\n\t}\n\n\tprivate static _data: Set<number> | undefined = undefined;\n\n\tprivate static getData() {\n\t\tif (!this._data) {\n\t\t\tthis._data = new Set(InvisibleCharacters.getRawData());\n\t\t}\n\t\treturn this._data;\n\t}\n\n\tpublic static isInvisibleCharacter(codePoint: number): boolean {\n\t\treturn InvisibleCharacters.getData().has(codePoint);\n\t}\n\n\tpublic static get codePoints(): ReadonlySet<number> {\n\t\treturn InvisibleCharacters.getData();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\n\n/**\n * Return a hash value for an object.\n */\nexport function hash(obj: any): number {\n\treturn doHash(obj, 0);\n}\n\nexport function doHash(obj: any, hashVal: number): number {\n\tswitch (typeof obj) {\n\t\tcase 'object':\n\t\t\tif (obj === null) {\n\t\t\t\treturn numberHash(349, hashVal);\n\t\t\t} else if (Array.isArray(obj)) {\n\t\t\t\treturn arrayHash(obj, hashVal);\n\t\t\t}\n\t\t\treturn objectHash(obj, hashVal);\n\t\tcase 'string':\n\t\t\treturn stringHash(obj, hashVal);\n\t\tcase 'boolean':\n\t\t\treturn booleanHash(obj, hashVal);\n\t\tcase 'number':\n\t\t\treturn numberHash(obj, hashVal);\n\t\tcase 'undefined':\n\t\t\treturn numberHash(937, hashVal);\n\t\tdefault:\n\t\t\treturn numberHash(617, hashVal);\n\t}\n}\n\nexport function numberHash(val: number, initialHashVal: number): number {\n\treturn (((initialHashVal << 5) - initialHashVal) + val) | 0;  // hashVal * 31 + ch, keep as int32\n}\n\nfunction booleanHash(b: boolean, initialHashVal: number): number {\n\treturn numberHash(b ? 433 : 863, initialHashVal);\n}\n\nexport function stringHash(s: string, hashVal: number) {\n\thashVal = numberHash(149417, hashVal);\n\tfor (let i = 0, length = s.length; i < length; i++) {\n\t\thashVal = numberHash(s.charCodeAt(i), hashVal);\n\t}\n\treturn hashVal;\n}\n\nfunction arrayHash(arr: any[], initialHashVal: number): number {\n\tinitialHashVal = numberHash(104579, initialHashVal);\n\treturn arr.reduce((hashVal, item) => doHash(item, hashVal), initialHashVal);\n}\n\nfunction objectHash(obj: any, initialHashVal: number): number {\n\tinitialHashVal = numberHash(181387, initialHashVal);\n\treturn Object.keys(obj).sort().reduce((hashVal, key) => {\n\t\thashVal = stringHash(key, hashVal);\n\t\treturn doHash(obj[key], hashVal);\n\t}, initialHashVal);\n}\n\nexport class Hasher {\n\n\tprivate _value = 0;\n\n\tget value(): number {\n\t\treturn this._value;\n\t}\n\n\thash(obj: any): number {\n\t\tthis._value = doHash(obj, this._value);\n\t\treturn this._value;\n\t}\n}\n\nconst enum SHA1Constant {\n\tBLOCK_SIZE = 64, // 512 / 8\n\tUNICODE_REPLACEMENT = 0xFFFD,\n}\n\nfunction leftRotate(value: number, bits: number, totalBits: number = 32): number {\n\t// delta + bits = totalBits\n\tconst delta = totalBits - bits;\n\n\t// All ones, expect `delta` zeros aligned to the right\n\tconst mask = ~((1 << delta) - 1);\n\n\t// Join (value left-shifted `bits` bits) with (masked value right-shifted `delta` bits)\n\treturn ((value << bits) | ((mask & value) >>> delta)) >>> 0;\n}\n\nfunction fill(dest: Uint8Array, index: number = 0, count: number = dest.byteLength, value: number = 0): void {\n\tfor (let i = 0; i < count; i++) {\n\t\tdest[index + i] = value;\n\t}\n}\n\nfunction leftPad(value: string, length: number, char: string = '0'): string {\n\twhile (value.length < length) {\n\t\tvalue = char + value;\n\t}\n\treturn value;\n}\n\nexport function toHexString(buffer: ArrayBuffer): string;\nexport function toHexString(value: number, bitsize?: number): string;\nexport function toHexString(bufferOrValue: ArrayBuffer | number, bitsize: number = 32): string {\n\tif (bufferOrValue instanceof ArrayBuffer) {\n\t\treturn Array.from(new Uint8Array(bufferOrValue)).map(b => b.toString(16).padStart(2, '0')).join('');\n\t}\n\n\treturn leftPad((bufferOrValue >>> 0).toString(16), bitsize / 4);\n}\n\n/**\n * A SHA1 implementation that works with strings and does not allocate.\n */\nexport class StringSHA1 {\n\tprivate static _bigBlock32 = new DataView(new ArrayBuffer(320)); // 80 * 4 = 320\n\n\tprivate _h0 = 0x67452301;\n\tprivate _h1 = 0xEFCDAB89;\n\tprivate _h2 = 0x98BADCFE;\n\tprivate _h3 = 0x10325476;\n\tprivate _h4 = 0xC3D2E1F0;\n\n\tprivate readonly _buff: Uint8Array;\n\tprivate readonly _buffDV: DataView;\n\tprivate _buffLen: number;\n\tprivate _totalLen: number;\n\tprivate _leftoverHighSurrogate: number;\n\tprivate _finished: boolean;\n\n\tconstructor() {\n\t\tthis._buff = new Uint8Array(SHA1Constant.BLOCK_SIZE + 3 /* to fit any utf-8 */);\n\t\tthis._buffDV = new DataView(this._buff.buffer);\n\t\tthis._buffLen = 0;\n\t\tthis._totalLen = 0;\n\t\tthis._leftoverHighSurrogate = 0;\n\t\tthis._finished = false;\n\t}\n\n\tpublic update(str: string): void {\n\t\tconst strLen = str.length;\n\t\tif (strLen === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst buff = this._buff;\n\t\tlet buffLen = this._buffLen;\n\t\tlet leftoverHighSurrogate = this._leftoverHighSurrogate;\n\t\tlet charCode: number;\n\t\tlet offset: number;\n\n\t\tif (leftoverHighSurrogate !== 0) {\n\t\t\tcharCode = leftoverHighSurrogate;\n\t\t\toffset = -1;\n\t\t\tleftoverHighSurrogate = 0;\n\t\t} else {\n\t\t\tcharCode = str.charCodeAt(0);\n\t\t\toffset = 0;\n\t\t}\n\n\t\twhile (true) {\n\t\t\tlet codePoint = charCode;\n\t\t\tif (strings.isHighSurrogate(charCode)) {\n\t\t\t\tif (offset + 1 < strLen) {\n\t\t\t\t\tconst nextCharCode = str.charCodeAt(offset + 1);\n\t\t\t\t\tif (strings.isLowSurrogate(nextCharCode)) {\n\t\t\t\t\t\toffset++;\n\t\t\t\t\t\tcodePoint = strings.computeCodePoint(charCode, nextCharCode);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// illegal => unicode replacement character\n\t\t\t\t\t\tcodePoint = SHA1Constant.UNICODE_REPLACEMENT;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// last character is a surrogate pair\n\t\t\t\t\tleftoverHighSurrogate = charCode;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (strings.isLowSurrogate(charCode)) {\n\t\t\t\t// illegal => unicode replacement character\n\t\t\t\tcodePoint = SHA1Constant.UNICODE_REPLACEMENT;\n\t\t\t}\n\n\t\t\tbuffLen = this._push(buff, buffLen, codePoint);\n\t\t\toffset++;\n\t\t\tif (offset < strLen) {\n\t\t\t\tcharCode = str.charCodeAt(offset);\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._buffLen = buffLen;\n\t\tthis._leftoverHighSurrogate = leftoverHighSurrogate;\n\t}\n\n\tprivate _push(buff: Uint8Array, buffLen: number, codePoint: number): number {\n\t\tif (codePoint < 0x0080) {\n\t\t\tbuff[buffLen++] = codePoint;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tbuff[buffLen++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tbuff[buffLen++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else {\n\t\t\tbuff[buffLen++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t}\n\n\t\tif (buffLen >= SHA1Constant.BLOCK_SIZE) {\n\t\t\tthis._step();\n\t\t\tbuffLen -= SHA1Constant.BLOCK_SIZE;\n\t\t\tthis._totalLen += SHA1Constant.BLOCK_SIZE;\n\t\t\t// take last 3 in case of UTF8 overflow\n\t\t\tbuff[0] = buff[SHA1Constant.BLOCK_SIZE + 0];\n\t\t\tbuff[1] = buff[SHA1Constant.BLOCK_SIZE + 1];\n\t\t\tbuff[2] = buff[SHA1Constant.BLOCK_SIZE + 2];\n\t\t}\n\n\t\treturn buffLen;\n\t}\n\n\tpublic digest(): string {\n\t\tif (!this._finished) {\n\t\t\tthis._finished = true;\n\t\t\tif (this._leftoverHighSurrogate) {\n\t\t\t\t// illegal => unicode replacement character\n\t\t\t\tthis._leftoverHighSurrogate = 0;\n\t\t\t\tthis._buffLen = this._push(this._buff, this._buffLen, SHA1Constant.UNICODE_REPLACEMENT);\n\t\t\t}\n\t\t\tthis._totalLen += this._buffLen;\n\t\t\tthis._wrapUp();\n\t\t}\n\n\t\treturn toHexString(this._h0) + toHexString(this._h1) + toHexString(this._h2) + toHexString(this._h3) + toHexString(this._h4);\n\t}\n\n\tprivate _wrapUp(): void {\n\t\tthis._buff[this._buffLen++] = 0x80;\n\t\tfill(this._buff, this._buffLen);\n\n\t\tif (this._buffLen > 56) {\n\t\t\tthis._step();\n\t\t\tfill(this._buff);\n\t\t}\n\n\t\t// this will fit because the mantissa can cover up to 52 bits\n\t\tconst ml = 8 * this._totalLen;\n\n\t\tthis._buffDV.setUint32(56, Math.floor(ml / 4294967296), false);\n\t\tthis._buffDV.setUint32(60, ml % 4294967296, false);\n\n\t\tthis._step();\n\t}\n\n\tprivate _step(): void {\n\t\tconst bigBlock32 = StringSHA1._bigBlock32;\n\t\tconst data = this._buffDV;\n\n\t\tfor (let j = 0; j < 64 /* 16*4 */; j += 4) {\n\t\t\tbigBlock32.setUint32(j, data.getUint32(j, false), false);\n\t\t}\n\n\t\tfor (let j = 64; j < 320 /* 80*4 */; j += 4) {\n\t\t\tbigBlock32.setUint32(j, leftRotate((bigBlock32.getUint32(j - 12, false) ^ bigBlock32.getUint32(j - 32, false) ^ bigBlock32.getUint32(j - 56, false) ^ bigBlock32.getUint32(j - 64, false)), 1), false);\n\t\t}\n\n\t\tlet a = this._h0;\n\t\tlet b = this._h1;\n\t\tlet c = this._h2;\n\t\tlet d = this._h3;\n\t\tlet e = this._h4;\n\n\t\tlet f: number, k: number;\n\t\tlet temp: number;\n\n\t\tfor (let j = 0; j < 80; j++) {\n\t\t\tif (j < 20) {\n\t\t\t\tf = (b & c) | ((~b) & d);\n\t\t\t\tk = 0x5A827999;\n\t\t\t} else if (j < 40) {\n\t\t\t\tf = b ^ c ^ d;\n\t\t\t\tk = 0x6ED9EBA1;\n\t\t\t} else if (j < 60) {\n\t\t\t\tf = (b & c) | (b & d) | (c & d);\n\t\t\t\tk = 0x8F1BBCDC;\n\t\t\t} else {\n\t\t\t\tf = b ^ c ^ d;\n\t\t\t\tk = 0xCA62C1D6;\n\t\t\t}\n\n\t\t\ttemp = (leftRotate(a, 5) + f + e + k + bigBlock32.getUint32(j * 4, false)) & 0xffffffff;\n\t\t\te = d;\n\t\t\td = c;\n\t\t\tc = leftRotate(b, 30);\n\t\t\tb = a;\n\t\t\ta = temp;\n\t\t}\n\n\t\tthis._h0 = (this._h0 + a) & 0xffffffff;\n\t\tthis._h1 = (this._h1 + b) & 0xffffffff;\n\t\tthis._h2 = (this._h2 + c) & 0xffffffff;\n\t\tthis._h3 = (this._h3 + d) & 0xffffffff;\n\t\tthis._h4 = (this._h4 + e) & 0xffffffff;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { shuffle } from 'vs/base/common/arrays';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { compare, compareIgnoreCase, compareSubstring, compareSubstringIgnoreCase } from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\n\nexport function getOrSet<K, V>(map: Map<K, V>, key: K, value: V): V {\n\tlet result = map.get(key);\n\tif (result === undefined) {\n\t\tresult = value;\n\t\tmap.set(key, result);\n\t}\n\n\treturn result;\n}\n\nexport function mapToString<K, V>(map: Map<K, V>): string {\n\tconst entries: string[] = [];\n\tmap.forEach((value, key) => {\n\t\tentries.push(`${key} => ${value}`);\n\t});\n\n\treturn `Map(${map.size}) {${entries.join(', ')}}`;\n}\n\nexport function setToString<K>(set: Set<K>): string {\n\tconst entries: K[] = [];\n\tset.forEach(value => {\n\t\tentries.push(value);\n\t});\n\n\treturn `Set(${set.size}) {${entries.join(', ')}}`;\n}\n\nexport interface IKeyIterator<K> {\n\treset(key: K): this;\n\tnext(): this;\n\n\thasNext(): boolean;\n\tcmp(a: string): number;\n\tvalue(): string;\n}\n\nexport class StringIterator implements IKeyIterator<string> {\n\n\tprivate _value: string = '';\n\tprivate _pos: number = 0;\n\n\treset(key: string): this {\n\t\tthis._value = key;\n\t\tthis._pos = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tthis._pos += 1;\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._pos < this._value.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tconst aCode = a.charCodeAt(0);\n\t\tconst thisCode = this._value.charCodeAt(this._pos);\n\t\treturn aCode - thisCode;\n\t}\n\n\tvalue(): string {\n\t\treturn this._value[this._pos];\n\t}\n}\n\nexport class ConfigKeysIterator implements IKeyIterator<string> {\n\n\tprivate _value!: string;\n\tprivate _from!: number;\n\tprivate _to!: number;\n\n\tconstructor(\n\t\tprivate readonly _caseSensitive: boolean = true\n\t) { }\n\n\treset(key: string): this {\n\t\tthis._value = key;\n\t\tthis._from = 0;\n\t\tthis._to = 0;\n\t\treturn this.next();\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._to < this._value.length;\n\t}\n\n\tnext(): this {\n\t\t// this._data = key.split(/[\\\\/]/).filter(s => !!s);\n\t\tthis._from = this._to;\n\t\tlet justSeps = true;\n\t\tfor (; this._to < this._value.length; this._to++) {\n\t\t\tconst ch = this._value.charCodeAt(this._to);\n\t\t\tif (ch === CharCode.Period) {\n\t\t\t\tif (justSeps) {\n\t\t\t\t\tthis._from++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tjustSeps = false;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tcmp(a: string): number {\n\t\treturn this._caseSensitive\n\t\t\t? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n\t\t\t: compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n\t}\n\n\tvalue(): string {\n\t\treturn this._value.substring(this._from, this._to);\n\t}\n}\n\nexport class PathIterator implements IKeyIterator<string> {\n\n\tprivate _value!: string;\n\tprivate _valueLen!: number;\n\tprivate _from!: number;\n\tprivate _to!: number;\n\n\tconstructor(\n\t\tprivate readonly _splitOnBackslash: boolean = true,\n\t\tprivate readonly _caseSensitive: boolean = true\n\t) { }\n\n\treset(key: string): this {\n\t\tthis._from = 0;\n\t\tthis._to = 0;\n\t\tthis._value = key;\n\t\tthis._valueLen = key.length;\n\t\tfor (let pos = key.length - 1; pos >= 0; pos--, this._valueLen--) {\n\t\t\tconst ch = this._value.charCodeAt(pos);\n\t\t\tif (!(ch === CharCode.Slash || this._splitOnBackslash && ch === CharCode.Backslash)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn this.next();\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._to < this._valueLen;\n\t}\n\n\tnext(): this {\n\t\t// this._data = key.split(/[\\\\/]/).filter(s => !!s);\n\t\tthis._from = this._to;\n\t\tlet justSeps = true;\n\t\tfor (; this._to < this._valueLen; this._to++) {\n\t\t\tconst ch = this._value.charCodeAt(this._to);\n\t\t\tif (ch === CharCode.Slash || this._splitOnBackslash && ch === CharCode.Backslash) {\n\t\t\t\tif (justSeps) {\n\t\t\t\t\tthis._from++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tjustSeps = false;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tcmp(a: string): number {\n\t\treturn this._caseSensitive\n\t\t\t? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n\t\t\t: compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n\t}\n\n\tvalue(): string {\n\t\treturn this._value.substring(this._from, this._to);\n\t}\n}\n\nconst enum UriIteratorState {\n\tScheme = 1, Authority = 2, Path = 3, Query = 4, Fragment = 5\n}\n\nexport class UriIterator implements IKeyIterator<URI> {\n\n\tprivate _pathIterator!: PathIterator;\n\tprivate _value!: URI;\n\tprivate _states: UriIteratorState[] = [];\n\tprivate _stateIdx: number = 0;\n\n\tconstructor(\n\t\tprivate readonly _ignorePathCasing: (uri: URI) => boolean,\n\t\tprivate readonly _ignoreQueryAndFragment: (uri: URI) => boolean) { }\n\n\treset(key: URI): this {\n\t\tthis._value = key;\n\t\tthis._states = [];\n\t\tif (this._value.scheme) {\n\t\t\tthis._states.push(UriIteratorState.Scheme);\n\t\t}\n\t\tif (this._value.authority) {\n\t\t\tthis._states.push(UriIteratorState.Authority);\n\t\t}\n\t\tif (this._value.path) {\n\t\t\tthis._pathIterator = new PathIterator(false, !this._ignorePathCasing(key));\n\t\t\tthis._pathIterator.reset(key.path);\n\t\t\tif (this._pathIterator.value()) {\n\t\t\t\tthis._states.push(UriIteratorState.Path);\n\t\t\t}\n\t\t}\n\t\tif (!this._ignoreQueryAndFragment(key)) {\n\t\t\tif (this._value.query) {\n\t\t\t\tthis._states.push(UriIteratorState.Query);\n\t\t\t}\n\t\t\tif (this._value.fragment) {\n\t\t\t\tthis._states.push(UriIteratorState.Fragment);\n\t\t\t}\n\t\t}\n\t\tthis._stateIdx = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Path && this._pathIterator.hasNext()) {\n\t\t\tthis._pathIterator.next();\n\t\t} else {\n\t\t\tthis._stateIdx += 1;\n\t\t}\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn (this._states[this._stateIdx] === UriIteratorState.Path && this._pathIterator.hasNext())\n\t\t\t|| this._stateIdx < this._states.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Scheme) {\n\t\t\treturn compareIgnoreCase(a, this._value.scheme);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Authority) {\n\t\t\treturn compareIgnoreCase(a, this._value.authority);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Path) {\n\t\t\treturn this._pathIterator.cmp(a);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Query) {\n\t\t\treturn compare(a, this._value.query);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Fragment) {\n\t\t\treturn compare(a, this._value.fragment);\n\t\t}\n\t\tthrow new Error();\n\t}\n\n\tvalue(): string {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Scheme) {\n\t\t\treturn this._value.scheme;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Authority) {\n\t\t\treturn this._value.authority;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Path) {\n\t\t\treturn this._pathIterator.value();\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Query) {\n\t\t\treturn this._value.query;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Fragment) {\n\t\t\treturn this._value.fragment;\n\t\t}\n\t\tthrow new Error();\n\t}\n}\n\nclass TernarySearchTreeNode<K, V> {\n\theight: number = 1;\n\tsegment!: string;\n\tvalue: V | undefined;\n\tkey: K | undefined;\n\tleft: TernarySearchTreeNode<K, V> | undefined;\n\tmid: TernarySearchTreeNode<K, V> | undefined;\n\tright: TernarySearchTreeNode<K, V> | undefined;\n\n\tisEmpty(): boolean {\n\t\treturn !this.left && !this.mid && !this.right && !this.value;\n\t}\n\n\trotateLeft() {\n\t\tconst tmp = this.right!;\n\t\tthis.right = tmp.left;\n\t\ttmp.left = this;\n\t\tthis.updateHeight();\n\t\ttmp.updateHeight();\n\t\treturn tmp;\n\t}\n\n\trotateRight() {\n\t\tconst tmp = this.left!;\n\t\tthis.left = tmp.right;\n\t\ttmp.right = this;\n\t\tthis.updateHeight();\n\t\ttmp.updateHeight();\n\t\treturn tmp;\n\t}\n\n\tupdateHeight() {\n\t\tthis.height = 1 + Math.max(this.heightLeft, this.heightRight);\n\t}\n\n\tbalanceFactor() {\n\t\treturn this.heightRight - this.heightLeft;\n\t}\n\n\tget heightLeft() {\n\t\treturn this.left?.height ?? 0;\n\t}\n\n\tget heightRight() {\n\t\treturn this.right?.height ?? 0;\n\t}\n}\n\nconst enum Dir {\n\tLeft = -1,\n\tMid = 0,\n\tRight = 1,\n}\n\nexport class TernarySearchTree<K, V> {\n\n\tstatic forUris<E>(ignorePathCasing: (key: URI) => boolean = () => false, ignoreQueryAndFragment: (key: URI) => boolean = () => false): TernarySearchTree<URI, E> {\n\t\treturn new TernarySearchTree<URI, E>(new UriIterator(ignorePathCasing, ignoreQueryAndFragment));\n\t}\n\n\tstatic forPaths<E>(ignorePathCasing = false): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new PathIterator(undefined, !ignorePathCasing));\n\t}\n\n\tstatic forStrings<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new StringIterator());\n\t}\n\n\tstatic forConfigKeys<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new ConfigKeysIterator());\n\t}\n\n\tprivate _iter: IKeyIterator<K>;\n\tprivate _root: TernarySearchTreeNode<K, V> | undefined;\n\n\tconstructor(segments: IKeyIterator<K>) {\n\t\tthis._iter = segments;\n\t}\n\n\tclear(): void {\n\t\tthis._root = undefined;\n\t}\n\n\t/**\n\t * Fill the tree with the same value of the given keys\n\t */\n\tfill(element: V, keys: readonly K[]): void;\n\t/**\n\t * Fill the tree with given [key,value]-tuples\n\t */\n\tfill(values: readonly [K, V][]): void;\n\tfill(values: readonly [K, V][] | V, keys?: readonly K[]): void {\n\t\tif (keys) {\n\t\t\tconst arr = keys.slice(0);\n\t\t\tshuffle(arr);\n\t\t\tfor (const k of arr) {\n\t\t\t\tthis.set(k, (<V>values));\n\t\t\t}\n\t\t} else {\n\t\t\tconst arr = (<[K, V][]>values).slice(0);\n\t\t\tshuffle(arr);\n\t\t\tfor (const entry of arr) {\n\t\t\t\tthis.set(entry[0], entry[1]);\n\t\t\t}\n\t\t}\n\t}\n\n\tset(key: K, element: V): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node: TernarySearchTreeNode<K, V>;\n\n\t\tif (!this._root) {\n\t\t\tthis._root = new TernarySearchTreeNode<K, V>();\n\t\t\tthis._root.segment = iter.value();\n\t\t}\n\t\tconst stack: [Dir, TernarySearchTreeNode<K, V>][] = [];\n\n\t\t// find insert_node\n\t\tnode = this._root;\n\t\twhile (true) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tif (!node.left) {\n\t\t\t\t\tnode.left = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.left.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tstack.push([Dir.Left, node]);\n\t\t\t\tnode = node.left;\n\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tif (!node.right) {\n\t\t\t\t\tnode.right = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.right.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tstack.push([Dir.Right, node]);\n\t\t\t\tnode = node.right;\n\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\tnode.mid = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.mid.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tstack.push([Dir.Mid, node]);\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// set value\n\t\tconst oldElement = node.value;\n\t\tnode.value = element;\n\t\tnode.key = key;\n\n\t\t// balance\n\t\tfor (let i = stack.length - 1; i >= 0; i--) {\n\t\t\tconst node = stack[i][1];\n\n\t\t\tnode.updateHeight();\n\t\t\tconst bf = node.balanceFactor();\n\n\t\t\tif (bf < -1 || bf > 1) {\n\t\t\t\t// needs rotate\n\t\t\t\tconst d1 = stack[i][0];\n\t\t\t\tconst d2 = stack[i + 1][0];\n\n\t\t\t\tif (d1 === Dir.Right && d2 === Dir.Right) {\n\t\t\t\t\t//right, right -> rotate left\n\t\t\t\t\tstack[i][1] = node.rotateLeft();\n\n\t\t\t\t} else if (d1 === Dir.Left && d2 === Dir.Left) {\n\t\t\t\t\t// left, left -> rotate right\n\t\t\t\t\tstack[i][1] = node.rotateRight();\n\n\t\t\t\t} else if (d1 === Dir.Right && d2 === Dir.Left) {\n\t\t\t\t\t// right, left -> double rotate right, left\n\t\t\t\t\tnode.right = stack[i + 1][1] = stack[i + 1][1].rotateRight();\n\t\t\t\t\tstack[i][1] = node.rotateLeft();\n\n\t\t\t\t} else if (d1 === Dir.Left && d2 === Dir.Right) {\n\t\t\t\t\t// left, right -> double rotate left, right\n\t\t\t\t\tnode.left = stack[i + 1][1] = stack[i + 1][1].rotateLeft();\n\t\t\t\t\tstack[i][1] = node.rotateRight();\n\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t}\n\n\t\t\t\t// patch path to parent\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tswitch (stack[i - 1][0]) {\n\t\t\t\t\t\tcase Dir.Left:\n\t\t\t\t\t\t\tstack[i - 1][1].left = stack[i][1];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase Dir.Right:\n\t\t\t\t\t\t\tstack[i - 1][1].right = stack[i][1];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase Dir.Mid:\n\t\t\t\t\t\t\tstack[i - 1][1].mid = stack[i][1];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis._root = stack[0][1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn oldElement;\n\t}\n\n\tget(key: K): V | undefined {\n\t\treturn this._getNode(key)?.value;\n\t}\n\n\tprivate _getNode(key: K) {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\thas(key: K): boolean {\n\t\tconst node = this._getNode(key);\n\t\treturn !(node?.value === undefined && node?.mid === undefined);\n\t}\n\n\tdelete(key: K): void {\n\t\treturn this._delete(key, false);\n\t}\n\n\tdeleteSuperstr(key: K): void {\n\t\treturn this._delete(key, true);\n\t}\n\n\tprivate _delete(key: K, superStr: boolean): void {\n\t\tconst iter = this._iter.reset(key);\n\t\tconst stack: [Dir, TernarySearchTreeNode<K, V>][] = [];\n\t\tlet node = this._root;\n\n\t\t// find node\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tstack.push([Dir.Left, node]);\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tstack.push([Dir.Right, node]);\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tstack.push([Dir.Mid, node]);\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!node) {\n\t\t\t// node not found\n\t\t\treturn;\n\t\t}\n\n\t\tif (superStr) {\n\t\t\t// removing children, reset height\n\t\t\tnode.left = undefined;\n\t\t\tnode.mid = undefined;\n\t\t\tnode.right = undefined;\n\t\t\tnode.height = 1;\n\t\t} else {\n\t\t\t// removing element\n\t\t\tnode.key = undefined;\n\t\t\tnode.value = undefined;\n\t\t}\n\n\t\t// BST node removal\n\t\tif (!node.mid && !node.value) {\n\t\t\tif (node.left && node.right) {\n\t\t\t\t// full node\n\t\t\t\tconst min = this._min(node.right);\n\t\t\t\tconst { key, value, segment } = min;\n\t\t\t\tthis._delete(min.key!, false);\n\t\t\t\tnode.key = key;\n\t\t\t\tnode.value = value;\n\t\t\t\tnode.segment = segment;\n\n\t\t\t} else {\n\t\t\t\t// empty or half empty\n\t\t\t\tconst newChild = node.left ?? node.right;\n\t\t\t\tif (stack.length > 0) {\n\t\t\t\t\tconst [dir, parent] = stack[stack.length - 1];\n\t\t\t\t\tswitch (dir) {\n\t\t\t\t\t\tcase Dir.Left: parent.left = newChild; break;\n\t\t\t\t\t\tcase Dir.Mid: parent.mid = newChild; break;\n\t\t\t\t\t\tcase Dir.Right: parent.right = newChild; break;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis._root = newChild;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// AVL balance\n\t\tfor (let i = stack.length - 1; i >= 0; i--) {\n\t\t\tconst node = stack[i][1];\n\n\t\t\tnode.updateHeight();\n\t\t\tconst bf = node.balanceFactor();\n\t\t\tif (bf > 1) {\n\t\t\t\t// right heavy\n\t\t\t\tif (node.right!.balanceFactor() >= 0) {\n\t\t\t\t\t// right, right -> rotate left\n\t\t\t\t\tstack[i][1] = node.rotateLeft();\n\t\t\t\t} else {\n\t\t\t\t\t// right, left -> double rotate\n\t\t\t\t\tnode.right = node.right!.rotateRight();\n\t\t\t\t\tstack[i][1] = node.rotateLeft();\n\t\t\t\t}\n\n\t\t\t} else if (bf < -1) {\n\t\t\t\t// left heavy\n\t\t\t\tif (node.left!.balanceFactor() <= 0) {\n\t\t\t\t\t// left, left -> rotate right\n\t\t\t\t\tstack[i][1] = node.rotateRight();\n\t\t\t\t} else {\n\t\t\t\t\t// left, right -> double rotate\n\t\t\t\t\tnode.left = node.left!.rotateLeft();\n\t\t\t\t\tstack[i][1] = node.rotateRight();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// patch path to parent\n\t\t\tif (i > 0) {\n\t\t\t\tswitch (stack[i - 1][0]) {\n\t\t\t\t\tcase Dir.Left:\n\t\t\t\t\t\tstack[i - 1][1].left = stack[i][1];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase Dir.Right:\n\t\t\t\t\t\tstack[i - 1][1].right = stack[i][1];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase Dir.Mid:\n\t\t\t\t\t\tstack[i - 1][1].mid = stack[i][1];\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._root = stack[0][1];\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _min(node: TernarySearchTreeNode<K, V>): TernarySearchTreeNode<K, V> {\n\t\twhile (node.left) {\n\t\t\tnode = node.left;\n\t\t}\n\t\treturn node;\n\t}\n\n\tfindSubstr(key: K): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\tlet candidate: V | undefined = undefined;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tcandidate = node.value || candidate;\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node && node.value || candidate;\n\t}\n\n\tfindSuperstr(key: K): IterableIterator<[K, V]> | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// collect\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t} else {\n\t\t\t\t\treturn this._entries(node.mid);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tforEach(callback: (value: V, index: K) => any): void {\n\t\tfor (const [key, value] of this) {\n\t\t\tcallback(value, key);\n\t\t}\n\t}\n\n\t*[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\tyield* this._entries(this._root);\n\t}\n\n\tprivate _entries(node: TernarySearchTreeNode<K, V> | undefined): IterableIterator<[K, V]> {\n\t\tconst result: [K, V][] = [];\n\t\tthis._dfsEntries(node, result);\n\t\treturn result[Symbol.iterator]();\n\t}\n\n\tprivate _dfsEntries(node: TernarySearchTreeNode<K, V> | undefined, bucket: [K, V][]) {\n\t\t// DFS\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tif (node.left) {\n\t\t\tthis._dfsEntries(node.left, bucket);\n\t\t}\n\t\tif (node.value) {\n\t\t\tbucket.push([node.key!, node.value]);\n\t\t}\n\t\tif (node.mid) {\n\t\t\tthis._dfsEntries(node.mid, bucket);\n\t\t}\n\t\tif (node.right) {\n\t\t\tthis._dfsEntries(node.right, bucket);\n\t\t}\n\t}\n\n\t// for debug/testing\n\t_isBalanced(): boolean {\n\t\tconst nodeIsBalanced = (node: TernarySearchTreeNode<any, any> | undefined): boolean => {\n\t\t\tif (!node) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tconst bf = node.balanceFactor();\n\t\t\tif (bf < -1 || bf > 1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn nodeIsBalanced(node.left) && nodeIsBalanced(node.right);\n\t\t};\n\t\treturn nodeIsBalanced(this._root);\n\t}\n}\n\ninterface ResourceMapKeyFn {\n\t(resource: URI): string;\n}\n\nclass ResourceMapEntry<T> {\n\tconstructor(readonly uri: URI, readonly value: T) { }\n}\n\nexport class ResourceMap<T> implements Map<URI, T> {\n\n\tprivate static readonly defaultToKey = (resource: URI) => resource.toString();\n\n\treadonly [Symbol.toStringTag] = 'ResourceMap';\n\n\tprivate readonly map: Map<string, ResourceMapEntry<T>>;\n\tprivate readonly toKey: ResourceMapKeyFn;\n\n\t/**\n\t *\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(toKey?: ResourceMapKeyFn);\n\n\t/**\n\t *\n\t * @param other Another resource which this maps is created from\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(other?: ResourceMap<T>, toKey?: ResourceMapKeyFn);\n\n\tconstructor(mapOrKeyFn?: ResourceMap<T> | ResourceMapKeyFn, toKey?: ResourceMapKeyFn) {\n\t\tif (mapOrKeyFn instanceof ResourceMap) {\n\t\t\tthis.map = new Map(mapOrKeyFn.map);\n\t\t\tthis.toKey = toKey ?? ResourceMap.defaultToKey;\n\t\t} else {\n\t\t\tthis.map = new Map();\n\t\t\tthis.toKey = mapOrKeyFn ?? ResourceMap.defaultToKey;\n\t\t}\n\t}\n\n\tset(resource: URI, value: T): this {\n\t\tthis.map.set(this.toKey(resource), new ResourceMapEntry(resource, value));\n\t\treturn this;\n\t}\n\n\tget(resource: URI): T | undefined {\n\t\treturn this.map.get(this.toKey(resource))?.value;\n\t}\n\n\thas(resource: URI): boolean {\n\t\treturn this.map.has(this.toKey(resource));\n\t}\n\n\tget size(): number {\n\t\treturn this.map.size;\n\t}\n\n\tclear(): void {\n\t\tthis.map.clear();\n\t}\n\n\tdelete(resource: URI): boolean {\n\t\treturn this.map.delete(this.toKey(resource));\n\t}\n\n\tforEach(clb: (value: T, key: URI, map: Map<URI, T>) => void, thisArg?: any): void {\n\t\tif (typeof thisArg !== 'undefined') {\n\t\t\tclb = clb.bind(thisArg);\n\t\t}\n\t\tfor (const [_, entry] of this.map) {\n\t\t\tclb(entry.value, entry.uri, <any>this);\n\t\t}\n\t}\n\n\t*values(): IterableIterator<T> {\n\t\tfor (const entry of this.map.values()) {\n\t\t\tyield entry.value;\n\t\t}\n\t}\n\n\t*keys(): IterableIterator<URI> {\n\t\tfor (const entry of this.map.values()) {\n\t\t\tyield entry.uri;\n\t\t}\n\t}\n\n\t*entries(): IterableIterator<[URI, T]> {\n\t\tfor (const entry of this.map.values()) {\n\t\t\tyield [entry.uri, entry.value];\n\t\t}\n\t}\n\n\t*[Symbol.iterator](): IterableIterator<[URI, T]> {\n\t\tfor (const [, entry] of this.map) {\n\t\t\tyield [entry.uri, entry.value];\n\t\t}\n\t}\n}\n\nexport class ResourceSet implements Set<URI> {\n\n\treadonly [Symbol.toStringTag]: string = 'ResourceSet';\n\n\tprivate readonly _map: ResourceMap<URI>;\n\n\tconstructor(toKey?: ResourceMapKeyFn);\n\tconstructor(entries: readonly URI[], toKey?: ResourceMapKeyFn);\n\tconstructor(entriesOrKey?: readonly URI[] | ResourceMapKeyFn, toKey?: ResourceMapKeyFn) {\n\t\tif (!entriesOrKey || typeof entriesOrKey === 'function') {\n\t\t\tthis._map = new ResourceMap(entriesOrKey);\n\t\t} else {\n\t\t\tthis._map = new ResourceMap(toKey);\n\t\t\tentriesOrKey.forEach(this.add, this);\n\t\t}\n\t}\n\n\n\tget size(): number {\n\t\treturn this._map.size;\n\t}\n\n\tadd(value: URI): this {\n\t\tthis._map.set(value, value);\n\t\treturn this;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t}\n\n\tdelete(value: URI): boolean {\n\t\treturn this._map.delete(value);\n\t}\n\n\tforEach(callbackfn: (value: URI, value2: URI, set: Set<URI>) => void, thisArg?: any): void {\n\t\tthis._map.forEach((_value, key) => callbackfn.call(thisArg, key, key, this));\n\t}\n\n\thas(value: URI): boolean {\n\t\treturn this._map.has(value);\n\t}\n\n\tentries(): IterableIterator<[URI, URI]> {\n\t\treturn this._map.entries();\n\t}\n\n\tkeys(): IterableIterator<URI> {\n\t\treturn this._map.keys();\n\t}\n\n\tvalues(): IterableIterator<URI> {\n\t\treturn this._map.keys();\n\t}\n\n\t[Symbol.iterator](): IterableIterator<URI> {\n\t\treturn this.keys();\n\t}\n}\n\n\ninterface Item<K, V> {\n\tprevious: Item<K, V> | undefined;\n\tnext: Item<K, V> | undefined;\n\tkey: K;\n\tvalue: V;\n}\n\nexport const enum Touch {\n\tNone = 0,\n\tAsOld = 1,\n\tAsNew = 2\n}\n\nexport class LinkedMap<K, V> implements Map<K, V> {\n\n\treadonly [Symbol.toStringTag] = 'LinkedMap';\n\n\tprivate _map: Map<K, Item<K, V>>;\n\tprivate _head: Item<K, V> | undefined;\n\tprivate _tail: Item<K, V> | undefined;\n\tprivate _size: number;\n\n\tprivate _state: number;\n\n\tconstructor() {\n\t\tthis._map = new Map<K, Item<K, V>>();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t\tthis._state = 0;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t\tthis._state++;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !this._head && !this._tail;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tget first(): V | undefined {\n\t\treturn this._head?.value;\n\t}\n\n\tget last(): V | undefined {\n\t\treturn this._tail?.value;\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this._map.has(key);\n\t}\n\n\tget(key: K, touch: Touch = Touch.None): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (touch !== Touch.None) {\n\t\t\tthis.touch(item, touch);\n\t\t}\n\t\treturn item.value;\n\t}\n\n\tset(key: K, value: V, touch: Touch = Touch.None): this {\n\t\tlet item = this._map.get(key);\n\t\tif (item) {\n\t\t\titem.value = value;\n\t\t\tif (touch !== Touch.None) {\n\t\t\t\tthis.touch(item, touch);\n\t\t\t}\n\t\t} else {\n\t\t\titem = { key, value, next: undefined, previous: undefined };\n\t\t\tswitch (touch) {\n\t\t\t\tcase Touch.None:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsOld:\n\t\t\t\t\tthis.addItemFirst(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsNew:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._map.set(key, item);\n\t\t\tthis._size++;\n\t\t}\n\t\treturn this;\n\t}\n\n\tdelete(key: K): boolean {\n\t\treturn !!this.remove(key);\n\t}\n\n\tremove(key: K): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._map.delete(key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tshift(): V | undefined {\n\t\tif (!this._head && !this._tail) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tconst item = this._head;\n\t\tthis._map.delete(item.key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: LinkedMap<K, V>) => void, thisArg?: any): void {\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tif (thisArg) {\n\t\t\t\tcallbackfn.bind(thisArg)(current.value, current.key, this);\n\t\t\t} else {\n\t\t\t\tcallbackfn(current.value, current.key, this);\n\t\t\t}\n\t\t\tif (this._state !== state) {\n\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n\n\tkeys(): IterableIterator<K> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<K> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<K> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.key, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<V> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<V> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.value, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tentries(): IterableIterator<[K, V]> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<[K, V]> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<[K, V]> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result: IteratorResult<[K, V]> = { value: [current.key, current.value], done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\treturn this.entries();\n\t}\n\n\tprotected trimOld(newSize: number) {\n\t\tif (newSize >= this.size) {\n\t\t\treturn;\n\t\t}\n\t\tif (newSize === 0) {\n\t\t\tthis.clear();\n\t\t\treturn;\n\t\t}\n\t\tlet current = this._head;\n\t\tlet currentSize = this.size;\n\t\twhile (current && currentSize > newSize) {\n\t\t\tthis._map.delete(current.key);\n\t\t\tcurrent = current.next;\n\t\t\tcurrentSize--;\n\t\t}\n\t\tthis._head = current;\n\t\tthis._size = currentSize;\n\t\tif (current) {\n\t\t\tcurrent.previous = undefined;\n\t\t}\n\t\tthis._state++;\n\t}\n\n\tprivate addItemFirst(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._tail = item;\n\t\t} else if (!this._head) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t}\n\t\tthis._head = item;\n\t\tthis._state++;\n\t}\n\n\tprivate addItemLast(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._head = item;\n\t\t} else if (!this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t}\n\t\tthis._tail = item;\n\t\tthis._state++;\n\t}\n\n\tprivate removeItem(item: Item<K, V>): void {\n\t\tif (item === this._head && item === this._tail) {\n\t\t\tthis._head = undefined;\n\t\t\tthis._tail = undefined;\n\t\t}\n\t\telse if (item === this._head) {\n\t\t\t// This can only happen if size === 1 which is handled\n\t\t\t// by the case above.\n\t\t\tif (!item.next) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.next.previous = undefined;\n\t\t\tthis._head = item.next;\n\t\t}\n\t\telse if (item === this._tail) {\n\t\t\t// This can only happen if size === 1 which is handled\n\t\t\t// by the case above.\n\t\t\tif (!item.previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.previous.next = undefined;\n\t\t\tthis._tail = item.previous;\n\t\t}\n\t\telse {\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\t\t\tif (!next || !previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\tnext.previous = previous;\n\t\t\tprevious.next = next;\n\t\t}\n\t\titem.next = undefined;\n\t\titem.previous = undefined;\n\t\tthis._state++;\n\t}\n\n\tprivate touch(item: Item<K, V>, touch: Touch): void {\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tif ((touch !== Touch.AsOld && touch !== Touch.AsNew)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (touch === Touch.AsOld) {\n\t\t\tif (item === this._head) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item\n\t\t\tif (item === this._tail) {\n\t\t\t\t// previous must be defined since item was not head but is tail\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tprevious!.next = undefined;\n\t\t\t\tthis._tail = previous;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\n\t\t\t// Insert the node at head\n\t\t\titem.previous = undefined;\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t\tthis._head = item;\n\t\t\tthis._state++;\n\t\t} else if (touch === Touch.AsNew) {\n\t\t\tif (item === this._tail) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item.\n\t\t\tif (item === this._head) {\n\t\t\t\t// next must be defined since item was not tail but is head\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tnext!.previous = undefined;\n\t\t\t\tthis._head = next;\n\t\t\t} else {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\t\t\titem.next = undefined;\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t\tthis._tail = item;\n\t\t\tthis._state++;\n\t\t}\n\t}\n\n\ttoJSON(): [K, V][] {\n\t\tconst data: [K, V][] = [];\n\n\t\tthis.forEach((value, key) => {\n\t\t\tdata.push([key, value]);\n\t\t});\n\n\t\treturn data;\n\t}\n\n\tfromJSON(data: [K, V][]): void {\n\t\tthis.clear();\n\n\t\tfor (const [key, value] of data) {\n\t\t\tthis.set(key, value);\n\t\t}\n\t}\n}\n\nexport class LRUCache<K, V> extends LinkedMap<K, V> {\n\n\tprivate _limit: number;\n\tprivate _ratio: number;\n\n\tconstructor(limit: number, ratio: number = 1) {\n\t\tsuper();\n\t\tthis._limit = limit;\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t}\n\n\tget limit(): number {\n\t\treturn this._limit;\n\t}\n\n\tset limit(limit: number) {\n\t\tthis._limit = limit;\n\t\tthis.checkTrim();\n\t}\n\n\tget ratio(): number {\n\t\treturn this._ratio;\n\t}\n\n\tset ratio(ratio: number) {\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t\tthis.checkTrim();\n\t}\n\n\toverride get(key: K, touch: Touch = Touch.AsNew): V | undefined {\n\t\treturn super.get(key, touch);\n\t}\n\n\tpeek(key: K): V | undefined {\n\t\treturn super.get(key, Touch.None);\n\t}\n\n\toverride set(key: K, value: V): this {\n\t\tsuper.set(key, value, Touch.AsNew);\n\t\tthis.checkTrim();\n\t\treturn this;\n\t}\n\n\tprivate checkTrim() {\n\t\tif (this.size > this._limit) {\n\t\t\tthis.trimOld(Math.round(this._limit * this._ratio));\n\t\t}\n\t}\n}\n\n/**\n * Wraps the map in type that only implements readonly properties. Useful\n * in the extension host to prevent the consumer from making any mutations.\n */\nexport class ReadonlyMapView<K, V> implements ReadonlyMap<K, V>{\n\treadonly #source: ReadonlyMap<K, V>;\n\n\tpublic get size() {\n\t\treturn this.#source.size;\n\t}\n\n\tconstructor(source: ReadonlyMap<K, V>) {\n\t\tthis.#source = source;\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: ReadonlyMap<K, V>) => void, thisArg?: any): void {\n\t\tthis.#source.forEach(callbackfn, thisArg);\n\t}\n\n\tget(key: K): V | undefined {\n\t\treturn this.#source.get(key);\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this.#source.has(key);\n\t}\n\n\tentries(): IterableIterator<[K, V]> {\n\t\treturn this.#source.entries();\n\t}\n\n\tkeys(): IterableIterator<K> {\n\t\treturn this.#source.keys();\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\treturn this.#source.values();\n\t}\n\n\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\treturn this.#source.entries();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { LRUCache } from 'vs/base/common/map';\nimport * as strings from 'vs/base/common/strings';\n\nexport interface IFilter {\n\t// Returns null if word doesn't match.\n\t(word: string, wordToMatchAgainst: string): IMatch[] | null;\n}\n\nexport interface IMatch {\n\tstart: number;\n\tend: number;\n}\n\n// Combined filters\n\n/**\n * @returns A filter which combines the provided set\n * of filters with an or. The *first* filters that\n * matches defined the return value of the returned\n * filter.\n */\nexport function or(...filter: IFilter[]): IFilter {\n\treturn function (word: string, wordToMatchAgainst: string): IMatch[] | null {\n\t\tfor (let i = 0, len = filter.length; i < len; i++) {\n\t\t\tconst match = filter[i](word, wordToMatchAgainst);\n\t\t\tif (match) {\n\t\t\t\treturn match;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n}\n\n// Prefix\n\nexport const matchesStrictPrefix: IFilter = _matchesPrefix.bind(undefined, false);\nexport const matchesPrefix: IFilter = _matchesPrefix.bind(undefined, true);\n\nfunction _matchesPrefix(ignoreCase: boolean, word: string, wordToMatchAgainst: string): IMatch[] | null {\n\tif (!wordToMatchAgainst || wordToMatchAgainst.length < word.length) {\n\t\treturn null;\n\t}\n\n\tlet matches: boolean;\n\tif (ignoreCase) {\n\t\tmatches = strings.startsWithIgnoreCase(wordToMatchAgainst, word);\n\t} else {\n\t\tmatches = wordToMatchAgainst.indexOf(word) === 0;\n\t}\n\n\tif (!matches) {\n\t\treturn null;\n\t}\n\n\treturn word.length > 0 ? [{ start: 0, end: word.length }] : [];\n}\n\n// Contiguous Substring\n\nexport function matchesContiguousSubString(word: string, wordToMatchAgainst: string): IMatch[] | null {\n\tconst index = wordToMatchAgainst.toLowerCase().indexOf(word.toLowerCase());\n\tif (index === -1) {\n\t\treturn null;\n\t}\n\n\treturn [{ start: index, end: index + word.length }];\n}\n\n// Substring\n\nexport function matchesSubString(word: string, wordToMatchAgainst: string): IMatch[] | null {\n\treturn _matchesSubString(word.toLowerCase(), wordToMatchAgainst.toLowerCase(), 0, 0);\n}\n\nfunction _matchesSubString(word: string, wordToMatchAgainst: string, i: number, j: number): IMatch[] | null {\n\tif (i === word.length) {\n\t\treturn [];\n\t} else if (j === wordToMatchAgainst.length) {\n\t\treturn null;\n\t} else {\n\t\tif (word[i] === wordToMatchAgainst[j]) {\n\t\t\tlet result: IMatch[] | null = null;\n\t\t\tif (result = _matchesSubString(word, wordToMatchAgainst, i + 1, j + 1)) {\n\t\t\t\treturn join({ start: j, end: j + 1 }, result);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\treturn _matchesSubString(word, wordToMatchAgainst, i, j + 1);\n\t}\n}\n\n// CamelCase\n\nfunction isLower(code: number): boolean {\n\treturn CharCode.a <= code && code <= CharCode.z;\n}\n\nexport function isUpper(code: number): boolean {\n\treturn CharCode.A <= code && code <= CharCode.Z;\n}\n\nfunction isNumber(code: number): boolean {\n\treturn CharCode.Digit0 <= code && code <= CharCode.Digit9;\n}\n\nfunction isWhitespace(code: number): boolean {\n\treturn (\n\t\tcode === CharCode.Space\n\t\t|| code === CharCode.Tab\n\t\t|| code === CharCode.LineFeed\n\t\t|| code === CharCode.CarriageReturn\n\t);\n}\n\nconst wordSeparators = new Set<number>();\n// These are chosen as natural word separators based on writen text.\n// It is a subset of the word separators used by the monaco editor.\n'()[]{}<>`\\'\"-/;:,.?!'\n\t.split('')\n\t.forEach(s => wordSeparators.add(s.charCodeAt(0)));\n\nfunction isWordSeparator(code: number): boolean {\n\treturn isWhitespace(code) || wordSeparators.has(code);\n}\n\nfunction charactersMatch(codeA: number, codeB: number): boolean {\n\treturn (codeA === codeB) || (isWordSeparator(codeA) && isWordSeparator(codeB));\n}\n\nfunction isAlphanumeric(code: number): boolean {\n\treturn isLower(code) || isUpper(code) || isNumber(code);\n}\n\nfunction join(head: IMatch, tail: IMatch[]): IMatch[] {\n\tif (tail.length === 0) {\n\t\ttail = [head];\n\t} else if (head.end === tail[0].start) {\n\t\ttail[0].start = head.start;\n\t} else {\n\t\ttail.unshift(head);\n\t}\n\treturn tail;\n}\n\nfunction nextAnchor(camelCaseWord: string, start: number): number {\n\tfor (let i = start; i < camelCaseWord.length; i++) {\n\t\tconst c = camelCaseWord.charCodeAt(i);\n\t\tif (isUpper(c) || isNumber(c) || (i > 0 && !isAlphanumeric(camelCaseWord.charCodeAt(i - 1)))) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn camelCaseWord.length;\n}\n\nfunction _matchesCamelCase(word: string, camelCaseWord: string, i: number, j: number): IMatch[] | null {\n\tif (i === word.length) {\n\t\treturn [];\n\t} else if (j === camelCaseWord.length) {\n\t\treturn null;\n\t} else if (word[i] !== camelCaseWord[j].toLowerCase()) {\n\t\treturn null;\n\t} else {\n\t\tlet result: IMatch[] | null = null;\n\t\tlet nextUpperIndex = j + 1;\n\t\tresult = _matchesCamelCase(word, camelCaseWord, i + 1, j + 1);\n\t\twhile (!result && (nextUpperIndex = nextAnchor(camelCaseWord, nextUpperIndex)) < camelCaseWord.length) {\n\t\t\tresult = _matchesCamelCase(word, camelCaseWord, i + 1, nextUpperIndex);\n\t\t\tnextUpperIndex++;\n\t\t}\n\t\treturn result === null ? null : join({ start: j, end: j + 1 }, result);\n\t}\n}\n\ninterface ICamelCaseAnalysis {\n\tupperPercent: number;\n\tlowerPercent: number;\n\talphaPercent: number;\n\tnumericPercent: number;\n}\n\n// Heuristic to avoid computing camel case matcher for words that don't\n// look like camelCaseWords.\nfunction analyzeCamelCaseWord(word: string): ICamelCaseAnalysis {\n\tlet upper = 0, lower = 0, alpha = 0, numeric = 0, code = 0;\n\n\tfor (let i = 0; i < word.length; i++) {\n\t\tcode = word.charCodeAt(i);\n\n\t\tif (isUpper(code)) { upper++; }\n\t\tif (isLower(code)) { lower++; }\n\t\tif (isAlphanumeric(code)) { alpha++; }\n\t\tif (isNumber(code)) { numeric++; }\n\t}\n\n\tconst upperPercent = upper / word.length;\n\tconst lowerPercent = lower / word.length;\n\tconst alphaPercent = alpha / word.length;\n\tconst numericPercent = numeric / word.length;\n\n\treturn { upperPercent, lowerPercent, alphaPercent, numericPercent };\n}\n\nfunction isUpperCaseWord(analysis: ICamelCaseAnalysis): boolean {\n\tconst { upperPercent, lowerPercent } = analysis;\n\treturn lowerPercent === 0 && upperPercent > 0.6;\n}\n\nfunction isCamelCaseWord(analysis: ICamelCaseAnalysis): boolean {\n\tconst { upperPercent, lowerPercent, alphaPercent, numericPercent } = analysis;\n\treturn lowerPercent > 0.2 && upperPercent < 0.8 && alphaPercent > 0.6 && numericPercent < 0.2;\n}\n\n// Heuristic to avoid computing camel case matcher for words that don't\n// look like camel case patterns.\nfunction isCamelCasePattern(word: string): boolean {\n\tlet upper = 0, lower = 0, code = 0, whitespace = 0;\n\n\tfor (let i = 0; i < word.length; i++) {\n\t\tcode = word.charCodeAt(i);\n\n\t\tif (isUpper(code)) { upper++; }\n\t\tif (isLower(code)) { lower++; }\n\t\tif (isWhitespace(code)) { whitespace++; }\n\t}\n\n\tif ((upper === 0 || lower === 0) && whitespace === 0) {\n\t\treturn word.length <= 30;\n\t} else {\n\t\treturn upper <= 5;\n\t}\n}\n\nexport function matchesCamelCase(word: string, camelCaseWord: string): IMatch[] | null {\n\tif (!camelCaseWord) {\n\t\treturn null;\n\t}\n\n\tcamelCaseWord = camelCaseWord.trim();\n\n\tif (camelCaseWord.length === 0) {\n\t\treturn null;\n\t}\n\n\tif (!isCamelCasePattern(word)) {\n\t\treturn null;\n\t}\n\n\tif (camelCaseWord.length > 60) {\n\t\treturn null;\n\t}\n\n\tconst analysis = analyzeCamelCaseWord(camelCaseWord);\n\n\tif (!isCamelCaseWord(analysis)) {\n\t\tif (!isUpperCaseWord(analysis)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tcamelCaseWord = camelCaseWord.toLowerCase();\n\t}\n\n\tlet result: IMatch[] | null = null;\n\tlet i = 0;\n\n\tword = word.toLowerCase();\n\twhile (i < camelCaseWord.length && (result = _matchesCamelCase(word, camelCaseWord, 0, i)) === null) {\n\t\ti = nextAnchor(camelCaseWord, i + 1);\n\t}\n\n\treturn result;\n}\n\n// Matches beginning of words supporting non-ASCII languages\n// If `contiguous` is true then matches word with beginnings of the words in the target. E.g. \"pul\" will match \"Git: Pull\"\n// Otherwise also matches sub string of the word with beginnings of the words in the target. E.g. \"gp\" or \"g p\" will match \"Git: Pull\"\n// Useful in cases where the target is words (e.g. command labels)\n\nexport function matchesWords(word: string, target: string, contiguous: boolean = false): IMatch[] | null {\n\tif (!target || target.length === 0) {\n\t\treturn null;\n\t}\n\n\tlet result: IMatch[] | null = null;\n\tlet i = 0;\n\n\tword = word.toLowerCase();\n\ttarget = target.toLowerCase();\n\twhile (i < target.length && (result = _matchesWords(word, target, 0, i, contiguous)) === null) {\n\t\ti = nextWord(target, i + 1);\n\t}\n\n\treturn result;\n}\n\nfunction _matchesWords(word: string, target: string, i: number, j: number, contiguous: boolean): IMatch[] | null {\n\tif (i === word.length) {\n\t\treturn [];\n\t} else if (j === target.length) {\n\t\treturn null;\n\t} else if (!charactersMatch(word.charCodeAt(i), target.charCodeAt(j))) {\n\t\treturn null;\n\t} else {\n\t\tlet result: IMatch[] | null = null;\n\t\tlet nextWordIndex = j + 1;\n\t\tresult = _matchesWords(word, target, i + 1, j + 1, contiguous);\n\t\tif (!contiguous) {\n\t\t\twhile (!result && (nextWordIndex = nextWord(target, nextWordIndex)) < target.length) {\n\t\t\t\tresult = _matchesWords(word, target, i + 1, nextWordIndex, contiguous);\n\t\t\t\tnextWordIndex++;\n\t\t\t}\n\t\t}\n\t\treturn result === null ? null : join({ start: j, end: j + 1 }, result);\n\t}\n}\n\nfunction nextWord(word: string, start: number): number {\n\tfor (let i = start; i < word.length; i++) {\n\t\tif (isWordSeparator(word.charCodeAt(i)) ||\n\t\t\t(i > 0 && isWordSeparator(word.charCodeAt(i - 1)))) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn word.length;\n}\n\n// Fuzzy\n\nconst fuzzyContiguousFilter = or(matchesPrefix, matchesCamelCase, matchesContiguousSubString);\nconst fuzzySeparateFilter = or(matchesPrefix, matchesCamelCase, matchesSubString);\nconst fuzzyRegExpCache = new LRUCache<string, RegExp>(10000); // bounded to 10000 elements\n\nexport function matchesFuzzy(word: string, wordToMatchAgainst: string, enableSeparateSubstringMatching = false): IMatch[] | null {\n\tif (typeof word !== 'string' || typeof wordToMatchAgainst !== 'string') {\n\t\treturn null; // return early for invalid input\n\t}\n\n\t// Form RegExp for wildcard matches\n\tlet regexp = fuzzyRegExpCache.get(word);\n\tif (!regexp) {\n\t\tregexp = new RegExp(strings.convertSimple2RegExpPattern(word), 'i');\n\t\tfuzzyRegExpCache.set(word, regexp);\n\t}\n\n\t// RegExp Filter\n\tconst match = regexp.exec(wordToMatchAgainst);\n\tif (match) {\n\t\treturn [{ start: match.index, end: match.index + match[0].length }];\n\t}\n\n\t// Default Filter\n\treturn enableSeparateSubstringMatching ? fuzzySeparateFilter(word, wordToMatchAgainst) : fuzzyContiguousFilter(word, wordToMatchAgainst);\n}\n\n/**\n * Match pattern against word in a fuzzy way. As in IntelliSense and faster and more\n * powerful than `matchesFuzzy`\n */\nexport function matchesFuzzy2(pattern: string, word: string): IMatch[] | null {\n\tconst score = fuzzyScore(pattern, pattern.toLowerCase(), 0, word, word.toLowerCase(), 0, { firstMatchCanBeWeak: true, boostFullMatch: true });\n\treturn score ? createMatches(score) : null;\n}\n\nexport function anyScore(pattern: string, lowPattern: string, patternPos: number, word: string, lowWord: string, wordPos: number): FuzzyScore {\n\tconst max = Math.min(13, pattern.length);\n\tfor (; patternPos < max; patternPos++) {\n\t\tconst result = fuzzyScore(pattern, lowPattern, patternPos, word, lowWord, wordPos, { firstMatchCanBeWeak: false, boostFullMatch: true });\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t}\n\treturn [0, wordPos];\n}\n\n//#region --- fuzzyScore ---\n\nexport function createMatches(score: undefined | FuzzyScore): IMatch[] {\n\tif (typeof score === 'undefined') {\n\t\treturn [];\n\t}\n\tconst res: IMatch[] = [];\n\tconst wordPos = score[1];\n\tfor (let i = score.length - 1; i > 1; i--) {\n\t\tconst pos = score[i] + wordPos;\n\t\tconst last = res[res.length - 1];\n\t\tif (last && last.end === pos) {\n\t\t\tlast.end = pos + 1;\n\t\t} else {\n\t\t\tres.push({ start: pos, end: pos + 1 });\n\t\t}\n\t}\n\treturn res;\n}\n\nconst _maxLen = 128;\n\nfunction initTable() {\n\tconst table: number[][] = [];\n\tconst row: number[] = [];\n\tfor (let i = 0; i <= _maxLen; i++) {\n\t\trow[i] = 0;\n\t}\n\tfor (let i = 0; i <= _maxLen; i++) {\n\t\ttable.push(row.slice(0));\n\t}\n\treturn table;\n}\n\nfunction initArr(maxLen: number) {\n\tconst row: number[] = [];\n\tfor (let i = 0; i <= maxLen; i++) {\n\t\trow[i] = 0;\n\t}\n\treturn row;\n}\n\nconst _minWordMatchPos = initArr(2 * _maxLen); // min word position for a certain pattern position\nconst _maxWordMatchPos = initArr(2 * _maxLen); // max word position for a certain pattern position\nconst _diag = initTable(); // the length of a contiguous diagonal match\nconst _table = initTable();\nconst _arrows = <Arrow[][]>initTable();\nconst _debug = false;\n\nfunction printTable(table: number[][], pattern: string, patternLen: number, word: string, wordLen: number): string {\n\tfunction pad(s: string, n: number, pad = ' ') {\n\t\twhile (s.length < n) {\n\t\t\ts = pad + s;\n\t\t}\n\t\treturn s;\n\t}\n\tlet ret = ` |   |${word.split('').map(c => pad(c, 3)).join('|')}\\n`;\n\n\tfor (let i = 0; i <= patternLen; i++) {\n\t\tif (i === 0) {\n\t\t\tret += ' |';\n\t\t} else {\n\t\t\tret += `${pattern[i - 1]}|`;\n\t\t}\n\t\tret += table[i].slice(0, wordLen + 1).map(n => pad(n.toString(), 3)).join('|') + '\\n';\n\t}\n\treturn ret;\n}\n\nfunction printTables(pattern: string, patternStart: number, word: string, wordStart: number): void {\n\tpattern = pattern.substr(patternStart);\n\tword = word.substr(wordStart);\n\tconsole.log(printTable(_table, pattern, pattern.length, word, word.length));\n\tconsole.log(printTable(_arrows, pattern, pattern.length, word, word.length));\n\tconsole.log(printTable(_diag, pattern, pattern.length, word, word.length));\n}\n\nfunction isSeparatorAtPos(value: string, index: number): boolean {\n\tif (index < 0 || index >= value.length) {\n\t\treturn false;\n\t}\n\tconst code = value.codePointAt(index);\n\tswitch (code) {\n\t\tcase CharCode.Underline:\n\t\tcase CharCode.Dash:\n\t\tcase CharCode.Period:\n\t\tcase CharCode.Space:\n\t\tcase CharCode.Slash:\n\t\tcase CharCode.Backslash:\n\t\tcase CharCode.SingleQuote:\n\t\tcase CharCode.DoubleQuote:\n\t\tcase CharCode.Colon:\n\t\tcase CharCode.DollarSign:\n\t\tcase CharCode.LessThan:\n\t\tcase CharCode.GreaterThan:\n\t\tcase CharCode.OpenParen:\n\t\tcase CharCode.CloseParen:\n\t\tcase CharCode.OpenSquareBracket:\n\t\tcase CharCode.CloseSquareBracket:\n\t\tcase CharCode.OpenCurlyBrace:\n\t\tcase CharCode.CloseCurlyBrace:\n\t\t\treturn true;\n\t\tcase undefined:\n\t\t\treturn false;\n\t\tdefault:\n\t\t\tif (strings.isEmojiImprecise(code)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t}\n}\n\nfunction isWhitespaceAtPos(value: string, index: number): boolean {\n\tif (index < 0 || index >= value.length) {\n\t\treturn false;\n\t}\n\tconst code = value.charCodeAt(index);\n\tswitch (code) {\n\t\tcase CharCode.Space:\n\t\tcase CharCode.Tab:\n\t\t\treturn true;\n\t\tdefault:\n\t\t\treturn false;\n\t}\n}\n\nfunction isUpperCaseAtPos(pos: number, word: string, wordLow: string): boolean {\n\treturn word[pos] !== wordLow[pos];\n}\n\nexport function isPatternInWord(patternLow: string, patternPos: number, patternLen: number, wordLow: string, wordPos: number, wordLen: number, fillMinWordPosArr = false): boolean {\n\twhile (patternPos < patternLen && wordPos < wordLen) {\n\t\tif (patternLow[patternPos] === wordLow[wordPos]) {\n\t\t\tif (fillMinWordPosArr) {\n\t\t\t\t// Remember the min word position for each pattern position\n\t\t\t\t_minWordMatchPos[patternPos] = wordPos;\n\t\t\t}\n\t\t\tpatternPos += 1;\n\t\t}\n\t\twordPos += 1;\n\t}\n\treturn patternPos === patternLen; // pattern must be exhausted\n}\n\nconst enum Arrow { Diag = 1, Left = 2, LeftLeft = 3 }\n\n/**\n * An array representing a fuzzy match.\n *\n * 0. the score\n * 1. the offset at which matching started\n * 2. `<match_pos_N>`\n * 3. `<match_pos_1>`\n * 4. `<match_pos_0>` etc\n */\nexport type FuzzyScore = [score: number, wordStart: number, ...matches: number[]];\n\nexport namespace FuzzyScore {\n\t/**\n\t * No matches and value `-100`\n\t */\n\texport const Default: FuzzyScore = ([-100, 0]);\n\n\texport function isDefault(score?: FuzzyScore): score is [-100, 0] {\n\t\treturn !score || (score.length === 2 && score[0] === -100 && score[1] === 0);\n\t}\n}\n\nexport abstract class FuzzyScoreOptions {\n\n\tstatic default = { boostFullMatch: true, firstMatchCanBeWeak: false };\n\n\tconstructor(\n\t\treadonly firstMatchCanBeWeak: boolean,\n\t\treadonly boostFullMatch: boolean,\n\t) { }\n}\n\nexport interface FuzzyScorer {\n\t(pattern: string, lowPattern: string, patternPos: number, word: string, lowWord: string, wordPos: number, options?: FuzzyScoreOptions): FuzzyScore | undefined;\n}\n\nexport function fuzzyScore(pattern: string, patternLow: string, patternStart: number, word: string, wordLow: string, wordStart: number, options: FuzzyScoreOptions = FuzzyScoreOptions.default): FuzzyScore | undefined {\n\n\tconst patternLen = pattern.length > _maxLen ? _maxLen : pattern.length;\n\tconst wordLen = word.length > _maxLen ? _maxLen : word.length;\n\n\tif (patternStart >= patternLen || wordStart >= wordLen || (patternLen - patternStart) > (wordLen - wordStart)) {\n\t\treturn undefined;\n\t}\n\n\t// Run a simple check if the characters of pattern occur\n\t// (in order) at all in word. If that isn't the case we\n\t// stop because no match will be possible\n\tif (!isPatternInWord(patternLow, patternStart, patternLen, wordLow, wordStart, wordLen, true)) {\n\t\treturn undefined;\n\t}\n\n\t// Find the max matching word position for each pattern position\n\t// NOTE: the min matching word position was filled in above, in the `isPatternInWord` call\n\t_fillInMaxWordMatchPos(patternLen, wordLen, patternStart, wordStart, patternLow, wordLow);\n\n\tlet row: number = 1;\n\tlet column: number = 1;\n\tlet patternPos = patternStart;\n\tlet wordPos = wordStart;\n\n\tconst hasStrongFirstMatch = [false];\n\n\t// There will be a match, fill in tables\n\tfor (row = 1, patternPos = patternStart; patternPos < patternLen; row++, patternPos++) {\n\n\t\t// Reduce search space to possible matching word positions and to possible access from next row\n\t\tconst minWordMatchPos = _minWordMatchPos[patternPos];\n\t\tconst maxWordMatchPos = _maxWordMatchPos[patternPos];\n\t\tconst nextMaxWordMatchPos = (patternPos + 1 < patternLen ? _maxWordMatchPos[patternPos + 1] : wordLen);\n\n\t\tfor (column = minWordMatchPos - wordStart + 1, wordPos = minWordMatchPos; wordPos < nextMaxWordMatchPos; column++, wordPos++) {\n\n\t\t\tlet score = Number.MIN_SAFE_INTEGER;\n\t\t\tlet canComeDiag = false;\n\n\t\t\tif (wordPos <= maxWordMatchPos) {\n\t\t\t\tscore = _doScore(\n\t\t\t\t\tpattern, patternLow, patternPos, patternStart,\n\t\t\t\t\tword, wordLow, wordPos, wordLen, wordStart,\n\t\t\t\t\t_diag[row - 1][column - 1] === 0,\n\t\t\t\t\thasStrongFirstMatch\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tlet diagScore = 0;\n\t\t\tif (score !== Number.MAX_SAFE_INTEGER) {\n\t\t\t\tcanComeDiag = true;\n\t\t\t\tdiagScore = score + _table[row - 1][column - 1];\n\t\t\t}\n\n\t\t\tconst canComeLeft = wordPos > minWordMatchPos;\n\t\t\tconst leftScore = canComeLeft ? _table[row][column - 1] + (_diag[row][column - 1] > 0 ? -5 : 0) : 0; // penalty for a gap start\n\n\t\t\tconst canComeLeftLeft = wordPos > minWordMatchPos + 1 && _diag[row][column - 1] > 0;\n\t\t\tconst leftLeftScore = canComeLeftLeft ? _table[row][column - 2] + (_diag[row][column - 2] > 0 ? -5 : 0) : 0; // penalty for a gap start\n\n\t\t\tif (canComeLeftLeft && (!canComeLeft || leftLeftScore >= leftScore) && (!canComeDiag || leftLeftScore >= diagScore)) {\n\t\t\t\t// always prefer choosing left left to jump over a diagonal because that means a match is earlier in the word\n\t\t\t\t_table[row][column] = leftLeftScore;\n\t\t\t\t_arrows[row][column] = Arrow.LeftLeft;\n\t\t\t\t_diag[row][column] = 0;\n\t\t\t} else if (canComeLeft && (!canComeDiag || leftScore >= diagScore)) {\n\t\t\t\t// always prefer choosing left since that means a match is earlier in the word\n\t\t\t\t_table[row][column] = leftScore;\n\t\t\t\t_arrows[row][column] = Arrow.Left;\n\t\t\t\t_diag[row][column] = 0;\n\t\t\t} else if (canComeDiag) {\n\t\t\t\t_table[row][column] = diagScore;\n\t\t\t\t_arrows[row][column] = Arrow.Diag;\n\t\t\t\t_diag[row][column] = _diag[row - 1][column - 1] + 1;\n\t\t\t} else {\n\t\t\t\tthrow new Error(`not possible`);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (_debug) {\n\t\tprintTables(pattern, patternStart, word, wordStart);\n\t}\n\n\tif (!hasStrongFirstMatch[0] && !options.firstMatchCanBeWeak) {\n\t\treturn undefined;\n\t}\n\n\trow--;\n\tcolumn--;\n\n\tconst result: FuzzyScore = [_table[row][column], wordStart];\n\n\tlet backwardsDiagLength = 0;\n\tlet maxMatchColumn = 0;\n\n\twhile (row >= 1) {\n\t\t// Find the column where we go diagonally up\n\t\tlet diagColumn = column;\n\t\tdo {\n\t\t\tconst arrow = _arrows[row][diagColumn];\n\t\t\tif (arrow === Arrow.LeftLeft) {\n\t\t\t\tdiagColumn = diagColumn - 2;\n\t\t\t} else if (arrow === Arrow.Left) {\n\t\t\t\tdiagColumn = diagColumn - 1;\n\t\t\t} else {\n\t\t\t\t// found the diagonal\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while (diagColumn >= 1);\n\n\t\t// Overturn the \"forwards\" decision if keeping the \"backwards\" diagonal would give a better match\n\t\tif (\n\t\t\tbackwardsDiagLength > 1 // only if we would have a contiguous match of 3 characters\n\t\t\t&& patternLow[patternStart + row - 1] === wordLow[wordStart + column - 1] // only if we can do a contiguous match diagonally\n\t\t\t&& !isUpperCaseAtPos(diagColumn + wordStart - 1, word, wordLow) // only if the forwards chose diagonal is not an uppercase\n\t\t\t&& backwardsDiagLength + 1 > _diag[row][diagColumn] // only if our contiguous match would be longer than the \"forwards\" contiguous match\n\t\t) {\n\t\t\tdiagColumn = column;\n\t\t}\n\n\t\tif (diagColumn === column) {\n\t\t\t// this is a contiguous match\n\t\t\tbackwardsDiagLength++;\n\t\t} else {\n\t\t\tbackwardsDiagLength = 1;\n\t\t}\n\n\t\tif (!maxMatchColumn) {\n\t\t\t// remember the last matched column\n\t\t\tmaxMatchColumn = diagColumn;\n\t\t}\n\n\t\trow--;\n\t\tcolumn = diagColumn - 1;\n\t\tresult.push(column);\n\t}\n\n\tif (wordLen === patternLen && options.boostFullMatch) {\n\t\t// the word matches the pattern with all characters!\n\t\t// giving the score a total match boost (to come up ahead other words)\n\t\tresult[0] += 2;\n\t}\n\n\t// Add 1 penalty for each skipped character in the word\n\tconst skippedCharsCount = maxMatchColumn - patternLen;\n\tresult[0] -= skippedCharsCount;\n\n\treturn result;\n}\n\nfunction _fillInMaxWordMatchPos(patternLen: number, wordLen: number, patternStart: number, wordStart: number, patternLow: string, wordLow: string) {\n\tlet patternPos = patternLen - 1;\n\tlet wordPos = wordLen - 1;\n\twhile (patternPos >= patternStart && wordPos >= wordStart) {\n\t\tif (patternLow[patternPos] === wordLow[wordPos]) {\n\t\t\t_maxWordMatchPos[patternPos] = wordPos;\n\t\t\tpatternPos--;\n\t\t}\n\t\twordPos--;\n\t}\n}\n\nfunction _doScore(\n\tpattern: string, patternLow: string, patternPos: number, patternStart: number,\n\tword: string, wordLow: string, wordPos: number, wordLen: number, wordStart: number,\n\tnewMatchStart: boolean,\n\toutFirstMatchStrong: boolean[],\n): number {\n\tif (patternLow[patternPos] !== wordLow[wordPos]) {\n\t\treturn Number.MIN_SAFE_INTEGER;\n\t}\n\n\tlet score = 1;\n\tlet isGapLocation = false;\n\tif (wordPos === (patternPos - patternStart)) {\n\t\t// common prefix: `foobar <-> foobaz`\n\t\t//                            ^^^^^\n\t\tscore = pattern[patternPos] === word[wordPos] ? 7 : 5;\n\n\t} else if (isUpperCaseAtPos(wordPos, word, wordLow) && (wordPos === 0 || !isUpperCaseAtPos(wordPos - 1, word, wordLow))) {\n\t\t// hitting upper-case: `foo <-> forOthers`\n\t\t//                              ^^ ^\n\t\tscore = pattern[patternPos] === word[wordPos] ? 7 : 5;\n\t\tisGapLocation = true;\n\n\t} else if (isSeparatorAtPos(wordLow, wordPos) && (wordPos === 0 || !isSeparatorAtPos(wordLow, wordPos - 1))) {\n\t\t// hitting a separator: `. <-> foo.bar`\n\t\t//                                ^\n\t\tscore = 5;\n\n\t} else if (isSeparatorAtPos(wordLow, wordPos - 1) || isWhitespaceAtPos(wordLow, wordPos - 1)) {\n\t\t// post separator: `foo <-> bar_foo`\n\t\t//                              ^^^\n\t\tscore = 5;\n\t\tisGapLocation = true;\n\t}\n\n\tif (score > 1 && patternPos === patternStart) {\n\t\toutFirstMatchStrong[0] = true;\n\t}\n\n\tif (!isGapLocation) {\n\t\tisGapLocation = isUpperCaseAtPos(wordPos, word, wordLow) || isSeparatorAtPos(wordLow, wordPos - 1) || isWhitespaceAtPos(wordLow, wordPos - 1);\n\t}\n\n\t//\n\tif (patternPos === patternStart) { // first character in pattern\n\t\tif (wordPos > wordStart) {\n\t\t\t// the first pattern character would match a word character that is not at the word start\n\t\t\t// so introduce a penalty to account for the gap preceding this match\n\t\t\tscore -= isGapLocation ? 3 : 5;\n\t\t}\n\t} else {\n\t\tif (newMatchStart) {\n\t\t\t// this would be the beginning of a new match (i.e. there would be a gap before this location)\n\t\t\tscore += isGapLocation ? 2 : 0;\n\t\t} else {\n\t\t\t// this is part of a contiguous match, so give it a slight bonus, but do so only if it would not be a preferred gap location\n\t\t\tscore += isGapLocation ? 0 : 1;\n\t\t}\n\t}\n\n\tif (wordPos + 1 === wordLen) {\n\t\t// we always penalize gaps, but this gives unfair advantages to a match that would match the last character in the word\n\t\t// so pretend there is a gap after the last character in the word to normalize things\n\t\tscore -= isGapLocation ? 3 : 5;\n\t}\n\n\treturn score;\n}\n\n//#endregion\n\n\n//#region --- graceful ---\n\nexport function fuzzyScoreGracefulAggressive(pattern: string, lowPattern: string, patternPos: number, word: string, lowWord: string, wordPos: number, options?: FuzzyScoreOptions): FuzzyScore | undefined {\n\treturn fuzzyScoreWithPermutations(pattern, lowPattern, patternPos, word, lowWord, wordPos, true, options);\n}\n\nexport function fuzzyScoreGraceful(pattern: string, lowPattern: string, patternPos: number, word: string, lowWord: string, wordPos: number, options?: FuzzyScoreOptions): FuzzyScore | undefined {\n\treturn fuzzyScoreWithPermutations(pattern, lowPattern, patternPos, word, lowWord, wordPos, false, options);\n}\n\nfunction fuzzyScoreWithPermutations(pattern: string, lowPattern: string, patternPos: number, word: string, lowWord: string, wordPos: number, aggressive: boolean, options?: FuzzyScoreOptions): FuzzyScore | undefined {\n\tlet top = fuzzyScore(pattern, lowPattern, patternPos, word, lowWord, wordPos, options);\n\n\tif (top && !aggressive) {\n\t\t// when using the original pattern yield a result we`\n\t\t// return it unless we are aggressive and try to find\n\t\t// a better alignment, e.g. `cno` -> `^co^ns^ole` or `^c^o^nsole`.\n\t\treturn top;\n\t}\n\n\tif (pattern.length >= 3) {\n\t\t// When the pattern is long enough then try a few (max 7)\n\t\t// permutations of the pattern to find a better match. The\n\t\t// permutations only swap neighbouring characters, e.g\n\t\t// `cnoso` becomes `conso`, `cnsoo`, `cnoos`.\n\t\tconst tries = Math.min(7, pattern.length - 1);\n\t\tfor (let movingPatternPos = patternPos + 1; movingPatternPos < tries; movingPatternPos++) {\n\t\t\tconst newPattern = nextTypoPermutation(pattern, movingPatternPos);\n\t\t\tif (newPattern) {\n\t\t\t\tconst candidate = fuzzyScore(newPattern, newPattern.toLowerCase(), patternPos, word, lowWord, wordPos, options);\n\t\t\t\tif (candidate) {\n\t\t\t\t\tcandidate[0] -= 3; // permutation penalty\n\t\t\t\t\tif (!top || candidate[0] > top[0]) {\n\t\t\t\t\t\ttop = candidate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn top;\n}\n\nfunction nextTypoPermutation(pattern: string, patternPos: number): string | undefined {\n\n\tif (patternPos + 1 >= pattern.length) {\n\t\treturn undefined;\n\t}\n\n\tconst swap1 = pattern[patternPos];\n\tconst swap2 = pattern[patternPos + 1];\n\n\tif (swap1 === swap2) {\n\t\treturn undefined;\n\t}\n\n\treturn pattern.slice(0, patternPos)\n\t\t+ swap2\n\t\t+ swap1\n\t\t+ pattern.slice(patternPos + 2);\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CSSIcon } from 'vs/base/common/codicons';\nimport { IMatch, matchesFuzzy } from 'vs/base/common/filters';\nimport { ltrim } from 'vs/base/common/strings';\n\nexport const iconStartMarker = '$(';\n\nconst iconsRegex = new RegExp(`\\\\$\\\\(${CSSIcon.iconNameExpression}(?:${CSSIcon.iconModifierExpression})?\\\\)`, 'g'); // no capturing groups\nconst iconNameCharacterRegexp = new RegExp(CSSIcon.iconNameCharacter);\n\nconst escapeIconsRegex = new RegExp(`(\\\\\\\\)?${iconsRegex.source}`, 'g');\nexport function escapeIcons(text: string): string {\n\treturn text.replace(escapeIconsRegex, (match, escaped) => escaped ? match : `\\\\${match}`);\n}\n\nconst markdownEscapedIconsRegex = new RegExp(`\\\\\\\\${iconsRegex.source}`, 'g');\nexport function markdownEscapeEscapedIcons(text: string): string {\n\t// Need to add an extra \\ for escaping in markdown\n\treturn text.replace(markdownEscapedIconsRegex, match => `\\\\${match}`);\n}\n\nconst stripIconsRegex = new RegExp(`(\\\\s)?(\\\\\\\\)?${iconsRegex.source}(\\\\s)?`, 'g');\nexport function stripIcons(text: string): string {\n\tif (text.indexOf(iconStartMarker) === -1) {\n\t\treturn text;\n\t}\n\n\treturn text.replace(stripIconsRegex, (match, preWhitespace, escaped, postWhitespace) => escaped ? match : preWhitespace || postWhitespace || '');\n}\n\n\nexport interface IParsedLabelWithIcons {\n\treadonly text: string;\n\treadonly iconOffsets?: readonly number[];\n}\n\nexport function parseLabelWithIcons(text: string): IParsedLabelWithIcons {\n\tconst firstIconIndex = text.indexOf(iconStartMarker);\n\tif (firstIconIndex === -1) {\n\t\treturn { text }; // return early if the word does not include an icon\n\t}\n\n\treturn doParseLabelWithIcons(text, firstIconIndex);\n}\n\nfunction doParseLabelWithIcons(text: string, firstIconIndex: number): IParsedLabelWithIcons {\n\tconst iconOffsets: number[] = [];\n\tlet textWithoutIcons: string = '';\n\n\tfunction appendChars(chars: string) {\n\t\tif (chars) {\n\t\t\ttextWithoutIcons += chars;\n\n\t\t\tfor (const _ of chars) {\n\t\t\t\ticonOffsets.push(iconsOffset); // make sure to fill in icon offsets\n\t\t\t}\n\t\t}\n\t}\n\n\tlet currentIconStart = -1;\n\tlet currentIconValue: string = '';\n\tlet iconsOffset = 0;\n\n\tlet char: string;\n\tlet nextChar: string;\n\n\tlet offset = firstIconIndex;\n\tconst length = text.length;\n\n\t// Append all characters until the first icon\n\tappendChars(text.substr(0, firstIconIndex));\n\n\t// example: $(file-symlink-file) my cool $(other-icon) entry\n\twhile (offset < length) {\n\t\tchar = text[offset];\n\t\tnextChar = text[offset + 1];\n\n\t\t// beginning of icon: some value $( <--\n\t\tif (char === iconStartMarker[0] && nextChar === iconStartMarker[1]) {\n\t\t\tcurrentIconStart = offset;\n\n\t\t\t// if we had a previous potential icon value without\n\t\t\t// the closing ')', it was actually not an icon and\n\t\t\t// so we have to add it to the actual value\n\t\t\tappendChars(currentIconValue);\n\n\t\t\tcurrentIconValue = iconStartMarker;\n\n\t\t\toffset++; // jump over '('\n\t\t}\n\n\t\t// end of icon: some value $(some-icon) <--\n\t\telse if (char === ')' && currentIconStart !== -1) {\n\t\t\tconst currentIconLength = offset - currentIconStart + 1; // +1 to include the closing ')'\n\t\t\ticonsOffset += currentIconLength;\n\t\t\tcurrentIconStart = -1;\n\t\t\tcurrentIconValue = '';\n\t\t}\n\n\t\t// within icon\n\t\telse if (currentIconStart !== -1) {\n\t\t\t// Make sure this is a real icon name\n\t\t\tif (iconNameCharacterRegexp.test(char)) {\n\t\t\t\tcurrentIconValue += char;\n\t\t\t} else {\n\t\t\t\t// This is not a real icon, treat it as text\n\t\t\t\tappendChars(currentIconValue);\n\n\t\t\t\tcurrentIconStart = -1;\n\t\t\t\tcurrentIconValue = '';\n\t\t\t}\n\t\t}\n\n\t\t// any value outside of icon\n\t\telse {\n\t\t\tappendChars(char);\n\t\t}\n\n\t\toffset++;\n\t}\n\n\t// if we had a previous potential icon value without\n\t// the closing ')', it was actually not an icon and\n\t// so we have to add it to the actual value\n\tappendChars(currentIconValue);\n\n\treturn { text: textWithoutIcons, iconOffsets };\n}\n\nexport function matchesFuzzyIconAware(query: string, target: IParsedLabelWithIcons, enableSeparateSubstringMatching = false): IMatch[] | null {\n\tconst { text, iconOffsets } = target;\n\n\t// Return early if there are no icon markers in the word to match against\n\tif (!iconOffsets || iconOffsets.length === 0) {\n\t\treturn matchesFuzzy(query, text, enableSeparateSubstringMatching);\n\t}\n\n\t// Trim the word to match against because it could have leading\n\t// whitespace now if the word started with an icon\n\tconst wordToMatchAgainstWithoutIconsTrimmed = ltrim(text, ' ');\n\tconst leadingWhitespaceOffset = text.length - wordToMatchAgainstWithoutIconsTrimmed.length;\n\n\t// match on value without icon\n\tconst matches = matchesFuzzy(query, wordToMatchAgainstWithoutIconsTrimmed, enableSeparateSubstringMatching);\n\n\t// Map matches back to offsets with icon and trimming\n\tif (matches) {\n\t\tfor (const match of matches) {\n\t\t\tconst iconOffset = iconOffsets[match.start + leadingWhitespaceOffset] /* icon offsets at index */ + leadingWhitespaceOffset /* overall leading whitespace offset */;\n\t\t\tmatch.start += iconOffset;\n\t\t\tmatch.end += iconOffset;\n\t\t}\n\t}\n\n\treturn matches;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LRUCache } from 'vs/base/common/map';\n\nconst nfcCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFC(str: string): string {\n\treturn normalize(str, 'NFC', nfcCache);\n}\n\nconst nfdCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFD(str: string): string {\n\treturn normalize(str, 'NFD', nfdCache);\n}\n\nconst nonAsciiCharactersPattern = /[^\\u0000-\\u0080]/;\nfunction normalize(str: string, form: string, normalizedCache: LRUCache<string, string>): string {\n\tif (!str) {\n\t\treturn str;\n\t}\n\n\tconst cached = normalizedCache.get(str);\n\tif (cached) {\n\t\treturn cached;\n\t}\n\n\tlet res: string;\n\tif (nonAsciiCharactersPattern.test(str)) {\n\t\tres = str.normalize(form);\n\t} else {\n\t\tres = str;\n\t}\n\n\t// Use the cache for fast lookup\n\tnormalizedCache.set(str, res);\n\n\treturn res;\n}\n\nexport const removeAccents: (str: string) => string = (function () {\n\t// transform into NFD form and remove accents\n\t// see: https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript/37511463#37511463\n\tconst regex = /[\\u0300-\\u036f]/g;\n\treturn function (str: string) {\n\t\treturn normalizeNFD(str).replace(regex, '');\n\t};\n})();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\n\nenum Severity {\n\tIgnore = 0,\n\tInfo = 1,\n\tWarning = 2,\n\tError = 3\n}\n\nnamespace Severity {\n\n\tconst _error = 'error';\n\tconst _warning = 'warning';\n\tconst _warn = 'warn';\n\tconst _info = 'info';\n\tconst _ignore = 'ignore';\n\n\t/**\n\t * Parses 'error', 'warning', 'warn', 'info' in call casings\n\t * and falls back to ignore.\n\t */\n\texport function fromValue(value: string): Severity {\n\t\tif (!value) {\n\t\t\treturn Severity.Ignore;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_error, value)) {\n\t\t\treturn Severity.Error;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_warning, value) || strings.equalsIgnoreCase(_warn, value)) {\n\t\t\treturn Severity.Warning;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_info, value)) {\n\t\t\treturn Severity.Info;\n\t\t}\n\t\treturn Severity.Ignore;\n\t}\n\n\texport function toString(severity: Severity): string {\n\t\tswitch (severity) {\n\t\t\tcase Severity.Error: return _error;\n\t\t\tcase Severity.Warning: return _warning;\n\t\t\tcase Severity.Info: return _info;\n\t\t\tdefault: return _ignore;\n\t\t}\n\t}\n}\n\nexport default Severity;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\n\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array: any): array is any[] {\n\treturn Array.isArray(array);\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str: unknown): str is string {\n\treturn (typeof str === 'string');\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Array and each element in the array is a string.\n */\nexport function isStringArray(value: unknown): value is string[] {\n\treturn Array.isArray(value) && (<unknown[]>value).every(elem => isString(elem));\n}\n\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj: unknown): obj is Object {\n\t// The method can't do a type cast since there are type (like strings) which\n\t// are subclasses of any put not positvely matched by the function. Hence type\n\t// narrowing results in wrong results.\n\treturn typeof obj === 'object'\n\t\t&& obj !== null\n\t\t&& !Array.isArray(obj)\n\t\t&& !(obj instanceof RegExp)\n\t\t&& !(obj instanceof Date);\n}\n\n/**\n *\n * @returns whether the provided parameter is of type `Buffer` or Uint8Array dervived type\n */\nexport function isTypedArray(obj: unknown): obj is Object {\n\tconst TypedArray = Object.getPrototypeOf(Uint8Array);\n\treturn typeof obj === 'object'\n\t\t&& obj instanceof TypedArray;\n}\n\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj: unknown): obj is number {\n\treturn (typeof obj === 'number' && !isNaN(obj));\n}\n\n/**\n * @returns whether the provided parameter is an Iterable, casting to the given generic\n */\nexport function isIterable<T>(obj: unknown): obj is Iterable<T> {\n\treturn !!obj && typeof (obj as any)[Symbol.iterator] === 'function';\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj: unknown): obj is boolean {\n\treturn (obj === true || obj === false);\n}\n\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj: unknown): obj is undefined {\n\treturn (typeof obj === 'undefined');\n}\n\n/**\n * @returns whether the provided parameter is defined.\n */\nexport function isDefined<T>(arg: T | null | undefined): arg is T {\n\treturn !isUndefinedOrNull(arg);\n}\n\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj: unknown): obj is undefined | null {\n\treturn (isUndefined(obj) || obj === null);\n}\n\n\nexport function assertType(condition: unknown, type?: string): asserts condition {\n\tif (!condition) {\n\t\tthrow new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n\t}\n}\n\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined<T>(arg: T | null | undefined): T {\n\tif (isUndefinedOrNull(arg)) {\n\t\tthrow new Error('Assertion Failed: argument is undefined or null');\n\t}\n\n\treturn arg;\n}\n\n/**\n * Asserts that each argument passed in is neither undefined nor null.\n */\nexport function assertAllDefined<T1, T2>(t1: T1 | null | undefined, t2: T2 | null | undefined): [T1, T2];\nexport function assertAllDefined<T1, T2, T3>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined): [T1, T2, T3];\nexport function assertAllDefined<T1, T2, T3, T4>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined, t4: T4 | null | undefined): [T1, T2, T3, T4];\nexport function assertAllDefined(...args: (unknown | null | undefined)[]): unknown[] {\n\tconst result = [];\n\n\tfor (let i = 0; i < args.length; i++) {\n\t\tconst arg = args[i];\n\n\t\tif (isUndefinedOrNull(arg)) {\n\t\t\tthrow new Error(`Assertion Failed: argument at index ${i} is undefined or null`);\n\t\t}\n\n\t\tresult.push(arg);\n\t}\n\n\treturn result;\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj: unknown): obj is object {\n\tif (!isObject(obj)) {\n\t\treturn false;\n\t}\n\n\tfor (const key in obj) {\n\t\tif (hasOwnProperty.call(obj, key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj: unknown): obj is Function {\n\treturn (typeof obj === 'function');\n}\n\n/**\n * @returns whether the provided parameters is are JavaScript Function or not.\n */\nexport function areFunctions(...objects: unknown[]): boolean {\n\treturn objects.length > 0 && objects.every(isFunction);\n}\n\nexport type TypeConstraint = string | Function;\n\nexport function validateConstraints(args: unknown[], constraints: Array<TypeConstraint | undefined>): void {\n\tconst len = Math.min(args.length, constraints.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tvalidateConstraint(args[i], constraints[i]);\n\t}\n}\n\nexport function validateConstraint(arg: unknown, constraint: TypeConstraint | undefined): void {\n\n\tif (isString(constraint)) {\n\t\tif (typeof arg !== constraint) {\n\t\t\tthrow new Error(`argument does not match constraint: typeof ${constraint}`);\n\t\t}\n\t} else if (isFunction(constraint)) {\n\t\ttry {\n\t\t\tif (arg instanceof constraint) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch {\n\t\t\t// ignore\n\t\t}\n\t\tif (!isUndefinedOrNull(arg) && (arg as any).constructor === constraint) {\n\t\t\treturn;\n\t\t}\n\t\tif (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n\t\t\treturn;\n\t\t}\n\t\tthrow new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n\t}\n}\n\nexport function getAllPropertyNames(obj: object): string[] {\n\tlet res: string[] = [];\n\tlet proto = Object.getPrototypeOf(obj);\n\twhile (Object.prototype !== proto) {\n\t\tres = res.concat(Object.getOwnPropertyNames(proto));\n\t\tproto = Object.getPrototypeOf(proto);\n\t}\n\treturn res;\n}\n\nexport function getAllMethodNames(obj: object): string[] {\n\tconst methods: string[] = [];\n\tfor (const prop of getAllPropertyNames(obj)) {\n\t\tif (typeof (obj as any)[prop] === 'function') {\n\t\t\tmethods.push(prop);\n\t\t}\n\t}\n\treturn methods;\n}\n\nexport function createProxyObject<T extends object>(methodNames: string[], invoke: (method: string, args: unknown[]) => unknown): T {\n\tconst createProxyMethod = (method: string): () => unknown => {\n\t\treturn function () {\n\t\t\tconst args = Array.prototype.slice.call(arguments, 0);\n\t\t\treturn invoke(method, args);\n\t\t};\n\t};\n\n\tconst result = {} as T;\n\tfor (const methodName of methodNames) {\n\t\t(<any>result)[methodName] = createProxyMethod(methodName);\n\t}\n\treturn result;\n}\n\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined<T>(x: T | null): T | undefined {\n\treturn x === null ? undefined : x;\n}\n\n/**\n * Converts undefined to null, passes all other values through.\n */\nexport function withUndefinedAsNull<T>(x: T | undefined): T | null {\n\treturn typeof x === 'undefined' ? null : x;\n}\n\ntype AddFirstParameterToFunction<T, TargetFunctionsReturnType, FirstParameter> = T extends (...args: any[]) => TargetFunctionsReturnType ?\n\t// Function: add param to function\n\t(firstArg: FirstParameter, ...args: Parameters<T>) => ReturnType<T> :\n\n\t// Else: just leave as is\n\tT;\n\n/**\n * Allows to add a first parameter to functions of a type.\n */\nexport type AddFirstParameterToFunctions<Target, TargetFunctionsReturnType, FirstParameter> = {\n\t// For every property\n\t[K in keyof Target]: AddFirstParameterToFunction<Target[K], TargetFunctionsReturnType, FirstParameter>;\n};\n\n/**\n * Mapped-type that replaces all occurrences of URI with UriComponents\n */\nexport type UriDto<T> = { [K in keyof T]: T[K] extends URI\n\t? UriComponents\n\t: UriDto<T[K]> };\n\nexport function assertNever(value: never, message = 'Unreachable'): never {\n\tthrow new Error(message);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { isAbsolute, join, normalize, posix, sep } from 'vs/base/common/path';\nimport { isWindows } from 'vs/base/common/platform';\nimport { equalsIgnoreCase, rtrim, startsWithIgnoreCase } from 'vs/base/common/strings';\nimport { isNumber } from 'vs/base/common/types';\n\nexport function isPathSeparator(code: number) {\n\treturn code === CharCode.Slash || code === CharCode.Backslash;\n}\n\n/**\n * Takes a Windows OS path and changes backward slashes to forward slashes.\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toSlashes(osPath: string) {\n\treturn osPath.replace(/[\\\\/]/g, posix.sep);\n}\n\n/**\n * Takes a Windows OS path (using backward or forward slashes) and turns it into a posix path:\n * - turns backward slashes into forward slashes\n * - makes it absolute if it starts with a drive letter\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toPosixPath(osPath: string) {\n\tif (osPath.indexOf('/') === -1) {\n\t\tosPath = toSlashes(osPath);\n\t}\n\tif (/^[a-zA-Z]:(\\/|$)/.test(osPath)) { // starts with a drive letter\n\t\tosPath = '/' + osPath;\n\t}\n\treturn osPath;\n}\n\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path: string, sep: string = posix.sep): string {\n\tif (!path) {\n\t\treturn '';\n\t}\n\n\tconst len = path.length;\n\tconst firstLetter = path.charCodeAt(0);\n\tif (isPathSeparator(firstLetter)) {\n\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t// UNC candidate \\\\localhost\\shares\\ddd\n\t\t\t//               ^^^^^^^^^^^^^^^^^^^\n\t\t\tif (!isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tlet pos = 3;\n\t\t\t\tconst start = pos;\n\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\t\treturn path.slice(0, pos + 1) // consume this separator\n\t\t\t\t\t\t\t\t.replace(/[\\\\/]/g, sep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// /user/far\n\t\t// ^\n\t\treturn sep;\n\n\t} else if (isWindowsDriveLetter(firstLetter)) {\n\t\t// check for windows drive letter c:\\ or c:\n\n\t\tif (path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// C:\\fff\n\t\t\t\t// ^^^\n\t\t\t\treturn path.slice(0, 2) + sep;\n\t\t\t} else {\n\t\t\t\t// C:\n\t\t\t\t// ^^\n\t\t\t\treturn path.slice(0, 2);\n\t\t\t}\n\t\t}\n\t}\n\n\t// check for URI\n\t// scheme://authority/path\n\t// ^^^^^^^^^^^^^^^^^^^\n\tlet pos = path.indexOf('://');\n\tif (pos !== -1) {\n\t\tpos += 3; // 3 -> \"://\".length\n\t\tfor (; pos < len; pos++) {\n\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\treturn path.slice(0, pos + 1); // consume this separator\n\t\t\t}\n\t\t}\n\t}\n\n\treturn '';\n}\n\n/**\n * Check if the path follows this pattern: `\\\\hostname\\sharename`.\n *\n * @see https://msdn.microsoft.com/en-us/library/gg465305.aspx\n * @return A boolean indication if the path is a UNC path, on none-windows\n * always false.\n */\nexport function isUNC(path: string): boolean {\n\tif (!isWindows) {\n\t\t// UNC is a windows concept\n\t\treturn false;\n\t}\n\n\tif (!path || path.length < 5) {\n\t\t// at least \\\\a\\b\n\t\treturn false;\n\t}\n\n\tlet code = path.charCodeAt(0);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\n\tcode = path.charCodeAt(1);\n\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\n\tlet pos = 2;\n\tconst start = pos;\n\tfor (; pos < path.length; pos++) {\n\t\tcode = path.charCodeAt(pos);\n\t\tif (code === CharCode.Backslash) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (start === pos) {\n\t\treturn false;\n\t}\n\n\tcode = path.charCodeAt(pos + 1);\n\n\tif (isNaN(code) || code === CharCode.Backslash) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\n// Reference: https://en.wikipedia.org/wiki/Filename\nconst WINDOWS_INVALID_FILE_CHARS = /[\\\\/:\\*\\?\"<>\\|]/g;\nconst UNIX_INVALID_FILE_CHARS = /[\\\\/]/g;\nconst WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])(\\.(.*?))?$/i;\nexport function isValidBasename(name: string | null | undefined, isWindowsOS: boolean = isWindows): boolean {\n\tconst invalidFileChars = isWindowsOS ? WINDOWS_INVALID_FILE_CHARS : UNIX_INVALID_FILE_CHARS;\n\n\tif (!name || name.length === 0 || /^\\s+$/.test(name)) {\n\t\treturn false; // require a name that is not just whitespace\n\t}\n\n\tinvalidFileChars.lastIndex = 0; // the holy grail of software development\n\tif (invalidFileChars.test(name)) {\n\t\treturn false; // check for certain invalid file characters\n\t}\n\n\tif (isWindowsOS && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n\t\treturn false; // check for certain invalid file names\n\t}\n\n\tif (name === '.' || name === '..') {\n\t\treturn false; // check for reserved values\n\t}\n\n\tif (isWindowsOS && name[name.length - 1] === '.') {\n\t\treturn false; // Windows: file cannot end with a \".\"\n\t}\n\n\tif (isWindowsOS && name.length !== name.trim().length) {\n\t\treturn false; // Windows: file cannot end with a whitespace\n\t}\n\n\tif (name.length > 255) {\n\t\treturn false; // most file systems do not allow files > 255 length\n\t}\n\n\treturn true;\n}\n\n/**\n * @deprecated please use `IUriIdentityService.extUri.isEqual` instead. If you are\n * in a context without services, consider to pass down the `extUri` from the outside\n * or use `extUriBiasedIgnorePathCase` if you know what you are doing.\n */\nexport function isEqual(pathA: string, pathB: string, ignoreCase?: boolean): boolean {\n\tconst identityEquals = (pathA === pathB);\n\tif (!ignoreCase || identityEquals) {\n\t\treturn identityEquals;\n\t}\n\n\tif (!pathA || !pathB) {\n\t\treturn false;\n\t}\n\n\treturn equalsIgnoreCase(pathA, pathB);\n}\n\n/**\n * @deprecated please use `IUriIdentityService.extUri.isEqualOrParent` instead. If\n * you are in a context without services, consider to pass down the `extUri` from the\n * outside, or use `extUriBiasedIgnorePathCase` if you know what you are doing.\n */\nexport function isEqualOrParent(base: string, parentCandidate: string, ignoreCase?: boolean, separator = sep): boolean {\n\tif (base === parentCandidate) {\n\t\treturn true;\n\t}\n\n\tif (!base || !parentCandidate) {\n\t\treturn false;\n\t}\n\n\tif (parentCandidate.length > base.length) {\n\t\treturn false;\n\t}\n\n\tif (ignoreCase) {\n\t\tconst beginsWith = startsWithIgnoreCase(base, parentCandidate);\n\t\tif (!beginsWith) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (parentCandidate.length === base.length) {\n\t\t\treturn true; // same path, different casing\n\t\t}\n\n\t\tlet sepOffset = parentCandidate.length;\n\t\tif (parentCandidate.charAt(parentCandidate.length - 1) === separator) {\n\t\t\tsepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n\t\t}\n\n\t\treturn base.charAt(sepOffset) === separator;\n\t}\n\n\tif (parentCandidate.charAt(parentCandidate.length - 1) !== separator) {\n\t\tparentCandidate += separator;\n\t}\n\n\treturn base.indexOf(parentCandidate) === 0;\n}\n\nexport function isWindowsDriveLetter(char0: number): boolean {\n\treturn char0 >= CharCode.A && char0 <= CharCode.Z || char0 >= CharCode.a && char0 <= CharCode.z;\n}\n\nexport function sanitizeFilePath(candidate: string, cwd: string): string {\n\n\t// Special case: allow to open a drive letter without trailing backslash\n\tif (isWindows && candidate.endsWith(':')) {\n\t\tcandidate += sep;\n\t}\n\n\t// Ensure absolute\n\tif (!isAbsolute(candidate)) {\n\t\tcandidate = join(cwd, candidate);\n\t}\n\n\t// Ensure normalized\n\tcandidate = normalize(candidate);\n\n\t// Ensure no trailing slash/backslash\n\tif (isWindows) {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open drive root ('C:\\')\n\t\tif (candidate.endsWith(':')) {\n\t\t\tcandidate += sep;\n\t\t}\n\n\t} else {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open root ('/')\n\t\tif (!candidate) {\n\t\t\tcandidate = sep;\n\t\t}\n\t}\n\n\treturn candidate;\n}\n\nexport function isRootOrDriveLetter(path: string): boolean {\n\tconst pathNormalized = normalize(path);\n\n\tif (isWindows) {\n\t\tif (path.length > 3) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn hasDriveLetter(pathNormalized) &&\n\t\t\t(path.length === 2 || pathNormalized.charCodeAt(2) === CharCode.Backslash);\n\t}\n\n\treturn pathNormalized === posix.sep;\n}\n\nexport function hasDriveLetter(path: string, isWindowsOS: boolean = isWindows): boolean {\n\tif (isWindowsOS) {\n\t\treturn isWindowsDriveLetter(path.charCodeAt(0)) && path.charCodeAt(1) === CharCode.Colon;\n\t}\n\n\treturn false;\n}\n\nexport function getDriveLetter(path: string): string | undefined {\n\treturn hasDriveLetter(path) ? path[0] : undefined;\n}\n\nexport function indexOfPath(path: string, candidate: string, ignoreCase?: boolean): number {\n\tif (candidate.length > path.length) {\n\t\treturn -1;\n\t}\n\n\tif (path === candidate) {\n\t\treturn 0;\n\t}\n\n\tif (ignoreCase) {\n\t\tpath = path.toLowerCase();\n\t\tcandidate = candidate.toLowerCase();\n\t}\n\n\treturn path.indexOf(candidate);\n}\n\nexport interface IPathWithLineAndColumn {\n\tpath: string;\n\tline?: number;\n\tcolumn?: number;\n}\n\nexport function parseLineAndColumnAware(rawPath: string): IPathWithLineAndColumn {\n\tconst segments = rawPath.split(':'); // C:\\file.txt:<line>:<column>\n\n\tlet path: string | undefined = undefined;\n\tlet line: number | undefined = undefined;\n\tlet column: number | undefined = undefined;\n\n\tfor (const segment of segments) {\n\t\tconst segmentAsNumber = Number(segment);\n\t\tif (!isNumber(segmentAsNumber)) {\n\t\t\tpath = !!path ? [path, segment].join(':') : segment; // a colon can well be part of a path (e.g. C:\\...)\n\t\t} else if (line === undefined) {\n\t\t\tline = segmentAsNumber;\n\t\t} else if (column === undefined) {\n\t\t\tcolumn = segmentAsNumber;\n\t\t}\n\t}\n\n\tif (!path) {\n\t\tthrow new Error('Format for `--goto` should be: `FILE:LINE(:COLUMN)`');\n\t}\n\n\treturn {\n\t\tpath,\n\t\tline: line !== undefined ? line : undefined,\n\t\tcolumn: column !== undefined ? column : line !== undefined ? 1 : undefined // if we have a line, make sure column is also set\n\t};\n}\n\nconst pathChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\nexport function randomPath(parent?: string, prefix?: string, randomLength = 8): string {\n\tlet suffix = '';\n\tfor (let i = 0; i < randomLength; i++) {\n\t\tsuffix += pathChars.charAt(Math.floor(Math.random() * pathChars.length));\n\t}\n\n\tlet randomFileName: string;\n\tif (prefix) {\n\t\trandomFileName = `${prefix}-${suffix}`;\n\t} else {\n\t\trandomFileName = suffix;\n\t}\n\n\tif (parent) {\n\t\treturn join(parent, randomFileName);\n\t}\n\n\treturn randomFileName;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isArray, isTypedArray, isObject, isUndefinedOrNull } from 'vs/base/common/types';\n\nexport function deepClone<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tif (obj instanceof RegExp) {\n\t\t// See https://github.com/microsoft/TypeScript/issues/10990\n\t\treturn obj as any;\n\t}\n\tconst result: any = Array.isArray(obj) ? [] : {};\n\tObject.keys(<any>obj).forEach((key: string) => {\n\t\tif ((<any>obj)[key] && typeof (<any>obj)[key] === 'object') {\n\t\t\tresult[key] = deepClone((<any>obj)[key]);\n\t\t} else {\n\t\t\tresult[key] = (<any>obj)[key];\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function deepFreeze<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tconst stack: any[] = [obj];\n\twhile (stack.length > 0) {\n\t\tconst obj = stack.shift();\n\t\tObject.freeze(obj);\n\t\tfor (const key in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst prop = obj[key];\n\t\t\t\tif (typeof prop === 'object' && !Object.isFrozen(prop) && !isTypedArray(prop)) {\n\t\t\t\t\tstack.push(prop);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn obj;\n}\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n\nexport function cloneAndChange(obj: any, changer: (orig: any) => any): any {\n\treturn _cloneAndChange(obj, changer, new Set());\n}\n\nfunction _cloneAndChange(obj: any, changer: (orig: any) => any, seen: Set<any>): any {\n\tif (isUndefinedOrNull(obj)) {\n\t\treturn obj;\n\t}\n\n\tconst changed = changer(obj);\n\tif (typeof changed !== 'undefined') {\n\t\treturn changed;\n\t}\n\n\tif (isArray(obj)) {\n\t\tconst r1: any[] = [];\n\t\tfor (const e of obj) {\n\t\t\tr1.push(_cloneAndChange(e, changer, seen));\n\t\t}\n\t\treturn r1;\n\t}\n\n\tif (isObject(obj)) {\n\t\tif (seen.has(obj)) {\n\t\t\tthrow new Error('Cannot clone recursive data-structure');\n\t\t}\n\t\tseen.add(obj);\n\t\tconst r2 = {};\n\t\tfor (const i2 in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, i2)) {\n\t\t\t\t(r2 as any)[i2] = _cloneAndChange(obj[i2], changer, seen);\n\t\t\t}\n\t\t}\n\t\tseen.delete(obj);\n\t\treturn r2;\n\t}\n\n\treturn obj;\n}\n\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination: any, source: any, overwrite: boolean = true): any {\n\tif (!isObject(destination)) {\n\t\treturn source;\n\t}\n\n\tif (isObject(source)) {\n\t\tObject.keys(source).forEach(key => {\n\t\t\tif (key in destination) {\n\t\t\t\tif (overwrite) {\n\t\t\t\t\tif (isObject(destination[key]) && isObject(source[key])) {\n\t\t\t\t\t\tmixin(destination[key], source[key], overwrite);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdestination[key] = source[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdestination[key] = source[key];\n\t\t\t}\n\t\t});\n\t}\n\treturn destination;\n}\n\nexport function equals(one: any, other: any): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\tif (one === null || one === undefined || other === null || other === undefined) {\n\t\treturn false;\n\t}\n\tif (typeof one !== typeof other) {\n\t\treturn false;\n\t}\n\tif (typeof one !== 'object') {\n\t\treturn false;\n\t}\n\tif ((Array.isArray(one)) !== (Array.isArray(other))) {\n\t\treturn false;\n\t}\n\n\tlet i: number;\n\tlet key: string;\n\n\tif (Array.isArray(one)) {\n\t\tif (one.length !== other.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < one.length; i++) {\n\t\t\tif (!equals(one[i], other[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tconst oneKeys: string[] = [];\n\n\t\tfor (key in one) {\n\t\t\toneKeys.push(key);\n\t\t}\n\t\toneKeys.sort();\n\t\tconst otherKeys: string[] = [];\n\t\tfor (key in other) {\n\t\t\totherKeys.push(key);\n\t\t}\n\t\totherKeys.sort();\n\t\tif (!equals(oneKeys, otherKeys)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < oneKeys.length; i++) {\n\t\t\tif (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n * Calls `JSON.Stringify` with a replacer to break apart any circular references.\n * This prevents `JSON`.stringify` from throwing the exception\n *  \"Uncaught TypeError: Converting circular structure to JSON\"\n */\nexport function safeStringify(obj: any): string {\n\tconst seen = new Set<any>();\n\treturn JSON.stringify(obj, (key, value) => {\n\t\tif (isObject(value) || Array.isArray(value)) {\n\t\t\tif (seen.has(value)) {\n\t\t\t\treturn '[Circular]';\n\t\t\t} else {\n\t\t\t\tseen.add(value);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t});\n}\n\ntype obj = { [key: string]: any };\n/**\n * Returns an object that has keys for each value that is different in the base object. Keys\n * that do not exist in the target but in the base object are not considered.\n *\n * Note: This is not a deep-diffing method, so the values are strictly taken into the resulting\n * object if they differ.\n *\n * @param base the object to diff against\n * @param obj the object to use for diffing\n */\nexport function distinct(base: obj, target: obj): obj {\n\tconst result = Object.create(null);\n\n\tif (!base || !target) {\n\t\treturn result;\n\t}\n\n\tconst targetKeys = Object.keys(target);\n\ttargetKeys.forEach(k => {\n\t\tconst baseValue = base[k];\n\t\tconst targetValue = target[k];\n\n\t\tif (!equals(baseValue, targetValue)) {\n\t\t\tresult[k] = targetValue;\n\t\t}\n\t});\n\n\treturn result;\n}\n\nexport function getCaseInsensitive(target: obj, key: string): any {\n\tconst lowercaseKey = key.toLowerCase();\n\tconst equivalentKey = Object.keys(target).find(k => k.toLowerCase() === lowercaseKey);\n\treturn equivalentKey ? target[equivalentKey] : target[key];\n}\n\nexport function filter(obj: obj, predicate: (key: string, value: any) => boolean): obj {\n\tconst result = Object.create(null);\n\tfor (const [key, value] of Object.entries(obj)) {\n\t\tif (predicate(key, value)) {\n\t\t\tresult[key] = value;\n\t\t}\n\t}\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { MarshalledId } from 'vs/base/common/marshallingIds';\nimport * as paths from 'vs/base/common/path';\nimport { isWindows } from 'vs/base/common/platform';\n\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\n\nfunction _validateUri(ret: URI, _strict?: boolean): void {\n\n\t// scheme, must be set\n\tif (!ret.scheme && _strict) {\n\t\tthrow new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t}\n\n\t// scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n\t// ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\tif (ret.scheme && !_schemePattern.test(ret.scheme)) {\n\t\tthrow new Error('[UriError]: Scheme contains illegal characters.');\n\t}\n\n\t// path, http://tools.ietf.org/html/rfc3986#section-3.3\n\t// If a URI contains an authority component, then the path component\n\t// must either be empty or begin with a slash (\"/\") character.  If a URI\n\t// does not contain an authority component, then the path cannot begin\n\t// with two slash characters (\"//\").\n\tif (ret.path) {\n\t\tif (ret.authority) {\n\t\t\tif (!_singleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n\t\t\t}\n\t\t} else {\n\t\t\tif (_doubleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n\t\t\t}\n\t\t}\n\t}\n}\n\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme: string, _strict: boolean): string {\n\tif (!scheme && !_strict) {\n\t\treturn 'file';\n\t}\n\treturn scheme;\n}\n\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme: string, path: string): string {\n\n\t// the slash-character is our 'default base' as we don't\n\t// support constructing URIs relative to other URIs. This\n\t// also means that we alter and potentially break paths.\n\t// see https://tools.ietf.org/html/rfc3986#section-5.1.4\n\tswitch (scheme) {\n\t\tcase 'https':\n\t\tcase 'http':\n\t\tcase 'file':\n\t\t\tif (!path) {\n\t\t\t\tpath = _slash;\n\t\t\t} else if (path[0] !== _slash) {\n\t\t\t\tpath = _slash + path;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn path;\n}\n\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI implements UriComponents {\n\n\tstatic isUri(thing: any): thing is URI {\n\t\tif (thing instanceof URI) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<URI>thing).authority === 'string'\n\t\t\t&& typeof (<URI>thing).fragment === 'string'\n\t\t\t&& typeof (<URI>thing).path === 'string'\n\t\t\t&& typeof (<URI>thing).query === 'string'\n\t\t\t&& typeof (<URI>thing).scheme === 'string'\n\t\t\t&& typeof (<URI>thing).fsPath === 'string'\n\t\t\t&& typeof (<URI>thing).with === 'function'\n\t\t\t&& typeof (<URI>thing).toString === 'function';\n\t}\n\n\t/**\n\t * scheme is the 'http' part of 'http://www.example.com/some/path?query#fragment'.\n\t * The part before the first colon.\n\t */\n\treadonly scheme: string;\n\n\t/**\n\t * authority is the 'www.example.com' part of 'http://www.example.com/some/path?query#fragment'.\n\t * The part between the first double slashes and the next slash.\n\t */\n\treadonly authority: string;\n\n\t/**\n\t * path is the '/some/path' part of 'http://www.example.com/some/path?query#fragment'.\n\t */\n\treadonly path: string;\n\n\t/**\n\t * query is the 'query' part of 'http://www.example.com/some/path?query#fragment'.\n\t */\n\treadonly query: string;\n\n\t/**\n\t * fragment is the 'fragment' part of 'http://www.example.com/some/path?query#fragment'.\n\t */\n\treadonly fragment: string;\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(scheme: string, authority?: string, path?: string, query?: string, fragment?: string, _strict?: boolean);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(components: UriComponents);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(schemeOrData: string | UriComponents, authority?: string, path?: string, query?: string, fragment?: string, _strict: boolean = false) {\n\n\t\tif (typeof schemeOrData === 'object') {\n\t\t\tthis.scheme = schemeOrData.scheme || _empty;\n\t\t\tthis.authority = schemeOrData.authority || _empty;\n\t\t\tthis.path = schemeOrData.path || _empty;\n\t\t\tthis.query = schemeOrData.query || _empty;\n\t\t\tthis.fragment = schemeOrData.fragment || _empty;\n\t\t\t// no validation because it's this URI\n\t\t\t// that creates uri components.\n\t\t\t// _validateUri(this);\n\t\t} else {\n\t\t\tthis.scheme = _schemeFix(schemeOrData, _strict);\n\t\t\tthis.authority = authority || _empty;\n\t\t\tthis.path = _referenceResolution(this.scheme, path || _empty);\n\t\t\tthis.query = query || _empty;\n\t\t\tthis.fragment = fragment || _empty;\n\n\t\t\t_validateUri(this, _strict);\n\t\t}\n\t}\n\n\t// ---- filesystem path -----------------------\n\n\t/**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n\t * platform specific path separator.\n\t *\n\t * * Will *not* validate the path for invalid characters and semantics.\n\t * * Will *not* look at the scheme of this URI.\n\t * * The result shall *not* be used for display purposes but for accessing a file on disk.\n\t *\n\t *\n\t * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n\t * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n\t *\n\t * ```ts\n\t\tconst u = URI.parse('file://server/c$/folder/file.txt')\n\t\tu.authority === 'server'\n\t\tu.path === '/shares/c$/file.txt'\n\t\tu.fsPath === '\\\\server\\c$\\folder\\file.txt'\n\t```\n\t *\n\t * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n\t * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n\t * with URIs that represent files on disk (`file` scheme).\n\t */\n\tget fsPath(): string {\n\t\t// if (this.scheme !== 'file') {\n\t\t// \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n\t\t// }\n\t\treturn uriToFsPath(this, false);\n\t}\n\n\t// ---- modify to new -------------------------\n\n\twith(change: { scheme?: string; authority?: string | null; path?: string | null; query?: string | null; fragment?: string | null }): URI {\n\n\t\tif (!change) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet { scheme, authority, path, query, fragment } = change;\n\t\tif (scheme === undefined) {\n\t\t\tscheme = this.scheme;\n\t\t} else if (scheme === null) {\n\t\t\tscheme = _empty;\n\t\t}\n\t\tif (authority === undefined) {\n\t\t\tauthority = this.authority;\n\t\t} else if (authority === null) {\n\t\t\tauthority = _empty;\n\t\t}\n\t\tif (path === undefined) {\n\t\t\tpath = this.path;\n\t\t} else if (path === null) {\n\t\t\tpath = _empty;\n\t\t}\n\t\tif (query === undefined) {\n\t\t\tquery = this.query;\n\t\t} else if (query === null) {\n\t\t\tquery = _empty;\n\t\t}\n\t\tif (fragment === undefined) {\n\t\t\tfragment = this.fragment;\n\t\t} else if (fragment === null) {\n\t\t\tfragment = _empty;\n\t\t}\n\n\t\tif (scheme === this.scheme\n\t\t\t&& authority === this.authority\n\t\t\t&& path === this.path\n\t\t\t&& query === this.query\n\t\t\t&& fragment === this.fragment) {\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn new Uri(scheme, authority, path, query, fragment);\n\t}\n\n\t// ---- parse & validate ------------------------\n\n\t/**\n\t * Creates a new URI from a string, e.g. `http://www.example.com/some/path`,\n\t * `file:///usr/home`, or `scheme:with/path`.\n\t *\n\t * @param value A string which represents an URI (see `URI#toString`).\n\t */\n\tstatic parse(value: string, _strict: boolean = false): URI {\n\t\tconst match = _regexp.exec(value);\n\t\tif (!match) {\n\t\t\treturn new Uri(_empty, _empty, _empty, _empty, _empty);\n\t\t}\n\t\treturn new Uri(\n\t\t\tmatch[2] || _empty,\n\t\t\tpercentDecode(match[4] || _empty),\n\t\t\tpercentDecode(match[5] || _empty),\n\t\t\tpercentDecode(match[7] || _empty),\n\t\t\tpercentDecode(match[9] || _empty),\n\t\t\t_strict\n\t\t);\n\t}\n\n\t/**\n\t * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n\t * `/usr/home`, or `\\\\server\\share\\some\\path`.\n\t *\n\t * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n\t * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n\t * `URI.parse('file://' + path)` because the path might contain characters that are\n\t * interpreted (# and ?). See the following sample:\n\t * ```ts\n\tconst good = URI.file('/coding/c#/project1');\n\tgood.scheme === 'file';\n\tgood.path === '/coding/c#/project1';\n\tgood.fragment === '';\n\tconst bad = URI.parse('file://' + '/coding/c#/project1');\n\tbad.scheme === 'file';\n\tbad.path === '/coding/c'; // path is now broken\n\tbad.fragment === '/project1';\n\t```\n\t *\n\t * @param path A file system path (see `URI#fsPath`)\n\t */\n\tstatic file(path: string): URI {\n\n\t\tlet authority = _empty;\n\n\t\t// normalize to fwd-slashes on windows,\n\t\t// on other systems bwd-slashes are valid\n\t\t// filename character, eg /f\\oo/ba\\r.txt\n\t\tif (isWindows) {\n\t\t\tpath = path.replace(/\\\\/g, _slash);\n\t\t}\n\n\t\t// check for authority as used in UNC shares\n\t\t// or use the path as given\n\t\tif (path[0] === _slash && path[1] === _slash) {\n\t\t\tconst idx = path.indexOf(_slash, 2);\n\t\t\tif (idx === -1) {\n\t\t\t\tauthority = path.substring(2);\n\t\t\t\tpath = _slash;\n\t\t\t} else {\n\t\t\t\tauthority = path.substring(2, idx);\n\t\t\t\tpath = path.substring(idx) || _slash;\n\t\t\t}\n\t\t}\n\n\t\treturn new Uri('file', authority, path, _empty, _empty);\n\t}\n\n\tstatic from(components: { scheme: string; authority?: string; path?: string; query?: string; fragment?: string }): URI {\n\t\tconst result = new Uri(\n\t\t\tcomponents.scheme,\n\t\t\tcomponents.authority,\n\t\t\tcomponents.path,\n\t\t\tcomponents.query,\n\t\t\tcomponents.fragment,\n\t\t);\n\t\t_validateUri(result, true);\n\t\treturn result;\n\t}\n\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param uri The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tstatic joinPath(uri: URI, ...pathFragment: string[]): URI {\n\t\tif (!uri.path) {\n\t\t\tthrow new Error(`[UriError]: cannot call joinPath on URI without path`);\n\t\t}\n\t\tlet newPath: string;\n\t\tif (isWindows && uri.scheme === 'file') {\n\t\t\tnewPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n\t\t} else {\n\t\t\tnewPath = paths.posix.join(uri.path, ...pathFragment);\n\t\t}\n\t\treturn uri.with({ path: newPath });\n\t}\n\n\t// ---- printing/externalize ---------------------------\n\n\t/**\n\t * Creates a string representation for this URI. It's guaranteed that calling\n\t * `URI.parse` with the result of this function creates an URI which is equal\n\t * to this URI.\n\t *\n\t * * The result shall *not* be used for display purposes but for externalization or transport.\n\t * * The result will be encoded using the percentage encoding and encoding happens mostly\n\t * ignore the scheme-specific encoding rules.\n\t *\n\t * @param skipEncoding Do not encode the result, default is `false`\n\t */\n\ttoString(skipEncoding: boolean = false): string {\n\t\treturn _asFormatted(this, skipEncoding);\n\t}\n\n\ttoJSON(): UriComponents {\n\t\treturn this;\n\t}\n\n\tstatic revive(data: UriComponents | URI): URI;\n\tstatic revive(data: UriComponents | URI | undefined): URI | undefined;\n\tstatic revive(data: UriComponents | URI | null): URI | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null {\n\t\tif (!data) {\n\t\t\treturn data;\n\t\t} else if (data instanceof URI) {\n\t\t\treturn data;\n\t\t} else {\n\t\t\tconst result = new Uri(data);\n\t\t\tresult._formatted = (<UriState>data).external;\n\t\t\tresult._fsPath = (<UriState>data)._sep === _pathSepMarker ? (<UriState>data).fsPath : null;\n\t\t\treturn result;\n\t\t}\n\t}\n}\n\nexport interface UriComponents {\n\tscheme: string;\n\tauthority: string;\n\tpath: string;\n\tquery: string;\n\tfragment: string;\n}\n\ninterface UriState extends UriComponents {\n\t$mid: MarshalledId.Uri;\n\texternal: string;\n\tfsPath: string;\n\t_sep: 1 | undefined;\n}\n\nconst _pathSepMarker = isWindows ? 1 : undefined;\n\n// This class exists so that URI is compatible with vscode.Uri (API).\nclass Uri extends URI {\n\n\t_formatted: string | null = null;\n\t_fsPath: string | null = null;\n\n\toverride get fsPath(): string {\n\t\tif (!this._fsPath) {\n\t\t\tthis._fsPath = uriToFsPath(this, false);\n\t\t}\n\t\treturn this._fsPath;\n\t}\n\n\toverride toString(skipEncoding: boolean = false): string {\n\t\tif (!skipEncoding) {\n\t\t\tif (!this._formatted) {\n\t\t\t\tthis._formatted = _asFormatted(this, false);\n\t\t\t}\n\t\t\treturn this._formatted;\n\t\t} else {\n\t\t\t// we don't cache that\n\t\t\treturn _asFormatted(this, true);\n\t\t}\n\t}\n\n\toverride toJSON(): UriComponents {\n\t\tconst res = <UriState>{\n\t\t\t$mid: MarshalledId.Uri\n\t\t};\n\t\t// cached state\n\t\tif (this._fsPath) {\n\t\t\tres.fsPath = this._fsPath;\n\t\t\tres._sep = _pathSepMarker;\n\t\t}\n\t\tif (this._formatted) {\n\t\t\tres.external = this._formatted;\n\t\t}\n\t\t// uri components\n\t\tif (this.path) {\n\t\t\tres.path = this.path;\n\t\t}\n\t\tif (this.scheme) {\n\t\t\tres.scheme = this.scheme;\n\t\t}\n\t\tif (this.authority) {\n\t\t\tres.authority = this.authority;\n\t\t}\n\t\tif (this.query) {\n\t\t\tres.query = this.query;\n\t\t}\n\t\tif (this.fragment) {\n\t\t\tres.fragment = this.fragment;\n\t\t}\n\t\treturn res;\n\t}\n}\n\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable: { [ch: number]: string } = {\n\t[CharCode.Colon]: '%3A', // gen-delims\n\t[CharCode.Slash]: '%2F',\n\t[CharCode.QuestionMark]: '%3F',\n\t[CharCode.Hash]: '%23',\n\t[CharCode.OpenSquareBracket]: '%5B',\n\t[CharCode.CloseSquareBracket]: '%5D',\n\t[CharCode.AtSign]: '%40',\n\n\t[CharCode.ExclamationMark]: '%21', // sub-delims\n\t[CharCode.DollarSign]: '%24',\n\t[CharCode.Ampersand]: '%26',\n\t[CharCode.SingleQuote]: '%27',\n\t[CharCode.OpenParen]: '%28',\n\t[CharCode.CloseParen]: '%29',\n\t[CharCode.Asterisk]: '%2A',\n\t[CharCode.Plus]: '%2B',\n\t[CharCode.Comma]: '%2C',\n\t[CharCode.Semicolon]: '%3B',\n\t[CharCode.Equals]: '%3D',\n\n\t[CharCode.Space]: '%20',\n};\n\nfunction encodeURIComponentFast(uriComponent: string, allowSlash: boolean): string {\n\tlet res: string | undefined = undefined;\n\tlet nativeEncodePos = -1;\n\n\tfor (let pos = 0; pos < uriComponent.length; pos++) {\n\t\tconst code = uriComponent.charCodeAt(pos);\n\n\t\t// unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n\t\tif (\n\t\t\t(code >= CharCode.a && code <= CharCode.z)\n\t\t\t|| (code >= CharCode.A && code <= CharCode.Z)\n\t\t\t|| (code >= CharCode.Digit0 && code <= CharCode.Digit9)\n\t\t\t|| code === CharCode.Dash\n\t\t\t|| code === CharCode.Period\n\t\t\t|| code === CharCode.Underline\n\t\t\t|| code === CharCode.Tilde\n\t\t\t|| (allowSlash && code === CharCode.Slash)\n\t\t) {\n\t\t\t// check if we are delaying native encode\n\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\tnativeEncodePos = -1;\n\t\t\t}\n\t\t\t// check if we write into a new string (by default we try to return the param)\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += uriComponent.charAt(pos);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// encoding needed, we need to allocate a new string\n\t\t\tif (res === undefined) {\n\t\t\t\tres = uriComponent.substr(0, pos);\n\t\t\t}\n\n\t\t\t// check with default table first\n\t\t\tconst escaped = encodeTable[code];\n\t\t\tif (escaped !== undefined) {\n\n\t\t\t\t// check if we are delaying native encode\n\t\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\t\tnativeEncodePos = -1;\n\t\t\t\t}\n\n\t\t\t\t// append escaped variant to result\n\t\t\t\tres += escaped;\n\n\t\t\t} else if (nativeEncodePos === -1) {\n\t\t\t\t// use native encode only when needed\n\t\t\t\tnativeEncodePos = pos;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (nativeEncodePos !== -1) {\n\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n\t}\n\n\treturn res !== undefined ? res : uriComponent;\n}\n\nfunction encodeURIComponentMinimal(path: string): string {\n\tlet res: string | undefined = undefined;\n\tfor (let pos = 0; pos < path.length; pos++) {\n\t\tconst code = path.charCodeAt(pos);\n\t\tif (code === CharCode.Hash || code === CharCode.QuestionMark) {\n\t\t\tif (res === undefined) {\n\t\t\t\tres = path.substr(0, pos);\n\t\t\t}\n\t\t\tres += encodeTable[code];\n\t\t} else {\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += path[pos];\n\t\t\t}\n\t\t}\n\t}\n\treturn res !== undefined ? res : path;\n}\n\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri: URI, keepDriveLetterCasing: boolean): string {\n\n\tlet value: string;\n\tif (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uri.path}`;\n\t} else if (\n\t\turi.path.charCodeAt(0) === CharCode.Slash\n\t\t&& (uri.path.charCodeAt(1) >= CharCode.A && uri.path.charCodeAt(1) <= CharCode.Z || uri.path.charCodeAt(1) >= CharCode.a && uri.path.charCodeAt(1) <= CharCode.z)\n\t\t&& uri.path.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\tif (!keepDriveLetterCasing) {\n\t\t\t// windows drive letter: file:///c:/far/boo\n\t\t\tvalue = uri.path[1].toLowerCase() + uri.path.substr(2);\n\t\t} else {\n\t\t\tvalue = uri.path.substr(1);\n\t\t}\n\t} else {\n\t\t// other path\n\t\tvalue = uri.path;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri: URI, skipEncoding: boolean): string {\n\n\tconst encoder = !skipEncoding\n\t\t? encodeURIComponentFast\n\t\t: encodeURIComponentMinimal;\n\n\tlet res = '';\n\tlet { scheme, authority, path, query, fragment } = uri;\n\tif (scheme) {\n\t\tres += scheme;\n\t\tres += ':';\n\t}\n\tif (authority || scheme === 'file') {\n\t\tres += _slash;\n\t\tres += _slash;\n\t}\n\tif (authority) {\n\t\tlet idx = authority.indexOf('@');\n\t\tif (idx !== -1) {\n\t\t\t// <user>@<auth>\n\t\t\tconst userinfo = authority.substr(0, idx);\n\t\t\tauthority = authority.substr(idx + 1);\n\t\t\tidx = userinfo.indexOf(':');\n\t\t\tif (idx === -1) {\n\t\t\t\tres += encoder(userinfo, false);\n\t\t\t} else {\n\t\t\t\t// <user>:<pass>@<auth>\n\t\t\t\tres += encoder(userinfo.substr(0, idx), false);\n\t\t\t\tres += ':';\n\t\t\t\tres += encoder(userinfo.substr(idx + 1), false);\n\t\t\t}\n\t\t\tres += '@';\n\t\t}\n\t\tauthority = authority.toLowerCase();\n\t\tidx = authority.indexOf(':');\n\t\tif (idx === -1) {\n\t\t\tres += encoder(authority, false);\n\t\t} else {\n\t\t\t// <auth>:<port>\n\t\t\tres += encoder(authority.substr(0, idx), false);\n\t\t\tres += authority.substr(idx);\n\t\t}\n\t}\n\tif (path) {\n\t\t// lower-case windows drive letters in /C:/fff or C:/fff\n\t\tif (path.length >= 3 && path.charCodeAt(0) === CharCode.Slash && path.charCodeAt(2) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(1);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t} else if (path.length >= 2 && path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(0);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t}\n\t\t// encode the rest of the path\n\t\tres += encoder(path, true);\n\t}\n\tif (query) {\n\t\tres += '?';\n\t\tres += encoder(query, false);\n\t}\n\tif (fragment) {\n\t\tres += '#';\n\t\tres += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n\t}\n\treturn res;\n}\n\n// --- decode\n\nfunction decodeURIComponentGraceful(str: string): string {\n\ttry {\n\t\treturn decodeURIComponent(str);\n\t} catch {\n\t\tif (str.length > 3) {\n\t\t\treturn str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n\t\t} else {\n\t\t\treturn str;\n\t\t}\n\t}\n}\n\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\n\nfunction percentDecode(str: string): string {\n\tif (!str.match(_rEncodedAsHex)) {\n\t\treturn str;\n\t}\n\treturn str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\n\nexport interface IRemoteConsoleLog {\n\ttype: string;\n\tseverity: string;\n\targuments: string;\n}\n\nexport interface IStackArgument {\n\t__$stack: string;\n}\n\nexport interface IStackFrame {\n\turi: URI;\n\tline: number;\n\tcolumn: number;\n}\n\nexport function isRemoteConsoleLog(obj: any): obj is IRemoteConsoleLog {\n\tconst entry = obj as IRemoteConsoleLog;\n\n\treturn entry && typeof entry.type === 'string' && typeof entry.severity === 'string';\n}\n\nexport function parse(entry: IRemoteConsoleLog): { args: any[]; stack?: string } {\n\tconst args: any[] = [];\n\tlet stack: string | undefined;\n\n\t// Parse Entry\n\ttry {\n\t\tconst parsedArguments: any[] = JSON.parse(entry.arguments);\n\n\t\t// Check for special stack entry as last entry\n\t\tconst stackArgument = parsedArguments[parsedArguments.length - 1] as IStackArgument;\n\t\tif (stackArgument && stackArgument.__$stack) {\n\t\t\tparsedArguments.pop(); // stack is handled specially\n\t\t\tstack = stackArgument.__$stack;\n\t\t}\n\n\t\targs.push(...parsedArguments);\n\t} catch (error) {\n\t\targs.push('Unable to log remote console arguments', entry.arguments);\n\t}\n\n\treturn { args, stack };\n}\n\nexport function getFirstFrame(entry: IRemoteConsoleLog): IStackFrame | undefined;\nexport function getFirstFrame(stack: string | undefined): IStackFrame | undefined;\nexport function getFirstFrame(arg0: IRemoteConsoleLog | string | undefined): IStackFrame | undefined {\n\tif (typeof arg0 !== 'string') {\n\t\treturn getFirstFrame(parse(arg0!).stack);\n\t}\n\n\t// Parse a source information out of the stack if we have one. Format can be:\n\t// at vscode.commands.registerCommand (/Users/someone/Desktop/test-ts/out/src/extension.js:18:17)\n\t// or\n\t// at /Users/someone/Desktop/test-ts/out/src/extension.js:18:17\n\t// or\n\t// at c:\\Users\\someone\\Desktop\\end-js\\extension.js:19:17\n\t// or\n\t// at e.$executeContributedCommand(c:\\Users\\someone\\Desktop\\end-js\\extension.js:19:17)\n\tconst stack = arg0;\n\tif (stack) {\n\t\tconst topFrame = findFirstFrame(stack);\n\n\t\t// at [^\\/]* => line starts with \"at\" followed by any character except '/' (to not capture unix paths too late)\n\t\t// (?:(?:[a-zA-Z]+:)|(?:[\\/])|(?:\\\\\\\\) => windows drive letter OR unix root OR unc root\n\t\t// (?:.+) => simple pattern for the path, only works because of the line/col pattern after\n\t\t// :(?:\\d+):(?:\\d+) => :line:column data\n\t\tconst matches = /at [^\\/]*((?:(?:[a-zA-Z]+:)|(?:[\\/])|(?:\\\\\\\\))(?:.+)):(\\d+):(\\d+)/.exec(topFrame || '');\n\t\tif (matches && matches.length === 4) {\n\t\t\treturn {\n\t\t\t\turi: URI.file(matches[1]),\n\t\t\t\tline: Number(matches[2]),\n\t\t\t\tcolumn: Number(matches[3])\n\t\t\t};\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nfunction findFirstFrame(stack: string | undefined): string | undefined {\n\tif (!stack) {\n\t\treturn stack;\n\t}\n\n\tconst newlineIndex = stack.indexOf('\\n');\n\tif (newlineIndex === -1) {\n\t\treturn stack;\n\t}\n\n\treturn stack.substring(0, newlineIndex);\n}\n\nexport function log(entry: IRemoteConsoleLog, label: string): void {\n\tconst { args, stack } = parse(entry);\n\n\tconst isOneStringArg = typeof args[0] === 'string' && args.length === 1;\n\n\tlet topFrame = findFirstFrame(stack);\n\tif (topFrame) {\n\t\ttopFrame = `(${topFrame.trim()})`;\n\t}\n\n\tlet consoleArgs: string[] = [];\n\n\t// First arg is a string\n\tif (typeof args[0] === 'string') {\n\t\tif (topFrame && isOneStringArg) {\n\t\t\tconsoleArgs = [`%c[${label}] %c${args[0]} %c${topFrame}`, color('blue'), color(''), color('grey')];\n\t\t} else {\n\t\t\tconsoleArgs = [`%c[${label}] %c${args[0]}`, color('blue'), color(''), ...args.slice(1)];\n\t\t}\n\t}\n\n\t// First arg is something else, just apply all\n\telse {\n\t\tconsoleArgs = [`%c[${label}]%`, color('blue'), ...args];\n\t}\n\n\t// Stack: add to args unless already aded\n\tif (topFrame && !isOneStringArg) {\n\t\tconsoleArgs.push(topFrame);\n\t}\n\n\t// Log it\n\tif (typeof (console as any)[entry.severity] !== 'function') {\n\t\tthrow new Error('Unknown console method');\n\t}\n\t(console as any)[entry.severity].apply(console, consoleArgs);\n}\n\nfunction color(color: string): string {\n\treturn `color: ${color}`;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { regExpFlags } from 'vs/base/common/strings';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { MarshalledId } from './marshallingIds';\n\nexport function stringify(obj: any): string {\n\treturn JSON.stringify(obj, replacer);\n}\n\nexport function parse(text: string): any {\n\tlet data = JSON.parse(text);\n\tdata = revive(data);\n\treturn data;\n}\n\nexport interface MarshalledObject {\n\t$mid: MarshalledId;\n}\n\nfunction replacer(key: string, value: any): any {\n\t// URI is done via toJSON-member\n\tif (value instanceof RegExp) {\n\t\treturn {\n\t\t\t$mid: MarshalledId.Regexp,\n\t\t\tsource: value.source,\n\t\t\tflags: regExpFlags(value),\n\t\t};\n\t}\n\treturn value;\n}\n\n\ntype Deserialize<T> = T extends UriComponents ? URI\n\t: T extends VSBuffer ? VSBuffer\n\t: T extends object\n\t? Revived<T>\n\t: T;\n\nexport type Revived<T> = { [K in keyof T]: Deserialize<T[K]> };\n\nexport function revive<T = any>(obj: any, depth = 0): Revived<T> {\n\tif (!obj || depth > 200) {\n\t\treturn obj;\n\t}\n\n\tif (typeof obj === 'object') {\n\n\t\tswitch ((<MarshalledObject>obj).$mid) {\n\t\t\tcase MarshalledId.Uri: return <any>URI.revive(obj);\n\t\t\tcase MarshalledId.Regexp: return <any>new RegExp(obj.source, obj.flags);\n\t\t\tcase MarshalledId.Date: return <any>new Date(obj.source);\n\t\t}\n\n\t\tif (\n\t\t\tobj instanceof VSBuffer\n\t\t\t|| obj instanceof Uint8Array\n\t\t) {\n\t\t\treturn <any>obj;\n\t\t}\n\n\t\tif (Array.isArray(obj)) {\n\t\t\tfor (let i = 0; i < obj.length; ++i) {\n\t\t\t\tobj[i] = revive(obj[i], depth + 1);\n\t\t\t}\n\t\t} else {\n\t\t\t// walk object\n\t\t\tfor (const key in obj) {\n\t\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\t\tobj[key] = revive(obj[key], depth + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn obj;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as platform from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\n\nexport namespace Schemas {\n\n\t/**\n\t * A schema that is used for models that exist in memory\n\t * only and that have no correspondence on a server or such.\n\t */\n\texport const inMemory = 'inmemory';\n\n\t/**\n\t * A schema that is used for setting files\n\t */\n\texport const vscode = 'vscode';\n\n\t/**\n\t * A schema that is used for internal private files\n\t */\n\texport const internal = 'private';\n\n\t/**\n\t * A walk-through document.\n\t */\n\texport const walkThrough = 'walkThrough';\n\n\t/**\n\t * An embedded code snippet.\n\t */\n\texport const walkThroughSnippet = 'walkThroughSnippet';\n\n\texport const http = 'http';\n\n\texport const https = 'https';\n\n\texport const file = 'file';\n\n\texport const mailto = 'mailto';\n\n\texport const untitled = 'untitled';\n\n\texport const data = 'data';\n\n\texport const command = 'command';\n\n\texport const vscodeRemote = 'vscode-remote';\n\n\texport const vscodeRemoteResource = 'vscode-remote-resource';\n\n\texport const vscodeUserData = 'vscode-userdata';\n\n\texport const vscodeCustomEditor = 'vscode-custom-editor';\n\n\texport const vscodeNotebook = 'vscode-notebook';\n\n\texport const vscodeNotebookCell = 'vscode-notebook-cell';\n\n\texport const vscodeNotebookCellMetadata = 'vscode-notebook-cell-metadata';\n\texport const vscodeNotebookCellOutput = 'vscode-notebook-cell-output';\n\texport const vscodeInteractive = 'vscode-interactive';\n\texport const vscodeInteractiveInput = 'vscode-interactive-input';\n\n\texport const vscodeSettings = 'vscode-settings';\n\n\texport const vscodeWorkspaceTrust = 'vscode-workspace-trust';\n\n\texport const vscodeTerminal = 'vscode-terminal';\n\n\t/**\n\t * Scheme used internally for webviews that aren't linked to a resource (i.e. not custom editors)\n\t */\n\texport const webviewPanel = 'webview-panel';\n\n\t/**\n\t * Scheme used for loading the wrapper html and script in webviews.\n\t */\n\texport const vscodeWebview = 'vscode-webview';\n\n\t/**\n\t * Scheme used for extension pages\n\t */\n\texport const extension = 'extension';\n\n\t/**\n\t * Scheme used as a replacement of `file` scheme to load\n\t * files with our custom protocol handler (desktop only).\n\t */\n\texport const vscodeFileResource = 'vscode-file';\n\n\t/**\n\t * Scheme used for temporary resources\n\t */\n\texport const tmp = 'tmp';\n\n\t/**\n\t * Scheme used vs live share\n\t */\n\texport const vsls = 'vsls';\n\n\t/**\n\t * Scheme used for the Source Control commit input's text document\n\t */\n\texport const vscodeSourceControl = 'vscode-scm';\n}\n\nexport const connectionTokenCookieName = 'vscode-tkn';\nexport const connectionTokenQueryName = 'tkn';\n\nclass RemoteAuthoritiesImpl {\n\tprivate readonly _hosts: { [authority: string]: string | undefined } = Object.create(null);\n\tprivate readonly _ports: { [authority: string]: number | undefined } = Object.create(null);\n\tprivate readonly _connectionTokens: { [authority: string]: string | undefined } = Object.create(null);\n\tprivate _preferredWebSchema: 'http' | 'https' = 'http';\n\tprivate _delegate: ((uri: URI) => URI) | null = null;\n\tprivate _remoteResourcesPath: string = `/${Schemas.vscodeRemoteResource}`;\n\n\tsetPreferredWebSchema(schema: 'http' | 'https') {\n\t\tthis._preferredWebSchema = schema;\n\t}\n\n\tsetDelegate(delegate: (uri: URI) => URI): void {\n\t\tthis._delegate = delegate;\n\t}\n\n\tsetServerRootPath(serverRootPath: string): void {\n\t\tthis._remoteResourcesPath = `${serverRootPath}/${Schemas.vscodeRemoteResource}`;\n\t}\n\n\tset(authority: string, host: string, port: number): void {\n\t\tthis._hosts[authority] = host;\n\t\tthis._ports[authority] = port;\n\t}\n\n\tsetConnectionToken(authority: string, connectionToken: string): void {\n\t\tthis._connectionTokens[authority] = connectionToken;\n\t}\n\n\tgetPreferredWebSchema(): 'http' | 'https' {\n\t\treturn this._preferredWebSchema;\n\t}\n\n\trewrite(uri: URI): URI {\n\t\tif (this._delegate) {\n\t\t\treturn this._delegate(uri);\n\t\t}\n\t\tconst authority = uri.authority;\n\t\tlet host = this._hosts[authority];\n\t\tif (host && host.indexOf(':') !== -1) {\n\t\t\thost = `[${host}]`;\n\t\t}\n\t\tconst port = this._ports[authority];\n\t\tconst connectionToken = this._connectionTokens[authority];\n\t\tlet query = `path=${encodeURIComponent(uri.path)}`;\n\t\tif (typeof connectionToken === 'string') {\n\t\t\tquery += `&${connectionTokenQueryName}=${encodeURIComponent(connectionToken)}`;\n\t\t}\n\t\treturn URI.from({\n\t\t\tscheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n\t\t\tauthority: `${host}:${port}`,\n\t\t\tpath: platform.isWeb\n\t\t\t\t? (window.location.pathname + \"/\" + this._remoteResourcesPath).replace(/\\/\\/+/g, \"/\")\n\t\t\t\t: this._remoteResourcesPath,\n\t\t\tquery\n\t\t});\n\t}\n}\n\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\n\nclass FileAccessImpl {\n\n\tprivate static readonly FALLBACK_AUTHORITY = 'vscode-app';\n\n\t/**\n\t * Returns a URI to use in contexts where the browser is responsible\n\t * for loading (e.g. fetch()) or when used within the DOM.\n\t *\n\t * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n\t */\n\tasBrowserUri(uri: URI): URI;\n\tasBrowserUri(moduleId: string, moduleIdToUrl: { toUrl(moduleId: string): string }): URI;\n\tasBrowserUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }): URI {\n\t\tconst uri = this.toUri(uriOrModule, moduleIdToUrl);\n\n\t\t// Handle remote URIs via `RemoteAuthorities`\n\t\tif (uri.scheme === Schemas.vscodeRemote) {\n\t\t\treturn RemoteAuthorities.rewrite(uri);\n\t\t}\n\n\t\t// Convert to `vscode-file` resource..\n\t\tif (\n\t\t\t// ...only ever for `file` resources\n\t\t\turi.scheme === Schemas.file &&\n\t\t\t(\n\t\t\t\t// ...and we run in native environments\n\t\t\t\tplatform.isNative ||\n\t\t\t\t// ...or web worker extensions on desktop\n\t\t\t\t(platform.isWebWorker && platform.globals.origin === `${Schemas.vscodeFileResource}://${FileAccessImpl.FALLBACK_AUTHORITY}`)\n\t\t\t)\n\t\t) {\n\t\t\treturn uri.with({\n\t\t\t\tscheme: Schemas.vscodeFileResource,\n\t\t\t\t// We need to provide an authority here so that it can serve\n\t\t\t\t// as origin for network and loading matters in chromium.\n\t\t\t\t// If the URI is not coming with an authority already, we\n\t\t\t\t// add our own\n\t\t\t\tauthority: uri.authority || FileAccessImpl.FALLBACK_AUTHORITY,\n\t\t\t\tquery: null,\n\t\t\t\tfragment: null\n\t\t\t});\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\t/**\n\t * Returns the `file` URI to use in contexts where node.js\n\t * is responsible for loading.\n\t */\n\tasFileUri(uri: URI): URI;\n\tasFileUri(moduleId: string, moduleIdToUrl: { toUrl(moduleId: string): string }): URI;\n\tasFileUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }): URI {\n\t\tconst uri = this.toUri(uriOrModule, moduleIdToUrl);\n\n\t\t// Only convert the URI if it is `vscode-file:` scheme\n\t\tif (uri.scheme === Schemas.vscodeFileResource) {\n\t\t\treturn uri.with({\n\t\t\t\tscheme: Schemas.file,\n\t\t\t\t// Only preserve the `authority` if it is different from\n\t\t\t\t// our fallback authority. This ensures we properly preserve\n\t\t\t\t// Windows UNC paths that come with their own authority.\n\t\t\t\tauthority: uri.authority !== FileAccessImpl.FALLBACK_AUTHORITY ? uri.authority : null,\n\t\t\t\tquery: null,\n\t\t\t\tfragment: null\n\t\t\t});\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\tprivate toUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }): URI {\n\t\tif (URI.isUri(uriOrModule)) {\n\t\t\treturn uriOrModule;\n\t\t}\n\n\t\treturn URI.parse(moduleIdToUrl!.toUrl(uriOrModule));\n\t}\n}\n\nexport const FileAccess = new FileAccessImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport * as extpath from 'vs/base/common/extpath';\nimport { Schemas } from 'vs/base/common/network';\nimport * as paths from 'vs/base/common/path';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { compare as strCompare, equalsIgnoreCase } from 'vs/base/common/strings';\nimport { URI, uriToFsPath } from 'vs/base/common/uri';\n\nexport function originalFSPath(uri: URI): string {\n\treturn uriToFsPath(uri, true);\n}\n\n//#region IExtUri\n\nexport interface IExtUri {\n\n\t// --- identity\n\n\t/**\n\t * Compares two uris.\n\t *\n\t * @param uri1 Uri\n\t * @param uri2 Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tcompare(uri1: URI, uri2: URI, ignoreFragment?: boolean): number;\n\n\t/**\n\t * Tests whether two uris are equal\n\t *\n\t * @param uri1 Uri\n\t * @param uri2 Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tisEqual(uri1: URI | undefined, uri2: URI | undefined, ignoreFragment?: boolean): boolean;\n\n\t/**\n\t * Tests whether a `candidate` URI is a parent or equal of a given `base` URI.\n\t *\n\t * @param base A uri which is \"longer\" or at least same length as `parentCandidate`\n\t * @param parentCandidate A uri which is \"shorter\" or up to same length as `base`\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tisEqualOrParent(base: URI, parentCandidate: URI, ignoreFragment?: boolean): boolean;\n\n\t/**\n\t * Creates a key from a resource URI to be used to resource comparison and for resource maps.\n\t * @see {@link ResourceMap}\n\t * @param uri Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tgetComparisonKey(uri: URI, ignoreFragment?: boolean): string;\n\n\t/**\n\t * Whether the casing of the path-component of the uri should be ignored.\n\t */\n\tignorePathCasing(uri: URI): boolean;\n\n\t// --- path math\n\n\tbasenameOrAuthority(resource: URI): string;\n\n\t/**\n\t * Returns the basename of the path component of an uri.\n\t * @param resource\n\t */\n\tbasename(resource: URI): string;\n\n\t/**\n\t * Returns the extension of the path component of an uri.\n\t * @param resource\n\t */\n\textname(resource: URI): string;\n\t/**\n\t * Return a URI representing the directory of a URI path.\n\t *\n\t * @param resource The input URI.\n\t * @returns The URI representing the directory of the input URI.\n\t */\n\tdirname(resource: URI): URI;\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param resource The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tjoinPath(resource: URI, ...pathFragment: string[]): URI;\n\t/**\n\t * Normalizes the path part of a URI: Resolves `.` and `..` elements with directory names.\n\t *\n\t * @param resource The URI to normalize the path.\n\t * @returns The URI with the normalized path.\n\t */\n\tnormalizePath(resource: URI): URI;\n\t/**\n\t *\n\t * @param from\n\t * @param to\n\t */\n\trelativePath(from: URI, to: URI): string | undefined;\n\t/**\n\t * Resolves an absolute or relative path against a base URI.\n\t * The path can be relative or absolute posix or a Windows path\n\t */\n\tresolvePath(base: URI, path: string): URI;\n\n\t// --- misc\n\n\t/**\n\t * Returns true if the URI path is absolute.\n\t */\n\tisAbsolutePath(resource: URI): boolean;\n\t/**\n\t * Tests whether the two authorities are the same\n\t */\n\tisEqualAuthority(a1: string, a2: string): boolean;\n\t/**\n\t * Returns true if the URI path has a trailing path separator\n\t */\n\thasTrailingPathSeparator(resource: URI, sep?: string): boolean;\n\t/**\n\t * Removes a trailing path separator, if there's one.\n\t * Important: Doesn't remove the first slash, it would make the URI invalid\n\t */\n\tremoveTrailingPathSeparator(resource: URI, sep?: string): URI;\n\t/**\n\t * Adds a trailing path separator to the URI if there isn't one already.\n\t * For example, c:\\ would be unchanged, but c:\\users would become c:\\users\\\n\t */\n\taddTrailingPathSeparator(resource: URI, sep?: string): URI;\n}\n\nexport class ExtUri implements IExtUri {\n\n\tconstructor(private _ignorePathCasing: (uri: URI) => boolean) { }\n\n\tcompare(uri1: URI, uri2: URI, ignoreFragment: boolean = false): number {\n\t\tif (uri1 === uri2) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn strCompare(this.getComparisonKey(uri1, ignoreFragment), this.getComparisonKey(uri2, ignoreFragment));\n\t}\n\n\tisEqual(uri1: URI | undefined, uri2: URI | undefined, ignoreFragment: boolean = false): boolean {\n\t\tif (uri1 === uri2) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!uri1 || !uri2) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.getComparisonKey(uri1, ignoreFragment) === this.getComparisonKey(uri2, ignoreFragment);\n\t}\n\n\tgetComparisonKey(uri: URI, ignoreFragment: boolean = false): string {\n\t\treturn uri.with({\n\t\t\tpath: this._ignorePathCasing(uri) ? uri.path.toLowerCase() : undefined,\n\t\t\tfragment: ignoreFragment ? null : undefined\n\t\t}).toString();\n\t}\n\n\tignorePathCasing(uri: URI): boolean {\n\t\treturn this._ignorePathCasing(uri);\n\t}\n\n\tisEqualOrParent(base: URI, parentCandidate: URI, ignoreFragment: boolean = false): boolean {\n\t\tif (base.scheme === parentCandidate.scheme) {\n\t\t\tif (base.scheme === Schemas.file) {\n\t\t\t\treturn extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), this._ignorePathCasing(base)) && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n\t\t\t}\n\t\t\tif (isEqualAuthority(base.authority, parentCandidate.authority)) {\n\t\t\t\treturn extpath.isEqualOrParent(base.path, parentCandidate.path, this._ignorePathCasing(base), '/') && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t// --- path math\n\n\tjoinPath(resource: URI, ...pathFragment: string[]): URI {\n\t\treturn URI.joinPath(resource, ...pathFragment);\n\t}\n\n\tbasenameOrAuthority(resource: URI): string {\n\t\treturn basename(resource) || resource.authority;\n\t}\n\n\tbasename(resource: URI): string {\n\t\treturn paths.posix.basename(resource.path);\n\t}\n\n\textname(resource: URI): string {\n\t\treturn paths.posix.extname(resource.path);\n\t}\n\n\tdirname(resource: URI): URI {\n\t\tif (resource.path.length === 0) {\n\t\t\treturn resource;\n\t\t}\n\t\tlet dirname;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tdirname = URI.file(paths.dirname(originalFSPath(resource))).path;\n\t\t} else {\n\t\t\tdirname = paths.posix.dirname(resource.path);\n\t\t\tif (resource.authority && dirname.length && dirname.charCodeAt(0) !== CharCode.Slash) {\n\t\t\t\tconsole.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n\t\t\t\tdirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n\t\t\t}\n\t\t}\n\t\treturn resource.with({\n\t\t\tpath: dirname\n\t\t});\n\t}\n\n\tnormalizePath(resource: URI): URI {\n\t\tif (!resource.path.length) {\n\t\t\treturn resource;\n\t\t}\n\t\tlet normalizedPath: string;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tnormalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n\t\t} else {\n\t\t\tnormalizedPath = paths.posix.normalize(resource.path);\n\t\t}\n\t\treturn resource.with({\n\t\t\tpath: normalizedPath\n\t\t});\n\t}\n\n\trelativePath(from: URI, to: URI): string | undefined {\n\t\tif (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (from.scheme === Schemas.file) {\n\t\t\tconst relativePath = paths.relative(originalFSPath(from), originalFSPath(to));\n\t\t\treturn isWindows ? extpath.toSlashes(relativePath) : relativePath;\n\t\t}\n\t\tlet fromPath = from.path || '/';\n\t\tconst toPath = to.path || '/';\n\t\tif (this._ignorePathCasing(from)) {\n\t\t\t// make casing of fromPath match toPath\n\t\t\tlet i = 0;\n\t\t\tfor (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n\t\t\t\tif (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n\t\t\t\t\tif (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfromPath = toPath.substr(0, i) + fromPath.substr(i);\n\t\t}\n\t\treturn paths.posix.relative(fromPath, toPath);\n\t}\n\n\tresolvePath(base: URI, path: string): URI {\n\t\tif (base.scheme === Schemas.file) {\n\t\t\tconst newURI = URI.file(paths.resolve(originalFSPath(base), path));\n\t\t\treturn base.with({\n\t\t\t\tauthority: newURI.authority,\n\t\t\t\tpath: newURI.path\n\t\t\t});\n\t\t}\n\t\tpath = extpath.toPosixPath(path); // we allow path to be a windows path\n\t\treturn base.with({\n\t\t\tpath: paths.posix.resolve(base.path, path)\n\t\t});\n\t}\n\n\t// --- misc\n\n\tisAbsolutePath(resource: URI): boolean {\n\t\treturn !!resource.path && resource.path[0] === '/';\n\t}\n\n\tisEqualAuthority(a1: string | undefined, a2: string | undefined) {\n\t\treturn a1 === a2 || (a1 !== undefined && a2 !== undefined && equalsIgnoreCase(a1, a2));\n\t}\n\n\thasTrailingPathSeparator(resource: URI, sep: string = paths.sep): boolean {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst fsp = originalFSPath(resource);\n\t\t\treturn fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === sep;\n\t\t} else {\n\t\t\tconst p = resource.path;\n\t\t\treturn (p.length > 1 && p.charCodeAt(p.length - 1) === CharCode.Slash) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath)); // ignore the slash at offset 0\n\t\t}\n\t}\n\n\tremoveTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t\t// Make sure that the path isn't a drive letter. A trailing separator there is not removable.\n\t\tif (hasTrailingPathSeparator(resource, sep)) {\n\t\t\treturn resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n\t\t}\n\t\treturn resource;\n\t}\n\n\taddTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t\tlet isRootSep: boolean = false;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst fsp = originalFSPath(resource);\n\t\t\tisRootSep = ((fsp !== undefined) && (fsp.length === extpath.getRoot(fsp).length) && (fsp[fsp.length - 1] === sep));\n\t\t} else {\n\t\t\tsep = '/';\n\t\t\tconst p = resource.path;\n\t\t\tisRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === CharCode.Slash;\n\t\t}\n\t\tif (!isRootSep && !hasTrailingPathSeparator(resource, sep)) {\n\t\t\treturn resource.with({ path: resource.path + '/' });\n\t\t}\n\t\treturn resource;\n\t}\n}\n\n\n/**\n * Unbiased utility that takes uris \"as they are\". This means it can be interchanged with\n * uri#toString() usages. The following is true\n * ```\n * assertEqual(aUri.toString() === bUri.toString(), exturi.isEqual(aUri, bUri))\n * ```\n */\nexport const extUri = new ExtUri(() => false);\n\n/**\n * BIASED utility that _mostly_ ignored the case of urs paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriBiasedIgnorePathCase = new ExtUri(uri => {\n\t// A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n\t// Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n\treturn uri.scheme === Schemas.file ? !isLinux : true;\n});\n\n\n/**\n * BIASED utility that always ignores the casing of uris paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriIgnorePathCase = new ExtUri(_ => true);\n\nexport const isEqual = extUri.isEqual.bind(extUri);\nexport const isEqualOrParent = extUri.isEqualOrParent.bind(extUri);\nexport const getComparisonKey = extUri.getComparisonKey.bind(extUri);\nexport const basenameOrAuthority = extUri.basenameOrAuthority.bind(extUri);\nexport const basename = extUri.basename.bind(extUri);\nexport const extname = extUri.extname.bind(extUri);\nexport const dirname = extUri.dirname.bind(extUri);\nexport const joinPath = extUri.joinPath.bind(extUri);\nexport const normalizePath = extUri.normalizePath.bind(extUri);\nexport const relativePath = extUri.relativePath.bind(extUri);\nexport const resolvePath = extUri.resolvePath.bind(extUri);\nexport const isAbsolutePath = extUri.isAbsolutePath.bind(extUri);\nexport const isEqualAuthority = extUri.isEqualAuthority.bind(extUri);\nexport const hasTrailingPathSeparator = extUri.hasTrailingPathSeparator.bind(extUri);\nexport const removeTrailingPathSeparator = extUri.removeTrailingPathSeparator.bind(extUri);\nexport const addTrailingPathSeparator = extUri.addTrailingPathSeparator.bind(extUri);\n\n//#endregion\n\nexport function distinctParents<T>(items: T[], resourceAccessor: (item: T) => URI): T[] {\n\tconst distinctParents: T[] = [];\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst candidateResource = resourceAccessor(items[i]);\n\t\tif (items.some((otherItem, index) => {\n\t\t\tif (index === i) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn isEqualOrParent(candidateResource, resourceAccessor(otherItem));\n\t\t})) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdistinctParents.push(items[i]);\n\t}\n\n\treturn distinctParents;\n}\n\n/**\n * Data URI related helpers.\n */\nexport namespace DataUri {\n\n\texport const META_DATA_LABEL = 'label';\n\texport const META_DATA_DESCRIPTION = 'description';\n\texport const META_DATA_SIZE = 'size';\n\texport const META_DATA_MIME = 'mime';\n\n\texport function parseMetaData(dataUri: URI): Map<string, string> {\n\t\tconst metadata = new Map<string, string>();\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n\t\tconst meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n\t\tmeta.split(';').forEach(property => {\n\t\t\tconst [key, value] = property.split(':');\n\t\t\tif (key && value) {\n\t\t\t\tmetadata.set(key, value);\n\t\t\t}\n\t\t});\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the mime is: image/png\n\t\tconst mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n\t\tif (mime) {\n\t\t\tmetadata.set(META_DATA_MIME, mime);\n\t\t}\n\n\t\treturn metadata;\n\t}\n}\n\nexport function toLocalResource(resource: URI, authority: string | undefined, localScheme: string): URI {\n\tif (authority) {\n\t\tlet path = resource.path;\n\t\tif (path && path[0] !== paths.posix.sep) {\n\t\t\tpath = paths.posix.sep + path;\n\t\t}\n\n\t\treturn resource.with({ scheme: localScheme, authority, path });\n\t}\n\n\treturn resource.with({ scheme: localScheme });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { CancellationError } from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable, MutableDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { extUri as defaultExtUri, IExtUri } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { setTimeout0 } from 'vs/base/common/platform';\n\nexport function isThenable<T>(obj: unknown): obj is Promise<T> {\n\treturn !!obj && typeof (obj as unknown as Promise<T>).then === 'function';\n}\n\nexport interface CancelablePromise<T> extends Promise<T> {\n\tcancel(): void;\n}\n\nexport function createCancelablePromise<T>(callback: (token: CancellationToken) => Promise<T>): CancelablePromise<T> {\n\tconst source = new CancellationTokenSource();\n\n\tconst thenable = callback(source.token);\n\tconst promise = new Promise<T>((resolve, reject) => {\n\t\tconst subscription = source.token.onCancellationRequested(() => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\treject(new CancellationError());\n\t\t});\n\t\tPromise.resolve(thenable).then(value => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\tresolve(value);\n\t\t}, err => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\treject(err);\n\t\t});\n\t});\n\n\treturn <CancelablePromise<T>>new class {\n\t\tcancel() {\n\t\t\tsource.cancel();\n\t\t}\n\t\tthen<TResult1 = T, TResult2 = never>(resolve?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, reject?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2> {\n\t\t\treturn promise.then(resolve, reject);\n\t\t}\n\t\tcatch<TResult = never>(reject?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult> {\n\t\t\treturn this.then(undefined, reject);\n\t\t}\n\t\tfinally(onfinally?: (() => void) | undefined | null): Promise<T> {\n\t\t\treturn promise.finally(onfinally);\n\t\t}\n\t};\n}\n\n/**\n * Returns a promise that resolves with `undefined` as soon as the passed token is cancelled.\n * @see {@link raceCancellationError}\n */\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken): Promise<T | undefined>;\n\n/**\n * Returns a promise that resolves with `defaultValue` as soon as the passed token is cancelled.\n * @see {@link raceCancellationError}\n */\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue: T): Promise<T>;\n\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue?: T): Promise<T | undefined> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst ref = token.onCancellationRequested(() => {\n\t\t\tref.dispose();\n\t\t\tresolve(defaultValue);\n\t\t});\n\t\tpromise.then(resolve, reject).finally(() => ref.dispose());\n\t});\n}\n\n/**\n * Returns a promise that rejects with an {@CancellationError} as soon as the passed token is cancelled.\n * @see {@link raceCancellation}\n */\nexport function raceCancellationError<T>(promise: Promise<T>, token: CancellationToken): Promise<T> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst ref = token.onCancellationRequested(() => {\n\t\t\tref.dispose();\n\t\t\treject(new CancellationError());\n\t\t});\n\t\tpromise.then(resolve, reject).finally(() => ref.dispose());\n\t});\n}\n\n/**\n * Returns as soon as one of the promises is resolved and cancels remaining promises\n */\nexport async function raceCancellablePromises<T>(cancellablePromises: CancelablePromise<T>[]): Promise<T> {\n\tlet resolvedPromiseIndex = -1;\n\tconst promises = cancellablePromises.map((promise, index) => promise.then(result => { resolvedPromiseIndex = index; return result; }));\n\tconst result = await Promise.race(promises);\n\tcancellablePromises.forEach((cancellablePromise, index) => {\n\t\tif (index !== resolvedPromiseIndex) {\n\t\t\tcancellablePromise.cancel();\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function raceTimeout<T>(promise: Promise<T>, timeout: number, onTimeout?: () => void): Promise<T | undefined> {\n\tlet promiseResolve: ((value: T | undefined) => void) | undefined = undefined;\n\n\tconst timer = setTimeout(() => {\n\t\tpromiseResolve?.(undefined);\n\t\tonTimeout?.();\n\t}, timeout);\n\n\treturn Promise.race([\n\t\tpromise.finally(() => clearTimeout(timer)),\n\t\tnew Promise<T | undefined>(resolve => promiseResolve = resolve)\n\t]);\n}\n\nexport function asPromise<T>(callback: () => T | Thenable<T>): Promise<T> {\n\treturn new Promise<T>((resolve, reject) => {\n\t\tconst item = callback();\n\t\tif (isThenable<T>(item)) {\n\t\t\titem.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(item);\n\t\t}\n\t});\n}\n\nexport interface ITask<T> {\n\t(): T;\n}\n\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport class Throttler {\n\n\tprivate activePromise: Promise<any> | null;\n\tprivate queuedPromise: Promise<any> | null;\n\tprivate queuedPromiseFactory: ITask<Promise<any>> | null;\n\n\tconstructor() {\n\t\tthis.activePromise = null;\n\t\tthis.queuedPromise = null;\n\t\tthis.queuedPromiseFactory = null;\n\t}\n\n\tqueue<T>(promiseFactory: ITask<Promise<T>>): Promise<T> {\n\t\tif (this.activePromise) {\n\t\t\tthis.queuedPromiseFactory = promiseFactory;\n\n\t\t\tif (!this.queuedPromise) {\n\t\t\t\tconst onComplete = () => {\n\t\t\t\t\tthis.queuedPromise = null;\n\n\t\t\t\t\tconst result = this.queue(this.queuedPromiseFactory!);\n\t\t\t\t\tthis.queuedPromiseFactory = null;\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\n\t\t\t\tthis.queuedPromise = new Promise(resolve => {\n\t\t\t\t\tthis.activePromise!.then(onComplete, onComplete).then(resolve);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.queuedPromise!.then(resolve, reject);\n\t\t\t});\n\t\t}\n\n\t\tthis.activePromise = promiseFactory();\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.activePromise!.then((result: T) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\tresolve(result);\n\t\t\t}, (err: unknown) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\treject(err);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class Sequencer {\n\n\tprivate current: Promise<unknown> = Promise.resolve(null);\n\n\tqueue<T>(promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\treturn this.current = this.current.then(() => promiseTask(), () => promiseTask());\n\t}\n}\n\nexport class SequencerByKey<TKey> {\n\n\tprivate promiseMap = new Map<TKey, Promise<unknown>>();\n\n\tqueue<T>(key: TKey, promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\tconst runningPromise = this.promiseMap.get(key) ?? Promise.resolve();\n\t\tconst newPromise = runningPromise\n\t\t\t.catch(() => { })\n\t\t\t.then(promiseTask)\n\t\t\t.finally(() => {\n\t\t\t\tif (this.promiseMap.get(key) === newPromise) {\n\t\t\t\t\tthis.promiseMap.delete(key);\n\t\t\t\t}\n\t\t\t});\n\t\tthis.promiseMap.set(key, newPromise);\n\t\treturn newPromise;\n\t}\n}\n\ninterface IScheduledLater extends IDisposable {\n\tisTriggered(): boolean;\n}\n\nconst timeoutDeferred = (timeout: number, fn: () => void): IScheduledLater => {\n\tlet scheduled = true;\n\tconst handle = setTimeout(() => {\n\t\tscheduled = false;\n\t\tfn();\n\t}, timeout);\n\treturn {\n\t\tisTriggered: () => scheduled,\n\t\tdispose: () => {\n\t\t\tclearTimeout(handle);\n\t\t\tscheduled = false;\n\t\t},\n\t};\n};\n\nconst microtaskDeferred = (fn: () => void): IScheduledLater => {\n\tlet scheduled = true;\n\tqueueMicrotask(() => {\n\t\tif (scheduled) {\n\t\t\tscheduled = false;\n\t\t\tfn();\n\t\t}\n\t});\n\n\treturn {\n\t\tisTriggered: () => scheduled,\n\t\tdispose: () => { scheduled = false; },\n\t};\n};\n\n/** Can be passed into the Delayed to defer using a microtask */\nexport const MicrotaskDelay = Symbol('MicrotaskDelay');\n\n/**\n * A helper to delay (debounce) execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer<T> implements IDisposable {\n\n\tprivate deferred: IScheduledLater | null;\n\tprivate completionPromise: Promise<any> | null;\n\tprivate doResolve: ((value?: any | Promise<any>) => void) | null;\n\tprivate doReject: ((err: any) => void) | null;\n\tprivate task: ITask<T | Promise<T>> | null;\n\n\tconstructor(public defaultDelay: number | typeof MicrotaskDelay) {\n\t\tthis.deferred = null;\n\t\tthis.completionPromise = null;\n\t\tthis.doResolve = null;\n\t\tthis.doReject = null;\n\t\tthis.task = null;\n\t}\n\n\ttrigger(task: ITask<T | Promise<T>>, delay = this.defaultDelay): Promise<T> {\n\t\tthis.task = task;\n\t\tthis.cancelTimeout();\n\n\t\tif (!this.completionPromise) {\n\t\t\tthis.completionPromise = new Promise((resolve, reject) => {\n\t\t\t\tthis.doResolve = resolve;\n\t\t\t\tthis.doReject = reject;\n\t\t\t}).then(() => {\n\t\t\t\tthis.completionPromise = null;\n\t\t\t\tthis.doResolve = null;\n\t\t\t\tif (this.task) {\n\t\t\t\t\tconst task = this.task;\n\t\t\t\t\tthis.task = null;\n\t\t\t\t\treturn task();\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t}\n\n\t\tconst fn = () => {\n\t\t\tthis.deferred = null;\n\t\t\tthis.doResolve?.(null);\n\t\t};\n\n\t\tthis.deferred = delay === MicrotaskDelay ? microtaskDeferred(fn) : timeoutDeferred(delay, fn);\n\n\t\treturn this.completionPromise;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn !!this.deferred?.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.cancelTimeout();\n\n\t\tif (this.completionPromise) {\n\t\t\tthis.doReject?.(new CancellationError());\n\t\t\tthis.completionPromise = null;\n\t\t}\n\t}\n\n\tprivate cancelTimeout(): void {\n\t\tthis.deferred?.dispose();\n\t\tthis.deferred = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * The mail man is clever and waits for a certain amount of time, before going\n * out to deliver letters. While the mail man is going out, more letters arrive\n * and can only be delivered once he is back. Once he is back the mail man will\n * do one more trip to deliver the letters that have accumulated while he was out.\n */\nexport class ThrottledDelayer<T> {\n\n\tprivate delayer: Delayer<Promise<T>>;\n\tprivate throttler: Throttler;\n\n\tconstructor(defaultDelay: number) {\n\t\tthis.delayer = new Delayer(defaultDelay);\n\t\tthis.throttler = new Throttler();\n\t}\n\n\ttrigger(promiseFactory: ITask<Promise<T>>, delay?: number): Promise<T> {\n\t\treturn this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay) as unknown as Promise<T>;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.delayer.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.delayer.cancel();\n\t}\n\n\tdispose(): void {\n\t\tthis.delayer.dispose();\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently.\n */\nexport class Barrier {\n\n\tprivate _isOpen: boolean;\n\tprivate _promise: Promise<boolean>;\n\tprivate _completePromise!: (v: boolean) => void;\n\n\tconstructor() {\n\t\tthis._isOpen = false;\n\t\tthis._promise = new Promise<boolean>((c, e) => {\n\t\t\tthis._completePromise = c;\n\t\t});\n\t}\n\n\tisOpen(): boolean {\n\t\treturn this._isOpen;\n\t}\n\n\topen(): void {\n\t\tthis._isOpen = true;\n\t\tthis._completePromise(true);\n\t}\n\n\twait(): Promise<boolean> {\n\t\treturn this._promise;\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently after a certain period of\n * time or when open is called explicitly\n */\nexport class AutoOpenBarrier extends Barrier {\n\n\tprivate readonly _timeout: any;\n\n\tconstructor(autoOpenTimeMs: number) {\n\t\tsuper();\n\t\tthis._timeout = setTimeout(() => this.open(), autoOpenTimeMs);\n\t}\n\n\toverride open(): void {\n\t\tclearTimeout(this._timeout);\n\t\tsuper.open();\n\t}\n}\n\nexport function timeout(millis: number): CancelablePromise<void>;\nexport function timeout(millis: number, token: CancellationToken): Promise<void>;\nexport function timeout(millis: number, token?: CancellationToken): CancelablePromise<void> | Promise<void> {\n\tif (!token) {\n\t\treturn createCancelablePromise(token => timeout(millis, token));\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst handle = setTimeout(() => {\n\t\t\tdisposable.dispose();\n\t\t\tresolve();\n\t\t}, millis);\n\t\tconst disposable = token.onCancellationRequested(() => {\n\t\t\tclearTimeout(handle);\n\t\t\tdisposable.dispose();\n\t\t\treject(new CancellationError());\n\t\t});\n\t});\n}\n\nexport function disposableTimeout(handler: () => void, timeout = 0): IDisposable {\n\tconst timer = setTimeout(handler, timeout);\n\treturn toDisposable(() => clearTimeout(timer));\n}\n\n/**\n * Runs the provided list of promise factories in sequential order. The returned\n * promise will complete to an array of results from each promise.\n */\n\nexport function sequence<T>(promiseFactories: ITask<Promise<T>>[]): Promise<T[]> {\n\tconst results: T[] = [];\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tfunction next(): Promise<T> | null {\n\t\treturn index < len ? promiseFactories[index++]() : null;\n\t}\n\n\tfunction thenHandler(result: any): Promise<any> {\n\t\tif (result !== undefined && result !== null) {\n\t\t\tresults.push(result);\n\t\t}\n\n\t\tconst n = next();\n\t\tif (n) {\n\t\t\treturn n.then(thenHandler);\n\t\t}\n\n\t\treturn Promise.resolve(results);\n\t}\n\n\treturn Promise.resolve(null).then(thenHandler);\n}\n\nexport function first<T>(promiseFactories: ITask<Promise<T>>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null): Promise<T | null> {\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tconst loop: () => Promise<T | null> = () => {\n\t\tif (index >= len) {\n\t\t\treturn Promise.resolve(defaultValue);\n\t\t}\n\n\t\tconst factory = promiseFactories[index++];\n\t\tconst promise = Promise.resolve(factory());\n\n\t\treturn promise.then(result => {\n\t\t\tif (shouldStop(result)) {\n\t\t\t\treturn Promise.resolve(result);\n\t\t\t}\n\n\t\t\treturn loop();\n\t\t});\n\t};\n\n\treturn loop();\n}\n\n/**\n * Returns the result of the first promise that matches the \"shouldStop\",\n * running all promises in parallel. Supports cancelable promises.\n */\nexport function firstParallel<T>(promiseList: Promise<T>[], shouldStop?: (t: T) => boolean, defaultValue?: T | null): Promise<T | null>;\nexport function firstParallel<T, R extends T>(promiseList: Promise<T>[], shouldStop: (t: T) => t is R, defaultValue?: R | null): Promise<R | null>;\nexport function firstParallel<T>(promiseList: Promise<T>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null) {\n\tif (promiseList.length === 0) {\n\t\treturn Promise.resolve(defaultValue);\n\t}\n\n\tlet todo = promiseList.length;\n\tconst finish = () => {\n\t\ttodo = -1;\n\t\tfor (const promise of promiseList) {\n\t\t\t(promise as Partial<CancelablePromise<T>>).cancel?.();\n\t\t}\n\t};\n\n\treturn new Promise<T | null>((resolve, reject) => {\n\t\tfor (const promise of promiseList) {\n\t\t\tpromise.then(result => {\n\t\t\t\tif (--todo >= 0 && shouldStop(result)) {\n\t\t\t\t\tfinish();\n\t\t\t\t\tresolve(result);\n\t\t\t\t} else if (todo === 0) {\n\t\t\t\t\tresolve(defaultValue);\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tif (--todo >= 0) {\n\t\t\t\t\t\tfinish();\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t});\n}\n\ninterface ILimitedTaskFactory<T> {\n\tfactory: ITask<Promise<T>>;\n\tc: (value: T | Promise<T>) => void;\n\te: (error?: unknown) => void;\n}\n\nexport interface ILimiter<T> {\n\n\treadonly size: number;\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T>;\n}\n\n/**\n * A helper to queue N promises and run them all with a max degree of parallelism. The helper\n * ensures that at any time no more than M promises are running at the same time.\n */\nexport class Limiter<T> implements ILimiter<T>{\n\n\tprivate _size = 0;\n\tprivate runningPromises: number;\n\tprivate readonly maxDegreeOfParalellism: number;\n\tprivate readonly outstandingPromises: ILimitedTaskFactory<T>[];\n\tprivate readonly _onDrained: Emitter<void>;\n\n\tconstructor(maxDegreeOfParalellism: number) {\n\t\tthis.maxDegreeOfParalellism = maxDegreeOfParalellism;\n\t\tthis.outstandingPromises = [];\n\t\tthis.runningPromises = 0;\n\t\tthis._onDrained = new Emitter<void>();\n\t}\n\n\t/**\n\t * An event that fires when every promise in the queue\n\t * has started to execute. In other words: no work is\n\t * pending to be scheduled.\n\t *\n\t * This is NOT an event that signals when all promises\n\t * have finished though.\n\t */\n\tget onDrained(): Event<void> {\n\t\treturn this._onDrained.event;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T> {\n\t\tthis._size++;\n\n\t\treturn new Promise<T>((c, e) => {\n\t\t\tthis.outstandingPromises.push({ factory, c, e });\n\t\t\tthis.consume();\n\t\t});\n\t}\n\n\tprivate consume(): void {\n\t\twhile (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n\t\t\tconst iLimitedTask = this.outstandingPromises.shift()!;\n\t\t\tthis.runningPromises++;\n\n\t\t\tconst promise = iLimitedTask.factory();\n\t\t\tpromise.then(iLimitedTask.c, iLimitedTask.e);\n\t\t\tpromise.then(() => this.consumed(), () => this.consumed());\n\t\t}\n\t}\n\n\tprivate consumed(): void {\n\t\tthis._size--;\n\t\tthis.runningPromises--;\n\n\t\tif (this.outstandingPromises.length > 0) {\n\t\t\tthis.consume();\n\t\t} else {\n\t\t\tthis._onDrained.fire();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis._onDrained.dispose();\n\t}\n}\n\n/**\n * A queue is handles one promise at a time and guarantees that at any time only one promise is executing.\n */\nexport class Queue<T> extends Limiter<T> {\n\n\tconstructor() {\n\t\tsuper(1);\n\t}\n}\n\n/**\n * A helper to organize queues per resource. The ResourceQueue makes sure to manage queues per resource\n * by disposing them once the queue is empty.\n */\nexport class ResourceQueue implements IDisposable {\n\n\tprivate readonly queues = new Map<string, Queue<void>>();\n\n\tprivate readonly drainers = new Set<DeferredPromise<void>>();\n\n\tasync whenDrained(): Promise<void> {\n\t\tif (this.isDrained()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst promise = new DeferredPromise<void>();\n\t\tthis.drainers.add(promise);\n\n\t\treturn promise.p;\n\t}\n\n\tprivate isDrained(): boolean {\n\t\tfor (const [, queue] of this.queues) {\n\t\t\tif (queue.size > 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tqueueFor(resource: URI, extUri: IExtUri = defaultExtUri): ILimiter<void> {\n\t\tconst key = extUri.getComparisonKey(resource);\n\n\t\tlet queue = this.queues.get(key);\n\t\tif (!queue) {\n\t\t\tqueue = new Queue<void>();\n\t\t\tEvent.once(queue.onDrained)(() => {\n\t\t\t\tqueue?.dispose();\n\t\t\t\tthis.queues.delete(key);\n\t\t\t\tthis.onDidQueueDrain();\n\t\t\t});\n\n\t\t\tthis.queues.set(key, queue);\n\t\t}\n\n\t\treturn queue;\n\t}\n\n\tprivate onDidQueueDrain(): void {\n\t\tif (!this.isDrained()) {\n\t\t\treturn; // not done yet\n\t\t}\n\n\t\tthis.releaseDrainers();\n\t}\n\n\tprivate releaseDrainers(): void {\n\t\tfor (const drainer of this.drainers) {\n\t\t\tdrainer.complete();\n\t\t}\n\n\t\tthis.drainers.clear();\n\t}\n\n\tdispose(): void {\n\t\tfor (const [, queue] of this.queues) {\n\t\t\tqueue.dispose();\n\t\t}\n\n\t\tthis.queues.clear();\n\n\t\t// Even though we might still have pending\n\t\t// tasks queued, after the queues have been\n\t\t// disposed, we can no longer track them, so\n\t\t// we release drainers to prevent hanging\n\t\t// promises when the resource queue is being\n\t\t// disposed.\n\t\tthis.releaseDrainers();\n\t}\n}\n\nexport class TimeoutTimer implements IDisposable {\n\tprivate _token: any;\n\n\tconstructor();\n\tconstructor(runner: () => void, timeout: number);\n\tconstructor(runner?: () => void, timeout?: number) {\n\t\tthis._token = -1;\n\n\t\tif (typeof runner === 'function' && typeof timeout === 'number') {\n\t\t\tthis.setIfNotSet(runner, timeout);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearTimeout(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, timeout: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n\n\tsetIfNotSet(runner: () => void, timeout: number): void {\n\t\tif (this._token !== -1) {\n\t\t\t// timer is already set\n\t\t\treturn;\n\t\t}\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n}\n\nexport class IntervalTimer implements IDisposable {\n\n\tprivate _token: any;\n\n\tconstructor() {\n\t\tthis._token = -1;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearInterval(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, interval: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setInterval(() => {\n\t\t\trunner();\n\t\t}, interval);\n\t}\n}\n\nexport class RunOnceScheduler {\n\n\tprotected runner: ((...args: unknown[]) => void) | null;\n\n\tprivate timeoutToken: any;\n\tprivate timeout: number;\n\tprivate timeoutHandler: () => void;\n\n\tconstructor(runner: (...args: any[]) => void, delay: number) {\n\t\tthis.timeoutToken = -1;\n\t\tthis.runner = runner;\n\t\tthis.timeout = delay;\n\t\tthis.timeoutHandler = this.onTimeout.bind(this);\n\t}\n\n\t/**\n\t * Dispose RunOnceScheduler\n\t */\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\t/**\n\t * Cancel current scheduled runner (if any).\n\t */\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearTimeout(this.timeoutToken);\n\t\t\tthis.timeoutToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tthis.cancel();\n\t\tthis.timeoutToken = setTimeout(this.timeoutHandler, delay);\n\t}\n\n\tget delay(): number {\n\t\treturn this.timeout;\n\t}\n\n\tset delay(value: number) {\n\t\tthis.timeout = value;\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.timeoutToken !== -1;\n\t}\n\n\tprivate onTimeout() {\n\t\tthis.timeoutToken = -1;\n\t\tif (this.runner) {\n\t\t\tthis.doRun();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tthis.runner?.();\n\t}\n}\n\n/**\n * Same as `RunOnceScheduler`, but doesn't count the time spent in sleep mode.\n * > **NOTE**: Only offers 1s resolution.\n *\n * When calling `setTimeout` with 3hrs, and putting the computer immediately to sleep\n * for 8hrs, `setTimeout` will fire **as soon as the computer wakes from sleep**. But\n * this scheduler will execute 3hrs **after waking the computer from sleep**.\n */\nexport class ProcessTimeRunOnceScheduler {\n\n\tprivate runner: (() => void) | null;\n\tprivate timeout: number;\n\n\tprivate counter: number;\n\tprivate intervalToken: any;\n\tprivate intervalHandler: () => void;\n\n\tconstructor(runner: () => void, delay: number) {\n\t\tif (delay % 1000 !== 0) {\n\t\t\tconsole.warn(`ProcessTimeRunOnceScheduler resolution is 1s, ${delay}ms is not a multiple of 1000ms.`);\n\t\t}\n\t\tthis.runner = runner;\n\t\tthis.timeout = delay;\n\t\tthis.counter = 0;\n\t\tthis.intervalToken = -1;\n\t\tthis.intervalHandler = this.onInterval.bind(this);\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearInterval(this.intervalToken);\n\t\t\tthis.intervalToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tif (delay % 1000 !== 0) {\n\t\t\tconsole.warn(`ProcessTimeRunOnceScheduler resolution is 1s, ${delay}ms is not a multiple of 1000ms.`);\n\t\t}\n\t\tthis.cancel();\n\t\tthis.counter = Math.ceil(delay / 1000);\n\t\tthis.intervalToken = setInterval(this.intervalHandler, 1000);\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.intervalToken !== -1;\n\t}\n\n\tprivate onInterval() {\n\t\tthis.counter--;\n\t\tif (this.counter > 0) {\n\t\t\t// still need to wait\n\t\t\treturn;\n\t\t}\n\n\t\t// time elapsed\n\t\tclearInterval(this.intervalToken);\n\t\tthis.intervalToken = -1;\n\t\tthis.runner?.();\n\t}\n}\n\nexport class RunOnceWorker<T> extends RunOnceScheduler {\n\tprivate units: T[] = [];\n\n\tconstructor(runner: (units: T[]) => void, timeout: number) {\n\t\tsuper(runner, timeout);\n\t}\n\n\twork(unit: T): void {\n\t\tthis.units.push(unit);\n\n\t\tif (!this.isScheduled()) {\n\t\t\tthis.schedule();\n\t\t}\n\t}\n\n\tprotected override doRun(): void {\n\t\tconst units = this.units;\n\t\tthis.units = [];\n\n\t\tthis.runner?.(units);\n\t}\n\n\toverride dispose(): void {\n\t\tthis.units = [];\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport interface IThrottledWorkerOptions {\n\n\t/**\n\t * maximum of units the worker will pass onto handler at once\n\t */\n\tmaxWorkChunkSize: number;\n\n\t/**\n\t * maximum of units the worker will keep in memory for processing\n\t */\n\tmaxBufferedWork: number | undefined;\n\n\t/**\n\t * delay before processing the next round of chunks when chunk size exceeds limits\n\t */\n\tthrottleDelay: number;\n}\n\n/**\n * The `ThrottledWorker` will accept units of work `T`\n * to handle. The contract is:\n * * there is a maximum of units the worker can handle at once (via `maxWorkChunkSize`)\n * * there is a maximum of units the worker will keep in memory for processing (via `maxBufferedWork`)\n * * after having handled `maxWorkChunkSize` units, the worker needs to rest (via `throttleDelay`)\n */\nexport class ThrottledWorker<T> extends Disposable {\n\n\tprivate readonly pendingWork: T[] = [];\n\n\tprivate readonly throttler = this._register(new MutableDisposable<RunOnceScheduler>());\n\tprivate disposed = false;\n\n\tconstructor(\n\t\tprivate options: IThrottledWorkerOptions,\n\t\tprivate readonly handler: (units: T[]) => void\n\t) {\n\t\tsuper();\n\t}\n\n\t/**\n\t * The number of work units that are pending to be processed.\n\t */\n\tget pending(): number { return this.pendingWork.length; }\n\n\t/**\n\t * Add units to be worked on. Use `pending` to figure out\n\t * how many units are not yet processed after this method\n\t * was called.\n\t *\n\t * @returns whether the work was accepted or not. If the\n\t * worker is disposed, it will not accept any more work.\n\t * If the number of pending units would become larger\n\t * than `maxPendingWork`, more work will also not be accepted.\n\t */\n\twork(units: readonly T[]): boolean {\n\t\tif (this.disposed) {\n\t\t\treturn false; // work not accepted: disposed\n\t\t}\n\n\t\t// Check for reaching maximum of pending work\n\t\tif (typeof this.options.maxBufferedWork === 'number') {\n\n\t\t\t// Throttled: simple check if pending + units exceeds max pending\n\t\t\tif (this.throttler.value) {\n\t\t\t\tif (this.pending + units.length > this.options.maxBufferedWork) {\n\t\t\t\t\treturn false; // work not accepted: too much pending work\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Unthrottled: same as throttled, but account for max chunk getting\n\t\t\t// worked on directly without being pending\n\t\t\telse {\n\t\t\t\tif (this.pending + units.length - this.options.maxWorkChunkSize > this.options.maxBufferedWork) {\n\t\t\t\t\treturn false; // work not accepted: too much pending work\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add to pending units first\n\t\tthis.pendingWork.push(...units);\n\n\t\t// If not throttled, start working directly\n\t\t// Otherwise, when the throttle delay has\n\t\t// past, pending work will be worked again.\n\t\tif (!this.throttler.value) {\n\t\t\tthis.doWork();\n\t\t}\n\n\t\treturn true; // work accepted\n\t}\n\n\tprivate doWork(): void {\n\n\t\t// Extract chunk to handle and handle it\n\t\tthis.handler(this.pendingWork.splice(0, this.options.maxWorkChunkSize));\n\n\t\t// If we have remaining work, schedule it after a delay\n\t\tif (this.pendingWork.length > 0) {\n\t\t\tthis.throttler.value = new RunOnceScheduler(() => {\n\t\t\t\tthis.throttler.clear();\n\n\t\t\t\tthis.doWork();\n\t\t\t}, this.options.throttleDelay);\n\t\t\tthis.throttler.value.schedule();\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.disposed = true;\n\t}\n}\n\n//#region -- run on idle tricks ------------\n\nexport interface IdleDeadline {\n\treadonly didTimeout: boolean;\n\ttimeRemaining(): number;\n}\n\n/**\n * Execute the callback the next time the browser is idle\n */\nexport let runWhenIdle: (callback: (idle: IdleDeadline) => void, timeout?: number) => IDisposable;\n\ndeclare function requestIdleCallback(callback: (args: IdleDeadline) => void, options?: { timeout: number }): number;\ndeclare function cancelIdleCallback(handle: number): void;\n\n(function () {\n\tif (typeof requestIdleCallback !== 'function' || typeof cancelIdleCallback !== 'function') {\n\t\trunWhenIdle = (runner) => {\n\t\t\tsetTimeout0(() => {\n\t\t\t\tif (disposed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst end = Date.now() + 15; // one frame at 64fps\n\t\t\t\trunner(Object.freeze({\n\t\t\t\t\tdidTimeout: true,\n\t\t\t\t\ttimeRemaining() {\n\t\t\t\t\t\treturn Math.max(0, end - Date.now());\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t});\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t} else {\n\t\trunWhenIdle = (runner, timeout?) => {\n\t\t\tconst handle: number = requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tcancelIdleCallback(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n})();\n\n/**\n * An implementation of the \"idle-until-urgent\"-strategy as introduced\n * here: https://philipwalton.com/articles/idle-until-urgent/\n */\nexport class IdleValue<T> {\n\n\tprivate readonly _executor: () => void;\n\tprivate readonly _handle: IDisposable;\n\n\tprivate _didRun: boolean = false;\n\tprivate _value?: T;\n\tprivate _error: unknown;\n\n\tconstructor(executor: () => T) {\n\t\tthis._executor = () => {\n\t\t\ttry {\n\t\t\t\tthis._value = executor();\n\t\t\t} catch (err) {\n\t\t\t\tthis._error = err;\n\t\t\t} finally {\n\t\t\t\tthis._didRun = true;\n\t\t\t}\n\t\t};\n\t\tthis._handle = runWhenIdle(() => this._executor());\n\t}\n\n\tdispose(): void {\n\t\tthis._handle.dispose();\n\t}\n\n\tget value(): T {\n\t\tif (!this._didRun) {\n\t\t\tthis._handle.dispose();\n\t\t\tthis._executor();\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value!;\n\t}\n\n\tget isInitialized(): boolean {\n\t\treturn this._didRun;\n\t}\n}\n\n//#endregion\n\nexport async function retry<T>(task: ITask<Promise<T>>, delay: number, retries: number): Promise<T> {\n\tlet lastError: Error | undefined;\n\n\tfor (let i = 0; i < retries; i++) {\n\t\ttry {\n\t\t\treturn await task();\n\t\t} catch (error) {\n\t\t\tlastError = error;\n\n\t\t\tawait timeout(delay);\n\t\t}\n\t}\n\n\tthrow lastError;\n}\n\n//#region Task Sequentializer\n\ninterface IPendingTask {\n\ttaskId: number;\n\tcancel: () => void;\n\tpromise: Promise<void>;\n}\n\ninterface ISequentialTask {\n\tpromise: Promise<void>;\n\tpromiseResolve: () => void;\n\tpromiseReject: (error: Error) => void;\n\trun: () => Promise<void>;\n}\n\nexport interface ITaskSequentializerWithPendingTask {\n\treadonly pending: Promise<void>;\n}\n\nexport class TaskSequentializer {\n\tprivate _pending?: IPendingTask;\n\tprivate _next?: ISequentialTask;\n\n\thasPending(taskId?: number): this is ITaskSequentializerWithPendingTask {\n\t\tif (!this._pending) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof taskId === 'number') {\n\t\t\treturn this._pending.taskId === taskId;\n\t\t}\n\n\t\treturn !!this._pending;\n\t}\n\n\tget pending(): Promise<void> | undefined {\n\t\treturn this._pending ? this._pending.promise : undefined;\n\t}\n\n\tcancelPending(): void {\n\t\tthis._pending?.cancel();\n\t}\n\n\tsetPending(taskId: number, promise: Promise<void>, onCancel?: () => void,): Promise<void> {\n\t\tthis._pending = { taskId, cancel: () => onCancel?.(), promise };\n\n\t\tpromise.then(() => this.donePending(taskId), () => this.donePending(taskId));\n\n\t\treturn promise;\n\t}\n\n\tprivate donePending(taskId: number): void {\n\t\tif (this._pending && taskId === this._pending.taskId) {\n\n\t\t\t// only set pending to done if the promise finished that is associated with that taskId\n\t\t\tthis._pending = undefined;\n\n\t\t\t// schedule the next task now that we are free if we have any\n\t\t\tthis.triggerNext();\n\t\t}\n\t}\n\n\tprivate triggerNext(): void {\n\t\tif (this._next) {\n\t\t\tconst next = this._next;\n\t\t\tthis._next = undefined;\n\n\t\t\t// Run next task and complete on the associated promise\n\t\t\tnext.run().then(next.promiseResolve, next.promiseReject);\n\t\t}\n\t}\n\n\tsetNext(run: () => Promise<void>): Promise<void> {\n\n\t\t// this is our first next task, so we create associated promise with it\n\t\t// so that we can return a promise that completes when the task has\n\t\t// completed.\n\t\tif (!this._next) {\n\t\t\tlet promiseResolve: () => void;\n\t\t\tlet promiseReject: (error: Error) => void;\n\t\t\tconst promise = new Promise<void>((resolve, reject) => {\n\t\t\t\tpromiseResolve = resolve;\n\t\t\t\tpromiseReject = reject;\n\t\t\t});\n\n\t\t\tthis._next = {\n\t\t\t\trun,\n\t\t\t\tpromise,\n\t\t\t\tpromiseResolve: promiseResolve!,\n\t\t\t\tpromiseReject: promiseReject!\n\t\t\t};\n\t\t}\n\n\t\t// we have a previous next task, just overwrite it\n\t\telse {\n\t\t\tthis._next.run = run;\n\t\t}\n\n\t\treturn this._next.promise;\n\t}\n}\n\n//#endregion\n\n//#region\n\n/**\n * The `IntervalCounter` allows to count the number\n * of calls to `increment()` over a duration of\n * `interval`. This utility can be used to conditionally\n * throttle a frequent task when a certain threshold\n * is reached.\n */\nexport class IntervalCounter {\n\n\tprivate lastIncrementTime = 0;\n\n\tprivate value = 0;\n\n\tconstructor(private readonly interval: number, private readonly nowFn = () => Date.now()) { }\n\n\tincrement(): number {\n\t\tconst now = this.nowFn();\n\n\t\t// We are outside of the range of `interval` and as such\n\t\t// start counting from 0 and remember the time\n\t\tif (now - this.lastIncrementTime > this.interval) {\n\t\t\tthis.lastIncrementTime = now;\n\t\t\tthis.value = 0;\n\t\t}\n\n\t\tthis.value++;\n\n\t\treturn this.value;\n\t}\n}\n\n//#endregion\n\n//#region\n\nexport type ValueCallback<T = unknown> = (value: T | Promise<T>) => void;\n\n/**\n * Creates a promise whose resolution or rejection can be controlled imperatively.\n */\nexport class DeferredPromise<T> {\n\n\tprivate completeCallback!: ValueCallback<T>;\n\tprivate errorCallback!: (err: unknown) => void;\n\tprivate rejected = false;\n\tprivate resolved = false;\n\n\tpublic get isRejected() {\n\t\treturn this.rejected;\n\t}\n\n\tpublic get isResolved() {\n\t\treturn this.resolved;\n\t}\n\n\tpublic get isSettled() {\n\t\treturn this.rejected || this.resolved;\n\t}\n\n\tpublic p: Promise<T>;\n\n\tconstructor() {\n\t\tthis.p = new Promise<T>((c, e) => {\n\t\t\tthis.completeCallback = c;\n\t\t\tthis.errorCallback = e;\n\t\t});\n\t}\n\n\tpublic complete(value: T) {\n\t\treturn new Promise<void>(resolve => {\n\t\t\tthis.completeCallback(value);\n\t\t\tthis.resolved = true;\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tpublic error(err: unknown) {\n\t\treturn new Promise<void>(resolve => {\n\t\t\tthis.errorCallback(err);\n\t\t\tthis.rejected = true;\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tpublic cancel() {\n\t\tnew Promise<void>(resolve => {\n\t\t\tthis.errorCallback(new CancellationError());\n\t\t\tthis.rejected = true;\n\t\t\tresolve();\n\t\t});\n\t}\n}\n\n//#endregion\n\n//#region Promises\n\nexport namespace Promises {\n\n\t/**\n\t * A drop-in replacement for `Promise.all` with the only difference\n\t * that the method awaits every promise to either fulfill or reject.\n\t *\n\t * Similar to `Promise.all`, only the first error will be returned\n\t * if any.\n\t */\n\texport async function settled<T>(promises: Promise<T>[]): Promise<T[]> {\n\t\tlet firstError: Error | undefined = undefined;\n\n\t\tconst result = await Promise.all(promises.map(promise => promise.then(value => value, error => {\n\t\t\tif (!firstError) {\n\t\t\t\tfirstError = error;\n\t\t\t}\n\n\t\t\treturn undefined; // do not rethrow so that other promises can settle\n\t\t})));\n\n\t\tif (typeof firstError !== 'undefined') {\n\t\t\tthrow firstError;\n\t\t}\n\n\t\treturn result as unknown as T[]; // cast is needed and protected by the `throw` above\n\t}\n\n\t/**\n\t * A helper to create a new `Promise<T>` with a body that is a promise\n\t * itself. By default, an error that raises from the async body will\n\t * end up as a unhandled rejection, so this utility properly awaits the\n\t * body and rejects the promise as a normal promise does without async\n\t * body.\n\t *\n\t * This method should only be used in rare cases where otherwise `async`\n\t * cannot be used (e.g. when callbacks are involved that require this).\n\t */\n\texport function withAsyncBody<T, E = Error>(bodyFn: (resolve: (value: T) => unknown, reject: (error: E) => unknown) => Promise<unknown>): Promise<T> {\n\t\t// eslint-disable-next-line no-async-promise-executor\n\t\treturn new Promise<T>(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tawait bodyFn(resolve, reject);\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t});\n\t}\n}\n\n//#endregion\n\n//#region\n\nconst enum AsyncIterableSourceState {\n\tInitial,\n\tDoneOK,\n\tDoneError,\n}\n\n/**\n * An object that allows to emit async values asynchronously or bring the iterable to an error state using `reject()`.\n * This emitter is valid only for the duration of the executor (until the promise returned by the executor settles).\n */\nexport interface AsyncIterableEmitter<T> {\n\t/**\n\t * The value will be appended at the end.\n\t *\n\t * **NOTE** If `reject()` has already been called, this method has no effect.\n\t */\n\temitOne(value: T): void;\n\t/**\n\t * The values will be appended at the end.\n\t *\n\t * **NOTE** If `reject()` has already been called, this method has no effect.\n\t */\n\temitMany(values: T[]): void;\n\t/**\n\t * Writing an error will permanently invalidate this iterable.\n\t * The current users will receive an error thrown, as will all future users.\n\t *\n\t * **NOTE** If `reject()` have already been called, this method has no effect.\n\t */\n\treject(error: Error): void;\n}\n\n/**\n * An executor for the `AsyncIterableObject` that has access to an emitter.\n */\nexport interface AyncIterableExecutor<T> {\n\t/**\n\t * @param emitter An object that allows to emit async values valid only for the duration of the executor.\n\t */\n\t(emitter: AsyncIterableEmitter<T>): void | Promise<void>;\n}\n\n/**\n * A rich implementation for an `AsyncIterable<T>`.\n */\nexport class AsyncIterableObject<T> implements AsyncIterable<T> {\n\n\tpublic static fromArray<T>(items: T[]): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>((writer) => {\n\t\t\twriter.emitMany(items);\n\t\t});\n\t}\n\n\tpublic static fromPromise<T>(promise: Promise<T[]>): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>(async (emitter) => {\n\t\t\temitter.emitMany(await promise);\n\t\t});\n\t}\n\n\tpublic static fromPromises<T>(promises: Promise<T>[]): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>(async (emitter) => {\n\t\t\tawait Promise.all(promises.map(async (p) => emitter.emitOne(await p)));\n\t\t});\n\t}\n\n\tpublic static merge<T>(iterables: AsyncIterable<T>[]): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject(async (emitter) => {\n\t\t\tawait Promise.all(iterables.map(async (iterable) => {\n\t\t\t\tfor await (const item of iterable) {\n\t\t\t\t\temitter.emitOne(item);\n\t\t\t\t}\n\t\t\t}));\n\t\t});\n\t}\n\n\tpublic static EMPTY = AsyncIterableObject.fromArray<any>([]);\n\n\tprivate _state: AsyncIterableSourceState;\n\tprivate _results: T[];\n\tprivate _error: Error | null;\n\tprivate readonly _onStateChanged: Emitter<void>;\n\n\tconstructor(executor: AyncIterableExecutor<T>) {\n\t\tthis._state = AsyncIterableSourceState.Initial;\n\t\tthis._results = [];\n\t\tthis._error = null;\n\t\tthis._onStateChanged = new Emitter<void>();\n\n\t\tqueueMicrotask(async () => {\n\t\t\tconst writer: AsyncIterableEmitter<T> = {\n\t\t\t\temitOne: (item) => this.emitOne(item),\n\t\t\t\temitMany: (items) => this.emitMany(items),\n\t\t\t\treject: (error) => this.reject(error)\n\t\t\t};\n\t\t\ttry {\n\t\t\t\tawait Promise.resolve(executor(writer));\n\t\t\t\tthis.resolve();\n\t\t\t} catch (err) {\n\t\t\t\tthis.reject(err);\n\t\t\t} finally {\n\t\t\t\twriter.emitOne = undefined!;\n\t\t\t\twriter.emitMany = undefined!;\n\t\t\t\twriter.reject = undefined!;\n\t\t\t}\n\t\t});\n\t}\n\n\t[Symbol.asyncIterator](): AsyncIterator<T, undefined, undefined> {\n\t\tlet i = 0;\n\t\treturn {\n\t\t\tnext: async () => {\n\t\t\t\tdo {\n\t\t\t\t\tif (this._state === AsyncIterableSourceState.DoneError) {\n\t\t\t\t\t\tthrow this._error;\n\t\t\t\t\t}\n\t\t\t\t\tif (i < this._results.length) {\n\t\t\t\t\t\treturn { done: false, value: this._results[i++] };\n\t\t\t\t\t}\n\t\t\t\t\tif (this._state === AsyncIterableSourceState.DoneOK) {\n\t\t\t\t\t\treturn { done: true, value: undefined };\n\t\t\t\t\t}\n\t\t\t\t\tawait Event.toPromise(this._onStateChanged.event);\n\t\t\t\t} while (true);\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic static map<T, R>(iterable: AsyncIterable<T>, mapFn: (item: T) => R): AsyncIterableObject<R> {\n\t\treturn new AsyncIterableObject<R>(async (emitter) => {\n\t\t\tfor await (const item of iterable) {\n\t\t\t\temitter.emitOne(mapFn(item));\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic map<R>(mapFn: (item: T) => R): AsyncIterableObject<R> {\n\t\treturn AsyncIterableObject.map(this, mapFn);\n\t}\n\n\tpublic static filter<T>(iterable: AsyncIterable<T>, filterFn: (item: T) => boolean): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>(async (emitter) => {\n\t\t\tfor await (const item of iterable) {\n\t\t\t\tif (filterFn(item)) {\n\t\t\t\t\temitter.emitOne(item);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic filter(filterFn: (item: T) => boolean): AsyncIterableObject<T> {\n\t\treturn AsyncIterableObject.filter(this, filterFn);\n\t}\n\n\tpublic static coalesce<T>(iterable: AsyncIterable<T | undefined | null>): AsyncIterableObject<T> {\n\t\treturn <AsyncIterableObject<T>>AsyncIterableObject.filter(iterable, item => !!item);\n\t}\n\n\tpublic coalesce(): AsyncIterableObject<NonNullable<T>> {\n\t\treturn AsyncIterableObject.coalesce(this) as AsyncIterableObject<NonNullable<T>>;\n\t}\n\n\tpublic static async toPromise<T>(iterable: AsyncIterable<T>): Promise<T[]> {\n\t\tconst result: T[] = [];\n\t\tfor await (const item of iterable) {\n\t\t\tresult.push(item);\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic toPromise(): Promise<T[]> {\n\t\treturn AsyncIterableObject.toPromise(this);\n\t}\n\n\t/**\n\t * The value will be appended at the end.\n\t *\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate emitOne(value: T): void {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\t// it is important to add new values at the end,\n\t\t// as we may have iterators already running on the array\n\t\tthis._results.push(value);\n\t\tthis._onStateChanged.fire();\n\t}\n\n\t/**\n\t * The values will be appended at the end.\n\t *\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate emitMany(values: T[]): void {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\t// it is important to add new values at the end,\n\t\t// as we may have iterators already running on the array\n\t\tthis._results = this._results.concat(values);\n\t\tthis._onStateChanged.fire();\n\t}\n\n\t/**\n\t * Calling `resolve()` will mark the result array as complete.\n\t *\n\t * **NOTE** `resolve()` must be called, otherwise all consumers of this iterable will hang indefinitely, similar to a non-resolved promise.\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate resolve(): void {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\tthis._state = AsyncIterableSourceState.DoneOK;\n\t\tthis._onStateChanged.fire();\n\t}\n\n\t/**\n\t * Writing an error will permanently invalidate this iterable.\n\t * The current users will receive an error thrown, as will all future users.\n\t *\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate reject(error: Error) {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\tthis._state = AsyncIterableSourceState.DoneError;\n\t\tthis._error = error;\n\t\tthis._onStateChanged.fire();\n\t}\n}\n\nexport class CancelableAsyncIterableObject<T> extends AsyncIterableObject<T> {\n\tconstructor(\n\t\tprivate readonly _source: CancellationTokenSource,\n\t\texecutor: AyncIterableExecutor<T>\n\t) {\n\t\tsuper(executor);\n\t}\n\n\tcancel(): void {\n\t\tthis._source.cancel();\n\t}\n}\n\nexport function createCancelableAsyncIterable<T>(callback: (token: CancellationToken) => AsyncIterable<T>): CancelableAsyncIterableObject<T> {\n\tconst source = new CancellationTokenSource();\n\tconst innerIterable = callback(source.token);\n\n\treturn new CancelableAsyncIterableObject<T>(source, async (emitter) => {\n\t\tconst subscription = source.token.onCancellationRequested(() => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\temitter.reject(new CancellationError());\n\t\t});\n\t\ttry {\n\t\t\tfor await (const item of innerIterable) {\n\t\t\t\tif (source.token.isCancellationRequested) {\n\t\t\t\t\t// canceled in the meantime\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\temitter.emitOne(item);\n\t\t\t}\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t} catch (err) {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\temitter.reject(err);\n\t\t}\n\t});\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { equals } from 'vs/base/common/arrays';\nimport { isThenable } from 'vs/base/common/async';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { isEqualOrParent } from 'vs/base/common/extpath';\nimport { LRUCache } from 'vs/base/common/map';\nimport { basename, extname, posix, sep } from 'vs/base/common/path';\nimport { isLinux } from 'vs/base/common/platform';\nimport { escapeRegExpCharacters } from 'vs/base/common/strings';\n\nexport interface IRelativePattern {\n\n\t/**\n\t * A base file path to which this pattern will be matched against relatively.\n\t */\n\treadonly base: string;\n\n\t/**\n\t * A file glob pattern like `*.{ts,js}` that will be matched on file paths\n\t * relative to the base path.\n\t *\n\t * Example: Given a base of `/home/work/folder` and a file path of `/home/work/folder/index.js`,\n\t * the file glob pattern will match on `index.js`.\n\t */\n\treadonly pattern: string;\n}\n\nexport interface IExpression {\n\t[pattern: string]: boolean | SiblingClause;\n}\n\nexport function getEmptyExpression(): IExpression {\n\treturn Object.create(null);\n}\n\ninterface SiblingClause {\n\twhen: string;\n}\n\nexport const GLOBSTAR = '**';\nexport const GLOB_SPLIT = '/';\n\nconst PATH_REGEX = '[/\\\\\\\\]';\t\t// any slash or backslash\nconst NO_PATH_REGEX = '[^/\\\\\\\\]';\t// any non-slash and non-backslash\nconst ALL_FORWARD_SLASHES = /\\//g;\n\nfunction starsToRegExp(starCount: number, isLastPattern?: boolean): string {\n\tswitch (starCount) {\n\t\tcase 0:\n\t\t\treturn '';\n\t\tcase 1:\n\t\t\treturn `${NO_PATH_REGEX}*?`; // 1 star matches any number of characters except path separator (/ and \\) - non greedy (?)\n\t\tdefault:\n\t\t\t// Matches:  (Path Sep OR Path Val followed by Path Sep) 0-many times except when it's the last pattern\n\t\t\t//           in which case also matches (Path Sep followed by Path Val)\n\t\t\t// Group is non capturing because we don't need to capture at all (?:...)\n\t\t\t// Overall we use non-greedy matching because it could be that we match too much\n\t\t\treturn `(?:${PATH_REGEX}|${NO_PATH_REGEX}+${PATH_REGEX}${isLastPattern ? `|${PATH_REGEX}${NO_PATH_REGEX}+` : ''})*?`;\n\t}\n}\n\nexport function splitGlobAware(pattern: string, splitChar: string): string[] {\n\tif (!pattern) {\n\t\treturn [];\n\t}\n\n\tconst segments: string[] = [];\n\n\tlet inBraces = false;\n\tlet inBrackets = false;\n\n\tlet curVal = '';\n\tfor (const char of pattern) {\n\t\tswitch (char) {\n\t\t\tcase splitChar:\n\t\t\t\tif (!inBraces && !inBrackets) {\n\t\t\t\t\tsegments.push(curVal);\n\t\t\t\t\tcurVal = '';\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '{':\n\t\t\t\tinBraces = true;\n\t\t\t\tbreak;\n\t\t\tcase '}':\n\t\t\t\tinBraces = false;\n\t\t\t\tbreak;\n\t\t\tcase '[':\n\t\t\t\tinBrackets = true;\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tinBrackets = false;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tcurVal += char;\n\t}\n\n\t// Tail\n\tif (curVal) {\n\t\tsegments.push(curVal);\n\t}\n\n\treturn segments;\n}\n\nfunction parseRegExp(pattern: string): string {\n\tif (!pattern) {\n\t\treturn '';\n\t}\n\n\tlet regEx = '';\n\n\t// Split up into segments for each slash found\n\tconst segments = splitGlobAware(pattern, GLOB_SPLIT);\n\n\t// Special case where we only have globstars\n\tif (segments.every(segment => segment === GLOBSTAR)) {\n\t\tregEx = '.*';\n\t}\n\n\t// Build regex over segments\n\telse {\n\t\tlet previousSegmentWasGlobStar = false;\n\t\tsegments.forEach((segment, index) => {\n\n\t\t\t// Treat globstar specially\n\t\t\tif (segment === GLOBSTAR) {\n\n\t\t\t\t// if we have more than one globstar after another, just ignore it\n\t\t\t\tif (previousSegmentWasGlobStar) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tregEx += starsToRegExp(2, index === segments.length - 1);\n\t\t\t}\n\n\t\t\t// Anything else, not globstar\n\t\t\telse {\n\n\t\t\t\t// States\n\t\t\t\tlet inBraces = false;\n\t\t\t\tlet braceVal = '';\n\n\t\t\t\tlet inBrackets = false;\n\t\t\t\tlet bracketVal = '';\n\n\t\t\t\tfor (const char of segment) {\n\n\t\t\t\t\t// Support brace expansion\n\t\t\t\t\tif (char !== '}' && inBraces) {\n\t\t\t\t\t\tbraceVal += char;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support brackets\n\t\t\t\t\tif (inBrackets && (char !== ']' || !bracketVal) /* ] is literally only allowed as first character in brackets to match it */) {\n\t\t\t\t\t\tlet res: string;\n\n\t\t\t\t\t\t// range operator\n\t\t\t\t\t\tif (char === '-') {\n\t\t\t\t\t\t\tres = char;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// negation operator (only valid on first index in bracket)\n\t\t\t\t\t\telse if ((char === '^' || char === '!') && !bracketVal) {\n\t\t\t\t\t\t\tres = '^';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// glob split matching is not allowed within character ranges\n\t\t\t\t\t\t// see http://man7.org/linux/man-pages/man7/glob.7.html\n\t\t\t\t\t\telse if (char === GLOB_SPLIT) {\n\t\t\t\t\t\t\tres = '';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// anything else gets escaped\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tres = escapeRegExpCharacters(char);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbracketVal += res;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tswitch (char) {\n\t\t\t\t\t\tcase '{':\n\t\t\t\t\t\t\tinBraces = true;\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\tcase '[':\n\t\t\t\t\t\t\tinBrackets = true;\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\tcase '}': {\n\t\t\t\t\t\t\tconst choices = splitGlobAware(braceVal, ',');\n\n\t\t\t\t\t\t\t// Converts {foo,bar} => [foo|bar]\n\t\t\t\t\t\t\tconst braceRegExp = `(?:${choices.map(choice => parseRegExp(choice)).join('|')})`;\n\n\t\t\t\t\t\t\tregEx += braceRegExp;\n\n\t\t\t\t\t\t\tinBraces = false;\n\t\t\t\t\t\t\tbraceVal = '';\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase ']': {\n\t\t\t\t\t\t\tregEx += ('[' + bracketVal + ']');\n\n\t\t\t\t\t\t\tinBrackets = false;\n\t\t\t\t\t\t\tbracketVal = '';\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase '?':\n\t\t\t\t\t\t\tregEx += NO_PATH_REGEX; // 1 ? matches any single character except path separator (/ and \\)\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\tcase '*':\n\t\t\t\t\t\t\tregEx += starsToRegExp(1);\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tregEx += escapeRegExpCharacters(char);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Tail: Add the slash we had split on if there is more to\n\t\t\t\t// come and the remaining pattern is not a globstar\n\t\t\t\t// For example if pattern: some/**/*.js we want the \"/\" after\n\t\t\t\t// some to be included in the RegEx to prevent a folder called\n\t\t\t\t// \"something\" to match as well.\n\t\t\t\tif (\n\t\t\t\t\tindex < segments.length - 1 &&\t\t\t// more segments to come after this\n\t\t\t\t\t(\n\t\t\t\t\t\tsegments[index + 1] !== GLOBSTAR ||\t// next segment is not **, or...\n\t\t\t\t\t\tindex + 2 < segments.length\t\t\t// ...next segment is ** but there is more segments after that\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tregEx += PATH_REGEX;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// update globstar state\n\t\t\tpreviousSegmentWasGlobStar = (segment === GLOBSTAR);\n\t\t});\n\t}\n\n\treturn regEx;\n}\n\n// regexes to check for trivial glob patterns that just check for String#endsWith\nconst T1 = /^\\*\\*\\/\\*\\.[\\w\\.-]+$/; \t\t\t\t\t\t\t\t\t\t\t\t\t// **/*.something\nconst T2 = /^\\*\\*\\/([\\w\\.-]+)\\/?$/; \t\t\t\t\t\t\t\t\t\t\t\t// **/something\nconst T3 = /^{\\*\\*\\/\\*?[\\w\\.-]+\\/?(,\\*\\*\\/\\*?[\\w\\.-]+\\/?)*}$/; \t\t\t\t\t\t// {**/*.something,**/*.else} or {**/package.json,**/project.json}\nconst T3_2 = /^{\\*\\*\\/\\*?[\\w\\.-]+(\\/(\\*\\*)?)?(,\\*\\*\\/\\*?[\\w\\.-]+(\\/(\\*\\*)?)?)*}$/; \t// Like T3, with optional trailing /**\nconst T4 = /^\\*\\*((\\/[\\w\\.-]+)+)\\/?$/; \t\t\t\t\t\t\t\t\t\t\t\t// **/something/else\nconst T5 = /^([\\w\\.-]+(\\/[\\w\\.-]+)*)\\/?$/; \t\t\t\t\t\t\t\t\t\t\t// something/else\n\nexport type ParsedPattern = (path: string, basename?: string) => boolean;\n\n// The `ParsedExpression` returns a `Promise`\n// iff `hasSibling` returns a `Promise`.\nexport type ParsedExpression = (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => string | null | Promise<string | null> /* the matching pattern */;\n\ninterface IGlobOptions {\n\n\t/**\n\t * Simplify patterns for use as exclusion filters during\n\t * tree traversal to skip entire subtrees. Cannot be used\n\t * outside of a tree traversal.\n\t */\n\ttrimForExclusions?: boolean;\n}\n\ninterface ParsedStringPattern {\n\t(path: string, basename?: string): string | null | Promise<string | null> /* the matching pattern */;\n\tbasenames?: string[];\n\tpatterns?: string[];\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\n\ninterface ParsedExpressionPattern {\n\t(path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>): string | null | Promise<string | null> /* the matching pattern */;\n\trequiresSiblings?: boolean;\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\n\nconst CACHE = new LRUCache<string, ParsedStringPattern>(10000); // bounded to 10000 elements\n\nconst FALSE = function () {\n\treturn false;\n};\n\nconst NULL = function (): string | null {\n\treturn null;\n};\n\nfunction parsePattern(arg1: string | IRelativePattern, options: IGlobOptions): ParsedStringPattern {\n\tif (!arg1) {\n\t\treturn NULL;\n\t}\n\n\t// Handle relative patterns\n\tlet pattern: string;\n\tif (typeof arg1 !== 'string') {\n\t\tpattern = arg1.pattern;\n\t} else {\n\t\tpattern = arg1;\n\t}\n\n\t// Whitespace trimming\n\tpattern = pattern.trim();\n\n\t// Check cache\n\tconst patternKey = `${pattern}_${!!options.trimForExclusions}`;\n\tlet parsedPattern = CACHE.get(patternKey);\n\tif (parsedPattern) {\n\t\treturn wrapRelativePattern(parsedPattern, arg1);\n\t}\n\n\t// Check for Trivials\n\tlet match: RegExpExecArray | null;\n\tif (T1.test(pattern)) {\n\t\tparsedPattern = trivia1(pattern.substr(4), pattern); \t\t\t// common pattern: **/*.txt just need endsWith check\n\t} else if (match = T2.exec(trimForExclusions(pattern, options))) { \t// common pattern: **/some.txt just need basename check\n\t\tparsedPattern = trivia2(match[1], pattern);\n\t} else if ((options.trimForExclusions ? T3_2 : T3).test(pattern)) { // repetition of common patterns (see above) {**/*.txt,**/*.png}\n\t\tparsedPattern = trivia3(pattern, options);\n\t} else if (match = T4.exec(trimForExclusions(pattern, options))) { \t// common pattern: **/something/else just need endsWith check\n\t\tparsedPattern = trivia4and5(match[1].substr(1), pattern, true);\n\t} else if (match = T5.exec(trimForExclusions(pattern, options))) { \t// common pattern: something/else just need equals check\n\t\tparsedPattern = trivia4and5(match[1], pattern, false);\n\t}\n\n\t// Otherwise convert to pattern\n\telse {\n\t\tparsedPattern = toRegExp(pattern);\n\t}\n\n\t// Cache\n\tCACHE.set(patternKey, parsedPattern);\n\n\treturn wrapRelativePattern(parsedPattern, arg1);\n}\n\nfunction wrapRelativePattern(parsedPattern: ParsedStringPattern, arg2: string | IRelativePattern): ParsedStringPattern {\n\tif (typeof arg2 === 'string') {\n\t\treturn parsedPattern;\n\t}\n\n\tconst wrappedPattern: ParsedStringPattern = function (path, basename) {\n\t\tif (!isEqualOrParent(path, arg2.base, !isLinux)) {\n\t\t\t// skip glob matching if `base` is not a parent of `path`\n\t\t\treturn null;\n\t\t}\n\n\t\t// Given we have checked `base` being a parent of `path`,\n\t\t// we can now remove the `base` portion of the `path`\n\t\t// and only match on the remaining path components\n\t\treturn parsedPattern(path.substr(arg2.base.length + 1), basename);\n\t};\n\n\t// Make sure to preserve associated metadata\n\twrappedPattern.allBasenames = parsedPattern.allBasenames;\n\twrappedPattern.allPaths = parsedPattern.allPaths;\n\twrappedPattern.basenames = parsedPattern.basenames;\n\twrappedPattern.patterns = parsedPattern.patterns;\n\n\treturn wrappedPattern;\n}\n\nfunction trimForExclusions(pattern: string, options: IGlobOptions): string {\n\treturn options.trimForExclusions && pattern.endsWith('/**') ? pattern.substr(0, pattern.length - 2) : pattern; // dropping **, tailing / is dropped later\n}\n\n// common pattern: **/*.txt just need endsWith check\nfunction trivia1(base: string, pattern: string): ParsedStringPattern {\n\treturn function (path: string, basename?: string) {\n\t\treturn typeof path === 'string' && path.endsWith(base) ? pattern : null;\n\t};\n}\n\n// common pattern: **/some.txt just need basename check\nfunction trivia2(base: string, pattern: string): ParsedStringPattern {\n\tconst slashBase = `/${base}`;\n\tconst backslashBase = `\\\\${base}`;\n\n\tconst parsedPattern: ParsedStringPattern = function (path: string, basename?: string) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (basename) {\n\t\t\treturn basename === base ? pattern : null;\n\t\t}\n\n\t\treturn path === base || path.endsWith(slashBase) || path.endsWith(backslashBase) ? pattern : null;\n\t};\n\n\tconst basenames = [base];\n\tparsedPattern.basenames = basenames;\n\tparsedPattern.patterns = [pattern];\n\tparsedPattern.allBasenames = basenames;\n\n\treturn parsedPattern;\n}\n\n// repetition of common patterns (see above) {**/*.txt,**/*.png}\nfunction trivia3(pattern: string, options: IGlobOptions): ParsedStringPattern {\n\tconst parsedPatterns = aggregateBasenameMatches(pattern.slice(1, -1)\n\t\t.split(',')\n\t\t.map(pattern => parsePattern(pattern, options))\n\t\t.filter(pattern => pattern !== NULL), pattern);\n\n\tconst patternsLength = parsedPatterns.length;\n\tif (!patternsLength) {\n\t\treturn NULL;\n\t}\n\n\tif (patternsLength === 1) {\n\t\treturn parsedPatterns[0];\n\t}\n\n\tconst parsedPattern: ParsedStringPattern = function (path: string, basename?: string) {\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\tif (parsedPatterns[i](path, basename)) {\n\t\t\t\treturn pattern;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tconst withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n\tif (withBasenames) {\n\t\tparsedPattern.allBasenames = withBasenames.allBasenames;\n\t}\n\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, [] as string[]);\n\tif (allPaths.length) {\n\t\tparsedPattern.allPaths = allPaths;\n\t}\n\n\treturn parsedPattern;\n}\n\n// common patterns: **/something/else just need endsWith check, something/else just needs and equals check\nfunction trivia4and5(targetPath: string, pattern: string, matchPathEnds: boolean): ParsedStringPattern {\n\tconst usingPosixSep = sep === posix.sep;\n\tconst nativePath = usingPosixSep ? targetPath : targetPath.replace(ALL_FORWARD_SLASHES, sep);\n\tconst nativePathEnd = sep + nativePath;\n\tconst targetPathEnd = posix.sep + targetPath;\n\n\tlet parsedPattern: ParsedStringPattern;\n\tif (matchPathEnds) {\n\t\tparsedPattern = function (path: string, basename?: string) {\n\t\t\treturn typeof path === 'string' && ((path === nativePath || path.endsWith(nativePathEnd)) || !usingPosixSep && (path === targetPath || path.endsWith(targetPathEnd))) ? pattern : null;\n\t\t};\n\t} else {\n\t\tparsedPattern = function (path: string, basename?: string) {\n\t\t\treturn typeof path === 'string' && (path === nativePath || (!usingPosixSep && path === targetPath)) ? pattern : null;\n\t\t};\n\t}\n\n\tparsedPattern.allPaths = [(matchPathEnds ? '*/' : './') + targetPath];\n\n\treturn parsedPattern;\n}\n\nfunction toRegExp(pattern: string): ParsedStringPattern {\n\ttry {\n\t\tconst regExp = new RegExp(`^${parseRegExp(pattern)}$`);\n\t\treturn function (path: string) {\n\t\t\tregExp.lastIndex = 0; // reset RegExp to its initial state to reuse it!\n\n\t\t\treturn typeof path === 'string' && regExp.test(path) ? pattern : null;\n\t\t};\n\t} catch (error) {\n\t\treturn NULL;\n\t}\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * * `*` to match zero or more characters in a path segment\n * * `?` to match on one character in a path segment\n * * `**` to match any number of path segments, including none\n * * `{}` to group conditions (e.g. *.{ts,js} matches all TypeScript and JavaScript files)\n * * `[]` to declare a range of characters to match in a path segment (e.g., `example.[0-9]` to match on `example.0`, `example.1`, …)\n * * `[!...]` to negate a range of characters to match in a path segment (e.g., `example.[!0-9]` to match on `example.a`, `example.b`, but not `example.0`)\n */\nexport function match(pattern: string | IRelativePattern, path: string): boolean;\nexport function match(expression: IExpression, path: string, hasSibling?: (name: string) => boolean): string /* the matching pattern */;\nexport function match(arg1: string | IExpression | IRelativePattern, path: string, hasSibling?: (name: string) => boolean): boolean | string | null | Promise<string | null> {\n\tif (!arg1 || typeof path !== 'string') {\n\t\treturn false;\n\t}\n\n\treturn parse(arg1)(path, undefined, hasSibling);\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * * `*` to match zero or more characters in a path segment\n * * `?` to match on one character in a path segment\n * * `**` to match any number of path segments, including none\n * * `{}` to group conditions (e.g. *.{ts,js} matches all TypeScript and JavaScript files)\n * * `[]` to declare a range of characters to match in a path segment (e.g., `example.[0-9]` to match on `example.0`, `example.1`, …)\n * * `[!...]` to negate a range of characters to match in a path segment (e.g., `example.[!0-9]` to match on `example.a`, `example.b`, but not `example.0`)\n */\nexport function parse(pattern: string | IRelativePattern, options?: IGlobOptions): ParsedPattern;\nexport function parse(expression: IExpression, options?: IGlobOptions): ParsedExpression;\nexport function parse(arg1: string | IExpression | IRelativePattern, options?: IGlobOptions): ParsedPattern | ParsedExpression;\nexport function parse(arg1: string | IExpression | IRelativePattern, options: IGlobOptions = {}): ParsedPattern | ParsedExpression {\n\tif (!arg1) {\n\t\treturn FALSE;\n\t}\n\n\t// Glob with String\n\tif (typeof arg1 === 'string' || isRelativePattern(arg1)) {\n\t\tconst parsedPattern = parsePattern(arg1, options);\n\t\tif (parsedPattern === NULL) {\n\t\t\treturn FALSE;\n\t\t}\n\n\t\tconst resultPattern: ParsedPattern & { allBasenames?: string[]; allPaths?: string[] } = function (path: string, basename?: string) {\n\t\t\treturn !!parsedPattern(path, basename);\n\t\t};\n\n\t\tif (parsedPattern.allBasenames) {\n\t\t\tresultPattern.allBasenames = parsedPattern.allBasenames;\n\t\t}\n\n\t\tif (parsedPattern.allPaths) {\n\t\t\tresultPattern.allPaths = parsedPattern.allPaths;\n\t\t}\n\n\t\treturn resultPattern;\n\t}\n\n\t// Glob with Expression\n\treturn parsedExpression(<IExpression>arg1, options);\n}\n\nexport function isRelativePattern(obj: unknown): obj is IRelativePattern {\n\tconst rp = obj as IRelativePattern | undefined | null;\n\tif (!rp) {\n\t\treturn false;\n\t}\n\n\treturn typeof rp.base === 'string' && typeof rp.pattern === 'string';\n}\n\nexport function getBasenameTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allBasenames || [];\n}\n\nexport function getPathTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allPaths || [];\n}\n\nfunction parsedExpression(expression: IExpression, options: IGlobOptions): ParsedExpression {\n\tconst parsedPatterns = aggregateBasenameMatches(Object.getOwnPropertyNames(expression)\n\t\t.map(pattern => parseExpressionPattern(pattern, expression[pattern], options))\n\t\t.filter(pattern => pattern !== NULL));\n\n\tconst patternsLength = parsedPatterns.length;\n\tif (!patternsLength) {\n\t\treturn NULL;\n\t}\n\n\tif (!parsedPatterns.some(parsedPattern => !!(<ParsedExpressionPattern>parsedPattern).requiresSiblings)) {\n\t\tif (patternsLength === 1) {\n\t\t\treturn parsedPatterns[0] as ParsedStringPattern;\n\t\t}\n\n\t\tconst resultExpression: ParsedStringPattern = function (path: string, basename?: string) {\n\t\t\tlet resultPromises: Promise<string | null>[] | undefined = undefined;\n\n\t\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t\tconst result = parsedPatterns[i](path, basename);\n\t\t\t\tif (typeof result === 'string') {\n\t\t\t\t\treturn result; // immediately return as soon as the first expression matches\n\t\t\t\t}\n\n\t\t\t\t// If the result is a promise, we have to keep it for\n\t\t\t\t// later processing and await the result properly.\n\t\t\t\tif (isThenable(result)) {\n\t\t\t\t\tif (!resultPromises) {\n\t\t\t\t\t\tresultPromises = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tresultPromises.push(result);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// With result promises, we have to loop over each and\n\t\t\t// await the result before we can return any result.\n\t\t\tif (resultPromises) {\n\t\t\t\treturn (async () => {\n\t\t\t\t\tfor (const resultPromise of resultPromises) {\n\t\t\t\t\t\tconst result = await resultPromise;\n\t\t\t\t\t\tif (typeof result === 'string') {\n\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn null;\n\t\t\t\t})();\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\tconst withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n\t\tif (withBasenames) {\n\t\t\tresultExpression.allBasenames = withBasenames.allBasenames;\n\t\t}\n\n\t\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, [] as string[]);\n\t\tif (allPaths.length) {\n\t\t\tresultExpression.allPaths = allPaths;\n\t\t}\n\n\t\treturn resultExpression;\n\t}\n\n\tconst resultExpression: ParsedStringPattern = function (path: string, base?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) {\n\t\tlet name: string | undefined = undefined;\n\t\tlet resultPromises: Promise<string | null>[] | undefined = undefined;\n\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\n\t\t\t// Pattern matches path\n\t\t\tconst parsedPattern = (<ParsedExpressionPattern>parsedPatterns[i]);\n\t\t\tif (parsedPattern.requiresSiblings && hasSibling) {\n\t\t\t\tif (!base) {\n\t\t\t\t\tbase = basename(path);\n\t\t\t\t}\n\n\t\t\t\tif (!name) {\n\t\t\t\t\tname = base.substr(0, base.length - extname(path).length);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst result = parsedPattern(path, base, name, hasSibling);\n\t\t\tif (typeof result === 'string') {\n\t\t\t\treturn result; // immediately return as soon as the first expression matches\n\t\t\t}\n\n\t\t\t// If the result is a promise, we have to keep it for\n\t\t\t// later processing and await the result properly.\n\t\t\tif (isThenable(result)) {\n\t\t\t\tif (!resultPromises) {\n\t\t\t\t\tresultPromises = [];\n\t\t\t\t}\n\n\t\t\t\tresultPromises.push(result);\n\t\t\t}\n\t\t}\n\n\t\t// With result promises, we have to loop over each and\n\t\t// await the result before we can return any result.\n\t\tif (resultPromises) {\n\t\t\treturn (async () => {\n\t\t\t\tfor (const resultPromise of resultPromises) {\n\t\t\t\t\tconst result = await resultPromise;\n\t\t\t\t\tif (typeof result === 'string') {\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t})();\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tconst withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n\tif (withBasenames) {\n\t\tresultExpression.allBasenames = withBasenames.allBasenames;\n\t}\n\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, [] as string[]);\n\tif (allPaths.length) {\n\t\tresultExpression.allPaths = allPaths;\n\t}\n\n\treturn resultExpression;\n}\n\nfunction parseExpressionPattern(pattern: string, value: boolean | SiblingClause, options: IGlobOptions): (ParsedStringPattern | ParsedExpressionPattern) {\n\tif (value === false) {\n\t\treturn NULL; // pattern is disabled\n\t}\n\n\tconst parsedPattern = parsePattern(pattern, options);\n\tif (parsedPattern === NULL) {\n\t\treturn NULL;\n\t}\n\n\t// Expression Pattern is <boolean>\n\tif (typeof value === 'boolean') {\n\t\treturn parsedPattern;\n\t}\n\n\t// Expression Pattern is <SiblingClause>\n\tif (value) {\n\t\tconst when = value.when;\n\t\tif (typeof when === 'string') {\n\t\t\tconst result: ParsedExpressionPattern = (path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => {\n\t\t\t\tif (!hasSibling || !parsedPattern(path, basename)) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst clausePattern = when.replace('$(basename)', name!);\n\t\t\t\tconst matched = hasSibling(clausePattern);\n\t\t\t\treturn isThenable(matched) ?\n\t\t\t\t\tmatched.then(match => match ? pattern : null) :\n\t\t\t\t\tmatched ? pattern : null;\n\t\t\t};\n\n\t\t\tresult.requiresSiblings = true;\n\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t// Expression is anything\n\treturn parsedPattern;\n}\n\nfunction aggregateBasenameMatches(parsedPatterns: Array<ParsedStringPattern | ParsedExpressionPattern>, result?: string): Array<ParsedStringPattern | ParsedExpressionPattern> {\n\tconst basenamePatterns = parsedPatterns.filter(parsedPattern => !!(<ParsedStringPattern>parsedPattern).basenames);\n\tif (basenamePatterns.length < 2) {\n\t\treturn parsedPatterns;\n\t}\n\n\tconst basenames = basenamePatterns.reduce<string[]>((all, current) => {\n\t\tconst basenames = (<ParsedStringPattern>current).basenames;\n\n\t\treturn basenames ? all.concat(basenames) : all;\n\t}, [] as string[]);\n\n\tlet patterns: string[];\n\tif (result) {\n\t\tpatterns = [];\n\n\t\tfor (let i = 0, n = basenames.length; i < n; i++) {\n\t\t\tpatterns.push(result);\n\t\t}\n\t} else {\n\t\tpatterns = basenamePatterns.reduce((all, current) => {\n\t\t\tconst patterns = (<ParsedStringPattern>current).patterns;\n\n\t\t\treturn patterns ? all.concat(patterns) : all;\n\t\t}, [] as string[]);\n\t}\n\n\tconst aggregate: ParsedStringPattern = function (path: string, basename?: string) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!basename) {\n\t\t\tlet i: number;\n\t\t\tfor (i = path.length; i > 0; i--) {\n\t\t\t\tconst ch = path.charCodeAt(i - 1);\n\t\t\t\tif (ch === CharCode.Slash || ch === CharCode.Backslash) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbasename = path.substr(i);\n\t\t}\n\n\t\tconst index = basenames.indexOf(basename);\n\t\treturn index !== -1 ? patterns[index] : null;\n\t};\n\n\taggregate.basenames = basenames;\n\taggregate.patterns = patterns;\n\taggregate.allBasenames = basenames;\n\n\tconst aggregatedPatterns = parsedPatterns.filter(parsedPattern => !(<ParsedStringPattern>parsedPattern).basenames);\n\taggregatedPatterns.push(aggregate);\n\n\treturn aggregatedPatterns;\n}\n\nexport function patternsEquals(patternsA: Array<string | IRelativePattern> | undefined, patternsB: Array<string | IRelativePattern> | undefined): boolean {\n\treturn equals(patternsA, patternsB, (a, b) => {\n\t\tif (typeof a === 'string' && typeof b === 'string') {\n\t\t\treturn a === b;\n\t\t}\n\n\t\tif (typeof a !== 'string' && typeof b !== 'string') {\n\t\t\treturn a.base === b.base && a.pattern === b.pattern;\n\t\t}\n\n\t\treturn false;\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { illegalArgument } from 'vs/base/common/errors';\nimport { escapeIcons } from 'vs/base/common/iconLabels';\nimport { isEqual } from 'vs/base/common/resources';\nimport { escapeRegExpCharacters } from 'vs/base/common/strings';\nimport { URI, UriComponents } from 'vs/base/common/uri';\n\nexport interface IMarkdownString {\n\treadonly value: string;\n\treadonly isTrusted?: boolean;\n\treadonly supportThemeIcons?: boolean;\n\treadonly supportHtml?: boolean;\n\treadonly baseUri?: UriComponents;\n\turis?: { [href: string]: UriComponents };\n}\n\nexport const enum MarkdownStringTextNewlineStyle {\n\tParagraph = 0,\n\tBreak = 1,\n}\n\nexport class MarkdownString implements IMarkdownString {\n\n\tpublic value: string;\n\tpublic isTrusted?: boolean;\n\tpublic supportThemeIcons?: boolean;\n\tpublic supportHtml?: boolean;\n\tpublic baseUri?: URI;\n\n\tconstructor(\n\t\tvalue: string = '',\n\t\tisTrustedOrOptions: boolean | { isTrusted?: boolean; supportThemeIcons?: boolean; supportHtml?: boolean } = false,\n\t) {\n\t\tthis.value = value;\n\t\tif (typeof this.value !== 'string') {\n\t\t\tthrow illegalArgument('value');\n\t\t}\n\n\t\tif (typeof isTrustedOrOptions === 'boolean') {\n\t\t\tthis.isTrusted = isTrustedOrOptions;\n\t\t\tthis.supportThemeIcons = false;\n\t\t\tthis.supportHtml = false;\n\t\t}\n\t\telse {\n\t\t\tthis.isTrusted = isTrustedOrOptions.isTrusted ?? undefined;\n\t\t\tthis.supportThemeIcons = isTrustedOrOptions.supportThemeIcons ?? false;\n\t\t\tthis.supportHtml = isTrustedOrOptions.supportHtml ?? false;\n\t\t}\n\t}\n\n\tappendText(value: string, newlineStyle: MarkdownStringTextNewlineStyle = MarkdownStringTextNewlineStyle.Paragraph): MarkdownString {\n\t\tthis.value += escapeMarkdownSyntaxTokens(this.supportThemeIcons ? escapeIcons(value) : value)\n\t\t\t.replace(/([ \\t]+)/g, (_match, g1) => '&nbsp;'.repeat(g1.length))\n\t\t\t.replace(/\\>/gm, '\\\\>')\n\t\t\t.replace(/\\n/g, newlineStyle === MarkdownStringTextNewlineStyle.Break ? '\\\\\\n' : '\\n\\n');\n\n\t\treturn this;\n\t}\n\n\tappendMarkdown(value: string): MarkdownString {\n\t\tthis.value += value;\n\t\treturn this;\n\t}\n\n\tappendCodeblock(langId: string, code: string): MarkdownString {\n\t\tthis.value += '\\n```';\n\t\tthis.value += langId;\n\t\tthis.value += '\\n';\n\t\tthis.value += code;\n\t\tthis.value += '\\n```\\n';\n\t\treturn this;\n\t}\n\n\tappendLink(target: URI | string, label: string, title?: string): MarkdownString {\n\t\tthis.value += '[';\n\t\tthis.value += this._escape(label, ']');\n\t\tthis.value += '](';\n\t\tthis.value += this._escape(String(target), ')');\n\t\tif (title) {\n\t\t\tthis.value += ` \"${this._escape(this._escape(title, '\"'), ')')}\"`;\n\t\t}\n\t\tthis.value += ')';\n\t\treturn this;\n\t}\n\n\tprivate _escape(value: string, ch: string): string {\n\t\tconst r = new RegExp(escapeRegExpCharacters(ch), 'g');\n\t\treturn value.replace(r, (match, offset) => {\n\t\t\tif (value.charAt(offset - 1) !== '\\\\') {\n\t\t\t\treturn `\\\\${match}`;\n\t\t\t} else {\n\t\t\t\treturn match;\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function isEmptyMarkdownString(oneOrMany: IMarkdownString | IMarkdownString[] | null | undefined): boolean {\n\tif (isMarkdownString(oneOrMany)) {\n\t\treturn !oneOrMany.value;\n\t} else if (Array.isArray(oneOrMany)) {\n\t\treturn oneOrMany.every(isEmptyMarkdownString);\n\t} else {\n\t\treturn true;\n\t}\n}\n\nexport function isMarkdownString(thing: any): thing is IMarkdownString {\n\tif (thing instanceof MarkdownString) {\n\t\treturn true;\n\t} else if (thing && typeof thing === 'object') {\n\t\treturn typeof (<IMarkdownString>thing).value === 'string'\n\t\t\t&& (typeof (<IMarkdownString>thing).isTrusted === 'boolean' || (<IMarkdownString>thing).isTrusted === undefined)\n\t\t\t&& (typeof (<IMarkdownString>thing).supportThemeIcons === 'boolean' || (<IMarkdownString>thing).supportThemeIcons === undefined);\n\t}\n\treturn false;\n}\n\nexport function markdownStringEqual(a: IMarkdownString, b: IMarkdownString): boolean {\n\tif (a === b) {\n\t\treturn true;\n\t} else if (!a || !b) {\n\t\treturn false;\n\t} else {\n\t\treturn a.value === b.value\n\t\t\t&& a.isTrusted === b.isTrusted\n\t\t\t&& a.supportThemeIcons === b.supportThemeIcons\n\t\t\t&& a.supportHtml === b.supportHtml\n\t\t\t&& (a.baseUri === b.baseUri || !!a.baseUri && !!b.baseUri && isEqual(URI.from(a.baseUri), URI.from(b.baseUri)));\n\t}\n}\n\nexport function escapeMarkdownSyntaxTokens(text: string): string {\n\t// escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n\treturn text.replace(/[\\\\`*_{}[\\]()#+\\-!]/g, '\\\\$&');\n}\n\nexport function escapeDoubleQuotes(input: string) {\n\treturn input.replace(/\"/g, '&quot;');\n}\n\nexport function removeMarkdownEscapes(text: string): string {\n\tif (!text) {\n\t\treturn text;\n\t}\n\treturn text.replace(/\\\\([\\\\`*_{}[\\]()#+\\-.!])/g, '$1');\n}\n\nexport function parseHrefAndDimensions(href: string): { href: string; dimensions: string[] } {\n\tconst dimensions: string[] = [];\n\tconst splitted = href.split('|').map(s => s.trim());\n\thref = splitted[0];\n\tconst parameters = splitted[1];\n\tif (parameters) {\n\t\tconst heightFromParams = /height=(\\d+)/.exec(parameters);\n\t\tconst widthFromParams = /width=(\\d+)/.exec(parameters);\n\t\tconst height = heightFromParams ? heightFromParams[1] : '';\n\t\tconst width = widthFromParams ? widthFromParams[1] : '';\n\t\tconst widthIsFinite = isFinite(parseInt(width));\n\t\tconst heightIsFinite = isFinite(parseInt(height));\n\t\tif (widthIsFinite) {\n\t\t\tdimensions.push(`width=\"${width}\"`);\n\t\t}\n\t\tif (heightIsFinite) {\n\t\t\tdimensions.push(`height=\"${height}\"`);\n\t\t}\n\t}\n\treturn { href, dimensions };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { firstOrDefault } from 'vs/base/common/arrays';\nimport { hasDriveLetter, toSlashes } from 'vs/base/common/extpath';\nimport { posix, sep, win32 } from 'vs/base/common/path';\nimport { isMacintosh, isWindows, OperatingSystem, OS } from 'vs/base/common/platform';\nimport { extUri, extUriIgnorePathCase } from 'vs/base/common/resources';\nimport { rtrim, startsWithIgnoreCase } from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\n\nexport interface IPathLabelFormatting {\n\n\t/**\n\t * The OS the path label is from to produce a label\n\t * that matches OS expectations.\n\t */\n\treadonly os: OperatingSystem;\n\n\t/**\n\t * Whether to add a `~` when the path is in the\n\t * user home directory.\n\t *\n\t * Note: this only applies to Linux, macOS but not\n\t * Windows.\n\t */\n\treadonly tildify?: IUserHomeProvider;\n\n\t/**\n\t * Whether to convert to a relative path if the path\n\t * is within any of the opened workspace folders.\n\t */\n\treadonly relative?: IRelativePathProvider;\n}\n\nexport interface IRelativePathProvider {\n\n\t/**\n\t * Whether to not add a prefix when in multi-root workspace.\n\t */\n\treadonly noPrefix?: boolean;\n\n\tgetWorkspace(): { folders: { uri: URI; name?: string }[] };\n\tgetWorkspaceFolder(resource: URI): { uri: URI; name?: string } | null;\n}\n\nexport interface IUserHomeProvider {\n\tuserHome: URI;\n}\n\nexport function getPathLabel(resource: URI, formatting: IPathLabelFormatting): string {\n\tconst { os, tildify: tildifier, relative: relatifier } = formatting;\n\n\t// return early with a relative path if we can resolve one\n\tif (relatifier) {\n\t\tconst relativePath = getRelativePathLabel(resource, relatifier, os);\n\t\tif (typeof relativePath === 'string') {\n\t\t\treturn relativePath;\n\t\t}\n\t}\n\n\t// otherwise try to resolve a absolute path label and\n\t// apply target OS standard path separators if target\n\t// OS differs from actual OS we are running in\n\tlet absolutePath = resource.fsPath;\n\tif (os === OperatingSystem.Windows && !isWindows) {\n\t\tabsolutePath = absolutePath.replace(/\\//g, '\\\\');\n\t} else if (os !== OperatingSystem.Windows && isWindows) {\n\t\tabsolutePath = absolutePath.replace(/\\\\/g, '/');\n\t}\n\n\t// macOS/Linux: tildify with provided user home directory\n\tif (os !== OperatingSystem.Windows && tildifier?.userHome) {\n\t\tconst userHome = tildifier.userHome.fsPath;\n\n\t\t// This is a bit of a hack, but in order to figure out if the\n\t\t// resource is in the user home, we need to make sure to convert it\n\t\t// to a user home resource. We cannot assume that the resource is\n\t\t// already a user home resource.\n\t\tlet userHomeCandidate: string;\n\t\tif (resource.scheme !== tildifier.userHome.scheme && resource.path.startsWith(posix.sep)) {\n\t\t\tuserHomeCandidate = tildifier.userHome.with({ path: resource.path }).fsPath;\n\t\t} else {\n\t\t\tuserHomeCandidate = resource.fsPath;\n\t\t}\n\n\t\tabsolutePath = tildify(userHomeCandidate, userHome, os);\n\t}\n\n\t// normalize\n\tconst pathLib = os === OperatingSystem.Windows ? win32 : posix;\n\treturn pathLib.normalize(normalizeDriveLetter(absolutePath, os === OperatingSystem.Windows));\n}\n\nfunction getRelativePathLabel(resource: URI, relativePathProvider: IRelativePathProvider, os: OperatingSystem): string | undefined {\n\tconst pathLib = os === OperatingSystem.Windows ? win32 : posix;\n\tconst extUriLib = os === OperatingSystem.Linux ? extUri : extUriIgnorePathCase;\n\n\tconst workspace = relativePathProvider.getWorkspace();\n\tconst firstFolder = firstOrDefault(workspace.folders);\n\tif (!firstFolder) {\n\t\treturn undefined;\n\t}\n\n\t// This is a bit of a hack, but in order to figure out the folder\n\t// the resource belongs to, we need to make sure to convert it\n\t// to a workspace resource. We cannot assume that the resource is\n\t// already matching the workspace.\n\tif (resource.scheme !== firstFolder.uri.scheme && resource.path.startsWith(posix.sep)) {\n\t\tresource = firstFolder.uri.with({ path: resource.path });\n\t}\n\n\tconst folder = relativePathProvider.getWorkspaceFolder(resource);\n\tif (!folder) {\n\t\treturn undefined;\n\t}\n\n\tlet relativePathLabel: string | undefined = undefined;\n\tif (extUriLib.isEqual(folder.uri, resource)) {\n\t\trelativePathLabel = ''; // no label if paths are identical\n\t} else {\n\t\trelativePathLabel = extUriLib.relativePath(folder.uri, resource) ?? '';\n\t}\n\n\t// normalize\n\tif (relativePathLabel) {\n\t\trelativePathLabel = pathLib.normalize(relativePathLabel);\n\t}\n\n\t// always show root basename if there are multiple folders\n\tif (workspace.folders.length > 1 && !relativePathProvider.noPrefix) {\n\t\tconst rootName = folder.name ? folder.name : extUriLib.basenameOrAuthority(folder.uri);\n\t\trelativePathLabel = relativePathLabel ? `${rootName} • ${relativePathLabel}` : rootName;\n\t}\n\n\treturn relativePathLabel;\n}\n\nexport function normalizeDriveLetter(path: string, isWindowsOS: boolean = isWindows): string {\n\tif (hasDriveLetter(path, isWindowsOS)) {\n\t\treturn path.charAt(0).toUpperCase() + path.slice(1);\n\t}\n\n\treturn path;\n}\n\nlet normalizedUserHomeCached: { original: string; normalized: string } = Object.create(null);\nexport function tildify(path: string, userHome: string, os = OS): string {\n\tif (os === OperatingSystem.Windows || !path || !userHome) {\n\t\treturn path; // unsupported on Windows\n\t}\n\n\tlet normalizedUserHome = normalizedUserHomeCached.original === userHome ? normalizedUserHomeCached.normalized : undefined;\n\tif (!normalizedUserHome) {\n\t\tnormalizedUserHome = userHome;\n\t\tif (isWindows) {\n\t\t\tnormalizedUserHome = toSlashes(normalizedUserHome); // make sure that the path is POSIX normalized on Windows\n\t\t}\n\t\tnormalizedUserHome = `${rtrim(normalizedUserHome, posix.sep)}${posix.sep}`;\n\t\tnormalizedUserHomeCached = { original: userHome, normalized: normalizedUserHome };\n\t}\n\n\tlet normalizedPath = path;\n\tif (isWindows) {\n\t\tnormalizedPath = toSlashes(normalizedPath); // make sure that the path is POSIX normalized on Windows\n\t}\n\n\t// Linux: case sensitive, macOS: case insensitive\n\tif (os === OperatingSystem.Linux ? normalizedPath.startsWith(normalizedUserHome) : startsWithIgnoreCase(normalizedPath, normalizedUserHome)) {\n\t\treturn `~/${normalizedPath.substr(normalizedUserHome.length)}`;\n\t}\n\n\treturn path;\n}\n\nexport function untildify(path: string, userHome: string): string {\n\treturn path.replace(/^~($|\\/|\\\\)/, `${userHome}$1`);\n}\n\n/**\n * Shortens the paths but keeps them easy to distinguish.\n * Replaces not important parts with ellipsis.\n * Every shorten path matches only one original path and vice versa.\n *\n * Algorithm for shortening paths is as follows:\n * 1. For every path in list, find unique substring of that path.\n * 2. Unique substring along with ellipsis is shortened path of that path.\n * 3. To find unique substring of path, consider every segment of length from 1 to path.length of path from end of string\n *    and if present segment is not substring to any other paths then present segment is unique path,\n *    else check if it is not present as suffix of any other path and present segment is suffix of path itself,\n *    if it is true take present segment as unique path.\n * 4. Apply ellipsis to unique segment according to whether segment is present at start/in-between/end of path.\n *\n * Example 1\n * 1. consider 2 paths i.e. ['a\\\\b\\\\c\\\\d', 'a\\\\f\\\\b\\\\c\\\\d']\n * 2. find unique path of first path,\n * \ta. 'd' is present in path2 and is suffix of path2, hence not unique of present path.\n * \tb. 'c' is present in path2 and 'c' is not suffix of present path, similarly for 'b' and 'a' also.\n * \tc. 'd\\\\c' is suffix of path2.\n *  d. 'b\\\\c' is not suffix of present path.\n *  e. 'a\\\\b' is not present in path2, hence unique path is 'a\\\\b...'.\n * 3. for path2, 'f' is not present in path1 hence unique is '...\\\\f\\\\...'.\n *\n * Example 2\n * 1. consider 2 paths i.e. ['a\\\\b', 'a\\\\b\\\\c'].\n * \ta. Even if 'b' is present in path2, as 'b' is suffix of path1 and is not suffix of path2, unique path will be '...\\\\b'.\n * 2. for path2, 'c' is not present in path1 hence unique path is '..\\\\c'.\n */\nconst ellipsis = '\\u2026';\nconst unc = '\\\\\\\\';\nconst home = '~';\nexport function shorten(paths: string[], pathSeparator: string = sep): string[] {\n\tconst shortenedPaths: string[] = new Array(paths.length);\n\n\t// for every path\n\tlet match = false;\n\tfor (let pathIndex = 0; pathIndex < paths.length; pathIndex++) {\n\t\tconst originalPath = paths[pathIndex];\n\n\t\tif (originalPath === '') {\n\t\t\tshortenedPaths[pathIndex] = `.${pathSeparator}`;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!originalPath) {\n\t\t\tshortenedPaths[pathIndex] = originalPath;\n\t\t\tcontinue;\n\t\t}\n\n\t\tmatch = true;\n\n\t\t// trim for now and concatenate unc path (e.g. \\\\network) or root path (/etc, ~/etc) later\n\t\tlet prefix = '';\n\t\tlet trimmedPath = originalPath;\n\t\tif (trimmedPath.indexOf(unc) === 0) {\n\t\t\tprefix = trimmedPath.substr(0, trimmedPath.indexOf(unc) + unc.length);\n\t\t\ttrimmedPath = trimmedPath.substr(trimmedPath.indexOf(unc) + unc.length);\n\t\t} else if (trimmedPath.indexOf(pathSeparator) === 0) {\n\t\t\tprefix = trimmedPath.substr(0, trimmedPath.indexOf(pathSeparator) + pathSeparator.length);\n\t\t\ttrimmedPath = trimmedPath.substr(trimmedPath.indexOf(pathSeparator) + pathSeparator.length);\n\t\t} else if (trimmedPath.indexOf(home) === 0) {\n\t\t\tprefix = trimmedPath.substr(0, trimmedPath.indexOf(home) + home.length);\n\t\t\ttrimmedPath = trimmedPath.substr(trimmedPath.indexOf(home) + home.length);\n\t\t}\n\n\t\t// pick the first shortest subpath found\n\t\tconst segments: string[] = trimmedPath.split(pathSeparator);\n\t\tfor (let subpathLength = 1; match && subpathLength <= segments.length; subpathLength++) {\n\t\t\tfor (let start = segments.length - subpathLength; match && start >= 0; start--) {\n\t\t\t\tmatch = false;\n\t\t\t\tlet subpath = segments.slice(start, start + subpathLength).join(pathSeparator);\n\n\t\t\t\t// that is unique to any other path\n\t\t\t\tfor (let otherPathIndex = 0; !match && otherPathIndex < paths.length; otherPathIndex++) {\n\n\t\t\t\t\t// suffix subpath treated specially as we consider no match 'x' and 'x/...'\n\t\t\t\t\tif (otherPathIndex !== pathIndex && paths[otherPathIndex] && paths[otherPathIndex].indexOf(subpath) > -1) {\n\t\t\t\t\t\tconst isSubpathEnding: boolean = (start + subpathLength === segments.length);\n\n\t\t\t\t\t\t// Adding separator as prefix for subpath, such that 'endsWith(src, trgt)' considers subpath as directory name instead of plain string.\n\t\t\t\t\t\t// prefix is not added when either subpath is root directory or path[otherPathIndex] does not have multiple directories.\n\t\t\t\t\t\tconst subpathWithSep: string = (start > 0 && paths[otherPathIndex].indexOf(pathSeparator) > -1) ? pathSeparator + subpath : subpath;\n\t\t\t\t\t\tconst isOtherPathEnding: boolean = paths[otherPathIndex].endsWith(subpathWithSep);\n\n\t\t\t\t\t\tmatch = !isSubpathEnding || isOtherPathEnding;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// found unique subpath\n\t\t\t\tif (!match) {\n\t\t\t\t\tlet result = '';\n\n\t\t\t\t\t// preserve disk drive or root prefix\n\t\t\t\t\tif (segments[0].endsWith(':') || prefix !== '') {\n\t\t\t\t\t\tif (start === 1) {\n\t\t\t\t\t\t\t// extend subpath to include disk drive prefix\n\t\t\t\t\t\t\tstart = 0;\n\t\t\t\t\t\t\tsubpathLength++;\n\t\t\t\t\t\t\tsubpath = segments[0] + pathSeparator + subpath;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (start > 0) {\n\t\t\t\t\t\t\tresult = segments[0] + pathSeparator;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresult = prefix + result;\n\t\t\t\t\t}\n\n\t\t\t\t\t// add ellipsis at the beginning if needed\n\t\t\t\t\tif (start > 0) {\n\t\t\t\t\t\tresult = result + ellipsis + pathSeparator;\n\t\t\t\t\t}\n\n\t\t\t\t\tresult = result + subpath;\n\n\t\t\t\t\t// add ellipsis at the end if needed\n\t\t\t\t\tif (start + subpathLength < segments.length) {\n\t\t\t\t\t\tresult = result + pathSeparator + ellipsis;\n\t\t\t\t\t}\n\n\t\t\t\t\tshortenedPaths[pathIndex] = result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (match) {\n\t\t\tshortenedPaths[pathIndex] = originalPath; // use original path if no unique subpaths found\n\t\t}\n\t}\n\n\treturn shortenedPaths;\n}\n\nexport interface ISeparator {\n\tlabel: string;\n}\n\nenum Type {\n\tTEXT,\n\tVARIABLE,\n\tSEPARATOR\n}\n\ninterface ISegment {\n\tvalue: string;\n\ttype: Type;\n}\n\n/**\n * Helper to insert values for specific template variables into the string. E.g. \"this $(is) a $(template)\" can be\n * passed to this function together with an object that maps \"is\" and \"template\" to strings to have them replaced.\n * @param value string to which template is applied\n * @param values the values of the templates to use\n */\nexport function template(template: string, values: { [key: string]: string | ISeparator | undefined | null } = Object.create(null)): string {\n\tconst segments: ISegment[] = [];\n\n\tlet inVariable = false;\n\tlet curVal = '';\n\tfor (const char of template) {\n\t\t// Beginning of variable\n\t\tif (char === '$' || (inVariable && char === '{')) {\n\t\t\tif (curVal) {\n\t\t\t\tsegments.push({ value: curVal, type: Type.TEXT });\n\t\t\t}\n\n\t\t\tcurVal = '';\n\t\t\tinVariable = true;\n\t\t}\n\n\t\t// End of variable\n\t\telse if (char === '}' && inVariable) {\n\t\t\tconst resolved = values[curVal];\n\n\t\t\t// Variable\n\t\t\tif (typeof resolved === 'string') {\n\t\t\t\tif (resolved.length) {\n\t\t\t\t\tsegments.push({ value: resolved, type: Type.VARIABLE });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Separator\n\t\t\telse if (resolved) {\n\t\t\t\tconst prevSegment = segments[segments.length - 1];\n\t\t\t\tif (!prevSegment || prevSegment.type !== Type.SEPARATOR) {\n\t\t\t\t\tsegments.push({ value: resolved.label, type: Type.SEPARATOR }); // prevent duplicate separators\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcurVal = '';\n\t\t\tinVariable = false;\n\t\t}\n\n\t\t// Text or Variable Name\n\t\telse {\n\t\t\tcurVal += char;\n\t\t}\n\t}\n\n\t// Tail\n\tif (curVal && !inVariable) {\n\t\tsegments.push({ value: curVal, type: Type.TEXT });\n\t}\n\n\treturn segments.filter((segment, index) => {\n\n\t\t// Only keep separator if we have values to the left and right\n\t\tif (segment.type === Type.SEPARATOR) {\n\t\t\tconst left = segments[index - 1];\n\t\t\tconst right = segments[index + 1];\n\n\t\t\treturn [left, right].every(segment => segment && (segment.type === Type.VARIABLE || segment.type === Type.TEXT) && segment.value.length > 0);\n\t\t}\n\n\t\t// accept any TEXT and VARIABLE\n\t\treturn true;\n\t}).map(segment => segment.value).join('');\n}\n\n/**\n * Handles mnemonics for menu items. Depending on OS:\n * - Windows: Supported via & character (replace && with &)\n * -   Linux: Supported via & character (replace && with &)\n * -   macOS: Unsupported (replace && with empty string)\n */\nexport function mnemonicMenuLabel(label: string, forceDisableMnemonics?: boolean): string {\n\tif (isMacintosh || forceDisableMnemonics) {\n\t\treturn label.replace(/\\(&&\\w\\)|&&/g, '').replace(/&/g, isMacintosh ? '&' : '&&');\n\t}\n\n\treturn label.replace(/&&|&/g, m => m === '&' ? '&&' : '&');\n}\n\n/**\n * Handles mnemonics for buttons. Depending on OS:\n * - Windows: Supported via & character (replace && with & and & with && for escaping)\n * -   Linux: Supported via _ character (replace && with _)\n * -   macOS: Unsupported (replace && with empty string)\n */\nexport function mnemonicButtonLabel(label: string, forceDisableMnemonics?: boolean): string {\n\tif (isMacintosh || forceDisableMnemonics) {\n\t\treturn label.replace(/\\(&&\\w\\)|&&/g, '');\n\t}\n\n\tif (isWindows) {\n\t\treturn label.replace(/&&|&/g, m => m === '&' ? '&&' : '&');\n\t}\n\n\treturn label.replace(/&&/g, '_');\n}\n\nexport function unmnemonicLabel(label: string): string {\n\treturn label.replace(/&/g, '&&');\n}\n\n/**\n * Splits a path in name and parent path, supporting both '/' and '\\'\n */\nexport function splitName(fullPath: string): { name: string; parentPath: string } {\n\tconst p = fullPath.indexOf('/') !== -1 ? posix : win32;\n\tconst name = p.basename(fullPath);\n\tconst parentPath = p.dirname(fullPath);\n\tif (name.length) {\n\t\treturn { name, parentPath };\n\t}\n\t// only the root segment\n\treturn { name: parentPath, parentPath: '' };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { MarshalledObject } from 'vs/base/common/marshalling';\nimport { MarshalledId } from 'vs/base/common/marshallingIds';\nimport { URI, UriComponents } from 'vs/base/common/uri';\n\nexport interface IURITransformer {\n\ttransformIncoming(uri: UriComponents): UriComponents;\n\ttransformOutgoing(uri: UriComponents): UriComponents;\n\ttransformOutgoingURI(uri: URI): URI;\n\ttransformOutgoingScheme(scheme: string): string;\n}\n\nexport interface UriParts {\n\tscheme: string;\n\tauthority?: string;\n\tpath?: string;\n\tquery?: string;\n\tfragment?: string;\n}\n\nexport interface IRawURITransformer {\n\ttransformIncoming(uri: UriParts): UriParts;\n\ttransformOutgoing(uri: UriParts): UriParts;\n\ttransformOutgoingScheme(scheme: string): string;\n}\n\nfunction toJSON(uri: URI): UriComponents {\n\treturn <UriComponents><any>uri.toJSON();\n}\n\nexport class URITransformer implements IURITransformer {\n\n\tprivate readonly _uriTransformer: IRawURITransformer;\n\n\tconstructor(uriTransformer: IRawURITransformer) {\n\t\tthis._uriTransformer = uriTransformer;\n\t}\n\n\tpublic transformIncoming(uri: UriComponents): UriComponents {\n\t\tconst result = this._uriTransformer.transformIncoming(uri);\n\t\treturn (result === uri ? uri : toJSON(URI.from(result)));\n\t}\n\n\tpublic transformOutgoing(uri: UriComponents): UriComponents {\n\t\tconst result = this._uriTransformer.transformOutgoing(uri);\n\t\treturn (result === uri ? uri : toJSON(URI.from(result)));\n\t}\n\n\tpublic transformOutgoingURI(uri: URI): URI {\n\t\tconst result = this._uriTransformer.transformOutgoing(uri);\n\t\treturn (result === uri ? uri : URI.from(result));\n\t}\n\n\tpublic transformOutgoingScheme(scheme: string): string {\n\t\treturn this._uriTransformer.transformOutgoingScheme(scheme);\n\t}\n}\n\nexport const DefaultURITransformer: IURITransformer = new class {\n\ttransformIncoming(uri: UriComponents) {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoing(uri: UriComponents): UriComponents {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoingURI(uri: URI): URI {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoingScheme(scheme: string): string {\n\t\treturn scheme;\n\t}\n};\n\nfunction _transformOutgoingURIs(obj: any, transformer: IURITransformer, depth: number): any {\n\n\tif (!obj || depth > 200) {\n\t\treturn null;\n\t}\n\n\tif (typeof obj === 'object') {\n\t\tif (obj instanceof URI) {\n\t\t\treturn transformer.transformOutgoing(obj);\n\t\t}\n\n\t\t// walk object (or array)\n\t\tfor (const key in obj) {\n\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst r = _transformOutgoingURIs(obj[key], transformer, depth + 1);\n\t\t\t\tif (r !== null) {\n\t\t\t\t\tobj[key] = r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport function transformOutgoingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformOutgoingURIs(obj, transformer, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}\n\n\nfunction _transformIncomingURIs(obj: any, transformer: IURITransformer, revive: boolean, depth: number): any {\n\n\tif (!obj || depth > 200) {\n\t\treturn null;\n\t}\n\n\tif (typeof obj === 'object') {\n\n\t\tif ((<MarshalledObject>obj).$mid === MarshalledId.Uri) {\n\t\t\treturn revive ? URI.revive(transformer.transformIncoming(obj)) : transformer.transformIncoming(obj);\n\t\t}\n\n\t\t// walk object (or array)\n\t\tfor (const key in obj) {\n\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst r = _transformIncomingURIs(obj[key], transformer, revive, depth + 1);\n\t\t\t\tif (r !== null) {\n\t\t\t\t\tobj[key] = r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport function transformIncomingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformIncomingURIs(obj, transformer, false, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}\n\nexport function transformAndReviveIncomingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformIncomingURIs(obj, transformer, true, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n\nexport function isUUID(value: string): boolean {\n\treturn _UUIDPattern.test(value);\n}\n\ndeclare const crypto: undefined | {\n\t//https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues#browser_compatibility\n\tgetRandomValues?(data: Uint8Array): Uint8Array;\n\t//https://developer.mozilla.org/en-US/docs/Web/API/Crypto/randomUUID#browser_compatibility\n\trandomUUID?(): string;\n};\n\nexport const generateUuid = (function (): () => string {\n\n\t// use `randomUUID` if possible\n\tif (typeof crypto === 'object' && typeof crypto.randomUUID === 'function') {\n\t\treturn crypto.randomUUID.bind(crypto);\n\t}\n\n\t// use `randomValues` if possible\n\tlet getRandomValues: (bucket: Uint8Array) => Uint8Array;\n\tif (typeof crypto === 'object' && typeof crypto.getRandomValues === 'function') {\n\t\tgetRandomValues = crypto.getRandomValues.bind(crypto);\n\n\t} else {\n\t\tgetRandomValues = function (bucket: Uint8Array): Uint8Array {\n\t\t\tfor (let i = 0; i < bucket.length; i++) {\n\t\t\t\tbucket[i] = Math.floor(Math.random() * 256);\n\t\t\t}\n\t\t\treturn bucket;\n\t\t};\n\t}\n\n\t// prep-work\n\tconst _data = new Uint8Array(16);\n\tconst _hex: string[] = [];\n\tfor (let i = 0; i < 256; i++) {\n\t\t_hex.push(i.toString(16).padStart(2, '0'));\n\t}\n\n\treturn function generateUuid(): string {\n\t\t// get data\n\t\tgetRandomValues(_data);\n\n\t\t// set version bits\n\t\t_data[6] = (_data[6] & 0x0f) | 0x40;\n\t\t_data[8] = (_data[8] & 0x3f) | 0x80;\n\n\t\t// print as string\n\t\tlet i = 0;\n\t\tlet result = '';\n\t\tresult += _hex[_data[i++]];\n\t\tresult += _hex[_data[i++]];\n\t\tresult += _hex[_data[i++]];\n\t\tresult += _hex[_data[i++]];\n\t\tresult += '-';\n\t\tresult += _hex[_data[i++]];\n\t\tresult += _hex[_data[i++]];\n\t\tresult += '-';\n\t\tresult += _hex[_data[i++]];\n\t\tresult += _hex[_data[i++]];\n\t\tresult += '-';\n\t\tresult += _hex[_data[i++]];\n\t\tresult += _hex[_data[i++]];\n\t\tresult += '-';\n\t\tresult += _hex[_data[i++]];\n\t\tresult += _hex[_data[i++]];\n\t\tresult += _hex[_data[i++]];\n\t\tresult += _hex[_data[i++]];\n\t\tresult += _hex[_data[i++]];\n\t\tresult += _hex[_data[i++]];\n\t\treturn result;\n\t};\n})();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as sd from 'string_decoder';\nimport { CharCode } from 'vs/base/common/charCode';\n\n/**\n * Convenient way to iterate over output line by line. This helper accommodates for the fact that\n * a buffer might not end with new lines all the way.\n *\n * To use:\n * - call the write method\n * - forEach() over the result to get the lines\n */\nexport class LineDecoder {\n\tprivate stringDecoder: sd.StringDecoder;\n\tprivate remaining: string | null;\n\n\tconstructor(encoding: BufferEncoding = 'utf8') {\n\t\tthis.stringDecoder = new sd.StringDecoder(encoding);\n\t\tthis.remaining = null;\n\t}\n\n\twrite(buffer: Buffer): string[] {\n\t\tconst result: string[] = [];\n\t\tconst value = this.remaining\n\t\t\t? this.remaining + this.stringDecoder.write(buffer)\n\t\t\t: this.stringDecoder.write(buffer);\n\n\t\tif (value.length < 1) {\n\t\t\treturn result;\n\t\t}\n\t\tlet start = 0;\n\t\tlet ch: number;\n\t\tlet idx = start;\n\t\twhile (idx < value.length) {\n\t\t\tch = value.charCodeAt(idx);\n\t\t\tif (ch === CharCode.CarriageReturn || ch === CharCode.LineFeed) {\n\t\t\t\tresult.push(value.substring(start, idx));\n\t\t\t\tidx++;\n\t\t\t\tif (idx < value.length) {\n\t\t\t\t\tconst lastChar = ch;\n\t\t\t\t\tch = value.charCodeAt(idx);\n\t\t\t\t\tif ((lastChar === CharCode.CarriageReturn && ch === CharCode.LineFeed) || (lastChar === CharCode.LineFeed && ch === CharCode.CarriageReturn)) {\n\t\t\t\t\t\tidx++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstart = idx;\n\t\t\t} else {\n\t\t\t\tidx++;\n\t\t\t}\n\t\t}\n\t\tthis.remaining = start < value.length ? value.substr(start) : null;\n\t\treturn result;\n\t}\n\n\tend(): string | null {\n\t\treturn this.remaining;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/// <reference path=\"../../../typings/require.d.ts\" />\n\n//@ts-check\n(function () {\n\t'use strict';\n\n\t/**\n\t * @param {NodeRequire} nodeRequire\n\t * @param {typeof import('path')} path\n\t * @param {typeof import('fs')} fs\n\t * @param {typeof import('../common/performance')} perf\n\t */\n\tfunction factory(nodeRequire, path, fs, perf) {\n\n\t\t/**\n\t\t * @param {string} file\n\t\t * @returns {Promise<boolean>}\n\t\t */\n\t\tfunction exists(file) {\n\t\t\treturn new Promise(c => fs.exists(file, c));\n\t\t}\n\n\t\t/**\n\t\t * @param {string} file\n\t\t * @returns {Promise<void>}\n\t\t */\n\t\tfunction touch(file) {\n\t\t\treturn new Promise((c, e) => { const d = new Date(); fs.utimes(file, d, d, err => err ? e(err) : c()); });\n\t\t}\n\n\t\t/**\n\t\t * @param {string} dir\n\t\t * @returns {Promise<string>}\n\t\t */\n\t\tfunction mkdirp(dir) {\n\t\t\treturn new Promise((c, e) => fs.mkdir(dir, { recursive: true }, err => (err && err.code !== 'EEXIST') ? e(err) : c(dir)));\n\t\t}\n\n\t\t/**\n\t\t * @param {string} location\n\t\t * @returns {Promise<void>}\n\t\t */\n\t\tfunction rimraf(location) {\n\t\t\treturn new Promise((c, e) => fs.rm(location, { recursive: true, force: true, maxRetries: 3 }, err => err ? e(err) : c()));\n\t\t}\n\n\t\t/**\n\t\t * @param {string} file\n\t\t * @returns {Promise<string>}\n\t\t */\n\t\tfunction readFile(file) {\n\t\t\treturn new Promise((c, e) => fs.readFile(file, 'utf8', (err, data) => err ? e(err) : c(data)));\n\t\t}\n\n\t\t/**\n\t\t * @param {string} file\n\t\t * @param {string} content\n\t\t * @returns {Promise<void>}\n\t\t */\n\t\tfunction writeFile(file, content) {\n\t\t\treturn new Promise((c, e) => fs.writeFile(file, content, 'utf8', err => err ? e(err) : c()));\n\t\t}\n\n\t\t/**\n\t\t * @param {string} userDataPath\n\t\t * @returns {object}\n\t\t */\n\t\tfunction getLanguagePackConfigurations(userDataPath) {\n\t\t\tconst configFile = path.join(userDataPath, 'languagepacks.json');\n\t\t\ttry {\n\t\t\t\t// This must not use Node's require otherwise it will be cached forever.\n\t\t\t\t// Code can get away with this since the process actually restarts but\n\t\t\t\t// that is not currently the case with code-server.\n\t\t\t\treturn JSON.parse(fs.readFileSync(configFile, \"utf8\"));\n\t\t\t} catch (err) {\n\t\t\t\t// Do nothing. If we can't read the file we have no\n\t\t\t\t// language pack config.\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}\n\n\t\t/**\n\t\t * @param {object} config\n\t\t * @param {string} locale\n\t\t */\n\t\tfunction resolveLanguagePackLocale(config, locale) {\n\t\t\ttry {\n\t\t\t\twhile (locale) {\n\t\t\t\t\tif (config[locale]) {\n\t\t\t\t\t\treturn locale;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst index = locale.lastIndexOf('-');\n\t\t\t\t\t\tif (index > 0) {\n\t\t\t\t\t\t\tlocale = locale.substring(0, index);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error('Resolving language pack configuration failed.', err);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}\n\n\t\t/**\n\t\t * @param {string} commit\n\t\t * @param {string} userDataPath\n\t\t * @param {string} metaDataFile\n\t\t * @param {string} locale\n\t\t */\n\t\tfunction getNLSConfiguration(commit, userDataPath, metaDataFile, locale) {\n\t\t\tif (locale === 'pseudo') {\n\t\t\t\treturn Promise.resolve({ locale: locale, availableLanguages: {}, pseudo: true });\n\t\t\t}\n\n\t\t\tif (process.env['VSCODE_DEV']) {\n\t\t\t\treturn Promise.resolve({ locale: locale, availableLanguages: {} });\n\t\t\t}\n\n\t\t\t// We have a built version so we have extracted nls file. Try to find\n\t\t\t// the right file to use.\n\n\t\t\t// Check if we have an English or English US locale. If so fall to default since that is our\n\t\t\t// English translation (we don't ship *.nls.en.json files)\n\t\t\tif (locale && (locale === 'en' || locale === 'en-us')) {\n\t\t\t\treturn Promise.resolve({ locale: locale, availableLanguages: {} });\n\t\t\t}\n\n\t\t\tconst initialLocale = locale;\n\n\t\t\tperf.mark('code/willGenerateNls');\n\n\t\t\tconst defaultResult = function (locale) {\n\t\t\t\tperf.mark('code/didGenerateNls');\n\t\t\t\treturn Promise.resolve({ locale: locale, availableLanguages: {} });\n\t\t\t};\n\t\t\ttry {\n\t\t\t\tif (!commit) {\n\t\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t\t}\n\t\t\t\tconst configs = getLanguagePackConfigurations(userDataPath);\n\t\t\t\tif (!configs) {\n\t\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t\t}\n\t\t\t\tlocale = resolveLanguagePackLocale(configs, locale);\n\t\t\t\tif (!locale) {\n\t\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t\t}\n\t\t\t\tconst packConfig = configs[locale];\n\t\t\t\tlet mainPack;\n\t\t\t\tif (!packConfig || typeof packConfig.hash !== 'string' || !packConfig.translations || typeof (mainPack = packConfig.translations['vscode']) !== 'string') {\n\t\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t\t}\n\t\t\t\treturn exists(mainPack).then(fileExists => {\n\t\t\t\t\tif (!fileExists) {\n\t\t\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t\t\t}\n\t\t\t\t\tconst packId = packConfig.hash + '.' + locale;\n\t\t\t\t\tconst cacheRoot = path.join(userDataPath, 'clp', packId);\n\t\t\t\t\tconst coreLocation = path.join(cacheRoot, commit);\n\t\t\t\t\tconst translationsConfigFile = path.join(cacheRoot, 'tcf.json');\n\t\t\t\t\tconst corruptedFile = path.join(cacheRoot, 'corrupted.info');\n\t\t\t\t\tconst result = {\n\t\t\t\t\t\tlocale: initialLocale,\n\t\t\t\t\t\tavailableLanguages: { '*': locale },\n\t\t\t\t\t\t_languagePackId: packId,\n\t\t\t\t\t\t_translationsConfigFile: translationsConfigFile,\n\t\t\t\t\t\t_cacheRoot: cacheRoot,\n\t\t\t\t\t\t_resolvedLanguagePackCoreLocation: coreLocation,\n\t\t\t\t\t\t_corruptedFile: corruptedFile\n\t\t\t\t\t};\n\t\t\t\t\treturn exists(corruptedFile).then(corrupted => {\n\t\t\t\t\t\t// The nls cache directory is corrupted.\n\t\t\t\t\t\tlet toDelete;\n\t\t\t\t\t\tif (corrupted) {\n\t\t\t\t\t\t\ttoDelete = rimraf(cacheRoot);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttoDelete = Promise.resolve(undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn toDelete.then(() => {\n\t\t\t\t\t\t\treturn exists(coreLocation).then(fileExists => {\n\t\t\t\t\t\t\t\tif (fileExists) {\n\t\t\t\t\t\t\t\t\t// We don't wait for this. No big harm if we can't touch\n\t\t\t\t\t\t\t\t\ttouch(coreLocation).catch(() => { });\n\t\t\t\t\t\t\t\t\tperf.mark('code/didGenerateNls');\n\t\t\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn mkdirp(coreLocation).then(() => {\n\t\t\t\t\t\t\t\t\treturn Promise.all([readFile(metaDataFile), readFile(mainPack)]);\n\t\t\t\t\t\t\t\t}).then(values => {\n\t\t\t\t\t\t\t\t\tconst metadata = JSON.parse(values[0]);\n\t\t\t\t\t\t\t\t\tconst packData = JSON.parse(values[1]).contents;\n\t\t\t\t\t\t\t\t\tconst bundles = Object.keys(metadata.bundles);\n\t\t\t\t\t\t\t\t\tconst writes = [];\n\t\t\t\t\t\t\t\t\tfor (const bundle of bundles) {\n\t\t\t\t\t\t\t\t\t\tconst modules = metadata.bundles[bundle];\n\t\t\t\t\t\t\t\t\t\tconst target = Object.create(null);\n\t\t\t\t\t\t\t\t\t\tfor (const module of modules) {\n\t\t\t\t\t\t\t\t\t\t\tconst keys = metadata.keys[module];\n\t\t\t\t\t\t\t\t\t\t\tconst defaultMessages = metadata.messages[module];\n\t\t\t\t\t\t\t\t\t\t\tconst translations = packData[module];\n\t\t\t\t\t\t\t\t\t\t\tlet targetStrings;\n\t\t\t\t\t\t\t\t\t\t\tif (translations) {\n\t\t\t\t\t\t\t\t\t\t\t\ttargetStrings = [];\n\t\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst elem = keys[i];\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst key = typeof elem === 'string' ? elem : elem.key;\n\t\t\t\t\t\t\t\t\t\t\t\t\tlet translatedMessage = translations[key];\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (translatedMessage === undefined) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttranslatedMessage = defaultMessages[i];\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\ttargetStrings.push(translatedMessage);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\ttargetStrings = defaultMessages;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\ttarget[module] = targetStrings;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\twrites.push(writeFile(path.join(coreLocation, bundle.replace(/\\//g, '!') + '.nls.json'), JSON.stringify(target)));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\twrites.push(writeFile(translationsConfigFile, JSON.stringify(packConfig.translations)));\n\t\t\t\t\t\t\t\t\treturn Promise.all(writes);\n\t\t\t\t\t\t\t\t}).then(() => {\n\t\t\t\t\t\t\t\t\tperf.mark('code/didGenerateNls');\n\t\t\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t\t\t}).catch(err => {\n\t\t\t\t\t\t\t\t\tconsole.error('Generating translation files failed.', err);\n\t\t\t\t\t\t\t\t\treturn defaultResult(locale);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error('Generating translation files failed.', err);\n\t\t\t\treturn defaultResult(locale);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tgetNLSConfiguration\n\t\t};\n\t}\n\n\tif (typeof define === 'function') {\n\t\t// amd\n\t\tdefine(__m[143/*vs/base/node/languagePacks*/], __M([0/*require*/,87/*path*/,30/*fs*/,48/*vs/base/common/performance*/]), function (require, /** @type {typeof import('path')} */ path, /** @type {typeof import('fs')} */ fs, /** @type {typeof import('../common/performance')} */ perf) { return factory(require.__$__nodeRequire, path, fs, perf); });\n\t} else if (typeof module === 'object' && typeof module.exports === 'object') {\n\t\tconst path = require('path');\n\t\tconst fs = require('fs');\n\t\tconst perf = require('../common/performance');\n\t\tmodule.exports = factory(require, path, fs, perf);\n\t} else {\n\t\tthrow new Error('Unknown context');\n\t}\n}());\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { networkInterfaces } from 'os';\n\nconst invalidMacAddresses = new Set([\n\t'00:00:00:00:00:00',\n\t'ff:ff:ff:ff:ff:ff',\n\t'ac:de:48:00:11:22'\n]);\n\nfunction validateMacAddress(candidate: string): boolean {\n\tconst tempCandidate = candidate.replace(/\\-/g, ':').toLowerCase();\n\treturn !invalidMacAddresses.has(tempCandidate);\n}\n\nexport function getMac(): string {\n\tconst ifaces = networkInterfaces();\n\tfor (const name in ifaces) {\n\t\tconst networkInterface = ifaces[name];\n\t\tif (networkInterface) {\n\t\t\tfor (const { mac } of networkInterface) {\n\t\t\t\tif (validateMacAddress(mac)) {\n\t\t\t\t\treturn mac;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow new Error('Unable to retrieve mac address (unexpected format)');\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { networkInterfaces } from 'os';\nimport * as errors from 'vs/base/common/errors';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport * as uuid from 'vs/base/common/uuid';\nimport { getMac } from 'vs/base/node/macAddress';\n\n// http://www.techrepublic.com/blog/data-center/mac-address-scorecard-for-common-virtual-machine-platforms/\n// VMware ESX 3, Server, Workstation, Player\t00-50-56, 00-0C-29, 00-05-69\n// Microsoft Hyper-V, Virtual Server, Virtual PC\t00-03-FF\n// Parallels Desktop, Workstation, Server, Virtuozzo\t00-1C-42\n// Virtual Iron 4\t00-0F-4B\n// Red Hat Xen\t00-16-3E\n// Oracle VM\t00-16-3E\n// XenSource\t00-16-3E\n// Novell Xen\t00-16-3E\n// Sun xVM VirtualBox\t08-00-27\nexport const virtualMachineHint: { value(): number } = new class {\n\n\tprivate _virtualMachineOUIs?: TernarySearchTree<string, boolean>;\n\tprivate _value?: number;\n\n\tprivate _isVirtualMachineMacAddress(mac: string): boolean {\n\t\tif (!this._virtualMachineOUIs) {\n\t\t\tthis._virtualMachineOUIs = TernarySearchTree.forStrings<boolean>();\n\n\t\t\t// dash-separated\n\t\t\tthis._virtualMachineOUIs.set('00-50-56', true);\n\t\t\tthis._virtualMachineOUIs.set('00-0C-29', true);\n\t\t\tthis._virtualMachineOUIs.set('00-05-69', true);\n\t\t\tthis._virtualMachineOUIs.set('00-03-FF', true);\n\t\t\tthis._virtualMachineOUIs.set('00-1C-42', true);\n\t\t\tthis._virtualMachineOUIs.set('00-16-3E', true);\n\t\t\tthis._virtualMachineOUIs.set('08-00-27', true);\n\n\t\t\t// colon-separated\n\t\t\tthis._virtualMachineOUIs.set('00:50:56', true);\n\t\t\tthis._virtualMachineOUIs.set('00:0C:29', true);\n\t\t\tthis._virtualMachineOUIs.set('00:05:69', true);\n\t\t\tthis._virtualMachineOUIs.set('00:03:FF', true);\n\t\t\tthis._virtualMachineOUIs.set('00:1C:42', true);\n\t\t\tthis._virtualMachineOUIs.set('00:16:3E', true);\n\t\t\tthis._virtualMachineOUIs.set('08:00:27', true);\n\t\t}\n\t\treturn !!this._virtualMachineOUIs.findSubstr(mac);\n\t}\n\n\tvalue(): number {\n\t\tif (this._value === undefined) {\n\t\t\tlet vmOui = 0;\n\t\t\tlet interfaceCount = 0;\n\n\t\t\tconst interfaces = networkInterfaces();\n\t\t\tfor (const name in interfaces) {\n\t\t\t\tconst networkInterface = interfaces[name];\n\t\t\t\tif (networkInterface) {\n\t\t\t\t\tfor (const { mac, internal } of networkInterface) {\n\t\t\t\t\t\tif (!internal) {\n\t\t\t\t\t\t\tinterfaceCount += 1;\n\t\t\t\t\t\t\tif (this._isVirtualMachineMacAddress(mac.toUpperCase())) {\n\t\t\t\t\t\t\t\tvmOui += 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._value = interfaceCount > 0\n\t\t\t\t? vmOui / interfaceCount\n\t\t\t\t: 0;\n\t\t}\n\n\t\treturn this._value;\n\t}\n};\n\nlet machineId: Promise<string>;\nexport async function getMachineId(): Promise<string> {\n\tif (!machineId) {\n\t\tmachineId = (async () => {\n\t\t\tconst id = await getMacMachineId();\n\n\t\t\treturn id || uuid.generateUuid(); // fallback, generate a UUID\n\t\t})();\n\t}\n\n\treturn machineId;\n}\n\nasync function getMacMachineId(): Promise<string | undefined> {\n\ttry {\n\t\tconst crypto = await import('crypto');\n\t\tconst macAddress = getMac();\n\t\treturn crypto.createHash('sha256').update(macAddress, 'utf8').digest('hex');\n\t} catch (err) {\n\t\terrors.onUnexpectedError(err);\n\t\treturn undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { tmpdir } from 'os';\nimport { promisify } from 'util';\nimport { ResourceQueue } from 'vs/base/common/async';\nimport { isEqualOrParent, isRootOrDriveLetter, randomPath } from 'vs/base/common/extpath';\nimport { normalizeNFC } from 'vs/base/common/normalization';\nimport { join } from 'vs/base/common/path';\nimport { isLinux, isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { extUriBiasedIgnorePathCase } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\n\n//#region rimraf\n\nexport enum RimRafMode {\n\n\t/**\n\t * Slow version that unlinks each file and folder.\n\t */\n\tUNLINK,\n\n\t/**\n\t * Fast version that first moves the file/folder\n\t * into a temp directory and then deletes that\n\t * without waiting for it.\n\t */\n\tMOVE\n}\n\n/**\n * Allows to delete the provided path (either file or folder) recursively\n * with the options:\n * - `UNLINK`: direct removal from disk\n * - `MOVE`: faster variant that first moves the target to temp dir and then\n *           deletes it in the background without waiting for that to finish.\n */\nasync function rimraf(path: string, mode = RimRafMode.UNLINK): Promise<void> {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\t// delete: via rm\n\tif (mode === RimRafMode.UNLINK) {\n\t\treturn rimrafUnlink(path);\n\t}\n\n\t// delete: via move\n\treturn rimrafMove(path);\n}\n\nasync function rimrafMove(path: string): Promise<void> {\n\ttry {\n\t\tconst pathInTemp = randomPath(tmpdir());\n\t\ttry {\n\t\t\t// Intentionally using `fs.promises` here to skip\n\t\t\t// the patched graceful-fs method that can result\n\t\t\t// in very long running `rename` calls when the\n\t\t\t// folder is locked by a file watcher. We do not\n\t\t\t// really want to slow down this operation more\n\t\t\t// than necessary and we have a fallback to delete\n\t\t\t// via unlink.\n\t\t\t// https://github.com/microsoft/vscode/issues/139908\n\t\t\tawait fs.promises.rename(path, pathInTemp);\n\t\t} catch (error) {\n\t\t\treturn rimrafUnlink(path); // if rename fails, delete without tmp dir\n\t\t}\n\n\t\t// Delete but do not return as promise\n\t\trimrafUnlink(pathInTemp).catch(error => {/* ignore */ });\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nasync function rimrafUnlink(path: string): Promise<void> {\n\treturn promisify(fs.rm)(path, { recursive: true, force: true, maxRetries: 3 });\n}\n\nexport function rimrafSync(path: string): void {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\tfs.rmSync(path, { recursive: true, force: true, maxRetries: 3 });\n}\n\n//#endregion\n\n//#region readdir with NFC support (macos)\n\nexport interface IDirent {\n\tname: string;\n\n\tisFile(): boolean;\n\tisDirectory(): boolean;\n\tisSymbolicLink(): boolean;\n}\n\n/**\n * Drop-in replacement of `fs.readdir` with support\n * for converting from macOS NFD unicon form to NFC\n * (https://github.com/nodejs/node/issues/2165)\n */\nasync function readdir(path: string): Promise<string[]>;\nasync function readdir(path: string, options: { withFileTypes: true }): Promise<IDirent[]>;\nasync function readdir(path: string, options?: { withFileTypes: true }): Promise<(string | IDirent)[]> {\n\treturn handleDirectoryChildren(await (options ? safeReaddirWithFileTypes(path) : promisify(fs.readdir)(path)));\n}\n\nasync function safeReaddirWithFileTypes(path: string): Promise<IDirent[]> {\n\ttry {\n\t\treturn await promisify(fs.readdir)(path, { withFileTypes: true });\n\t} catch (error) {\n\t\tconsole.warn('[node.js fs] readdir with filetypes failed with error: ', error);\n\t}\n\n\t// Fallback to manually reading and resolving each\n\t// children of the folder in case we hit an error\n\t// previously.\n\t// This can only really happen on exotic file systems\n\t// such as explained in #115645 where we get entries\n\t// from `readdir` that we can later not `lstat`.\n\tconst result: IDirent[] = [];\n\tconst children = await readdir(path);\n\tfor (const child of children) {\n\t\tlet isFile = false;\n\t\tlet isDirectory = false;\n\t\tlet isSymbolicLink = false;\n\n\t\ttry {\n\t\t\tconst lstat = await Promises.lstat(join(path, child));\n\n\t\t\tisFile = lstat.isFile();\n\t\t\tisDirectory = lstat.isDirectory();\n\t\t\tisSymbolicLink = lstat.isSymbolicLink();\n\t\t} catch (error) {\n\t\t\tconsole.warn('[node.js fs] unexpected error from lstat after readdir: ', error);\n\t\t}\n\n\t\tresult.push({\n\t\t\tname: child,\n\t\t\tisFile: () => isFile,\n\t\t\tisDirectory: () => isDirectory,\n\t\t\tisSymbolicLink: () => isSymbolicLink\n\t\t});\n\t}\n\n\treturn result;\n}\n\n/**\n * Drop-in replacement of `fs.readdirSync` with support\n * for converting from macOS NFD unicon form to NFC\n * (https://github.com/nodejs/node/issues/2165)\n */\nexport function readdirSync(path: string): string[] {\n\treturn handleDirectoryChildren(fs.readdirSync(path));\n}\n\nfunction handleDirectoryChildren(children: string[]): string[];\nfunction handleDirectoryChildren(children: IDirent[]): IDirent[];\nfunction handleDirectoryChildren(children: (string | IDirent)[]): (string | IDirent)[];\nfunction handleDirectoryChildren(children: (string | IDirent)[]): (string | IDirent)[] {\n\treturn children.map(child => {\n\n\t\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t\t// See also https://github.com/nodejs/node/issues/2165\n\n\t\tif (typeof child === 'string') {\n\t\t\treturn isMacintosh ? normalizeNFC(child) : child;\n\t\t}\n\n\t\tchild.name = isMacintosh ? normalizeNFC(child.name) : child.name;\n\n\t\treturn child;\n\t});\n}\n\n/**\n * A convenience method to read all children of a path that\n * are directories.\n */\nasync function readDirsInDir(dirPath: string): Promise<string[]> {\n\tconst children = await readdir(dirPath);\n\tconst directories: string[] = [];\n\n\tfor (const child of children) {\n\t\tif (await SymlinkSupport.existsDirectory(join(dirPath, child))) {\n\t\t\tdirectories.push(child);\n\t\t}\n\t}\n\n\treturn directories;\n}\n\n//#endregion\n\n//#region whenDeleted()\n\n/**\n * A `Promise` that resolves when the provided `path`\n * is deleted from disk.\n */\nexport function whenDeleted(path: string, intervalMs = 1000): Promise<void> {\n\treturn new Promise<void>(resolve => {\n\t\tlet running = false;\n\t\tconst interval = setInterval(() => {\n\t\t\tif (!running) {\n\t\t\t\trunning = true;\n\t\t\t\tfs.access(path, err => {\n\t\t\t\t\trunning = false;\n\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}, intervalMs);\n\t});\n}\n\n//#endregion\n\n//#region Methods with symbolic links support\n\nexport namespace SymlinkSupport {\n\n\texport interface IStats {\n\n\t\t// The stats of the file. If the file is a symbolic\n\t\t// link, the stats will be of that target file and\n\t\t// not the link itself.\n\t\t// If the file is a symbolic link pointing to a non\n\t\t// existing file, the stat will be of the link and\n\t\t// the `dangling` flag will indicate this.\n\t\tstat: fs.Stats;\n\n\t\t// Will be provided if the resource is a symbolic link\n\t\t// on disk. Use the `dangling` flag to find out if it\n\t\t// points to a resource that does not exist on disk.\n\t\tsymbolicLink?: { dangling: boolean };\n\t}\n\n\t/**\n\t * Resolves the `fs.Stats` of the provided path. If the path is a\n\t * symbolic link, the `fs.Stats` will be from the target it points\n\t * to. If the target does not exist, `dangling: true` will be returned\n\t * as `symbolicLink` value.\n\t */\n\texport async function stat(path: string): Promise<IStats> {\n\n\t\t// First stat the link\n\t\tlet lstats: fs.Stats | undefined;\n\t\ttry {\n\t\t\tlstats = await Promises.lstat(path);\n\n\t\t\t// Return early if the stat is not a symbolic link at all\n\t\t\tif (!lstats.isSymbolicLink()) {\n\t\t\t\treturn { stat: lstats };\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t/* ignore - use stat() instead */\n\t\t}\n\n\t\t// If the stat is a symbolic link or failed to stat, use fs.stat()\n\t\t// which for symbolic links will stat the target they point to\n\t\ttry {\n\t\t\tconst stats = await Promises.stat(path);\n\n\t\t\treturn { stat: stats, symbolicLink: lstats?.isSymbolicLink() ? { dangling: false } : undefined };\n\t\t} catch (error) {\n\n\t\t\t// If the link points to a nonexistent file we still want\n\t\t\t// to return it as result while setting dangling: true flag\n\t\t\tif (error.code === 'ENOENT' && lstats) {\n\t\t\t\treturn { stat: lstats, symbolicLink: { dangling: true } };\n\t\t\t}\n\n\t\t\t// Windows: workaround a node.js bug where reparse points\n\t\t\t// are not supported (https://github.com/nodejs/node/issues/36790)\n\t\t\tif (isWindows && error.code === 'EACCES') {\n\t\t\t\ttry {\n\t\t\t\t\tconst stats = await Promises.stat(await Promises.readlink(path));\n\n\t\t\t\t\treturn { stat: stats, symbolicLink: { dangling: false } };\n\t\t\t\t} catch (error) {\n\n\t\t\t\t\t// If the link points to a nonexistent file we still want\n\t\t\t\t\t// to return it as result while setting dangling: true flag\n\t\t\t\t\tif (error.code === 'ENOENT' && lstats) {\n\t\t\t\t\t\treturn { stat: lstats, symbolicLink: { dangling: true } };\n\t\t\t\t\t}\n\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t/**\n\t * Figures out if the `path` exists and is a file with support\n\t * for symlinks.\n\t *\n\t * Note: this will return `false` for a symlink that exists on\n\t * disk but is dangling (pointing to a nonexistent path).\n\t *\n\t * Use `exists` if you only care about the path existing on disk\n\t * or not without support for symbolic links.\n\t */\n\texport async function existsFile(path: string): Promise<boolean> {\n\t\ttry {\n\t\t\tconst { stat, symbolicLink } = await SymlinkSupport.stat(path);\n\n\t\t\treturn stat.isFile() && symbolicLink?.dangling !== true;\n\t\t} catch (error) {\n\t\t\t// Ignore, path might not exist\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Figures out if the `path` exists and is a directory with support for\n\t * symlinks.\n\t *\n\t * Note: this will return `false` for a symlink that exists on\n\t * disk but is dangling (pointing to a nonexistent path).\n\t *\n\t * Use `exists` if you only care about the path existing on disk\n\t * or not without support for symbolic links.\n\t */\n\texport async function existsDirectory(path: string): Promise<boolean> {\n\t\ttry {\n\t\t\tconst { stat, symbolicLink } = await SymlinkSupport.stat(path);\n\n\t\t\treturn stat.isDirectory() && symbolicLink?.dangling !== true;\n\t\t} catch (error) {\n\t\t\t// Ignore, path might not exist\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\n//#endregion\n\n//#region Write File\n\n// According to node.js docs (https://nodejs.org/docs/v14.16.0/api/fs.html#fs_fs_writefile_file_data_options_callback)\n// it is not safe to call writeFile() on the same path multiple times without waiting for the callback to return.\n// Therefor we use a Queue on the path that is given to us to sequentialize calls to the same path properly.\nconst writeQueues = new ResourceQueue();\n\n/**\n * Same as `fs.writeFile` but with an additional call to\n * `fs.fdatasync` after writing to ensure changes are\n * flushed to disk.\n *\n * In addition, multiple writes to the same path are queued.\n */\nfunction writeFile(path: string, data: string, options?: IWriteFileOptions): Promise<void>;\nfunction writeFile(path: string, data: Buffer, options?: IWriteFileOptions): Promise<void>;\nfunction writeFile(path: string, data: Uint8Array, options?: IWriteFileOptions): Promise<void>;\nfunction writeFile(path: string, data: string | Buffer | Uint8Array, options?: IWriteFileOptions): Promise<void>;\nfunction writeFile(path: string, data: string | Buffer | Uint8Array, options?: IWriteFileOptions): Promise<void> {\n\treturn writeQueues.queueFor(URI.file(path), extUriBiasedIgnorePathCase).queue(() => {\n\t\tconst ensuredOptions = ensureWriteOptions(options);\n\n\t\treturn new Promise((resolve, reject) => doWriteFileAndFlush(path, data, ensuredOptions, error => error ? reject(error) : resolve()));\n\t});\n}\n\ninterface IWriteFileOptions {\n\tmode?: number;\n\tflag?: string;\n}\n\ninterface IEnsuredWriteFileOptions extends IWriteFileOptions {\n\tmode: number;\n\tflag: string;\n}\n\nlet canFlush = true;\nexport function configureFlushOnWrite(enabled: boolean): void {\n\tcanFlush = enabled;\n}\n\n// Calls fs.writeFile() followed by a fs.sync() call to flush the changes to disk\n// We do this in cases where we want to make sure the data is really on disk and\n// not in some cache.\n//\n// See https://github.com/nodejs/node/blob/v5.10.0/lib/fs.js#L1194\nfunction doWriteFileAndFlush(path: string, data: string | Buffer | Uint8Array, options: IEnsuredWriteFileOptions, callback: (error: Error | null) => void): void {\n\tif (!canFlush) {\n\t\treturn fs.writeFile(path, data, { mode: options.mode, flag: options.flag }, callback);\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tfs.open(path, options.flag, options.mode, (openError, fd) => {\n\t\tif (openError) {\n\t\t\treturn callback(openError);\n\t\t}\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFile(fd, data, writeError => {\n\t\t\tif (writeError) {\n\t\t\t\treturn fs.close(fd, () => callback(writeError)); // still need to close the handle on error!\n\t\t\t}\n\n\t\t\t// Flush contents (not metadata) of the file to disk\n\t\t\t// https://github.com/microsoft/vscode/issues/9589\n\t\t\tfs.fdatasync(fd, (syncError: Error | null) => {\n\n\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t// In that case we disable flushing and warn to the console\n\t\t\t\tif (syncError) {\n\t\t\t\t\tconsole.warn('[node.js fs] fdatasync is now disabled for this session because it failed: ', syncError);\n\t\t\t\t\tconfigureFlushOnWrite(false);\n\t\t\t\t}\n\n\t\t\t\treturn fs.close(fd, closeError => callback(closeError));\n\t\t\t});\n\t\t});\n\t});\n}\n\n/**\n * Same as `fs.writeFileSync` but with an additional call to\n * `fs.fdatasyncSync` after writing to ensure changes are\n * flushed to disk.\n */\nexport function writeFileSync(path: string, data: string | Buffer, options?: IWriteFileOptions): void {\n\tconst ensuredOptions = ensureWriteOptions(options);\n\n\tif (!canFlush) {\n\t\treturn fs.writeFileSync(path, data, { mode: ensuredOptions.mode, flag: ensuredOptions.flag });\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tconst fd = fs.openSync(path, ensuredOptions.flag, ensuredOptions.mode);\n\n\ttry {\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFileSync(fd, data);\n\n\t\t// Flush contents (not metadata) of the file to disk\n\t\ttry {\n\t\t\tfs.fdatasyncSync(fd); // https://github.com/microsoft/vscode/issues/9589\n\t\t} catch (syncError) {\n\t\t\tconsole.warn('[node.js fs] fdatasyncSync is now disabled for this session because it failed: ', syncError);\n\t\t\tconfigureFlushOnWrite(false);\n\t\t}\n\t} finally {\n\t\tfs.closeSync(fd);\n\t}\n}\n\nfunction ensureWriteOptions(options?: IWriteFileOptions): IEnsuredWriteFileOptions {\n\tif (!options) {\n\t\treturn { mode: 0o666 /* default node.js mode for files */, flag: 'w' };\n\t}\n\n\treturn {\n\t\tmode: typeof options.mode === 'number' ? options.mode : 0o666 /* default node.js mode for files */,\n\t\tflag: typeof options.flag === 'string' ? options.flag : 'w'\n\t};\n}\n\n//#endregion\n\n//#region Move / Copy\n\n/**\n * A drop-in replacement for `fs.rename` that:\n * - allows to move across multiple disks\n */\nasync function move(source: string, target: string): Promise<void> {\n\tif (source === target) {\n\t\treturn;  // simulate node.js behaviour here and do a no-op if paths match\n\t}\n\n\ttry {\n\t\tawait Promises.rename(source, target);\n\t} catch (error) {\n\n\t\t// In two cases we fallback to classic copy and delete:\n\t\t//\n\t\t// 1.) The EXDEV error indicates that source and target are on different devices\n\t\t// In this case, fallback to using a copy() operation as there is no way to\n\t\t// rename() between different devices.\n\t\t//\n\t\t// 2.) The user tries to rename a file/folder that ends with a dot. This is not\n\t\t// really possible to move then, at least on UNC devices.\n\t\tif (source.toLowerCase() !== target.toLowerCase() && error.code === 'EXDEV' || source.endsWith('.')) {\n\t\t\tawait copy(source, target, { preserveSymlinks: false /* copying to another device */ });\n\t\t\tawait rimraf(source, RimRafMode.MOVE);\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\ninterface ICopyPayload {\n\treadonly root: { source: string; target: string };\n\treadonly options: { preserveSymlinks: boolean };\n\treadonly handledSourcePaths: Set<string>;\n}\n\n/**\n * Recursively copies all of `source` to `target`.\n *\n * The options `preserveSymlinks` configures how symbolic\n * links should be handled when encountered. Set to\n * `false` to not preserve them and `true` otherwise.\n */\nasync function copy(source: string, target: string, options: { preserveSymlinks: boolean }): Promise<void> {\n\treturn doCopy(source, target, { root: { source, target }, options, handledSourcePaths: new Set<string>() });\n}\n\n// When copying a file or folder, we want to preserve the mode\n// it had and as such provide it when creating. However, modes\n// can go beyond what we expect (see link below), so we mask it.\n// (https://github.com/nodejs/node-v0.x-archive/issues/3045#issuecomment-4862588)\nconst COPY_MODE_MASK = 0o777;\n\nasync function doCopy(source: string, target: string, payload: ICopyPayload): Promise<void> {\n\n\t// Keep track of paths already copied to prevent\n\t// cycles from symbolic links to cause issues\n\tif (payload.handledSourcePaths.has(source)) {\n\t\treturn;\n\t} else {\n\t\tpayload.handledSourcePaths.add(source);\n\t}\n\n\tconst { stat, symbolicLink } = await SymlinkSupport.stat(source);\n\n\t// Symlink\n\tif (symbolicLink) {\n\n\t\t// Try to re-create the symlink unless `preserveSymlinks: false`\n\t\tif (payload.options.preserveSymlinks) {\n\t\t\ttry {\n\t\t\t\treturn await doCopySymlink(source, target, payload);\n\t\t\t} catch (error) {\n\t\t\t\t// in any case of an error fallback to normal copy via dereferencing\n\t\t\t\tconsole.warn('[node.js fs] copy of symlink failed: ', error);\n\t\t\t}\n\t\t}\n\n\t\tif (symbolicLink.dangling) {\n\t\t\treturn; // skip dangling symbolic links from here on (https://github.com/microsoft/vscode/issues/111621)\n\t\t}\n\t}\n\n\t// Folder\n\tif (stat.isDirectory()) {\n\t\treturn doCopyDirectory(source, target, stat.mode & COPY_MODE_MASK, payload);\n\t}\n\n\t// File or file-like\n\telse {\n\t\treturn doCopyFile(source, target, stat.mode & COPY_MODE_MASK);\n\t}\n}\n\nasync function doCopyDirectory(source: string, target: string, mode: number, payload: ICopyPayload): Promise<void> {\n\n\t// Create folder\n\tawait Promises.mkdir(target, { recursive: true, mode });\n\n\t// Copy each file recursively\n\tconst files = await readdir(source);\n\tfor (const file of files) {\n\t\tawait doCopy(join(source, file), join(target, file), payload);\n\t}\n}\n\nasync function doCopyFile(source: string, target: string, mode: number): Promise<void> {\n\n\t// Copy file\n\tawait Promises.copyFile(source, target);\n\n\t// restore mode (https://github.com/nodejs/node/issues/1104)\n\tawait Promises.chmod(target, mode);\n}\n\nasync function doCopySymlink(source: string, target: string, payload: ICopyPayload): Promise<void> {\n\n\t// Figure out link target\n\tlet linkTarget = await Promises.readlink(source);\n\n\t// Special case: the symlink points to a target that is\n\t// actually within the path that is being copied. In that\n\t// case we want the symlink to point to the target and\n\t// not the source\n\tif (isEqualOrParent(linkTarget, payload.root.source, !isLinux)) {\n\t\tlinkTarget = join(payload.root.target, linkTarget.substr(payload.root.source.length + 1));\n\t}\n\n\t// Create symlink\n\tawait Promises.symlink(linkTarget, target);\n}\n\n//#endregion\n\n//#region Promise based fs methods\n\n/**\n * Prefer this helper class over the `fs.promises` API to\n * enable `graceful-fs` to function properly. Given issue\n * https://github.com/isaacs/node-graceful-fs/issues/160 it\n * is evident that the module only takes care of the non-promise\n * based fs methods.\n *\n * Another reason is `realpath` being entirely different in\n * the promise based implementation compared to the other\n * one (https://github.com/microsoft/vscode/issues/118562)\n *\n * Note: using getters for a reason, since `graceful-fs`\n * patching might kick in later after modules have been\n * loaded we need to defer access to fs methods.\n * (https://github.com/microsoft/vscode/issues/124176)\n */\nexport const Promises = new class {\n\n\t//#region Implemented by node.js\n\n\tget access() { return promisify(fs.access); }\n\n\tget stat() { return promisify(fs.stat); }\n\tget lstat() { return promisify(fs.lstat); }\n\tget utimes() { return promisify(fs.utimes); }\n\n\tget read() {\n\n\t\t// Not using `promisify` here for a reason: the return\n\t\t// type is not an object as indicated by TypeScript but\n\t\t// just the bytes read, so we create our own wrapper.\n\n\t\treturn (fd: number, buffer: Uint8Array, offset: number, length: number, position: number | null) => {\n\t\t\treturn new Promise<{ bytesRead: number; buffer: Uint8Array }>((resolve, reject) => {\n\t\t\t\tfs.read(fd, buffer, offset, length, position, (err, bytesRead, buffer) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn reject(err);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn resolve({ bytesRead, buffer });\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\t}\n\tget readFile() { return promisify(fs.readFile); }\n\n\tget write() {\n\n\t\t// Not using `promisify` here for a reason: the return\n\t\t// type is not an object as indicated by TypeScript but\n\t\t// just the bytes written, so we create our own wrapper.\n\n\t\treturn (fd: number, buffer: Uint8Array, offset: number | undefined | null, length: number | undefined | null, position: number | undefined | null) => {\n\t\t\treturn new Promise<{ bytesWritten: number; buffer: Uint8Array }>((resolve, reject) => {\n\t\t\t\tfs.write(fd, buffer, offset, length, position, (err, bytesWritten, buffer) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn reject(err);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn resolve({ bytesWritten, buffer });\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\t}\n\n\tget appendFile() { return promisify(fs.appendFile); }\n\n\tget fdatasync() { return promisify(fs.fdatasync); }\n\tget truncate() { return promisify(fs.truncate); }\n\n\tget rename() { return promisify(fs.rename); }\n\tget copyFile() { return promisify(fs.copyFile); }\n\n\tget open() { return promisify(fs.open); }\n\tget close() { return promisify(fs.close); }\n\n\tget symlink() { return promisify(fs.symlink); }\n\tget readlink() { return promisify(fs.readlink); }\n\n\tget chmod() { return promisify(fs.chmod); }\n\n\tget mkdir() { return promisify(fs.mkdir); }\n\n\tget unlink() { return promisify(fs.unlink); }\n\tget rmdir() { return promisify(fs.rmdir); }\n\n\tget realpath() { return promisify(fs.realpath); }\n\n\t//#endregion\n\n\t//#region Implemented by us\n\n\tasync exists(path: string): Promise<boolean> {\n\t\ttry {\n\t\t\tawait Promises.access(path);\n\n\t\t\treturn true;\n\t\t} catch {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tget readdir() { return readdir; }\n\tget readDirsInDir() { return readDirsInDir; }\n\n\tget writeFile() { return writeFile; }\n\n\tget rm() { return rimraf; }\n\n\tget move() { return move; }\n\tget copy() { return copy; }\n\n\t//#endregion\n};\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { basename, dirname, join, normalize, sep } from 'vs/base/common/path';\nimport { isLinux } from 'vs/base/common/platform';\nimport { rtrim } from 'vs/base/common/strings';\nimport { Promises, readdirSync } from 'vs/base/node/pfs';\n\n/**\n * Copied from: https://github.com/microsoft/vscode-node-debug/blob/master/src/node/pathUtilities.ts#L83\n *\n * Given an absolute, normalized, and existing file path 'realcase' returns the exact path that the file has on disk.\n * On a case insensitive file system, the returned path might differ from the original path by character casing.\n * On a case sensitive file system, the returned path will always be identical to the original path.\n * In case of errors, null is returned. But you cannot use this function to verify that a path exists.\n * realcaseSync does not handle '..' or '.' path segments and it does not take the locale into account.\n */\nexport function realcaseSync(path: string): string | null {\n\tif (isLinux) {\n\t\t// This method is unsupported on OS that have case sensitive\n\t\t// file system where the same path can exist in different forms\n\t\t// (see also https://github.com/microsoft/vscode/issues/139709)\n\t\treturn path;\n\t}\n\n\tconst dir = dirname(path);\n\tif (path === dir) {\t// end recursion\n\t\treturn path;\n\t}\n\n\tconst name = (basename(path) /* can be '' for windows drive letters */ || path).toLowerCase();\n\ttry {\n\t\tconst entries = readdirSync(dir);\n\t\tconst found = entries.filter(e => e.toLowerCase() === name);\t// use a case insensitive search\n\t\tif (found.length === 1) {\n\t\t\t// on a case sensitive filesystem we cannot determine here, whether the file exists or not, hence we need the 'file exists' precondition\n\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\tif (prefix) {\n\t\t\t\treturn join(prefix, found[0]);\n\t\t\t}\n\t\t} else if (found.length > 1) {\n\t\t\t// must be a case sensitive $filesystem\n\t\t\tconst ix = found.indexOf(name);\n\t\t\tif (ix >= 0) {\t// case sensitive\n\t\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\t\tif (prefix) {\n\t\t\t\t\treturn join(prefix, found[ix]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\t// silently ignore error\n\t}\n\n\treturn null;\n}\n\nexport async function realcase(path: string): Promise<string | null> {\n\tif (isLinux) {\n\t\t// This method is unsupported on OS that have case sensitive\n\t\t// file system where the same path can exist in different forms\n\t\t// (see also https://github.com/microsoft/vscode/issues/139709)\n\t\treturn path;\n\t}\n\n\tconst dir = dirname(path);\n\tif (path === dir) {\t// end recursion\n\t\treturn path;\n\t}\n\n\tconst name = (basename(path) /* can be '' for windows drive letters */ || path).toLowerCase();\n\ttry {\n\t\tconst entries = await Promises.readdir(dir);\n\t\tconst found = entries.filter(e => e.toLowerCase() === name);\t// use a case insensitive search\n\t\tif (found.length === 1) {\n\t\t\t// on a case sensitive filesystem we cannot determine here, whether the file exists or not, hence we need the 'file exists' precondition\n\t\t\tconst prefix = await realcase(dir);   // recurse\n\t\t\tif (prefix) {\n\t\t\t\treturn join(prefix, found[0]);\n\t\t\t}\n\t\t} else if (found.length > 1) {\n\t\t\t// must be a case sensitive $filesystem\n\t\t\tconst ix = found.indexOf(name);\n\t\t\tif (ix >= 0) {\t// case sensitive\n\t\t\t\tconst prefix = await realcase(dir);   // recurse\n\t\t\t\tif (prefix) {\n\t\t\t\t\treturn join(prefix, found[ix]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\t// silently ignore error\n\t}\n\n\treturn null;\n}\n\nexport async function realpath(path: string): Promise<string> {\n\ttry {\n\t\t// DO NOT USE `fs.promises.realpath` here as it internally\n\t\t// calls `fs.native.realpath` which will result in subst\n\t\t// drives to be resolved to their target on Windows\n\t\t// https://github.com/microsoft/vscode/issues/118562\n\t\treturn await Promises.realpath(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpath(). Since fs.realpath() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\n\t\tawait Promises.access(normalizedPath, fs.constants.R_OK);\n\n\t\treturn normalizedPath;\n\t}\n}\n\nexport function realpathSync(path: string): string {\n\ttry {\n\t\treturn fs.realpathSync(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpathSync(). Since fs.realpathSync() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\n\t\tfs.accessSync(normalizedPath, fs.constants.R_OK); // throws in case of an error\n\n\t\treturn normalizedPath;\n\t}\n}\n\nfunction normalizePath(path: string): string {\n\treturn rtrim(normalize(path), sep);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as net from 'net';\n\n/**\n * Given a start point and a max number of retries, will find a port that\n * is openable. Will return 0 in case no free port can be found.\n */\nexport function findFreePort(startPort: number, giveUpAfter: number, timeout: number, stride = 1): Promise<number> {\n\tlet done = false;\n\n\treturn new Promise(resolve => {\n\t\tconst timeoutHandle = setTimeout(() => {\n\t\t\tif (!done) {\n\t\t\t\tdone = true;\n\t\t\t\treturn resolve(0);\n\t\t\t}\n\t\t}, timeout);\n\n\t\tdoFindFreePort(startPort, giveUpAfter, stride, (port) => {\n\t\t\tif (!done) {\n\t\t\t\tdone = true;\n\t\t\t\tclearTimeout(timeoutHandle);\n\t\t\t\treturn resolve(port);\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction doFindFreePort(startPort: number, giveUpAfter: number, stride: number, clb: (port: number) => void): void {\n\tif (giveUpAfter === 0) {\n\t\treturn clb(0);\n\t}\n\n\tconst client = new net.Socket();\n\n\t// If we can connect to the port it means the port is already taken so we continue searching\n\tclient.once('connect', () => {\n\t\tdispose(client);\n\n\t\treturn doFindFreePort(startPort + stride, giveUpAfter - 1, stride, clb);\n\t});\n\n\tclient.once('data', () => {\n\t\t// this listener is required since node.js 8.x\n\t});\n\n\tclient.once('error', (err: Error & { code?: string }) => {\n\t\tdispose(client);\n\n\t\t// If we receive any non ECONNREFUSED error, it means the port is used but we cannot connect\n\t\tif (err.code !== 'ECONNREFUSED') {\n\t\t\treturn doFindFreePort(startPort + stride, giveUpAfter - 1, stride, clb);\n\t\t}\n\n\t\t// Otherwise it means the port is free to use!\n\t\treturn clb(startPort);\n\t});\n\n\tclient.connect(startPort, '127.0.0.1');\n}\n\n// Reference: https://chromium.googlesource.com/chromium/src.git/+/refs/heads/main/net/base/port_util.cc#56\nexport const BROWSER_RESTRICTED_PORTS: any = {\n\t1: true,      // tcpmux\n\t7: true,      // echo\n\t9: true,      // discard\n\t11: true,     // systat\n\t13: true,     // daytime\n\t15: true,     // netstat\n\t17: true,     // qotd\n\t19: true,     // chargen\n\t20: true,     // ftp data\n\t21: true,     // ftp access\n\t22: true,     // ssh\n\t23: true,     // telnet\n\t25: true,     // smtp\n\t37: true,     // time\n\t42: true,     // name\n\t43: true,     // nicname\n\t53: true,     // domain\n\t69: true,     // tftp\n\t77: true,     // priv-rjs\n\t79: true,     // finger\n\t87: true,     // ttylink\n\t95: true,     // supdup\n\t101: true,    // hostriame\n\t102: true,    // iso-tsap\n\t103: true,    // gppitnp\n\t104: true,    // acr-nema\n\t109: true,    // pop2\n\t110: true,    // pop3\n\t111: true,    // sunrpc\n\t113: true,    // auth\n\t115: true,    // sftp\n\t117: true,    // uucp-path\n\t119: true,    // nntp\n\t123: true,    // NTP\n\t135: true,    // loc-srv /epmap\n\t137: true,    // netbios\n\t139: true,    // netbios\n\t143: true,    // imap2\n\t161: true,    // snmp\n\t179: true,    // BGP\n\t389: true,    // ldap\n\t427: true,    // SLP (Also used by Apple Filing Protocol)\n\t465: true,    // smtp+ssl\n\t512: true,    // print / exec\n\t513: true,    // login\n\t514: true,    // shell\n\t515: true,    // printer\n\t526: true,    // tempo\n\t530: true,    // courier\n\t531: true,    // chat\n\t532: true,    // netnews\n\t540: true,    // uucp\n\t548: true,    // AFP (Apple Filing Protocol)\n\t554: true,    // rtsp\n\t556: true,    // remotefs\n\t563: true,    // nntp+ssl\n\t587: true,    // smtp (rfc6409)\n\t601: true,    // syslog-conn (rfc3195)\n\t636: true,    // ldap+ssl\n\t989: true,    // ftps-data\n\t990: true,    // ftps\n\t993: true,    // ldap+ssl\n\t995: true,    // pop3+ssl\n\t1719: true,   // h323gatestat\n\t1720: true,   // h323hostcall\n\t1723: true,   // pptp\n\t2049: true,   // nfs\n\t3659: true,   // apple-sasl / PasswordServer\n\t4045: true,   // lockd\n\t5060: true,   // sip\n\t5061: true,   // sips\n\t6000: true,   // X11\n\t6566: true,   // sane-port\n\t6665: true,   // Alternate IRC [Apple addition]\n\t6666: true,   // Alternate IRC [Apple addition]\n\t6667: true,   // Standard IRC [Apple addition]\n\t6668: true,   // Alternate IRC [Apple addition]\n\t6669: true,   // Alternate IRC [Apple addition]\n\t6697: true,   // IRC + TLS\n\t10080: true   // Amanda\n};\n\n/**\n * Uses listen instead of connect. Is faster, but if there is another listener on 0.0.0.0 then this will take 127.0.0.1 from that listener.\n */\nexport function findFreePortFaster(startPort: number, giveUpAfter: number, timeout: number): Promise<number> {\n\tlet resolved: boolean = false;\n\tlet timeoutHandle: NodeJS.Timeout | undefined = undefined;\n\tlet countTried: number = 1;\n\tconst server = net.createServer({ pauseOnConnect: true });\n\tfunction doResolve(port: number, resolve: (port: number) => void) {\n\t\tif (!resolved) {\n\t\t\tresolved = true;\n\t\t\tserver.removeAllListeners();\n\t\t\tserver.close();\n\t\t\tif (timeoutHandle) {\n\t\t\t\tclearTimeout(timeoutHandle);\n\t\t\t}\n\t\t\tresolve(port);\n\t\t}\n\t}\n\treturn new Promise<number>(resolve => {\n\t\ttimeoutHandle = setTimeout(() => {\n\t\t\tdoResolve(0, resolve);\n\t\t}, timeout);\n\n\t\tserver.on('listening', () => {\n\t\t\tdoResolve(startPort, resolve);\n\t\t});\n\t\tserver.on('error', err => {\n\t\t\tif (err && ((<any>err).code === 'EADDRINUSE' || (<any>err).code === 'EACCES') && (countTried < giveUpAfter)) {\n\t\t\t\tstartPort++;\n\t\t\t\tcountTried++;\n\t\t\t\tserver.listen(startPort, '127.0.0.1');\n\t\t\t} else {\n\t\t\t\tdoResolve(0, resolve);\n\t\t\t}\n\t\t});\n\t\tserver.on('close', () => {\n\t\t\tdoResolve(0, resolve);\n\t\t});\n\t\tserver.listen(startPort, '127.0.0.1');\n\t});\n}\n\nfunction dispose(socket: net.Socket): void {\n\ttry {\n\t\tsocket.removeAllListeners('connect');\n\t\tsocket.removeAllListeners('error');\n\t\tsocket.end();\n\t\tsocket.destroy();\n\t\tsocket.unref();\n\t} catch (error) {\n\t\tconsole.error(error); // otherwise this error would get lost in the callback chain\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as os from 'os';\nimport * as path from 'vs/base/common/path';\nimport * as pfs from 'vs/base/node/pfs';\n\n// This is required, since parseInt(\"7-preview\") will return 7.\nconst IntRegex: RegExp = /^\\d+$/;\n\nconst PwshMsixRegex: RegExp = /^Microsoft.PowerShell_.*/;\nconst PwshPreviewMsixRegex: RegExp = /^Microsoft.PowerShellPreview_.*/;\n\nconst enum Arch {\n\tx64,\n\tx86,\n\tARM\n}\n\nlet processArch: Arch;\nswitch (process.arch) {\n\tcase 'ia32':\n\tcase 'x32':\n\t\tprocessArch = Arch.x86;\n\t\tbreak;\n\tcase 'arm':\n\tcase 'arm64':\n\t\tprocessArch = Arch.ARM;\n\t\tbreak;\n\tdefault:\n\t\tprocessArch = Arch.x64;\n\t\tbreak;\n}\n\n/*\nCurrently, here are the values for these environment variables on their respective archs:\n\nOn x86 process on x86:\nPROCESSOR_ARCHITECTURE is X86\nPROCESSOR_ARCHITEW6432 is undefined\n\nOn x86 process on x64:\nPROCESSOR_ARCHITECTURE is X86\nPROCESSOR_ARCHITEW6432 is AMD64\n\nOn x64 process on x64:\nPROCESSOR_ARCHITECTURE is AMD64\nPROCESSOR_ARCHITEW6432 is undefined\n\nOn ARM process on ARM:\nPROCESSOR_ARCHITECTURE is ARM64\nPROCESSOR_ARCHITEW6432 is undefined\n\nOn x86 process on ARM:\nPROCESSOR_ARCHITECTURE is X86\nPROCESSOR_ARCHITEW6432 is ARM64\n\nOn x64 process on ARM:\nPROCESSOR_ARCHITECTURE is ARM64\nPROCESSOR_ARCHITEW6432 is undefined\n*/\nlet osArch: Arch;\nif (process.env['PROCESSOR_ARCHITEW6432']) {\n\tosArch = process.env['PROCESSOR_ARCHITEW6432'] === 'ARM64'\n\t\t? Arch.ARM\n\t\t: Arch.x64;\n} else if (process.env['PROCESSOR_ARCHITECTURE'] === 'ARM64') {\n\tosArch = Arch.ARM;\n} else if (process.env['PROCESSOR_ARCHITECTURE'] === 'X86') {\n\tosArch = Arch.x86;\n} else {\n\tosArch = Arch.x64;\n}\n\nexport interface IPowerShellExeDetails {\n\treadonly displayName: string;\n\treadonly exePath: string;\n}\n\nexport interface IPossiblePowerShellExe extends IPowerShellExeDetails {\n\texists(): Promise<boolean>;\n}\n\nclass PossiblePowerShellExe implements IPossiblePowerShellExe {\n\tconstructor(\n\t\tpublic readonly exePath: string,\n\t\tpublic readonly displayName: string,\n\t\tprivate knownToExist?: boolean) { }\n\n\tpublic async exists(): Promise<boolean> {\n\t\tif (this.knownToExist === undefined) {\n\t\t\tthis.knownToExist = await pfs.SymlinkSupport.existsFile(this.exePath);\n\t\t}\n\t\treturn this.knownToExist;\n\t}\n}\n\nfunction getProgramFilesPath(\n\t{ useAlternateBitness = false }: { useAlternateBitness?: boolean } = {}): string | null {\n\n\tif (!useAlternateBitness) {\n\t\t// Just use the native system bitness\n\t\treturn process.env.ProgramFiles || null;\n\t}\n\n\t// We might be a 64-bit process looking for 32-bit program files\n\tif (processArch === Arch.x64) {\n\t\treturn process.env['ProgramFiles(x86)'] || null;\n\t}\n\n\t// We might be a 32-bit process looking for 64-bit program files\n\tif (osArch === Arch.x64) {\n\t\treturn process.env.ProgramW6432 || null;\n\t}\n\n\t// We're a 32-bit process on 32-bit Windows, there is no other Program Files dir\n\treturn null;\n}\n\nasync function findPSCoreWindowsInstallation(\n\t{ useAlternateBitness = false, findPreview = false }:\n\t\t{ useAlternateBitness?: boolean; findPreview?: boolean } = {}): Promise<IPossiblePowerShellExe | null> {\n\n\tconst programFilesPath = getProgramFilesPath({ useAlternateBitness });\n\tif (!programFilesPath) {\n\t\treturn null;\n\t}\n\n\tconst powerShellInstallBaseDir = path.join(programFilesPath, 'PowerShell');\n\n\t// Ensure the base directory exists\n\tif (!await pfs.SymlinkSupport.existsDirectory(powerShellInstallBaseDir)) {\n\t\treturn null;\n\t}\n\n\tlet highestSeenVersion: number = -1;\n\tlet pwshExePath: string | null = null;\n\tfor (const item of await pfs.Promises.readdir(powerShellInstallBaseDir)) {\n\n\t\tlet currentVersion: number = -1;\n\t\tif (findPreview) {\n\t\t\t// We are looking for something like \"7-preview\"\n\n\t\t\t// Preview dirs all have dashes in them\n\t\t\tconst dashIndex = item.indexOf('-');\n\t\t\tif (dashIndex < 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Verify that the part before the dash is an integer\n\t\t\t// and that the part after the dash is \"preview\"\n\t\t\tconst intPart: string = item.substring(0, dashIndex);\n\t\t\tif (!IntRegex.test(intPart) || item.substring(dashIndex + 1) !== 'preview') {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tcurrentVersion = parseInt(intPart, 10);\n\t\t} else {\n\t\t\t// Search for a directory like \"6\" or \"7\"\n\t\t\tif (!IntRegex.test(item)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tcurrentVersion = parseInt(item, 10);\n\t\t}\n\n\t\t// Ensure we haven't already seen a higher version\n\t\tif (currentVersion <= highestSeenVersion) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Now look for the file\n\t\tconst exePath = path.join(powerShellInstallBaseDir, item, 'pwsh.exe');\n\t\tif (!await pfs.SymlinkSupport.existsFile(exePath)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tpwshExePath = exePath;\n\t\thighestSeenVersion = currentVersion;\n\t}\n\n\tif (!pwshExePath) {\n\t\treturn null;\n\t}\n\n\tconst bitness: string = programFilesPath.includes('x86') ? ' (x86)' : '';\n\tconst preview: string = findPreview ? ' Preview' : '';\n\n\treturn new PossiblePowerShellExe(pwshExePath, `PowerShell${preview}${bitness}`, true);\n}\n\nasync function findPSCoreMsix({ findPreview }: { findPreview?: boolean } = {}): Promise<IPossiblePowerShellExe | null> {\n\t// We can't proceed if there's no LOCALAPPDATA path\n\tif (!process.env.LOCALAPPDATA) {\n\t\treturn null;\n\t}\n\n\t// Find the base directory for MSIX application exe shortcuts\n\tconst msixAppDir = path.join(process.env.LOCALAPPDATA, 'Microsoft', 'WindowsApps');\n\n\tif (!await pfs.SymlinkSupport.existsDirectory(msixAppDir)) {\n\t\treturn null;\n\t}\n\n\t// Define whether we're looking for the preview or the stable\n\tconst { pwshMsixDirRegex, pwshMsixName } = findPreview\n\t\t? { pwshMsixDirRegex: PwshPreviewMsixRegex, pwshMsixName: 'PowerShell Preview (Store)' }\n\t\t: { pwshMsixDirRegex: PwshMsixRegex, pwshMsixName: 'PowerShell (Store)' };\n\n\t// We should find only one such application, so return on the first one\n\tfor (const subdir of await pfs.Promises.readdir(msixAppDir)) {\n\t\tif (pwshMsixDirRegex.test(subdir)) {\n\t\t\tconst pwshMsixPath = path.join(msixAppDir, subdir, 'pwsh.exe');\n\t\t\treturn new PossiblePowerShellExe(pwshMsixPath, pwshMsixName);\n\t\t}\n\t}\n\n\t// If we find nothing, return null\n\treturn null;\n}\n\nfunction findPSCoreDotnetGlobalTool(): IPossiblePowerShellExe {\n\tconst dotnetGlobalToolExePath: string = path.join(os.homedir(), '.dotnet', 'tools', 'pwsh.exe');\n\n\treturn new PossiblePowerShellExe(dotnetGlobalToolExePath, '.NET Core PowerShell Global Tool');\n}\n\nfunction findWinPS(): IPossiblePowerShellExe | null {\n\tconst winPSPath = path.join(\n\t\tprocess.env.windir!,\n\t\tprocessArch === Arch.x86 && osArch !== Arch.x86 ? 'SysNative' : 'System32',\n\t\t'WindowsPowerShell', 'v1.0', 'powershell.exe');\n\n\treturn new PossiblePowerShellExe(winPSPath, 'Windows PowerShell', true);\n}\n\n/**\n * Iterates through all the possible well-known PowerShell installations on a machine.\n * Returned values may not exist, but come with an .exists property\n * which will check whether the executable exists.\n */\nasync function* enumerateDefaultPowerShellInstallations(): AsyncIterable<IPossiblePowerShellExe> {\n\t// Find PSCore stable first\n\tlet pwshExe = await findPSCoreWindowsInstallation();\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Windows may have a 32-bit pwsh.exe\n\tpwshExe = await findPSCoreWindowsInstallation({ useAlternateBitness: true });\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Also look for the MSIX/UWP installation\n\tpwshExe = await findPSCoreMsix();\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Look for the .NET global tool\n\t// Some older versions of PowerShell have a bug in this where startup will fail,\n\t// but this is fixed in newer versions\n\tpwshExe = findPSCoreDotnetGlobalTool();\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Look for PSCore preview\n\tpwshExe = await findPSCoreWindowsInstallation({ findPreview: true });\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Find a preview MSIX\n\tpwshExe = await findPSCoreMsix({ findPreview: true });\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Look for pwsh-preview with the opposite bitness\n\tpwshExe = await findPSCoreWindowsInstallation({ useAlternateBitness: true, findPreview: true });\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Finally, get Windows PowerShell\n\tpwshExe = findWinPS();\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n}\n\n/**\n * Iterates through PowerShell installations on the machine according\n * to configuration passed in through the constructor.\n * PowerShell items returned by this object are verified\n * to exist on the filesystem.\n */\nexport async function* enumeratePowerShellInstallations(): AsyncIterable<IPowerShellExeDetails> {\n\t// Get the default PowerShell installations first\n\tfor await (const defaultPwsh of enumerateDefaultPowerShellInstallations()) {\n\t\tif (await defaultPwsh.exists()) {\n\t\t\tyield defaultPwsh;\n\t\t}\n\t}\n}\n\n/**\n* Returns the first available PowerShell executable found in the search order.\n*/\nexport async function getFirstAvailablePowerShellInstallation(): Promise<IPowerShellExeDetails | null> {\n\tfor await (const pwsh of enumeratePowerShellInstallations()) {\n\t\treturn pwsh;\n\t}\n\treturn null;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { exec } from 'child_process';\nimport { FileAccess } from 'vs/base/common/network';\nimport { ProcessItem } from 'vs/base/common/processes';\n\nexport function listProcesses(rootPid: number): Promise<ProcessItem> {\n\n\treturn new Promise((resolve, reject) => {\n\n\t\tlet rootItem: ProcessItem | undefined;\n\t\tconst map = new Map<number, ProcessItem>();\n\n\n\t\tfunction addToTree(pid: number, ppid: number, cmd: string, load: number, mem: number) {\n\n\t\t\tconst parent = map.get(ppid);\n\t\t\tif (pid === rootPid || parent) {\n\n\t\t\t\tconst item: ProcessItem = {\n\t\t\t\t\tname: findName(cmd),\n\t\t\t\t\tcmd,\n\t\t\t\t\tpid,\n\t\t\t\t\tppid,\n\t\t\t\t\tload,\n\t\t\t\t\tmem\n\t\t\t\t};\n\t\t\t\tmap.set(pid, item);\n\n\t\t\t\tif (pid === rootPid) {\n\t\t\t\t\trootItem = item;\n\t\t\t\t}\n\n\t\t\t\tif (parent) {\n\t\t\t\t\tif (!parent.children) {\n\t\t\t\t\t\tparent.children = [];\n\t\t\t\t\t}\n\t\t\t\t\tparent.children.push(item);\n\t\t\t\t\tif (parent.children.length > 1) {\n\t\t\t\t\t\tparent.children = parent.children.sort((a, b) => a.pid - b.pid);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction findName(cmd: string): string {\n\n\t\t\tconst SHARED_PROCESS_HINT = /--vscode-window-kind=shared-process/;\n\t\t\tconst ISSUE_REPORTER_HINT = /--vscode-window-kind=issue-reporter/;\n\t\t\tconst PROCESS_EXPLORER_HINT = /--vscode-window-kind=process-explorer/;\n\t\t\tconst UTILITY_NETWORK_HINT = /--utility-sub-type=network/;\n\t\t\tconst UTILITY_EXTENSION_HOST_HINT = /--utility-sub-type=node.mojom.NodeService/;\n\t\t\tconst WINDOWS_CRASH_REPORTER = /--crashes-directory/;\n\t\t\tconst WINDOWS_PTY = /\\\\pipe\\\\winpty-control/;\n\t\t\tconst WINDOWS_CONSOLE_HOST = /conhost\\.exe/;\n\t\t\tconst TYPE = /--type=([a-zA-Z-]+)/;\n\n\t\t\t// find windows crash reporter\n\t\t\tif (WINDOWS_CRASH_REPORTER.exec(cmd)) {\n\t\t\t\treturn 'electron-crash-reporter';\n\t\t\t}\n\n\t\t\t// find windows pty process\n\t\t\tif (WINDOWS_PTY.exec(cmd)) {\n\t\t\t\treturn 'winpty-process';\n\t\t\t}\n\n\t\t\t//find windows console host process\n\t\t\tif (WINDOWS_CONSOLE_HOST.exec(cmd)) {\n\t\t\t\treturn 'console-window-host (Windows internal process)';\n\t\t\t}\n\n\t\t\t// find \"--type=xxxx\"\n\t\t\tlet matches = TYPE.exec(cmd);\n\t\t\tif (matches && matches.length === 2) {\n\t\t\t\tif (matches[1] === 'renderer') {\n\t\t\t\t\tif (SHARED_PROCESS_HINT.exec(cmd)) {\n\t\t\t\t\t\treturn 'shared-process';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (ISSUE_REPORTER_HINT.exec(cmd)) {\n\t\t\t\t\t\treturn 'issue-reporter';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (PROCESS_EXPLORER_HINT.exec(cmd)) {\n\t\t\t\t\t\treturn 'process-explorer';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn `window`;\n\t\t\t\t} else if (matches[1] === 'utility') {\n\t\t\t\t\tif (UTILITY_NETWORK_HINT.exec(cmd)) {\n\t\t\t\t\t\treturn 'utility-network-service';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (UTILITY_EXTENSION_HOST_HINT.exec(cmd)) {\n\t\t\t\t\t\treturn 'extension-host';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn matches[1];\n\t\t\t}\n\n\t\t\t// find all xxxx.js\n\t\t\tconst JS = /[a-zA-Z-]+\\.js/g;\n\t\t\tlet result = '';\n\t\t\tdo {\n\t\t\t\tmatches = JS.exec(cmd);\n\t\t\t\tif (matches) {\n\t\t\t\t\tresult += matches + ' ';\n\t\t\t\t}\n\t\t\t} while (matches);\n\n\t\t\tif (result) {\n\t\t\t\tif (cmd.indexOf('node ') < 0 && cmd.indexOf('node.exe') < 0) {\n\t\t\t\t\treturn `electron_node ${result}`;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn cmd;\n\t\t}\n\n\t\tif (process.platform === 'win32') {\n\n\t\t\tconst cleanUNCPrefix = (value: string): string => {\n\t\t\t\tif (value.indexOf('\\\\\\\\?\\\\') === 0) {\n\t\t\t\t\treturn value.substr(4);\n\t\t\t\t} else if (value.indexOf('\\\\??\\\\') === 0) {\n\t\t\t\t\treturn value.substr(4);\n\t\t\t\t} else if (value.indexOf('\"\\\\\\\\?\\\\') === 0) {\n\t\t\t\t\treturn '\"' + value.substr(5);\n\t\t\t\t} else if (value.indexOf('\"\\\\??\\\\') === 0) {\n\t\t\t\t\treturn '\"' + value.substr(5);\n\t\t\t\t} else {\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t(import('windows-process-tree')).then(windowsProcessTree => {\n\t\t\t\twindowsProcessTree.getProcessList(rootPid, (processList) => {\n\t\t\t\t\tif (!processList) {\n\t\t\t\t\t\treject(new Error(`Root process ${rootPid} not found`));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\twindowsProcessTree.getProcessCpuUsage(processList, (completeProcessList) => {\n\t\t\t\t\t\tconst processItems: Map<number, ProcessItem> = new Map();\n\t\t\t\t\t\tcompleteProcessList.forEach(process => {\n\t\t\t\t\t\t\tconst commandLine = cleanUNCPrefix(process.commandLine || '');\n\t\t\t\t\t\t\tprocessItems.set(process.pid, {\n\t\t\t\t\t\t\t\tname: findName(commandLine),\n\t\t\t\t\t\t\t\tcmd: commandLine,\n\t\t\t\t\t\t\t\tpid: process.pid,\n\t\t\t\t\t\t\t\tppid: process.ppid,\n\t\t\t\t\t\t\t\tload: process.cpu || 0,\n\t\t\t\t\t\t\t\tmem: process.memory || 0\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\trootItem = processItems.get(rootPid);\n\t\t\t\t\t\tif (rootItem) {\n\t\t\t\t\t\t\tprocessItems.forEach(item => {\n\t\t\t\t\t\t\t\tconst parent = processItems.get(item.ppid);\n\t\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\t\tif (!parent.children) {\n\t\t\t\t\t\t\t\t\t\tparent.children = [];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tparent.children.push(item);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tprocessItems.forEach(item => {\n\t\t\t\t\t\t\t\tif (item.children) {\n\t\t\t\t\t\t\t\t\titem.children = item.children.sort((a, b) => a.pid - b.pid);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tresolve(rootItem);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treject(new Error(`Root process ${rootPid} not found`));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}, windowsProcessTree.ProcessDataFlag.CommandLine | windowsProcessTree.ProcessDataFlag.Memory);\n\t\t\t});\n\t\t} else {\t// OS X & Linux\n\t\t\tfunction calculateLinuxCpuUsage() {\n\t\t\t\t// Flatten rootItem to get a list of all VSCode processes\n\t\t\t\tlet processes = [rootItem];\n\t\t\t\tconst pids: number[] = [];\n\t\t\t\twhile (processes.length) {\n\t\t\t\t\tconst process = processes.shift();\n\t\t\t\t\tif (process) {\n\t\t\t\t\t\tpids.push(process.pid);\n\t\t\t\t\t\tif (process.children) {\n\t\t\t\t\t\t\tprocesses = processes.concat(process.children);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// The cpu usage value reported on Linux is the average over the process lifetime,\n\t\t\t\t// recalculate the usage over a one second interval\n\t\t\t\t// JSON.stringify is needed to escape spaces, https://github.com/nodejs/node/issues/6803\n\t\t\t\tlet cmd = JSON.stringify(FileAccess.asFileUri('vs/base/node/cpuUsage.sh', require).fsPath);\n\t\t\t\tcmd += ' ' + pids.join(' ');\n\n\t\t\t\texec(cmd, {}, (err, stdout, stderr) => {\n\t\t\t\t\tif (err || stderr) {\n\t\t\t\t\t\treject(err || new Error(stderr.toString()));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst cpuUsage = stdout.toString().split('\\n');\n\t\t\t\t\t\tfor (let i = 0; i < pids.length; i++) {\n\t\t\t\t\t\t\tconst processInfo = map.get(pids[i])!;\n\t\t\t\t\t\t\tprocessInfo.load = parseFloat(cpuUsage[i]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!rootItem) {\n\t\t\t\t\t\t\treject(new Error(`Root process ${rootPid} not found`));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresolve(rootItem);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\texec('which ps', {}, (err, stdout, stderr) => {\n\t\t\t\tif (err || stderr) {\n\t\t\t\t\tif (process.platform !== 'linux') {\n\t\t\t\t\t\treject(err || new Error(stderr.toString()));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst cmd = JSON.stringify(FileAccess.asFileUri('vs/base/node/ps.sh', require).fsPath);\n\t\t\t\t\t\texec(cmd, {}, (err, stdout, stderr) => {\n\t\t\t\t\t\t\tif (err || stderr) {\n\t\t\t\t\t\t\t\treject(err || new Error(stderr.toString()));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tparsePsOutput(stdout, addToTree);\n\t\t\t\t\t\t\t\tcalculateLinuxCpuUsage();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst ps = stdout.toString().trim();\n\t\t\t\t\tconst args = '-ax -o pid=,ppid=,pcpu=,pmem=,command=';\n\n\t\t\t\t\t// Set numeric locale to ensure '.' is used as the decimal separator\n\t\t\t\t\texec(`${ps} ${args}`, { maxBuffer: 1000 * 1024, env: { LC_NUMERIC: 'en_US.UTF-8' } }, (err, stdout, stderr) => {\n\t\t\t\t\t\t// Silently ignoring the screen size is bogus error. See https://github.com/microsoft/vscode/issues/98590\n\t\t\t\t\t\tif (err || (stderr && !stderr.includes('screen size is bogus'))) {\n\t\t\t\t\t\t\treject(err || new Error(stderr.toString()));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tparsePsOutput(stdout, addToTree);\n\n\t\t\t\t\t\t\tif (process.platform === 'linux') {\n\t\t\t\t\t\t\t\tcalculateLinuxCpuUsage();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (!rootItem) {\n\t\t\t\t\t\t\t\t\treject(new Error(`Root process ${rootPid} not found`));\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tresolve(rootItem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n}\n\nfunction parsePsOutput(stdout: string, addToTree: (pid: number, ppid: number, cmd: string, load: number, mem: number) => void): void {\n\tconst PID_CMD = /^\\s*([0-9]+)\\s+([0-9]+)\\s+([0-9]+\\.[0-9]+)\\s+([0-9]+\\.[0-9]+)\\s+(.+)$/;\n\tconst lines = stdout.toString().split('\\n');\n\tfor (const line of lines) {\n\t\tconst matches = PID_CMD.exec(line.trim());\n\t\tif (matches && matches.length === 6) {\n\t\t\taddToTree(parseInt(matches[1]), parseInt(matches[2]), matches[5], parseFloat(matches[3]), parseFloat(matches[4]));\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getRandomElement } from 'vs/base/common/arrays';\nimport { CancelablePromise, createCancelablePromise, timeout } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { memoize } from 'vs/base/common/decorators';\nimport * as errors from 'vs/base/common/errors';\nimport { Emitter, Event, EventMultiplexer, Relay } from 'vs/base/common/event';\nimport { combinedDisposable, DisposableStore, dispose, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { revive } from 'vs/base/common/marshalling';\nimport * as strings from 'vs/base/common/strings';\nimport { isFunction, isUndefinedOrNull } from 'vs/base/common/types';\n\n/**\n * An `IChannel` is an abstraction over a collection of commands.\n * You can `call` several commands on a channel, each taking at\n * most one single argument. A `call` always returns a promise\n * with at most one single return value.\n */\nexport interface IChannel {\n\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(event: string, arg?: any): Event<T>;\n}\n\n/**\n * An `IServerChannel` is the counter part to `IChannel`,\n * on the server-side. You should implement this interface\n * if you'd like to handle remote promises or events.\n */\nexport interface IServerChannel<TContext = string> {\n\tcall<T>(ctx: TContext, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(ctx: TContext, event: string, arg?: any): Event<T>;\n}\n\nexport const enum RequestType {\n\tPromise = 100,\n\tPromiseCancel = 101,\n\tEventListen = 102,\n\tEventDispose = 103\n}\n\nfunction requestTypeToStr(type: RequestType): string {\n\tswitch (type) {\n\t\tcase RequestType.Promise:\n\t\t\treturn 'req';\n\t\tcase RequestType.PromiseCancel:\n\t\t\treturn 'cancel';\n\t\tcase RequestType.EventListen:\n\t\t\treturn 'subscribe';\n\t\tcase RequestType.EventDispose:\n\t\t\treturn 'unsubscribe';\n\t}\n}\n\ntype IRawPromiseRequest = { type: RequestType.Promise; id: number; channelName: string; name: string; arg: any };\ntype IRawPromiseCancelRequest = { type: RequestType.PromiseCancel; id: number };\ntype IRawEventListenRequest = { type: RequestType.EventListen; id: number; channelName: string; name: string; arg: any };\ntype IRawEventDisposeRequest = { type: RequestType.EventDispose; id: number };\ntype IRawRequest = IRawPromiseRequest | IRawPromiseCancelRequest | IRawEventListenRequest | IRawEventDisposeRequest;\n\nexport const enum ResponseType {\n\tInitialize = 200,\n\tPromiseSuccess = 201,\n\tPromiseError = 202,\n\tPromiseErrorObj = 203,\n\tEventFire = 204\n}\n\nfunction responseTypeToStr(type: ResponseType): string {\n\tswitch (type) {\n\t\tcase ResponseType.Initialize:\n\t\t\treturn `init`;\n\t\tcase ResponseType.PromiseSuccess:\n\t\t\treturn `reply:`;\n\t\tcase ResponseType.PromiseError:\n\t\tcase ResponseType.PromiseErrorObj:\n\t\t\treturn `replyErr:`;\n\t\tcase ResponseType.EventFire:\n\t\t\treturn `event:`;\n\t}\n}\n\ntype IRawInitializeResponse = { type: ResponseType.Initialize };\ntype IRawPromiseSuccessResponse = { type: ResponseType.PromiseSuccess; id: number; data: any };\ntype IRawPromiseErrorResponse = { type: ResponseType.PromiseError; id: number; data: { message: string; name: string; stack: string[] | undefined } };\ntype IRawPromiseErrorObjResponse = { type: ResponseType.PromiseErrorObj; id: number; data: any };\ntype IRawEventFireResponse = { type: ResponseType.EventFire; id: number; data: any };\ntype IRawResponse = IRawInitializeResponse | IRawPromiseSuccessResponse | IRawPromiseErrorResponse | IRawPromiseErrorObjResponse | IRawEventFireResponse;\n\ninterface IHandler {\n\t(response: IRawResponse): void;\n}\n\nexport interface IMessagePassingProtocol {\n\tsend(buffer: VSBuffer): void;\n\tonMessage: Event<VSBuffer>;\n\t/**\n\t * Wait for the write buffer (if applicable) to become empty.\n\t */\n\tdrain?(): Promise<void>;\n}\n\nenum State {\n\tUninitialized,\n\tIdle\n}\n\n/**\n * An `IChannelServer` hosts a collection of channels. You are\n * able to register channels onto it, provided a channel name.\n */\nexport interface IChannelServer<TContext = string> {\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void;\n}\n\n/**\n * An `IChannelClient` has access to a collection of channels. You\n * are able to get those channels, given their channel name.\n */\nexport interface IChannelClient {\n\tgetChannel<T extends IChannel>(channelName: string): T;\n}\n\nexport interface Client<TContext> {\n\treadonly ctx: TContext;\n}\n\nexport interface IConnectionHub<TContext> {\n\treadonly connections: Connection<TContext>[];\n\treadonly onDidAddConnection: Event<Connection<TContext>>;\n\treadonly onDidRemoveConnection: Event<Connection<TContext>>;\n}\n\n/**\n * An `IClientRouter` is responsible for routing calls to specific\n * channels, in scenarios in which there are multiple possible\n * channels (each from a separate client) to pick from.\n */\nexport interface IClientRouter<TContext = string> {\n\trouteCall(hub: IConnectionHub<TContext>, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<Client<TContext>>;\n\trouteEvent(hub: IConnectionHub<TContext>, event: string, arg?: any): Promise<Client<TContext>>;\n}\n\n/**\n * Similar to the `IChannelClient`, you can get channels from this\n * collection of channels. The difference being that in the\n * `IRoutingChannelClient`, there are multiple clients providing\n * the same channel. You'll need to pass in an `IClientRouter` in\n * order to pick the right one.\n */\nexport interface IRoutingChannelClient<TContext = string> {\n\tgetChannel<T extends IChannel>(channelName: string, router?: IClientRouter<TContext>): T;\n}\n\ninterface IReader {\n\tread(bytes: number): VSBuffer;\n}\n\ninterface IWriter {\n\twrite(buffer: VSBuffer): void;\n}\n\nclass BufferReader implements IReader {\n\n\tprivate pos = 0;\n\n\tconstructor(private buffer: VSBuffer) { }\n\n\tread(bytes: number): VSBuffer {\n\t\tconst result = this.buffer.slice(this.pos, this.pos + bytes);\n\t\tthis.pos += result.byteLength;\n\t\treturn result;\n\t}\n}\n\nclass BufferWriter implements IWriter {\n\n\tprivate buffers: VSBuffer[] = [];\n\n\tget buffer(): VSBuffer {\n\t\treturn VSBuffer.concat(this.buffers);\n\t}\n\n\twrite(buffer: VSBuffer): void {\n\t\tthis.buffers.push(buffer);\n\t}\n}\n\nenum DataType {\n\tUndefined = 0,\n\tString = 1,\n\tBuffer = 2,\n\tVSBuffer = 3,\n\tArray = 4,\n\tObject = 5\n}\n\nfunction createSizeBuffer(size: number): VSBuffer {\n\tconst result = VSBuffer.alloc(4);\n\tresult.writeUInt32BE(size, 0);\n\treturn result;\n}\n\nfunction readSizeBuffer(reader: IReader): number {\n\treturn reader.read(4).readUInt32BE(0);\n}\n\nfunction createOneByteBuffer(value: number): VSBuffer {\n\tconst result = VSBuffer.alloc(1);\n\tresult.writeUInt8(value, 0);\n\treturn result;\n}\n\nconst BufferPresets = {\n\tUndefined: createOneByteBuffer(DataType.Undefined),\n\tString: createOneByteBuffer(DataType.String),\n\tBuffer: createOneByteBuffer(DataType.Buffer),\n\tVSBuffer: createOneByteBuffer(DataType.VSBuffer),\n\tArray: createOneByteBuffer(DataType.Array),\n\tObject: createOneByteBuffer(DataType.Object),\n};\n\ndeclare const Buffer: any;\nconst hasBuffer = (typeof Buffer !== 'undefined');\n\nfunction serialize(writer: IWriter, data: any): void {\n\tif (typeof data === 'undefined') {\n\t\twriter.write(BufferPresets.Undefined);\n\t} else if (typeof data === 'string') {\n\t\tconst buffer = VSBuffer.fromString(data);\n\t\twriter.write(BufferPresets.String);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t} else if (hasBuffer && Buffer.isBuffer(data)) {\n\t\tconst buffer = VSBuffer.wrap(data);\n\t\twriter.write(BufferPresets.Buffer);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t} else if (data instanceof VSBuffer) {\n\t\twriter.write(BufferPresets.VSBuffer);\n\t\twriter.write(createSizeBuffer(data.byteLength));\n\t\twriter.write(data);\n\t} else if (Array.isArray(data)) {\n\t\twriter.write(BufferPresets.Array);\n\t\twriter.write(createSizeBuffer(data.length));\n\n\t\tfor (const el of data) {\n\t\t\tserialize(writer, el);\n\t\t}\n\t} else {\n\t\tconst buffer = VSBuffer.fromString(JSON.stringify(data));\n\t\twriter.write(BufferPresets.Object);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t}\n}\n\nfunction deserialize(reader: IReader): any {\n\tconst type = reader.read(1).readUInt8(0);\n\n\tswitch (type) {\n\t\tcase DataType.Undefined: return undefined;\n\t\tcase DataType.String: return reader.read(readSizeBuffer(reader)).toString();\n\t\tcase DataType.Buffer: return reader.read(readSizeBuffer(reader)).buffer;\n\t\tcase DataType.VSBuffer: return reader.read(readSizeBuffer(reader));\n\t\tcase DataType.Array: {\n\t\t\tconst length = readSizeBuffer(reader);\n\t\t\tconst result: any[] = [];\n\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tresult.push(deserialize(reader));\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t\tcase DataType.Object: return JSON.parse(reader.read(readSizeBuffer(reader)).toString());\n\t}\n}\n\ninterface PendingRequest {\n\trequest: IRawPromiseRequest | IRawEventListenRequest;\n\ttimeoutTimer: any;\n}\n\nexport class ChannelServer<TContext = string> implements IChannelServer<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate activeRequests = new Map<number, IDisposable>();\n\tprivate protocolListener: IDisposable | null;\n\n\t// Requests might come in for channels which are not yet registered.\n\t// They will timeout after `timeoutDelay`.\n\tprivate pendingRequests = new Map<string, PendingRequest[]>();\n\n\tconstructor(private protocol: IMessagePassingProtocol, private ctx: TContext, private logger: IIPCLogger | null = null, private timeoutDelay: number = 1000) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onRawMessage(msg));\n\t\tthis.sendResponse({ type: ResponseType.Initialize });\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\t// https://github.com/microsoft/vscode/issues/72531\n\t\tsetTimeout(() => this.flushPendingRequests(channelName), 0);\n\t}\n\n\tprivate sendResponse(response: IRawResponse): void {\n\t\tswitch (response.type) {\n\t\t\tcase ResponseType.Initialize: {\n\t\t\t\tconst msgLength = this.send([response.type]);\n\t\t\t\tthis.logger?.logOutgoing(msgLength, 0, RequestInitiator.OtherSide, responseTypeToStr(response.type));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj: {\n\t\t\t\tconst msgLength = this.send([response.type, response.id], response.data);\n\t\t\t\tthis.logger?.logOutgoing(msgLength, response.id, RequestInitiator.OtherSide, responseTypeToStr(response.type), response.data);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): number {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\treturn this.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): number {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t\treturn message.byteLength;\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tprivate onRawMessage(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type = header[0] as RequestType;\n\n\t\tswitch (type) {\n\t\t\tcase RequestType.Promise:\n\t\t\t\tthis.logger?.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}: ${header[2]}.${header[3]}`, body);\n\t\t\t\treturn this.onPromise({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.EventListen:\n\t\t\t\tthis.logger?.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}: ${header[2]}.${header[3]}`, body);\n\t\t\t\treturn this.onEventListen({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\t\tthis.logger?.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}`);\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t\tcase RequestType.EventDispose:\n\t\t\t\tthis.logger?.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}`);\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t}\n\t}\n\n\tprivate onPromise(request: IRawPromiseRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\tlet promise: Promise<any>;\n\n\t\ttry {\n\t\t\tpromise = channel.call(this.ctx, request.name, request.arg, cancellationTokenSource.token);\n\t\t} catch (err) {\n\t\t\tpromise = Promise.reject(err);\n\t\t}\n\n\t\tconst id = request.id;\n\n\t\tpromise.then(data => {\n\t\t\tthis.sendResponse(<IRawResponse>{ id, data, type: ResponseType.PromiseSuccess });\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}, err => {\n\t\t\tif (err instanceof Error) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid, data: {\n\t\t\t\t\t\tmessage: err.message,\n\t\t\t\t\t\tname: err.name,\n\t\t\t\t\t\tstack: err.stack ? (err.stack.split ? err.stack.split('\\n') : err.stack) : undefined\n\t\t\t\t\t}, type: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.sendResponse(<IRawResponse>{ id, data: err, type: ResponseType.PromiseErrorObj });\n\t\t\t}\n\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t});\n\n\t\tconst disposable = toDisposable(() => cancellationTokenSource.cancel());\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate onEventListen(request: IRawEventListenRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst id = request.id;\n\t\tconst event = channel.listen(this.ctx, request.name, request.arg);\n\t\tconst disposable = event(data => this.sendResponse(<IRawResponse>{ id, data, type: ResponseType.EventFire }));\n\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate disposeActiveRequest(request: IRawRequest): void {\n\t\tconst disposable = this.activeRequests.get(request.id);\n\n\t\tif (disposable) {\n\t\t\tdisposable.dispose();\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}\n\t}\n\n\tprivate collectPendingRequest(request: IRawPromiseRequest | IRawEventListenRequest): void {\n\t\tlet pendingRequests = this.pendingRequests.get(request.channelName);\n\n\t\tif (!pendingRequests) {\n\t\t\tpendingRequests = [];\n\t\t\tthis.pendingRequests.set(request.channelName, pendingRequests);\n\t\t}\n\n\t\tconst timer = setTimeout(() => {\n\t\t\tconsole.error(`Unknown channel: ${request.channelName}`);\n\n\t\t\tif (request.type === RequestType.Promise) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid: request.id,\n\t\t\t\t\tdata: { name: 'Unknown channel', message: `Channel name '${request.channelName}' timed out after ${this.timeoutDelay}ms`, stack: undefined },\n\t\t\t\t\ttype: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t}\n\t\t}, this.timeoutDelay);\n\n\t\tpendingRequests.push({ request, timeoutTimer: timer });\n\t}\n\n\tprivate flushPendingRequests(channelName: string): void {\n\t\tconst requests = this.pendingRequests.get(channelName);\n\n\t\tif (requests) {\n\t\t\tfor (const request of requests) {\n\t\t\t\tclearTimeout(request.timeoutTimer);\n\n\t\t\t\tswitch (request.request.type) {\n\t\t\t\t\tcase RequestType.Promise: this.onPromise(request.request); break;\n\t\t\t\t\tcase RequestType.EventListen: this.onEventListen(request.request); break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.pendingRequests.delete(channelName);\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tdispose(this.activeRequests.values());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport const enum RequestInitiator {\n\tLocalSide = 0,\n\tOtherSide = 1\n}\n\nexport interface IIPCLogger {\n\tlogIncoming(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void;\n\tlogOutgoing(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void;\n}\n\nexport class ChannelClient implements IChannelClient, IDisposable {\n\n\tprivate isDisposed: boolean = false;\n\tprivate state: State = State.Uninitialized;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate handlers = new Map<number, IHandler>();\n\tprivate lastRequestId: number = 0;\n\tprivate protocolListener: IDisposable | null;\n\tprivate logger: IIPCLogger | null;\n\n\tprivate readonly _onDidInitialize = new Emitter<void>();\n\treadonly onDidInitialize = this._onDidInitialize.event;\n\n\tconstructor(private protocol: IMessagePassingProtocol, logger: IIPCLogger | null = null) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onBuffer(msg));\n\t\tthis.logger = logger;\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken) {\n\t\t\t\tif (that.isDisposed) {\n\t\t\t\t\treturn Promise.reject(errors.canceled());\n\t\t\t\t}\n\t\t\t\treturn that.requestPromise(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any) {\n\t\t\t\tif (that.isDisposed) {\n\t\t\t\t\treturn Event.None;\n\t\t\t\t}\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate requestPromise(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.Promise;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tlet disposable: IDisposable;\n\n\t\tconst result = new Promise((c, e) => {\n\t\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\t\treturn e(errors.canceled());\n\t\t\t}\n\n\t\t\tconst doRequest = () => {\n\t\t\t\tconst handler: IHandler = response => {\n\t\t\t\t\tswitch (response.type) {\n\t\t\t\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tc(response.data);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseError: {\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tconst error = new Error(response.data.message);\n\t\t\t\t\t\t\t(<any>error).stack = response.data.stack;\n\t\t\t\t\t\t\terror.name = response.data.name;\n\t\t\t\t\t\t\te(error);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\te(response.data);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.handlers.set(id, handler);\n\t\t\t\tthis.sendRequest(request);\n\t\t\t};\n\n\t\t\tlet uninitializedPromise: CancelablePromise<void> | null = null;\n\t\t\tif (this.state === State.Idle) {\n\t\t\t\tdoRequest();\n\t\t\t} else {\n\t\t\t\tuninitializedPromise = createCancelablePromise(_ => this.whenInitialized());\n\t\t\t\tuninitializedPromise.then(() => {\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t\tdoRequest();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst cancel = () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.PromiseCancel });\n\t\t\t\t}\n\n\t\t\t\te(errors.canceled());\n\t\t\t};\n\n\t\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(cancel);\n\t\t\tdisposable = combinedDisposable(toDisposable(cancel), cancellationTokenListener);\n\t\t\tthis.activeRequests.add(disposable);\n\t\t});\n\n\t\treturn result.finally(() => { this.activeRequests.delete(disposable); });\n\t}\n\n\tprivate requestEvent(channelName: string, name: string, arg?: any): Event<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.EventListen;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tlet uninitializedPromise: CancelablePromise<void> | null = null;\n\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tuninitializedPromise = createCancelablePromise(_ => this.whenInitialized());\n\t\t\t\tuninitializedPromise.then(() => {\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t\tthis.activeRequests.add(emitter);\n\t\t\t\t\tthis.sendRequest(request);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.activeRequests.delete(emitter);\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.EventDispose });\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst handler: IHandler = (res: IRawResponse) => emitter.fire((res as IRawEventFireResponse).data);\n\t\tthis.handlers.set(id, handler);\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate sendRequest(request: IRawRequest): void {\n\t\tswitch (request.type) {\n\t\t\tcase RequestType.Promise:\n\t\t\tcase RequestType.EventListen: {\n\t\t\t\tconst msgLength = this.send([request.type, request.id, request.channelName, request.name], request.arg);\n\t\t\t\tthis.logger?.logOutgoing(msgLength, request.id, RequestInitiator.LocalSide, `${requestTypeToStr(request.type)}: ${request.channelName}.${request.name}`, request.arg);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\tcase RequestType.EventDispose: {\n\t\t\t\tconst msgLength = this.send([request.type, request.id]);\n\t\t\t\tthis.logger?.logOutgoing(msgLength, request.id, RequestInitiator.LocalSide, requestTypeToStr(request.type));\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): number {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\treturn this.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): number {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t\treturn message.byteLength;\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tprivate onBuffer(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type: ResponseType = header[0];\n\n\t\tswitch (type) {\n\t\t\tcase ResponseType.Initialize:\n\t\t\t\tthis.logger?.logIncoming(message.byteLength, 0, RequestInitiator.LocalSide, responseTypeToStr(type));\n\t\t\t\treturn this.onResponse({ type: header[0] });\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\tthis.logger?.logIncoming(message.byteLength, header[1], RequestInitiator.LocalSide, responseTypeToStr(type), body);\n\t\t\t\treturn this.onResponse({ type: header[0], id: header[1], data: body });\n\t\t}\n\t}\n\n\tprivate onResponse(response: IRawResponse): void {\n\t\tif (response.type === ResponseType.Initialize) {\n\t\t\tthis.state = State.Idle;\n\t\t\tthis._onDidInitialize.fire();\n\t\t\treturn;\n\t\t}\n\n\t\tconst handler = this.handlers.get(response.id);\n\n\t\thandler?.(response);\n\t}\n\n\t@memoize\n\tget onDidInitializePromise(): Promise<void> {\n\t\treturn Event.toPromise(this.onDidInitialize);\n\t}\n\n\tprivate whenInitialized(): Promise<void> {\n\t\tif (this.state === State.Idle) {\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\treturn this.onDidInitializePromise;\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.isDisposed = true;\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tdispose(this.activeRequests.values());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport interface ClientConnectionEvent {\n\tprotocol: IMessagePassingProtocol;\n\tonDidClientDisconnect: Event<void>;\n}\n\ninterface Connection<TContext> extends Client<TContext> {\n\treadonly channelServer: ChannelServer<TContext>;\n\treadonly channelClient: ChannelClient;\n}\n\n/**\n * An `IPCServer` is both a channel server and a routing channel\n * client.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCServer<TContext = string> implements IChannelServer<TContext>, IRoutingChannelClient<TContext>, IConnectionHub<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate _connections = new Set<Connection<TContext>>();\n\n\tprivate readonly _onDidAddConnection = new Emitter<Connection<TContext>>();\n\treadonly onDidAddConnection: Event<Connection<TContext>> = this._onDidAddConnection.event;\n\n\tprivate readonly _onDidRemoveConnection = new Emitter<Connection<TContext>>();\n\treadonly onDidRemoveConnection: Event<Connection<TContext>> = this._onDidRemoveConnection.event;\n\n\tget connections(): Connection<TContext>[] {\n\t\tconst result: Connection<TContext>[] = [];\n\t\tthis._connections.forEach(ctx => result.push(ctx));\n\t\treturn result;\n\t}\n\n\tconstructor(onDidClientConnect: Event<ClientConnectionEvent>) {\n\t\tonDidClientConnect(({ protocol, onDidClientDisconnect }) => {\n\t\t\tconst onFirstMessage = Event.once(protocol.onMessage);\n\n\t\t\tonFirstMessage(msg => {\n\t\t\t\tconst reader = new BufferReader(msg);\n\t\t\t\tconst ctx = deserialize(reader) as TContext;\n\n\t\t\t\tconst channelServer = new ChannelServer(protocol, ctx);\n\t\t\t\tconst channelClient = new ChannelClient(protocol);\n\n\t\t\t\tthis.channels.forEach((channel, name) => channelServer.registerChannel(name, channel));\n\n\t\t\t\tconst connection: Connection<TContext> = { channelServer, channelClient, ctx };\n\t\t\t\tthis._connections.add(connection);\n\t\t\t\tthis._onDidAddConnection.fire(connection);\n\n\t\t\t\tonDidClientDisconnect(() => {\n\t\t\t\t\tchannelServer.dispose();\n\t\t\t\t\tchannelClient.dispose();\n\t\t\t\t\tthis._connections.delete(connection);\n\t\t\t\t\tthis._onDidRemoveConnection.fire(connection);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Get a channel from a remote client. When passed a router,\n\t * one can specify which client it wants to call and listen to/from.\n\t * Otherwise, when calling without a router, a random client will\n\t * be selected and when listening without a router, every client\n\t * will be listened to.\n\t */\n\tgetChannel<T extends IChannel>(channelName: string, router: IClientRouter<TContext>): T;\n\tgetChannel<T extends IChannel>(channelName: string, clientFilter: (client: Client<TContext>) => boolean): T;\n\tgetChannel<T extends IChannel>(channelName: string, routerOrClientFilter: IClientRouter<TContext> | ((client: Client<TContext>) => boolean)): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\tlet connectionPromise: Promise<Client<TContext>>;\n\n\t\t\t\tif (isFunction(routerOrClientFilter)) {\n\t\t\t\t\t// when no router is provided, we go random client picking\n\t\t\t\t\tconst connection = getRandomElement(that.connections.filter(routerOrClientFilter));\n\n\t\t\t\t\tconnectionPromise = connection\n\t\t\t\t\t\t// if we found a client, let's call on it\n\t\t\t\t\t\t? Promise.resolve(connection)\n\t\t\t\t\t\t// else, let's wait for a client to come along\n\t\t\t\t\t\t: Event.toPromise(Event.filter(that.onDidAddConnection, routerOrClientFilter));\n\t\t\t\t} else {\n\t\t\t\t\tconnectionPromise = routerOrClientFilter.routeCall(that, command, arg);\n\t\t\t\t}\n\n\t\t\t\tconst channelPromise = connectionPromise\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.call(command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any): Event<T> {\n\t\t\t\tif (isFunction(routerOrClientFilter)) {\n\t\t\t\t\treturn that.getMulticastEvent(channelName, routerOrClientFilter, event, arg);\n\t\t\t\t}\n\n\t\t\t\tconst channelPromise = routerOrClientFilter.routeEvent(that, event, arg)\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.listen(event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate getMulticastEvent<T extends IChannel>(channelName: string, clientFilter: (client: Client<TContext>) => boolean, eventName: string, arg: any): Event<T> {\n\t\tconst that = this;\n\t\tlet disposables = new DisposableStore();\n\n\t\t// Create an emitter which hooks up to all clients\n\t\t// as soon as first listener is added. It also\n\t\t// disconnects from all clients as soon as the last listener\n\t\t// is removed.\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tdisposables = new DisposableStore();\n\n\t\t\t\t// The event multiplexer is useful since the active\n\t\t\t\t// client list is dynamic. We need to hook up and disconnection\n\t\t\t\t// to/from clients as they come and go.\n\t\t\t\tconst eventMultiplexer = new EventMultiplexer<T>();\n\t\t\t\tconst map = new Map<Connection<TContext>, IDisposable>();\n\n\t\t\t\tconst onDidAddConnection = (connection: Connection<TContext>) => {\n\t\t\t\t\tconst channel = connection.channelClient.getChannel(channelName);\n\t\t\t\t\tconst event = channel.listen<T>(eventName, arg);\n\t\t\t\t\tconst disposable = eventMultiplexer.add(event);\n\n\t\t\t\t\tmap.set(connection, disposable);\n\t\t\t\t};\n\n\t\t\t\tconst onDidRemoveConnection = (connection: Connection<TContext>) => {\n\t\t\t\t\tconst disposable = map.get(connection);\n\n\t\t\t\t\tif (!disposable) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\tmap.delete(connection);\n\t\t\t\t};\n\n\t\t\t\tthat.connections.filter(clientFilter).forEach(onDidAddConnection);\n\t\t\t\tEvent.filter(that.onDidAddConnection, clientFilter)(onDidAddConnection, undefined, disposables);\n\t\t\t\tthat.onDidRemoveConnection(onDidRemoveConnection, undefined, disposables);\n\t\t\t\teventMultiplexer.event(emitter.fire, emitter, disposables);\n\n\t\t\t\tdisposables.add(eventMultiplexer);\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tdisposables.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\tthis._connections.forEach(connection => {\n\t\t\tconnection.channelServer.registerChannel(channelName, channel);\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis.channels.clear();\n\t\tthis._connections.clear();\n\t\tthis._onDidAddConnection.dispose();\n\t\tthis._onDidRemoveConnection.dispose();\n\t}\n}\n\n/**\n * An `IPCClient` is both a channel client and a channel server.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCClient<TContext = string> implements IChannelClient, IChannelServer<TContext>, IDisposable {\n\n\tprivate channelClient: ChannelClient;\n\tprivate channelServer: ChannelServer<TContext>;\n\n\tconstructor(protocol: IMessagePassingProtocol, ctx: TContext, ipcLogger: IIPCLogger | null = null) {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, ctx);\n\t\tprotocol.send(writer.buffer);\n\n\t\tthis.channelClient = new ChannelClient(protocol, ipcLogger);\n\t\tthis.channelServer = new ChannelServer(protocol, ctx, ipcLogger);\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\treturn this.channelClient.getChannel(channelName) as T;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channelServer.registerChannel(channelName, channel);\n\t}\n\n\tdispose(): void {\n\t\tthis.channelClient.dispose();\n\t\tthis.channelServer.dispose();\n\t}\n}\n\nexport function getDelayedChannel<T extends IChannel>(promise: Promise<T>): T {\n\treturn {\n\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\treturn promise.then(c => c.call<T>(command, arg, cancellationToken));\n\t\t},\n\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tconst relay = new Relay<any>();\n\t\t\tpromise.then(c => relay.input = c.listen(event, arg));\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport function getNextTickChannel<T extends IChannel>(channel: T): T {\n\tlet didTick = false;\n\n\treturn {\n\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.call(command, arg, cancellationToken);\n\t\t\t}\n\n\t\t\treturn timeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => channel.call<T>(command, arg, cancellationToken));\n\t\t},\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.listen<T>(event, arg);\n\t\t\t}\n\n\t\t\tconst relay = new Relay<T>();\n\n\t\t\ttimeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => relay.input = channel.listen<T>(event, arg));\n\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport class StaticRouter<TContext = string> implements IClientRouter<TContext> {\n\n\tconstructor(private fn: (ctx: TContext) => boolean | Promise<boolean>) { }\n\n\trouteCall(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\trouteEvent(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\tprivate async route(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\tfor (const connection of hub.connections) {\n\t\t\tif (await Promise.resolve(this.fn(connection.ctx))) {\n\t\t\t\treturn Promise.resolve(connection);\n\t\t\t}\n\t\t}\n\n\t\tawait Event.toPromise(hub.onDidAddConnection);\n\t\treturn await this.route(hub);\n\t}\n}\n\n/**\n * Use ProxyChannels to automatically wrapping and unwrapping\n * services to/from IPC channels, instead of manually wrapping\n * each service method and event.\n *\n * Restrictions:\n * - If marshalling is enabled, only `URI` and `RegExp` is converted\n *   automatically for you\n * - Events must follow the naming convention `onUpperCase`\n * - `CancellationToken` is currently not supported\n * - If a context is provided, you can use `AddFirstParameterToFunctions`\n *   utility to signal this in the receiving side type\n */\nexport namespace ProxyChannel {\n\n\texport interface IProxyOptions {\n\n\t\t/**\n\t\t * Disables automatic marshalling of `URI`.\n\t\t * If marshalling is disabled, `UriComponents`\n\t\t * must be used instead.\n\t\t */\n\t\tdisableMarshalling?: boolean;\n\t}\n\n\texport interface ICreateServiceChannelOptions extends IProxyOptions { }\n\n\texport function fromService<TContext>(service: unknown, options?: ICreateServiceChannelOptions): IServerChannel<TContext> {\n\t\tconst handler = service as { [key: string]: unknown };\n\t\tconst disableMarshalling = options && options.disableMarshalling;\n\n\t\t// Buffer any event that should be supported by\n\t\t// iterating over all property keys and finding them\n\t\tconst mapEventNameToEvent = new Map<string, Event<unknown>>();\n\t\tfor (const key in handler) {\n\t\t\tif (propertyIsEvent(key)) {\n\t\t\t\tmapEventNameToEvent.set(key, Event.buffer(handler[key] as Event<unknown>, true));\n\t\t\t}\n\t\t}\n\n\t\treturn new class implements IServerChannel {\n\n\t\t\tlisten<T>(_: unknown, event: string, arg: any): Event<T> {\n\t\t\t\tconst eventImpl = mapEventNameToEvent.get(event);\n\t\t\t\tif (eventImpl) {\n\t\t\t\t\treturn eventImpl as Event<T>;\n\t\t\t\t}\n\n\t\t\t\tif (propertyIsDynamicEvent(event)) {\n\t\t\t\t\tconst target = handler[event];\n\t\t\t\t\tif (typeof target === 'function') {\n\t\t\t\t\t\treturn target.call(handler, arg);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthrow new Error(`Event not found: ${event}`);\n\t\t\t}\n\n\t\t\tcall(_: unknown, command: string, args?: any[]): Promise<any> {\n\t\t\t\tconst target = handler[command];\n\t\t\t\tif (typeof target === 'function') {\n\n\t\t\t\t\t// Revive unless marshalling disabled\n\t\t\t\t\tif (!disableMarshalling && Array.isArray(args)) {\n\t\t\t\t\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\t\t\t\t\targs[i] = revive(args[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn target.apply(handler, args);\n\t\t\t\t}\n\n\t\t\t\tthrow new Error(`Method not found: ${command}`);\n\t\t\t}\n\t\t};\n\t}\n\n\texport interface ICreateProxyServiceOptions extends IProxyOptions {\n\n\t\t/**\n\t\t * If provided, will add the value of `context`\n\t\t * to each method call to the target.\n\t\t */\n\t\tcontext?: unknown;\n\n\t\t/**\n\t\t * If provided, will not proxy any of the properties\n\t\t * that are part of the Map but rather return that value.\n\t\t */\n\t\tproperties?: Map<string, unknown>;\n\t}\n\n\texport function toService<T extends object>(channel: IChannel, options?: ICreateProxyServiceOptions): T {\n\t\tconst disableMarshalling = options && options.disableMarshalling;\n\n\t\treturn new Proxy({}, {\n\t\t\tget(_target: T, propKey: PropertyKey) {\n\t\t\t\tif (typeof propKey === 'string') {\n\n\t\t\t\t\t// Check for predefined values\n\t\t\t\t\tif (options?.properties?.has(propKey)) {\n\t\t\t\t\t\treturn options.properties.get(propKey);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Dynamic Event\n\t\t\t\t\tif (propertyIsDynamicEvent(propKey)) {\n\t\t\t\t\t\treturn function (arg: any) {\n\t\t\t\t\t\t\treturn channel.listen(propKey, arg);\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Event\n\t\t\t\t\tif (propertyIsEvent(propKey)) {\n\t\t\t\t\t\treturn channel.listen(propKey);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Function\n\t\t\t\t\treturn async function (...args: any[]) {\n\n\t\t\t\t\t\t// Add context if any\n\t\t\t\t\t\tlet methodArgs: any[];\n\t\t\t\t\t\tif (options && !isUndefinedOrNull(options.context)) {\n\t\t\t\t\t\t\tmethodArgs = [options.context, ...args];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmethodArgs = args;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst result = await channel.call(propKey, methodArgs);\n\n\t\t\t\t\t\t// Revive unless marshalling disabled\n\t\t\t\t\t\tif (!disableMarshalling) {\n\t\t\t\t\t\t\treturn revive(result);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tthrow new Error(`Property not found: ${String(propKey)}`);\n\t\t\t}\n\t\t}) as T;\n\t}\n\n\tfunction propertyIsEvent(name: string): boolean {\n\t\t// Assume a property is an event if it has a form of \"onSomething\"\n\t\treturn name[0] === 'o' && name[1] === 'n' && strings.isUpperAsciiLetter(name.charCodeAt(2));\n\t}\n\n\tfunction propertyIsDynamicEvent(name: string): boolean {\n\t\t// Assume a property is a dynamic event (a method that returns an event) if it has a form of \"onDynamicSomething\"\n\t\treturn /^onDynamic/.test(name) && strings.isUpperAsciiLetter(name.charCodeAt(9));\n\t}\n}\n\nconst colorTables = [\n\t['#2977B1', '#FC802D', '#34A13A', '#D3282F', '#9366BA'],\n\t['#8B564C', '#E177C0', '#7F7F7F', '#BBBE3D', '#2EBECD']\n];\n\nfunction prettyWithoutArrays(data: any): any {\n\tif (Array.isArray(data)) {\n\t\treturn data;\n\t}\n\tif (data && typeof data === 'object' && typeof data.toString === 'function') {\n\t\tconst result = data.toString();\n\t\tif (result !== '[object Object]') {\n\t\t\treturn result;\n\t\t}\n\t}\n\treturn data;\n}\n\nfunction pretty(data: any): any {\n\tif (Array.isArray(data)) {\n\t\treturn data.map(prettyWithoutArrays);\n\t}\n\treturn prettyWithoutArrays(data);\n}\n\nexport function logWithColors(direction: string, totalLength: number, msgLength: number, req: number, initiator: RequestInitiator, str: string, data: any): void {\n\tdata = pretty(data);\n\n\tconst colorTable = colorTables[initiator];\n\tconst color = colorTable[req % colorTable.length];\n\tlet args = [`%c[${direction}]%c[${String(totalLength).padStart(7, ' ')}]%c[len: ${String(msgLength).padStart(5, ' ')}]%c${String(req).padStart(5, ' ')} - ${str}`, 'color: darkgreen', 'color: grey', 'color: grey', `color: ${color}`];\n\tif (/\\($/.test(str)) {\n\t\targs = args.concat(data);\n\t\targs.push(')');\n\t} else {\n\t\targs.push(data);\n\t}\n\tconsole.log.apply(console, args as [string, ...string[]]);\n}\n\nexport class IPCLogger implements IIPCLogger {\n\tprivate _totalIncoming = 0;\n\tprivate _totalOutgoing = 0;\n\n\tconstructor(\n\t\tprivate readonly _outgoingPrefix: string,\n\t\tprivate readonly _incomingPrefix: string,\n\t) { }\n\n\tpublic logOutgoing(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void {\n\t\tthis._totalOutgoing += msgLength;\n\t\tlogWithColors(this._outgoingPrefix, this._totalOutgoing, msgLength, requestId, initiator, str, data);\n\t}\n\n\tpublic logIncoming(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void {\n\t\tthis._totalIncoming += msgLength;\n\t\tlogWithColors(this._incomingPrefix, this._totalIncoming, msgLength, requestId, initiator, str, data);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, dispose, IDisposable } from 'vs/base/common/lifecycle';\nimport { IIPCLogger, IMessagePassingProtocol, IPCClient } from 'vs/base/parts/ipc/common/ipc';\nimport { isWeb } from 'vs/base/common/platform';\n\nexport const enum SocketDiagnosticsEventType {\n\tCreated = 'created',\n\tRead = 'read',\n\tWrite = 'write',\n\tOpen = 'open',\n\tError = 'error',\n\tClose = 'close',\n\n\tBrowserWebSocketBlobReceived = 'browserWebSocketBlobReceived',\n\n\tNodeEndReceived = 'nodeEndReceived',\n\tNodeEndSent = 'nodeEndSent',\n\tNodeDrainBegin = 'nodeDrainBegin',\n\tNodeDrainEnd = 'nodeDrainEnd',\n\n\tzlibInflateError = 'zlibInflateError',\n\tzlibInflateData = 'zlibInflateData',\n\tzlibInflateInitialWrite = 'zlibInflateInitialWrite',\n\tzlibInflateInitialFlushFired = 'zlibInflateInitialFlushFired',\n\tzlibInflateWrite = 'zlibInflateWrite',\n\tzlibInflateFlushFired = 'zlibInflateFlushFired',\n\tzlibDeflateError = 'zlibDeflateError',\n\tzlibDeflateData = 'zlibDeflateData',\n\tzlibDeflateWrite = 'zlibDeflateWrite',\n\tzlibDeflateFlushFired = 'zlibDeflateFlushFired',\n\n\tWebSocketNodeSocketWrite = 'webSocketNodeSocketWrite',\n\tWebSocketNodeSocketPeekedHeader = 'webSocketNodeSocketPeekedHeader',\n\tWebSocketNodeSocketReadHeader = 'webSocketNodeSocketReadHeader',\n\tWebSocketNodeSocketReadData = 'webSocketNodeSocketReadData',\n\tWebSocketNodeSocketUnmaskedData = 'webSocketNodeSocketUnmaskedData',\n\tWebSocketNodeSocketDrainBegin = 'webSocketNodeSocketDrainBegin',\n\tWebSocketNodeSocketDrainEnd = 'webSocketNodeSocketDrainEnd',\n\n\tProtocolHeaderRead = 'protocolHeaderRead',\n\tProtocolMessageRead = 'protocolMessageRead',\n\tProtocolHeaderWrite = 'protocolHeaderWrite',\n\tProtocolMessageWrite = 'protocolMessageWrite',\n\tProtocolWrite = 'protocolWrite',\n}\n\nexport namespace SocketDiagnostics {\n\n\texport const enableDiagnostics = false;\n\n\texport interface IRecord {\n\t\ttimestamp: number;\n\t\tid: string;\n\t\tlabel: string;\n\t\ttype: SocketDiagnosticsEventType;\n\t\tbuff?: VSBuffer;\n\t\tdata?: any;\n\t}\n\n\texport const records: IRecord[] = [];\n\tconst socketIds = new WeakMap<any, string>();\n\tlet lastUsedSocketId = 0;\n\n\tfunction getSocketId(nativeObject: any, label: string): string {\n\t\tif (!socketIds.has(nativeObject)) {\n\t\t\tconst id = String(++lastUsedSocketId);\n\t\t\tsocketIds.set(nativeObject, id);\n\t\t}\n\t\treturn socketIds.get(nativeObject)!;\n\t}\n\n\texport function traceSocketEvent(nativeObject: any, socketDebugLabel: string, type: SocketDiagnosticsEventType, data?: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView | any): void {\n\t\tif (!enableDiagnostics) {\n\t\t\treturn;\n\t\t}\n\t\tconst id = getSocketId(nativeObject, socketDebugLabel);\n\n\t\tif (data instanceof VSBuffer || data instanceof Uint8Array || data instanceof ArrayBuffer || ArrayBuffer.isView(data)) {\n\t\t\tconst copiedData = VSBuffer.alloc(data.byteLength);\n\t\t\tcopiedData.set(data);\n\t\t\trecords.push({ timestamp: Date.now(), id, label: socketDebugLabel, type, buff: copiedData });\n\t\t} else {\n\t\t\t// data is a custom object\n\t\t\trecords.push({ timestamp: Date.now(), id, label: socketDebugLabel, type, data: data });\n\t\t}\n\t}\n}\n\nexport const enum SocketCloseEventType {\n\tNodeSocketCloseEvent = 0,\n\tWebSocketCloseEvent = 1\n}\n\nexport interface NodeSocketCloseEvent {\n\t/**\n\t * The type of the event\n\t */\n\treadonly type: SocketCloseEventType.NodeSocketCloseEvent;\n\t/**\n\t * `true` if the socket had a transmission error.\n\t */\n\treadonly hadError: boolean;\n\t/**\n\t * Underlying error.\n\t */\n\treadonly error: Error | undefined;\n}\n\nexport interface WebSocketCloseEvent {\n\t/**\n\t * The type of the event\n\t */\n\treadonly type: SocketCloseEventType.WebSocketCloseEvent;\n\t/**\n\t * Returns the WebSocket connection close code provided by the server.\n\t */\n\treadonly code: number;\n\t/**\n\t * Returns the WebSocket connection close reason provided by the server.\n\t */\n\treadonly reason: string;\n\t/**\n\t * Returns true if the connection closed cleanly; false otherwise.\n\t */\n\treadonly wasClean: boolean;\n\t/**\n\t * Underlying event.\n\t */\n\treadonly event: any | undefined;\n}\n\nexport type SocketCloseEvent = NodeSocketCloseEvent | WebSocketCloseEvent | undefined;\n\nexport interface ISocket extends IDisposable {\n\tonData(listener: (e: VSBuffer) => void): IDisposable;\n\tonClose(listener: (e: SocketCloseEvent) => void): IDisposable;\n\tonEnd(listener: () => void): IDisposable;\n\twrite(buffer: VSBuffer): void;\n\tend(): void;\n\tdrain(): Promise<void>;\n\n\ttraceSocketEvent(type: SocketDiagnosticsEventType, data?: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView | any): void;\n}\n\nlet emptyBuffer: VSBuffer | null = null;\nfunction getEmptyBuffer(): VSBuffer {\n\tif (!emptyBuffer) {\n\t\temptyBuffer = VSBuffer.alloc(0);\n\t}\n\treturn emptyBuffer;\n}\n\nexport class ChunkStream {\n\n\tprivate _chunks: VSBuffer[];\n\tprivate _totalLength: number;\n\n\tpublic get byteLength() {\n\t\treturn this._totalLength;\n\t}\n\n\tconstructor() {\n\t\tthis._chunks = [];\n\t\tthis._totalLength = 0;\n\t}\n\n\tpublic acceptChunk(buff: VSBuffer) {\n\t\tthis._chunks.push(buff);\n\t\tthis._totalLength += buff.byteLength;\n\t}\n\n\tpublic read(byteCount: number): VSBuffer {\n\t\treturn this._read(byteCount, true);\n\t}\n\n\tpublic peek(byteCount: number): VSBuffer {\n\t\treturn this._read(byteCount, false);\n\t}\n\n\tprivate _read(byteCount: number, advance: boolean): VSBuffer {\n\n\t\tif (byteCount === 0) {\n\t\t\treturn getEmptyBuffer();\n\t\t}\n\n\t\tif (byteCount > this._totalLength) {\n\t\t\tthrow new Error(`Cannot read so many bytes!`);\n\t\t}\n\n\t\tif (this._chunks[0].byteLength === byteCount) {\n\t\t\t// super fast path, precisely first chunk must be returned\n\t\t\tconst result = this._chunks[0];\n\t\t\tif (advance) {\n\t\t\t\tthis._chunks.shift();\n\t\t\t\tthis._totalLength -= byteCount;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tif (this._chunks[0].byteLength > byteCount) {\n\t\t\t// fast path, the reading is entirely within the first chunk\n\t\t\tconst result = this._chunks[0].slice(0, byteCount);\n\t\t\tif (advance) {\n\t\t\t\tthis._chunks[0] = this._chunks[0].slice(byteCount);\n\t\t\t\tthis._totalLength -= byteCount;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tconst result = VSBuffer.alloc(byteCount);\n\t\tlet resultOffset = 0;\n\t\tlet chunkIndex = 0;\n\t\twhile (byteCount > 0) {\n\t\t\tconst chunk = this._chunks[chunkIndex];\n\t\t\tif (chunk.byteLength > byteCount) {\n\t\t\t\t// this chunk will survive\n\t\t\t\tconst chunkPart = chunk.slice(0, byteCount);\n\t\t\t\tresult.set(chunkPart, resultOffset);\n\t\t\t\tresultOffset += byteCount;\n\n\t\t\t\tif (advance) {\n\t\t\t\t\tthis._chunks[chunkIndex] = chunk.slice(byteCount);\n\t\t\t\t\tthis._totalLength -= byteCount;\n\t\t\t\t}\n\n\t\t\t\tbyteCount -= byteCount;\n\t\t\t} else {\n\t\t\t\t// this chunk will be entirely read\n\t\t\t\tresult.set(chunk, resultOffset);\n\t\t\t\tresultOffset += chunk.byteLength;\n\n\t\t\t\tif (advance) {\n\t\t\t\t\tthis._chunks.shift();\n\t\t\t\t\tthis._totalLength -= chunk.byteLength;\n\t\t\t\t} else {\n\t\t\t\t\tchunkIndex++;\n\t\t\t\t}\n\n\t\t\t\tbyteCount -= chunk.byteLength;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n\nconst enum ProtocolMessageType {\n\tNone = 0,\n\tRegular = 1,\n\tControl = 2,\n\tAck = 3,\n\tDisconnect = 5,\n\tReplayRequest = 6,\n\tPause = 7,\n\tResume = 8\n}\n\nfunction protocolMessageTypeToString(messageType: ProtocolMessageType) {\n\tswitch (messageType) {\n\t\tcase ProtocolMessageType.None: return 'None';\n\t\tcase ProtocolMessageType.Regular: return 'Regular';\n\t\tcase ProtocolMessageType.Control: return 'Control';\n\t\tcase ProtocolMessageType.Ack: return 'Ack';\n\t\tcase ProtocolMessageType.Disconnect: return 'Disconnect';\n\t\tcase ProtocolMessageType.ReplayRequest: return 'ReplayRequest';\n\t\tcase ProtocolMessageType.Pause: return 'PauseWriting';\n\t\tcase ProtocolMessageType.Resume: return 'ResumeWriting';\n\t}\n}\n\nexport const enum ProtocolConstants {\n\tHeaderLength = 13,\n\t/**\n\t * Send an Acknowledge message at most 2 seconds later...\n\t */\n\tAcknowledgeTime = 2000, // 2 seconds\n\t/**\n\t * If there is a sent message that has been unacknowledged for 20 seconds,\n\t * and we didn't see any incoming server data in the past 20 seconds,\n\t * then consider the connection has timed out.\n\t */\n\tTimeoutTime = 20000, // 20 seconds\n\t/**\n\t * If there is no reconnection within this time-frame, consider the connection permanently closed...\n\t */\n\tReconnectionGraceTime = 3 * 60 * 60 * 1000, // 3hrs\n\t/**\n\t * Maximal grace time between the first and the last reconnection...\n\t */\n\tReconnectionShortGraceTime = 5 * 60 * 1000, // 5min\n}\n\nclass ProtocolMessage {\n\n\tpublic writtenTime: number;\n\n\tconstructor(\n\t\tpublic readonly type: ProtocolMessageType,\n\t\tpublic readonly id: number,\n\t\tpublic readonly ack: number,\n\t\tpublic readonly data: VSBuffer\n\t) {\n\t\tthis.writtenTime = 0;\n\t}\n\n\tpublic get size(): number {\n\t\treturn this.data.byteLength;\n\t}\n}\n\nclass ProtocolReader extends Disposable {\n\n\tprivate readonly _socket: ISocket;\n\tprivate _isDisposed: boolean;\n\tprivate readonly _incomingData: ChunkStream;\n\tpublic lastReadTime: number;\n\n\tprivate readonly _onMessage = this._register(new Emitter<ProtocolMessage>());\n\tpublic readonly onMessage: Event<ProtocolMessage> = this._onMessage.event;\n\n\tprivate readonly _state = {\n\t\treadHead: true,\n\t\treadLen: ProtocolConstants.HeaderLength,\n\t\tmessageType: ProtocolMessageType.None,\n\t\tid: 0,\n\t\tack: 0\n\t};\n\n\tconstructor(socket: ISocket) {\n\t\tsuper();\n\t\tthis._socket = socket;\n\t\tthis._isDisposed = false;\n\t\tthis._incomingData = new ChunkStream();\n\t\tthis._register(this._socket.onData(data => this.acceptChunk(data)));\n\t\tthis.lastReadTime = Date.now();\n\t}\n\n\tpublic acceptChunk(data: VSBuffer | null): void {\n\t\tif (!data || data.byteLength === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.lastReadTime = Date.now();\n\n\t\tthis._incomingData.acceptChunk(data);\n\n\t\twhile (this._incomingData.byteLength >= this._state.readLen) {\n\n\t\t\tconst buff = this._incomingData.read(this._state.readLen);\n\n\t\t\tif (this._state.readHead) {\n\t\t\t\t// buff is the header\n\n\t\t\t\t// save new state => next time will read the body\n\t\t\t\tthis._state.readHead = false;\n\t\t\t\tthis._state.readLen = buff.readUInt32BE(9);\n\t\t\t\tthis._state.messageType = buff.readUInt8(0);\n\t\t\t\tthis._state.id = buff.readUInt32BE(1);\n\t\t\t\tthis._state.ack = buff.readUInt32BE(5);\n\n\t\t\t\tthis._socket.traceSocketEvent(SocketDiagnosticsEventType.ProtocolHeaderRead, { messageType: protocolMessageTypeToString(this._state.messageType), id: this._state.id, ack: this._state.ack, messageSize: this._state.readLen });\n\n\t\t\t} else {\n\t\t\t\t// buff is the body\n\t\t\t\tconst messageType = this._state.messageType;\n\t\t\t\tconst id = this._state.id;\n\t\t\t\tconst ack = this._state.ack;\n\n\t\t\t\t// save new state => next time will read the header\n\t\t\t\tthis._state.readHead = true;\n\t\t\t\tthis._state.readLen = ProtocolConstants.HeaderLength;\n\t\t\t\tthis._state.messageType = ProtocolMessageType.None;\n\t\t\t\tthis._state.id = 0;\n\t\t\t\tthis._state.ack = 0;\n\n\t\t\t\tthis._socket.traceSocketEvent(SocketDiagnosticsEventType.ProtocolMessageRead, buff);\n\n\t\t\t\tthis._onMessage.fire(new ProtocolMessage(messageType, id, ack, buff));\n\n\t\t\t\tif (this._isDisposed) {\n\t\t\t\t\t// check if an event listener lead to our disposal\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic readEntireBuffer(): VSBuffer {\n\t\treturn this._incomingData.read(this._incomingData.byteLength);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._isDisposed = true;\n\t\tsuper.dispose();\n\t}\n}\n\nclass ProtocolWriter {\n\n\tprivate _isDisposed: boolean;\n\tprivate _isPaused: boolean;\n\tprivate readonly _socket: ISocket;\n\tprivate _data: VSBuffer[];\n\tprivate _totalLength: number;\n\tpublic lastWriteTime: number;\n\n\tconstructor(socket: ISocket) {\n\t\tthis._isDisposed = false;\n\t\tthis._isPaused = false;\n\t\tthis._socket = socket;\n\t\tthis._data = [];\n\t\tthis._totalLength = 0;\n\t\tthis.lastWriteTime = 0;\n\t}\n\n\tpublic dispose(): void {\n\t\ttry {\n\t\t\tthis.flush();\n\t\t} catch (err) {\n\t\t\t// ignore error, since the socket could be already closed\n\t\t}\n\t\tthis._isDisposed = true;\n\t}\n\n\tpublic drain(): Promise<void> {\n\t\tthis.flush();\n\t\treturn this._socket.drain();\n\t}\n\n\tpublic flush(): void {\n\t\t// flush\n\t\tthis._writeNow();\n\t}\n\n\tpublic pause(): void {\n\t\tthis._isPaused = true;\n\t}\n\n\tpublic resume(): void {\n\t\tthis._isPaused = false;\n\t\tthis._scheduleWriting();\n\t}\n\n\tpublic write(msg: ProtocolMessage) {\n\t\tif (this._isDisposed) {\n\t\t\t// ignore: there could be left-over promises which complete and then\n\t\t\t// decide to write a response, etc...\n\t\t\treturn;\n\t\t}\n\t\tmsg.writtenTime = Date.now();\n\t\tthis.lastWriteTime = Date.now();\n\t\tconst header = VSBuffer.alloc(ProtocolConstants.HeaderLength);\n\t\theader.writeUInt8(msg.type, 0);\n\t\theader.writeUInt32BE(msg.id, 1);\n\t\theader.writeUInt32BE(msg.ack, 5);\n\t\theader.writeUInt32BE(msg.data.byteLength, 9);\n\n\t\tthis._socket.traceSocketEvent(SocketDiagnosticsEventType.ProtocolHeaderWrite, { messageType: protocolMessageTypeToString(msg.type), id: msg.id, ack: msg.ack, messageSize: msg.data.byteLength });\n\t\tthis._socket.traceSocketEvent(SocketDiagnosticsEventType.ProtocolMessageWrite, msg.data);\n\n\t\tthis._writeSoon(header, msg.data);\n\t}\n\n\tprivate _bufferAdd(head: VSBuffer, body: VSBuffer): boolean {\n\t\tconst wasEmpty = this._totalLength === 0;\n\t\tthis._data.push(head, body);\n\t\tthis._totalLength += head.byteLength + body.byteLength;\n\t\treturn wasEmpty;\n\t}\n\n\tprivate _bufferTake(): VSBuffer {\n\t\tconst ret = VSBuffer.concat(this._data, this._totalLength);\n\t\tthis._data.length = 0;\n\t\tthis._totalLength = 0;\n\t\treturn ret;\n\t}\n\n\tprivate _writeSoon(header: VSBuffer, data: VSBuffer): void {\n\t\tif (this._bufferAdd(header, data)) {\n\t\t\tthis._scheduleWriting();\n\t\t}\n\t}\n\n\tprivate _writeNowTimeout: any = null;\n\tprivate _scheduleWriting(): void {\n\t\tif (this._writeNowTimeout) {\n\t\t\treturn;\n\t\t}\n\t\tthis._writeNowTimeout = setTimeout(() => {\n\t\t\tthis._writeNowTimeout = null;\n\t\t\tthis._writeNow();\n\t\t});\n\t}\n\n\tprivate _writeNow(): void {\n\t\tif (this._totalLength === 0) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._isPaused) {\n\t\t\treturn;\n\t\t}\n\t\tconst data = this._bufferTake();\n\t\tthis._socket.traceSocketEvent(SocketDiagnosticsEventType.ProtocolWrite, { byteLength: data.byteLength });\n\t\tthis._socket.write(data);\n\t}\n}\n\n/**\n * A message has the following format:\n * ```\n *     /-------------------------------|------\\\n *     |             HEADER            |      |\n *     |-------------------------------| DATA |\n *     | TYPE | ID | ACK | DATA_LENGTH |      |\n *     \\-------------------------------|------/\n * ```\n * The header is 9 bytes and consists of:\n *  - TYPE is 1 byte (ProtocolMessageType) - the message type\n *  - ID is 4 bytes (u32be) - the message id (can be 0 to indicate to be ignored)\n *  - ACK is 4 bytes (u32be) - the acknowledged message id (can be 0 to indicate to be ignored)\n *  - DATA_LENGTH is 4 bytes (u32be) - the length in bytes of DATA\n *\n * Only Regular messages are counted, other messages are not counted, nor acknowledged.\n */\nexport class Protocol extends Disposable implements IMessagePassingProtocol {\n\n\tprivate _socket: ISocket;\n\tprivate _socketWriter: ProtocolWriter;\n\tprivate _socketReader: ProtocolReader;\n\n\tprivate readonly _onMessage = new Emitter<VSBuffer>();\n\treadonly onMessage: Event<VSBuffer> = this._onMessage.event;\n\n\tprivate readonly _onDidDispose = new Emitter<void>();\n\treadonly onDidDispose: Event<void> = this._onDidDispose.event;\n\n\tconstructor(socket: ISocket) {\n\t\tsuper();\n\t\tthis._socket = socket;\n\t\tthis._socketWriter = this._register(new ProtocolWriter(this._socket));\n\t\tthis._socketReader = this._register(new ProtocolReader(this._socket));\n\n\t\tthis._register(this._socketReader.onMessage((msg) => {\n\t\t\tif (msg.type === ProtocolMessageType.Regular) {\n\t\t\t\tthis._onMessage.fire(msg.data);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this._socket.onClose(() => this._onDidDispose.fire()));\n\t}\n\n\tdrain(): Promise<void> {\n\t\treturn this._socketWriter.drain();\n\t}\n\n\tgetSocket(): ISocket {\n\t\treturn this._socket;\n\t}\n\n\tsendDisconnect(): void {\n\t\t// Nothing to do...\n\t}\n\n\tsend(buffer: VSBuffer): void {\n\t\tthis._socketWriter.write(new ProtocolMessage(ProtocolMessageType.Regular, 0, 0, buffer));\n\t}\n}\n\nexport class Client<TContext = string> extends IPCClient<TContext> {\n\n\tstatic fromSocket<TContext = string>(socket: ISocket, id: TContext): Client<TContext> {\n\t\treturn new Client(new Protocol(socket), id);\n\t}\n\n\tget onDidDispose(): Event<void> { return this.protocol.onDidDispose; }\n\n\tconstructor(private protocol: Protocol | PersistentProtocol, id: TContext, ipcLogger: IIPCLogger | null = null) {\n\t\tsuper(protocol, id, ipcLogger);\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tconst socket = this.protocol.getSocket();\n\t\tthis.protocol.sendDisconnect();\n\t\tthis.protocol.dispose();\n\t\tsocket.end();\n\t}\n}\n\n/**\n * Will ensure no messages are lost if there are no event listeners.\n */\nexport class BufferedEmitter<T> {\n\tprivate _emitter: Emitter<T>;\n\tpublic readonly event: Event<T>;\n\n\tprivate _hasListeners = false;\n\tprivate _isDeliveringMessages = false;\n\tprivate _bufferedMessages: T[] = [];\n\n\tconstructor() {\n\t\tthis._emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tthis._hasListeners = true;\n\t\t\t\t// it is important to deliver these messages after this call, but before\n\t\t\t\t// other messages have a chance to be received (to guarantee in order delivery)\n\t\t\t\t// that's why we're using here queueMicrotask and not other types of timeouts\n\t\t\t\tqueueMicrotask(() => this._deliverMessages());\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis._hasListeners = false;\n\t\t\t}\n\t\t});\n\n\t\tthis.event = this._emitter.event;\n\t}\n\n\tprivate _deliverMessages(): void {\n\t\tif (this._isDeliveringMessages) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isDeliveringMessages = true;\n\t\twhile (this._hasListeners && this._bufferedMessages.length > 0) {\n\t\t\tthis._emitter.fire(this._bufferedMessages.shift()!);\n\t\t}\n\t\tthis._isDeliveringMessages = false;\n\t}\n\n\tpublic fire(event: T): void {\n\t\tif (this._hasListeners) {\n\t\t\tif (this._bufferedMessages.length > 0) {\n\t\t\t\tthis._bufferedMessages.push(event);\n\t\t\t} else {\n\t\t\t\tthis._emitter.fire(event);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._bufferedMessages.push(event);\n\t\t}\n\t}\n\n\tpublic flushBuffer(): void {\n\t\tthis._bufferedMessages = [];\n\t}\n}\n\nclass QueueElement<T> {\n\tpublic readonly data: T;\n\tpublic next: QueueElement<T> | null;\n\n\tconstructor(data: T) {\n\t\tthis.data = data;\n\t\tthis.next = null;\n\t}\n}\n\nclass Queue<T> {\n\n\tprivate _first: QueueElement<T> | null;\n\tprivate _last: QueueElement<T> | null;\n\n\tconstructor() {\n\t\tthis._first = null;\n\t\tthis._last = null;\n\t}\n\n\tpublic peek(): T | null {\n\t\tif (!this._first) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this._first.data;\n\t}\n\n\tpublic toArray(): T[] {\n\t\tconst result: T[] = [];\n\t\tlet resultLen = 0;\n\t\tlet it = this._first;\n\t\twhile (it) {\n\t\t\tresult[resultLen++] = it.data;\n\t\t\tit = it.next;\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic pop(): void {\n\t\tif (!this._first) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._first === this._last) {\n\t\t\tthis._first = null;\n\t\t\tthis._last = null;\n\t\t\treturn;\n\t\t}\n\t\tthis._first = this._first.next;\n\t}\n\n\tpublic push(item: T): void {\n\t\tconst element = new QueueElement(item);\n\t\tif (!this._first) {\n\t\t\tthis._first = element;\n\t\t\tthis._last = element;\n\t\t\treturn;\n\t\t}\n\t\tthis._last!.next = element;\n\t\tthis._last = element;\n\t}\n}\n\nclass LoadEstimator {\n\n\tprivate static _HISTORY_LENGTH = 10;\n\tprivate static _INSTANCE: LoadEstimator | null = null;\n\tpublic static getInstance(): LoadEstimator {\n\t\tif (!LoadEstimator._INSTANCE) {\n\t\t\tLoadEstimator._INSTANCE = new LoadEstimator();\n\t\t}\n\t\treturn LoadEstimator._INSTANCE;\n\t}\n\n\tprivate lastRuns: number[];\n\n\tconstructor() {\n\t\tthis.lastRuns = [];\n\t\tconst now = Date.now();\n\t\tfor (let i = 0; i < LoadEstimator._HISTORY_LENGTH; i++) {\n\t\t\tthis.lastRuns[i] = now - 1000 * i;\n\t\t}\n\t\tsetInterval(() => {\n\t\t\tfor (let i = LoadEstimator._HISTORY_LENGTH; i >= 1; i--) {\n\t\t\t\tthis.lastRuns[i] = this.lastRuns[i - 1];\n\t\t\t}\n\t\t\tthis.lastRuns[0] = Date.now();\n\t\t}, 1000);\n\t}\n\n\t/**\n\t * returns an estimative number, from 0 (low load) to 1 (high load)\n\t */\n\tprivate load(): number {\n\t\tconst now = Date.now();\n\t\tconst historyLimit = (1 + LoadEstimator._HISTORY_LENGTH) * 1000;\n\t\tlet score = 0;\n\t\tfor (let i = 0; i < LoadEstimator._HISTORY_LENGTH; i++) {\n\t\t\tif (now - this.lastRuns[i] <= historyLimit) {\n\t\t\t\tscore++;\n\t\t\t}\n\t\t}\n\t\treturn 1 - score / LoadEstimator._HISTORY_LENGTH;\n\t}\n\n\tpublic hasHighLoad(): boolean {\n\t\treturn this.load() >= 0.5;\n\t}\n}\n\nexport interface ILoadEstimator {\n\thasHighLoad(): boolean;\n}\n\n/**\n * Same as Protocol, but will actually track messages and acks.\n * Moreover, it will ensure no messages are lost if there are no event listeners.\n */\nexport class PersistentProtocol implements IMessagePassingProtocol {\n\n\tprivate _isReconnecting: boolean;\n\n\tprivate _outgoingUnackMsg: Queue<ProtocolMessage>;\n\tprivate _outgoingMsgId: number;\n\tprivate _outgoingAckId: number;\n\tprivate _outgoingAckTimeout: any | null;\n\n\tprivate _incomingMsgId: number;\n\tprivate _incomingAckId: number;\n\tprivate _incomingMsgLastTime: number;\n\tprivate _incomingAckTimeout: any | null;\n\n\tprivate _lastReplayRequestTime: number;\n\tprivate _lastSocketTimeoutTime: number;\n\n\tprivate _socket: ISocket;\n\tprivate _socketWriter: ProtocolWriter;\n\tprivate _socketReader: ProtocolReader;\n\tprivate _socketDisposables: IDisposable[];\n\n\tprivate readonly _loadEstimator: ILoadEstimator;\n\n\tprivate readonly _onControlMessage = new BufferedEmitter<VSBuffer>();\n\treadonly onControlMessage: Event<VSBuffer> = this._onControlMessage.event;\n\n\tprivate readonly _onMessage = new BufferedEmitter<VSBuffer>();\n\treadonly onMessage: Event<VSBuffer> = this._onMessage.event;\n\n\tprivate readonly _onDidDispose = new BufferedEmitter<void>();\n\treadonly onDidDispose: Event<void> = this._onDidDispose.event;\n\n\tprivate readonly _onSocketClose = new BufferedEmitter<SocketCloseEvent>();\n\treadonly onSocketClose: Event<SocketCloseEvent> = this._onSocketClose.event;\n\n\tprivate readonly _onSocketTimeout = new BufferedEmitter<void>();\n\treadonly onSocketTimeout: Event<void> = this._onSocketTimeout.event;\n\n\tpublic get unacknowledgedCount(): number {\n\t\treturn this._outgoingMsgId - this._outgoingAckId;\n\t}\n\n\tconstructor(socket: ISocket, initialChunk: VSBuffer | null = null, loadEstimator: ILoadEstimator = LoadEstimator.getInstance()) {\n\t\tthis._loadEstimator = loadEstimator;\n\t\tthis._isReconnecting = false;\n\t\tthis._outgoingUnackMsg = new Queue<ProtocolMessage>();\n\t\tthis._outgoingMsgId = 0;\n\t\tthis._outgoingAckId = 0;\n\t\tthis._outgoingAckTimeout = null;\n\n\t\tthis._incomingMsgId = 0;\n\t\tthis._incomingAckId = 0;\n\t\tthis._incomingMsgLastTime = 0;\n\t\tthis._incomingAckTimeout = null;\n\n\t\tthis._lastReplayRequestTime = 0;\n\t\tthis._lastSocketTimeoutTime = Date.now();\n\n\t\tthis._socketDisposables = [];\n\t\tthis._socket = socket;\n\t\tthis._socketWriter = new ProtocolWriter(this._socket);\n\t\tthis._socketDisposables.push(this._socketWriter);\n\t\tthis._socketReader = new ProtocolReader(this._socket);\n\t\tthis._socketDisposables.push(this._socketReader);\n\t\t// Send empty messages to keep the socket alive.  We only need this on the\n\t\t// web where sockets can be killed by reverse proxies for inactivity.\n\t\tif (isWeb) {\n\t\t\tconst timer = setInterval(() => {\n\t\t\t\tconst msg = new ProtocolMessage(ProtocolMessageType.None, 0, 0, getEmptyBuffer());\n\t\t\t\tthis._socketWriter.write(msg);\n\t\t\t}, 45000); // NGINX has a 60 second default timeout so try 45 seconds.\n\t\t\tthis._socketDisposables.push({\n\t\t\t\tdispose: () => {\n\t\t\t\t\tclearInterval(timer);\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tthis._socketDisposables.push(this._socketReader.onMessage(msg => this._receiveMessage(msg)));\n\t\tthis._socketDisposables.push(this._socket.onClose((e) => this._onSocketClose.fire(e)));\n\t\tif (initialChunk) {\n\t\t\tthis._socketReader.acceptChunk(initialChunk);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (this._outgoingAckTimeout) {\n\t\t\tclearTimeout(this._outgoingAckTimeout);\n\t\t\tthis._outgoingAckTimeout = null;\n\t\t}\n\t\tif (this._incomingAckTimeout) {\n\t\t\tclearTimeout(this._incomingAckTimeout);\n\t\t\tthis._incomingAckTimeout = null;\n\t\t}\n\t\tthis._socketDisposables = dispose(this._socketDisposables);\n\t}\n\n\tdrain(): Promise<void> {\n\t\treturn this._socketWriter.drain();\n\t}\n\n\tsendDisconnect(): void {\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Disconnect, 0, 0, getEmptyBuffer());\n\t\tthis._socketWriter.write(msg);\n\t\tthis._socketWriter.flush();\n\t}\n\n\tsendPause(): void {\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Pause, 0, 0, getEmptyBuffer());\n\t\tthis._socketWriter.write(msg);\n\t}\n\n\tsendResume(): void {\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Resume, 0, 0, getEmptyBuffer());\n\t\tthis._socketWriter.write(msg);\n\t}\n\n\tpauseSocketWriting() {\n\t\tthis._socketWriter.pause();\n\t}\n\n\tpublic getSocket(): ISocket {\n\t\treturn this._socket;\n\t}\n\n\tpublic getMillisSinceLastIncomingData(): number {\n\t\treturn Date.now() - this._socketReader.lastReadTime;\n\t}\n\n\tpublic beginAcceptReconnection(socket: ISocket, initialDataChunk: VSBuffer | null): void {\n\t\tthis._isReconnecting = true;\n\n\t\tthis._socketDisposables = dispose(this._socketDisposables);\n\t\tthis._onControlMessage.flushBuffer();\n\t\tthis._onSocketClose.flushBuffer();\n\t\tthis._onSocketTimeout.flushBuffer();\n\t\tthis._socket.dispose();\n\n\t\tthis._lastReplayRequestTime = 0;\n\t\tthis._lastSocketTimeoutTime = Date.now();\n\n\t\tthis._socket = socket;\n\t\tthis._socketWriter = new ProtocolWriter(this._socket);\n\t\tthis._socketDisposables.push(this._socketWriter);\n\t\tthis._socketReader = new ProtocolReader(this._socket);\n\t\tthis._socketDisposables.push(this._socketReader);\n\t\tthis._socketDisposables.push(this._socketReader.onMessage(msg => this._receiveMessage(msg)));\n\t\tthis._socketDisposables.push(this._socket.onClose((e) => this._onSocketClose.fire(e)));\n\t\tthis._socketReader.acceptChunk(initialDataChunk);\n\t}\n\n\tpublic endAcceptReconnection(): void {\n\t\tthis._isReconnecting = false;\n\n\t\t// After a reconnection, let the other party know (again) which messages have been received.\n\t\t// (perhaps the other party didn't receive a previous ACK)\n\t\tthis._incomingAckId = this._incomingMsgId;\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Ack, 0, this._incomingAckId, getEmptyBuffer());\n\t\tthis._socketWriter.write(msg);\n\n\t\t// Send again all unacknowledged messages\n\t\tconst toSend = this._outgoingUnackMsg.toArray();\n\t\tfor (let i = 0, len = toSend.length; i < len; i++) {\n\t\t\tthis._socketWriter.write(toSend[i]);\n\t\t}\n\t\tthis._recvAckCheck();\n\t}\n\n\tpublic acceptDisconnect(): void {\n\t\tthis._onDidDispose.fire();\n\t}\n\n\tprivate _receiveMessage(msg: ProtocolMessage): void {\n\t\tif (msg.ack > this._outgoingAckId) {\n\t\t\tthis._outgoingAckId = msg.ack;\n\t\t\tdo {\n\t\t\t\tconst first = this._outgoingUnackMsg.peek();\n\t\t\t\tif (first && first.id <= msg.ack) {\n\t\t\t\t\t// this message has been confirmed, remove it\n\t\t\t\t\tthis._outgoingUnackMsg.pop();\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} while (true);\n\t\t}\n\n\t\tswitch (msg.type) {\n\t\t\tcase ProtocolMessageType.None: {\n\t\t\t\t// N/A\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ProtocolMessageType.Regular: {\n\t\t\t\tif (msg.id > this._incomingMsgId) {\n\t\t\t\t\tif (msg.id !== this._incomingMsgId + 1) {\n\t\t\t\t\t\t// in case we missed some messages we ask the other party to resend them\n\t\t\t\t\t\tconst now = Date.now();\n\t\t\t\t\t\tif (now - this._lastReplayRequestTime > 10000) {\n\t\t\t\t\t\t\t// send a replay request at most once every 10s\n\t\t\t\t\t\t\tthis._lastReplayRequestTime = now;\n\t\t\t\t\t\t\tthis._socketWriter.write(new ProtocolMessage(ProtocolMessageType.ReplayRequest, 0, 0, getEmptyBuffer()));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._incomingMsgId = msg.id;\n\t\t\t\t\t\tthis._incomingMsgLastTime = Date.now();\n\t\t\t\t\t\tthis._sendAckCheck();\n\t\t\t\t\t\tthis._onMessage.fire(msg.data);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ProtocolMessageType.Control: {\n\t\t\t\tthis._onControlMessage.fire(msg.data);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ProtocolMessageType.Ack: {\n\t\t\t\t// nothing to do\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ProtocolMessageType.Disconnect: {\n\t\t\t\tthis._onDidDispose.fire();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ProtocolMessageType.ReplayRequest: {\n\t\t\t\t// Send again all unacknowledged messages\n\t\t\t\tconst toSend = this._outgoingUnackMsg.toArray();\n\t\t\t\tfor (let i = 0, len = toSend.length; i < len; i++) {\n\t\t\t\t\tthis._socketWriter.write(toSend[i]);\n\t\t\t\t}\n\t\t\t\tthis._recvAckCheck();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ProtocolMessageType.Pause: {\n\t\t\t\tthis._socketWriter.pause();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ProtocolMessageType.Resume: {\n\t\t\t\tthis._socketWriter.resume();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treadEntireBuffer(): VSBuffer {\n\t\treturn this._socketReader.readEntireBuffer();\n\t}\n\n\tflush(): void {\n\t\tthis._socketWriter.flush();\n\t}\n\n\tsend(buffer: VSBuffer): void {\n\t\tconst myId = ++this._outgoingMsgId;\n\t\tthis._incomingAckId = this._incomingMsgId;\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Regular, myId, this._incomingAckId, buffer);\n\t\tthis._outgoingUnackMsg.push(msg);\n\t\tif (!this._isReconnecting) {\n\t\t\tthis._socketWriter.write(msg);\n\t\t\tthis._recvAckCheck();\n\t\t}\n\t}\n\n\t/**\n\t * Send a message which will not be part of the regular acknowledge flow.\n\t * Use this for early control messages which are repeated in case of reconnection.\n\t */\n\tsendControl(buffer: VSBuffer): void {\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Control, 0, 0, buffer);\n\t\tthis._socketWriter.write(msg);\n\t}\n\n\tprivate _sendAckCheck(): void {\n\t\tif (this._incomingMsgId <= this._incomingAckId) {\n\t\t\t// nothink to acknowledge\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._incomingAckTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tconst timeSinceLastIncomingMsg = Date.now() - this._incomingMsgLastTime;\n\t\tif (timeSinceLastIncomingMsg >= ProtocolConstants.AcknowledgeTime) {\n\t\t\t// sufficient time has passed since this message has been received,\n\t\t\t// and no message from our side needed to be sent in the meantime,\n\t\t\t// so we will send a message containing only an ack.\n\t\t\tthis._sendAck();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._incomingAckTimeout = setTimeout(() => {\n\t\t\tthis._incomingAckTimeout = null;\n\t\t\tthis._sendAckCheck();\n\t\t}, ProtocolConstants.AcknowledgeTime - timeSinceLastIncomingMsg + 5);\n\t}\n\n\tprivate _recvAckCheck(): void {\n\t\tif (this._outgoingMsgId <= this._outgoingAckId) {\n\t\t\t// everything has been acknowledged\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._outgoingAckTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._isReconnecting) {\n\t\t\t// do not cause a timeout during reconnection,\n\t\t\t// because messages will not be actually written until `endAcceptReconnection`\n\t\t\treturn;\n\t\t}\n\n\t\tconst oldestUnacknowledgedMsg = this._outgoingUnackMsg.peek()!;\n\t\tconst timeSinceOldestUnacknowledgedMsg = Date.now() - oldestUnacknowledgedMsg.writtenTime;\n\t\tconst timeSinceLastReceivedSomeData = Date.now() - this._socketReader.lastReadTime;\n\t\tconst timeSinceLastTimeout = Date.now() - this._lastSocketTimeoutTime;\n\n\t\tif (\n\t\t\ttimeSinceOldestUnacknowledgedMsg >= ProtocolConstants.TimeoutTime\n\t\t\t&& timeSinceLastReceivedSomeData >= ProtocolConstants.TimeoutTime\n\t\t\t&& timeSinceLastTimeout >= ProtocolConstants.TimeoutTime\n\t\t) {\n\t\t\t// It's been a long time since our sent message was acknowledged\n\t\t\t// and a long time since we received some data\n\n\t\t\t// But this might be caused by the event loop being busy and failing to read messages\n\t\t\tif (!this._loadEstimator.hasHighLoad()) {\n\t\t\t\t// Trash the socket\n\t\t\t\tthis._lastSocketTimeoutTime = Date.now();\n\t\t\t\tthis._onSocketTimeout.fire(undefined);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tconst minimumTimeUntilTimeout = Math.max(\n\t\t\tProtocolConstants.TimeoutTime - timeSinceOldestUnacknowledgedMsg,\n\t\t\tProtocolConstants.TimeoutTime - timeSinceLastReceivedSomeData,\n\t\t\tProtocolConstants.TimeoutTime - timeSinceLastTimeout,\n\t\t\t500\n\t\t);\n\n\t\tthis._outgoingAckTimeout = setTimeout(() => {\n\t\t\tthis._outgoingAckTimeout = null;\n\t\t\tthis._recvAckCheck();\n\t\t}, minimumTimeUntilTimeout);\n\t}\n\n\tprivate _sendAck(): void {\n\t\tif (this._incomingMsgId <= this._incomingAckId) {\n\t\t\t// nothink to acknowledge\n\t\t\treturn;\n\t\t}\n\n\t\tthis._incomingAckId = this._incomingMsgId;\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Ack, 0, this._incomingAckId, getEmptyBuffer());\n\t\tthis._socketWriter.write(msg);\n\t}\n}\n\n// (() => {\n// \tif (!SocketDiagnostics.enableDiagnostics) {\n// \t\treturn;\n// \t}\n// \tif (typeof require.__$__nodeRequire !== 'function') {\n// \t\tconsole.log(`Can only log socket diagnostics on native platforms.`);\n// \t\treturn;\n// \t}\n// \tconst type = (\n// \t\tprocess.argv.includes('--type=renderer')\n// \t\t\t? 'renderer'\n// \t\t\t: (process.argv.includes('--type=extensionHost')\n// \t\t\t\t? 'extensionHost'\n// \t\t\t\t: (process.argv.some(item => item.includes('server-main'))\n// \t\t\t\t\t? 'server'\n// \t\t\t\t\t: 'unknown'\n// \t\t\t\t)\n// \t\t\t)\n// \t);\n// \tsetTimeout(() => {\n// \t\tSocketDiagnostics.records.forEach(r => {\n// \t\t\tif (r.buff) {\n// \t\t\t\tr.data = Buffer.from(r.buff.buffer).toString('base64');\n// \t\t\t\tr.buff = undefined;\n// \t\t\t}\n// \t\t});\n\n// \t\tconst fs = <typeof import('fs')>require.__$__nodeRequire('fs');\n// \t\tconst path = <typeof import('path')>require.__$__nodeRequire('path');\n// \t\tconst logPath = path.join(process.cwd(),`${type}-${process.pid}`);\n\n// \t\tconsole.log(`dumping socket diagnostics at ${logPath}`);\n// \t\tfs.writeFileSync(logPath, JSON.stringify(SocketDiagnostics.records));\n// \t}, 20000);\n// })();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// import { createHash } from 'crypto';\nimport type { Server as NetServer, Socket } from 'net';\n// import { tmpdir } from 'os';\nimport type * as zlib from 'zlib';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { join } from 'vs/base/common/path';\nimport { Platform, platform } from 'vs/base/common/platform';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { ClientConnectionEvent, IPCServer } from 'vs/base/parts/ipc/common/ipc';\nimport { ChunkStream, Client, ISocket, Protocol, SocketCloseEvent, SocketCloseEventType, SocketDiagnostics, SocketDiagnosticsEventType } from 'vs/base/parts/ipc/common/ipc.net';\n\n// TODO@bpasero remove me once electron utility process has landed\nfunction getNodeDependencies() {\n\treturn {\n\t\tcrypto: (require.__$__nodeRequire('crypto') as any) as typeof import('crypto'),\n\t\tzlib: (require.__$__nodeRequire('zlib') as any) as typeof import('zlib'),\n\t\tnet: (require.__$__nodeRequire('net') as any) as typeof import('net'),\n\t\tos: (require.__$__nodeRequire('os') as any) as typeof import('os')\n\t};\n}\n\nexport class NodeSocket implements ISocket {\n\n\tpublic readonly debugLabel: string;\n\tpublic readonly socket: Socket;\n\tprivate readonly _errorListener: (err: any) => void;\n\n\tpublic traceSocketEvent(type: SocketDiagnosticsEventType, data?: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView | any): void {\n\t\tSocketDiagnostics.traceSocketEvent(this.socket, this.debugLabel, type, data);\n\t}\n\n\tconstructor(socket: Socket, debugLabel: string = '') {\n\t\tthis.debugLabel = debugLabel;\n\t\tthis.socket = socket;\n\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.Created, { type: 'NodeSocket' });\n\t\tthis._errorListener = (err: any) => {\n\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.Error, { code: err?.code, message: err?.message });\n\t\t\tif (err) {\n\t\t\t\tif (err.code === 'EPIPE') {\n\t\t\t\t\t// An EPIPE exception at the wrong time can lead to a renderer process crash\n\t\t\t\t\t// so ignore the error since the socket will fire the close event soon anyways:\n\t\t\t\t\t// > https://nodejs.org/api/errors.html#errors_common_system_errors\n\t\t\t\t\t// > EPIPE (Broken pipe): A write on a pipe, socket, or FIFO for which there is no\n\t\t\t\t\t// > process to read the data. Commonly encountered at the net and http layers,\n\t\t\t\t\t// > indicative that the remote side of the stream being written to has been closed.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tonUnexpectedError(err);\n\t\t\t}\n\t\t};\n\t\tthis.socket.on('error', this._errorListener);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.socket.off('error', this._errorListener);\n\t\tthis.socket.destroy();\n\t}\n\n\tpublic onData(_listener: (e: VSBuffer) => void): IDisposable {\n\t\tconst listener = (buff: Buffer) => {\n\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.Read, buff);\n\t\t\t_listener(VSBuffer.wrap(buff));\n\t\t};\n\t\tthis.socket.on('data', listener);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('data', listener)\n\t\t};\n\t}\n\n\tpublic onClose(listener: (e: SocketCloseEvent) => void): IDisposable {\n\t\tconst adapter = (hadError: boolean) => {\n\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.Close, { hadError });\n\t\t\tlistener({\n\t\t\t\ttype: SocketCloseEventType.NodeSocketCloseEvent,\n\t\t\t\thadError: hadError,\n\t\t\t\terror: undefined\n\t\t\t});\n\t\t};\n\t\tthis.socket.on('close', adapter);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('close', adapter)\n\t\t};\n\t}\n\n\tpublic onEnd(listener: () => void): IDisposable {\n\t\tconst adapter = () => {\n\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.NodeEndReceived);\n\t\t\tlistener();\n\t\t};\n\t\tthis.socket.on('end', adapter);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('end', adapter)\n\t\t};\n\t}\n\n\tpublic write(buffer: VSBuffer): void {\n\t\t// return early if socket has been destroyed in the meantime\n\t\tif (this.socket.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// we ignore the returned value from `write` because we would have to cached the data\n\t\t// anyways and nodejs is already doing that for us:\n\t\t// > https://nodejs.org/api/stream.html#stream_writable_write_chunk_encoding_callback\n\t\t// > However, the false return value is only advisory and the writable stream will unconditionally\n\t\t// > accept and buffer chunk even if it has not been allowed to drain.\n\t\ttry {\n\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.Write, buffer);\n\t\t\tthis.socket.write(buffer.buffer, (err: any) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tif (err.code === 'EPIPE') {\n\t\t\t\t\t\t// An EPIPE exception at the wrong time can lead to a renderer process crash\n\t\t\t\t\t\t// so ignore the error since the socket will fire the close event soon anyways:\n\t\t\t\t\t\t// > https://nodejs.org/api/errors.html#errors_common_system_errors\n\t\t\t\t\t\t// > EPIPE (Broken pipe): A write on a pipe, socket, or FIFO for which there is no\n\t\t\t\t\t\t// > process to read the data. Commonly encountered at the net and http layers,\n\t\t\t\t\t\t// > indicative that the remote side of the stream being written to has been closed.\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tonUnexpectedError(err);\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tif (err.code === 'EPIPE') {\n\t\t\t\t// An EPIPE exception at the wrong time can lead to a renderer process crash\n\t\t\t\t// so ignore the error since the socket will fire the close event soon anyways:\n\t\t\t\t// > https://nodejs.org/api/errors.html#errors_common_system_errors\n\t\t\t\t// > EPIPE (Broken pipe): A write on a pipe, socket, or FIFO for which there is no\n\t\t\t\t// > process to read the data. Commonly encountered at the net and http layers,\n\t\t\t\t// > indicative that the remote side of the stream being written to has been closed.\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tonUnexpectedError(err);\n\t\t}\n\t}\n\n\tpublic end(): void {\n\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.NodeEndSent);\n\t\tthis.socket.end();\n\t}\n\n\tpublic drain(): Promise<void> {\n\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.NodeDrainBegin);\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\tif (this.socket.bufferSize === 0) {\n\t\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.NodeDrainEnd);\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst finished = () => {\n\t\t\t\tthis.socket.off('close', finished);\n\t\t\t\tthis.socket.off('end', finished);\n\t\t\t\tthis.socket.off('error', finished);\n\t\t\t\tthis.socket.off('timeout', finished);\n\t\t\t\tthis.socket.off('drain', finished);\n\t\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.NodeDrainEnd);\n\t\t\t\tresolve();\n\t\t\t};\n\t\t\tthis.socket.on('close', finished);\n\t\t\tthis.socket.on('end', finished);\n\t\t\tthis.socket.on('error', finished);\n\t\t\tthis.socket.on('timeout', finished);\n\t\t\tthis.socket.on('drain', finished);\n\t\t});\n\t}\n}\n\nconst enum Constants {\n\tMinHeaderByteSize = 2\n}\n\nconst enum ReadState {\n\tPeekHeader = 1,\n\tReadHeader = 2,\n\tReadBody = 3,\n\tFin = 4\n}\n\ninterface ISocketTracer {\n\ttraceSocketEvent(type: SocketDiagnosticsEventType, data?: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView | any): void;\n}\n\n/**\n * See https://tools.ietf.org/html/rfc6455#section-5.2\n */\nexport class WebSocketNodeSocket extends Disposable implements ISocket, ISocketTracer {\n\n\tpublic readonly socket: NodeSocket;\n\tprivate readonly _flowManager: WebSocketFlowManager;\n\tprivate readonly _incomingData: ChunkStream;\n\tprivate readonly _onData = this._register(new Emitter<VSBuffer>());\n\tprivate readonly _onClose = this._register(new Emitter<SocketCloseEvent>());\n\tprivate _isEnded: boolean = false;\n\n\tprivate readonly _state = {\n\t\tstate: ReadState.PeekHeader,\n\t\treadLen: Constants.MinHeaderByteSize,\n\t\tfin: 0,\n\t\tcompressed: false,\n\t\tfirstFrameOfMessage: true,\n\t\tmask: 0\n\t};\n\n\tpublic get permessageDeflate(): boolean {\n\t\treturn this._flowManager.permessageDeflate;\n\t}\n\n\tpublic get recordedInflateBytes(): VSBuffer {\n\t\treturn this._flowManager.recordedInflateBytes;\n\t}\n\n\tpublic traceSocketEvent(type: SocketDiagnosticsEventType, data?: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView | any): void {\n\t\tthis.socket.traceSocketEvent(type, data);\n\t}\n\n\t/**\n\t * Create a socket which can communicate using WebSocket frames.\n\t *\n\t * **NOTE**: When using the permessage-deflate WebSocket extension, if parts of inflating was done\n\t *  in a different zlib instance, we need to pass all those bytes into zlib, otherwise the inflate\n\t *  might hit an inflated portion referencing a distance too far back.\n\t *\n\t * @param socket The underlying socket\n\t * @param permessageDeflate Use the permessage-deflate WebSocket extension\n\t * @param inflateBytes \"Seed\" zlib inflate with these bytes.\n\t * @param recordInflateBytes Record all bytes sent to inflate\n\t */\n\tconstructor(socket: NodeSocket, permessageDeflate: boolean, inflateBytes: VSBuffer | null, recordInflateBytes: boolean) {\n\t\tsuper();\n\t\tthis.socket = socket;\n\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.Created, { type: 'WebSocketNodeSocket', permessageDeflate, inflateBytesLength: inflateBytes?.byteLength || 0, recordInflateBytes });\n\t\tthis._flowManager = this._register(new WebSocketFlowManager(\n\t\t\tthis,\n\t\t\tpermessageDeflate,\n\t\t\tinflateBytes,\n\t\t\trecordInflateBytes,\n\t\t\tthis._onData,\n\t\t\t(data, compressed) => this._write(data, compressed)\n\t\t));\n\t\tthis._register(this._flowManager.onError((err) => {\n\t\t\t// zlib errors are fatal, since we have no idea how to recover\n\t\t\tconsole.error(err);\n\t\t\tonUnexpectedError(err);\n\t\t\tthis._onClose.fire({\n\t\t\t\ttype: SocketCloseEventType.NodeSocketCloseEvent,\n\t\t\t\thadError: true,\n\t\t\t\terror: err\n\t\t\t});\n\t\t}));\n\t\tthis._incomingData = new ChunkStream();\n\t\tthis._register(this.socket.onData(data => this._acceptChunk(data)));\n\t\tthis._register(this.socket.onClose((e) => this._onClose.fire(e)));\n\t}\n\n\tpublic override dispose(): void {\n\t\tif (this._flowManager.isProcessingWriteQueue()) {\n\t\t\t// Wait for any outstanding writes to finish before disposing\n\t\t\tthis._register(this._flowManager.onDidFinishProcessingWriteQueue(() => {\n\t\t\t\tthis.dispose();\n\t\t\t}));\n\t\t} else {\n\t\t\tthis.socket.dispose();\n\t\t\tsuper.dispose();\n\t\t}\n\t}\n\n\tpublic onData(listener: (e: VSBuffer) => void): IDisposable {\n\t\treturn this._onData.event(listener);\n\t}\n\n\tpublic onClose(listener: (e: SocketCloseEvent) => void): IDisposable {\n\t\treturn this._onClose.event(listener);\n\t}\n\n\tpublic onEnd(listener: () => void): IDisposable {\n\t\treturn this.socket.onEnd(listener);\n\t}\n\n\tpublic write(buffer: VSBuffer): void {\n\t\tthis._flowManager.writeMessage(buffer);\n\t}\n\n\tprivate _write(buffer: VSBuffer, compressed: boolean): void {\n\t\tif (this._isEnded) {\n\t\t\t// Avoid ERR_STREAM_WRITE_AFTER_END\n\t\t\treturn;\n\t\t}\n\n\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.WebSocketNodeSocketWrite, buffer);\n\t\tlet headerLen = Constants.MinHeaderByteSize;\n\t\tif (buffer.byteLength < 126) {\n\t\t\theaderLen += 0;\n\t\t} else if (buffer.byteLength < 2 ** 16) {\n\t\t\theaderLen += 2;\n\t\t} else {\n\t\t\theaderLen += 8;\n\t\t}\n\t\tconst header = VSBuffer.alloc(headerLen);\n\n\t\tif (compressed) {\n\t\t\t// The RSV1 bit indicates a compressed frame\n\t\t\theader.writeUInt8(0b11000010, 0);\n\t\t} else {\n\t\t\theader.writeUInt8(0b10000010, 0);\n\t\t}\n\t\tif (buffer.byteLength < 126) {\n\t\t\theader.writeUInt8(buffer.byteLength, 1);\n\t\t} else if (buffer.byteLength < 2 ** 16) {\n\t\t\theader.writeUInt8(126, 1);\n\t\t\tlet offset = 1;\n\t\t\theader.writeUInt8((buffer.byteLength >>> 8) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 0) & 0b11111111, ++offset);\n\t\t} else {\n\t\t\theader.writeUInt8(127, 1);\n\t\t\tlet offset = 1;\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 24) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 16) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 8) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 0) & 0b11111111, ++offset);\n\t\t}\n\n\t\tthis.socket.write(VSBuffer.concat([header, buffer]));\n\t}\n\n\tpublic end(): void {\n\t\tthis._isEnded = true;\n\t\tthis.socket.end();\n\t}\n\n\tprivate _acceptChunk(data: VSBuffer): void {\n\t\tif (data.byteLength === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._incomingData.acceptChunk(data);\n\n\t\twhile (this._incomingData.byteLength >= this._state.readLen) {\n\n\t\t\tif (this._state.state === ReadState.PeekHeader) {\n\t\t\t\t// peek to see if we can read the entire header\n\t\t\t\tconst peekHeader = this._incomingData.peek(this._state.readLen);\n\t\t\t\tconst firstByte = peekHeader.readUInt8(0);\n\t\t\t\tconst finBit = (firstByte & 0b10000000) >>> 7;\n\t\t\t\tconst rsv1Bit = (firstByte & 0b01000000) >>> 6;\n\t\t\t\tconst secondByte = peekHeader.readUInt8(1);\n\t\t\t\tconst hasMask = (secondByte & 0b10000000) >>> 7;\n\t\t\t\tconst len = (secondByte & 0b01111111);\n\n\t\t\t\tthis._state.state = ReadState.ReadHeader;\n\t\t\t\tthis._state.readLen = Constants.MinHeaderByteSize + (hasMask ? 4 : 0) + (len === 126 ? 2 : 0) + (len === 127 ? 8 : 0);\n\t\t\t\tthis._state.fin = finBit;\n\t\t\t\tif (this._state.firstFrameOfMessage) {\n\t\t\t\t\t// if the frame is compressed, the RSV1 bit is set only for the first frame of the message\n\t\t\t\t\tthis._state.compressed = Boolean(rsv1Bit);\n\t\t\t\t}\n\t\t\t\tthis._state.firstFrameOfMessage = Boolean(finBit);\n\t\t\t\tthis._state.mask = 0;\n\n\t\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.WebSocketNodeSocketPeekedHeader, { headerSize: this._state.readLen, compressed: this._state.compressed, fin: this._state.fin });\n\n\t\t\t} else if (this._state.state === ReadState.ReadHeader) {\n\t\t\t\t// read entire header\n\t\t\t\tconst header = this._incomingData.read(this._state.readLen);\n\t\t\t\tconst secondByte = header.readUInt8(1);\n\t\t\t\tconst hasMask = (secondByte & 0b10000000) >>> 7;\n\t\t\t\tlet len = (secondByte & 0b01111111);\n\n\t\t\t\tlet offset = 1;\n\t\t\t\tif (len === 126) {\n\t\t\t\t\tlen = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t} else if (len === 127) {\n\t\t\t\t\tlen = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 24\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 16\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tlet mask = 0;\n\t\t\t\tif (hasMask) {\n\t\t\t\t\tmask = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 2 ** 24\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 16\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tthis._state.state = ReadState.ReadBody;\n\t\t\t\tthis._state.readLen = len;\n\t\t\t\tthis._state.mask = mask;\n\n\t\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.WebSocketNodeSocketPeekedHeader, { bodySize: this._state.readLen, compressed: this._state.compressed, fin: this._state.fin, mask: this._state.mask });\n\n\t\t\t} else if (this._state.state === ReadState.ReadBody) {\n\t\t\t\t// read body\n\n\t\t\t\tconst body = this._incomingData.read(this._state.readLen);\n\t\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.WebSocketNodeSocketReadData, body);\n\n\t\t\t\tunmask(body, this._state.mask);\n\t\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.WebSocketNodeSocketUnmaskedData, body);\n\n\t\t\t\tthis._state.state = ReadState.PeekHeader;\n\t\t\t\tthis._state.readLen = Constants.MinHeaderByteSize;\n\t\t\t\tthis._state.mask = 0;\n\n\t\t\t\tthis._flowManager.acceptFrame(body, this._state.compressed, !!this._state.fin);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async drain(): Promise<void> {\n\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.WebSocketNodeSocketDrainBegin);\n\t\tif (this._flowManager.isProcessingWriteQueue()) {\n\t\t\tawait Event.toPromise(this._flowManager.onDidFinishProcessingWriteQueue);\n\t\t}\n\t\tawait this.socket.drain();\n\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.WebSocketNodeSocketDrainEnd);\n\t}\n}\n\nclass WebSocketFlowManager extends Disposable {\n\n\tprivate readonly _onError = this._register(new Emitter<Error>());\n\tpublic readonly onError = this._onError.event;\n\n\tprivate readonly _zlibInflateStream: ZlibInflateStream | null;\n\tprivate readonly _zlibDeflateStream: ZlibDeflateStream | null;\n\tprivate readonly _writeQueue: VSBuffer[] = [];\n\tprivate readonly _readQueue: { data: VSBuffer; isCompressed: boolean; isLastFrameOfMessage: boolean }[] = [];\n\n\tprivate readonly _onDidFinishProcessingWriteQueue = this._register(new Emitter<void>());\n\tpublic readonly onDidFinishProcessingWriteQueue = this._onDidFinishProcessingWriteQueue.event;\n\n\tpublic get permessageDeflate(): boolean {\n\t\treturn Boolean(this._zlibInflateStream && this._zlibDeflateStream);\n\t}\n\n\tpublic get recordedInflateBytes(): VSBuffer {\n\t\tif (this._zlibInflateStream) {\n\t\t\treturn this._zlibInflateStream.recordedInflateBytes;\n\t\t}\n\t\treturn VSBuffer.alloc(0);\n\t}\n\n\tconstructor(\n\t\tprivate readonly _tracer: ISocketTracer,\n\t\tpermessageDeflate: boolean,\n\t\tinflateBytes: VSBuffer | null,\n\t\trecordInflateBytes: boolean,\n\t\tprivate readonly _onData: Emitter<VSBuffer>,\n\t\tprivate readonly _writeFn: (data: VSBuffer, compressed: boolean) => void\n\t) {\n\t\tsuper();\n\t\tif (permessageDeflate) {\n\t\t\t// See https://tools.ietf.org/html/rfc7692#page-16\n\t\t\t// To simplify our logic, we don't negotiate the window size\n\t\t\t// and simply dedicate (2^15) / 32kb per web socket\n\t\t\tthis._zlibInflateStream = this._register(new ZlibInflateStream(this._tracer, recordInflateBytes, inflateBytes, { windowBits: 15 }));\n\t\t\tthis._zlibDeflateStream = this._register(new ZlibDeflateStream(this._tracer, { windowBits: 15 }));\n\t\t\tthis._register(this._zlibInflateStream.onError((err) => this._onError.fire(err)));\n\t\t\tthis._register(this._zlibDeflateStream.onError((err) => this._onError.fire(err)));\n\t\t} else {\n\t\t\tthis._zlibInflateStream = null;\n\t\t\tthis._zlibDeflateStream = null;\n\t\t}\n\t}\n\n\tpublic writeMessage(message: VSBuffer): void {\n\t\tthis._writeQueue.push(message);\n\t\tthis._processWriteQueue();\n\t}\n\n\tprivate _isProcessingWriteQueue = false;\n\tprivate async _processWriteQueue(): Promise<void> {\n\t\tif (this._isProcessingWriteQueue) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isProcessingWriteQueue = true;\n\t\twhile (this._writeQueue.length > 0) {\n\t\t\tconst message = this._writeQueue.shift()!;\n\t\t\tif (this._zlibDeflateStream) {\n\t\t\t\tconst data = await this._deflateMessage(this._zlibDeflateStream, message);\n\t\t\t\tthis._writeFn(data, true);\n\t\t\t} else {\n\t\t\t\tthis._writeFn(message, false);\n\t\t\t}\n\t\t}\n\t\tthis._isProcessingWriteQueue = false;\n\t\tthis._onDidFinishProcessingWriteQueue.fire();\n\t}\n\n\tpublic isProcessingWriteQueue(): boolean {\n\t\treturn (this._isProcessingWriteQueue);\n\t}\n\n\t/**\n\t * Subsequent calls should wait for the previous `_deflateBuffer` call to complete.\n\t */\n\tprivate _deflateMessage(zlibDeflateStream: ZlibDeflateStream, buffer: VSBuffer): Promise<VSBuffer> {\n\t\treturn new Promise<VSBuffer>((resolve, reject) => {\n\t\t\tzlibDeflateStream.write(buffer);\n\t\t\tzlibDeflateStream.flush(data => resolve(data));\n\t\t});\n\t}\n\n\tpublic acceptFrame(data: VSBuffer, isCompressed: boolean, isLastFrameOfMessage: boolean): void {\n\t\tthis._readQueue.push({ data, isCompressed, isLastFrameOfMessage });\n\t\tthis._processReadQueue();\n\t}\n\n\tprivate _isProcessingReadQueue = false;\n\tprivate async _processReadQueue(): Promise<void> {\n\t\tif (this._isProcessingReadQueue) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isProcessingReadQueue = true;\n\t\twhile (this._readQueue.length > 0) {\n\t\t\tconst frameInfo = this._readQueue.shift()!;\n\t\t\tif (this._zlibInflateStream && frameInfo.isCompressed) {\n\t\t\t\t// See https://datatracker.ietf.org/doc/html/rfc7692#section-9.2\n\t\t\t\t// Even if permessageDeflate is negotiated, it is possible\n\t\t\t\t// that the other side might decide to send uncompressed messages\n\t\t\t\t// So only decompress messages that have the RSV 1 bit set\n\t\t\t\tconst data = await this._inflateFrame(this._zlibInflateStream, frameInfo.data, frameInfo.isLastFrameOfMessage);\n\t\t\t\tthis._onData.fire(data);\n\t\t\t} else {\n\t\t\t\tthis._onData.fire(frameInfo.data);\n\t\t\t}\n\t\t}\n\t\tthis._isProcessingReadQueue = false;\n\t}\n\n\t/**\n\t * Subsequent calls should wait for the previous `transformRead` call to complete.\n\t */\n\tprivate _inflateFrame(zlibInflateStream: ZlibInflateStream, buffer: VSBuffer, isLastFrameOfMessage: boolean): Promise<VSBuffer> {\n\t\treturn new Promise<VSBuffer>((resolve, reject) => {\n\t\t\t// See https://tools.ietf.org/html/rfc7692#section-7.2.2\n\t\t\tzlibInflateStream.write(buffer);\n\t\t\tif (isLastFrameOfMessage) {\n\t\t\t\tzlibInflateStream.write(VSBuffer.fromByteArray([0x00, 0x00, 0xff, 0xff]));\n\t\t\t}\n\t\t\tzlibInflateStream.flush(data => resolve(data));\n\t\t});\n\t}\n}\n\nclass ZlibInflateStream extends Disposable {\n\n\tprivate readonly _onError = this._register(new Emitter<Error>());\n\tpublic readonly onError = this._onError.event;\n\n\tprivate readonly _zlibInflate: zlib.InflateRaw;\n\tprivate readonly _recordedInflateBytes: VSBuffer[] = [];\n\tprivate readonly _pendingInflateData: VSBuffer[] = [];\n\n\tpublic get recordedInflateBytes(): VSBuffer {\n\t\tif (this._recordInflateBytes) {\n\t\t\treturn VSBuffer.concat(this._recordedInflateBytes);\n\t\t}\n\t\treturn VSBuffer.alloc(0);\n\t}\n\n\tconstructor(\n\t\tprivate readonly _tracer: ISocketTracer,\n\t\tprivate readonly _recordInflateBytes: boolean,\n\t\tinflateBytes: VSBuffer | null,\n\t\toptions: zlib.ZlibOptions\n\t) {\n\t\tsuper();\n\t\tthis._zlibInflate = getNodeDependencies().zlib.createInflateRaw(options);\n\t\tthis._zlibInflate.on('error', (err) => {\n\t\t\tthis._tracer.traceSocketEvent(SocketDiagnosticsEventType.zlibInflateError, { message: err?.message, code: (<any>err)?.code });\n\t\t\tthis._onError.fire(err);\n\t\t});\n\t\tthis._zlibInflate.on('data', (data: Buffer) => {\n\t\t\tthis._tracer.traceSocketEvent(SocketDiagnosticsEventType.zlibInflateData, data);\n\t\t\tthis._pendingInflateData.push(VSBuffer.wrap(data));\n\t\t});\n\t\tif (inflateBytes) {\n\t\t\tthis._tracer.traceSocketEvent(SocketDiagnosticsEventType.zlibInflateInitialWrite, inflateBytes.buffer);\n\t\t\tthis._zlibInflate.write(inflateBytes.buffer);\n\t\t\tthis._zlibInflate.flush(() => {\n\t\t\t\tthis._tracer.traceSocketEvent(SocketDiagnosticsEventType.zlibInflateInitialFlushFired);\n\t\t\t\tthis._pendingInflateData.length = 0;\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic write(buffer: VSBuffer): void {\n\t\tif (this._recordInflateBytes) {\n\t\t\tthis._recordedInflateBytes.push(buffer.clone());\n\t\t}\n\t\tthis._tracer.traceSocketEvent(SocketDiagnosticsEventType.zlibInflateWrite, buffer);\n\t\tthis._zlibInflate.write(buffer.buffer);\n\t}\n\n\tpublic flush(callback: (data: VSBuffer) => void): void {\n\t\tthis._zlibInflate.flush(() => {\n\t\t\tthis._tracer.traceSocketEvent(SocketDiagnosticsEventType.zlibInflateFlushFired);\n\t\t\tconst data = VSBuffer.concat(this._pendingInflateData);\n\t\t\tthis._pendingInflateData.length = 0;\n\t\t\tcallback(data);\n\t\t});\n\t}\n}\n\nclass ZlibDeflateStream extends Disposable {\n\n\tprivate readonly _onError = this._register(new Emitter<Error>());\n\tpublic readonly onError = this._onError.event;\n\n\tprivate readonly _zlibDeflate: zlib.DeflateRaw;\n\tprivate readonly _pendingDeflateData: VSBuffer[] = [];\n\n\tconstructor(\n\t\tprivate readonly _tracer: ISocketTracer,\n\t\toptions: zlib.ZlibOptions\n\t) {\n\t\tsuper();\n\n\t\tthis._zlibDeflate = getNodeDependencies().zlib.createDeflateRaw({\n\t\t\twindowBits: 15\n\t\t});\n\t\tthis._zlibDeflate.on('error', (err) => {\n\t\t\tthis._tracer.traceSocketEvent(SocketDiagnosticsEventType.zlibDeflateError, { message: err?.message, code: (<any>err)?.code });\n\t\t\tthis._onError.fire(err);\n\t\t});\n\t\tthis._zlibDeflate.on('data', (data: Buffer) => {\n\t\t\tthis._tracer.traceSocketEvent(SocketDiagnosticsEventType.zlibDeflateData, data);\n\t\t\tthis._pendingDeflateData.push(VSBuffer.wrap(data));\n\t\t});\n\t}\n\n\tpublic write(buffer: VSBuffer): void {\n\t\tthis._tracer.traceSocketEvent(SocketDiagnosticsEventType.zlibDeflateWrite, buffer.buffer);\n\t\tthis._zlibDeflate.write(<Buffer>buffer.buffer);\n\t}\n\n\tpublic flush(callback: (data: VSBuffer) => void): void {\n\t\t// See https://zlib.net/manual.html#Constants\n\t\tthis._zlibDeflate.flush(/*Z_SYNC_FLUSH*/2, () => {\n\t\t\tthis._tracer.traceSocketEvent(SocketDiagnosticsEventType.zlibDeflateFlushFired);\n\n\t\t\tlet data = VSBuffer.concat(this._pendingDeflateData);\n\t\t\tthis._pendingDeflateData.length = 0;\n\n\t\t\t// See https://tools.ietf.org/html/rfc7692#section-7.2.1\n\t\t\tdata = data.slice(0, data.byteLength - 4);\n\n\t\t\tcallback(data);\n\t\t});\n\t}\n}\n\nfunction unmask(buffer: VSBuffer, mask: number): void {\n\tif (mask === 0) {\n\t\treturn;\n\t}\n\tconst cnt = buffer.byteLength >>> 2;\n\tfor (let i = 0; i < cnt; i++) {\n\t\tconst v = buffer.readUInt32BE(i * 4);\n\t\tbuffer.writeUInt32BE(v ^ mask, i * 4);\n\t}\n\tconst offset = cnt * 4;\n\tconst bytesLeft = buffer.byteLength - offset;\n\tconst m3 = (mask >>> 24) & 0b11111111;\n\tconst m2 = (mask >>> 16) & 0b11111111;\n\tconst m1 = (mask >>> 8) & 0b11111111;\n\tif (bytesLeft >= 1) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset) ^ m3, offset);\n\t}\n\tif (bytesLeft >= 2) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset + 1) ^ m2, offset + 1);\n\t}\n\tif (bytesLeft >= 3) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset + 2) ^ m1, offset + 2);\n\t}\n}\n\n// Read this before there's any chance it is overwritten\n// Related to https://github.com/microsoft/vscode/issues/30624\n// TODO@bpasero revert me once electron utility process has landed\nexport const XDG_RUNTIME_DIR = typeof process !== 'undefined' ? <string | undefined>process.env['XDG_RUNTIME_DIR'] : undefined;\n\nconst safeIpcPathLengths: { [platform: number]: number } = {\n\t[Platform.Linux]: 107,\n\t[Platform.Mac]: 103\n};\n\nexport function createRandomIPCHandle(): string {\n\tconst randomSuffix = generateUuid();\n\n\t// Windows: use named pipe\n\tif (process.platform === 'win32') {\n\t\treturn `\\\\\\\\.\\\\pipe\\\\vscode-ipc-${randomSuffix}-sock`;\n\t}\n\n\t// Mac/Unix: use socket file and prefer\n\t// XDG_RUNTIME_DIR over tmpDir\n\tlet result: string;\n\tif (XDG_RUNTIME_DIR) {\n\t\tresult = join(XDG_RUNTIME_DIR, `vscode-ipc-${randomSuffix}.sock`);\n\t} else {\n\t\tresult = join(getNodeDependencies().os.tmpdir(), `vscode-ipc-${randomSuffix}.sock`);\n\t}\n\n\t// Validate length\n\tvalidateIPCHandleLength(result);\n\n\treturn result;\n}\n\nexport function createStaticIPCHandle(directoryPath: string, type: string, version: string): string {\n\tconst scope = getNodeDependencies().crypto.createHash('md5').update(directoryPath).digest('hex');\n\n\t// Windows: use named pipe\n\tif (process.platform === 'win32') {\n\t\treturn `\\\\\\\\.\\\\pipe\\\\${scope}-${version}-${type}-sock`;\n\t}\n\n\t// Mac/Unix: use socket file and prefer\n\t// XDG_RUNTIME_DIR over user data path\n\t// unless portable\n\tlet result: string;\n\tif (XDG_RUNTIME_DIR && !process.env['VSCODE_PORTABLE']) {\n\t\tresult = join(XDG_RUNTIME_DIR, `vscode-${scope.substr(0, 8)}-${version}-${type}.sock`);\n\t} else {\n\t\tresult = join(directoryPath, `${version}-${type}.sock`);\n\t}\n\n\t// Validate length\n\tvalidateIPCHandleLength(result);\n\n\treturn result;\n}\n\nfunction validateIPCHandleLength(handle: string): void {\n\tconst limit = safeIpcPathLengths[platform];\n\tif (typeof limit === 'number' && handle.length >= limit) {\n\t\t// https://nodejs.org/api/net.html#net_identifying_paths_for_ipc_connections\n\t\tconsole.warn(`WARNING: IPC handle \"${handle}\" is longer than ${limit} chars, try a shorter --user-data-dir`);\n\t}\n}\n\nexport class Server extends IPCServer {\n\n\tprivate static toClientConnectionEvent(server: NetServer): Event<ClientConnectionEvent> {\n\t\tconst onConnection = Event.fromNodeEventEmitter<Socket>(server, 'connection');\n\n\t\treturn Event.map(onConnection, socket => ({\n\t\t\tprotocol: new Protocol(new NodeSocket(socket, 'ipc-server-connection')),\n\t\t\tonDidClientDisconnect: Event.once(Event.fromNodeEventEmitter<void>(socket, 'close'))\n\t\t}));\n\t}\n\n\tprivate server: NetServer | null;\n\n\tconstructor(server: NetServer) {\n\t\tsuper(Server.toClientConnectionEvent(server));\n\t\tthis.server = server;\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tif (this.server) {\n\t\t\tthis.server.close();\n\t\t\tthis.server = null;\n\t\t}\n\t}\n}\n\nexport function serve(port: number): Promise<Server>;\nexport function serve(namedPipe: string): Promise<Server>;\nexport function serve(hook: any): Promise<Server> {\n\treturn new Promise<Server>((c, e) => {\n\t\tconst server = getNodeDependencies().net.createServer();\n\n\t\tserver.on('error', e);\n\t\tserver.listen(hook, () => {\n\t\t\tserver.removeListener('error', e);\n\t\t\tc(new Server(server));\n\t\t});\n\t});\n}\n\nexport function connect(options: { host: string; port: number }, clientId: string): Promise<Client>;\nexport function connect(port: number, clientId: string): Promise<Client>;\nexport function connect(namedPipe: string, clientId: string): Promise<Client>;\nexport function connect(hook: any, clientId: string): Promise<Client> {\n\treturn new Promise<Client>((c, e) => {\n\t\tconst socket = getNodeDependencies().net.createConnection(hook, () => {\n\t\t\tsocket.removeListener('error', e);\n\t\t\tc(Client.fromSocket(new NodeSocket(socket, `ipc-client${clientId}`), clientId));\n\t\t});\n\n\t\tsocket.once('error', e);\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ThrottledDelayer } from 'vs/base/common/async';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { isUndefinedOrNull } from 'vs/base/common/types';\n\nexport enum StorageHint {\n\n\t// A hint to the storage that the storage\n\t// does not exist on disk yet. This allows\n\t// the storage library to improve startup\n\t// time by not checking the storage for data.\n\tSTORAGE_DOES_NOT_EXIST\n}\n\nexport interface IStorageOptions {\n\treadonly hint?: StorageHint;\n}\n\nexport interface IUpdateRequest {\n\treadonly insert?: Map<string, string>;\n\treadonly delete?: Set<string>;\n}\n\nexport interface IStorageItemsChangeEvent {\n\treadonly changed?: Map<string, string>;\n\treadonly deleted?: Set<string>;\n}\n\nexport function isStorageItemsChangeEvent(thing: unknown): thing is IStorageItemsChangeEvent {\n\tconst candidate = thing as IStorageItemsChangeEvent | undefined;\n\n\treturn candidate?.changed instanceof Map || candidate?.deleted instanceof Set;\n}\n\nexport interface IStorageDatabase {\n\n\treadonly onDidChangeItemsExternal: Event<IStorageItemsChangeEvent>;\n\n\tgetItems(): Promise<Map<string, string>>;\n\tupdateItems(request: IUpdateRequest): Promise<void>;\n\n\tclose(recovery?: () => Map<string, string>): Promise<void>;\n}\n\nexport interface IStorage extends IDisposable {\n\n\treadonly onDidChangeStorage: Event<string>;\n\n\treadonly items: Map<string, string>;\n\treadonly size: number;\n\n\tinit(): Promise<void>;\n\n\tget(key: string, fallbackValue: string): string;\n\tget(key: string, fallbackValue?: string): string | undefined;\n\n\tgetBoolean(key: string, fallbackValue: boolean): boolean;\n\tgetBoolean(key: string, fallbackValue?: boolean): boolean | undefined;\n\n\tgetNumber(key: string, fallbackValue: number): number;\n\tgetNumber(key: string, fallbackValue?: number): number | undefined;\n\n\tset(key: string, value: string | boolean | number | undefined | null): Promise<void>;\n\tdelete(key: string): Promise<void>;\n\n\tflush(delay?: number): Promise<void>;\n\twhenFlushed(): Promise<void>;\n\n\tclose(): Promise<void>;\n}\n\nexport enum StorageState {\n\tNone,\n\tInitialized,\n\tClosed\n}\n\nexport class Storage extends Disposable implements IStorage {\n\n\tprivate static readonly DEFAULT_FLUSH_DELAY = 100;\n\n\tprivate readonly _onDidChangeStorage = this._register(new Emitter<string>());\n\treadonly onDidChangeStorage = this._onDidChangeStorage.event;\n\n\tprivate state = StorageState.None;\n\n\tprivate cache = new Map<string, string>();\n\n\tprivate readonly flushDelayer = new ThrottledDelayer<void>(Storage.DEFAULT_FLUSH_DELAY);\n\n\tprivate pendingDeletes = new Set<string>();\n\tprivate pendingInserts = new Map<string, string>();\n\n\tprivate pendingClose: Promise<void> | undefined = undefined;\n\n\tprivate readonly whenFlushedCallbacks: Function[] = [];\n\n\tconstructor(\n\t\tprotected readonly database: IStorageDatabase,\n\t\tprivate readonly options: IStorageOptions = Object.create(null)\n\t) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.database.onDidChangeItemsExternal(e => this.onDidChangeItemsExternal(e)));\n\t}\n\n\tprivate onDidChangeItemsExternal(e: IStorageItemsChangeEvent): void {\n\t\t// items that change external require us to update our\n\t\t// caches with the values. we just accept the value and\n\t\t// emit an event if there is a change.\n\t\te.changed?.forEach((value, key) => this.accept(key, value));\n\t\te.deleted?.forEach(key => this.accept(key, undefined));\n\t}\n\n\tprivate accept(key: string, value: string | undefined): void {\n\t\tif (this.state === StorageState.Closed) {\n\t\t\treturn; // Return early if we are already closed\n\t\t}\n\n\t\tlet changed = false;\n\n\t\t// Item got removed, check for deletion\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\tchanged = this.cache.delete(key);\n\t\t}\n\n\t\t// Item got updated, check for change\n\t\telse {\n\t\t\tconst currentValue = this.cache.get(key);\n\t\t\tif (currentValue !== value) {\n\t\t\t\tthis.cache.set(key, value);\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t}\n\n\t\t// Signal to outside listeners\n\t\tif (changed) {\n\t\t\tthis._onDidChangeStorage.fire(key);\n\t\t}\n\t}\n\n\tget items(): Map<string, string> {\n\t\treturn this.cache;\n\t}\n\n\tget size(): number {\n\t\treturn this.cache.size;\n\t}\n\n\tasync init(): Promise<void> {\n\t\tif (this.state !== StorageState.None) {\n\t\t\treturn; // either closed or already initialized\n\t\t}\n\n\t\tthis.state = StorageState.Initialized;\n\n\t\tif (this.options.hint === StorageHint.STORAGE_DOES_NOT_EXIST) {\n\t\t\t// return early if we know the storage file does not exist. this is a performance\n\t\t\t// optimization to not load all items of the underlying storage if we know that\n\t\t\t// there can be no items because the storage does not exist.\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cache = await this.database.getItems();\n\t}\n\n\tget(key: string, fallbackValue: string): string;\n\tget(key: string, fallbackValue?: string): string | undefined;\n\tget(key: string, fallbackValue?: string): string | undefined {\n\t\tconst value = this.cache.get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tgetBoolean(key: string, fallbackValue: boolean): boolean;\n\tgetBoolean(key: string, fallbackValue?: boolean): boolean | undefined;\n\tgetBoolean(key: string, fallbackValue?: boolean): boolean | undefined {\n\t\tconst value = this.get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn value === 'true';\n\t}\n\n\tgetNumber(key: string, fallbackValue: number): number;\n\tgetNumber(key: string, fallbackValue?: number): number | undefined;\n\tgetNumber(key: string, fallbackValue?: number): number | undefined {\n\t\tconst value = this.get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn parseInt(value, 10);\n\t}\n\n\tasync set(key: string, value: string | boolean | number | null | undefined): Promise<void> {\n\t\tif (this.state === StorageState.Closed) {\n\t\t\treturn; // Return early if we are already closed\n\t\t}\n\n\t\t// We remove the key for undefined/null values\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn this.delete(key);\n\t\t}\n\n\t\t// Otherwise, convert to String and store\n\t\tconst valueStr = String(value);\n\n\t\t// Return early if value already set\n\t\tconst currentValue = this.cache.get(key);\n\t\tif (currentValue === valueStr) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Update in cache and pending\n\t\tthis.cache.set(key, valueStr);\n\t\tthis.pendingInserts.set(key, valueStr);\n\t\tthis.pendingDeletes.delete(key);\n\n\t\t// Event\n\t\tthis._onDidChangeStorage.fire(key);\n\n\t\t// Accumulate work by scheduling after timeout\n\t\treturn this.doFlush();\n\t}\n\n\tasync delete(key: string): Promise<void> {\n\t\tif (this.state === StorageState.Closed) {\n\t\t\treturn; // Return early if we are already closed\n\t\t}\n\n\t\t// Remove from cache and add to pending\n\t\tconst wasDeleted = this.cache.delete(key);\n\t\tif (!wasDeleted) {\n\t\t\treturn; // Return early if value already deleted\n\t\t}\n\n\t\tif (!this.pendingDeletes.has(key)) {\n\t\t\tthis.pendingDeletes.add(key);\n\t\t}\n\n\t\tthis.pendingInserts.delete(key);\n\n\t\t// Event\n\t\tthis._onDidChangeStorage.fire(key);\n\n\t\t// Accumulate work by scheduling after timeout\n\t\treturn this.doFlush();\n\t}\n\n\tasync close(): Promise<void> {\n\t\tif (!this.pendingClose) {\n\t\t\tthis.pendingClose = this.doClose();\n\t\t}\n\n\t\treturn this.pendingClose;\n\t}\n\n\tprivate async doClose(): Promise<void> {\n\n\t\t// Update state\n\t\tthis.state = StorageState.Closed;\n\n\t\t// Trigger new flush to ensure data is persisted and then close\n\t\t// even if there is an error flushing. We must always ensure\n\t\t// the DB is closed to avoid corruption.\n\t\t//\n\t\t// Recovery: we pass our cache over as recovery option in case\n\t\t// the DB is not healthy.\n\t\ttry {\n\t\t\tawait this.doFlush(0 /* as soon as possible */);\n\t\t} catch (error) {\n\t\t\t// Ignore\n\t\t}\n\n\t\tawait this.database.close(() => this.cache);\n\t}\n\n\tprivate get hasPending() {\n\t\treturn this.pendingInserts.size > 0 || this.pendingDeletes.size > 0;\n\t}\n\n\tprivate async flushPending(): Promise<void> {\n\t\tif (!this.hasPending) {\n\t\t\treturn; // return early if nothing to do\n\t\t}\n\n\t\t// Get pending data\n\t\tconst updateRequest: IUpdateRequest = { insert: this.pendingInserts, delete: this.pendingDeletes };\n\n\t\t// Reset pending data for next run\n\t\tthis.pendingDeletes = new Set<string>();\n\t\tthis.pendingInserts = new Map<string, string>();\n\n\t\t// Update in storage and release any\n\t\t// waiters we have once done\n\t\treturn this.database.updateItems(updateRequest).finally(() => {\n\t\t\tif (!this.hasPending) {\n\t\t\t\twhile (this.whenFlushedCallbacks.length) {\n\t\t\t\t\tthis.whenFlushedCallbacks.pop()?.();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tasync flush(delay?: number): Promise<void> {\n\t\tif (!this.hasPending) {\n\t\t\treturn; // return early if nothing to do\n\t\t}\n\n\t\treturn this.doFlush(delay);\n\t}\n\n\tprivate async doFlush(delay?: number): Promise<void> {\n\t\treturn this.flushDelayer.trigger(() => this.flushPending(), delay);\n\t}\n\n\tasync whenFlushed(): Promise<void> {\n\t\tif (!this.hasPending) {\n\t\t\treturn; // return early if nothing to do\n\t\t}\n\n\t\treturn new Promise(resolve => this.whenFlushedCallbacks.push(resolve));\n\t}\n\n\toverride dispose(): void {\n\t\tthis.flushDelayer.dispose();\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport class InMemoryStorageDatabase implements IStorageDatabase {\n\n\treadonly onDidChangeItemsExternal = Event.None;\n\n\tprivate readonly items = new Map<string, string>();\n\n\tasync getItems(): Promise<Map<string, string>> {\n\t\treturn this.items;\n\t}\n\n\tasync updateItems(request: IUpdateRequest): Promise<void> {\n\t\trequest.insert?.forEach((value, key) => this.items.set(key, value));\n\n\t\trequest.delete?.forEach(key => this.items.delete(key));\n\t}\n\n\tasync close(): Promise<void> { }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * A position in the editor. This interface is suitable for serialization.\n */\nexport interface IPosition {\n\t/**\n\t * line number (starts at 1)\n\t */\n\treadonly lineNumber: number;\n\t/**\n\t * column (the first character in a line is between column 1 and column 2)\n\t */\n\treadonly column: number;\n}\n\n/**\n * A position in the editor.\n */\nexport class Position {\n\t/**\n\t * line number (starts at 1)\n\t */\n\tpublic readonly lineNumber: number;\n\t/**\n\t * column (the first character in a line is between column 1 and column 2)\n\t */\n\tpublic readonly column: number;\n\n\tconstructor(lineNumber: number, column: number) {\n\t\tthis.lineNumber = lineNumber;\n\t\tthis.column = column;\n\t}\n\n\t/**\n\t * Create a new position from this position.\n\t *\n\t * @param newLineNumber new line number\n\t * @param newColumn new column\n\t */\n\twith(newLineNumber: number = this.lineNumber, newColumn: number = this.column): Position {\n\t\tif (newLineNumber === this.lineNumber && newColumn === this.column) {\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn new Position(newLineNumber, newColumn);\n\t\t}\n\t}\n\n\t/**\n\t * Derive a new position from this position.\n\t *\n\t * @param deltaLineNumber line number delta\n\t * @param deltaColumn column delta\n\t */\n\tdelta(deltaLineNumber: number = 0, deltaColumn: number = 0): Position {\n\t\treturn this.with(this.lineNumber + deltaLineNumber, this.column + deltaColumn);\n\t}\n\n\t/**\n\t * Test if this position equals other position\n\t */\n\tpublic equals(other: IPosition): boolean {\n\t\treturn Position.equals(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` equals position `b`\n\t */\n\tpublic static equals(a: IPosition | null, b: IPosition | null): boolean {\n\t\tif (!a && !b) {\n\t\t\treturn true;\n\t\t}\n\t\treturn (\n\t\t\t!!a &&\n\t\t\t!!b &&\n\t\t\ta.lineNumber === b.lineNumber &&\n\t\t\ta.column === b.column\n\t\t);\n\t}\n\n\t/**\n\t * Test if this position is before other position.\n\t * If the two positions are equal, the result will be false.\n\t */\n\tpublic isBefore(other: IPosition): boolean {\n\t\treturn Position.isBefore(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` is before position `b`.\n\t * If the two positions are equal, the result will be false.\n\t */\n\tpublic static isBefore(a: IPosition, b: IPosition): boolean {\n\t\tif (a.lineNumber < b.lineNumber) {\n\t\t\treturn true;\n\t\t}\n\t\tif (b.lineNumber < a.lineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.column < b.column;\n\t}\n\n\t/**\n\t * Test if this position is before other position.\n\t * If the two positions are equal, the result will be true.\n\t */\n\tpublic isBeforeOrEqual(other: IPosition): boolean {\n\t\treturn Position.isBeforeOrEqual(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` is before position `b`.\n\t * If the two positions are equal, the result will be true.\n\t */\n\tpublic static isBeforeOrEqual(a: IPosition, b: IPosition): boolean {\n\t\tif (a.lineNumber < b.lineNumber) {\n\t\t\treturn true;\n\t\t}\n\t\tif (b.lineNumber < a.lineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.column <= b.column;\n\t}\n\n\t/**\n\t * A function that compares positions, useful for sorting\n\t */\n\tpublic static compare(a: IPosition, b: IPosition): number {\n\t\tconst aLineNumber = a.lineNumber | 0;\n\t\tconst bLineNumber = b.lineNumber | 0;\n\n\t\tif (aLineNumber === bLineNumber) {\n\t\t\tconst aColumn = a.column | 0;\n\t\t\tconst bColumn = b.column | 0;\n\t\t\treturn aColumn - bColumn;\n\t\t}\n\n\t\treturn aLineNumber - bLineNumber;\n\t}\n\n\t/**\n\t * Clone this position.\n\t */\n\tpublic clone(): Position {\n\t\treturn new Position(this.lineNumber, this.column);\n\t}\n\n\t/**\n\t * Convert to a human-readable representation.\n\t */\n\tpublic toString(): string {\n\t\treturn '(' + this.lineNumber + ',' + this.column + ')';\n\t}\n\n\t// ---\n\n\t/**\n\t * Create a `Position` from an `IPosition`.\n\t */\n\tpublic static lift(pos: IPosition): Position {\n\t\treturn new Position(pos.lineNumber, pos.column);\n\t}\n\n\t/**\n\t * Test if `obj` is an `IPosition`.\n\t */\n\tpublic static isIPosition(obj: any): obj is IPosition {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.lineNumber === 'number')\n\t\t\t&& (typeof obj.column === 'number')\n\t\t);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IPosition, Position } from 'vs/editor/common/core/position';\n\n/**\n * A range in the editor. This interface is suitable for serialization.\n */\nexport interface IRange {\n\t/**\n\t * Line number on which the range starts (starts at 1).\n\t */\n\treadonly startLineNumber: number;\n\t/**\n\t * Column on which the range starts in line `startLineNumber` (starts at 1).\n\t */\n\treadonly startColumn: number;\n\t/**\n\t * Line number on which the range ends.\n\t */\n\treadonly endLineNumber: number;\n\t/**\n\t * Column on which the range ends in line `endLineNumber`.\n\t */\n\treadonly endColumn: number;\n}\n\n/**\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n */\nexport class Range {\n\n\t/**\n\t * Line number on which the range starts (starts at 1).\n\t */\n\tpublic readonly startLineNumber: number;\n\t/**\n\t * Column on which the range starts in line `startLineNumber` (starts at 1).\n\t */\n\tpublic readonly startColumn: number;\n\t/**\n\t * Line number on which the range ends.\n\t */\n\tpublic readonly endLineNumber: number;\n\t/**\n\t * Column on which the range ends in line `endLineNumber`.\n\t */\n\tpublic readonly endColumn: number;\n\n\tconstructor(startLineNumber: number, startColumn: number, endLineNumber: number, endColumn: number) {\n\t\tif ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n\t\t\tthis.startLineNumber = endLineNumber;\n\t\t\tthis.startColumn = endColumn;\n\t\t\tthis.endLineNumber = startLineNumber;\n\t\t\tthis.endColumn = startColumn;\n\t\t} else {\n\t\t\tthis.startLineNumber = startLineNumber;\n\t\t\tthis.startColumn = startColumn;\n\t\t\tthis.endLineNumber = endLineNumber;\n\t\t\tthis.endColumn = endColumn;\n\t\t}\n\t}\n\n\t/**\n\t * Test if this range is empty.\n\t */\n\tpublic isEmpty(): boolean {\n\t\treturn Range.isEmpty(this);\n\t}\n\n\t/**\n\t * Test if `range` is empty.\n\t */\n\tpublic static isEmpty(range: IRange): boolean {\n\t\treturn (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n\t}\n\n\t/**\n\t * Test if position is in this range. If the position is at the edges, will return true.\n\t */\n\tpublic containsPosition(position: IPosition): boolean {\n\t\treturn Range.containsPosition(this, position);\n\t}\n\n\t/**\n\t * Test if `position` is in `range`. If the position is at the edges, will return true.\n\t */\n\tpublic static containsPosition(range: IRange, position: IPosition): boolean {\n\t\tif (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if `position` is in `range`. If the position is at the edges, will return false.\n\t * @internal\n\t */\n\tpublic static strictContainsPosition(range: IRange, position: IPosition): boolean {\n\t\tif (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.startLineNumber && position.column <= range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.endLineNumber && position.column >= range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if range is in this range. If the range is equal to this range, will return true.\n\t */\n\tpublic containsRange(range: IRange): boolean {\n\t\treturn Range.containsRange(this, range);\n\t}\n\n\t/**\n\t * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n\t */\n\tpublic static containsRange(range: IRange, otherRange: IRange): boolean {\n\t\tif (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if `range` is strictly in this range. `range` must start after and end before this range for the result to be true.\n\t */\n\tpublic strictContainsRange(range: IRange): boolean {\n\t\treturn Range.strictContainsRange(this, range);\n\t}\n\n\t/**\n\t * Test if `otherRange` is strictly in `range` (must start after, and end before). If the ranges are equal, will return false.\n\t */\n\tpublic static strictContainsRange(range: IRange, otherRange: IRange): boolean {\n\t\tif (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn <= range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn >= range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * A reunion of the two ranges.\n\t * The smallest position will be used as the start point, and the largest one as the end point.\n\t */\n\tpublic plusRange(range: IRange): Range {\n\t\treturn Range.plusRange(this, range);\n\t}\n\n\t/**\n\t * A reunion of the two ranges.\n\t * The smallest position will be used as the start point, and the largest one as the end point.\n\t */\n\tpublic static plusRange(a: IRange, b: IRange): Range {\n\t\tlet startLineNumber: number;\n\t\tlet startColumn: number;\n\t\tlet endLineNumber: number;\n\t\tlet endColumn: number;\n\n\t\tif (b.startLineNumber < a.startLineNumber) {\n\t\t\tstartLineNumber = b.startLineNumber;\n\t\t\tstartColumn = b.startColumn;\n\t\t} else if (b.startLineNumber === a.startLineNumber) {\n\t\t\tstartLineNumber = b.startLineNumber;\n\t\t\tstartColumn = Math.min(b.startColumn, a.startColumn);\n\t\t} else {\n\t\t\tstartLineNumber = a.startLineNumber;\n\t\t\tstartColumn = a.startColumn;\n\t\t}\n\n\t\tif (b.endLineNumber > a.endLineNumber) {\n\t\t\tendLineNumber = b.endLineNumber;\n\t\t\tendColumn = b.endColumn;\n\t\t} else if (b.endLineNumber === a.endLineNumber) {\n\t\t\tendLineNumber = b.endLineNumber;\n\t\t\tendColumn = Math.max(b.endColumn, a.endColumn);\n\t\t} else {\n\t\t\tendLineNumber = a.endLineNumber;\n\t\t\tendColumn = a.endColumn;\n\t\t}\n\n\t\treturn new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n\t}\n\n\t/**\n\t * A intersection of the two ranges.\n\t */\n\tpublic intersectRanges(range: IRange): Range | null {\n\t\treturn Range.intersectRanges(this, range);\n\t}\n\n\t/**\n\t * A intersection of the two ranges.\n\t */\n\tpublic static intersectRanges(a: IRange, b: IRange): Range | null {\n\t\tlet resultStartLineNumber = a.startLineNumber;\n\t\tlet resultStartColumn = a.startColumn;\n\t\tlet resultEndLineNumber = a.endLineNumber;\n\t\tlet resultEndColumn = a.endColumn;\n\t\tconst otherStartLineNumber = b.startLineNumber;\n\t\tconst otherStartColumn = b.startColumn;\n\t\tconst otherEndLineNumber = b.endLineNumber;\n\t\tconst otherEndColumn = b.endColumn;\n\n\t\tif (resultStartLineNumber < otherStartLineNumber) {\n\t\t\tresultStartLineNumber = otherStartLineNumber;\n\t\t\tresultStartColumn = otherStartColumn;\n\t\t} else if (resultStartLineNumber === otherStartLineNumber) {\n\t\t\tresultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n\t\t}\n\n\t\tif (resultEndLineNumber > otherEndLineNumber) {\n\t\t\tresultEndLineNumber = otherEndLineNumber;\n\t\t\tresultEndColumn = otherEndColumn;\n\t\t} else if (resultEndLineNumber === otherEndLineNumber) {\n\t\t\tresultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n\t\t}\n\n\t\t// Check if selection is now empty\n\t\tif (resultStartLineNumber > resultEndLineNumber) {\n\t\t\treturn null;\n\t\t}\n\t\tif (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n\t}\n\n\t/**\n\t * Test if this range equals other.\n\t */\n\tpublic equalsRange(other: IRange | null): boolean {\n\t\treturn Range.equalsRange(this, other);\n\t}\n\n\t/**\n\t * Test if range `a` equals `b`.\n\t */\n\tpublic static equalsRange(a: IRange | null, b: IRange | null): boolean {\n\t\treturn (\n\t\t\t!!a &&\n\t\t\t!!b &&\n\t\t\ta.startLineNumber === b.startLineNumber &&\n\t\t\ta.startColumn === b.startColumn &&\n\t\t\ta.endLineNumber === b.endLineNumber &&\n\t\t\ta.endColumn === b.endColumn\n\t\t);\n\t}\n\n\t/**\n\t * Return the end position (which will be after or equal to the start position)\n\t */\n\tpublic getEndPosition(): Position {\n\t\treturn Range.getEndPosition(this);\n\t}\n\n\t/**\n\t * Return the end position (which will be after or equal to the start position)\n\t */\n\tpublic static getEndPosition(range: IRange): Position {\n\t\treturn new Position(range.endLineNumber, range.endColumn);\n\t}\n\n\t/**\n\t * Return the start position (which will be before or equal to the end position)\n\t */\n\tpublic getStartPosition(): Position {\n\t\treturn Range.getStartPosition(this);\n\t}\n\n\t/**\n\t * Return the start position (which will be before or equal to the end position)\n\t */\n\tpublic static getStartPosition(range: IRange): Position {\n\t\treturn new Position(range.startLineNumber, range.startColumn);\n\t}\n\n\t/**\n\t * Transform to a user presentable string representation.\n\t */\n\tpublic toString(): string {\n\t\treturn '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n\t}\n\n\t/**\n\t * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n\t */\n\tpublic setEndPosition(endLineNumber: number, endColumn: number): Range {\n\t\treturn new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n\t}\n\n\t/**\n\t * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n\t */\n\tpublic setStartPosition(startLineNumber: number, startColumn: number): Range {\n\t\treturn new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n\t}\n\n\t/**\n\t * Create a new empty range using this range's start position.\n\t */\n\tpublic collapseToStart(): Range {\n\t\treturn Range.collapseToStart(this);\n\t}\n\n\t/**\n\t * Create a new empty range using this range's start position.\n\t */\n\tpublic static collapseToStart(range: IRange): Range {\n\t\treturn new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n\t}\n\n\t// ---\n\n\tpublic static fromPositions(start: IPosition, end: IPosition = start): Range {\n\t\treturn new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n\t}\n\n\t/**\n\t * Create a `Range` from an `IRange`.\n\t */\n\tpublic static lift(range: undefined | null): null;\n\tpublic static lift(range: IRange): Range;\n\tpublic static lift(range: IRange | undefined | null): Range | null;\n\tpublic static lift(range: IRange | undefined | null): Range | null {\n\t\tif (!range) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n\t}\n\n\t/**\n\t * Test if `obj` is an `IRange`.\n\t */\n\tpublic static isIRange(obj: any): obj is IRange {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.startLineNumber === 'number')\n\t\t\t&& (typeof obj.startColumn === 'number')\n\t\t\t&& (typeof obj.endLineNumber === 'number')\n\t\t\t&& (typeof obj.endColumn === 'number')\n\t\t);\n\t}\n\n\t/**\n\t * Test if the two ranges are touching in any way.\n\t */\n\tpublic static areIntersectingOrTouching(a: IRange, b: IRange): boolean {\n\t\t// Check if `a` is before `b`\n\t\tif (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if `b` is before `a`\n\t\tif (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// These ranges must intersect\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if the two ranges are intersecting. If the ranges are touching it returns true.\n\t */\n\tpublic static areIntersecting(a: IRange, b: IRange): boolean {\n\t\t// Check if `a` is before `b`\n\t\tif (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if `b` is before `a`\n\t\tif (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// These ranges must intersect\n\t\treturn true;\n\t}\n\n\t/**\n\t * A function that compares ranges, useful for sorting ranges\n\t * It will first compare ranges on the startPosition and then on the endPosition\n\t */\n\tpublic static compareRangesUsingStarts(a: IRange | null | undefined, b: IRange | null | undefined): number {\n\t\tif (a && b) {\n\t\t\tconst aStartLineNumber = a.startLineNumber | 0;\n\t\t\tconst bStartLineNumber = b.startLineNumber | 0;\n\n\t\t\tif (aStartLineNumber === bStartLineNumber) {\n\t\t\t\tconst aStartColumn = a.startColumn | 0;\n\t\t\t\tconst bStartColumn = b.startColumn | 0;\n\n\t\t\t\tif (aStartColumn === bStartColumn) {\n\t\t\t\t\tconst aEndLineNumber = a.endLineNumber | 0;\n\t\t\t\t\tconst bEndLineNumber = b.endLineNumber | 0;\n\n\t\t\t\t\tif (aEndLineNumber === bEndLineNumber) {\n\t\t\t\t\t\tconst aEndColumn = a.endColumn | 0;\n\t\t\t\t\t\tconst bEndColumn = b.endColumn | 0;\n\t\t\t\t\t\treturn aEndColumn - bEndColumn;\n\t\t\t\t\t}\n\t\t\t\t\treturn aEndLineNumber - bEndLineNumber;\n\t\t\t\t}\n\t\t\t\treturn aStartColumn - bStartColumn;\n\t\t\t}\n\t\t\treturn aStartLineNumber - bStartLineNumber;\n\t\t}\n\t\tconst aExists = (a ? 1 : 0);\n\t\tconst bExists = (b ? 1 : 0);\n\t\treturn aExists - bExists;\n\t}\n\n\t/**\n\t * A function that compares ranges, useful for sorting ranges\n\t * It will first compare ranges on the endPosition and then on the startPosition\n\t */\n\tpublic static compareRangesUsingEnds(a: IRange, b: IRange): number {\n\t\tif (a.endLineNumber === b.endLineNumber) {\n\t\t\tif (a.endColumn === b.endColumn) {\n\t\t\t\tif (a.startLineNumber === b.startLineNumber) {\n\t\t\t\t\treturn a.startColumn - b.startColumn;\n\t\t\t\t}\n\t\t\t\treturn a.startLineNumber - b.startLineNumber;\n\t\t\t}\n\t\t\treturn a.endColumn - b.endColumn;\n\t\t}\n\t\treturn a.endLineNumber - b.endLineNumber;\n\t}\n\n\t/**\n\t * Test if the range spans multiple lines.\n\t */\n\tpublic static spansMultipleLines(range: IRange): boolean {\n\t\treturn range.endLineNumber > range.startLineNumber;\n\t}\n\n\tpublic toJSON(): IRange {\n\t\treturn this;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Color } from 'vs/base/common/color';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { ITokenizationRegistry, ITokenizationSupport, ITokenizationSupportChangedEvent, ITokenizationSupportFactory } from 'vs/editor/common/languages';\nimport { ColorId } from 'vs/editor/common/encodedTokenAttributes';\n\nexport class TokenizationRegistry implements ITokenizationRegistry {\n\n\tprivate readonly _map = new Map<string, ITokenizationSupport>();\n\tprivate readonly _factories = new Map<string, TokenizationSupportFactoryData>();\n\n\tprivate readonly _onDidChange = new Emitter<ITokenizationSupportChangedEvent>();\n\tpublic readonly onDidChange: Event<ITokenizationSupportChangedEvent> = this._onDidChange.event;\n\n\tprivate _colorMap: Color[] | null;\n\n\tconstructor() {\n\t\tthis._colorMap = null;\n\t}\n\n\tpublic fire(languages: string[]): void {\n\t\tthis._onDidChange.fire({\n\t\t\tchangedLanguages: languages,\n\t\t\tchangedColorMap: false\n\t\t});\n\t}\n\n\tpublic register(language: string, support: ITokenizationSupport) {\n\t\tthis._map.set(language, support);\n\t\tthis.fire([language]);\n\t\treturn toDisposable(() => {\n\t\t\tif (this._map.get(language) !== support) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._map.delete(language);\n\t\t\tthis.fire([language]);\n\t\t});\n\t}\n\n\tpublic registerFactory(languageId: string, factory: ITokenizationSupportFactory): IDisposable {\n\t\tthis._factories.get(languageId)?.dispose();\n\t\tconst myData = new TokenizationSupportFactoryData(this, languageId, factory);\n\t\tthis._factories.set(languageId, myData);\n\t\treturn toDisposable(() => {\n\t\t\tconst v = this._factories.get(languageId);\n\t\t\tif (!v || v !== myData) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._factories.delete(languageId);\n\t\t\tv.dispose();\n\t\t});\n\t}\n\n\tpublic async getOrCreate(languageId: string): Promise<ITokenizationSupport | null> {\n\t\t// check first if the support is already set\n\t\tconst tokenizationSupport = this.get(languageId);\n\t\tif (tokenizationSupport) {\n\t\t\treturn tokenizationSupport;\n\t\t}\n\n\t\tconst factory = this._factories.get(languageId);\n\t\tif (!factory || factory.isResolved) {\n\t\t\t// no factory or factory.resolve already finished\n\t\t\treturn null;\n\t\t}\n\n\t\tawait factory.resolve();\n\n\t\treturn this.get(languageId);\n\t}\n\n\tpublic get(language: string): ITokenizationSupport | null {\n\t\treturn (this._map.get(language) || null);\n\t}\n\n\tpublic isResolved(languageId: string): boolean {\n\t\tconst tokenizationSupport = this.get(languageId);\n\t\tif (tokenizationSupport) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst factory = this._factories.get(languageId);\n\t\tif (!factory || factory.isResolved) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic setColorMap(colorMap: Color[]): void {\n\t\tthis._colorMap = colorMap;\n\t\tthis._onDidChange.fire({\n\t\t\tchangedLanguages: Array.from(this._map.keys()),\n\t\t\tchangedColorMap: true\n\t\t});\n\t}\n\n\tpublic getColorMap(): Color[] | null {\n\t\treturn this._colorMap;\n\t}\n\n\tpublic getDefaultBackground(): Color | null {\n\t\tif (this._colorMap && this._colorMap.length > ColorId.DefaultBackground) {\n\t\t\treturn this._colorMap[ColorId.DefaultBackground];\n\t\t}\n\t\treturn null;\n\t}\n}\n\nclass TokenizationSupportFactoryData extends Disposable {\n\n\tprivate _isDisposed: boolean = false;\n\tprivate _resolvePromise: Promise<void> | null = null;\n\tprivate _isResolved: boolean = false;\n\n\tpublic get isResolved(): boolean {\n\t\treturn this._isResolved;\n\t}\n\n\tconstructor(\n\t\tprivate readonly _registry: TokenizationRegistry,\n\t\tprivate readonly _languageId: string,\n\t\tprivate readonly _factory: ITokenizationSupportFactory,\n\t) {\n\t\tsuper();\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._isDisposed = true;\n\t\tsuper.dispose();\n\t}\n\n\tpublic async resolve(): Promise<void> {\n\t\tif (!this._resolvePromise) {\n\t\t\tthis._resolvePromise = this._create();\n\t\t}\n\t\treturn this._resolvePromise;\n\t}\n\n\tprivate async _create(): Promise<void> {\n\t\tconst value = await Promise.resolve(this._factory.createTokenizationSupport());\n\t\tthis._isResolved = true;\n\t\tif (value && !this._isDisposed) {\n\t\t\tthis._register(this._registry.register(this._languageId, value));\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Codicon, CSSIcon } from 'vs/base/common/codicons';\nimport { Color } from 'vs/base/common/color';\nimport { VSDataTransfer } from 'vs/base/common/dataTransfer';\nimport { Event } from 'vs/base/common/event';\nimport { IMarkdownString } from 'vs/base/common/htmlContent';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { ISingleEditOperation } from 'vs/editor/common/core/editOperation';\nimport { IPosition, Position } from 'vs/editor/common/core/position';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { LanguageId } from 'vs/editor/common/encodedTokenAttributes';\nimport * as model from 'vs/editor/common/model';\nimport { TokenizationRegistry as TokenizationRegistryImpl } from 'vs/editor/common/tokenizationRegistry';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { IMarkerData } from 'vs/platform/markers/common/markers';\nimport { ThemeIcon } from 'vs/platform/theme/common/themeService';\n\n/**\n * @internal\n */\nexport interface ILanguageIdCodec {\n\tencodeLanguageId(languageId: string): LanguageId;\n\tdecodeLanguageId(languageId: LanguageId): string;\n}\n\nexport class Token {\n\t_tokenBrand: void = undefined;\n\n\tpublic readonly offset: number;\n\tpublic readonly type: string;\n\tpublic readonly language: string;\n\n\tconstructor(offset: number, type: string, language: string) {\n\t\tthis.offset = offset;\n\t\tthis.type = type;\n\t\tthis.language = language;\n\t}\n\n\tpublic toString(): string {\n\t\treturn '(' + this.offset + ', ' + this.type + ')';\n\t}\n}\n\n/**\n * @internal\n */\nexport class TokenizationResult {\n\t_tokenizationResultBrand: void = undefined;\n\n\tpublic readonly tokens: Token[];\n\tpublic readonly endState: IState;\n\n\tconstructor(tokens: Token[], endState: IState) {\n\t\tthis.tokens = tokens;\n\t\tthis.endState = endState;\n\t}\n}\n\n/**\n * @internal\n */\nexport class EncodedTokenizationResult {\n\t_encodedTokenizationResultBrand: void = undefined;\n\n\t/**\n\t * The tokens in binary format. Each token occupies two array indices. For token i:\n\t *  - at offset 2*i => startIndex\n\t *  - at offset 2*i + 1 => metadata\n\t *\n\t */\n\tpublic readonly tokens: Uint32Array;\n\tpublic readonly endState: IState;\n\n\tconstructor(tokens: Uint32Array, endState: IState) {\n\t\tthis.tokens = tokens;\n\t\tthis.endState = endState;\n\t}\n}\n\n/**\n * @internal\n */\nexport interface ITokenizationSupport {\n\n\tgetInitialState(): IState;\n\n\ttokenize(line: string, hasEOL: boolean, state: IState): TokenizationResult;\n\n\ttokenizeEncoded(line: string, hasEOL: boolean, state: IState): EncodedTokenizationResult;\n}\n\n/**\n * The state of the tokenizer between two lines.\n * It is useful to store flags such as in multiline comment, etc.\n * The model will clone the previous line's state and pass it in to tokenize the next line.\n */\nexport interface IState {\n\tclone(): IState;\n\tequals(other: IState): boolean;\n}\n\n/**\n * A provider result represents the values a provider, like the {@link HoverProvider},\n * may return. For once this is the actual result type `T`, like `Hover`, or a thenable that resolves\n * to that type `T`. In addition, `null` and `undefined` can be returned - either directly or from a\n * thenable.\n */\nexport type ProviderResult<T> = T | undefined | null | Thenable<T | undefined | null>;\n\n/**\n * A hover represents additional information for a symbol or word. Hovers are\n * rendered in a tooltip-like widget.\n */\nexport interface Hover {\n\t/**\n\t * The contents of this hover.\n\t */\n\tcontents: IMarkdownString[];\n\n\t/**\n\t * The range to which this hover applies. When missing, the\n\t * editor will use the range at the current position or the\n\t * current position itself.\n\t */\n\trange?: IRange;\n}\n\n/**\n * The hover provider interface defines the contract between extensions and\n * the [hover](https://code.visualstudio.com/docs/editor/intellisense)-feature.\n */\nexport interface HoverProvider {\n\t/**\n\t * Provide a hover for the given position and document. Multiple hovers at the same\n\t * position will be merged by the editor. A hover can have a range which defaults\n\t * to the word range at the position when omitted.\n\t */\n\tprovideHover(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<Hover>;\n}\n\n/**\n * An evaluatable expression represents additional information for an expression in a document. Evaluatable expressions are\n * evaluated by a debugger or runtime and their result is rendered in a tooltip-like widget.\n * @internal\n */\nexport interface EvaluatableExpression {\n\t/**\n\t * The range to which this expression applies.\n\t */\n\trange: IRange;\n\t/**\n\t * This expression overrides the expression extracted from the range.\n\t */\n\texpression?: string;\n}\n\n\n/**\n * The evaluatable expression provider interface defines the contract between extensions and\n * the debug hover.\n * @internal\n */\nexport interface EvaluatableExpressionProvider {\n\t/**\n\t * Provide a hover for the given position and document. Multiple hovers at the same\n\t * position will be merged by the editor. A hover can have a range which defaults\n\t * to the word range at the position when omitted.\n\t */\n\tprovideEvaluatableExpression(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<EvaluatableExpression>;\n}\n\n/**\n * A value-object that contains contextual information when requesting inline values from a InlineValuesProvider.\n * @internal\n */\nexport interface InlineValueContext {\n\tframeId: number;\n\tstoppedLocation: Range;\n}\n\n/**\n * Provide inline value as text.\n * @internal\n */\nexport interface InlineValueText {\n\ttype: 'text';\n\trange: IRange;\n\ttext: string;\n}\n\n/**\n * Provide inline value through a variable lookup.\n * @internal\n */\nexport interface InlineValueVariableLookup {\n\ttype: 'variable';\n\trange: IRange;\n\tvariableName?: string;\n\tcaseSensitiveLookup: boolean;\n}\n\n/**\n * Provide inline value through an expression evaluation.\n * @internal\n */\nexport interface InlineValueExpression {\n\ttype: 'expression';\n\trange: IRange;\n\texpression?: string;\n}\n\n/**\n * Inline value information can be provided by different means:\n * - directly as a text value (class InlineValueText).\n * - as a name to use for a variable lookup (class InlineValueVariableLookup)\n * - as an evaluatable expression (class InlineValueEvaluatableExpression)\n * The InlineValue types combines all inline value types into one type.\n * @internal\n */\nexport type InlineValue = InlineValueText | InlineValueVariableLookup | InlineValueExpression;\n\n/**\n * The inline values provider interface defines the contract between extensions and\n * the debugger's inline values feature.\n * @internal\n */\nexport interface InlineValuesProvider {\n\t/**\n\t */\n\tonDidChangeInlineValues?: Event<void> | undefined;\n\t/**\n\t * Provide the \"inline values\" for the given range and document. Multiple hovers at the same\n\t * position will be merged by the editor. A hover can have a range which defaults\n\t * to the word range at the position when omitted.\n\t */\n\tprovideInlineValues(model: model.ITextModel, viewPort: Range, context: InlineValueContext, token: CancellationToken): ProviderResult<InlineValue[]>;\n}\n\nexport const enum CompletionItemKind {\n\tMethod,\n\tFunction,\n\tConstructor,\n\tField,\n\tVariable,\n\tClass,\n\tStruct,\n\tInterface,\n\tModule,\n\tProperty,\n\tEvent,\n\tOperator,\n\tUnit,\n\tValue,\n\tConstant,\n\tEnum,\n\tEnumMember,\n\tKeyword,\n\tText,\n\tColor,\n\tFile,\n\tReference,\n\tCustomcolor,\n\tFolder,\n\tTypeParameter,\n\tUser,\n\tIssue,\n\tSnippet, // <- highest value (used for compare!)\n}\n\n/**\n * @internal\n */\nexport namespace CompletionItemKinds {\n\n\tconst byKind = new Map<CompletionItemKind, CSSIcon>();\n\tbyKind.set(CompletionItemKind.Method, Codicon.symbolMethod);\n\tbyKind.set(CompletionItemKind.Function, Codicon.symbolFunction);\n\tbyKind.set(CompletionItemKind.Constructor, Codicon.symbolConstructor);\n\tbyKind.set(CompletionItemKind.Field, Codicon.symbolField);\n\tbyKind.set(CompletionItemKind.Variable, Codicon.symbolVariable);\n\tbyKind.set(CompletionItemKind.Class, Codicon.symbolClass);\n\tbyKind.set(CompletionItemKind.Struct, Codicon.symbolStruct);\n\tbyKind.set(CompletionItemKind.Interface, Codicon.symbolInterface);\n\tbyKind.set(CompletionItemKind.Module, Codicon.symbolModule);\n\tbyKind.set(CompletionItemKind.Property, Codicon.symbolProperty);\n\tbyKind.set(CompletionItemKind.Event, Codicon.symbolEvent);\n\tbyKind.set(CompletionItemKind.Operator, Codicon.symbolOperator);\n\tbyKind.set(CompletionItemKind.Unit, Codicon.symbolUnit);\n\tbyKind.set(CompletionItemKind.Value, Codicon.symbolValue);\n\tbyKind.set(CompletionItemKind.Enum, Codicon.symbolEnum);\n\tbyKind.set(CompletionItemKind.Constant, Codicon.symbolConstant);\n\tbyKind.set(CompletionItemKind.Enum, Codicon.symbolEnum);\n\tbyKind.set(CompletionItemKind.EnumMember, Codicon.symbolEnumMember);\n\tbyKind.set(CompletionItemKind.Keyword, Codicon.symbolKeyword);\n\tbyKind.set(CompletionItemKind.Snippet, Codicon.symbolSnippet);\n\tbyKind.set(CompletionItemKind.Text, Codicon.symbolText);\n\tbyKind.set(CompletionItemKind.Color, Codicon.symbolColor);\n\tbyKind.set(CompletionItemKind.File, Codicon.symbolFile);\n\tbyKind.set(CompletionItemKind.Reference, Codicon.symbolReference);\n\tbyKind.set(CompletionItemKind.Customcolor, Codicon.symbolCustomColor);\n\tbyKind.set(CompletionItemKind.Folder, Codicon.symbolFolder);\n\tbyKind.set(CompletionItemKind.TypeParameter, Codicon.symbolTypeParameter);\n\tbyKind.set(CompletionItemKind.User, Codicon.account);\n\tbyKind.set(CompletionItemKind.Issue, Codicon.issues);\n\n\t/**\n\t * @internal\n\t */\n\texport function toIcon(kind: CompletionItemKind): CSSIcon {\n\t\tlet codicon = byKind.get(kind);\n\t\tif (!codicon) {\n\t\t\tconsole.info('No codicon found for CompletionItemKind ' + kind);\n\t\t\tcodicon = Codicon.symbolProperty;\n\t\t}\n\t\treturn codicon;\n\t}\n\n\tconst data = new Map<string, CompletionItemKind>();\n\tdata.set('method', CompletionItemKind.Method);\n\tdata.set('function', CompletionItemKind.Function);\n\tdata.set('constructor', <any>CompletionItemKind.Constructor);\n\tdata.set('field', CompletionItemKind.Field);\n\tdata.set('variable', CompletionItemKind.Variable);\n\tdata.set('class', CompletionItemKind.Class);\n\tdata.set('struct', CompletionItemKind.Struct);\n\tdata.set('interface', CompletionItemKind.Interface);\n\tdata.set('module', CompletionItemKind.Module);\n\tdata.set('property', CompletionItemKind.Property);\n\tdata.set('event', CompletionItemKind.Event);\n\tdata.set('operator', CompletionItemKind.Operator);\n\tdata.set('unit', CompletionItemKind.Unit);\n\tdata.set('value', CompletionItemKind.Value);\n\tdata.set('constant', CompletionItemKind.Constant);\n\tdata.set('enum', CompletionItemKind.Enum);\n\tdata.set('enum-member', CompletionItemKind.EnumMember);\n\tdata.set('enumMember', CompletionItemKind.EnumMember);\n\tdata.set('keyword', CompletionItemKind.Keyword);\n\tdata.set('snippet', CompletionItemKind.Snippet);\n\tdata.set('text', CompletionItemKind.Text);\n\tdata.set('color', CompletionItemKind.Color);\n\tdata.set('file', CompletionItemKind.File);\n\tdata.set('reference', CompletionItemKind.Reference);\n\tdata.set('customcolor', CompletionItemKind.Customcolor);\n\tdata.set('folder', CompletionItemKind.Folder);\n\tdata.set('type-parameter', CompletionItemKind.TypeParameter);\n\tdata.set('typeParameter', CompletionItemKind.TypeParameter);\n\tdata.set('account', CompletionItemKind.User);\n\tdata.set('issue', CompletionItemKind.Issue);\n\n\t/**\n\t * @internal\n\t */\n\texport function fromString(value: string): CompletionItemKind;\n\t/**\n\t * @internal\n\t */\n\texport function fromString(value: string, strict: true): CompletionItemKind | undefined;\n\t/**\n\t * @internal\n\t */\n\texport function fromString(value: string, strict?: boolean): CompletionItemKind | undefined {\n\t\tlet res = data.get(value);\n\t\tif (typeof res === 'undefined' && !strict) {\n\t\t\tres = CompletionItemKind.Property;\n\t\t}\n\t\treturn res;\n\t}\n}\n\nexport interface CompletionItemLabel {\n\tlabel: string;\n\tdetail?: string;\n\tdescription?: string;\n}\n\nexport const enum CompletionItemTag {\n\tDeprecated = 1\n}\n\nexport const enum CompletionItemInsertTextRule {\n\t/**\n\t * Adjust whitespace/indentation of multiline insert texts to\n\t * match the current line indentation.\n\t */\n\tKeepWhitespace = 0b001,\n\n\t/**\n\t * `insertText` is a snippet.\n\t */\n\tInsertAsSnippet = 0b100,\n}\n\nexport interface CompletionItemRanges {\n\tinsert: IRange;\n\treplace: IRange;\n}\n\n/**\n * A completion item represents a text snippet that is\n * proposed to complete text that is being typed.\n */\nexport interface CompletionItem {\n\t/**\n\t * The label of this completion item. By default\n\t * this is also the text that is inserted when selecting\n\t * this completion.\n\t */\n\tlabel: string | CompletionItemLabel;\n\t/**\n\t * The kind of this completion item. Based on the kind\n\t * an icon is chosen by the editor.\n\t */\n\tkind: CompletionItemKind;\n\t/**\n\t * A modifier to the `kind` which affect how the item\n\t * is rendered, e.g. Deprecated is rendered with a strikeout\n\t */\n\ttags?: ReadonlyArray<CompletionItemTag>;\n\t/**\n\t * A human-readable string with additional information\n\t * about this item, like type or symbol information.\n\t */\n\tdetail?: string;\n\t/**\n\t * A human-readable string that represents a doc-comment.\n\t */\n\tdocumentation?: string | IMarkdownString;\n\t/**\n\t * A string that should be used when comparing this item\n\t * with other items. When `falsy` the {@link CompletionItem.label label}\n\t * is used.\n\t */\n\tsortText?: string;\n\t/**\n\t * A string that should be used when filtering a set of\n\t * completion items. When `falsy` the {@link CompletionItem.label label}\n\t * is used.\n\t */\n\tfilterText?: string;\n\t/**\n\t * Select this item when showing. *Note* that only one completion item can be selected and\n\t * that the editor decides which item that is. The rule is that the *first* item of those\n\t * that match best is selected.\n\t */\n\tpreselect?: boolean;\n\t/**\n\t * A string or snippet that should be inserted in a document when selecting\n\t * this completion.\n\t */\n\tinsertText: string;\n\t/**\n\t * Additional rules (as bitmask) that should be applied when inserting\n\t * this completion.\n\t */\n\tinsertTextRules?: CompletionItemInsertTextRule;\n\t/**\n\t * A range of text that should be replaced by this completion item.\n\t *\n\t * Defaults to a range from the start of the {@link TextDocument.getWordRangeAtPosition current word} to the\n\t * current position.\n\t *\n\t * *Note:* The range must be a {@link Range.isSingleLine single line} and it must\n\t * {@link Range.contains contain} the position at which completion has been {@link CompletionItemProvider.provideCompletionItems requested}.\n\t */\n\trange: IRange | CompletionItemRanges;\n\t/**\n\t * An optional set of characters that when pressed while this completion is active will accept it first and\n\t * then type that character. *Note* that all commit characters should have `length=1` and that superfluous\n\t * characters will be ignored.\n\t */\n\tcommitCharacters?: string[];\n\t/**\n\t * An optional array of additional text edits that are applied when\n\t * selecting this completion. Edits must not overlap with the main edit\n\t * nor with themselves.\n\t */\n\tadditionalTextEdits?: ISingleEditOperation[];\n\t/**\n\t * A command that should be run upon acceptance of this item.\n\t */\n\tcommand?: Command;\n\t/**\n\t * @internal\n\t */\n\textensionId?: ExtensionIdentifier;\n\n\t/**\n\t * @internal\n\t */\n\t_id?: [number, number];\n}\n\nexport interface CompletionList {\n\tsuggestions: CompletionItem[];\n\tincomplete?: boolean;\n\tdispose?(): void;\n\n\t/**\n\t * @internal\n\t */\n\tduration?: number;\n}\n\n/**\n * How a suggest provider was triggered.\n */\nexport const enum CompletionTriggerKind {\n\tInvoke = 0,\n\tTriggerCharacter = 1,\n\tTriggerForIncompleteCompletions = 2\n}\n/**\n * Contains additional information about the context in which\n * {@link CompletionItemProvider.provideCompletionItems completion provider} is triggered.\n */\nexport interface CompletionContext {\n\t/**\n\t * How the completion was triggered.\n\t */\n\ttriggerKind: CompletionTriggerKind;\n\t/**\n\t * Character that triggered the completion item provider.\n\t *\n\t * `undefined` if provider was not triggered by a character.\n\t */\n\ttriggerCharacter?: string;\n}\n/**\n * The completion item provider interface defines the contract between extensions and\n * the [IntelliSense](https://code.visualstudio.com/docs/editor/intellisense).\n *\n * When computing *complete* completion items is expensive, providers can optionally implement\n * the `resolveCompletionItem`-function. In that case it is enough to return completion\n * items with a {@link CompletionItem.label label} from the\n * {@link CompletionItemProvider.provideCompletionItems provideCompletionItems}-function. Subsequently,\n * when a completion item is shown in the UI and gains focus this provider is asked to resolve\n * the item, like adding {@link CompletionItem.documentation doc-comment} or {@link CompletionItem.detail details}.\n */\nexport interface CompletionItemProvider {\n\n\t/**\n\t * @internal\n\t */\n\t_debugDisplayName?: string;\n\n\ttriggerCharacters?: string[];\n\t/**\n\t * Provide completion items for the given position and document.\n\t */\n\tprovideCompletionItems(model: model.ITextModel, position: Position, context: CompletionContext, token: CancellationToken): ProviderResult<CompletionList>;\n\n\t/**\n\t * Given a completion item fill in more data, like {@link CompletionItem.documentation doc-comment}\n\t * or {@link CompletionItem.detail details}.\n\t *\n\t * The editor will only resolve a completion item once.\n\t */\n\tresolveCompletionItem?(item: CompletionItem, token: CancellationToken): ProviderResult<CompletionItem>;\n}\n\n/**\n * How an {@link InlineCompletionsProvider inline completion provider} was triggered.\n */\nexport enum InlineCompletionTriggerKind {\n\t/**\n\t * Completion was triggered automatically while editing.\n\t * It is sufficient to return a single completion item in this case.\n\t */\n\tAutomatic = 0,\n\n\t/**\n\t * Completion was triggered explicitly by a user gesture.\n\t * Return multiple completion items to enable cycling through them.\n\t */\n\tExplicit = 1,\n}\n\nexport interface InlineCompletionContext {\n\t/**\n\t * How the completion was triggered.\n\t */\n\treadonly triggerKind: InlineCompletionTriggerKind;\n\n\treadonly selectedSuggestionInfo: SelectedSuggestionInfo | undefined;\n}\n\nexport interface SelectedSuggestionInfo {\n\trange: IRange;\n\ttext: string;\n\tisSnippetText: boolean;\n\tcompletionKind: CompletionItemKind;\n}\n\nexport interface InlineCompletion {\n\t/**\n\t * The text to insert.\n\t * If the text contains a line break, the range must end at the end of a line.\n\t * If existing text should be replaced, the existing text must be a prefix of the text to insert.\n\t *\n\t * The text can also be a snippet. In that case, a preview with default parameters is shown.\n\t * When accepting the suggestion, the full snippet is inserted.\n\t*/\n\treadonly insertText: string | { snippet: string };\n\n\t/**\n\t * A text that is used to decide if this inline completion should be shown.\n\t * An inline completion is shown if the text to replace is a subword of the filter text.\n\t */\n\treadonly filterText?: string;\n\n\t/**\n\t * An optional array of additional text edits that are applied when\n\t * selecting this completion. Edits must not overlap with the main edit\n\t * nor with themselves.\n\t */\n\treadonly additionalTextEdits?: ISingleEditOperation[];\n\n\t/**\n\t * The range to replace.\n\t * Must begin and end on the same line.\n\t*/\n\treadonly range?: IRange;\n\n\treadonly command?: Command;\n\n\t/**\n\t * If set to `true`, unopened closing brackets are removed and unclosed opening brackets are closed.\n\t * Defaults to `false`.\n\t*/\n\treadonly completeBracketPairs?: boolean;\n}\n\nexport interface InlineCompletions<TItem extends InlineCompletion = InlineCompletion> {\n\treadonly items: readonly TItem[];\n\t/**\n\t * A list of commands associated with the inline completions of this list.\n\t */\n\treadonly commands?: Command[];\n}\n\nexport interface InlineCompletionsProvider<T extends InlineCompletions = InlineCompletions> {\n\tprovideInlineCompletions(model: model.ITextModel, position: Position, context: InlineCompletionContext, token: CancellationToken): ProviderResult<T>;\n\n\t/**\n\t * Will be called when an item is shown.\n\t*/\n\thandleItemDidShow?(completions: T, item: T['items'][number]): void;\n\n\t/**\n\t * Will be called when a completions list is no longer in use and can be garbage-collected.\n\t*/\n\tfreeInlineCompletions(completions: T): void;\n}\n\nexport interface CodeAction {\n\ttitle: string;\n\tcommand?: Command;\n\tedit?: WorkspaceEdit;\n\tdiagnostics?: IMarkerData[];\n\tkind?: string;\n\tisPreferred?: boolean;\n\tdisabled?: string;\n}\n\nexport const enum CodeActionTriggerType {\n\tInvoke = 1,\n\tAuto = 2,\n}\n\n/**\n * @internal\n */\nexport interface CodeActionContext {\n\tonly?: string;\n\ttrigger: CodeActionTriggerType;\n}\n\nexport interface CodeActionList extends IDisposable {\n\treadonly actions: ReadonlyArray<CodeAction>;\n}\n\n/**\n * The code action interface defines the contract between extensions and\n * the [light bulb](https://code.visualstudio.com/docs/editor/editingevolved#_code-action) feature.\n * @internal\n */\nexport interface CodeActionProvider {\n\n\tdisplayName?: string;\n\n\t/**\n\t * Provide commands for the given document and range.\n\t */\n\tprovideCodeActions(model: model.ITextModel, range: Range | Selection, context: CodeActionContext, token: CancellationToken): ProviderResult<CodeActionList>;\n\n\t/**\n\t * Given a code action fill in the edit. Will only invoked when missing.\n\t */\n\tresolveCodeAction?(codeAction: CodeAction, token: CancellationToken): ProviderResult<CodeAction>;\n\n\t/**\n\t * Optional list of CodeActionKinds that this provider returns.\n\t */\n\treadonly providedCodeActionKinds?: ReadonlyArray<string>;\n\n\treadonly documentation?: ReadonlyArray<{ readonly kind: string; readonly command: Command }>;\n\n\t/**\n\t * @internal\n\t */\n\t_getAdditionalMenuItems?(context: CodeActionContext, actions: readonly CodeAction[]): Command[];\n}\n\n/**\n * @internal\n */\nexport interface DocumentPasteEdit {\n\tinsertText: string | { snippet: string };\n\tadditionalEdit?: WorkspaceEdit;\n}\n\n/**\n * @internal\n */\nexport interface DocumentPasteEditProvider {\n\n\treadonly pasteMimeTypes: readonly string[];\n\n\tprepareDocumentPaste?(model: model.ITextModel, ranges: readonly IRange[], dataTransfer: VSDataTransfer, token: CancellationToken): Promise<undefined | VSDataTransfer>;\n\n\tprovideDocumentPasteEdits(model: model.ITextModel, ranges: readonly IRange[], dataTransfer: VSDataTransfer, token: CancellationToken): Promise<DocumentPasteEdit | undefined>;\n}\n\n/**\n * Represents a parameter of a callable-signature. A parameter can\n * have a label and a doc-comment.\n */\nexport interface ParameterInformation {\n\t/**\n\t * The label of this signature. Will be shown in\n\t * the UI.\n\t */\n\tlabel: string | [number, number];\n\t/**\n\t * The human-readable doc-comment of this signature. Will be shown\n\t * in the UI but can be omitted.\n\t */\n\tdocumentation?: string | IMarkdownString;\n}\n/**\n * Represents the signature of something callable. A signature\n * can have a label, like a function-name, a doc-comment, and\n * a set of parameters.\n */\nexport interface SignatureInformation {\n\t/**\n\t * The label of this signature. Will be shown in\n\t * the UI.\n\t */\n\tlabel: string;\n\t/**\n\t * The human-readable doc-comment of this signature. Will be shown\n\t * in the UI but can be omitted.\n\t */\n\tdocumentation?: string | IMarkdownString;\n\t/**\n\t * The parameters of this signature.\n\t */\n\tparameters: ParameterInformation[];\n\t/**\n\t * Index of the active parameter.\n\t *\n\t * If provided, this is used in place of `SignatureHelp.activeSignature`.\n\t */\n\tactiveParameter?: number;\n}\n/**\n * Signature help represents the signature of something\n * callable. There can be multiple signatures but only one\n * active and only one active parameter.\n */\nexport interface SignatureHelp {\n\t/**\n\t * One or more signatures.\n\t */\n\tsignatures: SignatureInformation[];\n\t/**\n\t * The active signature.\n\t */\n\tactiveSignature: number;\n\t/**\n\t * The active parameter of the active signature.\n\t */\n\tactiveParameter: number;\n}\n\nexport interface SignatureHelpResult extends IDisposable {\n\tvalue: SignatureHelp;\n}\n\nexport enum SignatureHelpTriggerKind {\n\tInvoke = 1,\n\tTriggerCharacter = 2,\n\tContentChange = 3,\n}\n\nexport interface SignatureHelpContext {\n\treadonly triggerKind: SignatureHelpTriggerKind;\n\treadonly triggerCharacter?: string;\n\treadonly isRetrigger: boolean;\n\treadonly activeSignatureHelp?: SignatureHelp;\n}\n\n/**\n * The signature help provider interface defines the contract between extensions and\n * the [parameter hints](https://code.visualstudio.com/docs/editor/intellisense)-feature.\n */\nexport interface SignatureHelpProvider {\n\n\treadonly signatureHelpTriggerCharacters?: ReadonlyArray<string>;\n\treadonly signatureHelpRetriggerCharacters?: ReadonlyArray<string>;\n\n\t/**\n\t * Provide help for the signature at the given position and document.\n\t */\n\tprovideSignatureHelp(model: model.ITextModel, position: Position, token: CancellationToken, context: SignatureHelpContext): ProviderResult<SignatureHelpResult>;\n}\n\n/**\n * A document highlight kind.\n */\nexport enum DocumentHighlightKind {\n\t/**\n\t * A textual occurrence.\n\t */\n\tText,\n\t/**\n\t * Read-access of a symbol, like reading a variable.\n\t */\n\tRead,\n\t/**\n\t * Write-access of a symbol, like writing to a variable.\n\t */\n\tWrite\n}\n/**\n * A document highlight is a range inside a text document which deserves\n * special attention. Usually a document highlight is visualized by changing\n * the background color of its range.\n */\nexport interface DocumentHighlight {\n\t/**\n\t * The range this highlight applies to.\n\t */\n\trange: IRange;\n\t/**\n\t * The highlight kind, default is {@link DocumentHighlightKind.Text text}.\n\t */\n\tkind?: DocumentHighlightKind;\n}\n/**\n * The document highlight provider interface defines the contract between extensions and\n * the word-highlight-feature.\n */\nexport interface DocumentHighlightProvider {\n\t/**\n\t * Provide a set of document highlights, like all occurrences of a variable or\n\t * all exit-points of a function.\n\t */\n\tprovideDocumentHighlights(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<DocumentHighlight[]>;\n}\n\n/**\n * The linked editing range provider interface defines the contract between extensions and\n * the linked editing feature.\n */\nexport interface LinkedEditingRangeProvider {\n\n\t/**\n\t * Provide a list of ranges that can be edited together.\n\t */\n\tprovideLinkedEditingRanges(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<LinkedEditingRanges>;\n}\n\n/**\n * Represents a list of ranges that can be edited together along with a word pattern to describe valid contents.\n */\nexport interface LinkedEditingRanges {\n\t/**\n\t * A list of ranges that can be edited together. The ranges must have\n\t * identical length and text content. The ranges cannot overlap\n\t */\n\tranges: IRange[];\n\n\t/**\n\t * An optional word pattern that describes valid contents for the given ranges.\n\t * If no pattern is provided, the language configuration's word pattern will be used.\n\t */\n\twordPattern?: RegExp;\n}\n\n/**\n * Value-object that contains additional information when\n * requesting references.\n */\nexport interface ReferenceContext {\n\t/**\n\t * Include the declaration of the current symbol.\n\t */\n\tincludeDeclaration: boolean;\n}\n/**\n * The reference provider interface defines the contract between extensions and\n * the [find references](https://code.visualstudio.com/docs/editor/editingevolved#_peek)-feature.\n */\nexport interface ReferenceProvider {\n\t/**\n\t * Provide a set of project-wide references for the given position and document.\n\t */\n\tprovideReferences(model: model.ITextModel, position: Position, context: ReferenceContext, token: CancellationToken): ProviderResult<Location[]>;\n}\n\n/**\n * Represents a location inside a resource, such as a line\n * inside a text file.\n */\nexport interface Location {\n\t/**\n\t * The resource identifier of this location.\n\t */\n\turi: URI;\n\t/**\n\t * The document range of this locations.\n\t */\n\trange: IRange;\n}\n\nexport interface LocationLink {\n\t/**\n\t * A range to select where this link originates from.\n\t */\n\toriginSelectionRange?: IRange;\n\n\t/**\n\t * The target uri this link points to.\n\t */\n\turi: URI;\n\n\t/**\n\t * The full range this link points to.\n\t */\n\trange: IRange;\n\n\t/**\n\t * A range to select this link points to. Must be contained\n\t * in `LocationLink.range`.\n\t */\n\ttargetSelectionRange?: IRange;\n}\n\n/**\n * @internal\n */\nexport function isLocationLink(thing: any): thing is LocationLink {\n\treturn thing\n\t\t&& URI.isUri((thing as LocationLink).uri)\n\t\t&& Range.isIRange((thing as LocationLink).range)\n\t\t&& (Range.isIRange((thing as LocationLink).originSelectionRange) || Range.isIRange((thing as LocationLink).targetSelectionRange));\n}\n\nexport type Definition = Location | Location[] | LocationLink[];\n\n/**\n * The definition provider interface defines the contract between extensions and\n * the [go to definition](https://code.visualstudio.com/docs/editor/editingevolved#_go-to-definition)\n * and peek definition features.\n */\nexport interface DefinitionProvider {\n\t/**\n\t * Provide the definition of the symbol at the given position and document.\n\t */\n\tprovideDefinition(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<Definition | LocationLink[]>;\n}\n\n/**\n * The definition provider interface defines the contract between extensions and\n * the [go to definition](https://code.visualstudio.com/docs/editor/editingevolved#_go-to-definition)\n * and peek definition features.\n */\nexport interface DeclarationProvider {\n\t/**\n\t * Provide the declaration of the symbol at the given position and document.\n\t */\n\tprovideDeclaration(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<Definition | LocationLink[]>;\n}\n\n/**\n * The implementation provider interface defines the contract between extensions and\n * the go to implementation feature.\n */\nexport interface ImplementationProvider {\n\t/**\n\t * Provide the implementation of the symbol at the given position and document.\n\t */\n\tprovideImplementation(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<Definition | LocationLink[]>;\n}\n\n/**\n * The type definition provider interface defines the contract between extensions and\n * the go to type definition feature.\n */\nexport interface TypeDefinitionProvider {\n\t/**\n\t * Provide the type definition of the symbol at the given position and document.\n\t */\n\tprovideTypeDefinition(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<Definition | LocationLink[]>;\n}\n\n/**\n * A symbol kind.\n */\nexport const enum SymbolKind {\n\tFile = 0,\n\tModule = 1,\n\tNamespace = 2,\n\tPackage = 3,\n\tClass = 4,\n\tMethod = 5,\n\tProperty = 6,\n\tField = 7,\n\tConstructor = 8,\n\tEnum = 9,\n\tInterface = 10,\n\tFunction = 11,\n\tVariable = 12,\n\tConstant = 13,\n\tString = 14,\n\tNumber = 15,\n\tBoolean = 16,\n\tArray = 17,\n\tObject = 18,\n\tKey = 19,\n\tNull = 20,\n\tEnumMember = 21,\n\tStruct = 22,\n\tEvent = 23,\n\tOperator = 24,\n\tTypeParameter = 25\n}\n\nexport const enum SymbolTag {\n\tDeprecated = 1,\n}\n\n/**\n * @internal\n */\nexport namespace SymbolKinds {\n\n\tconst byKind = new Map<SymbolKind, CSSIcon>();\n\tbyKind.set(SymbolKind.File, Codicon.symbolFile);\n\tbyKind.set(SymbolKind.Module, Codicon.symbolModule);\n\tbyKind.set(SymbolKind.Namespace, Codicon.symbolNamespace);\n\tbyKind.set(SymbolKind.Package, Codicon.symbolPackage);\n\tbyKind.set(SymbolKind.Class, Codicon.symbolClass);\n\tbyKind.set(SymbolKind.Method, Codicon.symbolMethod);\n\tbyKind.set(SymbolKind.Property, Codicon.symbolProperty);\n\tbyKind.set(SymbolKind.Field, Codicon.symbolField);\n\tbyKind.set(SymbolKind.Constructor, Codicon.symbolConstructor);\n\tbyKind.set(SymbolKind.Enum, Codicon.symbolEnum);\n\tbyKind.set(SymbolKind.Interface, Codicon.symbolInterface);\n\tbyKind.set(SymbolKind.Function, Codicon.symbolFunction);\n\tbyKind.set(SymbolKind.Variable, Codicon.symbolVariable);\n\tbyKind.set(SymbolKind.Constant, Codicon.symbolConstant);\n\tbyKind.set(SymbolKind.String, Codicon.symbolString);\n\tbyKind.set(SymbolKind.Number, Codicon.symbolNumber);\n\tbyKind.set(SymbolKind.Boolean, Codicon.symbolBoolean);\n\tbyKind.set(SymbolKind.Array, Codicon.symbolArray);\n\tbyKind.set(SymbolKind.Object, Codicon.symbolObject);\n\tbyKind.set(SymbolKind.Key, Codicon.symbolKey);\n\tbyKind.set(SymbolKind.Null, Codicon.symbolNull);\n\tbyKind.set(SymbolKind.EnumMember, Codicon.symbolEnumMember);\n\tbyKind.set(SymbolKind.Struct, Codicon.symbolStruct);\n\tbyKind.set(SymbolKind.Event, Codicon.symbolEvent);\n\tbyKind.set(SymbolKind.Operator, Codicon.symbolOperator);\n\tbyKind.set(SymbolKind.TypeParameter, Codicon.symbolTypeParameter);\n\t/**\n\t * @internal\n\t */\n\texport function toIcon(kind: SymbolKind): CSSIcon {\n\t\tlet icon = byKind.get(kind);\n\t\tif (!icon) {\n\t\t\tconsole.info('No codicon found for SymbolKind ' + kind);\n\t\t\ticon = Codicon.symbolProperty;\n\t\t}\n\t\treturn icon;\n\t}\n}\n\nexport interface DocumentSymbol {\n\tname: string;\n\tdetail: string;\n\tkind: SymbolKind;\n\ttags: ReadonlyArray<SymbolTag>;\n\tcontainerName?: string;\n\trange: IRange;\n\tselectionRange: IRange;\n\tchildren?: DocumentSymbol[];\n}\n\n/**\n * The document symbol provider interface defines the contract between extensions and\n * the [go to symbol](https://code.visualstudio.com/docs/editor/editingevolved#_go-to-symbol)-feature.\n */\nexport interface DocumentSymbolProvider {\n\n\tdisplayName?: string;\n\n\t/**\n\t * Provide symbol information for the given document.\n\t */\n\tprovideDocumentSymbols(model: model.ITextModel, token: CancellationToken): ProviderResult<DocumentSymbol[]>;\n}\n\nexport interface TextEdit {\n\trange: IRange;\n\ttext: string;\n\teol?: model.EndOfLineSequence;\n}\n\n/**\n * Interface used to format a model\n */\nexport interface FormattingOptions {\n\t/**\n\t * Size of a tab in spaces.\n\t */\n\ttabSize: number;\n\t/**\n\t * Prefer spaces over tabs.\n\t */\n\tinsertSpaces: boolean;\n}\n/**\n * The document formatting provider interface defines the contract between extensions and\n * the formatting-feature.\n */\nexport interface DocumentFormattingEditProvider {\n\n\t/**\n\t * @internal\n\t */\n\treadonly extensionId?: ExtensionIdentifier;\n\n\treadonly displayName?: string;\n\n\t/**\n\t * Provide formatting edits for a whole document.\n\t */\n\tprovideDocumentFormattingEdits(model: model.ITextModel, options: FormattingOptions, token: CancellationToken): ProviderResult<TextEdit[]>;\n}\n/**\n * The document formatting provider interface defines the contract between extensions and\n * the formatting-feature.\n */\nexport interface DocumentRangeFormattingEditProvider {\n\t/**\n\t * @internal\n\t */\n\treadonly extensionId?: ExtensionIdentifier;\n\n\treadonly displayName?: string;\n\n\t/**\n\t * Provide formatting edits for a range in a document.\n\t *\n\t * The given range is a hint and providers can decide to format a smaller\n\t * or larger range. Often this is done by adjusting the start and end\n\t * of the range to full syntax nodes.\n\t */\n\tprovideDocumentRangeFormattingEdits(model: model.ITextModel, range: Range, options: FormattingOptions, token: CancellationToken): ProviderResult<TextEdit[]>;\n}\n/**\n * The document formatting provider interface defines the contract between extensions and\n * the formatting-feature.\n */\nexport interface OnTypeFormattingEditProvider {\n\n\n\t/**\n\t * @internal\n\t */\n\treadonly extensionId?: ExtensionIdentifier;\n\n\tautoFormatTriggerCharacters: string[];\n\n\t/**\n\t * Provide formatting edits after a character has been typed.\n\t *\n\t * The given position and character should hint to the provider\n\t * what range the position to expand to, like find the matching `{`\n\t * when `}` has been entered.\n\t */\n\tprovideOnTypeFormattingEdits(model: model.ITextModel, position: Position, ch: string, options: FormattingOptions, token: CancellationToken): ProviderResult<TextEdit[]>;\n}\n\n/**\n * @internal\n */\nexport interface IInplaceReplaceSupportResult {\n\tvalue: string;\n\trange: IRange;\n}\n\n/**\n * A link inside the editor.\n */\nexport interface ILink {\n\trange: IRange;\n\turl?: URI | string;\n\ttooltip?: string;\n}\n\nexport interface ILinksList {\n\tlinks: ILink[];\n\tdispose?(): void;\n}\n/**\n * A provider of links.\n */\nexport interface LinkProvider {\n\tprovideLinks(model: model.ITextModel, token: CancellationToken): ProviderResult<ILinksList>;\n\tresolveLink?: (link: ILink, token: CancellationToken) => ProviderResult<ILink>;\n}\n\n/**\n * A color in RGBA format.\n */\nexport interface IColor {\n\n\t/**\n\t * The red component in the range [0-1].\n\t */\n\treadonly red: number;\n\n\t/**\n\t * The green component in the range [0-1].\n\t */\n\treadonly green: number;\n\n\t/**\n\t * The blue component in the range [0-1].\n\t */\n\treadonly blue: number;\n\n\t/**\n\t * The alpha component in the range [0-1].\n\t */\n\treadonly alpha: number;\n}\n\n/**\n * String representations for a color\n */\nexport interface IColorPresentation {\n\t/**\n\t * The label of this color presentation. It will be shown on the color\n\t * picker header. By default this is also the text that is inserted when selecting\n\t * this color presentation.\n\t */\n\tlabel: string;\n\t/**\n\t * An {@link TextEdit edit} which is applied to a document when selecting\n\t * this presentation for the color.\n\t */\n\ttextEdit?: TextEdit;\n\t/**\n\t * An optional array of additional {@link TextEdit text edits} that are applied when\n\t * selecting this color presentation.\n\t */\n\tadditionalTextEdits?: TextEdit[];\n}\n\n/**\n * A color range is a range in a text model which represents a color.\n */\nexport interface IColorInformation {\n\n\t/**\n\t * The range within the model.\n\t */\n\trange: IRange;\n\n\t/**\n\t * The color represented in this range.\n\t */\n\tcolor: IColor;\n}\n\n/**\n * A provider of colors for editor models.\n */\nexport interface DocumentColorProvider {\n\t/**\n\t * Provides the color ranges for a specific model.\n\t */\n\tprovideDocumentColors(model: model.ITextModel, token: CancellationToken): ProviderResult<IColorInformation[]>;\n\t/**\n\t * Provide the string representations for a color.\n\t */\n\tprovideColorPresentations(model: model.ITextModel, colorInfo: IColorInformation, token: CancellationToken): ProviderResult<IColorPresentation[]>;\n}\n\nexport interface SelectionRange {\n\trange: IRange;\n}\n\nexport interface SelectionRangeProvider {\n\t/**\n\t * Provide ranges that should be selected from the given position.\n\t */\n\tprovideSelectionRanges(model: model.ITextModel, positions: Position[], token: CancellationToken): ProviderResult<SelectionRange[][]>;\n}\n\nexport interface FoldingContext {\n}\n/**\n * A provider of folding ranges for editor models.\n */\nexport interface FoldingRangeProvider {\n\n\t/**\n\t * An optional event to signal that the folding ranges from this provider have changed.\n\t */\n\tonDidChange?: Event<this>;\n\n\t/**\n\t * Provides the folding ranges for a specific model.\n\t */\n\tprovideFoldingRanges(model: model.ITextModel, context: FoldingContext, token: CancellationToken): ProviderResult<FoldingRange[]>;\n}\n\nexport interface FoldingRange {\n\n\t/**\n\t * The one-based start line of the range to fold. The folded area starts after the line's last character.\n\t */\n\tstart: number;\n\n\t/**\n\t * The one-based end line of the range to fold. The folded area ends with the line's last character.\n\t */\n\tend: number;\n\n\t/**\n\t * Describes the {@link FoldingRangeKind Kind} of the folding range such as {@link FoldingRangeKind.Comment Comment} or\n\t * {@link FoldingRangeKind.Region Region}. The kind is used to categorize folding ranges and used by commands\n\t * like 'Fold all comments'. See\n\t * {@link FoldingRangeKind} for an enumeration of standardized kinds.\n\t */\n\tkind?: FoldingRangeKind;\n}\nexport class FoldingRangeKind {\n\t/**\n\t * Kind for folding range representing a comment. The value of the kind is 'comment'.\n\t */\n\tstatic readonly Comment = new FoldingRangeKind('comment');\n\t/**\n\t * Kind for folding range representing a import. The value of the kind is 'imports'.\n\t */\n\tstatic readonly Imports = new FoldingRangeKind('imports');\n\t/**\n\t * Kind for folding range representing regions (for example marked by `#region`, `#endregion`).\n\t * The value of the kind is 'region'.\n\t */\n\tstatic readonly Region = new FoldingRangeKind('region');\n\n\t/**\n\t * Creates a new {@link FoldingRangeKind}.\n\t *\n\t * @param value of the kind.\n\t */\n\tpublic constructor(public value: string) {\n\t}\n}\n\n\nexport interface WorkspaceEditMetadata {\n\tneedsConfirmation: boolean;\n\tlabel: string;\n\tdescription?: string;\n\t/**\n\t * @internal\n\t */\n\ticonPath?: ThemeIcon | URI | { light: URI; dark: URI };\n}\n\nexport interface WorkspaceFileEditOptions {\n\toverwrite?: boolean;\n\tignoreIfNotExists?: boolean;\n\tignoreIfExists?: boolean;\n\trecursive?: boolean;\n\tcopy?: boolean;\n\tfolder?: boolean;\n\tskipTrashBin?: boolean;\n\tmaxSize?: number;\n}\n\nexport interface IWorkspaceFileEdit {\n\toldResource?: URI;\n\tnewResource?: URI;\n\toptions?: WorkspaceFileEditOptions;\n\tmetadata?: WorkspaceEditMetadata;\n}\n\nexport interface IWorkspaceTextEdit {\n\tresource: URI;\n\ttextEdit: TextEdit & { insertAsSnippet?: boolean };\n\tversionId: number | undefined;\n\tmetadata?: WorkspaceEditMetadata;\n}\n\nexport interface WorkspaceEdit {\n\tedits: Array<IWorkspaceTextEdit | IWorkspaceFileEdit>;\n}\n\nexport interface Rejection {\n\trejectReason?: string;\n}\nexport interface RenameLocation {\n\trange: IRange;\n\ttext: string;\n}\n\nexport interface RenameProvider {\n\tprovideRenameEdits(model: model.ITextModel, position: Position, newName: string, token: CancellationToken): ProviderResult<WorkspaceEdit & Rejection>;\n\tresolveRenameLocation?(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<RenameLocation & Rejection>;\n}\n\nexport interface Command {\n\tid: string;\n\ttitle: string;\n\ttooltip?: string;\n\targuments?: any[];\n}\n\n/**\n * @internal\n */\nexport namespace Command {\n\n\t/**\n\t * @internal\n\t */\n\texport function is(obj: any): obj is Command {\n\t\tif (!obj || typeof obj !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<Command>obj).id === 'string' &&\n\t\t\ttypeof (<Command>obj).title === 'string';\n\t}\n}\n\n/**\n * @internal\n */\nexport interface CommentThreadTemplate {\n\tcontrollerHandle: number;\n\tlabel: string;\n\tacceptInputCommand?: Command;\n\tadditionalCommands?: Command[];\n\tdeleteCommand?: Command;\n}\n\n/**\n * @internal\n */\nexport interface CommentInfo {\n\textensionId?: string;\n\tthreads: CommentThread[];\n\tcommentingRanges: CommentingRanges;\n}\n\n/**\n * @internal\n */\nexport enum CommentThreadCollapsibleState {\n\t/**\n\t * Determines an item is collapsed\n\t */\n\tCollapsed = 0,\n\t/**\n\t * Determines an item is expanded\n\t */\n\tExpanded = 1\n}\n\n/**\n * @internal\n */\nexport enum CommentThreadState {\n\tUnresolved = 0,\n\tResolved = 1\n}\n\n/**\n * @internal\n */\nexport interface CommentWidget {\n\tcommentThread: CommentThread;\n\tcomment?: Comment;\n\tinput: string;\n\tonDidChangeInput: Event<string>;\n}\n\n/**\n * @internal\n */\nexport interface CommentInput {\n\tvalue: string;\n\turi: URI;\n}\n\n/**\n * @internal\n */\nexport interface CommentThread<T = IRange> {\n\tisDocumentCommentThread(): this is CommentThread<IRange>;\n\tcommentThreadHandle: number;\n\tcontrollerHandle: number;\n\textensionId?: string;\n\tthreadId: string;\n\tresource: string | null;\n\trange: T;\n\tlabel: string | undefined;\n\tcontextValue: string | undefined;\n\tcomments: Comment[] | undefined;\n\tonDidChangeComments: Event<Comment[] | undefined>;\n\tcollapsibleState?: CommentThreadCollapsibleState;\n\tstate?: CommentThreadState;\n\tcanReply: boolean;\n\tinput?: CommentInput;\n\tonDidChangeInput: Event<CommentInput | undefined>;\n\tonDidChangeRange: Event<T>;\n\tonDidChangeLabel: Event<string | undefined>;\n\tonDidChangeCollapsibleState: Event<CommentThreadCollapsibleState | undefined>;\n\tonDidChangeState: Event<CommentThreadState | undefined>;\n\tonDidChangeCanReply: Event<boolean>;\n\tisDisposed: boolean;\n\tisTemplate: boolean;\n}\n\n/**\n * @internal\n */\n\nexport interface CommentingRanges {\n\treadonly resource: URI;\n\tranges: IRange[];\n}\n\n/**\n * @internal\n */\nexport interface CommentReaction {\n\treadonly label?: string;\n\treadonly iconPath?: UriComponents;\n\treadonly count?: number;\n\treadonly hasReacted?: boolean;\n\treadonly canEdit?: boolean;\n}\n\n/**\n * @internal\n */\nexport interface CommentOptions {\n\t/**\n\t * An optional string to show on the comment input box when it's collapsed.\n\t */\n\tprompt?: string;\n\n\t/**\n\t * An optional string to show as placeholder in the comment input box when it's focused.\n\t */\n\tplaceHolder?: string;\n}\n\n/**\n * @internal\n */\nexport enum CommentMode {\n\tEditing = 0,\n\tPreview = 1\n}\n\n/**\n * @internal\n */\nexport interface Comment {\n\treadonly uniqueIdInThread: number;\n\treadonly body: string | IMarkdownString;\n\treadonly userName: string;\n\treadonly userIconPath?: string;\n\treadonly contextValue?: string;\n\treadonly commentReactions?: CommentReaction[];\n\treadonly label?: string;\n\treadonly mode?: CommentMode;\n\treadonly timestamp?: string;\n}\n\n/**\n * @internal\n */\nexport interface CommentThreadChangedEvent<T> {\n\t/**\n\t * Added comment threads.\n\t */\n\treadonly added: CommentThread<T>[];\n\n\t/**\n\t * Removed comment threads.\n\t */\n\treadonly removed: CommentThread<T>[];\n\n\t/**\n\t * Changed comment threads.\n\t */\n\treadonly changed: CommentThread<T>[];\n}\n\nexport interface CodeLens {\n\trange: IRange;\n\tid?: string;\n\tcommand?: Command;\n}\n\nexport interface CodeLensList {\n\tlenses: CodeLens[];\n\tdispose(): void;\n}\n\nexport interface CodeLensProvider {\n\tonDidChange?: Event<this>;\n\tprovideCodeLenses(model: model.ITextModel, token: CancellationToken): ProviderResult<CodeLensList>;\n\tresolveCodeLens?(model: model.ITextModel, codeLens: CodeLens, token: CancellationToken): ProviderResult<CodeLens>;\n}\n\n\nexport enum InlayHintKind {\n\tType = 1,\n\tParameter = 2,\n}\n\nexport interface InlayHintLabelPart {\n\tlabel: string;\n\ttooltip?: string | IMarkdownString;\n\t// collapsible?: boolean;\n\tcommand?: Command;\n\tlocation?: Location;\n}\n\nexport interface InlayHint {\n\tlabel: string | InlayHintLabelPart[];\n\ttooltip?: string | IMarkdownString;\n\ttextEdits?: TextEdit[];\n\tposition: IPosition;\n\tkind?: InlayHintKind;\n\tpaddingLeft?: boolean;\n\tpaddingRight?: boolean;\n}\n\nexport interface InlayHintList {\n\thints: InlayHint[];\n\tdispose(): void;\n}\n\nexport interface InlayHintsProvider {\n\tdisplayName?: string;\n\tonDidChangeInlayHints?: Event<void>;\n\tprovideInlayHints(model: model.ITextModel, range: Range, token: CancellationToken): ProviderResult<InlayHintList>;\n\tresolveInlayHint?(hint: InlayHint, token: CancellationToken): ProviderResult<InlayHint>;\n}\n\nexport interface SemanticTokensLegend {\n\treadonly tokenTypes: string[];\n\treadonly tokenModifiers: string[];\n}\n\nexport interface SemanticTokens {\n\treadonly resultId?: string;\n\treadonly data: Uint32Array;\n}\n\nexport interface SemanticTokensEdit {\n\treadonly start: number;\n\treadonly deleteCount: number;\n\treadonly data?: Uint32Array;\n}\n\nexport interface SemanticTokensEdits {\n\treadonly resultId?: string;\n\treadonly edits: SemanticTokensEdit[];\n}\n\nexport interface DocumentSemanticTokensProvider {\n\tonDidChange?: Event<void>;\n\tgetLegend(): SemanticTokensLegend;\n\tprovideDocumentSemanticTokens(model: model.ITextModel, lastResultId: string | null, token: CancellationToken): ProviderResult<SemanticTokens | SemanticTokensEdits>;\n\treleaseDocumentSemanticTokens(resultId: string | undefined): void;\n}\n\nexport interface DocumentRangeSemanticTokensProvider {\n\tgetLegend(): SemanticTokensLegend;\n\tprovideDocumentRangeSemanticTokens(model: model.ITextModel, range: Range, token: CancellationToken): ProviderResult<SemanticTokens>;\n}\n\n/**\n * @internal\n */\nexport interface ITokenizationSupportChangedEvent {\n\tchangedLanguages: string[];\n\tchangedColorMap: boolean;\n}\n\n/**\n * @internal\n */\nexport interface ITokenizationSupportFactory {\n\tcreateTokenizationSupport(): ProviderResult<ITokenizationSupport>;\n}\n\n/**\n * @internal\n */\nexport interface ITokenizationRegistry {\n\n\t/**\n\t * An event triggered when:\n\t *  - a tokenization support is registered, unregistered or changed.\n\t *  - the color map is changed.\n\t */\n\tonDidChange: Event<ITokenizationSupportChangedEvent>;\n\n\t/**\n\t * Fire a change event for a language.\n\t * This is useful for languages that embed other languages.\n\t */\n\tfire(languageIds: string[]): void;\n\n\t/**\n\t * Register a tokenization support.\n\t */\n\tregister(languageId: string, support: ITokenizationSupport): IDisposable;\n\n\t/**\n\t * Register a tokenization support factory.\n\t */\n\tregisterFactory(languageId: string, factory: ITokenizationSupportFactory): IDisposable;\n\n\t/**\n\t * Get or create the tokenization support for a language.\n\t * Returns `null` if not found.\n\t */\n\tgetOrCreate(languageId: string): Promise<ITokenizationSupport | null>;\n\n\t/**\n\t * Get the tokenization support for a language.\n\t * Returns `null` if not found.\n\t */\n\tget(languageId: string): ITokenizationSupport | null;\n\n\t/**\n\t * Returns false if a factory is still pending.\n\t */\n\tisResolved(languageId: string): boolean;\n\n\t/**\n\t * Set the new color map that all tokens will use in their ColorId binary encoded bits for foreground and background.\n\t */\n\tsetColorMap(colorMap: Color[]): void;\n\n\tgetColorMap(): Color[] | null;\n\n\tgetDefaultBackground(): Color | null;\n}\n\n/**\n * @internal\n */\nexport const TokenizationRegistry: ITokenizationRegistry = new TokenizationRegistryImpl();\n\n\n/**\n * @internal\n */\nexport enum ExternalUriOpenerPriority {\n\tNone = 0,\n\tOption = 1,\n\tDefault = 2,\n\tPreferred = 3,\n}\n\n/**\n * @internal\n */\nexport interface DocumentOnDropEdit {\n\tinsertText: string | { snippet: string };\n\tadditionalEdit?: WorkspaceEdit;\n}\n\n/**\n * @internal\n */\nexport interface DocumentOnDropEditProvider {\n\tprovideDocumentOnDropEdits(model: model.ITextModel, position: IPosition, dataTransfer: VSDataTransfer, token: CancellationToken): ProviderResult<DocumentOnDropEdit>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\n\nconst minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst month = day * 30;\nconst year = day * 365;\n\nexport function fromNow(date: number | Date, appendAgoLabel?: boolean, useFullTimeWords?: boolean): string {\n\tif (typeof date !== 'number') {\n\t\tdate = date.getTime();\n\t}\n\n\tconst seconds = Math.round((new Date().getTime() - date) / 1000);\n\tif (seconds < -30) {\n\t\treturn localize('date.fromNow.in', 'in {0}', fromNow(new Date().getTime() + seconds * 1000, false));\n\t}\n\n\tif (seconds < 30) {\n\t\treturn localize('date.fromNow.now', 'now');\n\t}\n\n\tlet value: number;\n\tif (seconds < minute) {\n\t\tvalue = seconds;\n\n\t\tif (appendAgoLabel) {\n\t\t\tif (value === 1) {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? localize('date.fromNow.seconds.singular.ago.fullWord', '{0} second ago', value)\n\t\t\t\t\t: localize('date.fromNow.seconds.singular.ago', '{0} sec ago', value);\n\t\t\t} else {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? localize('date.fromNow.seconds.plural.ago.fullWord', '{0} seconds ago', value)\n\t\t\t\t\t: localize('date.fromNow.seconds.plural.ago', '{0} secs ago', value);\n\t\t\t}\n\t\t} else {\n\t\t\tif (value === 1) {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? localize('date.fromNow.seconds.singular.fullWord', '{0} second', value)\n\t\t\t\t\t: localize('date.fromNow.seconds.singular', '{0} sec', value);\n\t\t\t} else {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? localize('date.fromNow.seconds.plural.fullWord', '{0} seconds', value)\n\t\t\t\t\t: localize('date.fromNow.seconds.plural', '{0} secs', value);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (seconds < hour) {\n\t\tvalue = Math.floor(seconds / minute);\n\t\tif (appendAgoLabel) {\n\t\t\tif (value === 1) {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? localize('date.fromNow.minutes.singular.ago.fullWord', '{0} minute ago', value)\n\t\t\t\t\t: localize('date.fromNow.minutes.singular.ago', '{0} min ago', value);\n\t\t\t} else {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? localize('date.fromNow.minutes.plural.ago.fullWord', '{0} minutes ago', value)\n\t\t\t\t\t: localize('date.fromNow.minutes.plural.ago', '{0} mins ago', value);\n\t\t\t}\n\t\t} else {\n\t\t\tif (value === 1) {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? localize('date.fromNow.minutes.singular.fullWord', '{0} minute', value)\n\t\t\t\t\t: localize('date.fromNow.minutes.singular', '{0} min', value);\n\t\t\t} else {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? localize('date.fromNow.minutes.plural.fullWord', '{0} minutes', value)\n\t\t\t\t\t: localize('date.fromNow.minutes.plural', '{0} mins', value);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (seconds < day) {\n\t\tvalue = Math.floor(seconds / hour);\n\t\tif (appendAgoLabel) {\n\t\t\tif (value === 1) {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? localize('date.fromNow.hours.singular.ago.fullWord', '{0} hour ago', value)\n\t\t\t\t\t: localize('date.fromNow.hours.singular.ago', '{0} hr ago', value);\n\t\t\t} else {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? localize('date.fromNow.hours.plural.ago.fullWord', '{0} hours ago', value)\n\t\t\t\t\t: localize('date.fromNow.hours.plural.ago', '{0} hrs ago', value);\n\t\t\t}\n\t\t} else {\n\t\t\tif (value === 1) {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? localize('date.fromNow.hours.singular.fullWord', '{0} hour', value)\n\t\t\t\t\t: localize('date.fromNow.hours.singular', '{0} hr', value);\n\t\t\t} else {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? localize('date.fromNow.hours.plural.fullWord', '{0} hours', value)\n\t\t\t\t\t: localize('date.fromNow.hours.plural', '{0} hrs', value);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (seconds < week) {\n\t\tvalue = Math.floor(seconds / day);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.days.singular.ago', '{0} day ago', value)\n\t\t\t\t: localize('date.fromNow.days.plural.ago', '{0} days ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.days.singular', '{0} day', value)\n\t\t\t\t: localize('date.fromNow.days.plural', '{0} days', value);\n\t\t}\n\t}\n\n\tif (seconds < month) {\n\t\tvalue = Math.floor(seconds / week);\n\t\tif (appendAgoLabel) {\n\t\t\tif (value === 1) {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? localize('date.fromNow.weeks.singular.ago.fullWord', '{0} week ago', value)\n\t\t\t\t\t: localize('date.fromNow.weeks.singular.ago', '{0} wk ago', value);\n\t\t\t} else {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? localize('date.fromNow.weeks.plural.ago.fullWord', '{0} weeks ago', value)\n\t\t\t\t\t: localize('date.fromNow.weeks.plural.ago', '{0} wks ago', value);\n\t\t\t}\n\t\t} else {\n\t\t\tif (value === 1) {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? localize('date.fromNow.weeks.singular.fullWord', '{0} week', value)\n\t\t\t\t\t: localize('date.fromNow.weeks.singular', '{0} wk', value);\n\t\t\t} else {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? localize('date.fromNow.weeks.plural.fullWord', '{0} weeks', value)\n\t\t\t\t\t: localize('date.fromNow.weeks.plural', '{0} wks', value);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (seconds < year) {\n\t\tvalue = Math.floor(seconds / month);\n\t\tif (appendAgoLabel) {\n\t\t\tif (value === 1) {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? localize('date.fromNow.months.singular.ago.fullWord', '{0} month ago', value)\n\t\t\t\t\t: localize('date.fromNow.months.singular.ago', '{0} mo ago', value);\n\t\t\t} else {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? localize('date.fromNow.months.plural.ago.fullWord', '{0} months ago', value)\n\t\t\t\t\t: localize('date.fromNow.months.plural.ago', '{0} mos ago', value);\n\t\t\t}\n\t\t} else {\n\t\t\tif (value === 1) {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? localize('date.fromNow.months.singular.fullWord', '{0} month', value)\n\t\t\t\t\t: localize('date.fromNow.months.singular', '{0} mo', value);\n\t\t\t} else {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? localize('date.fromNow.months.plural.fullWord', '{0} months', value)\n\t\t\t\t\t: localize('date.fromNow.months.plural', '{0} mos', value);\n\t\t\t}\n\t\t}\n\t}\n\n\tvalue = Math.floor(seconds / year);\n\tif (appendAgoLabel) {\n\t\tif (value === 1) {\n\t\t\treturn useFullTimeWords\n\t\t\t\t? localize('date.fromNow.years.singular.ago.fullWord', '{0} year ago', value)\n\t\t\t\t: localize('date.fromNow.years.singular.ago', '{0} yr ago', value);\n\t\t} else {\n\t\t\treturn useFullTimeWords\n\t\t\t\t? localize('date.fromNow.years.plural.ago.fullWord', '{0} years ago', value)\n\t\t\t\t: localize('date.fromNow.years.plural.ago', '{0} yrs ago', value);\n\t\t}\n\t} else {\n\t\tif (value === 1) {\n\t\t\treturn useFullTimeWords\n\t\t\t\t? localize('date.fromNow.years.singular.fullWord', '{0} year', value)\n\t\t\t\t: localize('date.fromNow.years.singular', '{0} yr', value);\n\t\t} else {\n\t\t\treturn useFullTimeWords\n\t\t\t\t? localize('date.fromNow.years.plural.fullWord', '{0} years', value)\n\t\t\t\t: localize('date.fromNow.years.plural', '{0} yrs', value);\n\t\t}\n\t}\n}\n\nexport function toLocalISOString(date: Date): string {\n\treturn date.getFullYear() +\n\t\t'-' + String(date.getMonth() + 1).padStart(2, '0') +\n\t\t'-' + String(date.getDate()).padStart(2, '0') +\n\t\t'T' + String(date.getHours()).padStart(2, '0') +\n\t\t':' + String(date.getMinutes()).padStart(2, '0') +\n\t\t':' + String(date.getSeconds()).padStart(2, '0') +\n\t\t'.' + (date.getMilliseconds() / 1000).toFixed(3).slice(2, 5) +\n\t\t'Z';\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as arrays from 'vs/base/common/arrays';\nimport * as types from 'vs/base/common/types';\nimport * as nls from 'vs/nls';\nimport { IAction } from 'vs/base/common/actions';\n\nfunction exceptionToErrorMessage(exception: any, verbose: boolean): string {\n\tif (verbose && (exception.stack || exception.stacktrace)) {\n\t\treturn nls.localize('stackTrace.format', \"{0}: {1}\", detectSystemErrorMessage(exception), stackToString(exception.stack) || stackToString(exception.stacktrace));\n\t}\n\n\treturn detectSystemErrorMessage(exception);\n}\n\nfunction stackToString(stack: string[] | string | undefined): string | undefined {\n\tif (Array.isArray(stack)) {\n\t\treturn stack.join('\\n');\n\t}\n\n\treturn stack;\n}\n\nfunction detectSystemErrorMessage(exception: any): string {\n\n\t// See https://nodejs.org/api/errors.html#errors_class_system_error\n\tif (typeof exception.code === 'string' && typeof exception.errno === 'number' && typeof exception.syscall === 'string') {\n\t\treturn nls.localize('nodeExceptionMessage', \"A system error occurred ({0})\", exception.message);\n\t}\n\n\treturn exception.message || nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n\n/**\n * Tries to generate a human readable error message out of the error. If the verbose parameter\n * is set to true, the error message will include stacktrace details if provided.\n *\n * @returns A string containing the error message.\n */\nexport function toErrorMessage(error: any = null, verbose: boolean = false): string {\n\tif (!error) {\n\t\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n\t}\n\n\tif (Array.isArray(error)) {\n\t\tconst errors: any[] = arrays.coalesce(error);\n\t\tconst msg = toErrorMessage(errors[0], verbose);\n\n\t\tif (errors.length > 1) {\n\t\t\treturn nls.localize('error.moreErrors', \"{0} ({1} errors in total)\", msg, errors.length);\n\t\t}\n\n\t\treturn msg;\n\t}\n\n\tif (types.isString(error)) {\n\t\treturn error;\n\t}\n\n\tif (error.detail) {\n\t\tconst detail = error.detail;\n\n\t\tif (detail.error) {\n\t\t\treturn exceptionToErrorMessage(detail.error, verbose);\n\t\t}\n\n\t\tif (detail.exception) {\n\t\t\treturn exceptionToErrorMessage(detail.exception, verbose);\n\t\t}\n\t}\n\n\tif (error.stack) {\n\t\treturn exceptionToErrorMessage(error, verbose);\n\t}\n\n\tif (error.message) {\n\t\treturn error.message;\n\t}\n\n\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n\n\nexport interface IErrorWithActions extends Error {\n\tactions: IAction[];\n}\n\nexport function isErrorWithActions(obj: unknown): obj is IErrorWithActions {\n\tconst candidate = obj as IErrorWithActions | undefined;\n\n\treturn candidate instanceof Error && Array.isArray(candidate.actions);\n}\n\nexport function createErrorWithActions(messageOrError: string | Error, actions: IAction[]): IErrorWithActions {\n\tlet error: IErrorWithActions;\n\tif (typeof messageOrError === 'string') {\n\t\terror = new Error(messageOrError) as IErrorWithActions;\n\t} else {\n\t\terror = messageOrError as IErrorWithActions;\n\t}\n\n\terror.actions = actions;\n\n\treturn error;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Extracted from json.ts to keep json nls free.\n */\nimport { localize } from 'vs/nls';\nimport { ParseErrorCode } from './json';\n\nexport function getParseErrorMessage(errorCode: ParseErrorCode): string {\n\tswitch (errorCode) {\n\t\tcase ParseErrorCode.InvalidSymbol: return localize('error.invalidSymbol', 'Invalid symbol');\n\t\tcase ParseErrorCode.InvalidNumberFormat: return localize('error.invalidNumberFormat', 'Invalid number format');\n\t\tcase ParseErrorCode.PropertyNameExpected: return localize('error.propertyNameExpected', 'Property name expected');\n\t\tcase ParseErrorCode.ValueExpected: return localize('error.valueExpected', 'Value expected');\n\t\tcase ParseErrorCode.ColonExpected: return localize('error.colonExpected', 'Colon expected');\n\t\tcase ParseErrorCode.CommaExpected: return localize('error.commaExpected', 'Comma expected');\n\t\tcase ParseErrorCode.CloseBraceExpected: return localize('error.closeBraceExpected', 'Closing brace expected');\n\t\tcase ParseErrorCode.CloseBracketExpected: return localize('error.closeBracketExpected', 'Closing bracket expected');\n\t\tcase ParseErrorCode.EndOfFileExpected: return localize('error.endOfFileExpected', 'End of file expected');\n\t\tdefault:\n\t\t\treturn '';\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as cp from 'child_process';\nimport { Stats } from 'fs';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport * as extpath from 'vs/base/common/extpath';\nimport { FileAccess } from 'vs/base/common/network';\nimport * as Objects from 'vs/base/common/objects';\nimport * as path from 'vs/base/common/path';\nimport * as Platform from 'vs/base/common/platform';\nimport * as process from 'vs/base/common/process';\nimport { CommandOptions, Executable, ForkOptions, Source, SuccessData, TerminateResponse, TerminateResponseCode } from 'vs/base/common/processes';\nimport * as Types from 'vs/base/common/types';\nimport { LineDecoder } from 'vs/base/node/decoder';\nimport * as pfs from 'vs/base/node/pfs';\nimport * as nls from 'vs/nls';\nexport { CommandOptions, ForkOptions, SuccessData, Source, TerminateResponse, TerminateResponseCode };\n\nexport type ValueCallback<T> = (value: T | Promise<T>) => void;\nexport type ErrorCallback = (error?: any) => void;\nexport type ProgressCallback<T> = (progress: T) => void;\n\nexport interface LineData {\n\tline: string;\n\tsource: Source;\n}\n\nfunction getWindowsCode(status: number): TerminateResponseCode {\n\tswitch (status) {\n\t\tcase 0:\n\t\t\treturn TerminateResponseCode.Success;\n\t\tcase 1:\n\t\t\treturn TerminateResponseCode.AccessDenied;\n\t\tcase 128:\n\t\t\treturn TerminateResponseCode.ProcessNotFound;\n\t\tdefault:\n\t\t\treturn TerminateResponseCode.Unknown;\n\t}\n}\n\nfunction terminateProcess(process: cp.ChildProcess, cwd?: string): Promise<TerminateResponse> {\n\tif (Platform.isWindows) {\n\t\ttry {\n\t\t\tconst options: any = {\n\t\t\t\tstdio: ['pipe', 'pipe', 'ignore']\n\t\t\t};\n\t\t\tif (cwd) {\n\t\t\t\toptions.cwd = cwd;\n\t\t\t}\n\t\t\tconst killProcess = cp.execFile('taskkill', ['/T', '/F', '/PID', process.pid!.toString()], options);\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tkillProcess.once('error', (err) => {\n\t\t\t\t\tresolve({ success: false, error: err });\n\t\t\t\t});\n\t\t\t\tkillProcess.once('exit', (code, signal) => {\n\t\t\t\t\tif (code === 0) {\n\t\t\t\t\t\tresolve({ success: true });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({ success: false, code: code !== null ? code : TerminateResponseCode.Unknown });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn Promise.resolve({ success: false, error: err, code: err.status ? getWindowsCode(err.status) : TerminateResponseCode.Unknown });\n\t\t}\n\t} else if (Platform.isLinux || Platform.isMacintosh) {\n\t\ttry {\n\t\t\tconst cmd = FileAccess.asFileUri('vs/base/node/terminateProcess.sh', require).fsPath;\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tcp.execFile(cmd, [process.pid!.toString()], { encoding: 'utf8', shell: true } as cp.ExecFileOptions, (err, stdout, stderr) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tresolve({ success: false, error: err });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({ success: true });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn Promise.resolve({ success: false, error: err });\n\t\t}\n\t} else {\n\t\tprocess.kill('SIGKILL');\n\t}\n\treturn Promise.resolve({ success: true });\n}\n\nexport function getWindowsShell(env = process.env as Platform.IProcessEnvironment): string {\n\treturn env['comspec'] || 'cmd.exe';\n}\n\nexport abstract class AbstractProcess<TProgressData> {\n\tprivate cmd: string;\n\tprivate args: string[];\n\tprivate options: CommandOptions | ForkOptions;\n\tprotected shell: boolean;\n\n\tprivate childProcess: cp.ChildProcess | null;\n\tprotected childProcessPromise: Promise<cp.ChildProcess> | null;\n\tprivate pidResolve: ValueCallback<number> | undefined;\n\tprotected terminateRequested: boolean;\n\n\tprivate static WellKnowCommands: IStringDictionary<boolean> = {\n\t\t'ant': true,\n\t\t'cmake': true,\n\t\t'eslint': true,\n\t\t'gradle': true,\n\t\t'grunt': true,\n\t\t'gulp': true,\n\t\t'jake': true,\n\t\t'jenkins': true,\n\t\t'jshint': true,\n\t\t'make': true,\n\t\t'maven': true,\n\t\t'msbuild': true,\n\t\t'msc': true,\n\t\t'nmake': true,\n\t\t'npm': true,\n\t\t'rake': true,\n\t\t'tsc': true,\n\t\t'xbuild': true\n\t};\n\n\tpublic constructor(executable: Executable);\n\tpublic constructor(cmd: string, args: string[] | undefined, shell: boolean, options: CommandOptions | undefined);\n\tpublic constructor(arg1: string | Executable, arg2?: string[], arg3?: boolean, arg4?: CommandOptions) {\n\t\tif (arg2 !== undefined && arg3 !== undefined && arg4 !== undefined) {\n\t\t\tthis.cmd = <string>arg1;\n\t\t\tthis.args = arg2;\n\t\t\tthis.shell = arg3;\n\t\t\tthis.options = arg4;\n\t\t} else {\n\t\t\tconst executable = <Executable>arg1;\n\t\t\tthis.cmd = executable.command;\n\t\t\tthis.shell = executable.isShellCommand;\n\t\t\tthis.args = executable.args.slice(0);\n\t\t\tthis.options = executable.options || {};\n\t\t}\n\n\t\tthis.childProcess = null;\n\t\tthis.childProcessPromise = null;\n\t\tthis.terminateRequested = false;\n\n\t\tif (this.options.env) {\n\t\t\tconst newEnv: IStringDictionary<string> = Object.create(null);\n\t\t\tObject.keys(process.env).forEach((key) => {\n\t\t\t\tnewEnv[key] = process.env[key]!;\n\t\t\t});\n\t\t\tObject.keys(this.options.env).forEach((key) => {\n\t\t\t\tnewEnv[key] = this.options.env![key]!;\n\t\t\t});\n\t\t\tthis.options.env = newEnv;\n\t\t}\n\t}\n\n\tpublic getSanitizedCommand(): string {\n\t\tlet result = this.cmd.toLowerCase();\n\t\tconst index = result.lastIndexOf(path.sep);\n\t\tif (index !== -1) {\n\t\t\tresult = result.substring(index + 1);\n\t\t}\n\t\tif (AbstractProcess.WellKnowCommands[result]) {\n\t\t\treturn result;\n\t\t}\n\t\treturn 'other';\n\t}\n\n\tpublic start(pp: ProgressCallback<TProgressData>): Promise<SuccessData> {\n\t\tif (Platform.isWindows && ((this.options && this.options.cwd && extpath.isUNC(this.options.cwd)) || !this.options && extpath.isUNC(process.cwd()))) {\n\t\t\treturn Promise.reject(new Error(nls.localize('TaskRunner.UNC', 'Can\\'t execute a shell command on a UNC drive.')));\n\t\t}\n\t\treturn this.useExec().then((useExec) => {\n\t\t\tlet cc: ValueCallback<SuccessData>;\n\t\t\tlet ee: ErrorCallback;\n\t\t\tconst result = new Promise<any>((c, e) => {\n\t\t\t\tcc = c;\n\t\t\t\tee = e;\n\t\t\t});\n\n\t\t\tif (useExec) {\n\t\t\t\tlet cmd: string = this.cmd;\n\t\t\t\tif (this.args) {\n\t\t\t\t\tcmd = cmd + ' ' + this.args.join(' ');\n\t\t\t\t}\n\t\t\t\tthis.childProcess = cp.exec(cmd, this.options, (error, stdout, stderr) => {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\tconst err: any = error;\n\t\t\t\t\t// This is tricky since executing a command shell reports error back in case the executed command return an\n\t\t\t\t\t// error or the command didn't exist at all. So we can't blindly treat an error as a failed command. So we\n\t\t\t\t\t// always parse the output and report success unless the job got killed.\n\t\t\t\t\tif (err && err.killed) {\n\t\t\t\t\t\tee({ killed: this.terminateRequested, stdout: stdout.toString(), stderr: stderr.toString() });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.handleExec(cc, pp, error, stdout as any, stderr as any);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlet childProcess: cp.ChildProcess | null = null;\n\t\t\t\tconst closeHandler = (data: any) => {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\tthis.childProcessPromise = null;\n\t\t\t\t\tthis.handleClose(data, cc, pp, ee);\n\t\t\t\t\tconst result: SuccessData = {\n\t\t\t\t\t\tterminated: this.terminateRequested\n\t\t\t\t\t};\n\t\t\t\t\tif (Types.isNumber(data)) {\n\t\t\t\t\t\tresult.cmdCode = <number>data;\n\t\t\t\t\t}\n\t\t\t\t\tcc(result);\n\t\t\t\t};\n\t\t\t\tif (this.shell && Platform.isWindows) {\n\t\t\t\t\tconst options: any = Objects.deepClone(this.options);\n\t\t\t\t\toptions.windowsVerbatimArguments = true;\n\t\t\t\t\toptions.detached = false;\n\t\t\t\t\tlet quotedCommand: boolean = false;\n\t\t\t\t\tlet quotedArg: boolean = false;\n\t\t\t\t\tconst commandLine: string[] = [];\n\t\t\t\t\tlet quoted = this.ensureQuotes(this.cmd);\n\t\t\t\t\tcommandLine.push(quoted.value);\n\t\t\t\t\tquotedCommand = quoted.quoted;\n\t\t\t\t\tif (this.args) {\n\t\t\t\t\t\tthis.args.forEach((elem) => {\n\t\t\t\t\t\t\tquoted = this.ensureQuotes(elem);\n\t\t\t\t\t\t\tcommandLine.push(quoted.value);\n\t\t\t\t\t\t\tquotedArg = quotedArg && quoted.quoted;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tconst args: string[] = [\n\t\t\t\t\t\t'/s',\n\t\t\t\t\t\t'/c',\n\t\t\t\t\t];\n\t\t\t\t\tif (quotedCommand) {\n\t\t\t\t\t\tif (quotedArg) {\n\t\t\t\t\t\t\targs.push('\"' + commandLine.join(' ') + '\"');\n\t\t\t\t\t\t} else if (commandLine.length > 1) {\n\t\t\t\t\t\t\targs.push('\"' + commandLine[0] + '\"' + ' ' + commandLine.slice(1).join(' '));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\targs.push('\"' + commandLine[0] + '\"');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\targs.push(commandLine.join(' '));\n\t\t\t\t\t}\n\t\t\t\t\tchildProcess = cp.spawn(getWindowsShell(), args, options);\n\t\t\t\t} else {\n\t\t\t\t\tif (this.cmd) {\n\t\t\t\t\t\tchildProcess = cp.spawn(this.cmd, this.args, this.options);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (childProcess) {\n\t\t\t\t\tthis.childProcess = childProcess;\n\t\t\t\t\tthis.childProcessPromise = Promise.resolve(childProcess);\n\t\t\t\t\tif (this.pidResolve) {\n\t\t\t\t\t\tthis.pidResolve(Types.isNumber(childProcess.pid) ? childProcess.pid : -1);\n\t\t\t\t\t\tthis.pidResolve = undefined;\n\t\t\t\t\t}\n\t\t\t\t\tchildProcess.on('error', (error: Error) => {\n\t\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\t\tee({ terminated: this.terminateRequested, error: error });\n\t\t\t\t\t});\n\t\t\t\t\tif (childProcess.pid) {\n\t\t\t\t\t\tthis.childProcess.on('close', closeHandler);\n\t\t\t\t\t\tthis.handleSpawn(childProcess, cc!, pp, ee!, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tprotected abstract handleExec(cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, error: Error | null, stdout: Buffer, stderr: Buffer): void;\n\tprotected abstract handleSpawn(childProcess: cp.ChildProcess, cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, ee: ErrorCallback, sync: boolean): void;\n\n\tprotected handleClose(data: any, cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, ee: ErrorCallback): void {\n\t\t// Default is to do nothing.\n\t}\n\n\tprivate static readonly regexp = /^[^\"].* .*[^\"]/;\n\tprivate ensureQuotes(value: string) {\n\t\tif (AbstractProcess.regexp.test(value)) {\n\t\t\treturn {\n\t\t\t\tvalue: '\"' + value + '\"', //`\"${value}\"`,\n\t\t\t\tquoted: true\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tvalue: value,\n\t\t\t\tquoted: value.length > 0 && value[0] === '\"' && value[value.length - 1] === '\"'\n\t\t\t};\n\t\t}\n\t}\n\n\tpublic get pid(): Promise<number> {\n\t\tif (this.childProcessPromise) {\n\t\t\treturn this.childProcessPromise.then(childProcess => childProcess.pid!, err => -1);\n\t\t} else {\n\t\t\treturn new Promise<number>((resolve) => {\n\t\t\t\tthis.pidResolve = resolve;\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic terminate(): Promise<TerminateResponse> {\n\t\tif (!this.childProcessPromise) {\n\t\t\treturn Promise.resolve<TerminateResponse>({ success: true });\n\t\t}\n\t\treturn this.childProcessPromise.then((childProcess) => {\n\t\t\tthis.terminateRequested = true;\n\t\t\treturn terminateProcess(childProcess, this.options.cwd).then(response => {\n\t\t\t\tif (response.success) {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t}\n\t\t\t\treturn response;\n\t\t\t});\n\t\t}, (err) => {\n\t\t\treturn { success: true };\n\t\t});\n\t}\n\n\tprivate useExec(): Promise<boolean> {\n\t\treturn new Promise<boolean>(resolve => {\n\t\t\tif (!this.shell || !Platform.isWindows) {\n\t\t\t\treturn resolve(false);\n\t\t\t}\n\t\t\tconst cmdShell = cp.spawn(getWindowsShell(), ['/s', '/c']);\n\t\t\tcmdShell.on('error', (error: Error) => {\n\t\t\t\treturn resolve(true);\n\t\t\t});\n\t\t\tcmdShell.on('exit', (data: any) => {\n\t\t\t\treturn resolve(false);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class LineProcess extends AbstractProcess<LineData> {\n\n\tprivate stdoutLineDecoder: LineDecoder | null;\n\tprivate stderrLineDecoder: LineDecoder | null;\n\n\tpublic constructor(executable: Executable);\n\tpublic constructor(cmd: string, args: string[], shell: boolean, options: CommandOptions);\n\tpublic constructor(arg1: string | Executable, arg2?: string[], arg3?: boolean | ForkOptions, arg4?: CommandOptions) {\n\t\tsuper(<any>arg1, arg2, <any>arg3, arg4);\n\n\t\tthis.stdoutLineDecoder = null;\n\t\tthis.stderrLineDecoder = null;\n\t}\n\n\tprotected handleExec(cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, error: Error, stdout: Buffer, stderr: Buffer) {\n\t\t[stdout, stderr].forEach((buffer: Buffer, index: number) => {\n\t\t\tconst lineDecoder = new LineDecoder();\n\t\t\tconst lines = lineDecoder.write(buffer);\n\t\t\tlines.forEach((line) => {\n\t\t\t\tpp({ line: line, source: index === 0 ? Source.stdout : Source.stderr });\n\t\t\t});\n\t\t\tconst line = lineDecoder.end();\n\t\t\tif (line) {\n\t\t\t\tpp({ line: line, source: index === 0 ? Source.stdout : Source.stderr });\n\t\t\t}\n\t\t});\n\t\tcc({ terminated: this.terminateRequested, error: error });\n\t}\n\n\tprotected handleSpawn(childProcess: cp.ChildProcess, cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, ee: ErrorCallback, sync: boolean): void {\n\t\tconst stdoutLineDecoder = new LineDecoder();\n\t\tconst stderrLineDecoder = new LineDecoder();\n\t\tchildProcess.stdout!.on('data', (data: Buffer) => {\n\t\t\tconst lines = stdoutLineDecoder.write(data);\n\t\t\tlines.forEach(line => pp({ line: line, source: Source.stdout }));\n\t\t});\n\t\tchildProcess.stderr!.on('data', (data: Buffer) => {\n\t\t\tconst lines = stderrLineDecoder.write(data);\n\t\t\tlines.forEach(line => pp({ line: line, source: Source.stderr }));\n\t\t});\n\n\t\tthis.stdoutLineDecoder = stdoutLineDecoder;\n\t\tthis.stderrLineDecoder = stderrLineDecoder;\n\t}\n\n\tprotected override handleClose(data: any, cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, ee: ErrorCallback): void {\n\t\tconst stdoutLine = this.stdoutLineDecoder ? this.stdoutLineDecoder.end() : null;\n\t\tif (stdoutLine) {\n\t\t\tpp({ line: stdoutLine, source: Source.stdout });\n\t\t}\n\t\tconst stderrLine = this.stderrLineDecoder ? this.stderrLineDecoder.end() : null;\n\t\tif (stderrLine) {\n\t\t\tpp({ line: stderrLine, source: Source.stderr });\n\t\t}\n\t}\n}\n\nexport interface IQueuedSender {\n\tsend: (msg: any) => void;\n}\n\n// Wrapper around process.send() that will queue any messages if the internal node.js\n// queue is filled with messages and only continue sending messages when the internal\n// queue is free again to consume messages.\n// On Windows we always wait for the send() method to return before sending the next message\n// to workaround https://github.com/nodejs/node/issues/7657 (IPC can freeze process)\nexport function createQueuedSender(childProcess: cp.ChildProcess): IQueuedSender {\n\tlet msgQueue: string[] = [];\n\tlet useQueue = false;\n\n\tconst send = function (msg: any): void {\n\t\tif (useQueue) {\n\t\t\tmsgQueue.push(msg); // add to the queue if the process cannot handle more messages\n\t\t\treturn;\n\t\t}\n\n\t\tconst result = childProcess.send(msg, (error: Error | null) => {\n\t\t\tif (error) {\n\t\t\t\tconsole.error(error); // unlikely to happen, best we can do is log this error\n\t\t\t}\n\n\t\t\tuseQueue = false; // we are good again to send directly without queue\n\n\t\t\t// now send all the messages that we have in our queue and did not send yet\n\t\t\tif (msgQueue.length > 0) {\n\t\t\t\tconst msgQueueCopy = msgQueue.slice(0);\n\t\t\t\tmsgQueue = [];\n\t\t\t\tmsgQueueCopy.forEach(entry => send(entry));\n\t\t\t}\n\t\t});\n\n\t\tif (!result || Platform.isWindows /* workaround https://github.com/nodejs/node/issues/7657 */) {\n\t\t\tuseQueue = true;\n\t\t}\n\t};\n\n\treturn { send };\n}\n\nexport namespace win32 {\n\texport async function findExecutable(command: string, cwd?: string, paths?: string[]): Promise<string> {\n\t\t// If we have an absolute path then we take it.\n\t\tif (path.isAbsolute(command)) {\n\t\t\treturn command;\n\t\t}\n\t\tif (cwd === undefined) {\n\t\t\tcwd = process.cwd();\n\t\t}\n\t\tconst dir = path.dirname(command);\n\t\tif (dir !== '.') {\n\t\t\t// We have a directory and the directory is relative (see above). Make the path absolute\n\t\t\t// to the current working directory.\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\t\tif (paths === undefined && Types.isString(process.env['PATH'])) {\n\t\t\tpaths = process.env['PATH'].split(path.delimiter);\n\t\t}\n\t\t// No PATH environment. Make path absolute to the cwd.\n\t\tif (paths === undefined || paths.length === 0) {\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\n\t\tasync function fileExists(path: string): Promise<boolean> {\n\t\t\tif (await pfs.Promises.exists(path)) {\n\t\t\t\tlet statValue: Stats | undefined;\n\t\t\t\ttry {\n\t\t\t\t\tstatValue = await pfs.Promises.stat(path);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (e.message.startsWith('EACCES')) {\n\t\t\t\t\t\t// it might be symlink\n\t\t\t\t\t\tstatValue = await pfs.Promises.lstat(path);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn statValue ? !statValue.isDirectory() : false;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t// We have a simple file name. We get the path variable from the env\n\t\t// and try to find the executable on the path.\n\t\tfor (const pathEntry of paths) {\n\t\t\t// The path entry is absolute.\n\t\t\tlet fullPath: string;\n\t\t\tif (path.isAbsolute(pathEntry)) {\n\t\t\t\tfullPath = path.join(pathEntry, command);\n\t\t\t} else {\n\t\t\t\tfullPath = path.join(cwd, pathEntry, command);\n\t\t\t}\n\t\t\tif (await fileExists(fullPath)) {\n\t\t\t\treturn fullPath;\n\t\t\t}\n\t\t\tlet withExtension = fullPath + '.com';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t\twithExtension = fullPath + '.exe';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t}\n\t\treturn path.join(cwd, command);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { release, userInfo } from 'os';\nimport * as platform from 'vs/base/common/platform';\nimport { getFirstAvailablePowerShellInstallation } from 'vs/base/node/powershell';\nimport * as processes from 'vs/base/node/processes';\n\n/**\n * Gets the detected default shell for the _system_, not to be confused with VS Code's _default_\n * shell that the terminal uses by default.\n * @param os The platform to detect the shell of.\n */\nexport async function getSystemShell(os: platform.OperatingSystem, env: platform.IProcessEnvironment): Promise<string> {\n\tif (os === platform.OperatingSystem.Windows) {\n\t\tif (platform.isWindows) {\n\t\t\treturn getSystemShellWindows();\n\t\t}\n\t\t// Don't detect Windows shell when not on Windows\n\t\treturn processes.getWindowsShell(env);\n\t}\n\n\treturn getSystemShellUnixLike(os, env);\n}\n\nexport function getSystemShellSync(os: platform.OperatingSystem, env: platform.IProcessEnvironment): string {\n\tif (os === platform.OperatingSystem.Windows) {\n\t\tif (platform.isWindows) {\n\t\t\treturn getSystemShellWindowsSync(env);\n\t\t}\n\t\t// Don't detect Windows shell when not on Windows\n\t\treturn processes.getWindowsShell(env);\n\t}\n\n\treturn getSystemShellUnixLike(os, env);\n}\n\nlet _TERMINAL_DEFAULT_SHELL_UNIX_LIKE: string | null = null;\nfunction getSystemShellUnixLike(os: platform.OperatingSystem, env: platform.IProcessEnvironment): string {\n\t// Only use $SHELL for the current OS\n\tif (platform.isLinux && os === platform.OperatingSystem.Macintosh || platform.isMacintosh && os === platform.OperatingSystem.Linux) {\n\t\treturn '/bin/bash';\n\t}\n\n\tif (!_TERMINAL_DEFAULT_SHELL_UNIX_LIKE) {\n\t\tlet unixLikeTerminal: string | undefined;\n\t\tif (platform.isWindows) {\n\t\t\tunixLikeTerminal = '/bin/bash'; // for WSL\n\t\t} else {\n\t\t\tunixLikeTerminal = env['SHELL'];\n\n\t\t\tif (!unixLikeTerminal) {\n\t\t\t\ttry {\n\t\t\t\t\t// It's possible for $SHELL to be unset, this API reads /etc/passwd. See https://github.com/github/codespaces/issues/1639\n\t\t\t\t\t// Node docs: \"Throws a SystemError if a user has no username or homedir.\"\n\t\t\t\t\tunixLikeTerminal = userInfo().shell;\n\t\t\t\t} catch (err) { }\n\t\t\t}\n\n\t\t\tif (!unixLikeTerminal) {\n\t\t\t\tunixLikeTerminal = 'sh';\n\t\t\t}\n\n\t\t\t// Some systems have $SHELL set to /bin/false which breaks the terminal\n\t\t\tif (unixLikeTerminal === '/bin/false') {\n\t\t\t\tunixLikeTerminal = '/bin/bash';\n\t\t\t}\n\t\t}\n\t\t_TERMINAL_DEFAULT_SHELL_UNIX_LIKE = unixLikeTerminal;\n\t}\n\treturn _TERMINAL_DEFAULT_SHELL_UNIX_LIKE;\n}\n\nlet _TERMINAL_DEFAULT_SHELL_WINDOWS: string | null = null;\nasync function getSystemShellWindows(): Promise<string> {\n\tif (!_TERMINAL_DEFAULT_SHELL_WINDOWS) {\n\t\t_TERMINAL_DEFAULT_SHELL_WINDOWS = (await getFirstAvailablePowerShellInstallation())!.exePath;\n\t}\n\treturn _TERMINAL_DEFAULT_SHELL_WINDOWS;\n}\n\nfunction getSystemShellWindowsSync(env: platform.IProcessEnvironment): string {\n\tif (_TERMINAL_DEFAULT_SHELL_WINDOWS) {\n\t\treturn _TERMINAL_DEFAULT_SHELL_WINDOWS;\n\t}\n\n\tconst isAtLeastWindows10 = platform.isWindows && parseFloat(release()) >= 10;\n\tconst is32ProcessOn64Windows = env.hasOwnProperty('PROCESSOR_ARCHITEW6432');\n\tconst powerShellPath = `${env['windir']}\\\\${is32ProcessOn64Windows ? 'Sysnative' : 'System32'}\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe`;\n\treturn isAtLeastWindows10 ? powerShellPath : processes.getWindowsShell(env);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ChildProcess, fork, ForkOptions } from 'child_process';\nimport { createCancelablePromise, Delayer } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { isRemoteConsoleLog, log } from 'vs/base/common/console';\nimport * as errors from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { dispose, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { deepClone } from 'vs/base/common/objects';\nimport { createQueuedSender } from 'vs/base/node/processes';\nimport { removeDangerousEnvVariables } from 'vs/base/common/processes';\nimport { ChannelClient as IPCClient, ChannelServer as IPCServer, IChannel, IChannelClient } from 'vs/base/parts/ipc/common/ipc';\n\n/**\n * This implementation doesn't perform well since it uses base64 encoding for buffers.\n * We should move all implementations to use named ipc.net, so we stop depending on cp.fork.\n */\n\nexport class Server<TContext extends string> extends IPCServer<TContext> {\n\tconstructor(ctx: TContext) {\n\t\tsuper({\n\t\t\tsend: r => {\n\t\t\t\ttry {\n\t\t\t\t\tprocess.send?.((<Buffer>r.buffer).toString('base64'));\n\t\t\t\t} catch (e) { /* not much to do */ }\n\t\t\t},\n\t\t\tonMessage: Event.fromNodeEventEmitter(process, 'message', msg => VSBuffer.wrap(Buffer.from(msg, 'base64')))\n\t\t}, ctx);\n\n\t\tprocess.once('disconnect', () => this.dispose());\n\t}\n}\n\nexport interface IIPCOptions {\n\n\t/**\n\t * A descriptive name for the server this connection is to. Used in logging.\n\t */\n\tserverName: string;\n\n\t/**\n\t * Time in millies before killing the ipc process. The next request after killing will start it again.\n\t */\n\ttimeout?: number;\n\n\t/**\n\t * Arguments to the module to execute.\n\t */\n\targs?: string[];\n\n\t/**\n\t * Environment key-value pairs to be passed to the process that gets spawned for the ipc.\n\t */\n\tenv?: any;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application executed.\n\t */\n\tdebug?: number;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application and breaking it on the first line.\n\t */\n\tdebugBrk?: number;\n\n\t/**\n\t * If set, starts the fork with empty execArgv. If not set, execArgv from the parent process are inherited,\n\t * except --inspect= and --inspect-brk= which are filtered as they would result in a port conflict.\n\t */\n\tfreshExecArgv?: boolean;\n\n\t/**\n\t * Enables our createQueuedSender helper for this Client. Uses a queue when the internal Node.js queue is\n\t * full of messages - see notes on that method.\n\t */\n\tuseQueue?: boolean;\n}\n\nexport class Client implements IChannelClient, IDisposable {\n\n\tprivate disposeDelayer: Delayer<void> | undefined;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate child: ChildProcess | null;\n\tprivate _client: IPCClient | null;\n\tprivate channels = new Map<string, IChannel>();\n\n\tprivate readonly _onDidProcessExit = new Emitter<{ code: number; signal: string }>();\n\treadonly onDidProcessExit = this._onDidProcessExit.event;\n\n\tconstructor(private modulePath: string, private options: IIPCOptions) {\n\t\tconst timeout = options && options.timeout ? options.timeout : 60000;\n\t\tthis.disposeDelayer = new Delayer<void>(timeout);\n\t\tthis.child = null;\n\t\tthis._client = null;\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\treturn that.requestPromise<T>(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg?: any) {\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprotected requestPromise<T>(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Promise.reject(new Error('disposed'));\n\t\t}\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tconst channel = this.getCachedChannel(channelName);\n\t\tconst result = createCancelablePromise(token => channel.call<T>(name, arg, token));\n\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(() => result.cancel());\n\n\t\tconst disposable = toDisposable(() => result.cancel());\n\t\tthis.activeRequests.add(disposable);\n\n\t\tresult.finally(() => {\n\t\t\tcancellationTokenListener.dispose();\n\t\t\tthis.activeRequests.delete(disposable);\n\n\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tprotected requestEvent<T>(channelName: string, name: string, arg?: any): Event<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Event.None;\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tconst channel = this.getCachedChannel(channelName);\n\t\t\t\tconst event: Event<T> = channel.listen(name, arg);\n\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t\tthis.activeRequests.add(listener);\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis.activeRequests.delete(listener);\n\t\t\t\tlistener.dispose();\n\n\t\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate get client(): IPCClient {\n\t\tif (!this._client) {\n\t\t\tconst args = this.options && this.options.args ? this.options.args : [];\n\t\t\tconst forkOpts: ForkOptions = Object.create(null);\n\n\t\t\tforkOpts.env = { ...deepClone(process.env), 'VSCODE_PARENT_PID': String(process.pid) };\n\n\t\t\tif (this.options && this.options.env) {\n\t\t\t\tforkOpts.env = { ...forkOpts.env, ...this.options.env };\n\t\t\t}\n\n\t\t\tif (this.options && this.options.freshExecArgv) {\n\t\t\t\tforkOpts.execArgv = [];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debug === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect=' + this.options.debug];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debugBrk === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect-brk=' + this.options.debugBrk];\n\t\t\t}\n\n\t\t\tif (forkOpts.execArgv === undefined) {\n\t\t\t\t// if not set, the forked process inherits the execArgv of the parent process\n\t\t\t\t// --inspect and --inspect-brk can not be inherited as the port would conflict\n\t\t\t\tforkOpts.execArgv = process.execArgv.filter(a => !/^--inspect(-brk)?=/.test(a)); // remove\n\t\t\t}\n\n\t\t\tremoveDangerousEnvVariables(forkOpts.env);\n\n\t\t\tthis.child = fork(this.modulePath, args, forkOpts);\n\n\t\t\tconst onMessageEmitter = new Emitter<VSBuffer>();\n\t\t\tconst onRawMessage = Event.fromNodeEventEmitter(this.child, 'message', msg => msg);\n\n\t\t\tonRawMessage(msg => {\n\n\t\t\t\t// Handle remote console logs specially\n\t\t\t\tif (isRemoteConsoleLog(msg)) {\n\t\t\t\t\tlog(msg, `IPC Library: ${this.options.serverName}`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Anything else goes to the outside\n\t\t\t\tonMessageEmitter.fire(VSBuffer.wrap(Buffer.from(msg, 'base64')));\n\t\t\t});\n\n\t\t\tconst sender = this.options.useQueue ? createQueuedSender(this.child) : this.child;\n\t\t\tconst send = (r: VSBuffer) => this.child && this.child.connected && sender.send((<Buffer>r.buffer).toString('base64'));\n\t\t\tconst onMessage = onMessageEmitter.event;\n\t\t\tconst protocol = { send, onMessage };\n\n\t\t\tthis._client = new IPCClient(protocol);\n\n\t\t\tconst onExit = () => this.disposeClient();\n\t\t\tprocess.once('exit', onExit);\n\n\t\t\tthis.child.on('error', err => console.warn('IPC \"' + this.options.serverName + '\" errored with ' + err));\n\n\t\t\tthis.child.on('exit', (code: any, signal: any) => {\n\t\t\t\tprocess.removeListener('exit' as 'loaded', onExit); // https://github.com/electron/electron/issues/21475\n\n\t\t\t\tthis.activeRequests.forEach(r => dispose(r));\n\t\t\t\tthis.activeRequests.clear();\n\n\t\t\t\tif (code !== 0 && signal !== 'SIGTERM') {\n\t\t\t\t\tconsole.warn('IPC \"' + this.options.serverName + '\" crashed with exit code ' + code + ' and signal ' + signal);\n\t\t\t\t}\n\n\t\t\t\tif (this.disposeDelayer) {\n\t\t\t\t\tthis.disposeDelayer.cancel();\n\t\t\t\t}\n\t\t\t\tthis.disposeClient();\n\t\t\t\tthis._onDidProcessExit.fire({ code, signal });\n\t\t\t});\n\t\t}\n\n\t\treturn this._client;\n\t}\n\n\tprivate getCachedChannel(name: string): IChannel {\n\t\tlet channel = this.channels.get(name);\n\n\t\tif (!channel) {\n\t\t\tchannel = this.client.getChannel(name);\n\t\t\tthis.channels.set(name, channel);\n\t\t}\n\n\t\treturn channel;\n\t}\n\n\tprivate disposeClient() {\n\t\tif (this._client) {\n\t\t\tif (this.child) {\n\t\t\t\tthis.child.kill();\n\t\t\t\tthis.child = null;\n\t\t\t}\n\t\t\tthis._client = null;\n\t\t\tthis.channels.clear();\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis._onDidProcessExit.dispose();\n\t\tif (this.disposeDelayer) {\n\t\t\tthis.disposeDelayer.cancel();\n\t\t\tthis.disposeDelayer = undefined;\n\t\t}\n\t\tthis.disposeClient();\n\t\tthis.activeRequests.clear();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IAttachSessionEvent, ICloseSessionEvent, IExtensionHostDebugService, IOpenExtensionWindowResult, IReloadSessionEvent, ITerminateSessionEvent } from 'vs/platform/debug/common/extensionHostDebug';\n\nexport class ExtensionHostDebugBroadcastChannel<TContext> implements IServerChannel<TContext> {\n\n\tstatic readonly ChannelName = 'extensionhostdebugservice';\n\n\tprivate readonly _onCloseEmitter = new Emitter<ICloseSessionEvent>();\n\tprivate readonly _onReloadEmitter = new Emitter<IReloadSessionEvent>();\n\tprivate readonly _onTerminateEmitter = new Emitter<ITerminateSessionEvent>();\n\tprivate readonly _onAttachEmitter = new Emitter<IAttachSessionEvent>();\n\n\tcall(ctx: TContext, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'close':\n\t\t\t\treturn Promise.resolve(this._onCloseEmitter.fire({ sessionId: arg[0] }));\n\t\t\tcase 'reload':\n\t\t\t\treturn Promise.resolve(this._onReloadEmitter.fire({ sessionId: arg[0] }));\n\t\t\tcase 'terminate':\n\t\t\t\treturn Promise.resolve(this._onTerminateEmitter.fire({ sessionId: arg[0] }));\n\t\t\tcase 'attach':\n\t\t\t\treturn Promise.resolve(this._onAttachEmitter.fire({ sessionId: arg[0], port: arg[1], subId: arg[2] }));\n\t\t}\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tlisten(ctx: TContext, event: string, arg?: any): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'close':\n\t\t\t\treturn this._onCloseEmitter.event;\n\t\t\tcase 'reload':\n\t\t\t\treturn this._onReloadEmitter.event;\n\t\t\tcase 'terminate':\n\t\t\t\treturn this._onTerminateEmitter.event;\n\t\t\tcase 'attach':\n\t\t\t\treturn this._onAttachEmitter.event;\n\t\t}\n\t\tthrow new Error('Method not implemented.');\n\t}\n}\n\nexport class ExtensionHostDebugChannelClient extends Disposable implements IExtensionHostDebugService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private channel: IChannel) {\n\t\tsuper();\n\t}\n\n\treload(sessionId: string): void {\n\t\tthis.channel.call('reload', [sessionId]);\n\t}\n\n\tget onReload(): Event<IReloadSessionEvent> {\n\t\treturn this.channel.listen('reload');\n\t}\n\n\tclose(sessionId: string): void {\n\t\tthis.channel.call('close', [sessionId]);\n\t}\n\n\tget onClose(): Event<ICloseSessionEvent> {\n\t\treturn this.channel.listen('close');\n\t}\n\n\tattachSession(sessionId: string, port: number, subId?: string): void {\n\t\tthis.channel.call('attach', [sessionId, port, subId]);\n\t}\n\n\tget onAttachSession(): Event<IAttachSessionEvent> {\n\t\treturn this.channel.listen('attach');\n\t}\n\n\tterminateSession(sessionId: string, subId?: string): void {\n\t\tthis.channel.call('terminate', [sessionId, subId]);\n\t}\n\n\tget onTerminateSession(): Event<ITerminateSessionEvent> {\n\t\treturn this.channel.listen('terminate');\n\t}\n\n\topenExtensionDevelopmentHostWindow(args: string[], debugRenderer: boolean): Promise<IOpenExtensionWindowResult> {\n\t\treturn this.channel.call('openExtensionDevelopmentHostWindow', [args, debugRenderer]);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { URI } from 'vs/base/common/uri';\nimport { IURITransformer } from 'vs/base/common/uriIpc';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IDownloadService } from 'vs/platform/download/common/download';\n\nexport class DownloadServiceChannel implements IServerChannel {\n\n\tconstructor(private readonly service: IDownloadService) { }\n\n\tlisten(_: unknown, event: string, arg?: any): Event<any> {\n\t\tthrow new Error('Invalid listen');\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'download': return this.service.download(URI.revive(args[0]), URI.revive(args[1]));\n\t\t}\n\t\tthrow new Error('Invalid call');\n\t}\n}\n\nexport class DownloadServiceChannelClient implements IDownloadService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private channel: IChannel, private getUriTransformer: () => IURITransformer | null) { }\n\n\tasync download(from: URI, to: URI): Promise<void> {\n\t\tconst uriTransfomer = this.getUriTransformer();\n\t\tif (uriTransfomer) {\n\t\t\tfrom = uriTransfomer.transformOutgoingURI(from);\n\t\t\tto = uriTransfomer.transformOutgoingURI(to);\n\t\t}\n\t\tawait this.channel.call('download', [from, to]);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { URI } from 'vs/base/common/uri';\n\nexport interface IEditorModel {\n\n\t/**\n\t * Emitted when the model is about to be disposed.\n\t */\n\treadonly onWillDispose: Event<void>;\n\n\t/**\n\t * Resolves the model.\n\t */\n\tresolve(): Promise<void>;\n\n\t/**\n\t * Find out if the editor model was resolved or not.\n\t */\n\tisResolved(): boolean;\n\n\t/**\n\t * Find out if this model has been disposed.\n\t */\n\tisDisposed(): boolean;\n\n\t/**\n\t * Dispose associated resources\n\t */\n\tdispose(): void;\n}\n\nexport interface IBaseUntypedEditorInput {\n\n\t/**\n\t * Optional options to use when opening the input.\n\t */\n\toptions?: IEditorOptions;\n\n\t/**\n\t * Label to show for the input.\n\t */\n\treadonly label?: string;\n\n\t/**\n\t * Description to show for the input.\n\t */\n\treadonly description?: string;\n}\n\nexport interface IBaseResourceEditorInput extends IBaseUntypedEditorInput {\n\n\t/**\n\t * Hint to indicate that this input should be treated as a\n\t * untitled file.\n\t *\n\t * Without this hint, the editor service will make a guess by\n\t * looking at the scheme of the resource(s).\n\t *\n\t * Use `forceUntitled: true` when you pass in a `resource` that\n\t * does not use the `untitled` scheme. The `resource` will then\n\t * be used as associated path when saving the untitled file.\n\t */\n\treadonly forceUntitled?: boolean;\n}\n\nexport interface IBaseTextResourceEditorInput extends IBaseResourceEditorInput {\n\n\t/**\n\t * Optional options to use when opening the text input.\n\t */\n\toptions?: ITextEditorOptions;\n\n\t/**\n\t * The contents of the text input if known. If provided,\n\t * the input will not attempt to load the contents from\n\t * disk and may appear dirty.\n\t */\n\tcontents?: string;\n\n\t/**\n\t * The encoding of the text input if known.\n\t */\n\tencoding?: string;\n\n\t/**\n\t * The identifier of the language id of the text input\n\t * if known to use when displaying the contents.\n\t */\n\tlanguageId?: string;\n}\n\nexport interface IResourceEditorInput extends IBaseResourceEditorInput {\n\n\t/**\n\t * The resource URI of the resource to open.\n\t */\n\treadonly resource: URI;\n}\n\nexport interface ITextResourceEditorInput extends IResourceEditorInput, IBaseTextResourceEditorInput {\n\n\t/**\n\t * Optional options to use when opening the text input.\n\t */\n\toptions?: ITextEditorOptions;\n}\n\n/**\n * This identifier allows to uniquely identify an editor with a\n * resource, type and editor identifier.\n */\nexport interface IResourceEditorInputIdentifier {\n\n\t/**\n\t * The type of the editor.\n\t */\n\treadonly typeId: string;\n\n\t/**\n\t * The identifier of the editor if provided.\n\t */\n\treadonly editorId: string | undefined;\n\n\t/**\n\t * The resource URI of the editor.\n\t */\n\treadonly resource: URI;\n}\n\nexport enum EditorActivation {\n\n\t/**\n\t * Activate the editor after it opened. This will automatically restore\n\t * the editor if it is minimized.\n\t */\n\tACTIVATE = 1,\n\n\t/**\n\t * Only restore the editor if it is minimized but do not activate it.\n\t *\n\t * Note: will only work in combination with the `preserveFocus: true` option.\n\t * Otherwise, if focus moves into the editor, it will activate and restore\n\t * automatically.\n\t */\n\tRESTORE,\n\n\t/**\n\t * Preserve the current active editor.\n\t *\n\t * Note: will only work in combination with the `preserveFocus: true` option.\n\t * Otherwise, if focus moves into the editor, it will activate and restore\n\t * automatically.\n\t */\n\tPRESERVE\n}\n\nexport enum EditorResolution {\n\n\t/**\n\t * Displays a picker and allows the user to decide which editor to use.\n\t */\n\tPICK,\n\n\t/**\n\t * Disables editor resolving.\n\t */\n\tDISABLED,\n\n\t/**\n\t * Only exclusive editors are considered.\n\t */\n\tEXCLUSIVE_ONLY\n}\n\nexport enum EditorOpenSource {\n\n\t/**\n\t * Default: the editor is opening via a programmatic call\n\t * to the editor service API.\n\t */\n\tAPI,\n\n\t/**\n\t * Indicates that a user action triggered the opening, e.g.\n\t * via mouse or keyboard use.\n\t */\n\tUSER\n}\n\nexport interface IEditorOptions {\n\n\t/**\n\t * Tells the editor to not receive keyboard focus when the editor is being opened.\n\t *\n\t * Will also not activate the group the editor opens in unless the group is already\n\t * the active one. This behaviour can be overridden via the `activation` option.\n\t */\n\tpreserveFocus?: boolean;\n\n\t/**\n\t * This option is only relevant if an editor is opened into a group that is not active\n\t * already and allows to control if the inactive group should become active, restored\n\t * or preserved.\n\t *\n\t * By default, the editor group will become active unless `preserveFocus` or `inactive`\n\t * is specified.\n\t */\n\tactivation?: EditorActivation;\n\n\t/**\n\t * Tells the editor to reload the editor input in the editor even if it is identical to the one\n\t * already showing. By default, the editor will not reload the input if it is identical to the\n\t * one showing.\n\t */\n\tforceReload?: boolean;\n\n\t/**\n\t * Will reveal the editor if it is already opened and visible in any of the opened editor groups.\n\t *\n\t * Note that this option is just a hint that might be ignored if the user wants to open an editor explicitly\n\t * to the side of another one or into a specific editor group.\n\t */\n\trevealIfVisible?: boolean;\n\n\t/**\n\t * Will reveal the editor if it is already opened (even when not visible) in any of the opened editor groups.\n\t *\n\t * Note that this option is just a hint that might be ignored if the user wants to open an editor explicitly\n\t * to the side of another one or into a specific editor group.\n\t */\n\trevealIfOpened?: boolean;\n\n\t/**\n\t * An editor that is pinned remains in the editor stack even when another editor is being opened.\n\t * An editor that is not pinned will always get replaced by another editor that is not pinned.\n\t */\n\tpinned?: boolean;\n\n\t/**\n\t * An editor that is sticky moves to the beginning of the editors list within the group and will remain\n\t * there unless explicitly closed. Operations such as \"Close All\" will not close sticky editors.\n\t */\n\tsticky?: boolean;\n\n\t/**\n\t * The index in the document stack where to insert the editor into when opening.\n\t */\n\tindex?: number;\n\n\t/**\n\t * An active editor that is opened will show its contents directly. Set to true to open an editor\n\t * in the background without loading its contents.\n\t *\n\t * Will also not activate the group the editor opens in unless the group is already\n\t * the active one. This behaviour can be overridden via the `activation` option.\n\t */\n\tinactive?: boolean;\n\n\t/**\n\t * Will not show an error in case opening the editor fails and thus allows to show a custom error\n\t * message as needed. By default, an error will be presented as notification if opening was not possible.\n\t */\n\n\t/**\n\t * In case of an error opening the editor, will not present this error to the user (e.g. by showing\n\t * a generic placeholder in the editor area). So it is up to the caller to provide error information\n\t * in that case.\n\t *\n\t * By default, an error when opening an editor will result in a placeholder editor that shows the error.\n\t * In certain cases a modal dialog may be presented to ask the user for further action.\n\t */\n\tignoreError?: boolean;\n\n\t/**\n\t * Allows to override the editor that should be used to display the input:\n\t * - `undefined`: let the editor decide for itself\n\t * - `string`: specific override by id\n\t * - `EditorResolution`: specific override handling\n\t */\n\toverride?: string | EditorResolution;\n\n\t/**\n\t * A optional hint to signal in which context the editor opens.\n\t *\n\t * If configured to be `EditorOpenSource.USER`, this hint can be\n\t * used in various places to control the experience. For example,\n\t * if the editor to open fails with an error, a notification could\n\t * inform about this in a modal dialog. If the editor opened through\n\t * some background task, the notification would show in the background,\n\t * not as a modal dialog.\n\t */\n\tsource?: EditorOpenSource;\n\n\t/**\n\t * An optional property to signal that certain view state should be\n\t * applied when opening the editor.\n\t */\n\tviewState?: object;\n}\n\nexport interface ITextEditorSelection {\n\treadonly startLineNumber: number;\n\treadonly startColumn: number;\n\treadonly endLineNumber?: number;\n\treadonly endColumn?: number;\n}\n\nexport const enum TextEditorSelectionRevealType {\n\t/**\n\t * Option to scroll vertically or horizontally as necessary and reveal a range centered vertically.\n\t */\n\tCenter = 0,\n\n\t/**\n\t * Option to scroll vertically or horizontally as necessary and reveal a range centered vertically only if it lies outside the viewport.\n\t */\n\tCenterIfOutsideViewport = 1,\n\n\t/**\n\t * Option to scroll vertically or horizontally as necessary and reveal a range close to the top of the viewport, but not quite at the top.\n\t */\n\tNearTop = 2,\n\n\t/**\n\t * Option to scroll vertically or horizontally as necessary and reveal a range close to the top of the viewport, but not quite at the top.\n\t * Only if it lies outside the viewport\n\t */\n\tNearTopIfOutsideViewport = 3,\n}\n\nexport const enum TextEditorSelectionSource {\n\n\t/**\n\t * Programmatic source indicates a selection change that\n\t * was not triggered by the user via keyboard or mouse\n\t * but through text editor APIs.\n\t */\n\tPROGRAMMATIC = 'api',\n\n\t/**\n\t * Navigation source indicates a selection change that\n\t * was caused via some command or UI component such as\n\t * an outline tree.\n\t */\n\tNAVIGATION = 'code.navigation',\n\n\t/**\n\t * Jump source indicates a selection change that\n\t * was caused from within the text editor to another\n\t * location in the same or different text editor such\n\t * as \"Go to definition\".\n\t */\n\tJUMP = 'code.jump'\n}\n\nexport interface ITextEditorOptions extends IEditorOptions {\n\n\t/**\n\t * Text editor selection.\n\t */\n\tselection?: ITextEditorSelection;\n\n\t/**\n\t * Option to control the text editor selection reveal type.\n\t * Defaults to TextEditorSelectionRevealType.Center\n\t */\n\tselectionRevealType?: TextEditorSelectionRevealType;\n\n\t/**\n\t * Source of the call that caused the selection.\n\t */\n\tselectionSource?: TextEditorSelectionSource | string;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ICommonEncryptionService } from 'vs/platform/encryption/common/encryptionService';\n\nexport interface Encryption {\n\tencrypt(salt: string, value: string): Promise<string>;\n\tdecrypt(salt: string, value: string): Promise<string>;\n}\nexport class EncryptionMainService implements ICommonEncryptionService {\n\tdeclare readonly _serviceBrand: undefined;\n\tconstructor(\n\t\tprivate machineId: string) {\n\n\t}\n\n\tprivate encryption(): Promise<Encryption> {\n\t\treturn new Promise((resolve, reject) => require(['vscode-encrypt'], resolve, reject));\n\t}\n\n\tasync encrypt(value: string): Promise<string> {\n\t\ttry {\n\t\t\tconst encryption = await this.encryption();\n\t\t\treturn encryption.encrypt(this.machineId, value);\n\t\t} catch (e) {\n\t\t\treturn value;\n\t\t}\n\t}\n\n\tasync decrypt(value: string): Promise<string> {\n\t\ttry {\n\t\t\tconst encryption = await this.encryption();\n\t\t\treturn encryption.decrypt(this.machineId, value);\n\t\t} catch (e) {\n\t\t\treturn value;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toLocalISOString } from 'vs/base/common/date';\nimport { memoize } from 'vs/base/common/decorators';\nimport { FileAccess } from 'vs/base/common/network';\nimport { dirname, join, normalize, resolve } from 'vs/base/common/path';\nimport { env } from 'vs/base/common/process';\nimport { joinPath } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { ExtensionKind, IDebugParams, IExtensionHostDebugParams, INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IProductService } from 'vs/platform/product/common/productService';\n\nexport interface INativeEnvironmentPaths {\n\n\t/**\n\t * The user data directory to use for anything that should be\n\t * persisted except for the content that is meant for the `homeDir`.\n\t *\n\t * Only one instance of VSCode can use the same `userDataDir`.\n\t */\n\tuserDataDir: string;\n\n\t/**\n\t * The user home directory mainly used for persisting extensions\n\t * and global configuration that should be shared across all\n\t * versions.\n\t */\n\thomeDir: string;\n\n\t/**\n\t * OS tmp dir.\n\t */\n\ttmpDir: string;\n}\n\nexport abstract class AbstractNativeEnvironmentService implements INativeEnvironmentService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\t@memoize\n\tget appRoot(): string { return dirname(FileAccess.asFileUri('', require).fsPath); }\n\n\t@memoize\n\tget userHome(): URI { return URI.file(this.paths.homeDir); }\n\n\t@memoize\n\tget userDataPath(): string { return this.paths.userDataDir; }\n\n\t@memoize\n\tget appSettingsHome(): URI { return URI.file(join(this.userDataPath, 'User')); }\n\n\t@memoize\n\tget tmpDir(): URI { return URI.file(this.paths.tmpDir); }\n\n\t@memoize\n\tget cacheHome(): URI { return URI.file(this.userDataPath); }\n\n\t@memoize\n\tget stateResource(): URI { return joinPath(this.appSettingsHome, 'globalStorage', 'storage.json'); }\n\n\t@memoize\n\tget userRoamingDataHome(): URI { return this.appSettingsHome; }\n\n\t@memoize\n\tget userDataSyncHome(): URI { return joinPath(this.userRoamingDataHome, 'sync'); }\n\n\tget logsPath(): string {\n\t\tif (!this.args.logsPath) {\n\t\t\tconst key = toLocalISOString(new Date()).replace(/-|:|\\.\\d+Z$/g, '');\n\t\t\tthis.args.logsPath = join(this.userDataPath, 'logs', key);\n\t\t}\n\n\t\treturn this.args.logsPath;\n\t}\n\n\t@memoize\n\tget userDataSyncLogResource(): URI { return URI.file(join(this.logsPath, 'userDataSync.log')); }\n\n\t@memoize\n\tget editSessionsLogResource(): URI { return URI.file(join(this.logsPath, 'editSessions.log')); }\n\n\t@memoize\n\tget sync(): 'on' | 'off' | undefined { return this.args.sync; }\n\n\t@memoize\n\tget machineSettingsResource(): URI { return joinPath(URI.file(join(this.userDataPath, 'Machine')), 'settings.json'); }\n\n\t@memoize\n\tget workspaceStorageHome(): URI { return joinPath(this.appSettingsHome, 'workspaceStorage'); }\n\n\t@memoize\n\tget localHistoryHome(): URI { return joinPath(this.appSettingsHome, 'History'); }\n\n\t@memoize\n\tget keyboardLayoutResource(): URI { return joinPath(this.userRoamingDataHome, 'keyboardLayout.json'); }\n\n\t@memoize\n\tget argvResource(): URI {\n\t\tconst vscodePortable = env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn URI.file(join(vscodePortable, 'argv.json'));\n\t\t}\n\n\t\treturn joinPath(this.appSettingsHome, 'argv.json');\n\t}\n\n\t@memoize\n\tget isExtensionDevelopment(): boolean { return !!this.args.extensionDevelopmentPath; }\n\n\t@memoize\n\tget untitledWorkspacesHome(): URI { return URI.file(join(this.userDataPath, 'Workspaces')); }\n\n\t@memoize\n\tget installSourcePath(): string { return join(this.userDataPath, 'installSource'); }\n\n\t@memoize\n\tget builtinExtensionsPath(): string {\n\t\tconst cliBuiltinExtensionsDir = this.args['builtin-extensions-dir'];\n\t\tif (cliBuiltinExtensionsDir) {\n\t\t\treturn resolve(cliBuiltinExtensionsDir);\n\t\t}\n\n\t\treturn normalize(join(FileAccess.asFileUri('', require).fsPath, '..', 'extensions'));\n\t}\n\n\tget extensionsDownloadPath(): string {\n\t\tconst cliExtensionsDownloadDir = this.args['extensions-download-dir'];\n\t\tif (cliExtensionsDownloadDir) {\n\t\t\treturn resolve(cliExtensionsDownloadDir);\n\t\t}\n\n\t\treturn join(this.userDataPath, 'CachedExtensionVSIXs');\n\t}\n\n\t@memoize\n\tget extensionsPath(): string {\n\t\tconst cliExtensionsDir = this.args['extensions-dir'];\n\t\tif (cliExtensionsDir) {\n\t\t\treturn resolve(cliExtensionsDir);\n\t\t}\n\n\t\tconst vscodeExtensions = env['VSCODE_EXTENSIONS'];\n\t\tif (vscodeExtensions) {\n\t\t\treturn vscodeExtensions;\n\t\t}\n\n\t\tconst vscodePortable = env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn join(vscodePortable, 'extensions');\n\t\t}\n\n\t\treturn joinPath(this.userHome, this.productService.dataFolderName, 'extensions').fsPath;\n\t}\n\n\t@memoize\n\tget extensionDevelopmentLocationURI(): URI[] | undefined {\n\t\tconst extensionDevelopmentPaths = this.args.extensionDevelopmentPath;\n\t\tif (Array.isArray(extensionDevelopmentPaths)) {\n\t\t\treturn extensionDevelopmentPaths.map(extensionDevelopmentPath => {\n\t\t\t\tif (/^[^:/?#]+?:\\/\\//.test(extensionDevelopmentPath)) {\n\t\t\t\t\treturn URI.parse(extensionDevelopmentPath);\n\t\t\t\t}\n\n\t\t\t\treturn URI.file(normalize(extensionDevelopmentPath));\n\t\t\t});\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\t@memoize\n\tget extensionDevelopmentKind(): ExtensionKind[] | undefined {\n\t\treturn this.args.extensionDevelopmentKind?.map(kind => kind === 'ui' || kind === 'workspace' || kind === 'web' ? kind : 'workspace');\n\t}\n\n\t@memoize\n\tget extensionTestsLocationURI(): URI | undefined {\n\t\tconst extensionTestsPath = this.args.extensionTestsPath;\n\t\tif (extensionTestsPath) {\n\t\t\tif (/^[^:/?#]+?:\\/\\//.test(extensionTestsPath)) {\n\t\t\t\treturn URI.parse(extensionTestsPath);\n\t\t\t}\n\n\t\t\treturn URI.file(normalize(extensionTestsPath));\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tget disableExtensions(): boolean | string[] {\n\t\tif (this.args['disable-extensions']) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst disableExtensions = this.args['disable-extension'];\n\t\tif (disableExtensions) {\n\t\t\tif (typeof disableExtensions === 'string') {\n\t\t\t\treturn [disableExtensions];\n\t\t\t}\n\n\t\t\tif (Array.isArray(disableExtensions) && disableExtensions.length > 0) {\n\t\t\t\treturn disableExtensions;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t@memoize\n\tget debugExtensionHost(): IExtensionHostDebugParams { return parseExtensionHostPort(this.args, this.isBuilt); }\n\tget debugRenderer(): boolean { return !!this.args.debugRenderer; }\n\n\tget isBuilt(): boolean { return !env['VSCODE_DEV']; }\n\tget verbose(): boolean { return !!this.args.verbose; }\n\tget logLevel(): string | undefined { return this.args.log; }\n\n\t@memoize\n\tget serviceMachineIdResource(): URI { return joinPath(URI.file(this.userDataPath), 'machineid'); }\n\n\tget crashReporterId(): string | undefined { return this.args['crash-reporter-id']; }\n\tget crashReporterDirectory(): string | undefined { return this.args['crash-reporter-directory']; }\n\n\t@memoize\n\tget telemetryLogResource(): URI { return URI.file(join(this.logsPath, 'telemetry.log')); }\n\tget disableTelemetry(): boolean { return !!this.args['disable-telemetry']; }\n\n\t@memoize\n\tget disableWorkspaceTrust(): boolean { return !!this.args['disable-workspace-trust']; }\n\n\t@memoize\n\tget policyFile(): URI | undefined {\n\t\tif (this.args['__enable-file-policy']) {\n\t\t\tconst vscodePortable = env['VSCODE_PORTABLE'];\n\t\t\tif (vscodePortable) {\n\t\t\t\treturn URI.file(join(vscodePortable, 'policy.json'));\n\t\t\t}\n\n\t\t\treturn joinPath(this.userHome, this.productService.dataFolderName, 'policy.json');\n\t\t}\n\t\treturn undefined;\n\t}\n\n\teditSessionId: string | undefined = this.args['editSessionId'];\n\n\tget args(): NativeParsedArgs { return this._args; }\n\n\tconstructor(\n\t\tprivate readonly _args: NativeParsedArgs,\n\t\tprivate readonly paths: INativeEnvironmentPaths,\n\t\tprotected readonly productService: IProductService\n\t) { }\n}\n\nexport function parseExtensionHostPort(args: NativeParsedArgs, isBuild: boolean): IExtensionHostDebugParams {\n\treturn parseDebugParams(args['inspect-extensions'], args['inspect-brk-extensions'], 5870, isBuild, args.debugId, args.extensionEnvironment);\n}\n\nexport function parseSearchPort(args: NativeParsedArgs, isBuild: boolean): IDebugParams {\n\treturn parseDebugParams(args['inspect-search'], args['inspect-brk-search'], 5876, isBuild, args.extensionEnvironment);\n}\n\nexport function parsePtyHostPort(args: NativeParsedArgs, isBuild: boolean): IDebugParams {\n\treturn parseDebugParams(args['inspect-ptyhost'], args['inspect-brk-ptyhost'], 5877, isBuild, args.extensionEnvironment);\n}\n\nfunction parseDebugParams(debugArg: string | undefined, debugBrkArg: string | undefined, defaultBuildPort: number, isBuild: boolean, debugId?: string, environmentString?: string): IExtensionHostDebugParams {\n\tconst portStr = debugBrkArg || debugArg;\n\tconst port = Number(portStr) || (!isBuild ? defaultBuildPort : null);\n\tconst brk = port ? Boolean(!!debugBrkArg) : false;\n\tlet env: Record<string, string> | undefined;\n\tif (environmentString) {\n\t\ttry {\n\t\t\tenv = JSON.parse(environmentString);\n\t\t} catch {\n\t\t\t// ignore\n\t\t}\n\t}\n\n\treturn { port, break: brk, debugId, env };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as minimist from 'minimist';\nimport { isWindows } from 'vs/base/common/platform';\nimport { localize } from 'vs/nls';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\n\n/**\n * This code is also used by standalone cli's. Avoid adding any other dependencies.\n */\nconst helpCategories = {\n\to: localize('optionsUpperCase', \"Options\"),\n\te: localize('extensionsManagement', \"Extensions Management\"),\n\tt: localize('troubleshooting', \"Troubleshooting\")\n};\n\nexport interface Option<OptionType> {\n\ttype: OptionType;\n\talias?: string;\n\tdeprecates?: string[]; // old deprecated ids\n\targs?: string | string[];\n\tdescription?: string;\n\tdeprecationMessage?: string;\n\tallowEmptyValue?: boolean;\n\tcat?: keyof typeof helpCategories;\n}\n\nexport type OptionDescriptions<T> = {\n\t[P in keyof T]: Option<OptionTypeName<T[P]>>;\n};\n\ntype OptionTypeName<T> =\n\tT extends boolean ? 'boolean' :\n\tT extends string ? 'string' :\n\tT extends string[] ? 'string[]' :\n\tT extends undefined ? 'undefined' :\n\t'unknown';\n\nexport const OPTIONS: OptionDescriptions<Required<NativeParsedArgs>> = {\n\t'diff': { type: 'boolean', cat: 'o', alias: 'd', args: ['file', 'file'], description: localize('diff', \"Compare two files with each other.\") },\n\t'merge': { type: 'boolean', cat: 'o', alias: 'm', args: ['path1', 'path2', 'base', 'result'], description: localize('merge', \"Perform a three-way merge by providing paths for two modified versions of a file, the common origin of both modified versions and the output file to save merge results.\") },\n\t'add': { type: 'boolean', cat: 'o', alias: 'a', args: 'folder', description: localize('add', \"Add folder(s) to the last active window.\") },\n\t'goto': { type: 'boolean', cat: 'o', alias: 'g', args: 'file:line[:character]', description: localize('goto', \"Open a file at the path on the specified line and character position.\") },\n\t'new-window': { type: 'boolean', cat: 'o', alias: 'n', description: localize('newWindow', \"Force to open a new window.\") },\n\t'reuse-window': { type: 'boolean', cat: 'o', alias: 'r', description: localize('reuseWindow', \"Force to open a file or folder in an already opened window.\") },\n\t'wait': { type: 'boolean', cat: 'o', alias: 'w', description: localize('wait', \"Wait for the files to be closed before returning.\") },\n\t'waitMarkerFilePath': { type: 'string' },\n\t'locale': { type: 'string', cat: 'o', args: 'locale', description: localize('locale', \"The locale to use (e.g. en-US or zh-TW).\") },\n\t'user-data-dir': { type: 'string', cat: 'o', args: 'dir', description: localize('userDataDir', \"Specifies the directory that user data is kept in. Can be used to open multiple distinct instances of Code.\") },\n\t'help': { type: 'boolean', cat: 'o', alias: 'h', description: localize('help', \"Print usage.\") },\n\n\t'extensions-dir': { type: 'string', deprecates: ['extensionHomePath'], cat: 'e', args: 'dir', description: localize('extensionHomePath', \"Set the root path for extensions.\") },\n\t'extensions-download-dir': { type: 'string' },\n\t'builtin-extensions-dir': { type: 'string' },\n\t'list-extensions': { type: 'boolean', cat: 'e', description: localize('listExtensions', \"List the installed extensions.\") },\n\t'show-versions': { type: 'boolean', cat: 'e', description: localize('showVersions', \"Show versions of installed extensions, when using --list-extensions.\") },\n\t'category': { type: 'string', cat: 'e', description: localize('category', \"Filters installed extensions by provided category, when using --list-extensions.\"), args: 'category' },\n\t'install-extension': { type: 'string[]', cat: 'e', args: 'ext-id | path', description: localize('installExtension', \"Installs or updates an extension. The argument is either an extension id or a path to a VSIX. The identifier of an extension is '${publisher}.${name}'. Use '--force' argument to update to latest version. To install a specific version provide '@${version}'. For example: 'vscode.csharp@1.2.3'.\") },\n\t'pre-release': { type: 'boolean', cat: 'e', description: localize('install prerelease', \"Installs the pre-release version of the extension, when using --install-extension\") },\n\t'uninstall-extension': { type: 'string[]', cat: 'e', args: 'ext-id', description: localize('uninstallExtension', \"Uninstalls an extension.\") },\n\t'enable-proposed-api': { type: 'string[]', allowEmptyValue: true, cat: 'e', args: 'ext-id', description: localize('experimentalApis', \"Enables proposed API features for extensions. Can receive one or more extension IDs to enable individually.\") },\n\n\t'version': { type: 'boolean', cat: 't', alias: 'v', description: localize('version', \"Print version.\") },\n\t'verbose': { type: 'boolean', cat: 't', description: localize('verbose', \"Print verbose output (implies --wait).\") },\n\t'log': { type: 'string', cat: 't', args: 'level', description: localize('log', \"Log level to use. Default is 'info'. Allowed values are 'critical', 'error', 'warn', 'info', 'debug', 'trace', 'off'.\") },\n\t'status': { type: 'boolean', alias: 's', cat: 't', description: localize('status', \"Print process usage and diagnostics information.\") },\n\t'prof-startup': { type: 'boolean', cat: 't', description: localize('prof-startup', \"Run CPU profiler during startup.\") },\n\t'prof-append-timers': { type: 'string' },\n\t'no-cached-data': { type: 'boolean' },\n\t'prof-startup-prefix': { type: 'string' },\n\t'prof-v8-extensions': { type: 'boolean' },\n\t'disable-extensions': { type: 'boolean', deprecates: ['disableExtensions'], cat: 't', description: localize('disableExtensions', \"Disable all installed extensions.\") },\n\t'disable-extension': { type: 'string[]', cat: 't', args: 'ext-id', description: localize('disableExtension', \"Disable an extension.\") },\n\t'sync': { type: 'string', cat: 't', description: localize('turn sync', \"Turn sync on or off.\"), args: ['on | off'] },\n\n\t'inspect-extensions': { type: 'string', allowEmptyValue: true, deprecates: ['debugPluginHost'], args: 'port', cat: 't', description: localize('inspect-extensions', \"Allow debugging and profiling of extensions. Check the developer tools for the connection URI.\") },\n\t'inspect-brk-extensions': { type: 'string', allowEmptyValue: true, deprecates: ['debugBrkPluginHost'], args: 'port', cat: 't', description: localize('inspect-brk-extensions', \"Allow debugging and profiling of extensions with the extension host being paused after start. Check the developer tools for the connection URI.\") },\n\t'disable-gpu': { type: 'boolean', cat: 't', description: localize('disableGPU', \"Disable GPU hardware acceleration.\") },\n\t'ms-enable-electron-run-as-node': { type: 'boolean' },\n\t'max-memory': { type: 'string', cat: 't', description: localize('maxMemory', \"Max memory size for a window (in Mbytes).\"), args: 'memory' },\n\t'telemetry': { type: 'boolean', cat: 't', description: localize('telemetry', \"Shows all telemetry events which VS code collects.\") },\n\n\t'remote': { type: 'string', allowEmptyValue: true },\n\t'folder-uri': { type: 'string[]', cat: 'o', args: 'uri' },\n\t'file-uri': { type: 'string[]', cat: 'o', args: 'uri' },\n\n\t'locate-extension': { type: 'string[]' },\n\t'extensionDevelopmentPath': { type: 'string[]' },\n\t'extensionDevelopmentKind': { type: 'string[]' },\n\t'extensionTestsPath': { type: 'string' },\n\t'extensionEnvironment': { type: 'string' },\n\t'debugId': { type: 'string' },\n\t'debugRenderer': { type: 'boolean' },\n\t'inspect-ptyhost': { type: 'string', allowEmptyValue: true },\n\t'inspect-brk-ptyhost': { type: 'string', allowEmptyValue: true },\n\t'inspect-search': { type: 'string', deprecates: ['debugSearch'], allowEmptyValue: true },\n\t'inspect-brk-search': { type: 'string', deprecates: ['debugBrkSearch'], allowEmptyValue: true },\n\t'export-default-configuration': { type: 'string' },\n\t'install-source': { type: 'string' },\n\t'enable-smoke-test-driver': { type: 'boolean' },\n\t'logExtensionHostCommunication': { type: 'boolean' },\n\t'skip-release-notes': { type: 'boolean' },\n\t'skip-welcome': { type: 'boolean' },\n\t'disable-telemetry': { type: 'boolean' },\n\t'disable-updates': { type: 'boolean' },\n\t'disable-keytar': { type: 'boolean' },\n\t'disable-workspace-trust': { type: 'boolean' },\n\t'disable-crash-reporter': { type: 'boolean' },\n\t'crash-reporter-directory': { type: 'string' },\n\t'crash-reporter-id': { type: 'string' },\n\t'skip-add-to-recently-opened': { type: 'boolean' },\n\t'unity-launch': { type: 'boolean' },\n\t'open-url': { type: 'boolean' },\n\t'file-write': { type: 'boolean' },\n\t'file-chmod': { type: 'boolean' },\n\t'install-builtin-extension': { type: 'string[]' },\n\t'force': { type: 'boolean' },\n\t'do-not-sync': { type: 'boolean' },\n\t'trace': { type: 'boolean' },\n\t'trace-category-filter': { type: 'string' },\n\t'trace-options': { type: 'string' },\n\t'force-user-env': { type: 'boolean' },\n\t'force-disable-user-env': { type: 'boolean' },\n\t'open-devtools': { type: 'boolean' },\n\t'logsPath': { type: 'string' },\n\t'__enable-file-policy': { type: 'boolean' },\n\t'editSessionId': { type: 'string' },\n\t'locate-shell-integration-path': { type: 'string', args: ['bash', 'pwsh', 'zsh'] },\n\n\t// chromium flags\n\t'no-proxy-server': { type: 'boolean' },\n\t// Minimist incorrectly parses keys that start with `--no`\n\t// https://github.com/substack/minimist/blob/aeb3e27dae0412de5c0494e9563a5f10c82cc7a9/index.js#L118-L121\n\t// If --no-sandbox is passed via cli wrapper it will be treated as --sandbox which is incorrect, we use\n\t// the alias here to make sure --no-sandbox is always respected.\n\t// For https://github.com/microsoft/vscode/issues/128279\n\t'no-sandbox': { type: 'boolean', alias: 'sandbox' },\n\t'proxy-server': { type: 'string' },\n\t'proxy-bypass-list': { type: 'string' },\n\t'proxy-pac-url': { type: 'string' },\n\t'js-flags': { type: 'string' }, // chrome js flags\n\t'inspect': { type: 'string', allowEmptyValue: true },\n\t'inspect-brk': { type: 'string', allowEmptyValue: true },\n\t'nolazy': { type: 'boolean' }, // node inspect\n\t'force-device-scale-factor': { type: 'string' },\n\t'force-renderer-accessibility': { type: 'boolean' },\n\t'ignore-certificate-errors': { type: 'boolean' },\n\t'allow-insecure-localhost': { type: 'boolean' },\n\t'log-net-log': { type: 'string' },\n\t'vmodule': { type: 'string' },\n\t'_urls': { type: 'string[]' },\n\t'disable-dev-shm-usage': { type: 'boolean' },\n\n\t_: { type: 'string[]' } // main arguments\n};\n\nexport interface ErrorReporter {\n\tonUnknownOption(id: string): void;\n\tonMultipleValues(id: string, usedValue: string): void;\n\tonEmptyValue(id: string): void;\n\tonDeprecatedOption(deprecatedId: string, message: string): void;\n}\n\nconst ignoringReporter: ErrorReporter = {\n\tonUnknownOption: () => { },\n\tonMultipleValues: () => { },\n\tonEmptyValue: () => { },\n\tonDeprecatedOption: () => { }\n};\n\nexport function parseArgs<T>(args: string[], options: OptionDescriptions<T>, errorReporter: ErrorReporter = ignoringReporter): T {\n\tconst alias: { [key: string]: string } = {};\n\tconst string: string[] = ['_'];\n\tconst boolean: string[] = [];\n\tfor (const optionId in options) {\n\t\tconst o = options[optionId];\n\t\tif (o.alias) {\n\t\t\talias[optionId] = o.alias;\n\t\t}\n\n\t\tif (o.type === 'string' || o.type === 'string[]') {\n\t\t\tstring.push(optionId);\n\t\t\tif (o.deprecates) {\n\t\t\t\tstring.push(...o.deprecates);\n\t\t\t}\n\t\t} else if (o.type === 'boolean') {\n\t\t\tboolean.push(optionId);\n\t\t\tif (o.deprecates) {\n\t\t\t\tboolean.push(...o.deprecates);\n\t\t\t}\n\t\t}\n\t}\n\t// remove aliases to avoid confusion\n\tconst parsedArgs = minimist(args, { string, boolean, alias });\n\n\tconst cleanedArgs: any = {};\n\tconst remainingArgs: any = parsedArgs;\n\n\t// https://github.com/microsoft/vscode/issues/58177, https://github.com/microsoft/vscode/issues/106617\n\tcleanedArgs._ = parsedArgs._.map(arg => String(arg)).filter(arg => arg.length > 0);\n\n\tdelete remainingArgs._;\n\n\tfor (const optionId in options) {\n\t\tconst o = options[optionId];\n\t\tif (o.alias) {\n\t\t\tdelete remainingArgs[o.alias];\n\t\t}\n\n\t\tlet val = remainingArgs[optionId];\n\t\tif (o.deprecates) {\n\t\t\tfor (const deprecatedId of o.deprecates) {\n\t\t\t\tif (remainingArgs.hasOwnProperty(deprecatedId)) {\n\t\t\t\t\tif (!val) {\n\t\t\t\t\t\tval = remainingArgs[deprecatedId];\n\t\t\t\t\t\tif (val) {\n\t\t\t\t\t\t\terrorReporter.onDeprecatedOption(deprecatedId, o.deprecationMessage || localize('deprecated.useInstead', 'Use {0} instead.', optionId));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdelete remainingArgs[deprecatedId];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (typeof val !== 'undefined') {\n\t\t\tif (o.type === 'string[]') {\n\t\t\t\tif (!Array.isArray(val)) {\n\t\t\t\t\tval = [val];\n\t\t\t\t}\n\t\t\t\tif (!o.allowEmptyValue) {\n\t\t\t\t\tconst sanitized = val.filter((v: string) => v.length > 0);\n\t\t\t\t\tif (sanitized.length !== val.length) {\n\t\t\t\t\t\terrorReporter.onEmptyValue(optionId);\n\t\t\t\t\t\tval = sanitized.length > 0 ? sanitized : undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (o.type === 'string') {\n\t\t\t\tif (Array.isArray(val)) {\n\t\t\t\t\tval = val.pop(); // take the last\n\t\t\t\t\terrorReporter.onMultipleValues(optionId, val);\n\t\t\t\t} else if (!val && !o.allowEmptyValue) {\n\t\t\t\t\terrorReporter.onEmptyValue(optionId);\n\t\t\t\t\tval = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcleanedArgs[optionId] = val;\n\n\t\t\tif (o.deprecationMessage) {\n\t\t\t\terrorReporter.onDeprecatedOption(optionId, o.deprecationMessage);\n\t\t\t}\n\t\t}\n\t\tdelete remainingArgs[optionId];\n\t}\n\n\tfor (const key in remainingArgs) {\n\t\terrorReporter.onUnknownOption(key);\n\t}\n\n\treturn cleanedArgs;\n}\n\nfunction formatUsage(optionId: string, option: Option<any>) {\n\tlet args = '';\n\tif (option.args) {\n\t\tif (Array.isArray(option.args)) {\n\t\t\targs = ` <${option.args.join('> <')}>`;\n\t\t} else {\n\t\t\targs = ` <${option.args}>`;\n\t\t}\n\t}\n\tif (option.alias) {\n\t\treturn `-${option.alias} --${optionId}${args}`;\n\t}\n\treturn `--${optionId}${args}`;\n}\n\n// exported only for testing\nexport function formatOptions(options: OptionDescriptions<any>, columns: number): string[] {\n\tlet maxLength = 0;\n\tconst usageTexts: [string, string][] = [];\n\tfor (const optionId in options) {\n\t\tconst o = options[optionId];\n\t\tconst usageText = formatUsage(optionId, o);\n\t\tmaxLength = Math.max(maxLength, usageText.length);\n\t\tusageTexts.push([usageText, o.description!]);\n\t}\n\tconst argLength = maxLength + 2/*left padding*/ + 1/*right padding*/;\n\tif (columns - argLength < 25) {\n\t\t// Use a condensed version on narrow terminals\n\t\treturn usageTexts.reduce<string[]>((r, ut) => r.concat([`  ${ut[0]}`, `      ${ut[1]}`]), []);\n\t}\n\tconst descriptionColumns = columns - argLength - 1;\n\tconst result: string[] = [];\n\tfor (const ut of usageTexts) {\n\t\tconst usage = ut[0];\n\t\tconst wrappedDescription = wrapText(ut[1], descriptionColumns);\n\t\tconst keyPadding = indent(argLength - usage.length - 2/*left padding*/);\n\t\tresult.push('  ' + usage + keyPadding + wrappedDescription[0]);\n\t\tfor (let i = 1; i < wrappedDescription.length; i++) {\n\t\t\tresult.push(indent(argLength) + wrappedDescription[i]);\n\t\t}\n\t}\n\treturn result;\n}\n\nfunction indent(count: number): string {\n\treturn ' '.repeat(count);\n}\n\nfunction wrapText(text: string, columns: number): string[] {\n\tconst lines: string[] = [];\n\twhile (text.length) {\n\t\tconst index = text.length < columns ? text.length : text.lastIndexOf(' ', columns);\n\t\tconst line = text.slice(0, index).trim();\n\t\ttext = text.slice(index);\n\t\tlines.push(line);\n\t}\n\treturn lines;\n}\n\nexport function buildHelpMessage(productName: string, executableName: string, version: string, options: OptionDescriptions<any>, capabilities?: { noPipe?: boolean; noInputFiles: boolean }): string {\n\tconst columns = (process.stdout).isTTY && (process.stdout).columns || 80;\n\tconst inputFiles = capabilities?.noInputFiles !== true ? `[${localize('paths', 'paths')}...]` : '';\n\n\tconst help = [`${productName} ${version}`];\n\thelp.push('');\n\thelp.push(`${localize('usage', \"Usage\")}: ${executableName} [${localize('options', \"options\")}]${inputFiles}`);\n\thelp.push('');\n\tif (capabilities?.noPipe !== true) {\n\t\tif (isWindows) {\n\t\t\thelp.push(localize('stdinWindows', \"To read output from another program, append '-' (e.g. 'echo Hello World | {0} -')\", executableName));\n\t\t} else {\n\t\t\thelp.push(localize('stdinUnix', \"To read from stdin, append '-' (e.g. 'ps aux | grep code | {0} -')\", executableName));\n\t\t}\n\t\thelp.push('');\n\t}\n\tconst optionsByCategory: { [P in keyof typeof helpCategories]?: OptionDescriptions<any> } = {};\n\tfor (const optionId in options) {\n\t\tconst o = options[optionId];\n\t\tif (o.description && o.cat) {\n\t\t\tlet optionsByCat = optionsByCategory[o.cat];\n\t\t\tif (!optionsByCat) {\n\t\t\t\toptionsByCategory[o.cat] = optionsByCat = {};\n\t\t\t}\n\t\t\toptionsByCat[optionId] = o;\n\t\t}\n\t}\n\n\tfor (const helpCategoryKey in optionsByCategory) {\n\t\tconst key = <keyof typeof helpCategories>helpCategoryKey;\n\n\t\tconst categoryOptions = optionsByCategory[key];\n\t\tif (categoryOptions) {\n\t\t\thelp.push(helpCategories[key]);\n\t\t\thelp.push(...formatOptions(categoryOptions, columns));\n\t\t\thelp.push('');\n\t\t}\n\t}\n\treturn help.join('\\n');\n}\n\nexport function buildVersionMessage(version: string | undefined, commit: string | undefined): string {\n\treturn `${version || localize('unknownVersion', \"Unknown version\")}\\n${commit || localize('unknownCommit', \"Unknown commit\")}\\n${process.arch}`;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { IProcessEnvironment } from 'vs/base/common/platform';\nimport { localize } from 'vs/nls';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { ErrorReporter, OPTIONS, parseArgs } from 'vs/platform/environment/node/argv';\n\nconst MIN_MAX_MEMORY_SIZE_MB = 2048;\n\nfunction parseAndValidate(cmdLineArgs: string[], reportWarnings: boolean): NativeParsedArgs {\n\tconst errorReporter: ErrorReporter = {\n\t\tonUnknownOption: (id) => {\n\t\t\tconsole.warn(localize('unknownOption', \"Warning: '{0}' is not in the list of known options, but still passed to Electron/Chromium.\", id));\n\t\t},\n\t\tonMultipleValues: (id, val) => {\n\t\t\tconsole.warn(localize('multipleValues', \"Option '{0}' is defined more than once. Using value '{1}'.\", id, val));\n\t\t},\n\t\tonEmptyValue: (id) => {\n\t\t\tconsole.warn(localize('emptyValue', \"Option '{0}' requires a non empty value. Ignoring the option.\", id));\n\t\t},\n\t\tonDeprecatedOption: (deprecatedOption: string, message: string) => {\n\t\t\tconsole.warn(localize('deprecatedArgument', \"Option '{0}' is deprecated: {1}\", deprecatedOption, message));\n\t\t}\n\t};\n\n\tconst args = parseArgs(cmdLineArgs, OPTIONS, reportWarnings ? errorReporter : undefined);\n\tif (args.goto) {\n\t\targs._.forEach(arg => assert(/^(\\w:)?[^:]+(:\\d*){0,2}$/.test(arg), localize('gotoValidation', \"Arguments in `--goto` mode should be in the format of `FILE(:LINE(:CHARACTER))`.\")));\n\t}\n\n\tif (args['max-memory']) {\n\t\tassert(parseInt(args['max-memory']) >= MIN_MAX_MEMORY_SIZE_MB, `The max-memory argument cannot be specified lower than ${MIN_MAX_MEMORY_SIZE_MB} MB.`);\n\t}\n\n\treturn args;\n}\n\nfunction stripAppPath(argv: string[]): string[] | undefined {\n\tconst index = argv.findIndex(a => !/^-/.test(a));\n\n\tif (index > -1) {\n\t\treturn [...argv.slice(0, index), ...argv.slice(index + 1)];\n\t}\n\treturn undefined;\n}\n\n/**\n * Use this to parse raw code process.argv such as: `Electron . --verbose --wait`\n */\nexport function parseMainProcessArgv(processArgv: string[]): NativeParsedArgs {\n\tlet [, ...args] = processArgv;\n\n\t// If dev, remove the first non-option argument: it's the app location\n\tif (process.env['VSCODE_DEV']) {\n\t\targs = stripAppPath(args) || [];\n\t}\n\n\t// If called from CLI, don't report warnings as they are already reported.\n\tconst reportWarnings = !isLaunchedFromCli(process.env);\n\treturn parseAndValidate(args, reportWarnings);\n}\n\n/**\n * Use this to parse raw code CLI process.argv such as: `Electron cli.js . --verbose --wait`\n */\nexport function parseCLIProcessArgv(processArgv: string[]): NativeParsedArgs {\n\tconst [, , ...args] = processArgv; // remove the first non-option argument: it's always the app location\n\n\treturn parseAndValidate(args, true);\n}\n\nexport function addArg(argv: string[], ...args: string[]): string[] {\n\tconst endOfArgsMarkerIndex = argv.indexOf('--');\n\tif (endOfArgsMarkerIndex === -1) {\n\t\targv.push(...args);\n\t} else {\n\t\t// if the we have an argument \"--\" (end of argument marker)\n\t\t// we cannot add arguments at the end. rather, we add\n\t\t// arguments before the \"--\" marker.\n\t\targv.splice(endOfArgsMarkerIndex, 0, ...args);\n\t}\n\n\treturn argv;\n}\n\nexport function isLaunchedFromCli(env: IProcessEnvironment): boolean {\n\treturn env['VSCODE_CLI'] === '1';\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/// <reference path=\"../../../../typings/require.d.ts\" />\n\n//@ts-check\n(function () {\n\t'use strict';\n\n\t/**\n\t * @typedef {import('../../environment/common/argv').NativeParsedArgs} NativeParsedArgs\n\t *\n\t * @param {typeof import('path')} path\n\t * @param {typeof import('os')} os\n\t * @param {string} productName\n\t * @param {string} cwd\n\t */\n\tfunction factory(path, os, productName, cwd) {\n\n\t\t/**\n\t\t * @param {NativeParsedArgs} cliArgs\n\t\t *\n\t\t * @returns {string}\n\t\t */\n\t\tfunction getUserDataPath(cliArgs) {\n\t\t\tconst userDataPath = doGetUserDataPath(cliArgs);\n\t\t\tconst pathsToResolve = [userDataPath];\n\n\t\t\t// If the user-data-path is not absolute, make\n\t\t\t// sure to resolve it against the passed in\n\t\t\t// current working directory. We cannot use the\n\t\t\t// node.js `path.resolve()` logic because it will\n\t\t\t// not pick up our `VSCODE_CWD` environment variable\n\t\t\t// (https://github.com/microsoft/vscode/issues/120269)\n\t\t\tif (!path.isAbsolute(userDataPath)) {\n\t\t\t\tpathsToResolve.unshift(cwd);\n\t\t\t}\n\n\t\t\treturn path.resolve(...pathsToResolve);\n\t\t}\n\n\t\t/**\n\t\t * @param {NativeParsedArgs} cliArgs\n\t\t *\n\t\t * @returns {string}\n\t\t */\n\t\tfunction doGetUserDataPath(cliArgs) {\n\n\t\t\t// 1. Support portable mode\n\t\t\tconst portablePath = process.env['VSCODE_PORTABLE'];\n\t\t\tif (portablePath) {\n\t\t\t\treturn path.join(portablePath, 'user-data');\n\t\t\t}\n\n\t\t\t// 2. Support global VSCODE_APPDATA environment variable\n\t\t\tlet appDataPath = process.env['VSCODE_APPDATA'];\n\t\t\tif (appDataPath) {\n\t\t\t\treturn path.join(appDataPath, productName);\n\t\t\t}\n\n\t\t\t// With Electron>=13 --user-data-dir switch will be propagated to\n\t\t\t// all processes https://github.com/electron/electron/blob/1897b14af36a02e9aa7e4d814159303441548251/shell/browser/electron_browser_client.cc#L546-L553\n\t\t\t// Check VSCODE_PORTABLE and VSCODE_APPDATA before this case to get correct values.\n\t\t\t// 3. Support explicit --user-data-dir\n\t\t\tconst cliPath = cliArgs['user-data-dir'];\n\t\t\tif (cliPath) {\n\t\t\t\treturn cliPath;\n\t\t\t}\n\n\t\t\t// 4. Otherwise check per platform\n\t\t\tswitch (process.platform) {\n\t\t\t\tcase 'win32':\n\t\t\t\t\tappDataPath = process.env['APPDATA'];\n\t\t\t\t\tif (!appDataPath) {\n\t\t\t\t\t\tconst userProfile = process.env['USERPROFILE'];\n\t\t\t\t\t\tif (typeof userProfile !== 'string') {\n\t\t\t\t\t\t\tthrow new Error('Windows: Unexpected undefined %USERPROFILE% environment variable');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tappDataPath = path.join(userProfile, 'AppData', 'Roaming');\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'darwin':\n\t\t\t\t\tappDataPath = path.join(os.homedir(), 'Library', 'Application Support');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'linux':\n\t\t\t\t\tappDataPath = process.env['XDG_CONFIG_HOME'] || path.join(os.homedir(), '.config');\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Platform not supported');\n\t\t\t}\n\n\t\t\treturn path.join(appDataPath, productName);\n\t\t}\n\n\t\treturn {\n\t\t\tgetUserDataPath\n\t\t};\n\t}\n\n\tif (typeof define === 'function') {\n\t\tdefine(__m[190/*vs/platform/environment/node/userDataPath*/], __M([0/*require*/,87/*path*/,28/*os*/,8/*vs/base/common/network*/,19/*vs/base/common/resources*/,27/*vs/base/common/process*/]), function (\n\t\t\trequire,\n\t\t\t/** @type {typeof import('path')} */ path,\n\t\t\t/** @type {typeof import('os')} */ os,\n\t\t\t/** @type {typeof import('../../../base/common/network')} */ network,\n\t\t\t/** @type {typeof import(\"../../../base/common/resources\")} */ resources,\n\t\t\t/** @type {typeof import(\"../../../base/common/process\")} */ process\n\t\t) {\n\t\t\tconst rootPath = resources.dirname(network.FileAccess.asFileUri('', require));\n\t\t\tconst pkg = require.__$__nodeRequire(resources.joinPath(rootPath, 'package.json').fsPath);\n\n\t\t\treturn factory(path, os, pkg.name, process.cwd());\n\t\t}); // amd\n\t} else if (typeof module === 'object' && typeof module.exports === 'object') {\n\t\tconst pkg = require('../../../../../package.json');\n\t\tconst path = require('path');\n\t\tconst os = require('os');\n\n\t\tmodule.exports = factory(path, os, pkg.name, process.env['VSCODE_CWD'] || process.cwd()); // commonjs\n\t} else {\n\t\tthrow new Error('Unknown context');\n\t}\n}());\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { homedir, tmpdir } from 'os';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { AbstractNativeEnvironmentService } from 'vs/platform/environment/common/environmentService';\nimport { getUserDataPath } from 'vs/platform/environment/node/userDataPath';\nimport { IProductService } from 'vs/platform/product/common/productService';\n\nexport class NativeEnvironmentService extends AbstractNativeEnvironmentService {\n\n\tconstructor(args: NativeParsedArgs, productService: IProductService) {\n\t\tsuper(args, {\n\t\t\thomeDir: homedir(),\n\t\t\ttmpDir: tmpdir(),\n\t\t\tuserDataDir: getUserDataPath(args)\n\t\t}, productService);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isEqualOrParent, joinPath } from 'vs/base/common/resources';\nimport Severity from 'vs/base/common/severity';\nimport { URI } from 'vs/base/common/uri';\nimport * as nls from 'vs/nls';\nimport * as semver from 'vs/base/common/semver/semver';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\nexport interface IParsedVersion {\n\thasCaret: boolean;\n\thasGreaterEquals: boolean;\n\tmajorBase: number;\n\tmajorMustEqual: boolean;\n\tminorBase: number;\n\tminorMustEqual: boolean;\n\tpatchBase: number;\n\tpatchMustEqual: boolean;\n\tpreRelease: string | null;\n}\n\nexport interface INormalizedVersion {\n\tmajorBase: number;\n\tmajorMustEqual: boolean;\n\tminorBase: number;\n\tminorMustEqual: boolean;\n\tpatchBase: number;\n\tpatchMustEqual: boolean;\n\tnotBefore: number; /* milliseconds timestamp, or 0 */\n\tisMinimum: boolean;\n}\n\nconst VERSION_REGEXP = /^(\\^|>=)?((\\d+)|x)\\.((\\d+)|x)\\.((\\d+)|x)(\\-.*)?$/;\nconst NOT_BEFORE_REGEXP = /^-(\\d{4})(\\d{2})(\\d{2})$/;\n\nexport function isValidVersionStr(version: string): boolean {\n\tversion = version.trim();\n\treturn (version === '*' || VERSION_REGEXP.test(version));\n}\n\nexport function parseVersion(version: string): IParsedVersion | null {\n\tif (!isValidVersionStr(version)) {\n\t\treturn null;\n\t}\n\n\tversion = version.trim();\n\n\tif (version === '*') {\n\t\treturn {\n\t\t\thasCaret: false,\n\t\t\thasGreaterEquals: false,\n\t\t\tmajorBase: 0,\n\t\t\tmajorMustEqual: false,\n\t\t\tminorBase: 0,\n\t\t\tminorMustEqual: false,\n\t\t\tpatchBase: 0,\n\t\t\tpatchMustEqual: false,\n\t\t\tpreRelease: null\n\t\t};\n\t}\n\n\tconst m = version.match(VERSION_REGEXP);\n\tif (!m) {\n\t\treturn null;\n\t}\n\treturn {\n\t\thasCaret: m[1] === '^',\n\t\thasGreaterEquals: m[1] === '>=',\n\t\tmajorBase: m[2] === 'x' ? 0 : parseInt(m[2], 10),\n\t\tmajorMustEqual: (m[2] === 'x' ? false : true),\n\t\tminorBase: m[4] === 'x' ? 0 : parseInt(m[4], 10),\n\t\tminorMustEqual: (m[4] === 'x' ? false : true),\n\t\tpatchBase: m[6] === 'x' ? 0 : parseInt(m[6], 10),\n\t\tpatchMustEqual: (m[6] === 'x' ? false : true),\n\t\tpreRelease: m[8] || null\n\t};\n}\n\nexport function normalizeVersion(version: IParsedVersion | null): INormalizedVersion | null {\n\tif (!version) {\n\t\treturn null;\n\t}\n\n\tconst majorBase = version.majorBase;\n\tconst majorMustEqual = version.majorMustEqual;\n\tconst minorBase = version.minorBase;\n\tlet minorMustEqual = version.minorMustEqual;\n\tconst patchBase = version.patchBase;\n\tlet patchMustEqual = version.patchMustEqual;\n\n\tif (version.hasCaret) {\n\t\tif (majorBase === 0) {\n\t\t\tpatchMustEqual = false;\n\t\t} else {\n\t\t\tminorMustEqual = false;\n\t\t\tpatchMustEqual = false;\n\t\t}\n\t}\n\n\tlet notBefore = 0;\n\tif (version.preRelease) {\n\t\tconst match = NOT_BEFORE_REGEXP.exec(version.preRelease);\n\t\tif (match) {\n\t\t\tconst [, year, month, day] = match;\n\t\t\tnotBefore = Date.UTC(Number(year), Number(month) - 1, Number(day));\n\t\t}\n\t}\n\n\treturn {\n\t\tmajorBase: majorBase,\n\t\tmajorMustEqual: majorMustEqual,\n\t\tminorBase: minorBase,\n\t\tminorMustEqual: minorMustEqual,\n\t\tpatchBase: patchBase,\n\t\tpatchMustEqual: patchMustEqual,\n\t\tisMinimum: version.hasGreaterEquals,\n\t\tnotBefore,\n\t};\n}\n\nexport function isValidVersion(_inputVersion: string | INormalizedVersion, _inputDate: ProductDate, _desiredVersion: string | INormalizedVersion): boolean {\n\tlet version: INormalizedVersion | null;\n\tif (typeof _inputVersion === 'string') {\n\t\tversion = normalizeVersion(parseVersion(_inputVersion));\n\t} else {\n\t\tversion = _inputVersion;\n\t}\n\n\tlet productTs: number | undefined;\n\tif (_inputDate instanceof Date) {\n\t\tproductTs = _inputDate.getTime();\n\t} else if (typeof _inputDate === 'string') {\n\t\tproductTs = new Date(_inputDate).getTime();\n\t}\n\n\tlet desiredVersion: INormalizedVersion | null;\n\tif (typeof _desiredVersion === 'string') {\n\t\tdesiredVersion = normalizeVersion(parseVersion(_desiredVersion));\n\t} else {\n\t\tdesiredVersion = _desiredVersion;\n\t}\n\n\tif (!version || !desiredVersion) {\n\t\treturn false;\n\t}\n\n\tconst majorBase = version.majorBase;\n\tconst minorBase = version.minorBase;\n\tconst patchBase = version.patchBase;\n\n\tlet desiredMajorBase = desiredVersion.majorBase;\n\tlet desiredMinorBase = desiredVersion.minorBase;\n\tlet desiredPatchBase = desiredVersion.patchBase;\n\tconst desiredNotBefore = desiredVersion.notBefore;\n\n\tlet majorMustEqual = desiredVersion.majorMustEqual;\n\tlet minorMustEqual = desiredVersion.minorMustEqual;\n\tlet patchMustEqual = desiredVersion.patchMustEqual;\n\n\tif (desiredVersion.isMinimum) {\n\t\tif (majorBase > desiredMajorBase) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (majorBase < desiredMajorBase) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (minorBase > desiredMinorBase) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (minorBase < desiredMinorBase) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (productTs && productTs < desiredNotBefore) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn patchBase >= desiredPatchBase;\n\t}\n\n\t// Anything < 1.0.0 is compatible with >= 1.0.0, except exact matches\n\tif (majorBase === 1 && desiredMajorBase === 0 && (!majorMustEqual || !minorMustEqual || !patchMustEqual)) {\n\t\tdesiredMajorBase = 1;\n\t\tdesiredMinorBase = 0;\n\t\tdesiredPatchBase = 0;\n\t\tmajorMustEqual = true;\n\t\tminorMustEqual = false;\n\t\tpatchMustEqual = false;\n\t}\n\n\tif (majorBase < desiredMajorBase) {\n\t\t// smaller major version\n\t\treturn false;\n\t}\n\n\tif (majorBase > desiredMajorBase) {\n\t\t// higher major version\n\t\treturn (!majorMustEqual);\n\t}\n\n\t// at this point, majorBase are equal\n\n\tif (minorBase < desiredMinorBase) {\n\t\t// smaller minor version\n\t\treturn false;\n\t}\n\n\tif (minorBase > desiredMinorBase) {\n\t\t// higher minor version\n\t\treturn (!minorMustEqual);\n\t}\n\n\t// at this point, minorBase are equal\n\n\tif (patchBase < desiredPatchBase) {\n\t\t// smaller patch version\n\t\treturn false;\n\t}\n\n\tif (patchBase > desiredPatchBase) {\n\t\t// higher patch version\n\t\treturn (!patchMustEqual);\n\t}\n\n\t// at this point, patchBase are equal\n\n\tif (productTs && productTs < desiredNotBefore) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\ntype ProductDate = string | Date | undefined;\n\nexport function validateExtensionManifest(productVersion: string, productDate: ProductDate, extensionLocation: URI, extensionManifest: IExtensionManifest, extensionIsBuiltin: boolean): readonly [Severity, string][] {\n\tconst validations: [Severity, string][] = [];\n\tif (typeof extensionManifest.publisher !== 'undefined' && typeof extensionManifest.publisher !== 'string') {\n\t\tvalidations.push([Severity.Error, nls.localize('extensionDescription.publisher', \"property publisher must be of type `string`.\")]);\n\t\treturn validations;\n\t}\n\tif (typeof extensionManifest.name !== 'string') {\n\t\tvalidations.push([Severity.Error, nls.localize('extensionDescription.name', \"property `{0}` is mandatory and must be of type `string`\", 'name')]);\n\t\treturn validations;\n\t}\n\tif (typeof extensionManifest.version !== 'string') {\n\t\tvalidations.push([Severity.Error, nls.localize('extensionDescription.version', \"property `{0}` is mandatory and must be of type `string`\", 'version')]);\n\t\treturn validations;\n\t}\n\tif (!extensionManifest.engines) {\n\t\tvalidations.push([Severity.Error, nls.localize('extensionDescription.engines', \"property `{0}` is mandatory and must be of type `object`\", 'engines')]);\n\t\treturn validations;\n\t}\n\tif (typeof extensionManifest.engines.vscode !== 'string') {\n\t\tvalidations.push([Severity.Error, nls.localize('extensionDescription.engines.vscode', \"property `{0}` is mandatory and must be of type `string`\", 'engines.vscode')]);\n\t\treturn validations;\n\t}\n\tif (typeof extensionManifest.extensionDependencies !== 'undefined') {\n\t\tif (!isStringArray(extensionManifest.extensionDependencies)) {\n\t\t\tvalidations.push([Severity.Error, nls.localize('extensionDescription.extensionDependencies', \"property `{0}` can be omitted or must be of type `string[]`\", 'extensionDependencies')]);\n\t\t\treturn validations;\n\t\t}\n\t}\n\tif (typeof extensionManifest.activationEvents !== 'undefined') {\n\t\tif (!isStringArray(extensionManifest.activationEvents)) {\n\t\t\tvalidations.push([Severity.Error, nls.localize('extensionDescription.activationEvents1', \"property `{0}` can be omitted or must be of type `string[]`\", 'activationEvents')]);\n\t\t\treturn validations;\n\t\t}\n\t\tif (typeof extensionManifest.main === 'undefined' && typeof extensionManifest.browser === 'undefined') {\n\t\t\tvalidations.push([Severity.Error, nls.localize('extensionDescription.activationEvents2', \"properties `{0}` and `{1}` must both be specified or must both be omitted\", 'activationEvents', 'main')]);\n\t\t\treturn validations;\n\t\t}\n\t}\n\tif (typeof extensionManifest.extensionKind !== 'undefined') {\n\t\tif (typeof extensionManifest.main === 'undefined') {\n\t\t\tvalidations.push([Severity.Warning, nls.localize('extensionDescription.extensionKind', \"property `{0}` can be defined only if property `main` is also defined.\", 'extensionKind')]);\n\t\t\t// not a failure case\n\t\t}\n\t}\n\tif (typeof extensionManifest.main !== 'undefined') {\n\t\tif (typeof extensionManifest.main !== 'string') {\n\t\t\tvalidations.push([Severity.Error, nls.localize('extensionDescription.main1', \"property `{0}` can be omitted or must be of type `string`\", 'main')]);\n\t\t\treturn validations;\n\t\t} else {\n\t\t\tconst mainLocation = joinPath(extensionLocation, extensionManifest.main);\n\t\t\tif (!isEqualOrParent(mainLocation, extensionLocation)) {\n\t\t\t\tvalidations.push([Severity.Warning, nls.localize('extensionDescription.main2', \"Expected `main` ({0}) to be included inside extension's folder ({1}). This might make the extension non-portable.\", mainLocation.path, extensionLocation.path)]);\n\t\t\t\t// not a failure case\n\t\t\t}\n\t\t}\n\t\tif (typeof extensionManifest.activationEvents === 'undefined') {\n\t\t\tvalidations.push([Severity.Error, nls.localize('extensionDescription.main3', \"properties `{0}` and `{1}` must both be specified or must both be omitted\", 'activationEvents', 'main')]);\n\t\t\treturn validations;\n\t\t}\n\t}\n\tif (typeof extensionManifest.browser !== 'undefined') {\n\t\tif (typeof extensionManifest.browser !== 'string') {\n\t\t\tvalidations.push([Severity.Error, nls.localize('extensionDescription.browser1', \"property `{0}` can be omitted or must be of type `string`\", 'browser')]);\n\t\t\treturn validations;\n\t\t} else {\n\t\t\tconst browserLocation = joinPath(extensionLocation, extensionManifest.browser);\n\t\t\tif (!isEqualOrParent(browserLocation, extensionLocation)) {\n\t\t\t\tvalidations.push([Severity.Warning, nls.localize('extensionDescription.browser2', \"Expected `browser` ({0}) to be included inside extension's folder ({1}). This might make the extension non-portable.\", browserLocation.path, extensionLocation.path)]);\n\t\t\t\t// not a failure case\n\t\t\t}\n\t\t}\n\t\tif (typeof extensionManifest.activationEvents === 'undefined') {\n\t\t\tvalidations.push([Severity.Error, nls.localize('extensionDescription.browser3', \"properties `{0}` and `{1}` must both be specified or must both be omitted\", 'activationEvents', 'browser')]);\n\t\t\treturn validations;\n\t\t}\n\t}\n\n\tif (!semver.valid(extensionManifest.version)) {\n\t\tvalidations.push([Severity.Error, nls.localize('notSemver', \"Extension version is not semver compatible.\")]);\n\t\treturn validations;\n\t}\n\n\tconst notices: string[] = [];\n\tconst isValid = isValidExtensionVersion(productVersion, productDate, extensionManifest, extensionIsBuiltin, notices);\n\tif (!isValid) {\n\t\tfor (const notice of notices) {\n\t\t\tvalidations.push([Severity.Error, notice]);\n\t\t}\n\t}\n\treturn validations;\n}\n\nexport function isValidExtensionVersion(productVersion: string, productDate: ProductDate, extensionManifest: IExtensionManifest, extensionIsBuiltin: boolean, notices: string[]): boolean {\n\n\tif (extensionIsBuiltin || (typeof extensionManifest.main === 'undefined' && typeof extensionManifest.browser === 'undefined')) {\n\t\t// No version check for builtin or declarative extensions\n\t\treturn true;\n\t}\n\n\treturn isVersionValid(productVersion, productDate, extensionManifest.engines.vscode, notices);\n}\n\nexport function isEngineValid(engine: string, version: string, date: ProductDate): boolean {\n\t// TODO@joao: discuss with alex '*' doesn't seem to be a valid engine version\n\treturn engine === '*' || isVersionValid(version, date, engine);\n}\n\nfunction isVersionValid(currentVersion: string, date: ProductDate, requestedVersion: string, notices: string[] = []): boolean {\n\n\tconst desiredVersion = normalizeVersion(parseVersion(requestedVersion));\n\tif (!desiredVersion) {\n\t\tnotices.push(nls.localize('versionSyntax', \"Could not parse `engines.vscode` value {0}. Please use, for example: ^1.22.0, ^1.22.x, etc.\", requestedVersion));\n\t\treturn false;\n\t}\n\n\t// enforce that a breaking API version is specified.\n\t// for 0.X.Y, that means up to 0.X must be specified\n\t// otherwise for Z.X.Y, that means Z must be specified\n\tif (desiredVersion.majorBase === 0) {\n\t\t// force that major and minor must be specific\n\t\tif (!desiredVersion.majorMustEqual || !desiredVersion.minorMustEqual) {\n\t\t\tnotices.push(nls.localize('versionSpecificity1', \"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions before 1.0.0, please define at a minimum the major and minor desired version. E.g. ^0.10.0, 0.10.x, 0.11.0, etc.\", requestedVersion));\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\t// force that major must be specific\n\t\tif (!desiredVersion.majorMustEqual) {\n\t\t\tnotices.push(nls.localize('versionSpecificity2', \"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions after 1.0.0, please define at a minimum the major desired version. E.g. ^1.10.0, 1.10.x, 1.x.x, 2.x.x, etc.\", requestedVersion));\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tif (!isValidVersion(currentVersion, date, desiredVersion)) {\n\t\tnotices.push(nls.localize('versionMismatch', \"Extension is not compatible with Code {0}. Extension requires: {1}.\", currentVersion, requestedVersion));\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\nfunction isStringArray(arr: string[]): boolean {\n\tif (!Array.isArray(arr)) {\n\t\treturn false;\n\t}\n\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\tif (typeof arr[i] !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { generateUuid, isUUID } from 'vs/base/common/uuid';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\n\nexport async function getServiceMachineId(environmentService: IEnvironmentService, fileService: IFileService, storageService: IStorageService | undefined): Promise<string> {\n\tlet uuid: string | null = storageService ? storageService.get('storage.serviceMachineId', StorageScope.APPLICATION) || null : null;\n\tif (uuid) {\n\t\treturn uuid;\n\t}\n\ttry {\n\t\tconst contents = await fileService.readFile(environmentService.serviceMachineIdResource);\n\t\tconst value = contents.value.toString();\n\t\tuuid = isUUID(value) ? value : null;\n\t} catch (e) {\n\t\tuuid = null;\n\t}\n\n\tif (!uuid) {\n\t\tuuid = generateUuid();\n\t\ttry {\n\t\t\tawait fileService.writeFile(environmentService.serviceMachineIdResource, VSBuffer.fromString(uuid));\n\t\t} catch (error) {\n\t\t\t//noop\n\t\t}\n\t}\n\n\tstorageService?.store('storage.serviceMachineId', uuid, StorageScope.APPLICATION, StorageTarget.MACHINE);\n\n\treturn uuid;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport class SyncDescriptor<T> {\n\n\treadonly ctor: any;\n\treadonly staticArguments: any[];\n\treadonly supportsDelayedInstantiation: boolean;\n\n\tconstructor(ctor: new (...args: any[]) => T, staticArguments: any[] = [], supportsDelayedInstantiation: boolean = false) {\n\t\tthis.ctor = ctor;\n\t\tthis.staticArguments = staticArguments;\n\t\tthis.supportsDelayedInstantiation = supportsDelayedInstantiation;\n\t}\n}\n\nexport interface SyncDescriptor0<T> {\n\treadonly ctor: new () => T;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { SyncDescriptor } from './descriptors';\nimport { BrandedService, ServiceIdentifier } from './instantiation';\n\nconst _registry: [ServiceIdentifier<any>, SyncDescriptor<any>][] = [];\n\nexport function registerSingleton<T, Services extends BrandedService[]>(id: ServiceIdentifier<T>, ctor: new (...services: Services) => T, supportsDelayedInstantiation?: boolean): void;\nexport function registerSingleton<T, Services extends BrandedService[]>(id: ServiceIdentifier<T>, descriptor: SyncDescriptor<any>): void;\nexport function registerSingleton<T, Services extends BrandedService[]>(id: ServiceIdentifier<T>, ctorOrDescriptor: { new(...services: Services): T } | SyncDescriptor<any>, supportsDelayedInstantiation?: boolean): void {\n\tif (!(ctorOrDescriptor instanceof SyncDescriptor)) {\n\t\tctorOrDescriptor = new SyncDescriptor<T>(ctorOrDescriptor as new (...args: any[]) => T, [], supportsDelayedInstantiation);\n\t}\n\n\t_registry.push([id, ctorOrDescriptor]);\n}\n\nexport function getSingletonServiceDescriptors(): [ServiceIdentifier<any>, SyncDescriptor<any>][] {\n\treturn _registry;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport class Node<T> {\n\n\treadonly data: T;\n\treadonly incoming = new Map<string, Node<T>>();\n\treadonly outgoing = new Map<string, Node<T>>();\n\n\tconstructor(data: T) {\n\t\tthis.data = data;\n\t}\n}\n\nexport class Graph<T> {\n\n\tprivate readonly _nodes = new Map<string, Node<T>>();\n\n\tconstructor(private readonly _hashFn: (element: T) => string) {\n\t\t// empty\n\t}\n\n\troots(): Node<T>[] {\n\t\tconst ret: Node<T>[] = [];\n\t\tfor (const node of this._nodes.values()) {\n\t\t\tif (node.outgoing.size === 0) {\n\t\t\t\tret.push(node);\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tinsertEdge(from: T, to: T): void {\n\t\tconst fromNode = this.lookupOrInsertNode(from);\n\t\tconst toNode = this.lookupOrInsertNode(to);\n\n\t\tfromNode.outgoing.set(this._hashFn(to), toNode);\n\t\ttoNode.incoming.set(this._hashFn(from), fromNode);\n\t}\n\n\tremoveNode(data: T): void {\n\t\tconst key = this._hashFn(data);\n\t\tthis._nodes.delete(key);\n\t\tfor (const node of this._nodes.values()) {\n\t\t\tnode.outgoing.delete(key);\n\t\t\tnode.incoming.delete(key);\n\t\t}\n\t}\n\n\tlookupOrInsertNode(data: T): Node<T> {\n\t\tconst key = this._hashFn(data);\n\t\tlet node = this._nodes.get(key);\n\n\t\tif (!node) {\n\t\t\tnode = new Node(data);\n\t\t\tthis._nodes.set(key, node);\n\t\t}\n\n\t\treturn node;\n\t}\n\n\tlookup(data: T): Node<T> | undefined {\n\t\treturn this._nodes.get(this._hashFn(data));\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._nodes.size === 0;\n\t}\n\n\ttoString(): string {\n\t\tconst data: string[] = [];\n\t\tfor (const [key, value] of this._nodes) {\n\t\t\tdata.push(`${key}, (incoming)[${[...value.incoming.keys()].join(', ')}], (outgoing)[${[...value.outgoing.keys()].join(',')}]`);\n\n\t\t}\n\t\treturn data.join('\\n');\n\t}\n\n\t/**\n\t * This is brute force and slow and **only** be used\n\t * to trouble shoot.\n\t */\n\tfindCycleSlow() {\n\t\tfor (const [id, node] of this._nodes) {\n\t\t\tconst seen = new Set<string>([id]);\n\t\t\tconst res = this._findCycle(node, seen);\n\t\t\tif (res) {\n\t\t\t\treturn res;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate _findCycle(node: Node<T>, seen: Set<string>): string | undefined {\n\t\tfor (const [id, outgoing] of node.outgoing) {\n\t\t\tif (seen.has(id)) {\n\t\t\t\treturn [...seen, id].join(' -> ');\n\t\t\t}\n\t\t\tseen.add(id);\n\t\t\tconst value = this._findCycle(outgoing, seen);\n\t\t\tif (value) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tseen.delete(id);\n\t\t}\n\t\treturn undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as descriptors from './descriptors';\nimport { ServiceCollection } from './serviceCollection';\n\n// ------ internal util\n\nexport namespace _util {\n\n\texport const serviceIds = new Map<string, ServiceIdentifier<any>>();\n\n\texport const DI_TARGET = '$di$target';\n\texport const DI_DEPENDENCIES = '$di$dependencies';\n\n\texport function getServiceDependencies(ctor: any): { id: ServiceIdentifier<any>; index: number }[] {\n\t\treturn ctor[DI_DEPENDENCIES] || [];\n\t}\n}\n\n// --- interfaces ------\n\nexport type BrandedService = { _serviceBrand: undefined };\n\nexport interface IConstructorSignature<T, Args extends any[] = []> {\n\tnew <Services extends BrandedService[]>(...args: [...Args, ...Services]): T;\n}\n\nexport interface ServicesAccessor {\n\tget<T>(id: ServiceIdentifier<T>): T;\n}\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('instantiationService');\n\n/**\n * Given a list of arguments as a tuple, attempt to extract the leading, non-service arguments\n * to their own tuple.\n */\ntype GetLeadingNonServiceArgs<Args> =\n\tArgs extends [...BrandedService[]] ? []\n\t: Args extends [infer A, ...BrandedService[]] ? [A]\n\t: Args extends [infer A, ...infer R] ? [A, ...GetLeadingNonServiceArgs<R>]\n\t: never;\n\nexport interface IInstantiationService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Synchronously creates an instance that is denoted by the descriptor\n\t */\n\tcreateInstance<T>(descriptor: descriptors.SyncDescriptor0<T>): T;\n\tcreateInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(ctor: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n\n\t/**\n\t * Calls a function with a service accessor.\n\t */\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R;\n\n\t/**\n\t * Creates a child of this service which inherits all current services\n\t * and adds/overwrites the given services.\n\t */\n\tcreateChild(services: ServiceCollection): IInstantiationService;\n}\n\n\n/**\n * Identifies a service of type `T`.\n */\nexport interface ServiceIdentifier<T> {\n\t(...args: any[]): void;\n\ttype: T;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n\tif ((target as any)[_util.DI_TARGET] === target) {\n\t\t(target as any)[_util.DI_DEPENDENCIES].push({ id, index });\n\t} else {\n\t\t(target as any)[_util.DI_DEPENDENCIES] = [{ id, index }];\n\t\t(target as any)[_util.DI_TARGET] = target;\n\t}\n}\n\n/**\n * The *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator<T>(serviceId: string): ServiceIdentifier<T> {\n\n\tif (_util.serviceIds.has(serviceId)) {\n\t\treturn _util.serviceIds.get(serviceId)!;\n\t}\n\n\tconst id = <any>function (target: Function, key: string, index: number): any {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@IServiceName-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(id, target, index);\n\t};\n\n\tid.toString = () => serviceId;\n\n\t_util.serviceIds.set(serviceId, id);\n\treturn id;\n}\n\nexport function refineServiceDecorator<T1, T extends T1>(serviceIdentifier: ServiceIdentifier<T1>): ServiceIdentifier<T> {\n\treturn <ServiceIdentifier<T>>serviceIdentifier;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport * as types from 'vs/base/common/types';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\n\nexport const IConfigurationService = createDecorator<IConfigurationService>('configurationService');\n\nexport function isConfigurationOverrides(thing: any): thing is IConfigurationOverrides {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& (!thing.overrideIdentifier || typeof thing.overrideIdentifier === 'string')\n\t\t&& (!thing.resource || thing.resource instanceof URI);\n}\n\nexport interface IConfigurationOverrides {\n\toverrideIdentifier?: string | null;\n\tresource?: URI | null;\n}\n\nexport function isConfigurationUpdateOverrides(thing: any): thing is IConfigurationUpdateOverrides {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& (!thing.overrideIdentifiers || types.isArray(thing.overrideIdentifiers))\n\t\t&& !thing.overrideIdentifier\n\t\t&& (!thing.resource || thing.resource instanceof URI);\n}\n\nexport type IConfigurationUpdateOverrides = Omit<IConfigurationOverrides, 'overrideIdentifier'> & { overrideIdentifiers?: string[] | null };\n\nexport const enum ConfigurationTarget {\n\tAPPLICATION = 1,\n\tUSER,\n\tUSER_LOCAL,\n\tUSER_REMOTE,\n\tWORKSPACE,\n\tWORKSPACE_FOLDER,\n\tDEFAULT,\n\tMEMORY\n}\nexport function ConfigurationTargetToString(configurationTarget: ConfigurationTarget) {\n\tswitch (configurationTarget) {\n\t\tcase ConfigurationTarget.APPLICATION: return 'APPLICATION';\n\t\tcase ConfigurationTarget.USER: return 'USER';\n\t\tcase ConfigurationTarget.USER_LOCAL: return 'USER_LOCAL';\n\t\tcase ConfigurationTarget.USER_REMOTE: return 'USER_REMOTE';\n\t\tcase ConfigurationTarget.WORKSPACE: return 'WORKSPACE';\n\t\tcase ConfigurationTarget.WORKSPACE_FOLDER: return 'WORKSPACE_FOLDER';\n\t\tcase ConfigurationTarget.DEFAULT: return 'DEFAULT';\n\t\tcase ConfigurationTarget.MEMORY: return 'MEMORY';\n\t}\n}\n\nexport interface IConfigurationChange {\n\tkeys: string[];\n\toverrides: [string, string[]][];\n}\n\nexport interface IConfigurationChangeEvent {\n\n\treadonly source: ConfigurationTarget;\n\treadonly affectedKeys: string[];\n\treadonly change: IConfigurationChange;\n\n\taffectsConfiguration(configuration: string, overrides?: IConfigurationOverrides): boolean;\n\n\t// Following data is used for telemetry\n\treadonly sourceConfig: any;\n}\n\nexport interface IConfigurationValue<T> {\n\n\treadonly defaultValue?: T;\n\treadonly applicationValue?: T;\n\treadonly userValue?: T;\n\treadonly userLocalValue?: T;\n\treadonly userRemoteValue?: T;\n\treadonly workspaceValue?: T;\n\treadonly workspaceFolderValue?: T;\n\treadonly memoryValue?: T;\n\treadonly policyValue?: T;\n\treadonly value?: T;\n\n\treadonly default?: { value?: T; override?: T };\n\treadonly application?: { value?: T; override?: T };\n\treadonly user?: { value?: T; override?: T };\n\treadonly userLocal?: { value?: T; override?: T };\n\treadonly userRemote?: { value?: T; override?: T };\n\treadonly workspace?: { value?: T; override?: T };\n\treadonly workspaceFolder?: { value?: T; override?: T };\n\treadonly memory?: { value?: T; override?: T };\n\treadonly policy?: { value?: T };\n\n\treadonly overrideIdentifiers?: string[];\n}\n\nexport interface IConfigurationService {\n\treadonly _serviceBrand: undefined;\n\n\tonDidChangeConfiguration: Event<IConfigurationChangeEvent>;\n\n\tgetConfigurationData(): IConfigurationData | null;\n\n\t/**\n\t * Fetches the value of the section for the given overrides.\n\t * Value can be of native type or an object keyed off the section name.\n\t *\n\t * @param section - Section of the configuraion. Can be `null` or `undefined`.\n\t * @param overrides - Overrides that has to be applied while fetching\n\t *\n\t */\n\tgetValue<T>(): T;\n\tgetValue<T>(section: string): T;\n\tgetValue<T>(overrides: IConfigurationOverrides): T;\n\tgetValue<T>(section: string, overrides: IConfigurationOverrides): T;\n\n\t/**\n\t * Update a configuration value.\n\t *\n\t * Use `target` to update the configuration in a specific `ConfigurationTarget`.\n\t *\n\t * Use `overrides` to update the configuration for a resource or for override identifiers or both.\n\t *\n\t * Passing a resource through overrides will update the configuration in the workspace folder containing that resource.\n\t *\n\t * *Note 1:* Updating configuraiton to a default value will remove the configuration from the requested target. If not target is passed, it will be removed from all writeable targets.\n\t *\n\t * *Note 2:* Use `undefined` value to remove the configuration from the given target. If not target is passed, it will be removed from all writeable targets.\n\t *\n\t * Use `donotNotifyError` and set it to `true` to surpresss errors.\n\t *\n\t * @param key setting to be updated\n\t * @param value The new value\n\t */\n\tupdateValue(key: string, value: any): Promise<void>;\n\tupdateValue(key: string, value: any, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides | IConfigurationUpdateOverrides): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides | IConfigurationUpdateOverrides, target: ConfigurationTarget, donotNotifyError?: boolean): Promise<void>;\n\n\tinspect<T>(key: string, overrides?: IConfigurationOverrides): IConfigurationValue<Readonly<T>>;\n\n\treloadConfiguration(target?: ConfigurationTarget | IWorkspaceFolder): Promise<void>;\n\n\tkeys(): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t\tmemory?: string[];\n\t};\n}\n\nexport interface IConfigurationModel {\n\tcontents: any;\n\tkeys: string[];\n\toverrides: IOverrides[];\n}\n\nexport interface IOverrides {\n\tkeys: string[];\n\tcontents: any;\n\tidentifiers: string[];\n}\n\nexport interface IConfigurationData {\n\tdefaults: IConfigurationModel;\n\tpolicy: IConfigurationModel;\n\tapplication: IConfigurationModel;\n\tuser: IConfigurationModel;\n\tworkspace: IConfigurationModel;\n\tfolders: [UriComponents, IConfigurationModel][];\n}\n\nexport interface IConfigurationCompareResult {\n\tadded: string[];\n\tremoved: string[];\n\tupdated: string[];\n\toverrides: [string, string[]][];\n}\n\nexport function toValuesTree(properties: { [qualifiedKey: string]: any }, conflictReporter: (message: string) => void): any {\n\tconst root = Object.create(null);\n\n\tfor (const key in properties) {\n\t\taddToValueTree(root, key, properties[key], conflictReporter);\n\t}\n\n\treturn root;\n}\n\nexport function addToValueTree(settingsTreeRoot: any, key: string, value: any, conflictReporter: (message: string) => void): void {\n\tconst segments = key.split('.');\n\tconst last = segments.pop()!;\n\n\tlet curr = settingsTreeRoot;\n\tfor (let i = 0; i < segments.length; i++) {\n\t\tconst s = segments[i];\n\t\tlet obj = curr[s];\n\t\tswitch (typeof obj) {\n\t\t\tcase 'undefined':\n\t\t\t\tobj = curr[s] = Object.create(null);\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconflictReporter(`Ignoring ${key} as ${segments.slice(0, i + 1).join('.')} is ${JSON.stringify(obj)}`);\n\t\t\t\treturn;\n\t\t}\n\t\tcurr = obj;\n\t}\n\n\tif (typeof curr === 'object' && curr !== null) {\n\t\ttry {\n\t\t\tcurr[last] = value; // workaround https://github.com/microsoft/vscode/issues/13606\n\t\t} catch (e) {\n\t\t\tconflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n\t\t}\n\t} else {\n\t\tconflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n\t}\n}\n\nexport function removeFromValueTree(valueTree: any, key: string): void {\n\tconst segments = key.split('.');\n\tdoRemoveFromValueTree(valueTree, segments);\n}\n\nfunction doRemoveFromValueTree(valueTree: any, segments: string[]): void {\n\tconst first = segments.shift()!;\n\tif (segments.length === 0) {\n\t\t// Reached last segment\n\t\tdelete valueTree[first];\n\t\treturn;\n\t}\n\n\tif (Object.keys(valueTree).indexOf(first) !== -1) {\n\t\tconst value = valueTree[first];\n\t\tif (typeof value === 'object' && !Array.isArray(value)) {\n\t\t\tdoRemoveFromValueTree(value, segments);\n\t\t\tif (Object.keys(value).length === 0) {\n\t\t\t\tdelete valueTree[first];\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * A helper function to get the configuration value with a specific settings path (e.g. config.some.setting)\n */\nexport function getConfigurationValue<T>(config: any, settingPath: string, defaultValue?: T): T {\n\tfunction accessSetting(config: any, path: string[]): any {\n\t\tlet current = config;\n\t\tfor (const component of path) {\n\t\t\tif (typeof current !== 'object' || current === null) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tcurrent = current[component];\n\t\t}\n\t\treturn <T>current;\n\t}\n\n\tconst path = settingPath.split('.');\n\tconst result = accessSetting(config, path);\n\n\treturn typeof result === 'undefined' ? defaultValue : result;\n}\n\nexport function merge(base: any, add: any, overwrite: boolean): void {\n\tObject.keys(add).forEach(key => {\n\t\tif (key !== '__proto__') {\n\t\t\tif (key in base) {\n\t\t\t\tif (types.isObject(base[key]) && types.isObject(add[key])) {\n\t\t\t\t\tmerge(base[key], add[key], overwrite);\n\t\t\t\t} else if (overwrite) {\n\t\t\t\t\tbase[key] = add[key];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbase[key] = add[key];\n\t\t\t}\n\t\t}\n\t});\n}\n\nexport function getMigratedSettingValue<T>(configurationService: IConfigurationService, currentSettingName: string, legacySettingName: string): T {\n\tconst setting = configurationService.inspect<T>(currentSettingName);\n\tconst legacySetting = configurationService.inspect<T>(legacySettingName);\n\n\tif (typeof setting.userValue !== 'undefined' || typeof setting.workspaceValue !== 'undefined' || typeof setting.workspaceFolderValue !== 'undefined') {\n\t\treturn setting.value!;\n\t} else if (typeof legacySetting.userValue !== 'undefined' || typeof legacySetting.workspaceValue !== 'undefined' || typeof legacySetting.workspaceFolderValue !== 'undefined') {\n\t\treturn legacySetting.value!;\n\t} else {\n\t\treturn setting.defaultValue!;\n\t}\n}\n\nexport function getLanguageTagSettingPlainKey(settingKey: string) {\n\treturn settingKey.replace(/[\\[\\]]/g, '');\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { isChrome, isEdge, isFirefox, isLinux, isMacintosh, isSafari, isWeb, isWindows } from 'vs/base/common/platform';\nimport { isFalsyOrWhitespace } from 'vs/base/common/strings';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nconst CONSTANT_VALUES = new Map<string, boolean>();\nCONSTANT_VALUES.set('false', false);\nCONSTANT_VALUES.set('true', true);\nCONSTANT_VALUES.set('isMac', isMacintosh);\nCONSTANT_VALUES.set('isLinux', isLinux);\nCONSTANT_VALUES.set('isWindows', isWindows);\nCONSTANT_VALUES.set('isWeb', isWeb);\nCONSTANT_VALUES.set('isMacNative', isMacintosh && !isWeb);\nCONSTANT_VALUES.set('isEdge', isEdge);\nCONSTANT_VALUES.set('isFirefox', isFirefox);\nCONSTANT_VALUES.set('isChrome', isChrome);\nCONSTANT_VALUES.set('isSafari', isSafari);\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport const enum ContextKeyExprType {\n\tFalse = 0,\n\tTrue = 1,\n\tDefined = 2,\n\tNot = 3,\n\tEquals = 4,\n\tNotEquals = 5,\n\tAnd = 6,\n\tRegex = 7,\n\tNotRegex = 8,\n\tOr = 9,\n\tIn = 10,\n\tNotIn = 11,\n\tGreater = 12,\n\tGreaterEquals = 13,\n\tSmaller = 14,\n\tSmallerEquals = 15,\n}\n\nexport interface IContextKeyExprMapper {\n\tmapDefined(key: string): ContextKeyExpression;\n\tmapNot(key: string): ContextKeyExpression;\n\tmapEquals(key: string, value: any): ContextKeyExpression;\n\tmapNotEquals(key: string, value: any): ContextKeyExpression;\n\tmapGreater(key: string, value: any): ContextKeyExpression;\n\tmapGreaterEquals(key: string, value: any): ContextKeyExpression;\n\tmapSmaller(key: string, value: any): ContextKeyExpression;\n\tmapSmallerEquals(key: string, value: any): ContextKeyExpression;\n\tmapRegex(key: string, regexp: RegExp | null): ContextKeyRegexExpr;\n\tmapIn(key: string, valueKey: string): ContextKeyInExpr;\n\tmapNotIn(key: string, valueKey: string): ContextKeyNotInExpr;\n}\n\nexport interface IContextKeyExpression {\n\tcmp(other: ContextKeyExpression): number;\n\tequals(other: ContextKeyExpression): boolean;\n\tsubstituteConstants(): ContextKeyExpression | undefined;\n\tevaluate(context: IContext): boolean;\n\tserialize(): string;\n\tkeys(): string[];\n\tmap(mapFnc: IContextKeyExprMapper): ContextKeyExpression;\n\tnegate(): ContextKeyExpression;\n\n}\n\nexport type ContextKeyExpression = (\n\tContextKeyFalseExpr | ContextKeyTrueExpr | ContextKeyDefinedExpr | ContextKeyNotExpr\n\t| ContextKeyEqualsExpr | ContextKeyNotEqualsExpr | ContextKeyRegexExpr\n\t| ContextKeyNotRegexExpr | ContextKeyAndExpr | ContextKeyOrExpr | ContextKeyInExpr\n\t| ContextKeyNotInExpr | ContextKeyGreaterExpr | ContextKeyGreaterEqualsExpr\n\t| ContextKeySmallerExpr | ContextKeySmallerEqualsExpr\n);\n\nexport abstract class ContextKeyExpr {\n\n\tpublic static false(): ContextKeyExpression {\n\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t}\n\tpublic static true(): ContextKeyExpression {\n\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t}\n\tpublic static has(key: string): ContextKeyExpression {\n\t\treturn ContextKeyDefinedExpr.create(key);\n\t}\n\tpublic static equals(key: string, value: any): ContextKeyExpression {\n\t\treturn ContextKeyEqualsExpr.create(key, value);\n\t}\n\tpublic static notEquals(key: string, value: any): ContextKeyExpression {\n\t\treturn ContextKeyNotEqualsExpr.create(key, value);\n\t}\n\tpublic static regex(key: string, value: RegExp): ContextKeyExpression {\n\t\treturn ContextKeyRegexExpr.create(key, value);\n\t}\n\tpublic static in(key: string, value: string): ContextKeyExpression {\n\t\treturn ContextKeyInExpr.create(key, value);\n\t}\n\tpublic static notIn(key: string, value: string): ContextKeyExpression {\n\t\treturn ContextKeyNotInExpr.create(key, value);\n\t}\n\tpublic static not(key: string): ContextKeyExpression {\n\t\treturn ContextKeyNotExpr.create(key);\n\t}\n\tpublic static and(...expr: Array<ContextKeyExpression | undefined | null>): ContextKeyExpression | undefined {\n\t\treturn ContextKeyAndExpr.create(expr, null);\n\t}\n\tpublic static or(...expr: Array<ContextKeyExpression | undefined | null>): ContextKeyExpression | undefined {\n\t\treturn ContextKeyOrExpr.create(expr, null, true);\n\t}\n\tpublic static greater(key: string, value: number): ContextKeyExpression {\n\t\treturn ContextKeyGreaterExpr.create(key, value);\n\t}\n\tpublic static greaterEquals(key: string, value: number): ContextKeyExpression {\n\t\treturn ContextKeyGreaterEqualsExpr.create(key, value);\n\t}\n\tpublic static smaller(key: string, value: number): ContextKeyExpression {\n\t\treturn ContextKeySmallerExpr.create(key, value);\n\t}\n\tpublic static smallerEquals(key: string, value: number): ContextKeyExpression {\n\t\treturn ContextKeySmallerEqualsExpr.create(key, value);\n\t}\n\n\tpublic static deserialize(serialized: string | null | undefined, strict: boolean = false): ContextKeyExpression | undefined {\n\t\tif (!serialized) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn this._deserializeOrExpression(serialized, strict);\n\t}\n\n\tprivate static _deserializeOrExpression(serialized: string, strict: boolean): ContextKeyExpression | undefined {\n\t\tconst pieces = serialized.split('||');\n\t\treturn ContextKeyOrExpr.create(pieces.map(p => this._deserializeAndExpression(p, strict)), null, true);\n\t}\n\n\tprivate static _deserializeAndExpression(serialized: string, strict: boolean): ContextKeyExpression | undefined {\n\t\tconst pieces = serialized.split('&&');\n\t\treturn ContextKeyAndExpr.create(pieces.map(p => this._deserializeOne(p, strict)), null);\n\t}\n\n\tprivate static _deserializeOne(serializedOne: string, strict: boolean): ContextKeyExpression {\n\t\tserializedOne = serializedOne.trim();\n\n\t\tif (serializedOne.indexOf('!=') >= 0) {\n\t\t\tconst pieces = serializedOne.split('!=');\n\t\t\treturn ContextKeyNotEqualsExpr.create(pieces[0].trim(), this._deserializeValue(pieces[1], strict));\n\t\t}\n\n\t\tif (serializedOne.indexOf('==') >= 0) {\n\t\t\tconst pieces = serializedOne.split('==');\n\t\t\treturn ContextKeyEqualsExpr.create(pieces[0].trim(), this._deserializeValue(pieces[1], strict));\n\t\t}\n\n\t\tif (serializedOne.indexOf('=~') >= 0) {\n\t\t\tconst pieces = serializedOne.split('=~');\n\t\t\treturn ContextKeyRegexExpr.create(pieces[0].trim(), this._deserializeRegexValue(pieces[1], strict));\n\t\t}\n\n\t\tif (serializedOne.indexOf(' not in ') >= 0) {\n\t\t\tconst pieces = serializedOne.split(' not in ');\n\t\t\treturn ContextKeyNotInExpr.create(pieces[0].trim(), pieces[1].trim());\n\t\t}\n\n\t\tif (serializedOne.indexOf(' in ') >= 0) {\n\t\t\tconst pieces = serializedOne.split(' in ');\n\t\t\treturn ContextKeyInExpr.create(pieces[0].trim(), pieces[1].trim());\n\t\t}\n\n\t\tif (/^[^<=>]+>=[^<=>]+$/.test(serializedOne)) {\n\t\t\tconst pieces = serializedOne.split('>=');\n\t\t\treturn ContextKeyGreaterEqualsExpr.create(pieces[0].trim(), pieces[1].trim());\n\t\t}\n\n\t\tif (/^[^<=>]+>[^<=>]+$/.test(serializedOne)) {\n\t\t\tconst pieces = serializedOne.split('>');\n\t\t\treturn ContextKeyGreaterExpr.create(pieces[0].trim(), pieces[1].trim());\n\t\t}\n\n\t\tif (/^[^<=>]+<=[^<=>]+$/.test(serializedOne)) {\n\t\t\tconst pieces = serializedOne.split('<=');\n\t\t\treturn ContextKeySmallerEqualsExpr.create(pieces[0].trim(), pieces[1].trim());\n\t\t}\n\n\t\tif (/^[^<=>]+<[^<=>]+$/.test(serializedOne)) {\n\t\t\tconst pieces = serializedOne.split('<');\n\t\t\treturn ContextKeySmallerExpr.create(pieces[0].trim(), pieces[1].trim());\n\t\t}\n\n\t\tif (/^\\!\\s*/.test(serializedOne)) {\n\t\t\treturn ContextKeyNotExpr.create(serializedOne.substr(1).trim());\n\t\t}\n\n\t\treturn ContextKeyDefinedExpr.create(serializedOne);\n\t}\n\n\tprivate static _deserializeValue(serializedValue: string, strict: boolean): any {\n\t\tserializedValue = serializedValue.trim();\n\n\t\tif (serializedValue === 'true') {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (serializedValue === 'false') {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst m = /^'([^']*)'$/.exec(serializedValue);\n\t\tif (m) {\n\t\t\treturn m[1].trim();\n\t\t}\n\n\t\treturn serializedValue;\n\t}\n\n\tprivate static _deserializeRegexValue(serializedValue: string, strict: boolean): RegExp | null {\n\n\t\tif (isFalsyOrWhitespace(serializedValue)) {\n\t\t\tif (strict) {\n\t\t\t\tthrow new Error('missing regexp-value for =~-expression');\n\t\t\t} else {\n\t\t\t\tconsole.warn('missing regexp-value for =~-expression');\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tconst start = serializedValue.indexOf('/');\n\t\tconst end = serializedValue.lastIndexOf('/');\n\t\tif (start === end || start < 0 /* || to < 0 */) {\n\t\t\tif (strict) {\n\t\t\t\tthrow new Error(`bad regexp-value '${serializedValue}', missing /-enclosure`);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`bad regexp-value '${serializedValue}', missing /-enclosure`);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tconst value = serializedValue.slice(start + 1, end);\n\t\tconst caseIgnoreFlag = serializedValue[end + 1] === 'i' ? 'i' : '';\n\t\ttry {\n\t\t\treturn new RegExp(value, caseIgnoreFlag);\n\t\t} catch (e) {\n\t\t\tif (strict) {\n\t\t\t\tthrow new Error(`bad regexp-value '${serializedValue}', parse error: ${e}`);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`bad regexp-value '${serializedValue}', parse error: ${e}`);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\nexport function expressionsAreEqualWithConstantSubstitution(a: ContextKeyExpression | null | undefined, b: ContextKeyExpression | null | undefined): boolean {\n\tconst aExpr = a ? a.substituteConstants() : undefined;\n\tconst bExpr = b ? b.substituteConstants() : undefined;\n\tif (!aExpr && !bExpr) {\n\t\treturn true;\n\t}\n\tif (!aExpr || !bExpr) {\n\t\treturn false;\n\t}\n\treturn aExpr.equals(bExpr);\n}\n\nfunction cmp(a: ContextKeyExpression, b: ContextKeyExpression): number {\n\treturn a.cmp(b);\n}\n\nexport class ContextKeyFalseExpr implements IContextKeyExpression {\n\tpublic static INSTANCE = new ContextKeyFalseExpr();\n\n\tpublic readonly type = ContextKeyExprType.False;\n\n\tprotected constructor() {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\treturn this.type - other.type;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\treturn (other.type === this.type);\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn false;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn 'false';\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn this;\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t}\n}\n\nexport class ContextKeyTrueExpr implements IContextKeyExpression {\n\tpublic static INSTANCE = new ContextKeyTrueExpr();\n\n\tpublic readonly type = ContextKeyExprType.True;\n\n\tprotected constructor() {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\treturn this.type - other.type;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\treturn (other.type === this.type);\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn true;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn 'true';\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn this;\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t}\n}\n\nexport class ContextKeyDefinedExpr implements IContextKeyExpression {\n\tpublic static create(key: string, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\tconst constantValue = CONSTANT_VALUES.get(key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\treturn constantValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n\t\t}\n\t\treturn new ContextKeyDefinedExpr(key, negated);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Defined;\n\n\tprotected constructor(\n\t\treadonly key: string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp1(this.key, other.key);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst constantValue = CONSTANT_VALUES.get(this.key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\treturn constantValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn (!!context.getValue(this.key));\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.key;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapDefined(this.key);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyNotExpr.create(this.key, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\tif (typeof value === 'boolean') {\n\t\t\treturn (value ? ContextKeyDefinedExpr.create(key, negated) : ContextKeyNotExpr.create(key, negated));\n\t\t}\n\t\tconst constantValue = CONSTANT_VALUES.get(key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\tconst trueValue = constantValue ? 'true' : 'false';\n\t\t\treturn (value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\n\t\t}\n\t\treturn new ContextKeyEqualsExpr(key, value, negated);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Equals;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: any,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst constantValue = CONSTANT_VALUES.get(this.key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\tconst trueValue = constantValue ? 'true' : 'false';\n\t\t\treturn (this.value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\t// Intentional ==\n\t\t// eslint-disable-next-line eqeqeq\n\t\treturn (context.getValue(this.key) == this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} == '${this.value}'`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyNotEqualsExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyInExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, valueKey: string): ContextKeyInExpr {\n\t\treturn new ContextKeyInExpr(key, valueKey);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.In;\n\tprivate negated: ContextKeyExpression | null = null;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly valueKey: string,\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.valueKey, other.key, other.valueKey);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.valueKey === other.valueKey);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tconst source = context.getValue(this.valueKey);\n\n\t\tconst item = context.getValue(this.key);\n\n\t\tif (Array.isArray(source)) {\n\t\t\treturn source.includes(item as any);\n\t\t}\n\n\t\tif (typeof item === 'string' && typeof source === 'object' && source !== null) {\n\t\t\treturn hasOwnProperty.call(source, item);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} in '${this.valueKey}'`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key, this.valueKey];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyInExpr {\n\t\treturn mapFnc.mapIn(this.key, this.valueKey);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyNotInExpr.create(this.key, this.valueKey);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyNotInExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, valueKey: string): ContextKeyNotInExpr {\n\t\treturn new ContextKeyNotInExpr(key, valueKey);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.NotIn;\n\n\tprivate readonly _negated: ContextKeyInExpr;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly valueKey: string,\n\t) {\n\t\tthis._negated = ContextKeyInExpr.create(key, valueKey);\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn this._negated.cmp(other._negated);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn this._negated.equals(other._negated);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn !this._negated.evaluate(context);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} not in '${this.valueKey}'`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn this._negated.keys();\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapNotIn(this.key, this.valueKey);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn this._negated;\n\t}\n}\n\nexport class ContextKeyNotEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\tif (typeof value === 'boolean') {\n\t\t\tif (value) {\n\t\t\t\treturn ContextKeyNotExpr.create(key, negated);\n\t\t\t}\n\t\t\treturn ContextKeyDefinedExpr.create(key, negated);\n\t\t}\n\t\tconst constantValue = CONSTANT_VALUES.get(key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\tconst falseValue = constantValue ? 'true' : 'false';\n\t\t\treturn (value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n\t\t}\n\t\treturn new ContextKeyNotEqualsExpr(key, value, negated);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.NotEquals;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: any,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst constantValue = CONSTANT_VALUES.get(this.key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\tconst falseValue = constantValue ? 'true' : 'false';\n\t\t\treturn (this.value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\t// Intentional !=\n\t\t// eslint-disable-next-line eqeqeq\n\t\treturn (context.getValue(this.key) != this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} != '${this.value}'`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapNotEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyEqualsExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyNotExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\tconst constantValue = CONSTANT_VALUES.get(key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\treturn (constantValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n\t\t}\n\t\treturn new ContextKeyNotExpr(key, negated);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Not;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp1(this.key, other.key);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst constantValue = CONSTANT_VALUES.get(this.key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\treturn (constantValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn (!context.getValue(this.key));\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `!${this.key}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapNot(this.key);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyDefinedExpr.create(this.key, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nfunction withFloatOrStr<T extends ContextKeyExpression>(value: any, callback: (value: number | string) => T): T | ContextKeyFalseExpr {\n\tif (typeof value === 'string') {\n\t\tconst n = parseFloat(value);\n\t\tif (!isNaN(n)) {\n\t\t\tvalue = n;\n\t\t}\n\t}\n\tif (typeof value === 'string' || typeof value === 'number') {\n\t\treturn callback(value);\n\t}\n\treturn ContextKeyFalseExpr.INSTANCE;\n}\n\nexport class ContextKeyGreaterExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, _value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\treturn withFloatOrStr(_value, (value) => new ContextKeyGreaterExpr(key, value, negated));\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Greater;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: number | string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) { }\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tif (typeof this.value === 'string') {\n\t\t\treturn false;\n\t\t}\n\t\treturn (parseFloat(<any>context.getValue(this.key)) > this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} > ${this.value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapGreater(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeySmallerEqualsExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyGreaterEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, _value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\treturn withFloatOrStr(_value, (value) => new ContextKeyGreaterEqualsExpr(key, value, negated));\n\t}\n\n\tpublic readonly type = ContextKeyExprType.GreaterEquals;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: number | string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) { }\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tif (typeof this.value === 'string') {\n\t\t\treturn false;\n\t\t}\n\t\treturn (parseFloat(<any>context.getValue(this.key)) >= this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} >= ${this.value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapGreaterEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeySmallerExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeySmallerExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, _value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\treturn withFloatOrStr(_value, (value) => new ContextKeySmallerExpr(key, value, negated));\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Smaller;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: number | string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tif (typeof this.value === 'string') {\n\t\t\treturn false;\n\t\t}\n\t\treturn (parseFloat(<any>context.getValue(this.key)) < this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} < ${this.value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapSmaller(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyGreaterEqualsExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeySmallerEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, _value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\treturn withFloatOrStr(_value, (value) => new ContextKeySmallerEqualsExpr(key, value, negated));\n\t}\n\n\tpublic readonly type = ContextKeyExprType.SmallerEquals;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: number | string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tif (typeof this.value === 'string') {\n\t\t\treturn false;\n\t\t}\n\t\treturn (parseFloat(<any>context.getValue(this.key)) <= this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} <= ${this.value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapSmallerEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyGreaterExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyRegexExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, regexp: RegExp | null): ContextKeyRegexExpr {\n\t\treturn new ContextKeyRegexExpr(key, regexp);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Regex;\n\tprivate negated: ContextKeyExpression | null = null;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly regexp: RegExp | null\n\t) {\n\t\t//\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.key < other.key) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.key > other.key) {\n\t\t\treturn 1;\n\t\t}\n\t\tconst thisSource = this.regexp ? this.regexp.source : '';\n\t\tconst otherSource = other.regexp ? other.regexp.source : '';\n\t\tif (thisSource < otherSource) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (thisSource > otherSource) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\tconst thisSource = this.regexp ? this.regexp.source : '';\n\t\t\tconst otherSource = other.regexp ? other.regexp.source : '';\n\t\t\treturn (this.key === other.key && thisSource === otherSource);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tconst value = context.getValue<any>(this.key);\n\t\treturn this.regexp ? this.regexp.test(value) : false;\n\t}\n\n\tpublic serialize(): string {\n\t\tconst value = this.regexp\n\t\t\t? `/${this.regexp.source}/${this.regexp.ignoreCase ? 'i' : ''}`\n\t\t\t: '/invalid/';\n\t\treturn `${this.key} =~ ${value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyRegexExpr {\n\t\treturn mapFnc.mapRegex(this.key, this.regexp);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyNotRegexExpr.create(this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyNotRegexExpr implements IContextKeyExpression {\n\n\tpublic static create(actual: ContextKeyRegexExpr): ContextKeyExpression {\n\t\treturn new ContextKeyNotRegexExpr(actual);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.NotRegex;\n\n\tprivate constructor(private readonly _actual: ContextKeyRegexExpr) {\n\t\t//\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn this._actual.cmp(other._actual);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn this._actual.equals(other._actual);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn !this._actual.evaluate(context);\n\t}\n\n\tpublic serialize(): string {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn this._actual.keys();\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn new ContextKeyNotRegexExpr(this._actual.map(mapFnc));\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn this._actual;\n\t}\n}\n\n/**\n * @returns the same instance if nothing changed.\n */\nfunction eliminateConstantsInArray(arr: ContextKeyExpression[]): (ContextKeyExpression | undefined)[] {\n\t// Allocate array only if there is a difference\n\tlet newArr: (ContextKeyExpression | undefined)[] | null = null;\n\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\tconst newExpr = arr[i].substituteConstants();\n\n\t\tif (arr[i] !== newExpr) {\n\t\t\t// something has changed!\n\n\t\t\t// allocate array on first difference\n\t\t\tif (newArr === null) {\n\t\t\t\tnewArr = [];\n\t\t\t\tfor (let j = 0; j < i; j++) {\n\t\t\t\t\tnewArr[j] = arr[j];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (newArr !== null) {\n\t\t\tnewArr[i] = newExpr;\n\t\t}\n\t}\n\n\tif (newArr === null) {\n\t\treturn arr;\n\t}\n\treturn newArr;\n}\n\nclass ContextKeyAndExpr implements IContextKeyExpression {\n\n\tpublic static create(_expr: ReadonlyArray<ContextKeyExpression | null | undefined>, negated: ContextKeyExpression | null): ContextKeyExpression | undefined {\n\t\treturn ContextKeyAndExpr._normalizeArr(_expr, negated);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.And;\n\n\tprivate constructor(\n\t\tpublic readonly expr: ContextKeyExpression[],\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.expr.length < other.expr.length) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.expr.length > other.expr.length) {\n\t\t\treturn 1;\n\t\t}\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tconst r = cmp(this.expr[i], other.expr[i]);\n\t\t\tif (r !== 0) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\tif (this.expr.length !== other.expr.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\t\tif (!this.expr[i].equals(other.expr[i])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst exprArr = eliminateConstantsInArray(this.expr);\n\t\tif (exprArr === this.expr) {\n\t\t\t// no change\n\t\t\treturn this;\n\t\t}\n\t\treturn ContextKeyAndExpr.create(exprArr, this.negated);\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tif (!this.expr[i].evaluate(context)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate static _normalizeArr(arr: ReadonlyArray<ContextKeyExpression | null | undefined>, negated: ContextKeyExpression | null): ContextKeyExpression | undefined {\n\t\tconst expr: ContextKeyExpression[] = [];\n\t\tlet hasTrue = false;\n\n\t\tfor (const e of arr) {\n\t\t\tif (!e) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (e.type === ContextKeyExprType.True) {\n\t\t\t\t// anything && true ==> anything\n\t\t\t\thasTrue = true;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (e.type === ContextKeyExprType.False) {\n\t\t\t\t// anything && false ==> false\n\t\t\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t\t\t}\n\n\t\t\tif (e.type === ContextKeyExprType.And) {\n\t\t\t\texpr.push(...e.expr);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\texpr.push(e);\n\t\t}\n\n\t\tif (expr.length === 0 && hasTrue) {\n\t\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t\t}\n\n\t\tif (expr.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\texpr.sort(cmp);\n\n\t\t// eliminate duplicate terms\n\t\tfor (let i = 1; i < expr.length; i++) {\n\t\t\tif (expr[i - 1].equals(expr[i])) {\n\t\t\t\texpr.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\t// We must distribute any OR expression because we don't support parens\n\t\t// OR extensions will be at the end (due to sorting rules)\n\t\twhile (expr.length > 1) {\n\t\t\tconst lastElement = expr[expr.length - 1];\n\t\t\tif (lastElement.type !== ContextKeyExprType.Or) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// pop the last element\n\t\t\texpr.pop();\n\n\t\t\t// pop the second to last element\n\t\t\tconst secondToLastElement = expr.pop()!;\n\n\t\t\tconst isFinished = (expr.length === 0);\n\n\t\t\t// distribute `lastElement` over `secondToLastElement`\n\t\t\tconst resultElement = ContextKeyOrExpr.create(\n\t\t\t\tlastElement.expr.map(el => ContextKeyAndExpr.create([el, secondToLastElement], null)),\n\t\t\t\tnull,\n\t\t\t\tisFinished\n\t\t\t);\n\n\t\t\tif (resultElement) {\n\t\t\t\texpr.push(resultElement);\n\t\t\t\texpr.sort(cmp);\n\t\t\t}\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\treturn new ContextKeyAndExpr(expr, negated);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.expr.map(e => e.serialize()).join(' && ');\n\t}\n\n\tpublic keys(): string[] {\n\t\tconst result: string[] = [];\n\t\tfor (const expr of this.expr) {\n\t\t\tresult.push(...expr.keys());\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn new ContextKeyAndExpr(this.expr.map(expr => expr.map(mapFnc)), null);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tconst result: ContextKeyExpression[] = [];\n\t\t\tfor (const expr of this.expr) {\n\t\t\t\tresult.push(expr.negate());\n\t\t\t}\n\t\t\tthis.negated = ContextKeyOrExpr.create(result, this, true)!;\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nclass ContextKeyOrExpr implements IContextKeyExpression {\n\n\tpublic static create(_expr: ReadonlyArray<ContextKeyExpression | null | undefined>, negated: ContextKeyExpression | null, extraRedundantCheck: boolean): ContextKeyExpression | undefined {\n\t\treturn ContextKeyOrExpr._normalizeArr(_expr, negated, extraRedundantCheck);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Or;\n\n\tprivate constructor(\n\t\tpublic readonly expr: ContextKeyExpression[],\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.expr.length < other.expr.length) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.expr.length > other.expr.length) {\n\t\t\treturn 1;\n\t\t}\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tconst r = cmp(this.expr[i], other.expr[i]);\n\t\t\tif (r !== 0) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\tif (this.expr.length !== other.expr.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\t\tif (!this.expr[i].equals(other.expr[i])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst exprArr = eliminateConstantsInArray(this.expr);\n\t\tif (exprArr === this.expr) {\n\t\t\t// no change\n\t\t\treturn this;\n\t\t}\n\t\treturn ContextKeyOrExpr.create(exprArr, this.negated, false);\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tif (this.expr[i].evaluate(context)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate static _normalizeArr(arr: ReadonlyArray<ContextKeyExpression | null | undefined>, negated: ContextKeyExpression | null, extraRedundantCheck: boolean): ContextKeyExpression | undefined {\n\t\tlet expr: ContextKeyExpression[] = [];\n\t\tlet hasFalse = false;\n\n\t\tif (arr) {\n\t\t\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\t\t\tconst e = arr[i];\n\t\t\t\tif (!e) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (e.type === ContextKeyExprType.False) {\n\t\t\t\t\t// anything || false ==> anything\n\t\t\t\t\thasFalse = true;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (e.type === ContextKeyExprType.True) {\n\t\t\t\t\t// anything || true ==> true\n\t\t\t\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t\t\t\t}\n\n\t\t\t\tif (e.type === ContextKeyExprType.Or) {\n\t\t\t\t\texpr = expr.concat(e.expr);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\texpr.push(e);\n\t\t\t}\n\n\t\t\tif (expr.length === 0 && hasFalse) {\n\t\t\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t\t\t}\n\n\t\t\texpr.sort(cmp);\n\t\t}\n\n\t\tif (expr.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\t// eliminate duplicate terms\n\t\tfor (let i = 1; i < expr.length; i++) {\n\t\t\tif (expr[i - 1].equals(expr[i])) {\n\t\t\t\texpr.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\t// eliminate redundant terms\n\t\tif (extraRedundantCheck) {\n\t\t\tfor (let i = 0; i < expr.length; i++) {\n\t\t\t\tfor (let j = i + 1; j < expr.length; j++) {\n\t\t\t\t\tif (implies(expr[i], expr[j])) {\n\t\t\t\t\t\texpr.splice(j, 1);\n\t\t\t\t\t\tj--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (expr.length === 1) {\n\t\t\t\treturn expr[0];\n\t\t\t}\n\t\t}\n\n\t\treturn new ContextKeyOrExpr(expr, negated);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.expr.map(e => e.serialize()).join(' || ');\n\t}\n\n\tpublic keys(): string[] {\n\t\tconst result: string[] = [];\n\t\tfor (const expr of this.expr) {\n\t\t\tresult.push(...expr.keys());\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn new ContextKeyOrExpr(this.expr.map(expr => expr.map(mapFnc)), null);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tconst result: ContextKeyExpression[] = [];\n\t\t\tfor (const expr of this.expr) {\n\t\t\t\tresult.push(expr.negate());\n\t\t\t}\n\n\t\t\t// We don't support parens, so here we distribute the AND over the OR terminals\n\t\t\t// We always take the first 2 AND pairs and distribute them\n\t\t\twhile (result.length > 1) {\n\t\t\t\tconst LEFT = result.shift()!;\n\t\t\t\tconst RIGHT = result.shift()!;\n\n\t\t\t\tconst all: ContextKeyExpression[] = [];\n\t\t\t\tfor (const left of getTerminals(LEFT)) {\n\t\t\t\t\tfor (const right of getTerminals(RIGHT)) {\n\t\t\t\t\t\tall.push(ContextKeyAndExpr.create([left, right], null)!);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst isFinished = (result.length === 0);\n\t\t\t\tresult.unshift(ContextKeyOrExpr.create(all, null, isFinished)!);\n\t\t\t}\n\n\t\t\tthis.negated = result[0];\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport interface ContextKeyInfo {\n\treadonly key: string;\n\treadonly type?: string;\n\treadonly description?: string;\n}\n\nexport class RawContextKey<T extends ContextKeyValue> extends ContextKeyDefinedExpr {\n\n\tprivate static _info: ContextKeyInfo[] = [];\n\n\tstatic all(): IterableIterator<ContextKeyInfo> {\n\t\treturn RawContextKey._info.values();\n\t}\n\n\tprivate readonly _defaultValue: T | undefined;\n\n\tconstructor(key: string, defaultValue: T | undefined, metaOrHide?: string | true | { type: string; description: string }) {\n\t\tsuper(key, null);\n\t\tthis._defaultValue = defaultValue;\n\n\t\t// collect all context keys into a central place\n\t\tif (typeof metaOrHide === 'object') {\n\t\t\tRawContextKey._info.push({ ...metaOrHide, key });\n\t\t} else if (metaOrHide !== true) {\n\t\t\tRawContextKey._info.push({ key, description: metaOrHide, type: defaultValue !== null && defaultValue !== undefined ? typeof defaultValue : undefined });\n\t\t}\n\t}\n\n\tpublic bindTo(target: IContextKeyService): IContextKey<T> {\n\t\treturn target.createKey(this.key, this._defaultValue);\n\t}\n\n\tpublic getValue(target: IContextKeyService): T | undefined {\n\t\treturn target.getContextKeyValue<T>(this.key);\n\t}\n\n\tpublic toNegated(): ContextKeyExpression {\n\t\treturn this.negate();\n\t}\n\n\tpublic isEqualTo(value: any): ContextKeyExpression {\n\t\treturn ContextKeyEqualsExpr.create(this.key, value);\n\t}\n\n\tpublic notEqualsTo(value: any): ContextKeyExpression {\n\t\treturn ContextKeyNotEqualsExpr.create(this.key, value);\n\t}\n}\n\nexport type ContextKeyValue = null | undefined | boolean | number | string\n\t| Array<null | undefined | boolean | number | string>\n\t| Record<string, null | undefined | boolean | number | string>;\n\nexport interface IContext {\n\tgetValue<T extends ContextKeyValue = ContextKeyValue>(key: string): T | undefined;\n}\n\nexport interface IContextKey<T extends ContextKeyValue = ContextKeyValue> {\n\tset(value: T): void;\n\treset(): void;\n\tget(): T | undefined;\n}\n\nexport interface IContextKeyServiceTarget {\n\tparentElement: IContextKeyServiceTarget | null;\n\tsetAttribute(attr: string, value: string): void;\n\tremoveAttribute(attr: string): void;\n\thasAttribute(attr: string): boolean;\n\tgetAttribute(attr: string): string | null;\n}\n\nexport const IContextKeyService = createDecorator<IContextKeyService>('contextKeyService');\n\nexport interface IReadableSet<T> {\n\thas(value: T): boolean;\n}\n\nexport interface IContextKeyChangeEvent {\n\taffectsSome(keys: IReadableSet<string>): boolean;\n\tallKeysContainedIn(keys: IReadableSet<string>): boolean;\n}\n\nexport interface IContextKeyService {\n\treadonly _serviceBrand: undefined;\n\tdispose(): void;\n\n\tonDidChangeContext: Event<IContextKeyChangeEvent>;\n\tbufferChangeEvents(callback: Function): void;\n\n\tcreateKey<T extends ContextKeyValue>(key: string, defaultValue: T | undefined): IContextKey<T>;\n\tcontextMatchesRules(rules: ContextKeyExpression | undefined): boolean;\n\tgetContextKeyValue<T>(key: string): T | undefined;\n\n\tcreateScoped(target: IContextKeyServiceTarget): IContextKeyService;\n\tcreateOverlay(overlay: Iterable<[string, any]>): IContextKeyService;\n\tgetContext(target: IContextKeyServiceTarget | null): IContext;\n\n\tupdateParent(parentContextKeyService: IContextKeyService): void;\n}\n\nexport const SET_CONTEXT_COMMAND_ID = 'setContext';\n\nfunction cmp1(key1: string, key2: string): number {\n\tif (key1 < key2) {\n\t\treturn -1;\n\t}\n\tif (key1 > key2) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\nfunction cmp2(key1: string, value1: any, key2: string, value2: any): number {\n\tif (key1 < key2) {\n\t\treturn -1;\n\t}\n\tif (key1 > key2) {\n\t\treturn 1;\n\t}\n\tif (value1 < value2) {\n\t\treturn -1;\n\t}\n\tif (value1 > value2) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\n/**\n * Returns true if it is provable `p` implies `q`.\n */\nexport function implies(p: ContextKeyExpression, q: ContextKeyExpression): boolean {\n\n\tif (q.type === ContextKeyExprType.And && (p.type !== ContextKeyExprType.Or && p.type !== ContextKeyExprType.And)) {\n\t\t// covers the case: A implies A && B\n\t\tfor (const qTerm of q.expr) {\n\t\t\tif (p.equals(qTerm)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\n\tconst notP = p.negate();\n\tconst expr = getTerminals(notP).concat(getTerminals(q));\n\texpr.sort(cmp);\n\n\tfor (let i = 0; i < expr.length; i++) {\n\t\tconst a = expr[i];\n\t\tconst notA = a.negate();\n\t\tfor (let j = i + 1; j < expr.length; j++) {\n\t\t\tconst b = expr[j];\n\t\t\tif (notA.equals(b)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn false;\n}\n\nfunction getTerminals(node: ContextKeyExpression) {\n\tif (node.type === ContextKeyExprType.Or) {\n\t\treturn node.expr;\n\t}\n\treturn [node];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const ICredentialsService = createDecorator<ICredentialsService>('credentialsService');\n\nexport interface ICredentialsProvider {\n\tgetPassword(service: string, account: string): Promise<string | null>;\n\tsetPassword(service: string, account: string, password: string): Promise<void>;\n\tdeletePassword(service: string, account: string): Promise<boolean>;\n\tfindPassword(service: string): Promise<string | null>;\n\tfindCredentials(service: string): Promise<Array<{ account: string; password: string }>>;\n\tclear?(): Promise<void>;\n}\n\nexport interface ICredentialsChangeEvent {\n\tservice: string;\n\taccount: string;\n}\n\nexport interface ICredentialsService extends ICredentialsProvider {\n\treadonly _serviceBrand: undefined;\n\treadonly onDidChangePassword: Event<ICredentialsChangeEvent>;\n\n\t/*\n\t * Each CredentialsService must provide a prefix that will be used\n\t * by the SecretStorage API when storing secrets.\n\t * This is a method that returns a Promise so that it can be defined in\n\t * the main process and proxied on the renderer side.\n\t */\n\tgetSecretStoragePrefix(): Promise<string>;\n}\n\nexport const ICredentialsMainService = createDecorator<ICredentialsMainService>('credentialsMainService');\n\nexport interface ICredentialsMainService extends ICredentialsService { }\n\ninterface ISecretVault {\n\t[service: string]: { [account: string]: string } | undefined;\n}\n\nexport class InMemoryCredentialsProvider implements ICredentialsProvider {\n\tprivate secretVault: ISecretVault = {};\n\n\tasync getPassword(service: string, account: string): Promise<string | null> {\n\t\treturn this.secretVault[service]?.[account] ?? null;\n\t}\n\n\tasync setPassword(service: string, account: string, password: string): Promise<void> {\n\t\tthis.secretVault[service] = this.secretVault[service] ?? {};\n\t\tthis.secretVault[service]![account] = password;\n\t}\n\n\tasync deletePassword(service: string, account: string): Promise<boolean> {\n\t\tif (!this.secretVault[service]?.[account]) {\n\t\t\treturn false;\n\t\t}\n\t\tdelete this.secretVault[service]![account];\n\t\tif (Object.keys(this.secretVault[service]!).length === 0) {\n\t\t\tdelete this.secretVault[service];\n\t\t}\n\t\treturn true;\n\t}\n\n\tasync findPassword(service: string): Promise<string | null> {\n\t\treturn JSON.stringify(this.secretVault[service]) ?? null;\n\t}\n\n\tasync findCredentials(service: string): Promise<Array<{ account: string; password: string }>> {\n\t\tconst credentials: { account: string; password: string }[] = [];\n\t\tfor (const account of Object.keys(this.secretVault[service] || {})) {\n\t\t\tcredentials.push({ account, password: this.secretVault[service]![account] });\n\t\t}\n\t\treturn credentials;\n\t}\n\n\tasync clear(): Promise<void> {\n\t\tthis.secretVault = {};\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { ProcessItem } from 'vs/base/common/processes';\nimport { UriComponents } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IMainProcessInfo } from 'vs/platform/launch/common/launch';\nimport { IWorkspace } from 'vs/platform/workspace/common/workspace';\n\nexport const ID = 'diagnosticsService';\nexport const IDiagnosticsService = createDecorator<IDiagnosticsService>(ID);\n\nexport interface IDiagnosticsService {\n\treadonly _serviceBrand: undefined;\n\n\tgetPerformanceInfo(mainProcessInfo: IMainProcessInfo, remoteInfo: (IRemoteDiagnosticInfo | IRemoteDiagnosticError)[]): Promise<PerformanceInfo>;\n\tgetSystemInfo(mainProcessInfo: IMainProcessInfo, remoteInfo: (IRemoteDiagnosticInfo | IRemoteDiagnosticError)[]): Promise<SystemInfo>;\n\tgetDiagnostics(mainProcessInfo: IMainProcessInfo, remoteInfo: (IRemoteDiagnosticInfo | IRemoteDiagnosticError)[]): Promise<string>;\n\tgetWorkspaceFileExtensions(workspace: IWorkspace): Promise<{ extensions: string[] }>;\n\treportWorkspaceStats(workspace: IWorkspaceInformation): Promise<void>;\n}\n\nexport interface IMachineInfo {\n\tos: string;\n\tcpus?: string;\n\tmemory: string;\n\tvmHint: string;\n\tlinuxEnv?: ILinuxEnv;\n}\n\nexport interface ILinuxEnv {\n\tdesktopSession?: string;\n\txdgSessionDesktop?: string;\n\txdgCurrentDesktop?: string;\n\txdgSessionType?: string;\n}\n\nexport interface IDiagnosticInfo {\n\tmachineInfo: IMachineInfo;\n\tworkspaceMetadata?: IStringDictionary<WorkspaceStats>;\n\tprocesses?: ProcessItem;\n}\nexport interface SystemInfo extends IMachineInfo {\n\tprocessArgs: string;\n\tgpuStatus: any;\n\tscreenReader: string;\n\tremoteData: (IRemoteDiagnosticInfo | IRemoteDiagnosticError)[];\n\tload?: string;\n}\n\nexport interface IRemoteDiagnosticInfo extends IDiagnosticInfo {\n\thostName: string;\n}\n\nexport interface IRemoteDiagnosticError {\n\thostName: string;\n\terrorMessage: string;\n}\n\nexport interface IDiagnosticInfoOptions {\n\tincludeProcesses?: boolean;\n\tfolders?: UriComponents[];\n\tincludeExtensions?: boolean;\n}\n\nexport interface WorkspaceStatItem {\n\tname: string;\n\tcount: number;\n}\n\nexport interface WorkspaceStats {\n\tfileTypes: WorkspaceStatItem[];\n\tconfigFiles: WorkspaceStatItem[];\n\tfileCount: number;\n\tmaxFilesReached: boolean;\n\tlaunchConfigFiles: WorkspaceStatItem[];\n}\n\nexport interface PerformanceInfo {\n\tprocessInfo?: string;\n\tworkspaceInfo?: string;\n}\n\nexport interface IWorkspaceInformation extends IWorkspace {\n\ttelemetryId: string | undefined;\n\trendererSessionId: string;\n}\n\nexport function isRemoteDiagnosticError(x: any): x is IRemoteDiagnosticError {\n\treturn !!x.hostName && !!x.errorMessage;\n}\n\nexport class NullDiagnosticsService implements IDiagnosticsService {\n\t_serviceBrand: undefined;\n\n\tasync getPerformanceInfo(mainProcessInfo: IMainProcessInfo, remoteInfo: (IRemoteDiagnosticInfo | IRemoteDiagnosticError)[]): Promise<PerformanceInfo> {\n\t\treturn {};\n\t}\n\n\tasync getSystemInfo(mainProcessInfo: IMainProcessInfo, remoteInfo: (IRemoteDiagnosticInfo | IRemoteDiagnosticError)[]): Promise<SystemInfo> {\n\t\treturn {\n\t\t\tprocessArgs: 'nullProcessArgs',\n\t\t\tgpuStatus: 'nullGpuStatus',\n\t\t\tscreenReader: 'nullScreenReader',\n\t\t\tremoteData: [],\n\t\t\tos: 'nullOs',\n\t\t\tmemory: 'nullMemory',\n\t\t\tvmHint: 'nullVmHint',\n\t\t};\n\t}\n\n\tasync getDiagnostics(mainProcessInfo: IMainProcessInfo, remoteInfo: (IRemoteDiagnosticInfo | IRemoteDiagnosticError)[]): Promise<string> {\n\t\treturn '';\n\t}\n\n\tasync getWorkspaceFileExtensions(workspace: IWorkspace): Promise<{ extensions: string[] }> {\n\t\treturn { extensions: [] };\n\t}\n\n\tasync reportWorkspaceStats(workspace: IWorkspaceInformation): Promise<void> { }\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IDownloadService = createDecorator<IDownloadService>('downloadService');\n\nexport interface IDownloadService {\n\n\treadonly _serviceBrand: undefined;\n\n\tdownload(uri: URI, to: URI, cancellationToken?: CancellationToken): Promise<void>;\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IEncryptionMainService = createDecorator<IEncryptionMainService>('encryptionMainService');\n\nexport interface IEncryptionMainService extends ICommonEncryptionService { }\n\nexport interface ICommonEncryptionService {\n\n\treadonly _serviceBrand: undefined;\n\n\tencrypt(value: string): Promise<string>;\n\n\tdecrypt(value: string): Promise<string>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { createDecorator, refineServiceDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IEnvironmentService = createDecorator<IEnvironmentService>('environmentService');\nexport const INativeEnvironmentService = refineServiceDecorator<IEnvironmentService, INativeEnvironmentService>(IEnvironmentService);\n\nexport interface IDebugParams {\n\tport: number | null;\n\tbreak: boolean;\n}\n\nexport interface IExtensionHostDebugParams extends IDebugParams {\n\tdebugId?: string;\n\tenv?: Record<string, string>;\n}\n\n/**\n * Type of extension.\n *\n * **NOTE**: This is defined in `platform/environment` because it can appear as a CLI argument.\n */\nexport type ExtensionKind = 'ui' | 'workspace' | 'web';\n\n/**\n * A basic environment service that can be used in various processes,\n * such as main, renderer and shared process. Use subclasses of this\n * service for specific environment.\n */\nexport interface IEnvironmentService {\n\n\treadonly _serviceBrand: undefined;\n\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t//\n\t// NOTE: KEEP THIS INTERFACE AS SMALL AS POSSIBLE.\n\t//\n\t// AS SUCH:\n\t//   - PUT NON-WEB PROPERTIES INTO NATIVE ENVIRONMENT SERVICE\n\t//   - PUT WORKBENCH ONLY PROPERTIES INTO WORKBENCH ENVIRONMENT SERVICE\n\t//   - PUT ELECTRON-MAIN ONLY PROPERTIES INTO MAIN ENVIRONMENT SERVICE\n\t//\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n\t// --- user roaming data\n\tstateResource: URI;\n\tuserRoamingDataHome: URI;\n\tkeyboardLayoutResource: URI;\n\targvResource: URI;\n\n\t// --- data paths\n\tuntitledWorkspacesHome: URI;\n\tworkspaceStorageHome: URI;\n\tlocalHistoryHome: URI;\n\tcacheHome: URI;\n\n\t// --- settings sync\n\tuserDataSyncHome: URI;\n\tuserDataSyncLogResource: URI;\n\tsync: 'on' | 'off' | undefined;\n\n\t// --- continue edit session\n\teditSessionId?: string;\n\teditSessionsLogResource: URI;\n\n\t// --- extension development\n\tdebugExtensionHost: IExtensionHostDebugParams;\n\tisExtensionDevelopment: boolean;\n\tdisableExtensions: boolean | string[];\n\tenableExtensions?: readonly string[];\n\textensionDevelopmentLocationURI?: URI[];\n\textensionDevelopmentKind?: ExtensionKind[];\n\textensionTestsLocationURI?: URI;\n\n\t// --- logging\n\tlogsPath: string;\n\tlogLevel?: string;\n\tverbose: boolean;\n\tisBuilt: boolean;\n\n\t// --- telemetry\n\tdisableTelemetry: boolean;\n\ttelemetryLogResource: URI;\n\tserviceMachineIdResource: URI;\n\n\t// --- Policy\n\tpolicyFile?: URI;\n\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t//\n\t// NOTE: KEEP THIS INTERFACE AS SMALL AS POSSIBLE.\n\t//\n\t// AS SUCH:\n\t//   - PUT NON-WEB PROPERTIES INTO NATIVE ENVIRONMENT SERVICE\n\t//   - PUT WORKBENCH ONLY PROPERTIES INTO WORKBENCH ENVIRONMENT SERVICE\n\t//   - PUT ELECTRON-MAIN ONLY PROPERTIES INTO MAIN ENVIRONMENT SERVICE\n\t//\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n}\n\n/**\n * A subclass of the `IEnvironmentService` to be used only in native\n * environments (Windows, Linux, macOS) but not e.g. web.\n */\nexport interface INativeEnvironmentService extends IEnvironmentService {\n\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t//\n\t// NOTE: KEEP THIS INTERFACE AS SMALL AS POSSIBLE.\n\t//\n\t// AS SUCH:\n\t//   - PUT WORKBENCH ONLY PROPERTIES INTO WORKBENCH ENVIRONMENT SERVICE\n\t//   - PUT ELECTRON-MAIN ONLY PROPERTIES INTO MAIN ENVIRONMENT SERVICE\n\t//\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n\t// --- CLI Arguments\n\targs: NativeParsedArgs;\n\n\t// --- data paths\n\tappRoot: string;\n\tuserHome: URI;\n\tappSettingsHome: URI;\n\ttmpDir: URI;\n\tuserDataPath: string;\n\tmachineSettingsResource: URI;\n\tinstallSourcePath: string;\n\n\t// --- extensions\n\textensionsPath: string;\n\textensionsDownloadPath: string;\n\tbuiltinExtensionsPath: string;\n\n\t// --- use keytar for credentials\n\tdisableKeytar?: boolean;\n\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t//\n\t// NOTE: KEEP THIS INTERFACE AS SMALL AS POSSIBLE.\n\t//\n\t// AS SUCH:\n\t//   - PUT NON-WEB PROPERTIES INTO NATIVE ENVIRONMENT SERVICE\n\t//   - PUT WORKBENCH ONLY PROPERTIES INTO WORKBENCH ENVIRONMENT SERVICE\n\t//   - PUT ELECTRON-MAIN ONLY PROPERTIES INTO MAIN ENVIRONMENT SERVICE\n\t//\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { Event } from 'vs/base/common/event';\nimport { IPager } from 'vs/base/common/paging';\nimport { Platform } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { ExtensionType, IExtension, IExtensionManifest, TargetPlatform } from 'vs/platform/extensions/common/extensions';\nimport { createDecorator, refineServiceDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const EXTENSION_IDENTIFIER_PATTERN = '^([a-z0-9A-Z][a-z0-9-A-Z]*)\\\\.([a-z0-9A-Z][a-z0-9-A-Z]*)$';\nexport const EXTENSION_IDENTIFIER_REGEX = new RegExp(EXTENSION_IDENTIFIER_PATTERN);\nexport const WEB_EXTENSION_TAG = '__web_extension';\n\nexport function TargetPlatformToString(targetPlatform: TargetPlatform) {\n\tswitch (targetPlatform) {\n\t\tcase TargetPlatform.WIN32_X64: return 'Windows 64 bit';\n\t\tcase TargetPlatform.WIN32_IA32: return 'Windows 32 bit';\n\t\tcase TargetPlatform.WIN32_ARM64: return 'Windows ARM';\n\n\t\tcase TargetPlatform.LINUX_X64: return 'Linux 64 bit';\n\t\tcase TargetPlatform.LINUX_ARM64: return 'Linux ARM 64';\n\t\tcase TargetPlatform.LINUX_ARMHF: return 'Linux ARM';\n\n\t\tcase TargetPlatform.ALPINE_X64: return 'Alpine Linux 64 bit';\n\t\tcase TargetPlatform.ALPINE_ARM64: return 'Alpine ARM 64';\n\n\t\tcase TargetPlatform.DARWIN_X64: return 'Mac';\n\t\tcase TargetPlatform.DARWIN_ARM64: return 'Mac Silicon';\n\n\t\tcase TargetPlatform.WEB: return 'Web';\n\n\t\tcase TargetPlatform.UNIVERSAL: return TargetPlatform.UNIVERSAL;\n\t\tcase TargetPlatform.UNKNOWN: return TargetPlatform.UNKNOWN;\n\t\tcase TargetPlatform.UNDEFINED: return TargetPlatform.UNDEFINED;\n\t}\n}\n\nexport function toTargetPlatform(targetPlatform: string): TargetPlatform {\n\tswitch (targetPlatform) {\n\t\tcase TargetPlatform.WIN32_X64: return TargetPlatform.WIN32_X64;\n\t\tcase TargetPlatform.WIN32_IA32: return TargetPlatform.WIN32_IA32;\n\t\tcase TargetPlatform.WIN32_ARM64: return TargetPlatform.WIN32_ARM64;\n\n\t\tcase TargetPlatform.LINUX_X64: return TargetPlatform.LINUX_X64;\n\t\tcase TargetPlatform.LINUX_ARM64: return TargetPlatform.LINUX_ARM64;\n\t\tcase TargetPlatform.LINUX_ARMHF: return TargetPlatform.LINUX_ARMHF;\n\n\t\tcase TargetPlatform.ALPINE_X64: return TargetPlatform.ALPINE_X64;\n\t\tcase TargetPlatform.ALPINE_ARM64: return TargetPlatform.ALPINE_ARM64;\n\n\t\tcase TargetPlatform.DARWIN_X64: return TargetPlatform.DARWIN_X64;\n\t\tcase TargetPlatform.DARWIN_ARM64: return TargetPlatform.DARWIN_ARM64;\n\n\t\tcase TargetPlatform.WEB: return TargetPlatform.WEB;\n\n\t\tcase TargetPlatform.UNIVERSAL: return TargetPlatform.UNIVERSAL;\n\t\tdefault: return TargetPlatform.UNKNOWN;\n\t}\n}\n\nexport function getTargetPlatform(platform: Platform | 'alpine', arch: string | undefined): TargetPlatform {\n\tswitch (platform) {\n\t\tcase Platform.Windows:\n\t\t\tif (arch === 'x64') {\n\t\t\t\treturn TargetPlatform.WIN32_X64;\n\t\t\t}\n\t\t\tif (arch === 'ia32') {\n\t\t\t\treturn TargetPlatform.WIN32_IA32;\n\t\t\t}\n\t\t\tif (arch === 'arm64') {\n\t\t\t\treturn TargetPlatform.WIN32_ARM64;\n\t\t\t}\n\t\t\treturn TargetPlatform.UNKNOWN;\n\n\t\tcase Platform.Linux:\n\t\t\tif (arch === 'x64') {\n\t\t\t\treturn TargetPlatform.LINUX_X64;\n\t\t\t}\n\t\t\tif (arch === 'arm64') {\n\t\t\t\treturn TargetPlatform.LINUX_ARM64;\n\t\t\t}\n\t\t\tif (arch === 'arm') {\n\t\t\t\treturn TargetPlatform.LINUX_ARMHF;\n\t\t\t}\n\t\t\treturn TargetPlatform.UNKNOWN;\n\n\t\tcase 'alpine':\n\t\t\tif (arch === 'x64') {\n\t\t\t\treturn TargetPlatform.ALPINE_X64;\n\t\t\t}\n\t\t\tif (arch === 'arm64') {\n\t\t\t\treturn TargetPlatform.ALPINE_ARM64;\n\t\t\t}\n\t\t\treturn TargetPlatform.UNKNOWN;\n\n\t\tcase Platform.Mac:\n\t\t\tif (arch === 'x64') {\n\t\t\t\treturn TargetPlatform.DARWIN_X64;\n\t\t\t}\n\t\t\tif (arch === 'arm64') {\n\t\t\t\treturn TargetPlatform.DARWIN_ARM64;\n\t\t\t}\n\t\t\treturn TargetPlatform.UNKNOWN;\n\n\t\tcase Platform.Web: return TargetPlatform.WEB;\n\t}\n}\n\nexport function isNotWebExtensionInWebTargetPlatform(allTargetPlatforms: TargetPlatform[], productTargetPlatform: TargetPlatform): boolean {\n\t// Not a web extension in web target platform\n\treturn productTargetPlatform === TargetPlatform.WEB && !allTargetPlatforms.includes(TargetPlatform.WEB);\n}\n\nexport function isTargetPlatformCompatible(extensionTargetPlatform: TargetPlatform, allTargetPlatforms: TargetPlatform[], productTargetPlatform: TargetPlatform): boolean {\n\t// Not compatible when extension is not a web extension in web target platform\n\tif (isNotWebExtensionInWebTargetPlatform(allTargetPlatforms, productTargetPlatform)) {\n\t\treturn false;\n\t}\n\n\t// Compatible when extension target platform is not defined\n\tif (extensionTargetPlatform === TargetPlatform.UNDEFINED) {\n\t\treturn true;\n\t}\n\n\t// Compatible when extension target platform is universal\n\tif (extensionTargetPlatform === TargetPlatform.UNIVERSAL) {\n\t\treturn true;\n\t}\n\n\t// Not compatible when extension target platform is unknown\n\tif (extensionTargetPlatform === TargetPlatform.UNKNOWN) {\n\t\treturn false;\n\t}\n\n\t// Compatible when extension and product target platforms matches\n\tif (extensionTargetPlatform === productTargetPlatform) {\n\t\treturn true;\n\t}\n\n\t// Fallback\n\tconst fallbackTargetPlatforms = getFallbackTargetPlarforms(productTargetPlatform);\n\treturn fallbackTargetPlatforms.includes(extensionTargetPlatform);\n}\n\nexport function getFallbackTargetPlarforms(targetPlatform: TargetPlatform): TargetPlatform[] {\n\tswitch (targetPlatform) {\n\t\tcase TargetPlatform.WIN32_X64: return [TargetPlatform.WIN32_IA32];\n\t\tcase TargetPlatform.WIN32_ARM64: return [TargetPlatform.WIN32_IA32];\n\t}\n\treturn [];\n}\n\nexport interface IGalleryExtensionProperties {\n\tdependencies?: string[];\n\textensionPack?: string[];\n\tengine?: string;\n\tlocalizedLanguages?: string[];\n\ttargetPlatform: TargetPlatform;\n\tisPreReleaseVersion: boolean;\n}\n\nexport interface IGalleryExtensionAsset {\n\turi: string;\n\tfallbackUri: string;\n}\n\nexport interface IGalleryExtensionAssets {\n\tmanifest: IGalleryExtensionAsset | null;\n\treadme: IGalleryExtensionAsset | null;\n\tchangelog: IGalleryExtensionAsset | null;\n\tlicense: IGalleryExtensionAsset | null;\n\trepository: IGalleryExtensionAsset | null;\n\tdownload: IGalleryExtensionAsset;\n\ticon: IGalleryExtensionAsset | null;\n\tcoreTranslations: [string, IGalleryExtensionAsset][];\n}\n\nexport function isIExtensionIdentifier(thing: any): thing is IExtensionIdentifier {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.id === 'string'\n\t\t&& (!thing.uuid || typeof thing.uuid === 'string');\n}\n\nexport interface IExtensionIdentifier {\n\tid: string;\n\tuuid?: string;\n}\n\nexport interface IGalleryExtensionIdentifier extends IExtensionIdentifier {\n\tuuid: string;\n}\n\nexport interface IGalleryExtensionVersion {\n\tversion: string;\n\tdate: string;\n\tisPreReleaseVersion: boolean;\n}\n\nexport interface IGalleryExtension {\n\tname: string;\n\tidentifier: IGalleryExtensionIdentifier;\n\tversion: string;\n\tdisplayName: string;\n\tpublisherId: string;\n\tpublisher: string;\n\tpublisherDisplayName: string;\n\tpublisherDomain?: { link: string; verified: boolean };\n\tpublisherSponsorLink?: string;\n\tdescription: string;\n\tinstallCount: number;\n\trating: number;\n\tratingCount: number;\n\tcategories: readonly string[];\n\ttags: readonly string[];\n\treleaseDate: number;\n\tlastUpdated: number;\n\tpreview: boolean;\n\thasPreReleaseVersion: boolean;\n\thasReleaseVersion: boolean;\n\tallTargetPlatforms: TargetPlatform[];\n\tassets: IGalleryExtensionAssets;\n\tproperties: IGalleryExtensionProperties;\n\ttelemetryData?: any;\n}\n\nexport interface IGalleryMetadata {\n\tid: string;\n\tpublisherId: string;\n\tpublisherDisplayName: string;\n\tisPreReleaseVersion: boolean;\n\ttargetPlatform?: TargetPlatform;\n}\n\nexport type Metadata = Partial<IGalleryMetadata & { isApplicationScoped: boolean; isMachineScoped: boolean; isBuiltin: boolean; isSystem: boolean; updated: boolean; preRelease: boolean; installedTimestamp: number }>;\n\nexport interface ILocalExtension extends IExtension {\n\tisMachineScoped: boolean;\n\tisApplicationScoped: boolean;\n\tpublisherId: string | null;\n\tpublisherDisplayName: string | null;\n\tinstalledTimestamp?: number;\n\tisPreReleaseVersion: boolean;\n\tpreRelease: boolean;\n\tupdated: boolean;\n}\n\nexport const enum SortBy {\n\tNoneOrRelevance = 0,\n\tLastUpdatedDate = 1,\n\tTitle = 2,\n\tPublisherName = 3,\n\tInstallCount = 4,\n\tPublishedDate = 10,\n\tAverageRating = 6,\n\tWeightedRating = 12\n}\n\nexport const enum SortOrder {\n\tDefault = 0,\n\tAscending = 1,\n\tDescending = 2\n}\n\nexport interface IQueryOptions {\n\ttext?: string;\n\tids?: string[];\n\tnames?: string[];\n\tpageSize?: number;\n\tsortBy?: SortBy;\n\tsortOrder?: SortOrder;\n\tsource?: string;\n\tincludePreRelease?: boolean;\n}\n\nexport const enum StatisticType {\n\tInstall = 'install',\n\tUninstall = 'uninstall'\n}\n\nexport interface IDeprecationInfo {\n\treadonly disallowInstall?: boolean;\n\treadonly extension?: {\n\t\treadonly id: string;\n\t\treadonly displayName: string;\n\t\treadonly autoMigrate?: { readonly storage: boolean };\n\t\treadonly preRelease?: boolean;\n\t};\n\treadonly settings?: readonly string[];\n}\n\nexport interface IExtensionsControlManifest {\n\treadonly malicious: IExtensionIdentifier[];\n\treadonly deprecated: IStringDictionary<IDeprecationInfo>;\n}\n\nexport const enum InstallOperation {\n\tNone = 1,\n\tInstall,\n\tUpdate,\n\tMigrate,\n}\n\nexport interface ITranslation {\n\tcontents: { [key: string]: {} };\n}\n\nexport interface IExtensionInfo extends IExtensionIdentifier {\n\tversion?: string;\n\tpreRelease?: boolean;\n\thasPreRelease?: boolean;\n}\n\nexport interface IExtensionQueryOptions {\n\ttargetPlatform?: TargetPlatform;\n\tcompatible?: boolean;\n\tqueryAllVersions?: boolean;\n\tsource?: string;\n}\n\nexport const IExtensionGalleryService = createDecorator<IExtensionGalleryService>('extensionGalleryService');\nexport interface IExtensionGalleryService {\n\treadonly _serviceBrand: undefined;\n\tisEnabled(): boolean;\n\tquery(options: IQueryOptions, token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tgetExtensions(extensionInfos: ReadonlyArray<IExtensionInfo>, token: CancellationToken): Promise<IGalleryExtension[]>;\n\tgetExtensions(extensionInfos: ReadonlyArray<IExtensionInfo>, options: IExtensionQueryOptions, token: CancellationToken): Promise<IGalleryExtension[]>;\n\tisExtensionCompatible(extension: IGalleryExtension, includePreRelease: boolean, targetPlatform: TargetPlatform): Promise<boolean>;\n\tgetCompatibleExtension(extension: IGalleryExtension, includePreRelease: boolean, targetPlatform: TargetPlatform): Promise<IGalleryExtension | null>;\n\tgetAllCompatibleVersions(extension: IGalleryExtension, includePreRelease: boolean, targetPlatform: TargetPlatform): Promise<IGalleryExtensionVersion[]>;\n\tdownload(extension: IGalleryExtension, location: URI, operation: InstallOperation): Promise<void>;\n\treportStatistic(publisher: string, name: string, version: string, type: StatisticType): Promise<void>;\n\tgetReadme(extension: IGalleryExtension, token: CancellationToken): Promise<string>;\n\tgetManifest(extension: IGalleryExtension, token: CancellationToken): Promise<IExtensionManifest | null>;\n\tgetChangelog(extension: IGalleryExtension, token: CancellationToken): Promise<string>;\n\tgetCoreTranslation(extension: IGalleryExtension, languageId: string): Promise<ITranslation | null>;\n\tgetExtensionsControlManifest(): Promise<IExtensionsControlManifest>;\n}\n\nexport interface InstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\tsource: URI | IGalleryExtension;\n}\n\nexport interface InstallExtensionResult {\n\treadonly identifier: IExtensionIdentifier;\n\treadonly operation: InstallOperation;\n\treadonly source?: URI | IGalleryExtension;\n\treadonly local?: ILocalExtension;\n\treadonly context?: IStringDictionary<any>;\n}\n\nexport interface UninstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n}\n\nexport interface DidUninstallExtensionEvent {\n\treadonly identifier: IExtensionIdentifier;\n\treadonly version?: string;\n\treadonly error?: string;\n}\n\nexport enum ExtensionManagementErrorCode {\n\tUnsupported = 'Unsupported',\n\tDeprecated = 'Deprecated',\n\tMalicious = 'Malicious',\n\tIncompatible = 'Incompatible',\n\tIncompatiblePreRelease = 'IncompatiblePreRelease',\n\tIncompatibleTargetPlatform = 'IncompatibleTargetPlatform',\n\tReleaseVersionNotFound = 'ReleaseVersionNotFound',\n\tInvalid = 'Invalid',\n\tDownload = 'Download',\n\tExtract = 'Extract',\n\tDelete = 'Delete',\n\tRename = 'Rename',\n\tCorruptZip = 'CorruptZip',\n\tIncompleteZip = 'IncompleteZip',\n\tInternal = 'Internal',\n}\n\nexport class ExtensionManagementError extends Error {\n\tconstructor(message: string, readonly code: ExtensionManagementErrorCode) {\n\t\tsuper(message);\n\t\tthis.name = code;\n\t}\n}\n\nexport type InstallOptions = {\n\tisBuiltin?: boolean;\n\tisMachineScoped?: boolean;\n\tdonotIncludePackAndDependencies?: boolean;\n\tinstallGivenVersion?: boolean;\n\tinstallPreReleaseVersion?: boolean;\n\toperation?: InstallOperation;\n\t/**\n\t * Context passed through to InstallExtensionResult\n\t */\n\tcontext?: IStringDictionary<any>;\n};\nexport type InstallVSIXOptions = Omit<InstallOptions, 'installGivenVersion'> & { installOnlyNewlyAddedFromExtensionPack?: boolean };\nexport type UninstallOptions = { readonly donotIncludePack?: boolean; readonly donotCheckDependents?: boolean; readonly versionOnly?: boolean; readonly remove?: boolean };\n\nexport interface IExtensionManagementParticipant {\n\tpostInstall(local: ILocalExtension, source: URI | IGalleryExtension, options: InstallOptions | InstallVSIXOptions, token: CancellationToken): Promise<void>;\n\tpostUninstall(local: ILocalExtension, options: UninstallOptions, token: CancellationToken): Promise<void>;\n}\n\nexport const IExtensionManagementService = createDecorator<IExtensionManagementService>('extensionManagementService');\nexport interface IExtensionManagementService {\n\treadonly _serviceBrand: undefined;\n\n\tonInstallExtension: Event<InstallExtensionEvent>;\n\tonDidInstallExtensions: Event<readonly InstallExtensionResult[]>;\n\tonUninstallExtension: Event<UninstallExtensionEvent>;\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent>;\n\n\tzip(extension: ILocalExtension): Promise<URI>;\n\tunzip(zipLocation: URI): Promise<IExtensionIdentifier>;\n\tgetManifest(vsix: URI): Promise<IExtensionManifest>;\n\tinstall(vsix: URI, options?: InstallVSIXOptions): Promise<ILocalExtension>;\n\tcanInstall(extension: IGalleryExtension): Promise<boolean>;\n\tinstallFromGallery(extension: IGalleryExtension, options?: InstallOptions): Promise<ILocalExtension>;\n\tuninstall(extension: ILocalExtension, options?: UninstallOptions): Promise<void>;\n\treinstallFromGallery(extension: ILocalExtension): Promise<void>;\n\tgetInstalled(type?: ExtensionType): Promise<ILocalExtension[]>;\n\tgetExtensionsControlManifest(): Promise<IExtensionsControlManifest>;\n\n\tgetMetadata(extension: ILocalExtension): Promise<Metadata | undefined>;\n\tupdateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension>;\n\tupdateExtensionScope(local: ILocalExtension, isMachineScoped: boolean): Promise<ILocalExtension>;\n\n\tregisterParticipant(pariticipant: IExtensionManagementParticipant): void;\n\tgetTargetPlatform(): Promise<TargetPlatform>;\n}\n\nexport type ServerInstallExtensionEvent = InstallExtensionEvent & { profileLocation?: URI; applicationScoped?: boolean };\nexport type ServerInstallExtensionResult = InstallExtensionResult & { profileLocation?: URI; applicationScoped?: boolean };\nexport type ServerUninstallExtensionEvent = UninstallExtensionEvent & { profileLocation?: URI; applicationScoped?: boolean };\nexport type ServerDidUninstallExtensionEvent = DidUninstallExtensionEvent & { profileLocation?: URI; applicationScoped?: boolean };\n\nexport type ServerInstallOptions = InstallOptions & { profileLocation?: URI };\nexport type ServerInstallVSIXOptions = InstallVSIXOptions & { profileLocation?: URI };\nexport type ServerUninstallOptions = UninstallOptions & { profileLocation?: URI };\n\nexport const IServerExtensionManagementService = refineServiceDecorator<IExtensionManagementService, IServerExtensionManagementService>(IExtensionManagementService);\nexport interface IServerExtensionManagementService extends IExtensionManagementService {\n\treadonly _serviceBrand: undefined;\n\tonInstallExtension: Event<ServerInstallExtensionEvent>;\n\tonDidInstallExtensions: Event<readonly ServerInstallExtensionResult[]>;\n\tonUninstallExtension: Event<ServerUninstallExtensionEvent>;\n\tonDidUninstallExtension: Event<ServerDidUninstallExtensionEvent>;\n\tgetInstalled(type?: ExtensionType, profileLocation?: URI): Promise<ILocalExtension[]>;\n\tinstall(vsix: URI, options?: ServerInstallVSIXOptions): Promise<ILocalExtension>;\n\tinstallFromGallery(extension: IGalleryExtension, options?: ServerInstallOptions): Promise<ILocalExtension>;\n\tuninstall(extension: ILocalExtension, options?: ServerUninstallOptions): Promise<void>;\n}\n\nexport const DISABLED_EXTENSIONS_STORAGE_PATH = 'extensionsIdentifiers/disabled';\nexport const ENABLED_EXTENSIONS_STORAGE_PATH = 'extensionsIdentifiers/enabled';\nexport const IGlobalExtensionEnablementService = createDecorator<IGlobalExtensionEnablementService>('IGlobalExtensionEnablementService');\n\nexport interface IGlobalExtensionEnablementService {\n\treadonly _serviceBrand: undefined;\n\treadonly onDidChangeEnablement: Event<{ readonly extensions: IExtensionIdentifier[]; readonly source?: string }>;\n\n\tgetDisabledExtensions(): IExtensionIdentifier[];\n\tenableExtension(extension: IExtensionIdentifier, source?: string): Promise<boolean>;\n\tdisableExtension(extension: IExtensionIdentifier, source?: string): Promise<boolean>;\n\n}\n\nexport type IConfigBasedExtensionTip = {\n\treadonly extensionId: string;\n\treadonly extensionName: string;\n\treadonly isExtensionPack: boolean;\n\treadonly configName: string;\n\treadonly important: boolean;\n\treadonly whenNotInstalled?: string[];\n};\n\nexport type IExecutableBasedExtensionTip = {\n\treadonly extensionId: string;\n\treadonly extensionName: string;\n\treadonly isExtensionPack: boolean;\n\treadonly exeName: string;\n\treadonly exeFriendlyName: string;\n\treadonly windowsPath?: string;\n\treadonly whenNotInstalled?: string[];\n};\n\nexport type IWorkspaceTips = { readonly remoteSet: string[]; readonly recommendations: string[] };\n\nexport const IExtensionTipsService = createDecorator<IExtensionTipsService>('IExtensionTipsService');\nexport interface IExtensionTipsService {\n\treadonly _serviceBrand: undefined;\n\n\tgetConfigBasedTips(folder: URI): Promise<IConfigBasedExtensionTip[]>;\n\tgetImportantExecutableBasedTips(): Promise<IExecutableBasedExtensionTip[]>;\n\tgetOtherExecutableBasedTips(): Promise<IExecutableBasedExtensionTip[]>;\n\tgetAllWorkspacesTips(): Promise<IWorkspaceTips[]>;\n}\n\n\nexport const ExtensionsLabel = localize('extensions', \"Extensions\");\nexport const ExtensionsLocalizedLabel = { value: ExtensionsLabel, original: 'Extensions' };\nexport const ExtensionsChannelId = 'extensions';\nexport const PreferencesLabel = localize('preferences', \"Preferences\");\nexport const PreferencesLocalizedLabel = { value: PreferencesLabel, original: 'Preferences' };\n\n\nexport interface CLIOutput {\n\tlog(s: string): void;\n\terror(s: string): void;\n}\n\nexport const IExtensionManagementCLIService = createDecorator<IExtensionManagementCLIService>('IExtensionManagementCLIService');\nexport interface IExtensionManagementCLIService {\n\treadonly _serviceBrand: undefined;\n\n\tlistExtensions(showVersions: boolean, category?: string, output?: CLIOutput): Promise<void>;\n\tinstallExtensions(extensions: (string | URI)[], builtinExtensionIds: string[], installOptions: InstallOptions, force: boolean, output?: CLIOutput): Promise<void>;\n\tuninstallExtensions(extensions: (string | URI)[], force: boolean, output?: CLIOutput): Promise<void>;\n\tlocateExtension(extensions: string[], output?: CLIOutput): Promise<void>;\n}\n\nexport const IDefaultExtensionsProfileInitService = createDecorator<IDefaultExtensionsProfileInitService>('IDefaultExtensionsProfileInitService');\nexport interface IDefaultExtensionsProfileInitService {\n\treadonly _serviceBrand: undefined;\n\tinitialize(): Promise<void>;\n\tuninitialize(): Promise<void>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { revive } from 'vs/base/common/marshalling';\nimport { cloneAndChange } from 'vs/base/common/objects';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { DefaultURITransformer, IURITransformer, transformAndReviveIncomingURIs } from 'vs/base/common/uriIpc';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IExtensionIdentifier, IExtensionManagementService, IExtensionTipsService, IGalleryExtension, IGalleryMetadata, ILocalExtension, IExtensionsControlManifest, isTargetPlatformCompatible, IServerExtensionManagementService, ServerInstallOptions, ServerInstallVSIXOptions, ServerUninstallOptions, Metadata, ServerUninstallExtensionEvent, ServerInstallExtensionEvent, ServerInstallExtensionResult, ServerDidUninstallExtensionEvent } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionType, IExtensionManifest, TargetPlatform } from 'vs/platform/extensions/common/extensions';\n\nfunction transformIncomingURI(uri: UriComponents, transformer: IURITransformer | null): URI {\n\treturn URI.revive(transformer ? transformer.transformIncoming(uri) : uri);\n}\n\nfunction transformOutgoingURI(uri: URI, transformer: IURITransformer | null): URI {\n\treturn transformer ? transformer.transformOutgoingURI(uri) : uri;\n}\n\nfunction transformIncomingExtension(extension: ILocalExtension, transformer: IURITransformer | null): ILocalExtension {\n\ttransformer = transformer ? transformer : DefaultURITransformer;\n\tconst manifest = extension.manifest;\n\tconst transformed = transformAndReviveIncomingURIs({ ...extension, ...{ manifest: undefined } }, transformer);\n\treturn { ...transformed, ...{ manifest } };\n}\n\nfunction transformOutgoingExtension(extension: ILocalExtension, transformer: IURITransformer | null): ILocalExtension {\n\treturn transformer ? cloneAndChange(extension, value => value instanceof URI ? transformer.transformOutgoingURI(value) : undefined) : extension;\n}\n\nexport class ExtensionManagementChannel implements IServerChannel {\n\n\tonInstallExtension: Event<ServerInstallExtensionEvent>;\n\tonDidInstallExtensions: Event<readonly ServerInstallExtensionResult[]>;\n\tonUninstallExtension: Event<ServerUninstallExtensionEvent>;\n\tonDidUninstallExtension: Event<ServerDidUninstallExtensionEvent>;\n\n\tconstructor(private service: IServerExtensionManagementService, private getUriTransformer: (requestContext: any) => IURITransformer | null) {\n\t\tthis.onInstallExtension = Event.buffer(service.onInstallExtension, true);\n\t\tthis.onDidInstallExtensions = Event.buffer(service.onDidInstallExtensions, true);\n\t\tthis.onUninstallExtension = Event.buffer(service.onUninstallExtension, true);\n\t\tthis.onDidUninstallExtension = Event.buffer(service.onDidUninstallExtension, true);\n\t}\n\n\tlisten(context: any, event: string): Event<any> {\n\t\tconst uriTransformer = this.getUriTransformer(context);\n\t\tswitch (event) {\n\t\t\tcase 'onInstallExtension': return this.onInstallExtension;\n\t\t\tcase 'onDidInstallExtensions': return Event.map(this.onDidInstallExtensions, results => results.map(i => ({ ...i, local: i.local ? transformOutgoingExtension(i.local, uriTransformer) : i.local })));\n\t\t\tcase 'onUninstallExtension': return this.onUninstallExtension;\n\t\t\tcase 'onDidUninstallExtension': return this.onDidUninstallExtension;\n\t\t}\n\n\t\tthrow new Error('Invalid listen');\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tconst uriTransformer: IURITransformer | null = this.getUriTransformer(context);\n\t\tswitch (command) {\n\t\t\tcase 'zip': return this.service.zip(transformIncomingExtension(args[0], uriTransformer)).then(uri => transformOutgoingURI(uri, uriTransformer));\n\t\t\tcase 'unzip': return this.service.unzip(transformIncomingURI(args[0], uriTransformer));\n\t\t\tcase 'install': return this.service.install(transformIncomingURI(args[0], uriTransformer), revive(args[1]));\n\t\t\tcase 'getManifest': return this.service.getManifest(transformIncomingURI(args[0], uriTransformer));\n\t\t\tcase 'getTargetPlatform': return this.service.getTargetPlatform();\n\t\t\tcase 'canInstall': return this.service.canInstall(args[0]);\n\t\t\tcase 'installFromGallery': return this.service.installFromGallery(args[0], revive(args[1]));\n\t\t\tcase 'uninstall': return this.service.uninstall(transformIncomingExtension(args[0], uriTransformer), revive(args[1]));\n\t\t\tcase 'reinstallFromGallery': return this.service.reinstallFromGallery(transformIncomingExtension(args[0], uriTransformer));\n\t\t\tcase 'getInstalled': return this.service.getInstalled(args[0], URI.revive(args[1])).then(extensions => extensions.map(e => transformOutgoingExtension(e, uriTransformer)));\n\t\t\tcase 'getMetadata': return this.service.getMetadata(transformIncomingExtension(args[0], uriTransformer));\n\t\t\tcase 'updateMetadata': return this.service.updateMetadata(transformIncomingExtension(args[0], uriTransformer), args[1]).then(e => transformOutgoingExtension(e, uriTransformer));\n\t\t\tcase 'updateExtensionScope': return this.service.updateExtensionScope(transformIncomingExtension(args[0], uriTransformer), args[1]).then(e => transformOutgoingExtension(e, uriTransformer));\n\t\t\tcase 'getExtensionsControlManifest': return this.service.getExtensionsControlManifest();\n\t\t}\n\n\t\tthrow new Error('Invalid call');\n\t}\n}\n\nexport class ExtensionManagementChannelClient extends Disposable implements IExtensionManagementService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onInstallExtension = this._register(new Emitter<ServerInstallExtensionEvent>());\n\tget onInstallExtension() { return this._onInstallExtension.event; }\n\n\tprivate readonly _onDidInstallExtensions = this._register(new Emitter<readonly ServerInstallExtensionResult[]>());\n\tget onDidInstallExtensions() { return this._onDidInstallExtensions.event; }\n\n\tprivate readonly _onUninstallExtension = this._register(new Emitter<ServerUninstallExtensionEvent>());\n\tget onUninstallExtension() { return this._onUninstallExtension.event; }\n\n\tprivate readonly _onDidUninstallExtension = this._register(new Emitter<ServerDidUninstallExtensionEvent>());\n\tget onDidUninstallExtension() { return this._onDidUninstallExtension.event; }\n\n\tconstructor(private readonly channel: IChannel) {\n\t\tsuper();\n\t\tthis._register(this.channel.listen<ServerInstallExtensionEvent>('onInstallExtension')(e => this._onInstallExtension.fire({ identifier: e.identifier, source: this.isUriComponents(e.source) ? URI.revive(e.source) : e.source, profileLocation: URI.revive(e.profileLocation) })));\n\t\tthis._register(this.channel.listen<readonly ServerInstallExtensionResult[]>('onDidInstallExtensions')(results => this._onDidInstallExtensions.fire(results.map(e => ({ ...e, local: e.local ? transformIncomingExtension(e.local, null) : e.local, source: this.isUriComponents(e.source) ? URI.revive(e.source) : e.source, profileLocation: URI.revive(e.profileLocation) })))));\n\t\tthis._register(this.channel.listen<ServerUninstallExtensionEvent>('onUninstallExtension')(e => this._onUninstallExtension.fire({ identifier: e.identifier, profileLocation: URI.revive(e.profileLocation) })));\n\t\tthis._register(this.channel.listen<ServerDidUninstallExtensionEvent>('onDidUninstallExtension')(e => this._onDidUninstallExtension.fire({ ...e, profileLocation: URI.revive(e.profileLocation) })));\n\t}\n\n\tprivate isUriComponents(thing: unknown): thing is UriComponents {\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<any>thing).path === 'string' &&\n\t\t\ttypeof (<any>thing).scheme === 'string';\n\t}\n\n\tprotected _targetPlatformPromise: Promise<TargetPlatform> | undefined;\n\tgetTargetPlatform(): Promise<TargetPlatform> {\n\t\tif (!this._targetPlatformPromise) {\n\t\t\tthis._targetPlatformPromise = this.channel.call<TargetPlatform>('getTargetPlatform');\n\t\t}\n\t\treturn this._targetPlatformPromise;\n\t}\n\n\tasync canInstall(extension: IGalleryExtension): Promise<boolean> {\n\t\tconst currentTargetPlatform = await this.getTargetPlatform();\n\t\treturn extension.allTargetPlatforms.some(targetPlatform => isTargetPlatformCompatible(targetPlatform, extension.allTargetPlatforms, currentTargetPlatform));\n\t}\n\n\tzip(extension: ILocalExtension): Promise<URI> {\n\t\treturn Promise.resolve(this.channel.call('zip', [extension]).then(result => URI.revive(<UriComponents>result)));\n\t}\n\n\tunzip(zipLocation: URI): Promise<IExtensionIdentifier> {\n\t\treturn Promise.resolve(this.channel.call('unzip', [zipLocation]));\n\t}\n\n\tinstall(vsix: URI, options?: ServerInstallVSIXOptions): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('install', [vsix, options])).then(local => transformIncomingExtension(local, null));\n\t}\n\n\tgetManifest(vsix: URI): Promise<IExtensionManifest> {\n\t\treturn Promise.resolve(this.channel.call<IExtensionManifest>('getManifest', [vsix]));\n\t}\n\n\tinstallFromGallery(extension: IGalleryExtension, installOptions?: ServerInstallOptions): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('installFromGallery', [extension, installOptions])).then(local => transformIncomingExtension(local, null));\n\t}\n\n\tuninstall(extension: ILocalExtension, options?: ServerUninstallOptions): Promise<void> {\n\t\treturn Promise.resolve(this.channel.call('uninstall', [extension!, options]));\n\t}\n\n\treinstallFromGallery(extension: ILocalExtension): Promise<void> {\n\t\treturn Promise.resolve(this.channel.call('reinstallFromGallery', [extension]));\n\t}\n\n\tgetInstalled(type: ExtensionType | null = null, extensionsProfileResource?: URI): Promise<ILocalExtension[]> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension[]>('getInstalled', [type, extensionsProfileResource]))\n\t\t\t.then(extensions => extensions.map(extension => transformIncomingExtension(extension, null)));\n\t}\n\n\tgetMetadata(local: ILocalExtension): Promise<Metadata | undefined> {\n\t\treturn Promise.resolve(this.channel.call<Metadata>('getMetadata', [local]));\n\t}\n\n\tupdateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('updateMetadata', [local, metadata]))\n\t\t\t.then(extension => transformIncomingExtension(extension, null));\n\t}\n\n\tupdateExtensionScope(local: ILocalExtension, isMachineScoped: boolean): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('updateExtensionScope', [local, isMachineScoped]))\n\t\t\t.then(extension => transformIncomingExtension(extension, null));\n\t}\n\n\tgetExtensionsControlManifest(): Promise<IExtensionsControlManifest> {\n\t\treturn Promise.resolve(this.channel.call('getExtensionsControlManifest'));\n\t}\n\n\tregisterParticipant() { throw new Error('Not Supported'); }\n}\n\nexport class ExtensionTipsChannel implements IServerChannel {\n\n\tconstructor(private service: IExtensionTipsService) {\n\t}\n\n\tlisten(context: any, event: string): Event<any> {\n\t\tthrow new Error('Invalid listen');\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'getConfigBasedTips': return this.service.getConfigBasedTips(URI.revive(args[0]));\n\t\t\tcase 'getImportantExecutableBasedTips': return this.service.getImportantExecutableBasedTips();\n\t\t\tcase 'getOtherExecutableBasedTips': return this.service.getOtherExecutableBasedTips();\n\t\t\tcase 'getAllWorkspacesTips': return this.service.getAllWorkspacesTips();\n\t\t}\n\n\t\tthrow new Error('Invalid call');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer, VSBufferReadable, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Event } from 'vs/base/common/event';\nimport { IExpression, IRelativePattern } from 'vs/base/common/glob';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { sep } from 'vs/base/common/path';\nimport { ReadableStreamEvents } from 'vs/base/common/stream';\nimport { startsWithIgnoreCase } from 'vs/base/common/strings';\nimport { isNumber } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\n//#region file service & providers\n\nexport const IFileService = createDecorator<IFileService>('fileService');\n\nexport interface IFileService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * An event that is fired when a file system provider is added or removed\n\t */\n\treadonly onDidChangeFileSystemProviderRegistrations: Event<IFileSystemProviderRegistrationEvent>;\n\n\t/**\n\t * An event that is fired when a registered file system provider changes it's capabilities.\n\t */\n\treadonly onDidChangeFileSystemProviderCapabilities: Event<IFileSystemProviderCapabilitiesChangeEvent>;\n\n\t/**\n\t * An event that is fired when a file system provider is about to be activated. Listeners\n\t * can join this event with a long running promise to help in the activation process.\n\t */\n\treadonly onWillActivateFileSystemProvider: Event<IFileSystemProviderActivationEvent>;\n\n\t/**\n\t * Registers a file system provider for a certain scheme.\n\t */\n\tregisterProvider(scheme: string, provider: IFileSystemProvider): IDisposable;\n\n\t/**\n\t * Returns a file system provider for a certain scheme.\n\t */\n\tgetProvider(scheme: string): IFileSystemProvider | undefined;\n\n\t/**\n\t * Tries to activate a provider with the given scheme.\n\t */\n\tactivateProvider(scheme: string): Promise<void>;\n\n\t/**\n\t * Checks if this file service can handle the given resource by\n\t * first activating any extension that wants to be activated\n\t * on the provided resource scheme to include extensions that\n\t * contribute file system providers for the given resource.\n\t */\n\tcanHandleResource(resource: URI): Promise<boolean>;\n\n\t/**\n\t * Checks if the file service has a registered provider for the\n\t * provided resource.\n\t *\n\t * Note: this does NOT account for contributed providers from\n\t * extensions that have not been activated yet. To include those,\n\t * consider to call `await fileService.canHandleResource(resource)`.\n\t */\n\thasProvider(resource: URI): boolean;\n\n\t/**\n\t * Checks if the provider for the provided resource has the provided file system capability.\n\t */\n\thasCapability(resource: URI, capability: FileSystemProviderCapabilities): boolean;\n\n\t/**\n\t * List the schemes and capabilies for registered file system providers\n\t */\n\tlistCapabilities(): Iterable<{ scheme: string; capabilities: FileSystemProviderCapabilities }>;\n\n\t/**\n\t * Allows to listen for file changes. The event will fire for every file within the opened workspace\n\t * (if any) as well as all files that have been watched explicitly using the #watch() API.\n\t */\n\treadonly onDidFilesChange: Event<FileChangesEvent>;\n\n\t/**\n\t * An event that is fired upon successful completion of a certain file operation.\n\t */\n\treadonly onDidRunOperation: Event<FileOperationEvent>;\n\n\t/**\n\t * Resolve the properties of a file/folder identified by the resource. For a folder, children\n\t * information is resolved as well depending on the provided options. Use `stat()` method if\n\t * you do not need children information.\n\t *\n\t * If the optional parameter \"resolveTo\" is specified in options, the stat service is asked\n\t * to provide a stat object that should contain the full graph of folders up to all of the\n\t * target resources.\n\t *\n\t * If the optional parameter \"resolveSingleChildDescendants\" is specified in options,\n\t * the stat service is asked to automatically resolve child folders that only\n\t * contain a single element.\n\t *\n\t * If the optional parameter \"resolveMetadata\" is specified in options,\n\t * the stat will contain metadata information such as size, mtime and etag.\n\t */\n\tresolve(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tresolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\n\t/**\n\t * Same as `resolve()` but supports resolving multiple resources in parallel.\n\t *\n\t * If one of the resolve targets fails to resolve returns a fake `IFileStat` instead of\n\t * making the whole call fail.\n\t */\n\tresolveAll(toResolve: { resource: URI; options: IResolveMetadataFileOptions }[]): Promise<IFileStatResult[]>;\n\tresolveAll(toResolve: { resource: URI; options?: IResolveFileOptions }[]): Promise<IFileStatResult[]>;\n\n\t/**\n\t * Same as `resolve()` but without resolving the children of a folder if the\n\t * resource is pointing to a folder.\n\t */\n\tstat(resource: URI): Promise<IFileStatWithPartialMetadata>;\n\n\t/**\n\t * Finds out if a file/folder identified by the resource exists.\n\t */\n\texists(resource: URI): Promise<boolean>;\n\n\t/**\n\t * Read the contents of the provided resource unbuffered.\n\t */\n\treadFile(resource: URI, options?: IReadFileOptions, token?: CancellationToken): Promise<IFileContent>;\n\n\t/**\n\t * Read the contents of the provided resource buffered as stream.\n\t */\n\treadFileStream(resource: URI, options?: IReadFileStreamOptions, token?: CancellationToken): Promise<IFileStreamContent>;\n\n\t/**\n\t * Updates the content replacing its previous value.\n\t *\n\t * Emits a `FileOperation.WRITE` file operation event when successful.\n\t */\n\twriteFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: IWriteFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Moves the file/folder to a new path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t *\n\t * Emits a `FileOperation.MOVE` file operation event when successful.\n\t */\n\tmove(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Find out if a move operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanMove(source: URI, target: URI, overwrite?: boolean): Promise<Error | true>;\n\n\t/**\n\t * Copies the file/folder to a path identified by the resource. A folder is copied\n\t * recursively.\n\t *\n\t * Emits a `FileOperation.COPY` file operation event when successful.\n\t */\n\tcopy(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Find out if a copy operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanCopy(source: URI, target: URI, overwrite?: boolean): Promise<Error | true>;\n\n\t/**\n\t * Clones a file to a path identified by the resource. Folders are not supported.\n\t *\n\t * If the target path exists, it will be overwritten.\n\t */\n\tcloneFile(source: URI, target: URI): Promise<void>;\n\n\t/**\n\t * Creates a new file with the given path and optional contents. The returned promise\n\t * will have the stat model object as a result.\n\t *\n\t * The optional parameter content can be used as value to fill into the new file.\n\t *\n\t * Emits a `FileOperation.CREATE` file operation event when successful.\n\t */\n\tcreateFile(resource: URI, bufferOrReadableOrStream?: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: ICreateFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Find out if a file create operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanCreateFile(resource: URI, options?: ICreateFileOptions): Promise<Error | true>;\n\n\t/**\n\t * Creates a new folder with the given path. The returned promise\n\t * will have the stat model object as a result.\n\t *\n\t * Emits a `FileOperation.CREATE` file operation event when successful.\n\t */\n\tcreateFolder(resource: URI): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Deletes the provided file. The optional useTrash parameter allows to\n\t * move the file to trash. The optional recursive parameter allows to delete\n\t * non-empty folders recursively.\n\t *\n\t * Emits a `FileOperation.DELETE` file operation event when successful.\n\t */\n\tdel(resource: URI, options?: Partial<IFileDeleteOptions>): Promise<void>;\n\n\t/**\n\t * Find out if a delete operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanDelete(resource: URI, options?: Partial<IFileDeleteOptions>): Promise<Error | true>;\n\n\t/**\n\t * An event that signals an error when watching for file changes.\n\t */\n\treadonly onDidWatchError: Event<Error>;\n\n\t/**\n\t * Allows to start a watcher that reports file/folder change events on the provided resource.\n\t *\n\t * Note: recursive file watching is not supported from this method. Only events from files\n\t * that are direct children of the provided resource will be reported.\n\t */\n\twatch(resource: URI, options?: IWatchOptions): IDisposable;\n\n\t/**\n\t * Frees up any resources occupied by this service.\n\t */\n\tdispose(): void;\n}\n\nexport interface IFileOverwriteOptions {\n\n\t/**\n\t * Set to `true` to overwrite a file if it exists. Will\n\t * throw an error otherwise if the file does exist.\n\t */\n\treadonly overwrite: boolean;\n}\n\nexport interface IFileUnlockOptions {\n\n\t/**\n\t * Set to `true` to try to remove any write locks the file might\n\t * have. A file that is write locked will throw an error for any\n\t * attempt to write to unless `unlock: true` is provided.\n\t */\n\treadonly unlock: boolean;\n}\n\nexport interface IFileAtomicReadOptions {\n\n\t/**\n\t * The optional `atomic` flag can be used to make sure\n\t * the `readFile` method is not running in parallel with\n\t * any `write` operations in the same process.\n\t *\n\t * Typically you should not need to use this flag but if\n\t * for example you are quickly reading a file right after\n\t * a file event occurred and the file changes a lot, there\n\t * is a chance that a read returns an empty or partial file\n\t * because a pending write has not finished yet.\n\t *\n\t * Note: this does not prevent the file from being written\n\t * to from a different process. If you need such atomic\n\t * operations, you better use a real database as storage.\n\t */\n\treadonly atomic: true;\n}\n\nexport interface IFileReadStreamOptions {\n\n\t/**\n\t * Is an integer specifying where to begin reading from in the file. If position is undefined,\n\t * data will be read from the current file position.\n\t */\n\treadonly position?: number;\n\n\t/**\n\t * Is an integer specifying how many bytes to read from the file. By default, all bytes\n\t * will be read.\n\t */\n\treadonly length?: number;\n\n\t/**\n\t * If provided, the size of the file will be checked against the limits.\n\t */\n\tlimits?: {\n\t\treadonly size?: number;\n\t\treadonly memory?: number;\n\t};\n}\n\nexport interface IFileWriteOptions extends IFileOverwriteOptions, IFileUnlockOptions {\n\n\t/**\n\t * Set to `true` to create a file when it does not exist. Will\n\t * throw an error otherwise if the file does not exist.\n\t */\n\treadonly create: boolean;\n}\n\nexport type IFileOpenOptions = IFileOpenForReadOptions | IFileOpenForWriteOptions;\n\nexport function isFileOpenForWriteOptions(options: IFileOpenOptions): options is IFileOpenForWriteOptions {\n\treturn options.create === true;\n}\n\nexport interface IFileOpenForReadOptions {\n\n\t/**\n\t * A hint that the file should be opened for reading only.\n\t */\n\treadonly create: false;\n}\n\nexport interface IFileOpenForWriteOptions extends IFileUnlockOptions {\n\n\t/**\n\t * A hint that the file should be opened for reading and writing.\n\t */\n\treadonly create: true;\n}\n\nexport interface IFileDeleteOptions {\n\n\t/**\n\t * Set to `true` to recursively delete any children of the file. This\n\t * only applies to folders and can lead to an error unless provided\n\t * if the folder is not empty.\n\t */\n\treadonly recursive: boolean;\n\n\t/**\n\t * Set to `true` to attempt to move the file to trash\n\t * instead of deleting it permanently from disk. This\n\t * option maybe not be supported on all providers.\n\t */\n\treadonly useTrash: boolean;\n}\n\nexport enum FileType {\n\n\t/**\n\t * File is unknown (neither file, directory nor symbolic link).\n\t */\n\tUnknown = 0,\n\n\t/**\n\t * File is a normal file.\n\t */\n\tFile = 1,\n\n\t/**\n\t * File is a directory.\n\t */\n\tDirectory = 2,\n\n\t/**\n\t * File is a symbolic link.\n\t *\n\t * Note: even when the file is a symbolic link, you can test for\n\t * `FileType.File` and `FileType.Directory` to know the type of\n\t * the target the link points to.\n\t */\n\tSymbolicLink = 64\n}\n\nexport enum FilePermission {\n\n\t/**\n\t * File is readonly.\n\t */\n\tReadonly = 1\n}\n\nexport interface IStat {\n\n\t/**\n\t * The file type.\n\t */\n\treadonly type: FileType;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t */\n\treadonly mtime: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t */\n\treadonly ctime: number;\n\n\t/**\n\t * The size of the file in bytes.\n\t */\n\treadonly size: number;\n\n\t/**\n\t * The file permissions.\n\t */\n\treadonly permissions?: FilePermission;\n}\n\nexport interface IWatchOptions {\n\n\t/**\n\t * Set to `true` to watch for changes recursively in a folder\n\t * and all of its children.\n\t */\n\treadonly recursive: boolean;\n\n\t/**\n\t * A set of glob patterns or paths to exclude from watching.\n\t */\n\texcludes: string[];\n\n\t/**\n\t * An optional set of glob patterns or paths to include for\n\t * watching. If not provided, all paths are considered for\n\t * events.\n\t */\n\tincludes?: Array<string | IRelativePattern>;\n}\n\nexport const enum FileSystemProviderCapabilities {\n\n\t/**\n\t * Provider supports unbuffered read/write.\n\t */\n\tFileReadWrite = 1 << 1,\n\n\t/**\n\t * Provider supports open/read/write/close low level file operations.\n\t */\n\tFileOpenReadWriteClose = 1 << 2,\n\n\t/**\n\t * Provider supports stream based reading.\n\t */\n\tFileReadStream = 1 << 4,\n\n\t/**\n\t * Provider supports copy operation.\n\t */\n\tFileFolderCopy = 1 << 3,\n\n\t/**\n\t * Provider is path case sensitive.\n\t */\n\tPathCaseSensitive = 1 << 10,\n\n\t/**\n\t * All files of the provider are readonly.\n\t */\n\tReadonly = 1 << 11,\n\n\t/**\n\t * Provider supports to delete via trash.\n\t */\n\tTrash = 1 << 12,\n\n\t/**\n\t * Provider support to unlock files for writing.\n\t */\n\tFileWriteUnlock = 1 << 13,\n\n\t/**\n\t * Provider support to read files atomically. This implies the\n\t * provider provides the `FileReadWrite` capability too.\n\t */\n\tFileAtomicRead = 1 << 14,\n\n\t/**\n\t * Provider support to clone files atomically.\n\t */\n\tFileClone = 1 << 15\n}\n\nexport interface IFileSystemProvider {\n\n\treadonly capabilities: FileSystemProviderCapabilities;\n\treadonly onDidChangeCapabilities: Event<void>;\n\n\treadonly onDidChangeFile: Event<readonly IFileChange[]>;\n\treadonly onDidWatchError?: Event<string>;\n\twatch(resource: URI, opts: IWatchOptions): IDisposable;\n\n\tstat(resource: URI): Promise<IStat>;\n\tmkdir(resource: URI): Promise<void>;\n\treaddir(resource: URI): Promise<[string, FileType][]>;\n\tdelete(resource: URI, opts: IFileDeleteOptions): Promise<void>;\n\n\trename(from: URI, to: URI, opts: IFileOverwriteOptions): Promise<void>;\n\tcopy?(from: URI, to: URI, opts: IFileOverwriteOptions): Promise<void>;\n\n\treadFile?(resource: URI): Promise<Uint8Array>;\n\twriteFile?(resource: URI, content: Uint8Array, opts: IFileWriteOptions): Promise<void>;\n\n\treadFileStream?(resource: URI, opts: IFileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array>;\n\n\topen?(resource: URI, opts: IFileOpenOptions): Promise<number>;\n\tclose?(fd: number): Promise<void>;\n\tread?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\n\tcloneFile?(from: URI, to: URI): Promise<void>;\n}\n\nexport interface IFileSystemProviderWithFileReadWriteCapability extends IFileSystemProvider {\n\treadFile(resource: URI): Promise<Uint8Array>;\n\twriteFile(resource: URI, content: Uint8Array, opts: IFileWriteOptions): Promise<void>;\n}\n\nexport function hasReadWriteCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadWriteCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadWrite);\n}\n\nexport interface IFileSystemProviderWithFileFolderCopyCapability extends IFileSystemProvider {\n\tcopy(from: URI, to: URI, opts: IFileOverwriteOptions): Promise<void>;\n}\n\nexport function hasFileFolderCopyCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileFolderCopyCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileFolderCopy);\n}\n\nexport interface IFileSystemProviderWithFileCloneCapability extends IFileSystemProvider {\n\tcloneFile(from: URI, to: URI): Promise<void>;\n}\n\nexport function hasFileCloneCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileCloneCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileClone);\n}\n\nexport interface IFileSystemProviderWithOpenReadWriteCloseCapability extends IFileSystemProvider {\n\topen(resource: URI, opts: IFileOpenOptions): Promise<number>;\n\tclose(fd: number): Promise<void>;\n\tread(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport function hasOpenReadWriteCloseCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithOpenReadWriteCloseCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileOpenReadWriteClose);\n}\n\nexport interface IFileSystemProviderWithFileReadStreamCapability extends IFileSystemProvider {\n\treadFileStream(resource: URI, opts: IFileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array>;\n}\n\nexport function hasFileReadStreamCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadStreamCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadStream);\n}\n\nexport interface IFileSystemProviderWithFileAtomicReadCapability extends IFileSystemProvider {\n\treadFile(resource: URI, opts?: IFileAtomicReadOptions): Promise<Uint8Array>;\n}\n\nexport function hasFileAtomicReadCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileAtomicReadCapability {\n\tif (!hasReadWriteCapability(provider)) {\n\t\treturn false; // we require the `FileReadWrite` capability too\n\t}\n\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileAtomicRead);\n}\n\nexport enum FileSystemProviderErrorCode {\n\tFileExists = 'EntryExists',\n\tFileNotFound = 'EntryNotFound',\n\tFileNotADirectory = 'EntryNotADirectory',\n\tFileIsADirectory = 'EntryIsADirectory',\n\tFileExceedsMemoryLimit = 'EntryExceedsMemoryLimit',\n\tFileTooLarge = 'EntryTooLarge',\n\tFileWriteLocked = 'EntryWriteLocked',\n\tNoPermissions = 'NoPermissions',\n\tUnavailable = 'Unavailable',\n\tUnknown = 'Unknown'\n}\n\nexport class FileSystemProviderError extends Error {\n\n\tconstructor(message: string, readonly code: FileSystemProviderErrorCode) {\n\t\tsuper(message);\n\t}\n}\n\nexport function createFileSystemProviderError(error: Error | string, code: FileSystemProviderErrorCode): FileSystemProviderError {\n\tconst providerError = new FileSystemProviderError(error.toString(), code);\n\tmarkAsFileSystemProviderError(providerError, code);\n\n\treturn providerError;\n}\n\nexport function ensureFileSystemProviderError(error?: Error): Error {\n\tif (!error) {\n\t\treturn createFileSystemProviderError(localize('unknownError', \"Unknown Error\"), FileSystemProviderErrorCode.Unknown); // https://github.com/microsoft/vscode/issues/72798\n\t}\n\n\treturn error;\n}\n\nexport function markAsFileSystemProviderError(error: Error, code: FileSystemProviderErrorCode): Error {\n\terror.name = code ? `${code} (FileSystemError)` : `FileSystemError`;\n\n\treturn error;\n}\n\nexport function toFileSystemProviderErrorCode(error: Error | undefined | null): FileSystemProviderErrorCode {\n\n\t// Guard against abuse\n\tif (!error) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\t// FileSystemProviderError comes with the code\n\tif (error instanceof FileSystemProviderError) {\n\t\treturn error.code;\n\t}\n\n\t// Any other error, check for name match by assuming that the error\n\t// went through the markAsFileSystemProviderError() method\n\tconst match = /^(.+) \\(FileSystemError\\)$/.exec(error.name);\n\tif (!match) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\tswitch (match[1]) {\n\t\tcase FileSystemProviderErrorCode.FileExists: return FileSystemProviderErrorCode.FileExists;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory: return FileSystemProviderErrorCode.FileIsADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory: return FileSystemProviderErrorCode.FileNotADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotFound: return FileSystemProviderErrorCode.FileNotFound;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit: return FileSystemProviderErrorCode.FileExceedsMemoryLimit;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge: return FileSystemProviderErrorCode.FileTooLarge;\n\t\tcase FileSystemProviderErrorCode.FileWriteLocked: return FileSystemProviderErrorCode.FileWriteLocked;\n\t\tcase FileSystemProviderErrorCode.NoPermissions: return FileSystemProviderErrorCode.NoPermissions;\n\t\tcase FileSystemProviderErrorCode.Unavailable: return FileSystemProviderErrorCode.Unavailable;\n\t}\n\n\treturn FileSystemProviderErrorCode.Unknown;\n}\n\nexport function toFileOperationResult(error: Error): FileOperationResult {\n\n\t// FileSystemProviderError comes with the result already\n\tif (error instanceof FileOperationError) {\n\t\treturn error.fileOperationResult;\n\t}\n\n\t// Otherwise try to find from code\n\tswitch (toFileSystemProviderErrorCode(error)) {\n\t\tcase FileSystemProviderErrorCode.FileNotFound:\n\t\t\treturn FileOperationResult.FILE_NOT_FOUND;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory:\n\t\t\treturn FileOperationResult.FILE_IS_DIRECTORY;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory:\n\t\t\treturn FileOperationResult.FILE_NOT_DIRECTORY;\n\t\tcase FileSystemProviderErrorCode.FileWriteLocked:\n\t\t\treturn FileOperationResult.FILE_WRITE_LOCKED;\n\t\tcase FileSystemProviderErrorCode.NoPermissions:\n\t\t\treturn FileOperationResult.FILE_PERMISSION_DENIED;\n\t\tcase FileSystemProviderErrorCode.FileExists:\n\t\t\treturn FileOperationResult.FILE_MOVE_CONFLICT;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit:\n\t\t\treturn FileOperationResult.FILE_EXCEEDS_MEMORY_LIMIT;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge:\n\t\t\treturn FileOperationResult.FILE_TOO_LARGE;\n\t\tdefault:\n\t\t\treturn FileOperationResult.FILE_OTHER_ERROR;\n\t}\n}\n\nexport interface IFileSystemProviderRegistrationEvent {\n\treadonly added: boolean;\n\treadonly scheme: string;\n\treadonly provider?: IFileSystemProvider;\n}\n\nexport interface IFileSystemProviderCapabilitiesChangeEvent {\n\treadonly provider: IFileSystemProvider;\n\treadonly scheme: string;\n}\n\nexport interface IFileSystemProviderActivationEvent {\n\treadonly scheme: string;\n\tjoin(promise: Promise<void>): void;\n}\n\nexport const enum FileOperation {\n\tCREATE,\n\tDELETE,\n\tMOVE,\n\tCOPY,\n\tWRITE\n}\n\nexport interface IFileOperationEvent {\n\n\treadonly resource: URI;\n\treadonly operation: FileOperation;\n\n\tisOperation(operation: FileOperation.DELETE | FileOperation.WRITE): boolean;\n\tisOperation(operation: FileOperation.CREATE | FileOperation.MOVE | FileOperation.COPY): this is IFileOperationEventWithMetadata;\n}\n\nexport interface IFileOperationEventWithMetadata extends IFileOperationEvent {\n\treadonly target: IFileStatWithMetadata;\n}\n\nexport class FileOperationEvent implements IFileOperationEvent {\n\n\tconstructor(resource: URI, operation: FileOperation.DELETE | FileOperation.WRITE);\n\tconstructor(resource: URI, operation: FileOperation.CREATE | FileOperation.MOVE | FileOperation.COPY, target: IFileStatWithMetadata);\n\tconstructor(readonly resource: URI, readonly operation: FileOperation, readonly target?: IFileStatWithMetadata) { }\n\n\tisOperation(operation: FileOperation.DELETE | FileOperation.WRITE): boolean;\n\tisOperation(operation: FileOperation.CREATE | FileOperation.MOVE | FileOperation.COPY): this is IFileOperationEventWithMetadata;\n\tisOperation(operation: FileOperation): boolean {\n\t\treturn this.operation === operation;\n\t}\n}\n\n/**\n * Possible changes that can occur to a file.\n */\nexport const enum FileChangeType {\n\tUPDATED,\n\tADDED,\n\tDELETED\n}\n\n/**\n * Identifies a single change in a file.\n */\nexport interface IFileChange {\n\n\t/**\n\t * The type of change that occurred to the file.\n\t */\n\treadonly type: FileChangeType;\n\n\t/**\n\t * The unified resource identifier of the file that changed.\n\t */\n\treadonly resource: URI;\n}\n\nexport class FileChangesEvent {\n\n\tprivate readonly added: TernarySearchTree<URI, IFileChange> | undefined = undefined;\n\tprivate readonly updated: TernarySearchTree<URI, IFileChange> | undefined = undefined;\n\tprivate readonly deleted: TernarySearchTree<URI, IFileChange> | undefined = undefined;\n\n\tconstructor(changes: readonly IFileChange[], ignorePathCasing: boolean) {\n\t\tthis.rawChanges = changes;\n\n\t\tconst entriesByType = new Map<FileChangeType, [URI, IFileChange][]>();\n\n\t\tfor (const change of changes) {\n\t\t\tconst array = entriesByType.get(change.type);\n\t\t\tif (array) {\n\t\t\t\tarray.push([change.resource, change]);\n\t\t\t} else {\n\t\t\t\tentriesByType.set(change.type, [[change.resource, change]]);\n\t\t\t}\n\n\t\t\tswitch (change.type) {\n\t\t\t\tcase FileChangeType.ADDED:\n\t\t\t\t\tthis.rawAdded.push(change.resource);\n\t\t\t\t\tbreak;\n\t\t\t\tcase FileChangeType.UPDATED:\n\t\t\t\t\tthis.rawUpdated.push(change.resource);\n\t\t\t\t\tbreak;\n\t\t\t\tcase FileChangeType.DELETED:\n\t\t\t\t\tthis.rawDeleted.push(change.resource);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor (const [key, value] of entriesByType) {\n\t\t\tswitch (key) {\n\t\t\t\tcase FileChangeType.ADDED:\n\t\t\t\t\tthis.added = TernarySearchTree.forUris<IFileChange>(() => ignorePathCasing);\n\t\t\t\t\tthis.added.fill(value);\n\t\t\t\t\tbreak;\n\t\t\t\tcase FileChangeType.UPDATED:\n\t\t\t\t\tthis.updated = TernarySearchTree.forUris<IFileChange>(() => ignorePathCasing);\n\t\t\t\t\tthis.updated.fill(value);\n\t\t\t\t\tbreak;\n\t\t\t\tcase FileChangeType.DELETED:\n\t\t\t\t\tthis.deleted = TernarySearchTree.forUris<IFileChange>(() => ignorePathCasing);\n\t\t\t\t\tthis.deleted.fill(value);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Find out if the file change events match the provided resource.\n\t *\n\t * Note: when passing `FileChangeType.DELETED`, we consider a match\n\t * also when the parent of the resource got deleted.\n\t */\n\tcontains(resource: URI, ...types: FileChangeType[]): boolean {\n\t\treturn this.doContains(resource, { includeChildren: false }, ...types);\n\t}\n\n\t/**\n\t * Find out if the file change events either match the provided\n\t * resource, or contain a child of this resource.\n\t */\n\taffects(resource: URI, ...types: FileChangeType[]): boolean {\n\t\treturn this.doContains(resource, { includeChildren: true }, ...types);\n\t}\n\n\tprivate doContains(resource: URI, options: { includeChildren: boolean }, ...types: FileChangeType[]): boolean {\n\t\tif (!resource) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst hasTypesFilter = types.length > 0;\n\n\t\t// Added\n\t\tif (!hasTypesFilter || types.includes(FileChangeType.ADDED)) {\n\t\t\tif (this.added?.get(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (options.includeChildren && this.added?.findSuperstr(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t// Updated\n\t\tif (!hasTypesFilter || types.includes(FileChangeType.UPDATED)) {\n\t\t\tif (this.updated?.get(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (options.includeChildren && this.updated?.findSuperstr(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t// Deleted\n\t\tif (!hasTypesFilter || types.includes(FileChangeType.DELETED)) {\n\t\t\tif (this.deleted?.findSubstr(resource) /* deleted also considers parent folders */) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (options.includeChildren && this.deleted?.findSuperstr(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns if this event contains added files.\n\t */\n\tgotAdded(): boolean {\n\t\treturn !!this.added;\n\t}\n\n\t/**\n\t * Returns if this event contains deleted files.\n\t */\n\tgotDeleted(): boolean {\n\t\treturn !!this.deleted;\n\t}\n\n\t/**\n\t * Returns if this event contains updated files.\n\t */\n\tgotUpdated(): boolean {\n\t\treturn !!this.updated;\n\t}\n\n\t/**\n\t * @deprecated use the `contains` or `affects` method to efficiently find\n\t * out if the event relates to a given resource. these methods ensure:\n\t * - that there is no expensive lookup needed (by using a `TernarySearchTree`)\n\t * - correctly handles `FileChangeType.DELETED` events\n\t */\n\treadonly rawChanges: readonly IFileChange[] = [];\n\n\t/**\n\t * @deprecated use the `contains` or `affects` method to efficiently find\n\t * out if the event relates to a given resource. these methods ensure:\n\t * - that there is no expensive lookup needed (by using a `TernarySearchTree`)\n\t * - correctly handles `FileChangeType.DELETED` events\n\t */\n\treadonly rawAdded: URI[] = [];\n\n\t/**\n\t* @deprecated use the `contains` or `affects` method to efficiently find\n\t* out if the event relates to a given resource. these methods ensure:\n\t* - that there is no expensive lookup needed (by using a `TernarySearchTree`)\n\t* - correctly handles `FileChangeType.DELETED` events\n\t*/\n\treadonly rawUpdated: URI[] = [];\n\n\t/**\n\t* @deprecated use the `contains` or `affects` method to efficiently find\n\t* out if the event relates to a given resource. these methods ensure:\n\t* - that there is no expensive lookup needed (by using a `TernarySearchTree`)\n\t* - correctly handles `FileChangeType.DELETED` events\n\t*/\n\treadonly rawDeleted: URI[] = [];\n}\n\nexport function isParent(path: string, candidate: string, ignoreCase?: boolean): boolean {\n\tif (!path || !candidate || path === candidate) {\n\t\treturn false;\n\t}\n\n\tif (candidate.length > path.length) {\n\t\treturn false;\n\t}\n\n\tif (candidate.charAt(candidate.length - 1) !== sep) {\n\t\tcandidate += sep;\n\t}\n\n\tif (ignoreCase) {\n\t\treturn startsWithIgnoreCase(path, candidate);\n\t}\n\n\treturn path.indexOf(candidate) === 0;\n}\n\ninterface IBaseFileStat {\n\n\t/**\n\t * The unified resource identifier of this file or folder.\n\t */\n\treadonly resource: URI;\n\n\t/**\n\t * The name which is the last segment\n\t * of the {{path}}.\n\t */\n\treadonly name: string;\n\n\t/**\n\t * The size of the file.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\treadonly size?: number;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\treadonly mtime?: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\treadonly ctime?: number;\n\n\t/**\n\t * A unique identifier thet represents the\n\t * current state of the file or directory.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\treadonly etag?: string;\n\n\t/**\n\t * The file is read-only.\n\t */\n\treadonly readonly?: boolean;\n}\n\nexport interface IBaseFileStatWithMetadata extends Required<IBaseFileStat> { }\n\n/**\n * A file resource with meta information and resolved children if any.\n */\nexport interface IFileStat extends IBaseFileStat {\n\n\t/**\n\t * The resource is a file.\n\t */\n\treadonly isFile: boolean;\n\n\t/**\n\t * The resource is a directory.\n\t */\n\treadonly isDirectory: boolean;\n\n\t/**\n\t * The resource is a symbolic link. Note: even when the\n\t * file is a symbolic link, you can test for `FileType.File`\n\t * and `FileType.Directory` to know the type of the target\n\t * the link points to.\n\t */\n\treadonly isSymbolicLink: boolean;\n\n\t/**\n\t * The children of the file stat or undefined if none.\n\t */\n\tchildren: IFileStat[] | undefined;\n}\n\nexport interface IFileStatWithMetadata extends IFileStat, IBaseFileStatWithMetadata {\n\treadonly mtime: number;\n\treadonly ctime: number;\n\treadonly etag: string;\n\treadonly size: number;\n\treadonly readonly: boolean;\n\treadonly children: IFileStatWithMetadata[] | undefined;\n}\n\nexport interface IFileStatResult {\n\treadonly stat?: IFileStat;\n\treadonly success: boolean;\n}\n\nexport interface IFileStatResultWithMetadata extends IFileStatResult {\n\treadonly stat?: IFileStatWithMetadata;\n}\n\nexport interface IFileStatWithPartialMetadata extends Omit<IFileStatWithMetadata, 'children'> { }\n\nexport interface IFileContent extends IBaseFileStatWithMetadata {\n\n\t/**\n\t * The content of a file as buffer.\n\t */\n\treadonly value: VSBuffer;\n}\n\nexport interface IFileStreamContent extends IBaseFileStatWithMetadata {\n\n\t/**\n\t * The content of a file as stream.\n\t */\n\treadonly value: VSBufferReadableStream;\n}\n\nexport interface IBaseReadFileOptions extends IFileReadStreamOptions {\n\n\t/**\n\t * The optional etag parameter allows to return early from resolving the resource if\n\t * the contents on disk match the etag. This prevents accumulated reading of resources\n\t * that have been read already with the same etag.\n\t * It is the task of the caller to makes sure to handle this error case from the promise.\n\t */\n\treadonly etag?: string;\n}\n\nexport interface IReadFileStreamOptions extends IBaseReadFileOptions { }\n\nexport interface IReadFileOptions extends IBaseReadFileOptions {\n\n\t/**\n\t * The optional `atomic` flag can be used to make sure\n\t * the `readFile` method is not running in parallel with\n\t * any `write` operations in the same process.\n\t *\n\t * Typically you should not need to use this flag but if\n\t * for example you are quickly reading a file right after\n\t * a file event occurred and the file changes a lot, there\n\t * is a chance that a read returns an empty or partial file\n\t * because a pending write has not finished yet.\n\t *\n\t * Note: this does not prevent the file from being written\n\t * to from a different process. If you need such atomic\n\t * operations, you better use a real database as storage.\n\t */\n\treadonly atomic?: boolean;\n}\n\nexport interface IWriteFileOptions {\n\n\t/**\n\t * The last known modification time of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly mtime?: number;\n\n\t/**\n\t * The etag of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly etag?: string;\n\n\t/**\n\t * Whether to attempt to unlock a file before writing.\n\t */\n\treadonly unlock?: boolean;\n}\n\nexport interface IResolveFileOptions {\n\n\t/**\n\t * Automatically continue resolving children of a directory until the provided resources\n\t * are found.\n\t */\n\treadonly resolveTo?: readonly URI[];\n\n\t/**\n\t * Automatically continue resolving children of a directory if the number of children is 1.\n\t */\n\treadonly resolveSingleChildDescendants?: boolean;\n\n\t/**\n\t * Will resolve mtime, ctime, size and etag of files if enabled. This can have a negative impact\n\t * on performance and thus should only be used when these values are required.\n\t */\n\treadonly resolveMetadata?: boolean;\n}\n\nexport interface IResolveMetadataFileOptions extends IResolveFileOptions {\n\treadonly resolveMetadata: true;\n}\n\nexport interface ICreateFileOptions {\n\n\t/**\n\t * Overwrite the file to create if it already exists on disk. Otherwise\n\t * an error will be thrown (FILE_MODIFIED_SINCE).\n\t */\n\treadonly overwrite?: boolean;\n}\n\nexport class FileOperationError extends Error {\n\tconstructor(\n\t\tmessage: string,\n\t\treadonly fileOperationResult: FileOperationResult,\n\t\treadonly options?: IReadFileOptions & IWriteFileOptions & ICreateFileOptions\n\t) {\n\t\tsuper(message);\n\t}\n}\n\nexport class NotModifiedSinceFileOperationError extends FileOperationError {\n\n\tconstructor(\n\t\tmessage: string,\n\t\treadonly stat: IFileStatWithMetadata,\n\t\toptions?: IReadFileOptions\n\t) {\n\t\tsuper(message, FileOperationResult.FILE_NOT_MODIFIED_SINCE, options);\n\t}\n}\n\nexport const enum FileOperationResult {\n\tFILE_IS_DIRECTORY,\n\tFILE_NOT_FOUND,\n\tFILE_NOT_MODIFIED_SINCE,\n\tFILE_MODIFIED_SINCE,\n\tFILE_MOVE_CONFLICT,\n\tFILE_WRITE_LOCKED,\n\tFILE_PERMISSION_DENIED,\n\tFILE_TOO_LARGE,\n\tFILE_INVALID_PATH,\n\tFILE_EXCEEDS_MEMORY_LIMIT,\n\tFILE_NOT_DIRECTORY,\n\tFILE_OTHER_ERROR\n}\n\n//#endregion\n\n//#region Settings\n\nexport const AutoSaveConfiguration = {\n\tOFF: 'off',\n\tAFTER_DELAY: 'afterDelay',\n\tON_FOCUS_CHANGE: 'onFocusChange',\n\tON_WINDOW_CHANGE: 'onWindowChange'\n};\n\nexport const HotExitConfiguration = {\n\tOFF: 'off',\n\tON_EXIT: 'onExit',\n\tON_EXIT_AND_WINDOW_CLOSE: 'onExitAndWindowClose'\n};\n\nexport const FILES_ASSOCIATIONS_CONFIG = 'files.associations';\nexport const FILES_EXCLUDE_CONFIG = 'files.exclude';\n\nexport interface IFilesConfiguration {\n\tfiles: {\n\t\tassociations: { [filepattern: string]: string };\n\t\texclude: IExpression;\n\t\twatcherExclude: { [filepattern: string]: boolean };\n\t\twatcherInclude: string[];\n\t\tencoding: string;\n\t\tautoGuessEncoding: boolean;\n\t\tdefaultLanguage: string;\n\t\ttrimTrailingWhitespace: boolean;\n\t\tautoSave: string;\n\t\tautoSaveDelay: number;\n\t\teol: string;\n\t\tenableTrash: boolean;\n\t\thotExit: string;\n\t\tsaveConflictResolution: 'askUser' | 'overwriteFileOnDisk';\n\t};\n}\n\n//#endregion\n\n//#region Utilities\n\nexport enum FileKind {\n\tFILE,\n\tFOLDER,\n\tROOT_FOLDER\n}\n\n/**\n * A hint to disable etag checking for reading/writing.\n */\nexport const ETAG_DISABLED = '';\n\nexport function etag(stat: { mtime: number; size: number }): string;\nexport function etag(stat: { mtime: number | undefined; size: number | undefined }): string | undefined;\nexport function etag(stat: { mtime: number | undefined; size: number | undefined }): string | undefined {\n\tif (typeof stat.size !== 'number' || typeof stat.mtime !== 'number') {\n\t\treturn undefined;\n\t}\n\n\treturn stat.mtime.toString(29) + stat.size.toString(31);\n}\n\nexport async function whenProviderRegistered(file: URI, fileService: IFileService): Promise<void> {\n\tif (fileService.hasProvider(URI.from({ scheme: file.scheme }))) {\n\t\treturn;\n\t}\n\n\treturn new Promise(resolve => {\n\t\tconst disposable = fileService.onDidChangeFileSystemProviderRegistrations(e => {\n\t\t\tif (e.scheme === file.scheme && e.added) {\n\t\t\t\tdisposable.dispose();\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Native only: limits for memory sizes\n */\nexport const MIN_MAX_MEMORY_SIZE_MB = 2048;\nexport const FALLBACK_MAX_MEMORY_SIZE_MB = 4096;\n\n/**\n * Helper to format a raw byte size into a human readable label.\n */\nexport class ByteSize {\n\n\tstatic readonly KB = 1024;\n\tstatic readonly MB = ByteSize.KB * ByteSize.KB;\n\tstatic readonly GB = ByteSize.MB * ByteSize.KB;\n\tstatic readonly TB = ByteSize.GB * ByteSize.KB;\n\n\tstatic formatSize(size: number): string {\n\t\tif (!isNumber(size)) {\n\t\t\tsize = 0;\n\t\t}\n\n\t\tif (size < ByteSize.KB) {\n\t\t\treturn localize('sizeB', \"{0}B\", size.toFixed(0));\n\t\t}\n\n\t\tif (size < ByteSize.MB) {\n\t\t\treturn localize('sizeKB', \"{0}KB\", (size / ByteSize.KB).toFixed(2));\n\t\t}\n\n\t\tif (size < ByteSize.GB) {\n\t\t\treturn localize('sizeMB', \"{0}MB\", (size / ByteSize.MB).toFixed(2));\n\t\t}\n\n\t\tif (size < ByteSize.TB) {\n\t\t\treturn localize('sizeGB', \"{0}GB\", (size / ByteSize.GB).toFixed(2));\n\t\t}\n\n\t\treturn localize('sizeTB', \"{0}TB\", (size / ByteSize.TB).toFixed(2));\n\t}\n}\n\n// Native only: Arch limits\n\nexport interface IArchLimits {\n\treadonly maxFileSize: number;\n\treadonly maxHeapSize: number;\n}\n\nexport const enum Arch {\n\tIA32,\n\tOTHER\n}\n\nexport function getPlatformLimits(arch: Arch): IArchLimits {\n\treturn {\n\t\tmaxFileSize: arch === Arch.IA32 ? 300 * ByteSize.MB : 16 * ByteSize.GB,  // https://github.com/microsoft/vscode/issues/30180\n\t\tmaxHeapSize: arch === Arch.IA32 ? 700 * ByteSize.MB : 2 * 700 * ByteSize.MB, // https://github.com/v8/v8/blob/5918a23a3d571b9625e5cce246bdd5b46ff7cd8b/src/heap/heap.cc#L149\n\t};\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { canceled } from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { newWriteableStream, ReadableStreamEventPayload, ReadableStreamEvents } from 'vs/base/common/stream';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { createFileSystemProviderError, IFileAtomicReadOptions, FileChangeType, IFileDeleteOptions, IFileOpenOptions, IFileOverwriteOptions, IFileReadStreamOptions, FileSystemProviderCapabilities, FileSystemProviderErrorCode, FileType, IFileWriteOptions, IFileChange, IFileSystemProviderWithFileAtomicReadCapability, IFileSystemProviderWithFileCloneCapability, IFileSystemProviderWithFileFolderCopyCapability, IFileSystemProviderWithFileReadStreamCapability, IFileSystemProviderWithFileReadWriteCapability, IFileSystemProviderWithOpenReadWriteCloseCapability, IStat, IWatchOptions } from 'vs/platform/files/common/files';\n\nexport const LOCAL_FILE_SYSTEM_CHANNEL_NAME = 'localFilesystem';\n\n/**\n * An implementation of a local disk file system provider\n * that is backed by a `IChannel` and thus implemented via\n * IPC on a different process.\n */\nexport class DiskFileSystemProviderClient extends Disposable implements\n\tIFileSystemProviderWithFileReadWriteCapability,\n\tIFileSystemProviderWithOpenReadWriteCloseCapability,\n\tIFileSystemProviderWithFileReadStreamCapability,\n\tIFileSystemProviderWithFileFolderCopyCapability,\n\tIFileSystemProviderWithFileAtomicReadCapability,\n\tIFileSystemProviderWithFileCloneCapability {\n\n\tconstructor(\n\t\tprivate readonly channel: IChannel,\n\t\tprivate readonly extraCapabilities: { trash?: boolean; pathCaseSensitive?: boolean }\n\t) {\n\t\tsuper();\n\n\t\tthis.registerFileChangeListeners();\n\t}\n\n\t//#region File Capabilities\n\n\treadonly onDidChangeCapabilities: Event<void> = Event.None;\n\n\tprivate _capabilities: FileSystemProviderCapabilities | undefined;\n\tget capabilities(): FileSystemProviderCapabilities {\n\t\tif (!this._capabilities) {\n\t\t\tthis._capabilities =\n\t\t\t\tFileSystemProviderCapabilities.FileReadWrite |\n\t\t\t\tFileSystemProviderCapabilities.FileOpenReadWriteClose |\n\t\t\t\tFileSystemProviderCapabilities.FileReadStream |\n\t\t\t\tFileSystemProviderCapabilities.FileFolderCopy |\n\t\t\t\tFileSystemProviderCapabilities.FileWriteUnlock |\n\t\t\t\tFileSystemProviderCapabilities.FileAtomicRead |\n\t\t\t\tFileSystemProviderCapabilities.FileClone;\n\n\t\t\tif (this.extraCapabilities.pathCaseSensitive) {\n\t\t\t\tthis._capabilities |= FileSystemProviderCapabilities.PathCaseSensitive;\n\t\t\t}\n\n\t\t\tif (this.extraCapabilities.trash) {\n\t\t\t\tthis._capabilities |= FileSystemProviderCapabilities.Trash;\n\t\t\t}\n\t\t}\n\n\t\treturn this._capabilities;\n\t}\n\n\t//#endregion\n\n\t//#region File Metadata Resolving\n\n\tstat(resource: URI): Promise<IStat> {\n\t\treturn this.channel.call('stat', [resource]);\n\t}\n\n\treaddir(resource: URI): Promise<[string, FileType][]> {\n\t\treturn this.channel.call('readdir', [resource]);\n\t}\n\n\t//#endregion\n\n\t//#region File Reading/Writing\n\n\tasync readFile(resource: URI, opts?: IFileAtomicReadOptions): Promise<Uint8Array> {\n\t\tconst { buffer } = await this.channel.call('readFile', [resource, opts]) as VSBuffer;\n\n\t\treturn buffer;\n\t}\n\n\treadFileStream(resource: URI, opts: IFileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array> {\n\t\tconst stream = newWriteableStream<Uint8Array>(data => VSBuffer.concat(data.map(data => VSBuffer.wrap(data))).buffer);\n\n\t\t// Reading as file stream goes through an event to the remote side\n\t\tconst listener = this.channel.listen<ReadableStreamEventPayload<VSBuffer>>('readFileStream', [resource, opts])(dataOrErrorOrEnd => {\n\n\t\t\t// data\n\t\t\tif (dataOrErrorOrEnd instanceof VSBuffer) {\n\t\t\t\tstream.write(dataOrErrorOrEnd.buffer);\n\t\t\t}\n\n\t\t\t// end or error\n\t\t\telse {\n\t\t\t\tif (dataOrErrorOrEnd === 'end') {\n\t\t\t\t\tstream.end();\n\t\t\t\t} else {\n\n\t\t\t\t\t// Since we receive data through a IPC channel, it is likely\n\t\t\t\t\t// that the error was not serialized, or only partially. To\n\t\t\t\t\t// ensure our API use is correct, we convert the data to an\n\t\t\t\t\t// error here to forward it properly.\n\t\t\t\t\tlet error = dataOrErrorOrEnd;\n\t\t\t\t\tif (!(error instanceof Error)) {\n\t\t\t\t\t\terror = createFileSystemProviderError(toErrorMessage(error), FileSystemProviderErrorCode.Unknown);\n\t\t\t\t\t}\n\n\t\t\t\t\tstream.error(error);\n\t\t\t\t\tstream.end();\n\t\t\t\t}\n\n\t\t\t\t// Signal to the remote side that we no longer listen\n\t\t\t\tlistener.dispose();\n\t\t\t}\n\t\t});\n\n\t\t// Support cancellation\n\t\ttoken.onCancellationRequested(() => {\n\n\t\t\t// Ensure to end the stream properly with an error\n\t\t\t// to indicate the cancellation.\n\t\t\tstream.error(canceled());\n\t\t\tstream.end();\n\n\t\t\t// Ensure to dispose the listener upon cancellation. This will\n\t\t\t// bubble through the remote side as event and allows to stop\n\t\t\t// reading the file.\n\t\t\tlistener.dispose();\n\t\t});\n\n\t\treturn stream;\n\t}\n\n\twriteFile(resource: URI, content: Uint8Array, opts: IFileWriteOptions): Promise<void> {\n\t\treturn this.channel.call('writeFile', [resource, VSBuffer.wrap(content), opts]);\n\t}\n\n\topen(resource: URI, opts: IFileOpenOptions): Promise<number> {\n\t\treturn this.channel.call('open', [resource, opts]);\n\t}\n\n\tclose(fd: number): Promise<void> {\n\t\treturn this.channel.call('close', [fd]);\n\t}\n\n\tasync read(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\tconst [bytes, bytesRead]: [VSBuffer, number] = await this.channel.call('read', [fd, pos, length]);\n\n\t\t// copy back the data that was written into the buffer on the remote\n\t\t// side. we need to do this because buffers are not referenced by\n\t\t// pointer, but only by value and as such cannot be directly written\n\t\t// to from the other process.\n\t\tdata.set(bytes.buffer.slice(0, bytesRead), offset);\n\n\t\treturn bytesRead;\n\t}\n\n\twrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\treturn this.channel.call('write', [fd, pos, VSBuffer.wrap(data), offset, length]);\n\t}\n\n\t//#endregion\n\n\t//#region Move/Copy/Delete/Create Folder\n\n\tmkdir(resource: URI): Promise<void> {\n\t\treturn this.channel.call('mkdir', [resource]);\n\t}\n\n\tdelete(resource: URI, opts: IFileDeleteOptions): Promise<void> {\n\t\treturn this.channel.call('delete', [resource, opts]);\n\t}\n\n\trename(resource: URI, target: URI, opts: IFileOverwriteOptions): Promise<void> {\n\t\treturn this.channel.call('rename', [resource, target, opts]);\n\t}\n\n\tcopy(resource: URI, target: URI, opts: IFileOverwriteOptions): Promise<void> {\n\t\treturn this.channel.call('copy', [resource, target, opts]);\n\t}\n\n\t//#endregion\n\n\t//#region Clone File\n\n\tcloneFile(resource: URI, target: URI): Promise<void> {\n\t\treturn this.channel.call('cloneFile', [resource, target]);\n\t}\n\n\t//#endregion\n\n\t//#region File Watching\n\n\tprivate readonly _onDidChange = this._register(new Emitter<readonly IFileChange[]>());\n\treadonly onDidChangeFile = this._onDidChange.event;\n\n\tprivate readonly _onDidWatchError = this._register(new Emitter<string>());\n\treadonly onDidWatchError = this._onDidWatchError.event;\n\n\t// The contract for file watching via remote is to identify us\n\t// via a unique but readonly session ID. Since the remote is\n\t// managing potentially many watchers from different clients,\n\t// this helps the server to properly partition events to the right\n\t// clients.\n\tprivate readonly sessionId = generateUuid();\n\n\tprivate registerFileChangeListeners(): void {\n\n\t\t// The contract for file changes is that there is one listener\n\t\t// for both events and errors from the watcher. So we need to\n\t\t// unwrap the event from the remote and emit through the proper\n\t\t// emitter.\n\t\tthis._register(this.channel.listen<{ resource: UriComponents; type: FileChangeType }[] | string>('fileChange', [this.sessionId])(eventsOrError => {\n\t\t\tif (Array.isArray(eventsOrError)) {\n\t\t\t\tconst events = eventsOrError;\n\t\t\t\tthis._onDidChange.fire(events.map(event => ({ resource: URI.revive(event.resource), type: event.type })));\n\t\t\t} else {\n\t\t\t\tconst error = eventsOrError;\n\t\t\t\tthis._onDidWatchError.fire(error);\n\t\t\t}\n\t\t}));\n\t}\n\n\twatch(resource: URI, opts: IWatchOptions): IDisposable {\n\n\t\t// Generate a request UUID to correlate the watcher\n\t\t// back to us when we ask to dispose the watcher later.\n\t\tconst req = generateUuid();\n\n\t\tthis.channel.call('watch', [this.sessionId, req, resource, opts]);\n\n\t\treturn toDisposable(() => this.channel.call('unwatch', [this.sessionId, req]));\n\t}\n\n\t//#endregion\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { IDataTransformer, IErrorTransformer, WriteableStream } from 'vs/base/common/stream';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { createFileSystemProviderError, ensureFileSystemProviderError, IFileReadStreamOptions, FileSystemProviderErrorCode, IFileSystemProviderWithOpenReadWriteCloseCapability } from 'vs/platform/files/common/files';\n\nexport interface ICreateReadStreamOptions extends IFileReadStreamOptions {\n\n\t/**\n\t * The size of the buffer to use before sending to the stream.\n\t */\n\tbufferSize: number;\n\n\t/**\n\t * Allows to massage any possibly error that happens during reading.\n\t */\n\terrorTransformer?: IErrorTransformer;\n}\n\n/**\n * A helper to read a file from a provider with open/read/close capability into a stream.\n */\nexport async function readFileIntoStream<T>(\n\tprovider: IFileSystemProviderWithOpenReadWriteCloseCapability,\n\tresource: URI,\n\ttarget: WriteableStream<T>,\n\ttransformer: IDataTransformer<VSBuffer, T>,\n\toptions: ICreateReadStreamOptions,\n\ttoken: CancellationToken\n): Promise<void> {\n\tlet error: Error | undefined = undefined;\n\n\ttry {\n\t\tawait doReadFileIntoStream(provider, resource, target, transformer, options, token);\n\t} catch (err) {\n\t\terror = err;\n\t} finally {\n\t\tif (error && options.errorTransformer) {\n\t\t\terror = options.errorTransformer(error);\n\t\t}\n\n\t\tif (typeof error !== 'undefined') {\n\t\t\ttarget.error(error);\n\t\t}\n\n\t\ttarget.end();\n\t}\n}\n\nasync function doReadFileIntoStream<T>(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, target: WriteableStream<T>, transformer: IDataTransformer<VSBuffer, T>, options: ICreateReadStreamOptions, token: CancellationToken): Promise<void> {\n\n\t// Check for cancellation\n\tthrowIfCancelled(token);\n\n\t// open handle through provider\n\tconst handle = await provider.open(resource, { create: false });\n\n\ttry {\n\n\t\t// Check for cancellation\n\t\tthrowIfCancelled(token);\n\n\t\tlet totalBytesRead = 0;\n\t\tlet bytesRead = 0;\n\t\tlet allowedRemainingBytes = (options && typeof options.length === 'number') ? options.length : undefined;\n\n\t\tlet buffer = VSBuffer.alloc(Math.min(options.bufferSize, typeof allowedRemainingBytes === 'number' ? allowedRemainingBytes : options.bufferSize));\n\n\t\tlet posInFile = options && typeof options.position === 'number' ? options.position : 0;\n\t\tlet posInBuffer = 0;\n\t\tdo {\n\t\t\t// read from source (handle) at current position (pos) into buffer (buffer) at\n\t\t\t// buffer position (posInBuffer) up to the size of the buffer (buffer.byteLength).\n\t\t\tbytesRead = await provider.read(handle, posInFile, buffer.buffer, posInBuffer, buffer.byteLength - posInBuffer);\n\n\t\t\tposInFile += bytesRead;\n\t\t\tposInBuffer += bytesRead;\n\t\t\ttotalBytesRead += bytesRead;\n\n\t\t\tif (typeof allowedRemainingBytes === 'number') {\n\t\t\t\tallowedRemainingBytes -= bytesRead;\n\t\t\t}\n\n\t\t\t// when buffer full, create a new one and emit it through stream\n\t\t\tif (posInBuffer === buffer.byteLength) {\n\t\t\t\tawait target.write(transformer(buffer));\n\n\t\t\t\tbuffer = VSBuffer.alloc(Math.min(options.bufferSize, typeof allowedRemainingBytes === 'number' ? allowedRemainingBytes : options.bufferSize));\n\n\t\t\t\tposInBuffer = 0;\n\t\t\t}\n\t\t} while (bytesRead > 0 && (typeof allowedRemainingBytes !== 'number' || allowedRemainingBytes > 0) && throwIfCancelled(token) && throwIfTooLarge(totalBytesRead, options));\n\n\t\t// wrap up with last buffer (also respect maxBytes if provided)\n\t\tif (posInBuffer > 0) {\n\t\t\tlet lastChunkLength = posInBuffer;\n\t\t\tif (typeof allowedRemainingBytes === 'number') {\n\t\t\t\tlastChunkLength = Math.min(posInBuffer, allowedRemainingBytes);\n\t\t\t}\n\n\t\t\ttarget.write(transformer(buffer.slice(0, lastChunkLength)));\n\t\t}\n\t} catch (error) {\n\t\tthrow ensureFileSystemProviderError(error);\n\t} finally {\n\t\tawait provider.close(handle);\n\t}\n}\n\nfunction throwIfCancelled(token: CancellationToken): boolean {\n\tif (token.isCancellationRequested) {\n\t\tthrow canceled();\n\t}\n\n\treturn true;\n}\n\nfunction throwIfTooLarge(totalBytesRead: number, options: ICreateReadStreamOptions): boolean {\n\n\t// Return early if file is too large to load and we have configured limits\n\tif (options?.limits) {\n\t\tif (typeof options.limits.memory === 'number' && totalBytesRead > options.limits.memory) {\n\t\t\tthrow createFileSystemProviderError(localize('fileTooLargeForHeapError', \"To open a file of this size, you need to restart and allow to use more memory\"), FileSystemProviderErrorCode.FileExceedsMemoryLimit);\n\t\t}\n\n\t\tif (typeof options.limits.size === 'number' && totalBytesRead > options.limits.size) {\n\t\t\tthrow createFileSystemProviderError(localize('fileTooLargeError', \"File is too large to open\"), FileSystemProviderErrorCode.FileTooLarge);\n\t\t}\n\t}\n\n\treturn true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { GLOBSTAR, IRelativePattern, parse, ParsedPattern } from 'vs/base/common/glob';\nimport { Disposable, DisposableStore, MutableDisposable } from 'vs/base/common/lifecycle';\nimport { isAbsolute } from 'vs/base/common/path';\nimport { isLinux } from 'vs/base/common/platform';\nimport { URI as uri } from 'vs/base/common/uri';\nimport { FileChangeType, IFileChange, isParent } from 'vs/platform/files/common/files';\n\ninterface IWatchRequest {\n\n\t/**\n\t * The path to watch.\n\t */\n\tpath: string;\n\n\t/**\n\t * Whether to watch recursively or not.\n\t */\n\trecursive: boolean;\n\n\t/**\n\t * A set of glob patterns or paths to exclude from watching.\n\t *\n\t * Paths or basic glob patterns that are relative will be\n\t * resolved to an absolute path using the currently opened\n\t * workspace. Complex glob patterns must match on absolute\n\t * paths via leading or trailing `**`.\n\t */\n\texcludes: string[];\n\n\t/**\n\t * An optional set of glob patterns or paths to include for\n\t * watching. If not provided, all paths are considered for\n\t * events.\n\t *\n\t * Paths or basic glob patterns that are relative will be\n\t * resolved to an absolute path using the currently opened\n\t * workspace. Complex glob patterns must match on absolute\n\t * paths via leading or trailing `**`.\n\t */\n\tincludes?: Array<string | IRelativePattern>;\n}\n\nexport interface INonRecursiveWatchRequest extends IWatchRequest {\n\n\t/**\n\t * The watcher will be non-recursive.\n\t */\n\trecursive: false;\n}\n\nexport interface IRecursiveWatchRequest extends IWatchRequest {\n\n\t/**\n\t * The watcher will be recursive.\n\t */\n\trecursive: true;\n\n\t/**\n\t * @deprecated this only exists for WSL1 support and should never\n\t * be used in any other case.\n\t */\n\tpollingInterval?: number;\n}\n\nexport function isRecursiveWatchRequest(request: IWatchRequest): request is IRecursiveWatchRequest {\n\treturn request.recursive === true;\n}\n\nexport type IUniversalWatchRequest = IRecursiveWatchRequest | INonRecursiveWatchRequest;\n\ninterface IWatcher {\n\n\t/**\n\t * A normalized file change event from the raw events\n\t * the watcher emits.\n\t */\n\treadonly onDidChangeFile: Event<IDiskFileChange[]>;\n\n\t/**\n\t * An event to indicate a message that should get logged.\n\t */\n\treadonly onDidLogMessage: Event<ILogMessage>;\n\n\t/**\n\t * An event to indicate an error occurred from the watcher\n\t * that is unrecoverable. Listeners should restart the\n\t * watcher if possible.\n\t */\n\treadonly onDidError: Event<string>;\n\n\t/**\n\t * Configures the watcher to watch according to the\n\t * requests. Any existing watched path that is not\n\t * in the array, will be removed from watching and\n\t * any new path will be added to watching.\n\t */\n\twatch(requests: IWatchRequest[]): Promise<void>;\n\n\t/**\n\t * Enable verbose logging in the watcher.\n\t */\n\tsetVerboseLogging(enabled: boolean): Promise<void>;\n\n\t/**\n\t * Stop all watchers.\n\t */\n\tstop(): Promise<void>;\n}\n\nexport interface IRecursiveWatcher extends IWatcher {\n\twatch(requests: IRecursiveWatchRequest[]): Promise<void>;\n}\n\nexport interface IRecursiveWatcherOptions {\n\n\t/**\n\t * If `true`, will enable polling for all watchers, otherwise\n\t * will enable it for paths included in the string array.\n\t *\n\t * @deprecated this only exists for WSL1 support and should never\n\t * be used in any other case.\n\t */\n\tusePolling: boolean | string[];\n\n\t/**\n\t * If polling is enabled (via `usePolling`), defines the duration\n\t * in which the watcher will poll for changes.\n\t *\n\t * @deprecated this only exists for WSL1 support and should never\n\t * be used in any other case.\n\t */\n\tpollingInterval?: number;\n}\n\nexport interface INonRecursiveWatcher extends IWatcher {\n\twatch(requests: INonRecursiveWatchRequest[]): Promise<void>;\n}\n\nexport interface IUniversalWatcher extends IWatcher {\n\twatch(requests: IUniversalWatchRequest[]): Promise<void>;\n}\n\nexport abstract class AbstractWatcherClient extends Disposable {\n\n\tprivate static readonly MAX_RESTARTS = 5;\n\n\tprivate watcher: IWatcher | undefined;\n\tprivate readonly watcherDisposables = this._register(new MutableDisposable());\n\n\tprivate requests: IWatchRequest[] | undefined = undefined;\n\n\tprivate restartCounter = 0;\n\n\tconstructor(\n\t\tprivate readonly onFileChanges: (changes: IDiskFileChange[]) => void,\n\t\tprivate readonly onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean,\n\t\tprivate options: {\n\t\t\ttype: string;\n\t\t\trestartOnError: boolean;\n\t\t}\n\t) {\n\t\tsuper();\n\t}\n\n\tprotected abstract createWatcher(disposables: DisposableStore): IWatcher;\n\n\tprotected init(): void {\n\n\t\t// Associate disposables to the watcher\n\t\tconst disposables = new DisposableStore();\n\t\tthis.watcherDisposables.value = disposables;\n\n\t\t// Ask implementors to create the watcher\n\t\tthis.watcher = this.createWatcher(disposables);\n\t\tthis.watcher.setVerboseLogging(this.verboseLogging);\n\n\t\t// Wire in event handlers\n\t\tdisposables.add(this.watcher.onDidChangeFile(changes => this.onFileChanges(changes)));\n\t\tdisposables.add(this.watcher.onDidLogMessage(msg => this.onLogMessage(msg)));\n\t\tdisposables.add(this.watcher.onDidError(error => this.onError(error)));\n\t}\n\n\tprotected onError(error: string): void {\n\n\t\t// Restart on error (up to N times, if enabled)\n\t\tif (this.options.restartOnError) {\n\t\t\tif (this.restartCounter < AbstractWatcherClient.MAX_RESTARTS && this.requests) {\n\t\t\t\tthis.error(`restarting watcher after error: ${error}`);\n\t\t\t\tthis.restart(this.requests);\n\t\t\t} else {\n\t\t\t\tthis.error(`gave up attempting to restart watcher after error: ${error}`);\n\t\t\t}\n\t\t}\n\n\t\t// Do not attempt to restart if not enabled\n\t\telse {\n\t\t\tthis.error(error);\n\t\t}\n\t}\n\n\tprivate restart(requests: IUniversalWatchRequest[]): void {\n\t\tthis.restartCounter++;\n\n\t\tthis.init();\n\t\tthis.watch(requests);\n\t}\n\n\tasync watch(requests: IUniversalWatchRequest[]): Promise<void> {\n\t\tthis.requests = requests;\n\n\t\tawait this.watcher?.watch(requests);\n\t}\n\n\tasync setVerboseLogging(verboseLogging: boolean): Promise<void> {\n\t\tthis.verboseLogging = verboseLogging;\n\n\t\tawait this.watcher?.setVerboseLogging(verboseLogging);\n\t}\n\n\tprivate error(message: string) {\n\t\tthis.onLogMessage({ type: 'error', message: `[File Watcher (${this.options.type})] ${message}` });\n\t}\n\n\toverride dispose(): void {\n\n\t\t// Render the watcher invalid from here\n\t\tthis.watcher = undefined;\n\n\t\treturn super.dispose();\n\t}\n}\n\nexport abstract class AbstractNonRecursiveWatcherClient extends AbstractWatcherClient {\n\n\tconstructor(\n\t\tonFileChanges: (changes: IDiskFileChange[]) => void,\n\t\tonLogMessage: (msg: ILogMessage) => void,\n\t\tverboseLogging: boolean\n\t) {\n\t\tsuper(onFileChanges, onLogMessage, verboseLogging, { type: 'node.js', restartOnError: false });\n\t}\n\n\tprotected abstract override createWatcher(disposables: DisposableStore): INonRecursiveWatcher;\n}\n\nexport abstract class AbstractUniversalWatcherClient extends AbstractWatcherClient {\n\n\tconstructor(\n\t\tonFileChanges: (changes: IDiskFileChange[]) => void,\n\t\tonLogMessage: (msg: ILogMessage) => void,\n\t\tverboseLogging: boolean\n\t) {\n\t\tsuper(onFileChanges, onLogMessage, verboseLogging, { type: 'universal', restartOnError: true });\n\t}\n\n\tprotected abstract override createWatcher(disposables: DisposableStore): IUniversalWatcher;\n}\n\nexport interface IDiskFileChange {\n\ttype: FileChangeType;\n\tpath: string;\n}\n\nexport interface ILogMessage {\n\ttype: 'trace' | 'warn' | 'error' | 'info' | 'debug';\n\tmessage: string;\n}\n\nexport function toFileChanges(changes: IDiskFileChange[]): IFileChange[] {\n\treturn changes.map(change => ({\n\t\ttype: change.type,\n\t\tresource: uri.file(change.path)\n\t}));\n}\n\nexport function coalesceEvents(changes: IDiskFileChange[]): IDiskFileChange[] {\n\n\t// Build deltas\n\tconst coalescer = new EventCoalescer();\n\tfor (const event of changes) {\n\t\tcoalescer.processEvent(event);\n\t}\n\n\treturn coalescer.coalesce();\n}\n\nexport function normalizeWatcherPattern(path: string, pattern: string | IRelativePattern): string | IRelativePattern {\n\n\t// Patterns are always matched on the full absolute path\n\t// of the event. As such, if the pattern is not absolute\n\t// and is a string and does not start with a leading\n\t// `**`, we have to convert it to a relative pattern with\n\t// the given `base`\n\n\tif (typeof pattern === 'string' && !pattern.startsWith(GLOBSTAR) && !isAbsolute(pattern)) {\n\t\treturn { base: path, pattern };\n\t}\n\n\treturn pattern;\n}\n\nexport function parseWatcherPatterns(path: string, patterns: Array<string | IRelativePattern>): ParsedPattern[] {\n\tconst parsedPatterns: ParsedPattern[] = [];\n\n\tfor (const pattern of patterns) {\n\t\tparsedPatterns.push(parse(normalizeWatcherPattern(path, pattern)));\n\t}\n\n\treturn parsedPatterns;\n}\n\nclass EventCoalescer {\n\n\tprivate readonly coalesced = new Set<IDiskFileChange>();\n\tprivate readonly mapPathToChange = new Map<string, IDiskFileChange>();\n\n\tprivate toKey(event: IDiskFileChange): string {\n\t\tif (isLinux) {\n\t\t\treturn event.path;\n\t\t}\n\n\t\treturn event.path.toLowerCase(); // normalise to file system case sensitivity\n\t}\n\n\tprocessEvent(event: IDiskFileChange): void {\n\t\tconst existingEvent = this.mapPathToChange.get(this.toKey(event));\n\n\t\tlet keepEvent = false;\n\n\t\t// Event path already exists\n\t\tif (existingEvent) {\n\t\t\tconst currentChangeType = existingEvent.type;\n\t\t\tconst newChangeType = event.type;\n\n\t\t\t// macOS/Windows: track renames to different case\n\t\t\t// by keeping both CREATE and DELETE events\n\t\t\tif (existingEvent.path !== event.path && (event.type === FileChangeType.DELETED || event.type === FileChangeType.ADDED)) {\n\t\t\t\tkeepEvent = true;\n\t\t\t}\n\n\t\t\t// Ignore CREATE followed by DELETE in one go\n\t\t\telse if (currentChangeType === FileChangeType.ADDED && newChangeType === FileChangeType.DELETED) {\n\t\t\t\tthis.mapPathToChange.delete(this.toKey(event));\n\t\t\t\tthis.coalesced.delete(existingEvent);\n\t\t\t}\n\n\t\t\t// Flatten DELETE followed by CREATE into CHANGE\n\t\t\telse if (currentChangeType === FileChangeType.DELETED && newChangeType === FileChangeType.ADDED) {\n\t\t\t\texistingEvent.type = FileChangeType.UPDATED;\n\t\t\t}\n\n\t\t\t// Do nothing. Keep the created event\n\t\t\telse if (currentChangeType === FileChangeType.ADDED && newChangeType === FileChangeType.UPDATED) { }\n\n\t\t\t// Otherwise apply change type\n\t\t\telse {\n\t\t\t\texistingEvent.type = newChangeType;\n\t\t\t}\n\t\t}\n\n\t\t// Otherwise keep\n\t\telse {\n\t\t\tkeepEvent = true;\n\t\t}\n\n\t\tif (keepEvent) {\n\t\t\tthis.coalesced.add(event);\n\t\t\tthis.mapPathToChange.set(this.toKey(event), event);\n\t\t}\n\t}\n\n\tcoalesce(): IDiskFileChange[] {\n\t\tconst addOrChangeEvents: IDiskFileChange[] = [];\n\t\tconst deletedPaths: string[] = [];\n\n\t\t// This algorithm will remove all DELETE events up to the root folder\n\t\t// that got deleted if any. This ensures that we are not producing\n\t\t// DELETE events for each file inside a folder that gets deleted.\n\t\t//\n\t\t// 1.) split ADD/CHANGE and DELETED events\n\t\t// 2.) sort short deleted paths to the top\n\t\t// 3.) for each DELETE, check if there is a deleted parent and ignore the event in that case\n\t\treturn Array.from(this.coalesced).filter(e => {\n\t\t\tif (e.type !== FileChangeType.DELETED) {\n\t\t\t\taddOrChangeEvents.push(e);\n\n\t\t\t\treturn false; // remove ADD / CHANGE\n\t\t\t}\n\n\t\t\treturn true; // keep DELETE\n\t\t}).sort((e1, e2) => {\n\t\t\treturn e1.path.length - e2.path.length; // shortest path first\n\t\t}).filter(e => {\n\t\t\tif (deletedPaths.some(deletedPath => isParent(e.path, deletedPath, !isLinux /* ignorecase */))) {\n\t\t\t\treturn false; // DELETE is ignored if parent is deleted already\n\t\t\t}\n\n\t\t\t// otherwise mark as deleted\n\t\t\tdeletedPaths.push(e.path);\n\n\t\t\treturn true;\n\t\t}).concat(addOrChangeEvents);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { watch } from 'fs';\nimport { ThrottledDelayer, ThrottledWorker } from 'vs/base/common/async';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { isEqualOrParent } from 'vs/base/common/extpath';\nimport { Disposable, DisposableStore, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { normalizeNFC } from 'vs/base/common/normalization';\nimport { basename, dirname, join } from 'vs/base/common/path';\nimport { isLinux, isMacintosh } from 'vs/base/common/platform';\nimport { realcase } from 'vs/base/node/extpath';\nimport { Promises } from 'vs/base/node/pfs';\nimport { FileChangeType } from 'vs/platform/files/common/files';\nimport { IDiskFileChange, ILogMessage, coalesceEvents, INonRecursiveWatchRequest, parseWatcherPatterns } from 'vs/platform/files/common/watcher';\n\nexport class NodeJSFileWatcherLibrary extends Disposable {\n\n\t// A delay in reacting to file deletes to support\n\t// atomic save operations where a tool may chose\n\t// to delete a file before creating it again for\n\t// an update.\n\tprivate static readonly FILE_DELETE_HANDLER_DELAY = 100;\n\n\t// A delay for collecting file changes from node.js\n\t// before collecting them for coalescing and emitting\n\t// (same delay as Parcel is using)\n\tprivate static readonly FILE_CHANGES_HANDLER_DELAY = 50;\n\n\t// Reduce likelyhood of spam from file events via throttling.\n\t// These numbers are a bit more aggressive compared to the\n\t// recursive watcher because we can have many individual\n\t// node.js watchers per request.\n\t// (https://github.com/microsoft/vscode/issues/124723)\n\tprivate readonly throttledFileChangesWorker = new ThrottledWorker<IDiskFileChange>(\n\t\t{\n\t\t\tmaxWorkChunkSize: 100,\t// only process up to 100 changes at once before...\n\t\t\tthrottleDelay: 200,\t  \t// ...resting for 200ms until we process events again...\n\t\t\tmaxBufferedWork: 10000 \t// ...but never buffering more than 10000 events in memory\n\t\t},\n\t\tevents => this.onDidFilesChange(events)\n\t);\n\n\tprivate readonly fileChangesDelayer = this._register(new ThrottledDelayer<void>(NodeJSFileWatcherLibrary.FILE_CHANGES_HANDLER_DELAY));\n\tprivate fileChangesBuffer: IDiskFileChange[] = [];\n\n\tprivate readonly excludes = parseWatcherPatterns(this.request.path, this.request.excludes);\n\tprivate readonly includes = this.request.includes ? parseWatcherPatterns(this.request.path, this.request.includes) : undefined;\n\n\tprivate readonly cts = new CancellationTokenSource();\n\n\treadonly ready = this.watch();\n\n\tconstructor(\n\t\tprivate request: INonRecursiveWatchRequest,\n\t\tprivate onDidFilesChange: (changes: IDiskFileChange[]) => void,\n\t\tprivate onLogMessage?: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging?: boolean\n\t) {\n\t\tsuper();\n\t}\n\n\tprivate async watch(): Promise<void> {\n\t\ttry {\n\t\t\tconst realPath = await this.normalizePath(this.request);\n\n\t\t\tif (this.cts.token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Watch via node.js\n\t\t\tconst stat = await Promises.stat(realPath);\n\t\t\tthis._register(await this.doWatch(realPath, stat.isDirectory()));\n\n\t\t} catch (error) {\n\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\tthis.error(error);\n\t\t\t} else {\n\t\t\t\tthis.trace(error);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async normalizePath(request: INonRecursiveWatchRequest): Promise<string> {\n\t\tlet realPath = request.path;\n\n\t\ttry {\n\n\t\t\t// First check for symbolic link\n\t\t\trealPath = await Promises.realpath(request.path);\n\n\t\t\t// Second check for casing difference\n\t\t\t// Note: this will be a no-op on Linux platforms\n\t\t\tif (request.path === realPath) {\n\t\t\t\trealPath = await realcase(request.path) ?? request.path;\n\t\t\t}\n\n\t\t\t// Correct watch path as needed\n\t\t\tif (request.path !== realPath) {\n\t\t\t\tthis.trace(`correcting a path to watch that seems to be a symbolic link or wrong casing (original: ${request.path}, real: ${realPath})`);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t// ignore\n\t\t}\n\n\t\treturn realPath;\n\t}\n\n\tprivate async doWatch(path: string, isDirectory: boolean): Promise<IDisposable> {\n\n\t\t// macOS: watching samba shares can crash VSCode so we do\n\t\t// a simple check for the file path pointing to /Volumes\n\t\t// (https://github.com/microsoft/vscode/issues/106879)\n\t\t// TODO@electron this needs a revisit when the crash is\n\t\t// fixed or mitigated upstream.\n\t\tif (isMacintosh && isEqualOrParent(path, '/Volumes/', true)) {\n\t\t\tthis.error(`Refusing to watch ${path} for changes using fs.watch() for possibly being a network share where watching is unreliable and unstable.`);\n\n\t\t\treturn Disposable.None;\n\t\t}\n\n\t\tconst cts = new CancellationTokenSource(this.cts.token);\n\n\t\tconst disposables = new DisposableStore();\n\n\t\ttry {\n\t\t\tconst pathBasename = basename(path);\n\n\t\t\t// Creating watcher can fail with an exception\n\t\t\tconst watcher = watch(path);\n\t\t\tdisposables.add(toDisposable(() => {\n\t\t\t\twatcher.removeAllListeners();\n\t\t\t\twatcher.close();\n\t\t\t}));\n\n\t\t\tthis.trace(`Started watching: '${path}'`);\n\n\t\t\t// Folder: resolve children to emit proper events\n\t\t\tconst folderChildren = new Set<string>();\n\t\t\tif (isDirectory) {\n\t\t\t\ttry {\n\t\t\t\t\tfor (const child of await Promises.readdir(path)) {\n\t\t\t\t\t\tfolderChildren.add(child);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.error(error);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst mapPathToStatDisposable = new Map<string, IDisposable>();\n\t\t\tdisposables.add(toDisposable(() => {\n\t\t\t\tfor (const [, disposable] of mapPathToStatDisposable) {\n\t\t\t\t\tdisposable.dispose();\n\t\t\t\t}\n\t\t\t\tmapPathToStatDisposable.clear();\n\t\t\t}));\n\n\t\t\twatcher.on('error', (code: number, signal: string) => {\n\t\t\t\tthis.error(`Failed to watch ${path} for changes using fs.watch() (${code}, ${signal})`);\n\n\t\t\t\t// The watcher is no longer functional reliably\n\t\t\t\t// so we go ahead and dispose it\n\t\t\t\tthis.dispose();\n\t\t\t});\n\n\t\t\twatcher.on('change', (type, raw) => {\n\t\t\t\tif (cts.token.isCancellationRequested) {\n\t\t\t\t\treturn; // ignore if already disposed\n\t\t\t\t}\n\n\t\t\t\tthis.trace(`[raw] [\"${type}\"] ${raw}`);\n\n\t\t\t\t// Normalize file name\n\t\t\t\tlet changedFileName = '';\n\t\t\t\tif (raw) { // https://github.com/microsoft/vscode/issues/38191\n\t\t\t\t\tchangedFileName = raw.toString();\n\t\t\t\t\tif (isMacintosh) {\n\t\t\t\t\t\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t\t\t\t\t\t// See also https://github.com/nodejs/node/issues/2165\n\t\t\t\t\t\tchangedFileName = normalizeNFC(changedFileName);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!changedFileName || (type !== 'change' && type !== 'rename')) {\n\t\t\t\t\treturn; // ignore unexpected events\n\t\t\t\t}\n\n\t\t\t\t// Folder\n\t\t\t\tif (isDirectory) {\n\n\t\t\t\t\t// Folder child added/deleted\n\t\t\t\t\tif (type === 'rename') {\n\n\t\t\t\t\t\t// Cancel any previous stats for this file if existing\n\t\t\t\t\t\tmapPathToStatDisposable.get(changedFileName)?.dispose();\n\n\t\t\t\t\t\t// Wait a bit and try see if the file still exists on disk\n\t\t\t\t\t\t// to decide on the resulting event\n\t\t\t\t\t\tconst timeoutHandle = setTimeout(async () => {\n\t\t\t\t\t\t\tmapPathToStatDisposable.delete(changedFileName);\n\n\t\t\t\t\t\t\t// Depending on the OS the watcher runs on, there\n\t\t\t\t\t\t\t// is different behaviour for when the watched\n\t\t\t\t\t\t\t// folder path is being deleted:\n\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t// -   macOS: not reported but events continue to\n\t\t\t\t\t\t\t//            work even when the folder is brought\n\t\t\t\t\t\t\t//            back, though it seems every change\n\t\t\t\t\t\t\t//            to a file is reported as \"rename\"\n\t\t\t\t\t\t\t// -   Linux: \"rename\" event is reported with the\n\t\t\t\t\t\t\t//            name of the folder and events stop\n\t\t\t\t\t\t\t//            working\n\t\t\t\t\t\t\t// - Windows: an EPERM error is thrown that we\n\t\t\t\t\t\t\t//            handle from the `on('error')` event\n\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t// We do not re-attach the watcher after timeout\n\t\t\t\t\t\t\t// though as we do for file watches because for\n\t\t\t\t\t\t\t// file watching specifically we want to handle\n\t\t\t\t\t\t\t// the atomic-write cases where the file is being\n\t\t\t\t\t\t\t// deleted and recreated with different contents.\n\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t// Same as with recursive watching, we do not\n\t\t\t\t\t\t\t// emit a delete event in this case.\n\t\t\t\t\t\t\tif (changedFileName === pathBasename && !await Promises.exists(path)) {\n\t\t\t\t\t\t\t\tthis.warn('Watcher shutdown because watched path got deleted');\n\n\t\t\t\t\t\t\t\t// The watcher is no longer functional reliably\n\t\t\t\t\t\t\t\t// so we go ahead and dispose it\n\t\t\t\t\t\t\t\tthis.dispose();\n\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// In order to properly detect renames on a case-insensitive\n\t\t\t\t\t\t\t// file system, we need to use `existsChildStrictCase` helper\n\t\t\t\t\t\t\t// because otherwise we would wrongly assume a file exists\n\t\t\t\t\t\t\t// when it was renamed to same name but different case.\n\t\t\t\t\t\t\tconst fileExists = await this.existsChildStrictCase(join(path, changedFileName));\n\n\t\t\t\t\t\t\tif (cts.token.isCancellationRequested) {\n\t\t\t\t\t\t\t\treturn; // ignore if disposed by now\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Figure out the correct event type:\n\t\t\t\t\t\t\t// File Exists: either 'added' or 'updated' if known before\n\t\t\t\t\t\t\t// File Does not Exist: always 'deleted'\n\t\t\t\t\t\t\tlet type: FileChangeType;\n\t\t\t\t\t\t\tif (fileExists) {\n\t\t\t\t\t\t\t\tif (folderChildren.has(changedFileName)) {\n\t\t\t\t\t\t\t\t\ttype = FileChangeType.UPDATED;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\ttype = FileChangeType.ADDED;\n\t\t\t\t\t\t\t\t\tfolderChildren.add(changedFileName);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfolderChildren.delete(changedFileName);\n\t\t\t\t\t\t\t\ttype = FileChangeType.DELETED;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.onFileChange({ path: join(this.request.path, changedFileName), type });\n\t\t\t\t\t\t}, NodeJSFileWatcherLibrary.FILE_DELETE_HANDLER_DELAY);\n\n\t\t\t\t\t\tmapPathToStatDisposable.set(changedFileName, toDisposable(() => clearTimeout(timeoutHandle)));\n\t\t\t\t\t}\n\n\t\t\t\t\t// Folder child changed\n\t\t\t\t\telse {\n\n\t\t\t\t\t\t// Figure out the correct event type: if this is the\n\t\t\t\t\t\t// first time we see this child, it can only be added\n\t\t\t\t\t\tlet type: FileChangeType;\n\t\t\t\t\t\tif (folderChildren.has(changedFileName)) {\n\t\t\t\t\t\t\ttype = FileChangeType.UPDATED;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttype = FileChangeType.ADDED;\n\t\t\t\t\t\t\tfolderChildren.add(changedFileName);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.onFileChange({ path: join(this.request.path, changedFileName), type });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// File\n\t\t\t\telse {\n\n\t\t\t\t\t// File added/deleted\n\t\t\t\t\tif (type === 'rename' || changedFileName !== pathBasename) {\n\n\t\t\t\t\t\t// Depending on the OS the watcher runs on, there\n\t\t\t\t\t\t// is different behaviour for when the watched\n\t\t\t\t\t\t// file path is being deleted:\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// -   macOS: \"rename\" event is reported and events\n\t\t\t\t\t\t//            stop working\n\t\t\t\t\t\t// -   Linux: \"rename\" event is reported and events\n\t\t\t\t\t\t//            stop working\n\t\t\t\t\t\t// - Windows: \"rename\" event is reported and events\n\t\t\t\t\t\t//            continue to work when file is restored\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// As opposed to folder watching, we re-attach the\n\t\t\t\t\t\t// watcher after brief timeout to support \"atomic save\"\n\t\t\t\t\t\t// operations where a tool may decide to delete a file\n\t\t\t\t\t\t// and then create it with the updated contents.\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// Different to folder watching, we emit a delete event\n\t\t\t\t\t\t// though we never detect when the file is brought back\n\t\t\t\t\t\t// because the watcher is disposed then.\n\n\t\t\t\t\t\tconst timeoutHandle = setTimeout(async () => {\n\t\t\t\t\t\t\tconst fileExists = await Promises.exists(path);\n\n\t\t\t\t\t\t\tif (cts.token.isCancellationRequested) {\n\t\t\t\t\t\t\t\treturn; // ignore if disposed by now\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// File still exists, so emit as change event and reapply the watcher\n\t\t\t\t\t\t\tif (fileExists) {\n\t\t\t\t\t\t\t\tthis.onFileChange({ path: this.request.path, type: FileChangeType.UPDATED }, true /* skip excludes/includes (file is explicitly watched) */);\n\n\t\t\t\t\t\t\t\tdisposables.add(await this.doWatch(path, false));\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// File seems to be really gone, so emit a deleted event and dispose\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tconst eventPromise = this.onFileChange({ path: this.request.path, type: FileChangeType.DELETED }, true /* skip excludes/includes (file is explicitly watched) */);\n\n\t\t\t\t\t\t\t\t// Important to await the event delivery\n\t\t\t\t\t\t\t\t// before disposing the watcher, otherwise\n\t\t\t\t\t\t\t\t// we will loose this event.\n\t\t\t\t\t\t\t\tawait eventPromise;\n\t\t\t\t\t\t\t\tthis.dispose();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, NodeJSFileWatcherLibrary.FILE_DELETE_HANDLER_DELAY);\n\n\t\t\t\t\t\t// Very important to dispose the watcher which now points to a stale inode\n\t\t\t\t\t\t// and wire in a new disposable that tracks our timeout that is installed\n\t\t\t\t\t\tdisposables.clear();\n\t\t\t\t\t\tdisposables.add(toDisposable(() => clearTimeout(timeoutHandle)));\n\t\t\t\t\t}\n\n\t\t\t\t\t// File changed\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.onFileChange({ path: this.request.path, type: FileChangeType.UPDATED }, true /* skip excludes/includes (file is explicitly watched) */);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tif (await Promises.exists(path) && !cts.token.isCancellationRequested) {\n\t\t\t\tthis.error(`Failed to watch ${path} for changes using fs.watch() (${error.toString()})`);\n\t\t\t}\n\t\t}\n\n\t\treturn toDisposable(() => {\n\t\t\tcts.dispose(true);\n\t\t\tdisposables.dispose();\n\t\t});\n\t}\n\n\tprivate async onFileChange(event: IDiskFileChange, skipIncludeExcludeChecks = false): Promise<void> {\n\t\tif (this.cts.token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Logging\n\t\tif (this.verboseLogging) {\n\t\t\tthis.trace(`${event.type === FileChangeType.ADDED ? '[ADDED]' : event.type === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${event.path}`);\n\t\t}\n\n\t\t// Add to buffer unless excluded or not included (not if explicitly disabled)\n\t\tif (!skipIncludeExcludeChecks && this.excludes.some(exclude => exclude(event.path))) {\n\t\t\tif (this.verboseLogging) {\n\t\t\t\tthis.trace(` >> ignored (excluded) ${event.path}`);\n\t\t\t}\n\t\t} else if (!skipIncludeExcludeChecks && this.includes && this.includes.length > 0 && !this.includes.some(include => include(event.path))) {\n\t\t\tif (this.verboseLogging) {\n\t\t\t\tthis.trace(` >> ignored (not included) ${event.path}`);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.fileChangesBuffer.push(event);\n\t\t}\n\n\t\t// Handle emit through delayer to accommodate for bulk changes and thus reduce spam\n\t\ttry {\n\t\t\tawait this.fileChangesDelayer.trigger(async () => {\n\t\t\t\tconst fileChanges = this.fileChangesBuffer;\n\t\t\t\tthis.fileChangesBuffer = [];\n\n\t\t\t\t// Coalesce events: merge events of same kind\n\t\t\t\tconst coalescedFileChanges = coalesceEvents(fileChanges);\n\n\t\t\t\tif (coalescedFileChanges.length > 0) {\n\n\t\t\t\t\t// Logging\n\t\t\t\t\tif (this.verboseLogging) {\n\t\t\t\t\t\tfor (const event of coalescedFileChanges) {\n\t\t\t\t\t\t\tthis.trace(`>> normalized ${event.type === FileChangeType.ADDED ? '[ADDED]' : event.type === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${event.path}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Broadcast to clients via throttler\n\t\t\t\t\tconst worked = this.throttledFileChangesWorker.work(coalescedFileChanges);\n\n\t\t\t\t\t// Logging\n\t\t\t\t\tif (!worked) {\n\t\t\t\t\t\tthis.warn(`started ignoring events due to too many file change events at once (incoming: ${coalescedFileChanges.length}, most recent change: ${coalescedFileChanges[0].path}). Use 'files.watcherExclude' setting to exclude folders with lots of changing files (e.g. compilation output).`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (this.throttledFileChangesWorker.pending > 0) {\n\t\t\t\t\t\t\tthis.trace(`started throttling events due to large amount of file change events at once (pending: ${this.throttledFileChangesWorker.pending}, most recent change: ${coalescedFileChanges[0].path}). Use 'files.watcherExclude' setting to exclude folders with lots of changing files (e.g. compilation output).`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (error) {\n\t\t\t// ignore (we are likely disposed and cancelled)\n\t\t}\n\t}\n\n\tprivate async existsChildStrictCase(path: string): Promise<boolean> {\n\t\tif (isLinux) {\n\t\t\treturn Promises.exists(path);\n\t\t}\n\n\t\ttry {\n\t\t\tconst pathBasename = basename(path);\n\t\t\tconst children = await Promises.readdir(dirname(path));\n\n\t\t\treturn children.some(child => child === pathBasename);\n\t\t} catch (error) {\n\t\t\tthis.trace(error);\n\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\t}\n\n\tprivate error(error: string): void {\n\t\tif (!this.cts.token.isCancellationRequested) {\n\t\t\tthis.onLogMessage?.({ type: 'error', message: `[File Watcher (node.js)] ${error}` });\n\t\t}\n\t}\n\n\tprivate warn(message: string): void {\n\t\tif (!this.cts.token.isCancellationRequested) {\n\t\t\tthis.onLogMessage?.({ type: 'warn', message: `[File Watcher (node.js)] ${message}` });\n\t\t}\n\t}\n\n\tprivate trace(message: string): void {\n\t\tif (!this.cts.token.isCancellationRequested && this.verboseLogging) {\n\t\t\tthis.onLogMessage?.({ type: 'trace', message: `[File Watcher (node.js)] ${message}` });\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tthis.trace(`stopping file watcher on ${this.request.path}`);\n\n\t\tthis.cts.dispose(true);\n\n\t\tsuper.dispose();\n\t}\n}\n\n/**\n * Watch the provided `path` for changes and return\n * the data in chunks of `Uint8Array` for further use.\n */\nexport async function watchFileContents(path: string, onData: (chunk: Uint8Array) => void, onReady: () => void, token: CancellationToken, bufferSize = 512): Promise<void> {\n\tconst handle = await Promises.open(path, 'r');\n\tconst buffer = Buffer.allocUnsafe(bufferSize);\n\n\tconst cts = new CancellationTokenSource(token);\n\n\tlet error: Error | undefined = undefined;\n\tlet isReading = false;\n\n\tconst request: INonRecursiveWatchRequest = { path, excludes: [], recursive: false };\n\tconst watcher = new NodeJSFileWatcherLibrary(request, changes => {\n\t\t(async () => {\n\t\t\tfor (const { type } of changes) {\n\t\t\t\tif (type === FileChangeType.UPDATED) {\n\n\t\t\t\t\tif (isReading) {\n\t\t\t\t\t\treturn; // return early if we are already reading the output\n\t\t\t\t\t}\n\n\t\t\t\t\tisReading = true;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// Consume the new contents of the file until finished\n\t\t\t\t\t\t// everytime there is a change event signalling a change\n\t\t\t\t\t\twhile (!cts.token.isCancellationRequested) {\n\t\t\t\t\t\t\tconst { bytesRead } = await Promises.read(handle, buffer, 0, bufferSize, null);\n\t\t\t\t\t\t\tif (!bytesRead || cts.token.isCancellationRequested) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tonData(buffer.slice(0, bytesRead));\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\terror = new Error(err);\n\t\t\t\t\t\tcts.dispose(true);\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tisReading = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})();\n\t});\n\n\tawait watcher.ready;\n\tonReady();\n\n\treturn new Promise<void>((resolve, reject) => {\n\t\tcts.token.onCancellationRequested(async () => {\n\t\t\twatcher.dispose();\n\n\t\t\ttry {\n\t\t\t\tawait Promises.close(handle);\n\t\t\t} catch (err) {\n\t\t\t\terror = new Error(err);\n\t\t\t}\n\n\t\t\tif (error) {\n\t\t\t\treject(error);\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { patternsEquals } from 'vs/base/common/glob';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { isLinux } from 'vs/base/common/platform';\nimport { IDiskFileChange, ILogMessage, INonRecursiveWatchRequest, INonRecursiveWatcher } from 'vs/platform/files/common/watcher';\nimport { NodeJSFileWatcherLibrary } from 'vs/platform/files/node/watcher/nodejs/nodejsWatcherLib';\n\nexport interface INodeJSWatcherInstance {\n\n\t/**\n\t * The watcher instance.\n\t */\n\treadonly instance: NodeJSFileWatcherLibrary;\n\n\t/**\n\t * The watch request associated to the watcher.\n\t */\n\treadonly request: INonRecursiveWatchRequest;\n}\n\nexport class NodeJSWatcher extends Disposable implements INonRecursiveWatcher {\n\n\tprivate readonly _onDidChangeFile = this._register(new Emitter<IDiskFileChange[]>());\n\treadonly onDidChangeFile = this._onDidChangeFile.event;\n\n\tprivate readonly _onDidLogMessage = this._register(new Emitter<ILogMessage>());\n\treadonly onDidLogMessage = this._onDidLogMessage.event;\n\n\treadonly onDidError = Event.None;\n\n\tprotected readonly watchers = new Map<string, INodeJSWatcherInstance>();\n\n\tprivate verboseLogging = false;\n\n\tasync watch(requests: INonRecursiveWatchRequest[]): Promise<void> {\n\n\t\t// Figure out duplicates to remove from the requests\n\t\tconst normalizedRequests = this.normalizeRequests(requests);\n\n\t\t// Gather paths that we should start watching\n\t\tconst requestsToStartWatching = normalizedRequests.filter(request => {\n\t\t\tconst watcher = this.watchers.get(request.path);\n\t\t\tif (!watcher) {\n\t\t\t\treturn true; // not yet watching that path\n\t\t\t}\n\n\t\t\t// Re-watch path if excludes or includes have changed\n\t\t\treturn !patternsEquals(watcher.request.excludes, request.excludes) || !patternsEquals(watcher.request.includes, request.includes);\n\t\t});\n\n\t\t// Gather paths that we should stop watching\n\t\tconst pathsToStopWatching = Array.from(this.watchers.values()).filter(({ request }) => {\n\t\t\treturn !normalizedRequests.find(normalizedRequest => normalizedRequest.path === request.path && patternsEquals(normalizedRequest.excludes, request.excludes) && patternsEquals(normalizedRequest.includes, request.includes));\n\t\t}).map(({ request }) => request.path);\n\n\t\t// Logging\n\n\t\tif (requestsToStartWatching.length) {\n\t\t\tthis.trace(`Request to start watching: ${requestsToStartWatching.map(request => `${request.path} (excludes: ${request.excludes.length > 0 ? request.excludes : '<none>'}, includes: ${request.includes && request.includes.length > 0 ? JSON.stringify(request.includes) : '<all>'})`).join(',')}`);\n\t\t}\n\n\t\tif (pathsToStopWatching.length) {\n\t\t\tthis.trace(`Request to stop watching: ${pathsToStopWatching.join(',')}`);\n\t\t}\n\n\t\t// Stop watching as instructed\n\t\tfor (const pathToStopWatching of pathsToStopWatching) {\n\t\t\tthis.stopWatching(pathToStopWatching);\n\t\t}\n\n\t\t// Start watching as instructed\n\t\tfor (const request of requestsToStartWatching) {\n\t\t\tthis.startWatching(request);\n\t\t}\n\t}\n\n\tprivate startWatching(request: INonRecursiveWatchRequest): void {\n\n\t\t// Start via node.js lib\n\t\tconst instance = new NodeJSFileWatcherLibrary(request, changes => this._onDidChangeFile.fire(changes), msg => this._onDidLogMessage.fire(msg), this.verboseLogging);\n\n\t\t// Remember as watcher instance\n\t\tconst watcher: INodeJSWatcherInstance = { request, instance };\n\t\tthis.watchers.set(request.path, watcher);\n\t}\n\n\tasync stop(): Promise<void> {\n\t\tfor (const [path] of this.watchers) {\n\t\t\tthis.stopWatching(path);\n\t\t}\n\n\t\tthis.watchers.clear();\n\t}\n\n\tprivate stopWatching(path: string): void {\n\t\tconst watcher = this.watchers.get(path);\n\t\tif (watcher) {\n\t\t\tthis.watchers.delete(path);\n\n\t\t\twatcher.instance.dispose();\n\t\t}\n\t}\n\n\tprivate normalizeRequests(requests: INonRecursiveWatchRequest[]): INonRecursiveWatchRequest[] {\n\t\tconst requestsMap = new Map<string, INonRecursiveWatchRequest>();\n\n\t\t// Ignore requests for the same paths\n\t\tfor (const request of requests) {\n\t\t\tconst path = isLinux ? request.path : request.path.toLowerCase(); // adjust for case sensitivity\n\t\t\trequestsMap.set(path, request);\n\t\t}\n\n\t\treturn Array.from(requestsMap.values());\n\t}\n\n\tasync setVerboseLogging(enabled: boolean): Promise<void> {\n\t\tthis.verboseLogging = enabled;\n\n\t\tfor (const [, watcher] of this.watchers) {\n\t\t\twatcher.instance.setVerboseLogging(enabled);\n\t\t}\n\t}\n\n\tprivate trace(message: string): void {\n\t\tif (this.verboseLogging) {\n\t\t\tthis._onDidLogMessage.fire({ type: 'trace', message: this.toMessage(message) });\n\t\t}\n\t}\n\n\tprivate toMessage(message: string, watcher?: INodeJSWatcherInstance): string {\n\t\treturn watcher ? `[File Watcher (node.js)] ${message} (path: ${watcher.request.path})` : `[File Watcher (node.js)] ${message}`;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDiskFileChange, ILogMessage, AbstractNonRecursiveWatcherClient, INonRecursiveWatcher } from 'vs/platform/files/common/watcher';\nimport { NodeJSWatcher } from 'vs/platform/files/node/watcher/nodejs/nodejsWatcher';\n\nexport class NodeJSWatcherClient extends AbstractNonRecursiveWatcherClient {\n\n\tconstructor(\n\t\tonFileChanges: (changes: IDiskFileChange[]) => void,\n\t\tonLogMessage: (msg: ILogMessage) => void,\n\t\tverboseLogging: boolean\n\t) {\n\t\tsuper(onFileChanges, onLogMessage, verboseLogging);\n\n\t\tthis.init();\n\t}\n\n\tprotected override createWatcher(): INonRecursiveWatcher {\n\t\treturn new NodeJSWatcher();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { FileAccess } from 'vs/base/common/network';\nimport { getNextTickChannel, ProxyChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Client } from 'vs/base/parts/ipc/node/ipc.cp';\nimport { AbstractUniversalWatcherClient, IDiskFileChange, ILogMessage, IUniversalWatcher } from 'vs/platform/files/common/watcher';\n\nexport class UniversalWatcherClient extends AbstractUniversalWatcherClient {\n\n\tconstructor(\n\t\tonFileChanges: (changes: IDiskFileChange[]) => void,\n\t\tonLogMessage: (msg: ILogMessage) => void,\n\t\tverboseLogging: boolean\n\t) {\n\t\tsuper(onFileChanges, onLogMessage, verboseLogging);\n\n\t\tthis.init();\n\t}\n\n\tprotected override createWatcher(disposables: DisposableStore): IUniversalWatcher {\n\n\t\t// Fork the universal file watcher and build a client around\n\t\t// its server for passing over requests and receiving events.\n\t\tconst client = disposables.add(new Client(\n\t\t\tFileAccess.asFileUri('bootstrap-fork', require).fsPath,\n\t\t\t{\n\t\t\t\tserverName: 'File Watcher',\n\t\t\t\targs: ['--type=fileWatcher'],\n\t\t\t\tenv: {\n\t\t\t\t\tVSCODE_AMD_ENTRYPOINT: 'vs/platform/files/node/watcher/watcherMain',\n\t\t\t\t\tVSCODE_PIPE_LOGGING: 'true',\n\t\t\t\t\tVSCODE_VERBOSE_LOGGING: 'true' // transmit console logs from server to client\n\t\t\t\t}\n\t\t\t}\n\t\t));\n\n\t\t// React on unexpected termination of the watcher process\n\t\tdisposables.add(client.onDidProcessExit(({ code, signal }) => this.onError(`terminated by itself with code ${code}, signal: ${signal}`)));\n\n\t\treturn ProxyChannel.toService<IUniversalWatcher>(getNextTickChannel(client.getChannel('watcher')));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ServiceIdentifier } from 'vs/platform/instantiation/common/instantiation';\nimport { SyncDescriptor } from './descriptors';\n\nexport class ServiceCollection {\n\n\tprivate _entries = new Map<ServiceIdentifier<any>, any>();\n\n\tconstructor(...entries: [ServiceIdentifier<any>, any][]) {\n\t\tfor (const [id, service] of entries) {\n\t\t\tthis.set(id, service);\n\t\t}\n\t}\n\n\tset<T>(id: ServiceIdentifier<T>, instanceOrDescriptor: T | SyncDescriptor<T>): T | SyncDescriptor<T> {\n\t\tconst result = this._entries.get(id);\n\t\tthis._entries.set(id, instanceOrDescriptor);\n\t\treturn result;\n\t}\n\n\thas(id: ServiceIdentifier<any>): boolean {\n\t\treturn this._entries.has(id);\n\t}\n\n\tget<T>(id: ServiceIdentifier<T>): T | SyncDescriptor<T> {\n\t\treturn this._entries.get(id);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IdleValue } from 'vs/base/common/async';\nimport { illegalState } from 'vs/base/common/errors';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { Graph } from 'vs/platform/instantiation/common/graph';\nimport { IInstantiationService, ServiceIdentifier, ServicesAccessor, _util } from 'vs/platform/instantiation/common/instantiation';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\n\n// TRACING\nconst _enableTracing = false;\n\nclass CyclicDependencyError extends Error {\n\tconstructor(graph: Graph<any>) {\n\t\tsuper('cyclic dependency between services');\n\t\tthis.message = graph.findCycleSlow() ?? `UNABLE to detect cycle, dumping graph: \\n${graph.toString()}`;\n\t}\n}\n\nexport class InstantiationService implements IInstantiationService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _services: ServiceCollection;\n\tprivate readonly _strict: boolean;\n\tprivate readonly _parent?: InstantiationService;\n\n\tconstructor(services: ServiceCollection = new ServiceCollection(), strict: boolean = false, parent?: InstantiationService) {\n\t\tthis._services = services;\n\t\tthis._strict = strict;\n\t\tthis._parent = parent;\n\n\t\tthis._services.set(IInstantiationService, this);\n\t}\n\n\tcreateChild(services: ServiceCollection): IInstantiationService {\n\t\treturn new InstantiationService(services, this._strict, this);\n\t}\n\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R {\n\t\tconst _trace = Trace.traceInvocation(fn);\n\t\tlet _done = false;\n\t\ttry {\n\t\t\tconst accessor: ServicesAccessor = {\n\t\t\t\tget: <T>(id: ServiceIdentifier<T>) => {\n\n\t\t\t\t\tif (_done) {\n\t\t\t\t\t\tthrow illegalState('service accessor is only valid during the invocation of its target method');\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = this._getOrCreateServiceInstance(id, _trace);\n\t\t\t\t\tif (!result) {\n\t\t\t\t\t\tthrow new Error(`[invokeFunction] unknown service '${id}'`);\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn fn(accessor, ...args);\n\t\t} finally {\n\t\t\t_done = true;\n\t\t\t_trace.stop();\n\t\t}\n\t}\n\n\tcreateInstance(ctorOrDescriptor: any | SyncDescriptor<any>, ...rest: any[]): any {\n\t\tlet _trace: Trace;\n\t\tlet result: any;\n\t\tif (ctorOrDescriptor instanceof SyncDescriptor) {\n\t\t\t_trace = Trace.traceCreation(ctorOrDescriptor.ctor);\n\t\t\tresult = this._createInstance(ctorOrDescriptor.ctor, ctorOrDescriptor.staticArguments.concat(rest), _trace);\n\t\t} else {\n\t\t\t_trace = Trace.traceCreation(ctorOrDescriptor);\n\t\t\tresult = this._createInstance(ctorOrDescriptor, rest, _trace);\n\t\t}\n\t\t_trace.stop();\n\t\treturn result;\n\t}\n\n\tprivate _createInstance<T>(ctor: any, args: any[] = [], _trace: Trace): T {\n\n\t\t// arguments defined by service decorators\n\t\tconst serviceDependencies = _util.getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\t\tconst serviceArgs: any[] = [];\n\t\tfor (const dependency of serviceDependencies) {\n\t\t\tconst service = this._getOrCreateServiceInstance(dependency.id, _trace);\n\t\t\tif (!service) {\n\t\t\t\tthis._throwIfStrict(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`, false);\n\t\t\t}\n\t\t\tserviceArgs.push(service);\n\t\t}\n\n\t\tconst firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n\t\t// check for argument mismatches, adjust static args if needed\n\t\tif (args.length !== firstServiceArgPos) {\n\t\t\tconsole.trace(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n\n\t\t\tconst delta = firstServiceArgPos - args.length;\n\t\t\tif (delta > 0) {\n\t\t\t\targs = args.concat(new Array(delta));\n\t\t\t} else {\n\t\t\t\targs = args.slice(0, firstServiceArgPos);\n\t\t\t}\n\t\t}\n\n\t\t// now create the instance\n\t\treturn <T>new ctor(...[...args, ...serviceArgs]);\n\t}\n\n\tprivate _setServiceInstance<T>(id: ServiceIdentifier<T>, instance: T): void {\n\t\tif (this._services.get(id) instanceof SyncDescriptor) {\n\t\t\tthis._services.set(id, instance);\n\t\t} else if (this._parent) {\n\t\t\tthis._parent._setServiceInstance(id, instance);\n\t\t} else {\n\t\t\tthrow new Error('illegalState - setting UNKNOWN service instance');\n\t\t}\n\t}\n\n\tprivate _getServiceInstanceOrDescriptor<T>(id: ServiceIdentifier<T>): T | SyncDescriptor<T> {\n\t\tconst instanceOrDesc = this._services.get(id);\n\t\tif (!instanceOrDesc && this._parent) {\n\t\t\treturn this._parent._getServiceInstanceOrDescriptor(id);\n\t\t} else {\n\t\t\treturn instanceOrDesc;\n\t\t}\n\t}\n\n\tprotected _getOrCreateServiceInstance<T>(id: ServiceIdentifier<T>, _trace: Trace): T {\n\t\tconst thing = this._getServiceInstanceOrDescriptor(id);\n\t\tif (thing instanceof SyncDescriptor) {\n\t\t\treturn this._safeCreateAndCacheServiceInstance(id, thing, _trace.branch(id, true));\n\t\t} else {\n\t\t\t_trace.branch(id, false);\n\t\t\treturn thing;\n\t\t}\n\t}\n\n\tprivate readonly _activeInstantiations = new Set<ServiceIdentifier<any>>();\n\n\n\tprivate _safeCreateAndCacheServiceInstance<T>(id: ServiceIdentifier<T>, desc: SyncDescriptor<T>, _trace: Trace): T {\n\t\tif (this._activeInstantiations.has(id)) {\n\t\t\tthrow new Error(`illegal state - RECURSIVELY instantiating service '${id}'`);\n\t\t}\n\t\tthis._activeInstantiations.add(id);\n\t\ttry {\n\t\t\treturn this._createAndCacheServiceInstance(id, desc, _trace);\n\t\t} finally {\n\t\t\tthis._activeInstantiations.delete(id);\n\t\t}\n\t}\n\n\tprivate _createAndCacheServiceInstance<T>(id: ServiceIdentifier<T>, desc: SyncDescriptor<T>, _trace: Trace): T {\n\n\t\ttype Triple = { id: ServiceIdentifier<any>; desc: SyncDescriptor<any>; _trace: Trace };\n\t\tconst graph = new Graph<Triple>(data => data.id.toString());\n\n\t\tlet cycleCount = 0;\n\t\tconst stack = [{ id, desc, _trace }];\n\t\twhile (stack.length) {\n\t\t\tconst item = stack.pop()!;\n\t\t\tgraph.lookupOrInsertNode(item);\n\n\t\t\t// a weak but working heuristic for cycle checks\n\t\t\tif (cycleCount++ > 1000) {\n\t\t\t\tthrow new CyclicDependencyError(graph);\n\t\t\t}\n\n\t\t\t// check all dependencies for existence and if they need to be created first\n\t\t\tfor (const dependency of _util.getServiceDependencies(item.desc.ctor)) {\n\n\t\t\t\tconst instanceOrDesc = this._getServiceInstanceOrDescriptor(dependency.id);\n\t\t\t\tif (!instanceOrDesc) {\n\t\t\t\t\tthis._throwIfStrict(`[createInstance] ${id} depends on ${dependency.id} which is NOT registered.`, true);\n\t\t\t\t}\n\n\t\t\t\tif (instanceOrDesc instanceof SyncDescriptor) {\n\t\t\t\t\tconst d = { id: dependency.id, desc: instanceOrDesc, _trace: item._trace.branch(dependency.id, true) };\n\t\t\t\t\tgraph.insertEdge(item, d);\n\t\t\t\t\tstack.push(d);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twhile (true) {\n\t\t\tconst roots = graph.roots();\n\n\t\t\t// if there is no more roots but still\n\t\t\t// nodes in the graph we have a cycle\n\t\t\tif (roots.length === 0) {\n\t\t\t\tif (!graph.isEmpty()) {\n\t\t\t\t\tthrow new CyclicDependencyError(graph);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tfor (const { data } of roots) {\n\t\t\t\t// Repeat the check for this still being a service sync descriptor. That's because\n\t\t\t\t// instantiating a dependency might have side-effect and recursively trigger instantiation\n\t\t\t\t// so that some dependencies are now fullfilled already.\n\t\t\t\tconst instanceOrDesc = this._getServiceInstanceOrDescriptor(data.id);\n\t\t\t\tif (instanceOrDesc instanceof SyncDescriptor) {\n\t\t\t\t\t// create instance and overwrite the service collections\n\t\t\t\t\tconst instance = this._createServiceInstanceWithOwner(data.id, data.desc.ctor, data.desc.staticArguments, data.desc.supportsDelayedInstantiation, data._trace);\n\t\t\t\t\tthis._setServiceInstance(data.id, instance);\n\t\t\t\t}\n\t\t\t\tgraph.removeNode(data);\n\t\t\t}\n\t\t}\n\t\treturn <T>this._getServiceInstanceOrDescriptor(id);\n\t}\n\n\tprivate _createServiceInstanceWithOwner<T>(id: ServiceIdentifier<T>, ctor: any, args: any[] = [], supportsDelayedInstantiation: boolean, _trace: Trace): T {\n\t\tif (this._services.get(id) instanceof SyncDescriptor) {\n\t\t\treturn this._createServiceInstance(ctor, args, supportsDelayedInstantiation, _trace);\n\t\t} else if (this._parent) {\n\t\t\treturn this._parent._createServiceInstanceWithOwner(id, ctor, args, supportsDelayedInstantiation, _trace);\n\t\t} else {\n\t\t\tthrow new Error(`illegalState - creating UNKNOWN service instance ${ctor.name}`);\n\t\t}\n\t}\n\n\tprivate _createServiceInstance<T>(ctor: any, args: any[] = [], _supportsDelayedInstantiation: boolean, _trace: Trace): T {\n\t\tif (!_supportsDelayedInstantiation) {\n\t\t\t// eager instantiation\n\t\t\treturn this._createInstance(ctor, args, _trace);\n\n\t\t} else {\n\t\t\t// Return a proxy object that's backed by an idle value. That\n\t\t\t// strategy is to instantiate services in our idle time or when actually\n\t\t\t// needed but not when injected into a consumer\n\t\t\tconst idle = new IdleValue<any>(() => this._createInstance<T>(ctor, args, _trace));\n\t\t\treturn <T>new Proxy(Object.create(null), {\n\t\t\t\tget(target: any, key: PropertyKey): any {\n\t\t\t\t\tif (key in target) {\n\t\t\t\t\t\treturn target[key];\n\t\t\t\t\t}\n\t\t\t\t\tconst obj = idle.value;\n\t\t\t\t\tlet prop = obj[key];\n\t\t\t\t\tif (typeof prop !== 'function') {\n\t\t\t\t\t\treturn prop;\n\t\t\t\t\t}\n\t\t\t\t\tprop = prop.bind(obj);\n\t\t\t\t\ttarget[key] = prop;\n\t\t\t\t\treturn prop;\n\t\t\t\t},\n\t\t\t\tset(_target: T, p: PropertyKey, value: any): boolean {\n\t\t\t\t\tidle.value[p] = value;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _throwIfStrict(msg: string, printWarning: boolean): void {\n\t\tif (printWarning) {\n\t\t\tconsole.warn(msg);\n\t\t}\n\t\tif (this._strict) {\n\t\t\tthrow new Error(msg);\n\t\t}\n\t}\n}\n\n//#region -- tracing ---\n\nconst enum TraceType {\n\tCreation, Invocation, Branch\n}\n\nexport class Trace {\n\n\tprivate static readonly _None = new class extends Trace {\n\t\tconstructor() { super(-1, null); }\n\t\toverride stop() { }\n\t\toverride branch() { return this; }\n\t};\n\n\tstatic traceInvocation(ctor: any): Trace {\n\t\treturn !_enableTracing ? Trace._None : new Trace(TraceType.Invocation, ctor.name || (ctor.toString() as string).substring(0, 42).replace(/\\n/g, ''));\n\t}\n\n\tstatic traceCreation(ctor: any): Trace {\n\t\treturn !_enableTracing ? Trace._None : new Trace(TraceType.Creation, ctor.name);\n\t}\n\n\tprivate static _totals: number = 0;\n\tprivate readonly _start: number = Date.now();\n\tprivate readonly _dep: [ServiceIdentifier<any>, boolean, Trace?][] = [];\n\n\tprivate constructor(\n\t\treadonly type: TraceType,\n\t\treadonly name: string | null\n\t) { }\n\n\tbranch(id: ServiceIdentifier<any>, first: boolean): Trace {\n\t\tconst child = new Trace(TraceType.Branch, id.toString());\n\t\tthis._dep.push([id, first, child]);\n\t\treturn child;\n\t}\n\n\tstop() {\n\t\tconst dur = Date.now() - this._start;\n\t\tTrace._totals += dur;\n\n\t\tlet causedCreation = false;\n\n\t\tfunction printChild(n: number, trace: Trace) {\n\t\t\tconst res: string[] = [];\n\t\t\tconst prefix = new Array(n + 1).join('\\t');\n\t\t\tfor (const [id, first, child] of trace._dep) {\n\t\t\t\tif (first && child) {\n\t\t\t\t\tcausedCreation = true;\n\t\t\t\t\tres.push(`${prefix}CREATES -> ${id}`);\n\t\t\t\t\tconst nested = printChild(n + 1, child);\n\t\t\t\t\tif (nested) {\n\t\t\t\t\t\tres.push(nested);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tres.push(`${prefix}uses -> ${id}`);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn res.join('\\n');\n\t\t}\n\n\t\tconst lines = [\n\t\t\t`${this.type === TraceType.Creation ? 'CREATE' : 'CALL'} ${this.name}`,\n\t\t\t`${printChild(1, this)}`,\n\t\t\t`DONE, took ${dur.toFixed(2)}ms (grand total ${Trace._totals.toFixed(2)}ms)`\n\t\t];\n\n\t\tif (dur > 2 || causedCreation) {\n\t\t\tconsole.log(lines.join('\\n'));\n\t\t}\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IWorkspace, ISingleFolderWorkspaceIdentifier, IWorkspaceIdentifier } from 'vs/platform/workspace/common/workspace';\n\nexport const ILabelService = createDecorator<ILabelService>('labelService');\n\nexport interface ILabelService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Gets the human readable label for a uri.\n\t * If `relative` is passed returns a label relative to the workspace root that the uri belongs to.\n\t * If `noPrefix` is passed does not tildify the label and also does not prepand the root name for relative labels in a multi root scenario.\n\t * If `separator` is passed, will use that over the defined path separator of the formatter.\n\t */\n\tgetUriLabel(resource: URI, options?: { relative?: boolean; noPrefix?: boolean; separator?: '/' | '\\\\' }): string;\n\tgetUriBasenameLabel(resource: URI): string;\n\tgetWorkspaceLabel(workspace: (IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | URI | IWorkspace), options?: { verbose: boolean }): string;\n\tgetHostLabel(scheme: string, authority?: string): string;\n\tgetHostTooltip(scheme: string, authority?: string): string | undefined;\n\tgetSeparator(scheme: string, authority?: string): '/' | '\\\\';\n\n\tregisterFormatter(formatter: ResourceLabelFormatter): IDisposable;\n\tonDidChangeFormatters: Event<IFormatterChangeEvent>;\n\n\t/**\n\t * Registers a formatter that's cached for the machine beyond the lifecycle\n\t * of the current window. Disposing the formatter _will not_ remove it from\n\t * the cache.\n\t */\n\tregisterCachedFormatter(formatter: ResourceLabelFormatter): IDisposable;\n}\n\nexport interface IFormatterChangeEvent {\n\tscheme: string;\n}\n\nexport interface ResourceLabelFormatter {\n\tscheme: string;\n\tauthority?: string;\n\tpriority?: boolean;\n\tformatting: ResourceLabelFormatting;\n}\n\nexport interface ResourceLabelFormatting {\n\tlabel: string; // myLabel:/${path}\n\tseparator: '/' | '\\\\' | '';\n\ttildify?: boolean;\n\tnormalizeDriveLetter?: boolean;\n\tworkspaceSuffix?: string;\n\tworkspaceTooltip?: string;\n\tauthorityPrefix?: string;\n\tstripPathStartingSeparator?: boolean;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { language } from 'vs/base/common/platform';\nimport { IQuickPickItem } from 'vs/base/parts/quickinput/common/quickInput';\nimport { localize } from 'vs/nls';\nimport { IExtensionGalleryService, IGalleryExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const ILanguagePackService = createDecorator<ILanguagePackService>('languagePackService');\n\nexport interface ILanguagePackItem extends IQuickPickItem {\n\treadonly extensionId: string;\n\treadonly galleryExtension?: IGalleryExtension;\n}\n\nexport interface ILanguagePackService {\n\treadonly _serviceBrand: undefined;\n\tgetAvailableLanguages(): Promise<Array<ILanguagePackItem>>;\n\tgetInstalledLanguages(): Promise<Array<ILanguagePackItem>>;\n\tgetLocale(extension: IGalleryExtension): string | undefined;\n}\n\nexport abstract class LanguagePackBaseService extends Disposable implements ILanguagePackService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService) {\n\t\tsuper();\n\t}\n\n\tabstract getInstalledLanguages(): Promise<Array<ILanguagePackItem>>;\n\n\tasync getAvailableLanguages(): Promise<ILanguagePackItem[]> {\n\t\tconst timeout = new CancellationTokenSource();\n\t\tsetTimeout(() => timeout.cancel(), 1000);\n\n\t\tlet result;\n\t\ttry {\n\t\t\tresult = await this.extensionGalleryService.query({\n\t\t\t\ttext: 'category:\"language packs\"',\n\t\t\t\tpageSize: 20\n\t\t\t}, timeout.token);\n\t\t} catch (_) {\n\t\t\t// This method is best effort. So, we ignore any errors.\n\t\t\treturn [];\n\t\t}\n\n\t\tconst languagePackExtensions = result.firstPage.filter(e => e.properties.localizedLanguages?.length && e.tags.some(t => t.startsWith('lp-')));\n\t\tconst allFromMarketplace: ILanguagePackItem[] = languagePackExtensions.map(lp => {\n\t\t\tconst languageName = lp.properties.localizedLanguages?.[0];\n\t\t\tconst locale = this.getLocale(lp)!;\n\t\t\tconst baseQuickPick = this.createQuickPickItem({ locale, label: languageName });\n\t\t\treturn {\n\t\t\t\t...baseQuickPick,\n\t\t\t\textensionId: lp.identifier.id,\n\t\t\t\tgalleryExtension: lp\n\t\t\t};\n\t\t});\n\n\t\tallFromMarketplace.push({\n\t\t\t...this.createQuickPickItem({ locale: 'en', label: 'English' }),\n\t\t\textensionId: 'default',\n\t\t});\n\n\t\treturn allFromMarketplace;\n\t}\n\n\tgetLocale(extension: IGalleryExtension): string | undefined {\n\t\treturn extension.tags.find(t => t.startsWith('lp-'))?.split('lp-')[1];\n\t}\n\n\tprotected createQuickPickItem(languageItem: { locale: string; label?: string | undefined }): IQuickPickItem {\n\t\tconst label = languageItem.label ?? languageItem.locale;\n\t\tlet description: string | undefined = languageItem.locale !== languageItem.label ? languageItem.locale : undefined;\n\t\tif (languageItem.locale.toLowerCase() === language.toLowerCase()) {\n\t\t\tif (!description) {\n\t\t\t\tdescription = '';\n\t\t\t}\n\t\t\tdescription += localize('currentDisplayLanguage', \" (Current)\");\n\t\t}\n\t\treturn {\n\t\t\tid: languageItem.locale,\n\t\t\tlabel,\n\t\t\tdescription\n\t\t};\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { isWindows } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const ILogService = createDecorator<ILogService>('logService');\nexport const ILoggerService = createDecorator<ILoggerService>('loggerService');\n\nfunction now(): string {\n\treturn new Date().toISOString();\n}\n\nexport enum LogLevel {\n\tTrace,\n\tDebug,\n\tInfo,\n\tWarning,\n\tError,\n\tCritical,\n\tOff\n}\n\nexport const DEFAULT_LOG_LEVEL: LogLevel = LogLevel.Info;\n\nexport interface ILogger extends IDisposable {\n\tonDidChangeLogLevel: Event<LogLevel>;\n\tgetLevel(): LogLevel;\n\tsetLevel(level: LogLevel): void;\n\n\ttrace(message: string, ...args: any[]): void;\n\tdebug(message: string, ...args: any[]): void;\n\tinfo(message: string, ...args: any[]): void;\n\twarn(message: string, ...args: any[]): void;\n\terror(message: string | Error, ...args: any[]): void;\n\tcritical(message: string | Error, ...args: any[]): void;\n\n\t/**\n\t * An operation to flush the contents. Can be synchronous.\n\t */\n\tflush(): void;\n}\n\nexport function log(logger: ILogger, level: LogLevel, message: string): void {\n\tswitch (level) {\n\t\tcase LogLevel.Trace: logger.trace(message); break;\n\t\tcase LogLevel.Debug: logger.debug(message); break;\n\t\tcase LogLevel.Info: logger.info(message); break;\n\t\tcase LogLevel.Warning: logger.warn(message); break;\n\t\tcase LogLevel.Error: logger.error(message); break;\n\t\tcase LogLevel.Critical: logger.critical(message); break;\n\t\tdefault: throw new Error('Invalid log level');\n\t}\n}\n\nexport function format(args: any): string {\n\tlet result = '';\n\n\tfor (let i = 0; i < args.length; i++) {\n\t\tlet a = args[i];\n\n\t\tif (typeof a === 'object') {\n\t\t\ttry {\n\t\t\t\ta = JSON.stringify(a);\n\t\t\t} catch (e) { }\n\t\t}\n\n\t\tresult += (i > 0 ? ' ' : '') + a;\n\t}\n\n\treturn result;\n}\n\nexport interface ILogService extends ILogger {\n\treadonly _serviceBrand: undefined;\n}\n\nexport interface ILoggerOptions {\n\n\t/**\n\t * Name of the logger.\n\t */\n\tname?: string;\n\n\t/**\n\t * Do not create rotating files if max size exceeds.\n\t */\n\tdonotRotate?: boolean;\n\n\t/**\n\t * Do not use formatters.\n\t */\n\tdonotUseFormatters?: boolean;\n\n\t/**\n\t * If set, logger logs the message always.\n\t */\n\talways?: boolean;\n}\n\nexport interface ILoggerService {\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Creates a logger, or gets one if it already exists.\n\t */\n\tcreateLogger(file: URI, options?: ILoggerOptions): ILogger;\n\n\t/**\n\t * Gets an existing logger, if any.\n\t */\n\tgetLogger(file: URI): ILogger | undefined;\n}\n\nexport abstract class AbstractLogger extends Disposable {\n\n\tprivate level: LogLevel = DEFAULT_LOG_LEVEL;\n\tprivate readonly _onDidChangeLogLevel: Emitter<LogLevel> = this._register(new Emitter<LogLevel>());\n\treadonly onDidChangeLogLevel: Event<LogLevel> = this._onDidChangeLogLevel.event;\n\n\tsetLevel(level: LogLevel): void {\n\t\tif (this.level !== level) {\n\t\t\tthis.level = level;\n\t\t\tthis._onDidChangeLogLevel.fire(this.level);\n\t\t}\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.level;\n\t}\n\n}\n\nexport abstract class AbstractMessageLogger extends AbstractLogger implements ILogger {\n\n\tprotected abstract log(level: LogLevel, message: string): void;\n\n\tconstructor(private readonly logAlways?: boolean) {\n\t\tsuper();\n\t}\n\n\tprivate checkLogLevel(level: LogLevel): boolean {\n\t\treturn this.logAlways || this.getLevel() <= level;\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Trace)) {\n\t\t\tthis.log(LogLevel.Trace, format([message, ...args]));\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Debug)) {\n\t\t\tthis.log(LogLevel.Debug, format([message, ...args]));\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Info)) {\n\t\t\tthis.log(LogLevel.Info, format([message, ...args]));\n\t\t}\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Warning)) {\n\t\t\tthis.log(LogLevel.Warning, format([message, ...args]));\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Error)) {\n\n\t\t\tif (message instanceof Error) {\n\t\t\t\tconst array = Array.prototype.slice.call(arguments) as any[];\n\t\t\t\tarray[0] = message.stack;\n\t\t\t\tthis.log(LogLevel.Error, format(array));\n\t\t\t} else {\n\t\t\t\tthis.log(LogLevel.Error, format([message, ...args]));\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Critical)) {\n\t\t\tthis.log(LogLevel.Critical, format([message, ...args]));\n\t\t}\n\t}\n\n\tflush(): void { }\n}\n\n\nexport class ConsoleMainLogger extends AbstractLogger implements ILogger {\n\n\tprivate useColors: boolean;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t\tthis.useColors = !isWindows;\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.warn(`\\x1b[93m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[91m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n\n}\n\nexport class ConsoleLogger extends AbstractLogger implements ILogger {\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tconsole.log('%cTRACE', 'color: #888', message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tconsole.log('%cDEBUG', 'background: #eee; color: #888', message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tconsole.log('%c INFO', 'color: #33f', message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tconsole.log('%c WARN', 'color: #993', message, ...args);\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tconsole.log('%c  ERR', 'color: #f33', message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tconsole.log('%cCRITI', 'background: #f33; color: white', message, ...args);\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n}\n\nexport class AdapterLogger extends AbstractLogger implements ILogger {\n\n\tconstructor(private readonly adapter: { log: (logLevel: LogLevel, args: any[]) => void }, logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tthis.adapter.log(LogLevel.Trace, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tthis.adapter.log(LogLevel.Debug, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tthis.adapter.log(LogLevel.Info, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tthis.adapter.log(LogLevel.Warning, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tthis.adapter.log(LogLevel.Error, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tthis.adapter.log(LogLevel.Critical, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tprivate extractMessage(msg: string | Error): string {\n\t\tif (typeof msg === 'string') {\n\t\t\treturn msg;\n\t\t}\n\n\t\treturn toErrorMessage(msg, this.getLevel() <= LogLevel.Trace);\n\t}\n\n\toverride dispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n}\n\nexport class MultiplexLogService extends AbstractLogger implements ILogService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private readonly logServices: ReadonlyArray<ILogger>) {\n\t\tsuper();\n\t\tif (logServices.length) {\n\t\t\tthis.setLevel(logServices[0].getLevel());\n\t\t}\n\t}\n\n\toverride setLevel(level: LogLevel): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.setLevel(level);\n\t\t}\n\t\tsuper.setLevel(level);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.trace(message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.debug(message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.info(message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.warn(message, ...args);\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.error(message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.critical(message, ...args);\n\t\t}\n\t}\n\n\tflush(): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.flush();\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.dispose();\n\t\t}\n\t}\n}\n\nexport class LogService extends Disposable implements ILogService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private logger: ILogger) {\n\t\tsuper();\n\t\tthis._register(logger);\n\t}\n\n\tget onDidChangeLogLevel(): Event<LogLevel> {\n\t\treturn this.logger.onDidChangeLogLevel;\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tthis.logger.setLevel(level);\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.logger.getLevel();\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tthis.logger.trace(message, ...args);\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tthis.logger.debug(message, ...args);\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tthis.logger.info(message, ...args);\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tthis.logger.warn(message, ...args);\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tthis.logger.error(message, ...args);\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tthis.logger.critical(message, ...args);\n\t}\n\n\tflush(): void {\n\t\tthis.logger.flush();\n\t}\n}\n\nexport abstract class AbstractLoggerService extends Disposable implements ILoggerService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly loggers = new Map<string, ILogger>();\n\tprivate readonly logLevelChangeableLoggers: ILogger[] = [];\n\n\tconstructor(\n\t\tprivate logLevel: LogLevel,\n\t\tonDidChangeLogLevel: Event<LogLevel>,\n\t) {\n\t\tsuper();\n\t\tthis._register(onDidChangeLogLevel(logLevel => {\n\t\t\tthis.logLevel = logLevel;\n\t\t\tthis.logLevelChangeableLoggers.forEach(logger => logger.setLevel(logLevel));\n\t\t}));\n\t}\n\n\tgetLogger(resource: URI) {\n\t\treturn this.loggers.get(resource.toString());\n\t}\n\n\tcreateLogger(resource: URI, options?: ILoggerOptions): ILogger {\n\t\tlet logger = this.loggers.get(resource.toString());\n\t\tif (!logger) {\n\t\t\tlogger = this.doCreateLogger(resource, options?.always ? LogLevel.Trace : this.logLevel, options);\n\t\t\tthis.loggers.set(resource.toString(), logger);\n\t\t\tif (!options?.always) {\n\t\t\t\tthis.logLevelChangeableLoggers.push(logger);\n\t\t\t}\n\t\t}\n\t\treturn logger;\n\t}\n\n\toverride dispose(): void {\n\t\tthis.logLevelChangeableLoggers.splice(0, this.logLevelChangeableLoggers.length);\n\t\tthis.loggers.forEach(logger => logger.dispose());\n\t\tthis.loggers.clear();\n\t\tsuper.dispose();\n\t}\n\n\tprotected abstract doCreateLogger(resource: URI, logLevel: LogLevel, options?: ILoggerOptions): ILogger;\n}\n\nexport class NullLogService implements ILogService {\n\tdeclare readonly _serviceBrand: undefined;\n\treadonly onDidChangeLogLevel: Event<LogLevel> = new Emitter<LogLevel>().event;\n\tsetLevel(level: LogLevel): void { }\n\tgetLevel(): LogLevel { return LogLevel.Info; }\n\ttrace(message: string, ...args: any[]): void { }\n\tdebug(message: string, ...args: any[]): void { }\n\tinfo(message: string, ...args: any[]): void { }\n\twarn(message: string, ...args: any[]): void { }\n\terror(message: string | Error, ...args: any[]): void { }\n\tcritical(message: string | Error, ...args: any[]): void { }\n\tdispose(): void { }\n\tflush(): void { }\n}\n\nexport function getLogLevel(environmentService: IEnvironmentService): LogLevel {\n\tif (environmentService.verbose) {\n\t\treturn LogLevel.Trace;\n\t}\n\tif (typeof environmentService.logLevel === 'string') {\n\t\tconst logLevel = parseLogLevel(environmentService.logLevel.toLowerCase());\n\t\tif (logLevel !== undefined) {\n\t\t\treturn logLevel;\n\t\t}\n\t}\n\treturn DEFAULT_LOG_LEVEL;\n}\n\nexport function parseLogLevel(logLevel: string): LogLevel | undefined {\n\tswitch (logLevel) {\n\t\tcase 'trace':\n\t\t\treturn LogLevel.Trace;\n\t\tcase 'debug':\n\t\t\treturn LogLevel.Debug;\n\t\tcase 'info':\n\t\t\treturn LogLevel.Info;\n\t\tcase 'warn':\n\t\t\treturn LogLevel.Warning;\n\t\tcase 'error':\n\t\t\treturn LogLevel.Error;\n\t\tcase 'critical':\n\t\t\treturn LogLevel.Critical;\n\t\tcase 'off':\n\t\t\treturn LogLevel.Off;\n\t}\n\treturn undefined;\n}\n\nexport function LogLevelToString(logLevel: LogLevel): string {\n\tswitch (logLevel) {\n\t\tcase LogLevel.Trace: return 'trace';\n\t\tcase LogLevel.Debug: return 'debug';\n\t\tcase LogLevel.Info: return 'info';\n\t\tcase LogLevel.Warning: return 'warn';\n\t\tcase LogLevel.Error: return 'error';\n\t\tcase LogLevel.Critical: return 'critical';\n\t\tcase LogLevel.Off: return 'off';\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ICredentialsChangeEvent, ICredentialsMainService, InMemoryCredentialsProvider } from 'vs/platform/credentials/common/credentials';\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { isWindows } from 'vs/base/common/platform';\n\ninterface ChunkedPassword {\n\tcontent: string;\n\thasNextChunk: boolean;\n}\n\nexport type KeytarModule = typeof import('keytar');\n\nexport abstract class BaseCredentialsMainService extends Disposable implements ICredentialsMainService {\n\n\tprivate static readonly MAX_PASSWORD_LENGTH = 2500;\n\tprivate static readonly PASSWORD_CHUNK_SIZE = BaseCredentialsMainService.MAX_PASSWORD_LENGTH - 100;\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _onDidChangePassword: Emitter<ICredentialsChangeEvent> = this._register(new Emitter());\n\treadonly onDidChangePassword = this._onDidChangePassword.event;\n\n\tprotected _keytarCache: KeytarModule | undefined;\n\n\tconstructor(\n\t\t@ILogService protected readonly logService: ILogService,\n\t) {\n\t\tsuper();\n\t}\n\n\t//#region abstract\n\n\tpublic abstract getSecretStoragePrefix(): Promise<string>;\n\tprotected abstract withKeytar(): Promise<KeytarModule>;\n\t/**\n\t * An optional method that subclasses can implement to assist in surfacing\n\t * Keytar load errors to the user in a friendly way.\n\t */\n\tprotected abstract surfaceKeytarLoadError?: (err: any) => void;\n\n\t//#endregion\n\n\tasync getPassword(service: string, account: string): Promise<string | null> {\n\t\tlet keytar: KeytarModule;\n\t\ttry {\n\t\t\tkeytar = await this.withKeytar();\n\t\t} catch (e) {\n\t\t\t// for get operations, we don't want to surface errors to the user\n\t\t\treturn null;\n\t\t}\n\n\t\tconst password = await keytar.getPassword(service, account);\n\t\tif (password) {\n\t\t\ttry {\n\t\t\t\tlet { content, hasNextChunk }: ChunkedPassword = JSON.parse(password);\n\t\t\t\tif (!content || !hasNextChunk) {\n\t\t\t\t\treturn password;\n\t\t\t\t}\n\n\t\t\t\tlet index = 1;\n\t\t\t\twhile (hasNextChunk) {\n\t\t\t\t\tconst nextChunk = await keytar.getPassword(service, `${account}-${index}`);\n\t\t\t\t\tconst result: ChunkedPassword = JSON.parse(nextChunk!);\n\t\t\t\t\tcontent += result.content;\n\t\t\t\t\thasNextChunk = result.hasNextChunk;\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\n\t\t\t\treturn content;\n\t\t\t} catch {\n\t\t\t\treturn password;\n\t\t\t}\n\t\t}\n\n\t\treturn password;\n\t}\n\n\tasync setPassword(service: string, account: string, password: string): Promise<void> {\n\t\tlet keytar: KeytarModule;\n\t\ttry {\n\t\t\tkeytar = await this.withKeytar();\n\t\t} catch (e) {\n\t\t\tthis.surfaceKeytarLoadError?.(e);\n\t\t\tthrow e;\n\t\t}\n\n\t\tconst MAX_SET_ATTEMPTS = 3;\n\n\t\t// Sometimes Keytar has a problem talking to the keychain on the OS. To be more resilient, we retry a few times.\n\t\tconst setPasswordWithRetry = async (service: string, account: string, password: string) => {\n\t\t\tlet attempts = 0;\n\t\t\tlet error: any;\n\t\t\twhile (attempts < MAX_SET_ATTEMPTS) {\n\t\t\t\ttry {\n\t\t\t\t\tawait keytar.setPassword(service, account, password);\n\t\t\t\t\treturn;\n\t\t\t\t} catch (e) {\n\t\t\t\t\terror = e;\n\t\t\t\t\tthis.logService.warn('Error attempting to set a password: ', e?.message ?? e);\n\t\t\t\t\tattempts++;\n\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve, 200));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// throw last error\n\t\t\tthrow error;\n\t\t};\n\n\t\tif (isWindows && password.length > BaseCredentialsMainService.MAX_PASSWORD_LENGTH) {\n\t\t\tlet index = 0;\n\t\t\tlet chunk = 0;\n\t\t\tlet hasNextChunk = true;\n\t\t\twhile (hasNextChunk) {\n\t\t\t\tconst passwordChunk = password.substring(index, index + BaseCredentialsMainService.PASSWORD_CHUNK_SIZE);\n\t\t\t\tindex += BaseCredentialsMainService.PASSWORD_CHUNK_SIZE;\n\t\t\t\thasNextChunk = password.length - index > 0;\n\n\t\t\t\tconst content: ChunkedPassword = {\n\t\t\t\t\tcontent: passwordChunk,\n\t\t\t\t\thasNextChunk: hasNextChunk\n\t\t\t\t};\n\n\t\t\t\tawait setPasswordWithRetry(service, chunk ? `${account}-${chunk}` : account, JSON.stringify(content));\n\t\t\t\tchunk++;\n\t\t\t}\n\n\t\t} else {\n\t\t\tawait setPasswordWithRetry(service, account, password);\n\t\t}\n\n\t\tthis._onDidChangePassword.fire({ service, account });\n\t}\n\n\tasync deletePassword(service: string, account: string): Promise<boolean> {\n\t\tlet keytar: KeytarModule;\n\t\ttry {\n\t\t\tkeytar = await this.withKeytar();\n\t\t} catch (e) {\n\t\t\tthis.surfaceKeytarLoadError?.(e);\n\t\t\tthrow e;\n\t\t}\n\n\t\tconst password = await keytar.getPassword(service, account);\n\t\tif (!password) {\n\t\t\treturn false;\n\t\t}\n\t\tconst didDelete = await keytar.deletePassword(service, account);\n\t\ttry {\n\t\t\tlet { content, hasNextChunk }: ChunkedPassword = JSON.parse(password);\n\t\t\tif (content && hasNextChunk) {\n\t\t\t\t// need to delete additional chunks\n\t\t\t\tlet index = 1;\n\t\t\t\twhile (hasNextChunk) {\n\t\t\t\t\tconst accountWithIndex = `${account}-${index}`;\n\t\t\t\t\tconst nextChunk = await keytar.getPassword(service, accountWithIndex);\n\t\t\t\t\tawait keytar.deletePassword(service, accountWithIndex);\n\n\t\t\t\t\tconst result: ChunkedPassword = JSON.parse(nextChunk!);\n\t\t\t\t\thasNextChunk = result.hasNextChunk;\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch {\n\t\t\t// When the password is saved the entire JSON payload is encrypted then stored, thus the result from getPassword might not be valid JSON\n\t\t\t// https://github.com/microsoft/vscode/blob/c22cb87311b5eb1a3bf5600d18733f7485355dc0/src/vs/workbench/api/browser/mainThreadSecretState.ts#L83\n\t\t\t// However in the chunked case we JSONify each chunk after encryption so for the chunked case we do expect valid JSON here\n\t\t\t// https://github.com/microsoft/vscode/blob/708cb0c507d656b760f9d08115b8ebaf8964fd73/src/vs/platform/credentials/common/credentialsMainService.ts#L128\n\t\t\t// Empty catch here just as in getPassword because we expect to handle both JSON cases and non JSON cases here it's not an error case to fail to parse\n\t\t\t// https://github.com/microsoft/vscode/blob/708cb0c507d656b760f9d08115b8ebaf8964fd73/src/vs/platform/credentials/common/credentialsMainService.ts#L76\n\t\t}\n\n\t\tif (didDelete) {\n\t\t\tthis._onDidChangePassword.fire({ service, account });\n\t\t}\n\n\t\treturn didDelete;\n\t}\n\n\tasync findPassword(service: string): Promise<string | null> {\n\t\tlet keytar: KeytarModule;\n\t\ttry {\n\t\t\tkeytar = await this.withKeytar();\n\t\t} catch (e) {\n\t\t\t// for get operations, we don't want to surface errors to the user\n\t\t\treturn null;\n\t\t}\n\n\t\treturn keytar.findPassword(service);\n\t}\n\n\tasync findCredentials(service: string): Promise<Array<{ account: string; password: string }>> {\n\t\tlet keytar: KeytarModule;\n\t\ttry {\n\t\t\tkeytar = await this.withKeytar();\n\t\t} catch (e) {\n\t\t\t// for get operations, we don't want to surface errors to the user\n\t\t\treturn [];\n\t\t}\n\n\t\treturn keytar.findCredentials(service);\n\t}\n\n\tpublic clear(): Promise<void> {\n\t\tif (this._keytarCache instanceof InMemoryCredentialsProvider) {\n\t\t\treturn this._keytarCache.clear();\n\t\t}\n\n\t\t// We don't know how to properly clear Keytar because we don't know\n\t\t// what services have stored credentials. For reference, a \"service\" is an extension.\n\t\t// TODO: should we clear credentials for the built-in auth extensions?\n\t\treturn Promise.resolve();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { insert } from 'vs/base/common/arrays';\nimport { ThrottledDelayer } from 'vs/base/common/async';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { normalize } from 'vs/base/common/path';\nimport { URI } from 'vs/base/common/uri';\nimport { IFileChange, IFileSystemProvider, IWatchOptions } from 'vs/platform/files/common/files';\nimport { AbstractNonRecursiveWatcherClient, AbstractUniversalWatcherClient, IDiskFileChange, ILogMessage, INonRecursiveWatchRequest, IRecursiveWatcherOptions, isRecursiveWatchRequest, IUniversalWatchRequest, toFileChanges } from 'vs/platform/files/common/watcher';\nimport { ILogService, LogLevel } from 'vs/platform/log/common/log';\n\nexport interface IDiskFileSystemProviderOptions {\n\twatcher?: {\n\n\t\t/**\n\t\t * Extra options for the recursive file watching.\n\t\t */\n\t\trecursive?: IRecursiveWatcherOptions;\n\n\t\t/**\n\t\t * Forces all file watch requests to run through a\n\t\t * single universal file watcher, both recursive\n\t\t * and non-recursively.\n\t\t *\n\t\t * Enabling this option might cause some overhead,\n\t\t * specifically the universal file watcher will run\n\t\t * in a separate process given its complexity. Only\n\t\t * enable it when you understand the consequences.\n\t\t */\n\t\tforceUniversal?: boolean;\n\t};\n}\n\nexport abstract class AbstractDiskFileSystemProvider extends Disposable implements\n\tPick<IFileSystemProvider, 'watch'>,\n\tPick<IFileSystemProvider, 'onDidChangeFile'>,\n\tPick<IFileSystemProvider, 'onDidWatchError'> {\n\n\tconstructor(\n\t\tprotected readonly logService: ILogService,\n\t\tprivate readonly options?: IDiskFileSystemProviderOptions\n\t) {\n\t\tsuper();\n\t}\n\n\tprotected readonly _onDidChangeFile = this._register(new Emitter<readonly IFileChange[]>());\n\treadonly onDidChangeFile = this._onDidChangeFile.event;\n\n\tprotected readonly _onDidWatchError = this._register(new Emitter<string>());\n\treadonly onDidWatchError = this._onDidWatchError.event;\n\n\twatch(resource: URI, opts: IWatchOptions): IDisposable {\n\t\tif (opts.recursive || this.options?.watcher?.forceUniversal) {\n\t\t\treturn this.watchUniversal(resource, opts);\n\t\t}\n\n\t\treturn this.watchNonRecursive(resource, opts);\n\t}\n\n\t//#region File Watching (universal)\n\n\tprivate universalWatcher: AbstractUniversalWatcherClient | undefined;\n\n\tprivate readonly universalPathsToWatch: IUniversalWatchRequest[] = [];\n\tprivate readonly universalWatchRequestDelayer = this._register(new ThrottledDelayer<void>(0));\n\n\tprivate watchUniversal(resource: URI, opts: IWatchOptions): IDisposable {\n\n\t\t// Add to list of paths to watch universally\n\t\tconst pathToWatch: IUniversalWatchRequest = { path: this.toFilePath(resource), excludes: opts.excludes, includes: opts.includes, recursive: opts.recursive };\n\t\tconst remove = insert(this.universalPathsToWatch, pathToWatch);\n\n\t\t// Trigger update\n\t\tthis.refreshUniversalWatchers();\n\n\t\treturn toDisposable(() => {\n\n\t\t\t// Remove from list of paths to watch universally\n\t\t\tremove();\n\n\t\t\t// Trigger update\n\t\t\tthis.refreshUniversalWatchers();\n\t\t});\n\t}\n\n\tprivate refreshUniversalWatchers(): void {\n\n\t\t// Buffer requests for universal watching to decide on right watcher\n\t\t// that supports potentially watching more than one path at once\n\t\tthis.universalWatchRequestDelayer.trigger(() => {\n\t\t\treturn this.doRefreshUniversalWatchers();\n\t\t}).catch(error => onUnexpectedError(error));\n\t}\n\n\tprivate doRefreshUniversalWatchers(): Promise<void> {\n\n\t\t// Create watcher if this is the first time\n\t\tif (!this.universalWatcher) {\n\t\t\tthis.universalWatcher = this._register(this.createUniversalWatcher(\n\t\t\t\tchanges => this._onDidChangeFile.fire(toFileChanges(changes)),\n\t\t\t\tmsg => this.onWatcherLogMessage(msg),\n\t\t\t\tthis.logService.getLevel() === LogLevel.Trace\n\t\t\t));\n\n\t\t\t// Apply log levels dynamically\n\t\t\tthis._register(this.logService.onDidChangeLogLevel(() => {\n\t\t\t\tthis.universalWatcher?.setVerboseLogging(this.logService.getLevel() === LogLevel.Trace);\n\t\t\t}));\n\t\t}\n\n\t\t// Adjust for polling\n\t\tconst usePolling = this.options?.watcher?.recursive?.usePolling;\n\t\tif (usePolling === true) {\n\t\t\tfor (const request of this.universalPathsToWatch) {\n\t\t\t\tif (isRecursiveWatchRequest(request)) {\n\t\t\t\t\trequest.pollingInterval = this.options?.watcher?.recursive?.pollingInterval ?? 5000;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (Array.isArray(usePolling)) {\n\t\t\tfor (const request of this.universalPathsToWatch) {\n\t\t\t\tif (isRecursiveWatchRequest(request)) {\n\t\t\t\t\tif (usePolling.includes(request.path)) {\n\t\t\t\t\t\trequest.pollingInterval = this.options?.watcher?.recursive?.pollingInterval ?? 5000;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Ask to watch the provided paths\n\t\treturn this.universalWatcher.watch(this.universalPathsToWatch);\n\t}\n\n\tprotected abstract createUniversalWatcher(\n\t\tonChange: (changes: IDiskFileChange[]) => void,\n\t\tonLogMessage: (msg: ILogMessage) => void,\n\t\tverboseLogging: boolean\n\t): AbstractUniversalWatcherClient;\n\n\t//#endregion\n\n\t//#region File Watching (non-recursive)\n\n\tprivate nonRecursiveWatcher: AbstractNonRecursiveWatcherClient | undefined;\n\n\tprivate readonly nonRecursivePathsToWatch: INonRecursiveWatchRequest[] = [];\n\tprivate readonly nonRecursiveWatchRequestDelayer = this._register(new ThrottledDelayer<void>(0));\n\n\tprivate watchNonRecursive(resource: URI, opts: IWatchOptions): IDisposable {\n\n\t\t// Add to list of paths to watch non-recursively\n\t\tconst pathToWatch: INonRecursiveWatchRequest = { path: this.toFilePath(resource), excludes: opts.excludes, includes: opts.includes, recursive: false };\n\t\tconst remove = insert(this.nonRecursivePathsToWatch, pathToWatch);\n\n\t\t// Trigger update\n\t\tthis.refreshNonRecursiveWatchers();\n\n\t\treturn toDisposable(() => {\n\n\t\t\t// Remove from list of paths to watch non-recursively\n\t\t\tremove();\n\n\t\t\t// Trigger update\n\t\t\tthis.refreshNonRecursiveWatchers();\n\t\t});\n\t}\n\n\tprivate refreshNonRecursiveWatchers(): void {\n\n\t\t// Buffer requests for nonrecursive watching to decide on right watcher\n\t\t// that supports potentially watching more than one path at once\n\t\tthis.nonRecursiveWatchRequestDelayer.trigger(() => {\n\t\t\treturn this.doRefreshNonRecursiveWatchers();\n\t\t}).catch(error => onUnexpectedError(error));\n\t}\n\n\tprivate doRefreshNonRecursiveWatchers(): Promise<void> {\n\n\t\t// Create watcher if this is the first time\n\t\tif (!this.nonRecursiveWatcher) {\n\t\t\tthis.nonRecursiveWatcher = this._register(this.createNonRecursiveWatcher(\n\t\t\t\tchanges => this._onDidChangeFile.fire(toFileChanges(changes)),\n\t\t\t\tmsg => this.onWatcherLogMessage(msg),\n\t\t\t\tthis.logService.getLevel() === LogLevel.Trace\n\t\t\t));\n\n\t\t\t// Apply log levels dynamically\n\t\t\tthis._register(this.logService.onDidChangeLogLevel(() => {\n\t\t\t\tthis.nonRecursiveWatcher?.setVerboseLogging(this.logService.getLevel() === LogLevel.Trace);\n\t\t\t}));\n\t\t}\n\n\t\t// Ask to watch the provided paths\n\t\treturn this.nonRecursiveWatcher.watch(this.nonRecursivePathsToWatch);\n\t}\n\n\tprotected abstract createNonRecursiveWatcher(\n\t\tonChange: (changes: IDiskFileChange[]) => void,\n\t\tonLogMessage: (msg: ILogMessage) => void,\n\t\tverboseLogging: boolean\n\t): AbstractNonRecursiveWatcherClient;\n\n\t//#endregion\n\n\tprivate onWatcherLogMessage(msg: ILogMessage): void {\n\t\tif (msg.type === 'error') {\n\t\t\tthis._onDidWatchError.fire(msg.message);\n\t\t}\n\n\t\tthis.logService[msg.type](msg.message);\n\t}\n\n\tprotected toFilePath(resource: URI): string {\n\t\treturn normalize(resource.fsPath);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { coalesce } from 'vs/base/common/arrays';\nimport { Promises, ResourceQueue } from 'vs/base/common/async';\nimport { bufferedStreamToBuffer, bufferToReadable, newWriteableBufferStream, readableToBuffer, streamToBuffer, VSBuffer, VSBufferReadable, VSBufferReadableBufferedStream, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { Emitter } from 'vs/base/common/event';\nimport { hash } from 'vs/base/common/hash';\nimport { Iterable } from 'vs/base/common/iterator';\nimport { Disposable, DisposableStore, dispose, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { Schemas } from 'vs/base/common/network';\nimport { mark } from 'vs/base/common/performance';\nimport { extUri, extUriIgnorePathCase, IExtUri, isAbsolutePath } from 'vs/base/common/resources';\nimport { consumeStream, isReadableBufferedStream, isReadableStream, listenStream, newWriteableStream, peekReadable, peekStream, transform } from 'vs/base/common/stream';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { ensureFileSystemProviderError, etag, ETAG_DISABLED, FileChangesEvent, IFileDeleteOptions, FileOperation, FileOperationError, FileOperationEvent, FileOperationResult, FilePermission, FileSystemProviderCapabilities, FileSystemProviderErrorCode, FileType, hasFileAtomicReadCapability, hasFileFolderCopyCapability, hasFileReadStreamCapability, hasOpenReadWriteCloseCapability, hasReadWriteCapability, ICreateFileOptions, IFileContent, IFileService, IFileStat, IFileStatWithMetadata, IFileStreamContent, IFileSystemProvider, IFileSystemProviderActivationEvent, IFileSystemProviderCapabilitiesChangeEvent, IFileSystemProviderRegistrationEvent, IFileSystemProviderWithFileAtomicReadCapability, IFileSystemProviderWithFileReadStreamCapability, IFileSystemProviderWithFileReadWriteCapability, IFileSystemProviderWithOpenReadWriteCloseCapability, IReadFileOptions, IReadFileStreamOptions, IResolveFileOptions, IFileStatResult, IFileStatResultWithMetadata, IResolveMetadataFileOptions, IStat, IFileStatWithPartialMetadata, IWatchOptions, IWriteFileOptions, NotModifiedSinceFileOperationError, toFileOperationResult, toFileSystemProviderErrorCode, hasFileCloneCapability } from 'vs/platform/files/common/files';\nimport { readFileIntoStream } from 'vs/platform/files/common/io';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nexport class FileService extends Disposable implements IFileService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\t// Choose a buffer size that is a balance between memory needs and\n\t// manageable IPC overhead. The larger the buffer size, the less\n\t// roundtrips we have to do for reading/writing data.\n\tprivate readonly BUFFER_SIZE = 256 * 1024;\n\n\tconstructor(@ILogService private readonly logService: ILogService) {\n\t\tsuper();\n\t}\n\n\t//#region File System Provider\n\n\tprivate readonly _onDidChangeFileSystemProviderRegistrations = this._register(new Emitter<IFileSystemProviderRegistrationEvent>());\n\treadonly onDidChangeFileSystemProviderRegistrations = this._onDidChangeFileSystemProviderRegistrations.event;\n\n\tprivate readonly _onWillActivateFileSystemProvider = this._register(new Emitter<IFileSystemProviderActivationEvent>());\n\treadonly onWillActivateFileSystemProvider = this._onWillActivateFileSystemProvider.event;\n\n\tprivate readonly _onDidChangeFileSystemProviderCapabilities = this._register(new Emitter<IFileSystemProviderCapabilitiesChangeEvent>());\n\treadonly onDidChangeFileSystemProviderCapabilities = this._onDidChangeFileSystemProviderCapabilities.event;\n\n\tprivate readonly provider = new Map<string, IFileSystemProvider>();\n\n\tregisterProvider(scheme: string, provider: IFileSystemProvider): IDisposable {\n\t\tif (this.provider.has(scheme)) {\n\t\t\tthrow new Error(`A filesystem provider for the scheme '${scheme}' is already registered.`);\n\t\t}\n\n\t\tmark(`code/registerFilesystem/${scheme}`);\n\n\t\tconst providerDisposables = new DisposableStore();\n\n\t\t// Add provider with event\n\t\tthis.provider.set(scheme, provider);\n\t\tthis._onDidChangeFileSystemProviderRegistrations.fire({ added: true, scheme, provider });\n\n\t\t// Forward events from provider\n\t\tproviderDisposables.add(provider.onDidChangeFile(changes => this._onDidFilesChange.fire(new FileChangesEvent(changes, !this.isPathCaseSensitive(provider)))));\n\t\tif (typeof provider.onDidWatchError === 'function') {\n\t\t\tproviderDisposables.add(provider.onDidWatchError(error => this._onDidWatchError.fire(new Error(error))));\n\t\t}\n\t\tproviderDisposables.add(provider.onDidChangeCapabilities(() => this._onDidChangeFileSystemProviderCapabilities.fire({ provider, scheme })));\n\n\t\treturn toDisposable(() => {\n\t\t\tthis._onDidChangeFileSystemProviderRegistrations.fire({ added: false, scheme, provider });\n\t\t\tthis.provider.delete(scheme);\n\n\t\t\tdispose(providerDisposables);\n\t\t});\n\t}\n\n\tgetProvider(scheme: string): IFileSystemProvider | undefined {\n\t\treturn this.provider.get(scheme);\n\t}\n\n\tasync activateProvider(scheme: string): Promise<void> {\n\n\t\t// Emit an event that we are about to activate a provider with the given scheme.\n\t\t// Listeners can participate in the activation by registering a provider for it.\n\t\tconst joiners: Promise<void>[] = [];\n\t\tthis._onWillActivateFileSystemProvider.fire({\n\t\t\tscheme,\n\t\t\tjoin(promise) {\n\t\t\t\tjoiners.push(promise);\n\t\t\t},\n\t\t});\n\n\t\tif (this.provider.has(scheme)) {\n\t\t\treturn; // provider is already here so we can return directly\n\t\t}\n\n\t\t// If the provider is not yet there, make sure to join on the listeners assuming\n\t\t// that it takes a bit longer to register the file system provider.\n\t\tawait Promises.settled(joiners);\n\t}\n\n\tasync canHandleResource(resource: URI): Promise<boolean> {\n\n\t\t// Await activation of potentially extension contributed providers\n\t\tawait this.activateProvider(resource.scheme);\n\n\t\treturn this.hasProvider(resource);\n\t}\n\n\thasProvider(resource: URI): boolean {\n\t\treturn this.provider.has(resource.scheme);\n\t}\n\n\thasCapability(resource: URI, capability: FileSystemProviderCapabilities): boolean {\n\t\tconst provider = this.provider.get(resource.scheme);\n\n\t\treturn !!(provider && (provider.capabilities & capability));\n\t}\n\n\tlistCapabilities(): Iterable<{ scheme: string; capabilities: FileSystemProviderCapabilities }> {\n\t\treturn Iterable.map(this.provider, ([scheme, provider]) => ({ scheme, capabilities: provider.capabilities }));\n\t}\n\n\tprotected async withProvider(resource: URI): Promise<IFileSystemProvider> {\n\n\t\t// Assert path is absolute\n\t\tif (!isAbsolutePath(resource)) {\n\t\t\tthrow new FileOperationError(localize('invalidPath', \"Unable to resolve filesystem provider with relative file path '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_INVALID_PATH);\n\t\t}\n\n\t\t// Activate provider\n\t\tawait this.activateProvider(resource.scheme);\n\n\t\t// Assert provider\n\t\tconst provider = this.provider.get(resource.scheme);\n\t\tif (!provider) {\n\t\t\tconst error = new Error();\n\t\t\terror.name = 'ENOPRO';\n\t\t\terror.message = localize('noProviderFound', \"No file system provider found for resource '{0}'\", resource.toString());\n\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn provider;\n\t}\n\n\tprivate async withReadProvider(resource: URI): Promise<IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability | IFileSystemProviderWithFileReadStreamCapability> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\tif (hasOpenReadWriteCloseCapability(provider) || hasReadWriteCapability(provider) || hasFileReadStreamCapability(provider)) {\n\t\t\treturn provider;\n\t\t}\n\n\t\tthrow new Error(`Filesystem provider for scheme '${resource.scheme}' neither has FileReadWrite, FileReadStream nor FileOpenReadWriteClose capability which is needed for the read operation.`);\n\t}\n\n\tprivate async withWriteProvider(resource: URI): Promise<IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\tif (hasOpenReadWriteCloseCapability(provider) || hasReadWriteCapability(provider)) {\n\t\t\treturn provider;\n\t\t}\n\n\t\tthrow new Error(`Filesystem provider for scheme '${resource.scheme}' neither has FileReadWrite nor FileOpenReadWriteClose capability which is needed for the write operation.`);\n\t}\n\n\t//#endregion\n\n\t//#region Operation events\n\n\tprivate readonly _onDidRunOperation = this._register(new Emitter<FileOperationEvent>());\n\treadonly onDidRunOperation = this._onDidRunOperation.event;\n\n\t//#endregion\n\n\t//#region File Metadata Resolving\n\n\tasync resolve(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tasync resolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\tasync resolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat> {\n\t\ttry {\n\t\t\treturn await this.doResolveFile(resource, options);\n\t\t} catch (error) {\n\n\t\t\t// Specially handle file not found case as file operation result\n\t\t\tif (toFileSystemProviderErrorCode(error) === FileSystemProviderErrorCode.FileNotFound) {\n\t\t\t\tthrow new FileOperationError(localize('fileNotFoundError', \"Unable to resolve nonexistent file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_NOT_FOUND);\n\t\t\t}\n\n\t\t\t// Bubble up any other error as is\n\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprivate async doResolveFile(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tprivate async doResolveFile(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\tprivate async doResolveFile(resource: URI, options?: IResolveFileOptions): Promise<IFileStat> {\n\t\tconst provider = await this.withProvider(resource);\n\t\tconst isPathCaseSensitive = this.isPathCaseSensitive(provider);\n\n\t\tconst resolveTo = options?.resolveTo;\n\t\tconst resolveSingleChildDescendants = options?.resolveSingleChildDescendants;\n\t\tconst resolveMetadata = options?.resolveMetadata;\n\n\t\tconst stat = await provider.stat(resource);\n\n\t\tlet trie: TernarySearchTree<URI, boolean> | undefined;\n\n\t\treturn this.toFileStat(provider, resource, stat, undefined, !!resolveMetadata, (stat, siblings) => {\n\n\t\t\t// lazy trie to check for recursive resolving\n\t\t\tif (!trie) {\n\t\t\t\ttrie = TernarySearchTree.forUris<true>(() => !isPathCaseSensitive);\n\t\t\t\ttrie.set(resource, true);\n\t\t\t\tif (resolveTo) {\n\t\t\t\t\ttrie.fill(true, resolveTo);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// check for recursive resolving\n\t\t\tif (trie.get(stat.resource) || trie.findSuperstr(stat.resource.with({ query: null, fragment: null } /* required for https://github.com/microsoft/vscode/issues/128151 */))) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// check for resolving single child folders\n\t\t\tif (stat.isDirectory && resolveSingleChildDescendants) {\n\t\t\t\treturn siblings === 1;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tprivate async toFileStat(provider: IFileSystemProvider, resource: URI, stat: IStat | { type: FileType } & Partial<IStat>, siblings: number | undefined, resolveMetadata: boolean, recurse: (stat: IFileStat, siblings?: number) => boolean): Promise<IFileStat>;\n\tprivate async toFileStat(provider: IFileSystemProvider, resource: URI, stat: IStat, siblings: number | undefined, resolveMetadata: true, recurse: (stat: IFileStat, siblings?: number) => boolean): Promise<IFileStatWithMetadata>;\n\tprivate async toFileStat(provider: IFileSystemProvider, resource: URI, stat: IStat | { type: FileType } & Partial<IStat>, siblings: number | undefined, resolveMetadata: boolean, recurse: (stat: IFileStat, siblings?: number) => boolean): Promise<IFileStat> {\n\t\tconst { providerExtUri } = this.getExtUri(provider);\n\n\t\t// convert to file stat\n\t\tconst fileStat: IFileStat = {\n\t\t\tresource,\n\t\t\tname: providerExtUri.basename(resource),\n\t\t\tisFile: (stat.type & FileType.File) !== 0,\n\t\t\tisDirectory: (stat.type & FileType.Directory) !== 0,\n\t\t\tisSymbolicLink: (stat.type & FileType.SymbolicLink) !== 0,\n\t\t\tmtime: stat.mtime,\n\t\t\tctime: stat.ctime,\n\t\t\tsize: stat.size,\n\t\t\treadonly: Boolean((stat.permissions ?? 0) & FilePermission.Readonly) || Boolean(provider.capabilities & FileSystemProviderCapabilities.Readonly),\n\t\t\tetag: etag({ mtime: stat.mtime, size: stat.size }),\n\t\t\tchildren: undefined\n\t\t};\n\n\t\t// check to recurse for directories\n\t\tif (fileStat.isDirectory && recurse(fileStat, siblings)) {\n\t\t\ttry {\n\t\t\t\tconst entries = await provider.readdir(resource);\n\t\t\t\tconst resolvedEntries = await Promises.settled(entries.map(async ([name, type]) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst childResource = providerExtUri.joinPath(resource, name);\n\t\t\t\t\t\tconst childStat = resolveMetadata ? await provider.stat(childResource) : { type };\n\n\t\t\t\t\t\treturn await this.toFileStat(provider, childResource, childStat, entries.length, resolveMetadata, recurse);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.logService.trace(error);\n\n\t\t\t\t\t\treturn null; // can happen e.g. due to permission errors\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\t// make sure to get rid of null values that signal a failure to resolve a particular entry\n\t\t\t\tfileStat.children = coalesce(resolvedEntries);\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.trace(error);\n\n\t\t\t\tfileStat.children = []; // gracefully handle errors, we may not have permissions to read\n\t\t\t}\n\n\t\t\treturn fileStat;\n\t\t}\n\n\t\treturn fileStat;\n\t}\n\n\tasync resolveAll(toResolve: { resource: URI; options?: IResolveFileOptions }[]): Promise<IFileStatResult[]>;\n\tasync resolveAll(toResolve: { resource: URI; options: IResolveMetadataFileOptions }[]): Promise<IFileStatResultWithMetadata[]>;\n\tasync resolveAll(toResolve: { resource: URI; options?: IResolveFileOptions }[]): Promise<IFileStatResult[]> {\n\t\treturn Promises.settled(toResolve.map(async entry => {\n\t\t\ttry {\n\t\t\t\treturn { stat: await this.doResolveFile(entry.resource, entry.options), success: true };\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.trace(error);\n\n\t\t\t\treturn { stat: undefined, success: false };\n\t\t\t}\n\t\t}));\n\t}\n\n\tasync stat(resource: URI): Promise<IFileStatWithPartialMetadata> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\tconst stat = await provider.stat(resource);\n\n\t\treturn this.toFileStat(provider, resource, stat, undefined, true, () => false /* Do not resolve any children */);\n\t}\n\n\tasync exists(resource: URI): Promise<boolean> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\ttry {\n\t\t\tconst stat = await provider.stat(resource);\n\n\t\t\treturn !!stat;\n\t\t} catch (error) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region File Reading/Writing\n\n\tasync canCreateFile(resource: URI, options?: ICreateFileOptions): Promise<Error | true> {\n\t\ttry {\n\t\t\tawait this.doValidateCreateFile(resource, options);\n\t\t} catch (error) {\n\t\t\treturn error;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate async doValidateCreateFile(resource: URI, options?: ICreateFileOptions): Promise<void> {\n\n\t\t// validate overwrite\n\t\tif (!options?.overwrite && await this.exists(resource)) {\n\t\t\tthrow new FileOperationError(localize('fileExists', \"Unable to create file '{0}' that already exists when overwrite flag is not set\", this.resourceForError(resource)), FileOperationResult.FILE_MODIFIED_SINCE, options);\n\t\t}\n\t}\n\n\tasync createFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream = VSBuffer.fromString(''), options?: ICreateFileOptions): Promise<IFileStatWithMetadata> {\n\n\t\t// validate\n\t\tawait this.doValidateCreateFile(resource, options);\n\n\t\t// do write into file (this will create it too)\n\t\tconst fileStat = await this.writeFile(resource, bufferOrReadableOrStream);\n\n\t\t// events\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(resource, FileOperation.CREATE, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tasync writeFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: IWriteFileOptions): Promise<IFileStatWithMetadata> {\n\t\tconst provider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(resource), resource);\n\t\tconst { providerExtUri } = this.getExtUri(provider);\n\n\t\ttry {\n\n\t\t\t// validate write\n\t\t\tconst stat = await this.validateWriteFile(provider, resource, options);\n\n\t\t\t// mkdir recursively as needed\n\t\t\tif (!stat) {\n\t\t\t\tawait this.mkdirp(provider, providerExtUri.dirname(resource));\n\t\t\t}\n\n\t\t\t// optimization: if the provider has unbuffered write capability and the data\n\t\t\t// to write is not a buffer, we consume up to 3 chunks and try to write the data\n\t\t\t// unbuffered to reduce the overhead. If the stream or readable has more data\n\t\t\t// to provide we continue to write buffered.\n\t\t\tlet bufferOrReadableOrStreamOrBufferedStream: VSBuffer | VSBufferReadable | VSBufferReadableStream | VSBufferReadableBufferedStream;\n\t\t\tif (hasReadWriteCapability(provider) && !(bufferOrReadableOrStream instanceof VSBuffer)) {\n\t\t\t\tif (isReadableStream(bufferOrReadableOrStream)) {\n\t\t\t\t\tconst bufferedStream = await peekStream(bufferOrReadableOrStream, 3);\n\t\t\t\t\tif (bufferedStream.ended) {\n\t\t\t\t\t\tbufferOrReadableOrStreamOrBufferedStream = VSBuffer.concat(bufferedStream.buffer);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbufferOrReadableOrStreamOrBufferedStream = bufferedStream;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbufferOrReadableOrStreamOrBufferedStream = peekReadable(bufferOrReadableOrStream, data => VSBuffer.concat(data), 3);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbufferOrReadableOrStreamOrBufferedStream = bufferOrReadableOrStream;\n\t\t\t}\n\n\t\t\t// write file: unbuffered (only if data to write is a buffer, or the provider has no buffered write capability)\n\t\t\tif (!hasOpenReadWriteCloseCapability(provider) || (hasReadWriteCapability(provider) && bufferOrReadableOrStreamOrBufferedStream instanceof VSBuffer)) {\n\t\t\t\tawait this.doWriteUnbuffered(provider, resource, options, bufferOrReadableOrStreamOrBufferedStream);\n\t\t\t}\n\n\t\t\t// write file: buffered\n\t\t\telse {\n\t\t\t\tawait this.doWriteBuffered(provider, resource, options, bufferOrReadableOrStreamOrBufferedStream instanceof VSBuffer ? bufferToReadable(bufferOrReadableOrStreamOrBufferedStream) : bufferOrReadableOrStreamOrBufferedStream);\n\t\t\t}\n\n\t\t\t// events\n\t\t\tthis._onDidRunOperation.fire(new FileOperationEvent(resource, FileOperation.WRITE));\n\t\t} catch (error) {\n\t\t\tthrow new FileOperationError(localize('err.write', \"Unable to write file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options);\n\t\t}\n\n\t\treturn this.resolve(resource, { resolveMetadata: true });\n\t}\n\n\tprivate async validateWriteFile(provider: IFileSystemProvider, resource: URI, options?: IWriteFileOptions): Promise<IStat | undefined> {\n\n\t\t// Validate unlock support\n\t\tconst unlock = !!options?.unlock;\n\t\tif (unlock && !(provider.capabilities & FileSystemProviderCapabilities.FileWriteUnlock)) {\n\t\t\tthrow new Error(localize('writeFailedUnlockUnsupported', \"Unable to unlock file '{0}' because provider does not support it.\", this.resourceForError(resource)));\n\t\t}\n\n\t\t// Validate via file stat meta data\n\t\tlet stat: IStat | undefined = undefined;\n\t\ttry {\n\t\t\tstat = await provider.stat(resource);\n\t\t} catch (error) {\n\t\t\treturn undefined; // file might not exist\n\t\t}\n\n\t\t// File cannot be directory\n\t\tif ((stat.type & FileType.Directory) !== 0) {\n\t\t\tthrow new FileOperationError(localize('fileIsDirectoryWriteError', \"Unable to write file '{0}' that is actually a directory\", this.resourceForError(resource)), FileOperationResult.FILE_IS_DIRECTORY, options);\n\t\t}\n\n\t\t// File cannot be readonly\n\t\tthis.throwIfFileIsReadonly(resource, stat);\n\n\t\t// Dirty write prevention: if the file on disk has been changed and does not match our expected\n\t\t// mtime and etag, we bail out to prevent dirty writing.\n\t\t//\n\t\t// First, we check for a mtime that is in the future before we do more checks. The assumption is\n\t\t// that only the mtime is an indicator for a file that has changed on disk.\n\t\t//\n\t\t// Second, if the mtime has advanced, we compare the size of the file on disk with our previous\n\t\t// one using the etag() function. Relying only on the mtime check has prooven to produce false\n\t\t// positives due to file system weirdness (especially around remote file systems). As such, the\n\t\t// check for size is a weaker check because it can return a false negative if the file has changed\n\t\t// but to the same length. This is a compromise we take to avoid having to produce checksums of\n\t\t// the file content for comparison which would be much slower to compute.\n\t\tif (\n\t\t\ttypeof options?.mtime === 'number' && typeof options.etag === 'string' && options.etag !== ETAG_DISABLED &&\n\t\t\ttypeof stat.mtime === 'number' && typeof stat.size === 'number' &&\n\t\t\toptions.mtime < stat.mtime && options.etag !== etag({ mtime: options.mtime /* not using stat.mtime for a reason, see above */, size: stat.size })\n\t\t) {\n\t\t\tthrow new FileOperationError(localize('fileModifiedError', \"File Modified Since\"), FileOperationResult.FILE_MODIFIED_SINCE, options);\n\t\t}\n\n\t\treturn stat;\n\t}\n\n\tasync readFile(resource: URI, options?: IReadFileOptions, token?: CancellationToken): Promise<IFileContent> {\n\t\tconst provider = await this.withReadProvider(resource);\n\n\t\tif (options?.atomic) {\n\t\t\treturn this.doReadFileAtomic(provider, resource, options, token);\n\t\t}\n\n\t\treturn this.doReadFile(provider, resource, options, token);\n\t}\n\n\tprivate async doReadFileAtomic(provider: IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability | IFileSystemProviderWithFileReadStreamCapability, resource: URI, options?: IReadFileOptions, token?: CancellationToken): Promise<IFileContent> {\n\t\treturn new Promise<IFileContent>((resolve, reject) => {\n\t\t\tthis.writeQueue.queueFor(resource, this.getExtUri(provider).providerExtUri).queue(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst content = await this.doReadFile(provider, resource, options, token);\n\t\t\t\t\tresolve(content);\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate async doReadFile(provider: IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability | IFileSystemProviderWithFileReadStreamCapability, resource: URI, options?: IReadFileOptions, token?: CancellationToken): Promise<IFileContent> {\n\t\tconst stream = await this.doReadFileStream(provider, resource, {\n\t\t\t...options,\n\t\t\t// optimization: since we know that the caller does not\n\t\t\t// care about buffering, we indicate this to the reader.\n\t\t\t// this reduces all the overhead the buffered reading\n\t\t\t// has (open, read, close) if the provider supports\n\t\t\t// unbuffered reading.\n\t\t\tpreferUnbuffered: true\n\t\t}, token);\n\n\t\treturn {\n\t\t\t...stream,\n\t\t\tvalue: await streamToBuffer(stream.value)\n\t\t};\n\t}\n\n\tasync readFileStream(resource: URI, options?: IReadFileStreamOptions, token?: CancellationToken): Promise<IFileStreamContent> {\n\t\tconst provider = await this.withReadProvider(resource);\n\n\t\treturn this.doReadFileStream(provider, resource, options, token);\n\t}\n\n\tprivate async doReadFileStream(provider: IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability | IFileSystemProviderWithFileReadStreamCapability, resource: URI, options?: IReadFileOptions & IReadFileStreamOptions & { preferUnbuffered?: boolean }, token?: CancellationToken): Promise<IFileStreamContent> {\n\n\t\t// install a cancellation token that gets cancelled\n\t\t// when any error occurs. this allows us to resolve\n\t\t// the content of the file while resolving metadata\n\t\t// but still cancel the operation in certain cases.\n\t\t//\n\t\t// in addition, we pass the optional token in that\n\t\t// we got from the outside to even allow for external\n\t\t// cancellation of the read operation.\n\t\tconst cancellableSource = new CancellationTokenSource(token);\n\n\t\t// validate read operation\n\t\tconst statPromise = this.validateReadFile(resource, options).then(stat => stat, error => {\n\t\t\tcancellableSource.cancel();\n\n\t\t\tthrow error;\n\t\t});\n\n\t\tlet fileStream: VSBufferReadableStream | undefined = undefined;\n\t\ttry {\n\n\t\t\t// if the etag is provided, we await the result of the validation\n\t\t\t// due to the likelihood of hitting a NOT_MODIFIED_SINCE result.\n\t\t\t// otherwise, we let it run in parallel to the file reading for\n\t\t\t// optimal startup performance.\n\t\t\tif (typeof options?.etag === 'string' && options.etag !== ETAG_DISABLED) {\n\t\t\t\tawait statPromise;\n\t\t\t}\n\n\t\t\t// read unbuffered\n\t\t\tif (\n\t\t\t\t(options?.atomic && hasFileAtomicReadCapability(provider)) ||\t\t\t\t\t\t\t\t// atomic reads are always unbuffered\n\t\t\t\t!(hasOpenReadWriteCloseCapability(provider) || hasFileReadStreamCapability(provider)) ||\t// provider has no buffered capability\n\t\t\t\t(hasReadWriteCapability(provider) && options?.preferUnbuffered)\t\t\t\t\t\t\t\t// unbuffered read is preferred\n\t\t\t) {\n\t\t\t\tfileStream = this.readFileUnbuffered(provider, resource, options);\n\t\t\t}\n\n\t\t\t// read streamed (always prefer over primitive buffered read)\n\t\t\telse if (hasFileReadStreamCapability(provider)) {\n\t\t\t\tfileStream = this.readFileStreamed(provider, resource, cancellableSource.token, options);\n\t\t\t}\n\n\t\t\t// read buffered\n\t\t\telse {\n\t\t\t\tfileStream = this.readFileBuffered(provider, resource, cancellableSource.token, options);\n\t\t\t}\n\n\t\t\tconst fileStat = await statPromise;\n\n\t\t\treturn {\n\t\t\t\t...fileStat,\n\t\t\t\tvalue: fileStream\n\t\t\t};\n\t\t} catch (error) {\n\n\t\t\t// Await the stream to finish so that we exit this method\n\t\t\t// in a consistent state with file handles closed\n\t\t\t// (https://github.com/microsoft/vscode/issues/114024)\n\t\t\tif (fileStream) {\n\t\t\t\tawait consumeStream(fileStream);\n\t\t\t}\n\n\t\t\t// Re-throw errors as file operation errors but preserve\n\t\t\t// specific errors (such as not modified since)\n\t\t\tconst message = localize('err.read', \"Unable to read file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString());\n\t\t\tif (error instanceof NotModifiedSinceFileOperationError) {\n\t\t\t\tthrow new NotModifiedSinceFileOperationError(message, error.stat, options);\n\t\t\t} else {\n\t\t\t\tthrow new FileOperationError(message, toFileOperationResult(error), options);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate readFileStreamed(provider: IFileSystemProviderWithFileReadStreamCapability, resource: URI, token: CancellationToken, options: IReadFileStreamOptions = Object.create(null)): VSBufferReadableStream {\n\t\tconst fileStream = provider.readFileStream(resource, options, token);\n\n\t\treturn transform(fileStream, {\n\t\t\tdata: data => data instanceof VSBuffer ? data : VSBuffer.wrap(data),\n\t\t\terror: error => new FileOperationError(localize('err.read', \"Unable to read file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options)\n\t\t}, data => VSBuffer.concat(data));\n\t}\n\n\tprivate readFileBuffered(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, token: CancellationToken, options: IReadFileStreamOptions = Object.create(null)): VSBufferReadableStream {\n\t\tconst stream = newWriteableBufferStream();\n\n\t\treadFileIntoStream(provider, resource, stream, data => data, {\n\t\t\t...options,\n\t\t\tbufferSize: this.BUFFER_SIZE,\n\t\t\terrorTransformer: error => new FileOperationError(localize('err.read', \"Unable to read file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options)\n\t\t}, token);\n\n\t\treturn stream;\n\t}\n\n\tprivate readFileUnbuffered(provider: IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithFileAtomicReadCapability, resource: URI, options?: IReadFileOptions & IReadFileStreamOptions): VSBufferReadableStream {\n\t\tconst stream = newWriteableStream<VSBuffer>(data => VSBuffer.concat(data));\n\n\t\t// Read the file into the stream async but do not wait for\n\t\t// this to complete because streams work via events\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tlet buffer: Uint8Array;\n\t\t\t\tif (options?.atomic && hasFileAtomicReadCapability(provider)) {\n\t\t\t\t\tbuffer = await provider.readFile(resource, { atomic: true });\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = await provider.readFile(resource);\n\t\t\t\t}\n\n\t\t\t\t// respect position option\n\t\t\t\tif (typeof options?.position === 'number') {\n\t\t\t\t\tbuffer = buffer.slice(options.position);\n\t\t\t\t}\n\n\t\t\t\t// respect length option\n\t\t\t\tif (typeof options?.length === 'number') {\n\t\t\t\t\tbuffer = buffer.slice(0, options.length);\n\t\t\t\t}\n\n\t\t\t\t// Throw if file is too large to load\n\t\t\t\tthis.validateReadFileLimits(resource, buffer.byteLength, options);\n\n\t\t\t\t// End stream with data\n\t\t\t\tstream.end(VSBuffer.wrap(buffer));\n\t\t\t} catch (err) {\n\t\t\t\tstream.error(err);\n\t\t\t\tstream.end();\n\t\t\t}\n\t\t})();\n\n\t\treturn stream;\n\t}\n\n\tprivate async validateReadFile(resource: URI, options?: IReadFileStreamOptions): Promise<IFileStatWithMetadata> {\n\t\tconst stat = await this.resolve(resource, { resolveMetadata: true });\n\n\t\t// Throw if resource is a directory\n\t\tif (stat.isDirectory) {\n\t\t\tthrow new FileOperationError(localize('fileIsDirectoryReadError', \"Unable to read file '{0}' that is actually a directory\", this.resourceForError(resource)), FileOperationResult.FILE_IS_DIRECTORY, options);\n\t\t}\n\n\t\t// Throw if file not modified since (unless disabled)\n\t\tif (typeof options?.etag === 'string' && options.etag !== ETAG_DISABLED && options.etag === stat.etag) {\n\t\t\tthrow new NotModifiedSinceFileOperationError(localize('fileNotModifiedError', \"File not modified since\"), stat, options);\n\t\t}\n\n\t\t// Throw if file is too large to load\n\t\tthis.validateReadFileLimits(resource, stat.size, options);\n\n\t\treturn stat;\n\t}\n\n\tprivate validateReadFileLimits(resource: URI, size: number, options?: IReadFileStreamOptions): void {\n\t\tif (options?.limits) {\n\t\t\tlet tooLargeErrorResult: FileOperationResult | undefined = undefined;\n\n\t\t\tif (typeof options.limits.memory === 'number' && size > options.limits.memory) {\n\t\t\t\ttooLargeErrorResult = FileOperationResult.FILE_EXCEEDS_MEMORY_LIMIT;\n\t\t\t}\n\n\t\t\tif (typeof options.limits.size === 'number' && size > options.limits.size) {\n\t\t\t\ttooLargeErrorResult = FileOperationResult.FILE_TOO_LARGE;\n\t\t\t}\n\n\t\t\tif (typeof tooLargeErrorResult === 'number') {\n\t\t\t\tthrow new FileOperationError(localize('fileTooLargeError', \"Unable to read file '{0}' that is too large to open\", this.resourceForError(resource)), tooLargeErrorResult);\n\t\t\t}\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region Move/Copy/Delete/Create Folder\n\n\tasync canMove(source: URI, target: URI, overwrite?: boolean): Promise<Error | true> {\n\t\treturn this.doCanMoveCopy(source, target, 'move', overwrite);\n\t}\n\n\tasync canCopy(source: URI, target: URI, overwrite?: boolean): Promise<Error | true> {\n\t\treturn this.doCanMoveCopy(source, target, 'copy', overwrite);\n\t}\n\n\tprivate async doCanMoveCopy(source: URI, target: URI, mode: 'move' | 'copy', overwrite?: boolean): Promise<Error | true> {\n\t\tif (source.toString() !== target.toString()) {\n\t\t\ttry {\n\t\t\t\tconst sourceProvider = mode === 'move' ? this.throwIfFileSystemIsReadonly(await this.withWriteProvider(source), source) : await this.withReadProvider(source);\n\t\t\t\tconst targetProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(target), target);\n\n\t\t\t\tawait this.doValidateMoveCopy(sourceProvider, source, targetProvider, target, mode, overwrite);\n\t\t\t} catch (error) {\n\t\t\t\treturn error;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tasync move(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata> {\n\t\tconst sourceProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(source), source);\n\t\tconst targetProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(target), target);\n\n\t\t// move\n\t\tconst mode = await this.doMoveCopy(sourceProvider, source, targetProvider, target, 'move', !!overwrite);\n\n\t\t// resolve and send events\n\t\tconst fileStat = await this.resolve(target, { resolveMetadata: true });\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(source, mode === 'move' ? FileOperation.MOVE : FileOperation.COPY, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tasync copy(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata> {\n\t\tconst sourceProvider = await this.withReadProvider(source);\n\t\tconst targetProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(target), target);\n\n\t\t// copy\n\t\tconst mode = await this.doMoveCopy(sourceProvider, source, targetProvider, target, 'copy', !!overwrite);\n\n\t\t// resolve and send events\n\t\tconst fileStat = await this.resolve(target, { resolveMetadata: true });\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(source, mode === 'copy' ? FileOperation.COPY : FileOperation.MOVE, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tprivate async doMoveCopy(sourceProvider: IFileSystemProvider, source: URI, targetProvider: IFileSystemProvider, target: URI, mode: 'move' | 'copy', overwrite: boolean): Promise<'move' | 'copy'> {\n\t\tif (source.toString() === target.toString()) {\n\t\t\treturn mode; // simulate node.js behaviour here and do a no-op if paths match\n\t\t}\n\n\t\t// validation\n\t\tconst { exists, isSameResourceWithDifferentPathCase } = await this.doValidateMoveCopy(sourceProvider, source, targetProvider, target, mode, overwrite);\n\n\t\t// delete as needed (unless target is same resurce with different path case)\n\t\tif (exists && !isSameResourceWithDifferentPathCase && overwrite) {\n\t\t\tawait this.del(target, { recursive: true });\n\t\t}\n\n\t\t// create parent folders\n\t\tawait this.mkdirp(targetProvider, this.getExtUri(targetProvider).providerExtUri.dirname(target));\n\n\t\t// copy source => target\n\t\tif (mode === 'copy') {\n\n\t\t\t// same provider with fast copy: leverage copy() functionality\n\t\t\tif (sourceProvider === targetProvider && hasFileFolderCopyCapability(sourceProvider)) {\n\t\t\t\tawait sourceProvider.copy(source, target, { overwrite });\n\t\t\t}\n\n\t\t\t// when copying via buffer/unbuffered, we have to manually\n\t\t\t// traverse the source if it is a folder and not a file\n\t\t\telse {\n\t\t\t\tconst sourceFile = await this.resolve(source);\n\t\t\t\tif (sourceFile.isDirectory) {\n\t\t\t\t\tawait this.doCopyFolder(sourceProvider, sourceFile, targetProvider, target);\n\t\t\t\t} else {\n\t\t\t\t\tawait this.doCopyFile(sourceProvider, source, targetProvider, target);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn mode;\n\t\t}\n\n\t\t// move source => target\n\t\telse {\n\n\t\t\t// same provider: leverage rename() functionality\n\t\t\tif (sourceProvider === targetProvider) {\n\t\t\t\tawait sourceProvider.rename(source, target, { overwrite });\n\n\t\t\t\treturn mode;\n\t\t\t}\n\n\t\t\t// across providers: copy to target & delete at source\n\t\t\telse {\n\t\t\t\tawait this.doMoveCopy(sourceProvider, source, targetProvider, target, 'copy', overwrite);\n\t\t\t\tawait this.del(source, { recursive: true });\n\n\t\t\t\treturn 'copy';\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async doCopyFile(sourceProvider: IFileSystemProvider, source: URI, targetProvider: IFileSystemProvider, target: URI): Promise<void> {\n\n\t\t// copy: source (buffered) => target (buffered)\n\t\tif (hasOpenReadWriteCloseCapability(sourceProvider) && hasOpenReadWriteCloseCapability(targetProvider)) {\n\t\t\treturn this.doPipeBuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\n\t\t// copy: source (buffered) => target (unbuffered)\n\t\tif (hasOpenReadWriteCloseCapability(sourceProvider) && hasReadWriteCapability(targetProvider)) {\n\t\t\treturn this.doPipeBufferedToUnbuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\n\t\t// copy: source (unbuffered) => target (buffered)\n\t\tif (hasReadWriteCapability(sourceProvider) && hasOpenReadWriteCloseCapability(targetProvider)) {\n\t\t\treturn this.doPipeUnbufferedToBuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\n\t\t// copy: source (unbuffered) => target (unbuffered)\n\t\tif (hasReadWriteCapability(sourceProvider) && hasReadWriteCapability(targetProvider)) {\n\t\t\treturn this.doPipeUnbuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\t}\n\n\tprivate async doCopyFolder(sourceProvider: IFileSystemProvider, sourceFolder: IFileStat, targetProvider: IFileSystemProvider, targetFolder: URI): Promise<void> {\n\n\t\t// create folder in target\n\t\tawait targetProvider.mkdir(targetFolder);\n\n\t\t// create children in target\n\t\tif (Array.isArray(sourceFolder.children)) {\n\t\t\tawait Promises.settled(sourceFolder.children.map(async sourceChild => {\n\t\t\t\tconst targetChild = this.getExtUri(targetProvider).providerExtUri.joinPath(targetFolder, sourceChild.name);\n\t\t\t\tif (sourceChild.isDirectory) {\n\t\t\t\t\treturn this.doCopyFolder(sourceProvider, await this.resolve(sourceChild.resource), targetProvider, targetChild);\n\t\t\t\t} else {\n\t\t\t\t\treturn this.doCopyFile(sourceProvider, sourceChild.resource, targetProvider, targetChild);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n\n\tprivate async doValidateMoveCopy(sourceProvider: IFileSystemProvider, source: URI, targetProvider: IFileSystemProvider, target: URI, mode: 'move' | 'copy', overwrite?: boolean): Promise<{ exists: boolean; isSameResourceWithDifferentPathCase: boolean }> {\n\t\tlet isSameResourceWithDifferentPathCase = false;\n\n\t\t// Check if source is equal or parent to target (requires providers to be the same)\n\t\tif (sourceProvider === targetProvider) {\n\t\t\tconst { providerExtUri, isPathCaseSensitive } = this.getExtUri(sourceProvider);\n\t\t\tif (!isPathCaseSensitive) {\n\t\t\t\tisSameResourceWithDifferentPathCase = providerExtUri.isEqual(source, target);\n\t\t\t}\n\n\t\t\tif (isSameResourceWithDifferentPathCase && mode === 'copy') {\n\t\t\t\tthrow new Error(localize('unableToMoveCopyError1', \"Unable to copy when source '{0}' is same as target '{1}' with different path case on a case insensitive file system\", this.resourceForError(source), this.resourceForError(target)));\n\t\t\t}\n\n\t\t\tif (!isSameResourceWithDifferentPathCase && providerExtUri.isEqualOrParent(target, source)) {\n\t\t\t\tthrow new Error(localize('unableToMoveCopyError2', \"Unable to move/copy when source '{0}' is parent of target '{1}'.\", this.resourceForError(source), this.resourceForError(target)));\n\t\t\t}\n\t\t}\n\n\t\t// Extra checks if target exists and this is not a rename\n\t\tconst exists = await this.exists(target);\n\t\tif (exists && !isSameResourceWithDifferentPathCase) {\n\n\t\t\t// Bail out if target exists and we are not about to overwrite\n\t\t\tif (!overwrite) {\n\t\t\t\tthrow new FileOperationError(localize('unableToMoveCopyError3', \"Unable to move/copy '{0}' because target '{1}' already exists at destination.\", this.resourceForError(source), this.resourceForError(target)), FileOperationResult.FILE_MOVE_CONFLICT);\n\t\t\t}\n\n\t\t\t// Special case: if the target is a parent of the source, we cannot delete\n\t\t\t// it as it would delete the source as well. In this case we have to throw\n\t\t\tif (sourceProvider === targetProvider) {\n\t\t\t\tconst { providerExtUri } = this.getExtUri(sourceProvider);\n\t\t\t\tif (providerExtUri.isEqualOrParent(source, target)) {\n\t\t\t\t\tthrow new Error(localize('unableToMoveCopyError4', \"Unable to move/copy '{0}' into '{1}' since a file would replace the folder it is contained in.\", this.resourceForError(source), this.resourceForError(target)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { exists, isSameResourceWithDifferentPathCase };\n\t}\n\n\tprivate getExtUri(provider: IFileSystemProvider): { providerExtUri: IExtUri; isPathCaseSensitive: boolean } {\n\t\tconst isPathCaseSensitive = this.isPathCaseSensitive(provider);\n\n\t\treturn {\n\t\t\tproviderExtUri: isPathCaseSensitive ? extUri : extUriIgnorePathCase,\n\t\t\tisPathCaseSensitive\n\t\t};\n\t}\n\n\tprivate isPathCaseSensitive(provider: IFileSystemProvider): boolean {\n\t\treturn !!(provider.capabilities & FileSystemProviderCapabilities.PathCaseSensitive);\n\t}\n\n\tasync createFolder(resource: URI): Promise<IFileStatWithMetadata> {\n\t\tconst provider = this.throwIfFileSystemIsReadonly(await this.withProvider(resource), resource);\n\n\t\t// mkdir recursively\n\t\tawait this.mkdirp(provider, resource);\n\n\t\t// events\n\t\tconst fileStat = await this.resolve(resource, { resolveMetadata: true });\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(resource, FileOperation.CREATE, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tprivate async mkdirp(provider: IFileSystemProvider, directory: URI): Promise<void> {\n\t\tconst directoriesToCreate: string[] = [];\n\n\t\t// mkdir until we reach root\n\t\tconst { providerExtUri } = this.getExtUri(provider);\n\t\twhile (!providerExtUri.isEqual(directory, providerExtUri.dirname(directory))) {\n\t\t\ttry {\n\t\t\t\tconst stat = await provider.stat(directory);\n\t\t\t\tif ((stat.type & FileType.Directory) === 0) {\n\t\t\t\t\tthrow new Error(localize('mkdirExistsError', \"Unable to create folder '{0}' that already exists but is not a directory\", this.resourceForError(directory)));\n\t\t\t\t}\n\n\t\t\t\tbreak; // we have hit a directory that exists -> good\n\t\t\t} catch (error) {\n\n\t\t\t\t// Bubble up any other error that is not file not found\n\t\t\t\tif (toFileSystemProviderErrorCode(error) !== FileSystemProviderErrorCode.FileNotFound) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\t// Upon error, remember directories that need to be created\n\t\t\t\tdirectoriesToCreate.push(providerExtUri.basename(directory));\n\n\t\t\t\t// Continue up\n\t\t\t\tdirectory = providerExtUri.dirname(directory);\n\t\t\t}\n\t\t}\n\n\t\t// Create directories as needed\n\t\tfor (let i = directoriesToCreate.length - 1; i >= 0; i--) {\n\t\t\tdirectory = providerExtUri.joinPath(directory, directoriesToCreate[i]);\n\n\t\t\ttry {\n\t\t\t\tawait provider.mkdir(directory);\n\t\t\t} catch (error) {\n\t\t\t\tif (toFileSystemProviderErrorCode(error) !== FileSystemProviderErrorCode.FileExists) {\n\t\t\t\t\t// For mkdirp() we tolerate that the mkdir() call fails\n\t\t\t\t\t// in case the folder already exists. This follows node.js\n\t\t\t\t\t// own implementation of fs.mkdir({ recursive: true }) and\n\t\t\t\t\t// reduces the chances of race conditions leading to errors\n\t\t\t\t\t// if multiple calls try to create the same folders\n\t\t\t\t\t// As such, we only throw an error here if it is other than\n\t\t\t\t\t// the fact that the file already exists.\n\t\t\t\t\t// (see also https://github.com/microsoft/vscode/issues/89834)\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tasync canDelete(resource: URI, options?: Partial<IFileDeleteOptions>): Promise<Error | true> {\n\t\ttry {\n\t\t\tawait this.doValidateDelete(resource, options);\n\t\t} catch (error) {\n\t\t\treturn error;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate async doValidateDelete(resource: URI, options?: Partial<IFileDeleteOptions>): Promise<IFileSystemProvider> {\n\t\tconst provider = this.throwIfFileSystemIsReadonly(await this.withProvider(resource), resource);\n\n\t\t// Validate trash support\n\t\tconst useTrash = !!options?.useTrash;\n\t\tif (useTrash && !(provider.capabilities & FileSystemProviderCapabilities.Trash)) {\n\t\t\tthrow new Error(localize('deleteFailedTrashUnsupported', \"Unable to delete file '{0}' via trash because provider does not support it.\", this.resourceForError(resource)));\n\t\t}\n\n\t\t// Validate delete\n\t\tlet stat: IStat | undefined = undefined;\n\t\ttry {\n\t\t\tstat = await provider.stat(resource);\n\t\t} catch (error) {\n\t\t\t// Handled later\n\t\t}\n\n\t\tif (stat) {\n\t\t\tthis.throwIfFileIsReadonly(resource, stat);\n\t\t} else {\n\t\t\tthrow new FileOperationError(localize('deleteFailedNotFound', \"Unable to delete nonexistent file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_NOT_FOUND);\n\t\t}\n\n\t\t// Validate recursive\n\t\tconst recursive = !!options?.recursive;\n\t\tif (!recursive) {\n\t\t\tconst stat = await this.resolve(resource);\n\t\t\tif (stat.isDirectory && Array.isArray(stat.children) && stat.children.length > 0) {\n\t\t\t\tthrow new Error(localize('deleteFailedNonEmptyFolder', \"Unable to delete non-empty folder '{0}'.\", this.resourceForError(resource)));\n\t\t\t}\n\t\t}\n\n\t\treturn provider;\n\t}\n\n\tasync del(resource: URI, options?: Partial<IFileDeleteOptions>): Promise<void> {\n\t\tconst provider = await this.doValidateDelete(resource, options);\n\n\t\tconst useTrash = !!options?.useTrash;\n\t\tconst recursive = !!options?.recursive;\n\n\t\t// Delete through provider\n\t\tawait provider.delete(resource, { recursive, useTrash });\n\n\t\t// Events\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(resource, FileOperation.DELETE));\n\t}\n\n\t//#endregion\n\n\t//#region Clone File\n\n\tasync cloneFile(source: URI, target: URI): Promise<void> {\n\t\tconst sourceProvider = await this.withProvider(source);\n\t\tconst targetProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(target), target);\n\n\t\tif (sourceProvider === targetProvider && this.getExtUri(sourceProvider).providerExtUri.isEqual(source, target)) {\n\t\t\treturn; // return early if paths are equal\n\t\t}\n\n\t\t// same provider, use `cloneFile` when native support is provided\n\t\tif (sourceProvider === targetProvider && hasFileCloneCapability(sourceProvider)) {\n\t\t\treturn sourceProvider.cloneFile(source, target);\n\t\t}\n\n\t\t// otherwise, either providers are different or there is no native\n\t\t// `cloneFile` support, then we fallback to emulate a clone as best\n\t\t// as we can with the other primitives\n\n\t\t// create parent folders\n\t\tawait this.mkdirp(targetProvider, this.getExtUri(targetProvider).providerExtUri.dirname(target));\n\n\t\t// queue on the source to ensure atomic read\n\t\tconst sourceWriteQueue = this.writeQueue.queueFor(source, this.getExtUri(sourceProvider).providerExtUri);\n\n\t\t// leverage `copy` method if provided and providers are identical\n\t\tif (sourceProvider === targetProvider && hasFileFolderCopyCapability(sourceProvider)) {\n\t\t\treturn sourceWriteQueue.queue(() => sourceProvider.copy(source, target, { overwrite: true }));\n\t\t}\n\n\t\t// otherwise copy via buffer/unbuffered and use a write queue\n\t\t// on the source to ensure atomic operation as much as possible\n\t\treturn sourceWriteQueue.queue(() => this.doCopyFile(sourceProvider, source, targetProvider, target));\n\t}\n\n\t//#endregion\n\n\t//#region File Watching\n\n\tprivate readonly _onDidFilesChange = this._register(new Emitter<FileChangesEvent>());\n\treadonly onDidFilesChange = this._onDidFilesChange.event;\n\n\tprivate readonly _onDidWatchError = this._register(new Emitter<Error>());\n\treadonly onDidWatchError = this._onDidWatchError.event;\n\n\tprivate readonly activeWatchers = new Map<number /* watch request hash */, { disposable: IDisposable; count: number }>();\n\n\twatch(resource: URI, options: IWatchOptions = { recursive: false, excludes: [] }): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\n\t\t// Forward watch request to provider and wire in disposables\n\t\tlet watchDisposed = false;\n\t\tlet disposeWatch = () => { watchDisposed = true; };\n\t\tdisposables.add(toDisposable(() => disposeWatch()));\n\n\t\t// Watch and wire in disposable which is async but\n\t\t// check if we got disposed meanwhile and forward\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tconst disposable = await this.doWatch(resource, options);\n\t\t\t\tif (watchDisposed) {\n\t\t\t\t\tdispose(disposable);\n\t\t\t\t} else {\n\t\t\t\t\tdisposeWatch = () => dispose(disposable);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.error(error);\n\t\t\t}\n\t\t})();\n\n\t\treturn disposables;\n\t}\n\n\tprivate async doWatch(resource: URI, options: IWatchOptions): Promise<IDisposable> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\t// Deduplicate identical watch requests\n\t\tconst watchHash = hash([this.getExtUri(provider).providerExtUri.getComparisonKey(resource), options]);\n\t\tlet watcher = this.activeWatchers.get(watchHash);\n\t\tif (!watcher) {\n\t\t\twatcher = {\n\t\t\t\tcount: 0,\n\t\t\t\tdisposable: provider.watch(resource, options)\n\t\t\t};\n\n\t\t\tthis.activeWatchers.set(watchHash, watcher);\n\t\t}\n\n\t\t// Increment usage counter\n\t\twatcher.count += 1;\n\n\t\treturn toDisposable(() => {\n\t\t\tif (watcher) {\n\n\t\t\t\t// Unref\n\t\t\t\twatcher.count--;\n\n\t\t\t\t// Dispose only when last user is reached\n\t\t\t\tif (watcher.count === 0) {\n\t\t\t\t\tdispose(watcher.disposable);\n\t\t\t\t\tthis.activeWatchers.delete(watchHash);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tfor (const [, watcher] of this.activeWatchers) {\n\t\t\tdispose(watcher.disposable);\n\t\t}\n\n\t\tthis.activeWatchers.clear();\n\t}\n\n\t//#endregion\n\n\t//#region Helpers\n\n\tprivate readonly writeQueue = this._register(new ResourceQueue());\n\n\tprivate async doWriteBuffered(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, options: IWriteFileOptions | undefined, readableOrStreamOrBufferedStream: VSBufferReadable | VSBufferReadableStream | VSBufferReadableBufferedStream): Promise<void> {\n\t\treturn this.writeQueue.queueFor(resource, this.getExtUri(provider).providerExtUri).queue(async () => {\n\n\t\t\t// open handle\n\t\t\tconst handle = await provider.open(resource, { create: true, unlock: options?.unlock ?? false });\n\n\t\t\t// write into handle until all bytes from buffer have been written\n\t\t\ttry {\n\t\t\t\tif (isReadableStream(readableOrStreamOrBufferedStream) || isReadableBufferedStream(readableOrStreamOrBufferedStream)) {\n\t\t\t\t\tawait this.doWriteStreamBufferedQueued(provider, handle, readableOrStreamOrBufferedStream);\n\t\t\t\t} else {\n\t\t\t\t\tawait this.doWriteReadableBufferedQueued(provider, handle, readableOrStreamOrBufferedStream);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t\t} finally {\n\n\t\t\t\t// close handle always\n\t\t\t\tawait provider.close(handle);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async doWriteStreamBufferedQueued(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, handle: number, streamOrBufferedStream: VSBufferReadableStream | VSBufferReadableBufferedStream): Promise<void> {\n\t\tlet posInFile = 0;\n\t\tlet stream: VSBufferReadableStream;\n\n\t\t// Buffered stream: consume the buffer first by writing\n\t\t// it to the target before reading from the stream.\n\t\tif (isReadableBufferedStream(streamOrBufferedStream)) {\n\t\t\tif (streamOrBufferedStream.buffer.length > 0) {\n\t\t\t\tconst chunk = VSBuffer.concat(streamOrBufferedStream.buffer);\n\t\t\t\tawait this.doWriteBuffer(provider, handle, chunk, chunk.byteLength, posInFile, 0);\n\n\t\t\t\tposInFile += chunk.byteLength;\n\t\t\t}\n\n\t\t\t// If the stream has been consumed, return early\n\t\t\tif (streamOrBufferedStream.ended) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstream = streamOrBufferedStream.stream;\n\t\t}\n\n\t\t// Unbuffered stream - just take as is\n\t\telse {\n\t\t\tstream = streamOrBufferedStream;\n\t\t}\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlistenStream(stream, {\n\t\t\t\tonData: async chunk => {\n\n\t\t\t\t\t// pause stream to perform async write operation\n\t\t\t\t\tstream.pause();\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait this.doWriteBuffer(provider, handle, chunk, chunk.byteLength, posInFile, 0);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\treturn reject(error);\n\t\t\t\t\t}\n\n\t\t\t\t\tposInFile += chunk.byteLength;\n\n\t\t\t\t\t// resume stream now that we have successfully written\n\t\t\t\t\t// run this on the next tick to prevent increasing the\n\t\t\t\t\t// execution stack because resume() may call the event\n\t\t\t\t\t// handler again before finishing.\n\t\t\t\t\tsetTimeout(() => stream.resume());\n\t\t\t\t},\n\t\t\t\tonError: error => reject(error),\n\t\t\t\tonEnd: () => resolve()\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate async doWriteReadableBufferedQueued(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, handle: number, readable: VSBufferReadable): Promise<void> {\n\t\tlet posInFile = 0;\n\n\t\tlet chunk: VSBuffer | null;\n\t\twhile ((chunk = readable.read()) !== null) {\n\t\t\tawait this.doWriteBuffer(provider, handle, chunk, chunk.byteLength, posInFile, 0);\n\n\t\t\tposInFile += chunk.byteLength;\n\t\t}\n\t}\n\n\tprivate async doWriteBuffer(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, handle: number, buffer: VSBuffer, length: number, posInFile: number, posInBuffer: number): Promise<void> {\n\t\tlet totalBytesWritten = 0;\n\t\twhile (totalBytesWritten < length) {\n\n\t\t\t// Write through the provider\n\t\t\tconst bytesWritten = await provider.write(handle, posInFile + totalBytesWritten, buffer.buffer, posInBuffer + totalBytesWritten, length - totalBytesWritten);\n\t\t\ttotalBytesWritten += bytesWritten;\n\t\t}\n\t}\n\n\tprivate async doWriteUnbuffered(provider: IFileSystemProviderWithFileReadWriteCapability, resource: URI, options: IWriteFileOptions | undefined, bufferOrReadableOrStreamOrBufferedStream: VSBuffer | VSBufferReadable | VSBufferReadableStream | VSBufferReadableBufferedStream): Promise<void> {\n\t\treturn this.writeQueue.queueFor(resource, this.getExtUri(provider).providerExtUri).queue(() => this.doWriteUnbufferedQueued(provider, resource, options, bufferOrReadableOrStreamOrBufferedStream));\n\t}\n\n\tprivate async doWriteUnbufferedQueued(provider: IFileSystemProviderWithFileReadWriteCapability, resource: URI, options: IWriteFileOptions | undefined, bufferOrReadableOrStreamOrBufferedStream: VSBuffer | VSBufferReadable | VSBufferReadableStream | VSBufferReadableBufferedStream): Promise<void> {\n\t\tlet buffer: VSBuffer;\n\t\tif (bufferOrReadableOrStreamOrBufferedStream instanceof VSBuffer) {\n\t\t\tbuffer = bufferOrReadableOrStreamOrBufferedStream;\n\t\t} else if (isReadableStream(bufferOrReadableOrStreamOrBufferedStream)) {\n\t\t\tbuffer = await streamToBuffer(bufferOrReadableOrStreamOrBufferedStream);\n\t\t} else if (isReadableBufferedStream(bufferOrReadableOrStreamOrBufferedStream)) {\n\t\t\tbuffer = await bufferedStreamToBuffer(bufferOrReadableOrStreamOrBufferedStream);\n\t\t} else {\n\t\t\tbuffer = readableToBuffer(bufferOrReadableOrStreamOrBufferedStream);\n\t\t}\n\n\t\t// Write through the provider\n\t\tawait provider.writeFile(resource, buffer.buffer, { create: true, overwrite: true, unlock: options?.unlock ?? false });\n\t}\n\n\tprivate async doPipeBuffered(sourceProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\t\treturn this.writeQueue.queueFor(target, this.getExtUri(targetProvider).providerExtUri).queue(() => this.doPipeBufferedQueued(sourceProvider, source, targetProvider, target));\n\t}\n\n\tprivate async doPipeBufferedQueued(sourceProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\t\tlet sourceHandle: number | undefined = undefined;\n\t\tlet targetHandle: number | undefined = undefined;\n\n\t\ttry {\n\n\t\t\t// Open handles\n\t\t\tsourceHandle = await sourceProvider.open(source, { create: false });\n\t\t\ttargetHandle = await targetProvider.open(target, { create: true, unlock: false });\n\n\t\t\tconst buffer = VSBuffer.alloc(this.BUFFER_SIZE);\n\n\t\t\tlet posInFile = 0;\n\t\t\tlet posInBuffer = 0;\n\t\t\tlet bytesRead = 0;\n\t\t\tdo {\n\t\t\t\t// read from source (sourceHandle) at current position (posInFile) into buffer (buffer) at\n\t\t\t\t// buffer position (posInBuffer) up to the size of the buffer (buffer.byteLength).\n\t\t\t\tbytesRead = await sourceProvider.read(sourceHandle, posInFile, buffer.buffer, posInBuffer, buffer.byteLength - posInBuffer);\n\n\t\t\t\t// write into target (targetHandle) at current position (posInFile) from buffer (buffer) at\n\t\t\t\t// buffer position (posInBuffer) all bytes we read (bytesRead).\n\t\t\t\tawait this.doWriteBuffer(targetProvider, targetHandle, buffer, bytesRead, posInFile, posInBuffer);\n\n\t\t\t\tposInFile += bytesRead;\n\t\t\t\tposInBuffer += bytesRead;\n\n\t\t\t\t// when buffer full, fill it again from the beginning\n\t\t\t\tif (posInBuffer === buffer.byteLength) {\n\t\t\t\t\tposInBuffer = 0;\n\t\t\t\t}\n\t\t\t} while (bytesRead > 0);\n\t\t} catch (error) {\n\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tawait Promises.settled([\n\t\t\t\ttypeof sourceHandle === 'number' ? sourceProvider.close(sourceHandle) : Promise.resolve(),\n\t\t\t\ttypeof targetHandle === 'number' ? targetProvider.close(targetHandle) : Promise.resolve(),\n\t\t\t]);\n\t\t}\n\t}\n\n\tprivate async doPipeUnbuffered(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithFileReadWriteCapability, target: URI): Promise<void> {\n\t\treturn this.writeQueue.queueFor(target, this.getExtUri(targetProvider).providerExtUri).queue(() => this.doPipeUnbufferedQueued(sourceProvider, source, targetProvider, target));\n\t}\n\n\tprivate async doPipeUnbufferedQueued(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithFileReadWriteCapability, target: URI): Promise<void> {\n\t\treturn targetProvider.writeFile(target, await sourceProvider.readFile(source), { create: true, overwrite: true, unlock: false });\n\t}\n\n\tprivate async doPipeUnbufferedToBuffered(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\t\treturn this.writeQueue.queueFor(target, this.getExtUri(targetProvider).providerExtUri).queue(() => this.doPipeUnbufferedToBufferedQueued(sourceProvider, source, targetProvider, target));\n\t}\n\n\tprivate async doPipeUnbufferedToBufferedQueued(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\n\t\t// Open handle\n\t\tconst targetHandle = await targetProvider.open(target, { create: true, unlock: false });\n\n\t\t// Read entire buffer from source and write buffered\n\t\ttry {\n\t\t\tconst buffer = await sourceProvider.readFile(source);\n\t\t\tawait this.doWriteBuffer(targetProvider, targetHandle, VSBuffer.wrap(buffer), buffer.byteLength, 0, 0);\n\t\t} catch (error) {\n\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tawait targetProvider.close(targetHandle);\n\t\t}\n\t}\n\n\tprivate async doPipeBufferedToUnbuffered(sourceProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, source: URI, targetProvider: IFileSystemProviderWithFileReadWriteCapability, target: URI): Promise<void> {\n\n\t\t// Read buffer via stream buffered\n\t\tconst buffer = await streamToBuffer(this.readFileBuffered(sourceProvider, source, CancellationToken.None));\n\n\t\t// Write buffer into target at once\n\t\tawait this.doWriteUnbuffered(targetProvider, target, undefined, buffer);\n\t}\n\n\tprotected throwIfFileSystemIsReadonly<T extends IFileSystemProvider>(provider: T, resource: URI): T {\n\t\tif (provider.capabilities & FileSystemProviderCapabilities.Readonly) {\n\t\t\tthrow new FileOperationError(localize('err.readonly', \"Unable to modify readonly file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_PERMISSION_DENIED);\n\t\t}\n\n\t\treturn provider;\n\t}\n\n\tprivate throwIfFileIsReadonly(resource: URI, stat: IStat): void {\n\t\tif ((stat.permissions ?? 0) & FilePermission.Readonly) {\n\t\t\tthrow new FileOperationError(localize('err.readonly', \"Unable to modify readonly file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_PERMISSION_DENIED);\n\t\t}\n\t}\n\n\tprivate resourceForError(resource: URI): string {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\treturn resource.fsPath;\n\t\t}\n\n\t\treturn resource.toString(true);\n\t}\n\n\t//#endregion\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { gracefulify } from 'graceful-fs';\nimport { Barrier, retry } from 'vs/base/common/async';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Event } from 'vs/base/common/event';\nimport { isEqual } from 'vs/base/common/extpath';\nimport { DisposableStore, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { basename, dirname } from 'vs/base/common/path';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { extUriBiasedIgnorePathCase, joinPath } from 'vs/base/common/resources';\nimport { newWriteableStream, ReadableStreamEvents } from 'vs/base/common/stream';\nimport { URI } from 'vs/base/common/uri';\nimport { IDirent, Promises, RimRafMode, SymlinkSupport } from 'vs/base/node/pfs';\nimport { localize } from 'vs/nls';\nimport { createFileSystemProviderError, IFileAtomicReadOptions, IFileDeleteOptions, IFileOpenOptions, IFileOverwriteOptions, IFileReadStreamOptions, FileSystemProviderCapabilities, FileSystemProviderError, FileSystemProviderErrorCode, FileType, IFileWriteOptions, IFileSystemProviderWithFileAtomicReadCapability, IFileSystemProviderWithFileCloneCapability, IFileSystemProviderWithFileFolderCopyCapability, IFileSystemProviderWithFileReadStreamCapability, IFileSystemProviderWithFileReadWriteCapability, IFileSystemProviderWithOpenReadWriteCloseCapability, isFileOpenForWriteOptions, IStat } from 'vs/platform/files/common/files';\nimport { readFileIntoStream } from 'vs/platform/files/common/io';\nimport { AbstractNonRecursiveWatcherClient, AbstractUniversalWatcherClient, IDiskFileChange, ILogMessage } from 'vs/platform/files/common/watcher';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { AbstractDiskFileSystemProvider, IDiskFileSystemProviderOptions } from 'vs/platform/files/common/diskFileSystemProvider';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { UniversalWatcherClient } from 'vs/platform/files/node/watcher/watcherClient';\nimport { NodeJSWatcherClient } from 'vs/platform/files/node/watcher/nodejs/nodejsClient';\n\n/**\n * Enable graceful-fs very early from here to have it enabled\n * in all contexts that leverage the disk file system provider.\n */\n(() => {\n\ttry {\n\t\tgracefulify(fs);\n\t} catch (error) {\n\t\tconsole.error(`Error enabling graceful-fs: ${toErrorMessage(error)}`);\n\t}\n})();\n\nexport class DiskFileSystemProvider extends AbstractDiskFileSystemProvider implements\n\tIFileSystemProviderWithFileReadWriteCapability,\n\tIFileSystemProviderWithOpenReadWriteCloseCapability,\n\tIFileSystemProviderWithFileReadStreamCapability,\n\tIFileSystemProviderWithFileFolderCopyCapability,\n\tIFileSystemProviderWithFileAtomicReadCapability,\n\tIFileSystemProviderWithFileCloneCapability {\n\n\tconstructor(\n\t\tlogService: ILogService,\n\t\toptions?: IDiskFileSystemProviderOptions\n\t) {\n\t\tsuper(logService, options);\n\t}\n\n\t//#region File Capabilities\n\n\treadonly onDidChangeCapabilities = Event.None;\n\n\tprivate _capabilities: FileSystemProviderCapabilities | undefined;\n\tget capabilities(): FileSystemProviderCapabilities {\n\t\tif (!this._capabilities) {\n\t\t\tthis._capabilities =\n\t\t\t\tFileSystemProviderCapabilities.FileReadWrite |\n\t\t\t\tFileSystemProviderCapabilities.FileOpenReadWriteClose |\n\t\t\t\tFileSystemProviderCapabilities.FileReadStream |\n\t\t\t\tFileSystemProviderCapabilities.FileFolderCopy |\n\t\t\t\tFileSystemProviderCapabilities.FileWriteUnlock |\n\t\t\t\tFileSystemProviderCapabilities.FileAtomicRead |\n\t\t\t\tFileSystemProviderCapabilities.FileClone;\n\n\t\t\tif (isLinux) {\n\t\t\t\tthis._capabilities |= FileSystemProviderCapabilities.PathCaseSensitive;\n\t\t\t}\n\t\t}\n\n\t\treturn this._capabilities;\n\t}\n\n\t//#endregion\n\n\t//#region File Metadata Resolving\n\n\tasync stat(resource: URI): Promise<IStat> {\n\t\ttry {\n\t\t\tconst { stat, symbolicLink } = await SymlinkSupport.stat(this.toFilePath(resource)); // cannot use fs.stat() here to support links properly\n\n\t\t\treturn {\n\t\t\t\ttype: this.toType(stat, symbolicLink),\n\t\t\t\tctime: stat.birthtime.getTime(), // intentionally not using ctime here, we want the creation time\n\t\t\t\tmtime: stat.mtime.getTime(),\n\t\t\t\tsize: stat.size\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync readdir(resource: URI): Promise<[string, FileType][]> {\n\t\ttry {\n\t\t\tconst children = await Promises.readdir(this.toFilePath(resource), { withFileTypes: true });\n\n\t\t\tconst result: [string, FileType][] = [];\n\t\t\tawait Promise.all(children.map(async child => {\n\t\t\t\ttry {\n\t\t\t\t\tlet type: FileType;\n\t\t\t\t\tif (child.isSymbolicLink()) {\n\t\t\t\t\t\ttype = (await this.stat(joinPath(resource, child.name))).type; // always resolve target the link points to if any\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = this.toType(child);\n\t\t\t\t\t}\n\n\t\t\t\t\tresult.push([child.name, type]);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.trace(error); // ignore errors for individual entries that can arise from permission denied\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprivate toType(entry: fs.Stats | IDirent, symbolicLink?: { dangling: boolean }): FileType {\n\n\t\t// Signal file type by checking for file / directory, except:\n\t\t// - symbolic links pointing to nonexistent files are FileType.Unknown\n\t\t// - files that are neither file nor directory are FileType.Unknown\n\t\tlet type: FileType;\n\t\tif (symbolicLink?.dangling) {\n\t\t\ttype = FileType.Unknown;\n\t\t} else if (entry.isFile()) {\n\t\t\ttype = FileType.File;\n\t\t} else if (entry.isDirectory()) {\n\t\t\ttype = FileType.Directory;\n\t\t} else {\n\t\t\ttype = FileType.Unknown;\n\t\t}\n\n\t\t// Always signal symbolic link as file type additionally\n\t\tif (symbolicLink) {\n\t\t\ttype |= FileType.SymbolicLink;\n\t\t}\n\n\t\treturn type;\n\t}\n\n\t//#endregion\n\n\t//#region File Reading/Writing\n\n\tprivate readonly resourceLocks = new ResourceMap<Barrier>(resource => extUriBiasedIgnorePathCase.getComparisonKey(resource));\n\n\tprivate async createResourceLock(resource: URI): Promise<IDisposable> {\n\t\tconst filePath = this.toFilePath(resource);\n\t\tthis.logService.trace(`[Disk FileSystemProvider]: createResourceLock() - request to acquire resource lock (${filePath})`);\n\n\t\t// Await pending locks for resource. It is possible for a new lock being\n\t\t// added right after opening, so we have to loop over locks until no lock\n\t\t// remains.\n\t\tlet existingLock: Barrier | undefined = undefined;\n\t\twhile (existingLock = this.resourceLocks.get(resource)) {\n\t\t\tthis.logService.trace(`[Disk FileSystemProvider]: createResourceLock() - waiting for resource lock to be released (${filePath})`);\n\t\t\tawait existingLock.wait();\n\t\t}\n\n\t\t// Store new\n\t\tconst newLock = new Barrier();\n\t\tthis.resourceLocks.set(resource, newLock);\n\n\t\tthis.logService.trace(`[Disk FileSystemProvider]: createResourceLock() - new resource lock created (${filePath})`);\n\n\t\treturn toDisposable(() => {\n\t\t\tthis.logService.trace(`[Disk FileSystemProvider]: createResourceLock() - resource lock dispose() (${filePath})`);\n\n\t\t\t// Delete lock if it is still ours\n\t\t\tif (this.resourceLocks.get(resource) === newLock) {\n\t\t\t\tthis.logService.trace(`[Disk FileSystemProvider]: createResourceLock() - resource lock removed from resource-lock map (${filePath})`);\n\t\t\t\tthis.resourceLocks.delete(resource);\n\t\t\t}\n\n\t\t\t// Open lock\n\t\t\tthis.logService.trace(`[Disk FileSystemProvider]: createResourceLock() - resource lock barrier open() (${filePath})`);\n\t\t\tnewLock.open();\n\t\t});\n\t}\n\n\tasync readFile(resource: URI, options?: IFileAtomicReadOptions): Promise<Uint8Array> {\n\t\tlet lock: IDisposable | undefined = undefined;\n\t\ttry {\n\t\t\tif (options?.atomic) {\n\t\t\t\tthis.logService.trace(`[Disk FileSystemProvider]: atomic read operation started (${this.toFilePath(resource)})`);\n\n\t\t\t\t// When the read should be atomic, make sure\n\t\t\t\t// to await any pending locks for the resource\n\t\t\t\t// and lock for the duration of the read.\n\t\t\t\tlock = await this.createResourceLock(resource);\n\t\t\t}\n\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\treturn await Promises.readFile(filePath);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tlock?.dispose();\n\t\t}\n\t}\n\n\treadFileStream(resource: URI, opts: IFileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array> {\n\t\tconst stream = newWriteableStream<Uint8Array>(data => VSBuffer.concat(data.map(data => VSBuffer.wrap(data))).buffer);\n\n\t\treadFileIntoStream(this, resource, stream, data => data.buffer, {\n\t\t\t...opts,\n\t\t\tbufferSize: 256 * 1024 // read into chunks of 256kb each to reduce IPC overhead\n\t\t}, token);\n\n\t\treturn stream;\n\t}\n\n\tasync writeFile(resource: URI, content: Uint8Array, opts: IFileWriteOptions): Promise<void> {\n\t\tlet handle: number | undefined = undefined;\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\t// Validate target unless { create: true, overwrite: true }\n\t\t\tif (!opts.create || !opts.overwrite) {\n\t\t\t\tconst fileExists = await Promises.exists(filePath);\n\t\t\t\tif (fileExists) {\n\t\t\t\t\tif (!opts.overwrite) {\n\t\t\t\t\t\tthrow createFileSystemProviderError(localize('fileExists', \"File already exists\"), FileSystemProviderErrorCode.FileExists);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!opts.create) {\n\t\t\t\t\t\tthrow createFileSystemProviderError(localize('fileNotExists', \"File does not exist\"), FileSystemProviderErrorCode.FileNotFound);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Open\n\t\t\thandle = await this.open(resource, { create: true, unlock: opts.unlock });\n\n\t\t\t// Write content at once\n\t\t\tawait this.write(handle, 0, content, 0, content.byteLength);\n\t\t} catch (error) {\n\t\t\tthrow await this.toFileSystemProviderWriteError(resource, error);\n\t\t} finally {\n\t\t\tif (typeof handle === 'number') {\n\t\t\t\tawait this.close(handle);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate readonly mapHandleToPos = new Map<number, number>();\n\tprivate readonly mapHandleToLock = new Map<number, IDisposable>();\n\n\tprivate readonly writeHandles = new Map<number, URI>();\n\n\tprivate static canFlush: boolean = true;\n\n\tstatic configureFlushOnWrite(enabled: boolean): void {\n\t\tDiskFileSystemProvider.canFlush = enabled;\n\t}\n\n\tasync open(resource: URI, opts: IFileOpenOptions): Promise<number> {\n\t\tconst filePath = this.toFilePath(resource);\n\n\t\t// Writes: guard multiple writes to the same resource\n\t\t// behind a single lock to prevent races when writing\n\t\t// from multiple places at the same time to the same file\n\t\tlet lock: IDisposable | undefined = undefined;\n\t\tif (isFileOpenForWriteOptions(opts)) {\n\t\t\tlock = await this.createResourceLock(resource);\n\t\t}\n\n\t\tlet fd: number | undefined = undefined;\n\t\ttry {\n\n\t\t\t// Determine wether to unlock the file (write only)\n\t\t\tif (isFileOpenForWriteOptions(opts) && opts.unlock) {\n\t\t\t\ttry {\n\t\t\t\t\tconst { stat } = await SymlinkSupport.stat(filePath);\n\t\t\t\t\tif (!(stat.mode & 0o200 /* File mode indicating writable by owner */)) {\n\t\t\t\t\t\tawait Promises.chmod(filePath, stat.mode | 0o200);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.trace(error); // ignore any errors here and try to just write\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Determine file flags for opening (read vs write)\n\t\t\tlet flags: string | undefined = undefined;\n\t\t\tif (isFileOpenForWriteOptions(opts)) {\n\t\t\t\tif (isWindows) {\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\t// On Windows and if the file exists, we use a different strategy of saving the file\n\t\t\t\t\t\t// by first truncating the file and then writing with r+ flag. This helps to save hidden files on Windows\n\t\t\t\t\t\t// (see https://github.com/microsoft/vscode/issues/931) and prevent removing alternate data streams\n\t\t\t\t\t\t// (see https://github.com/microsoft/vscode/issues/6363)\n\t\t\t\t\t\tawait Promises.truncate(filePath, 0);\n\n\t\t\t\t\t\t// After a successful truncate() the flag can be set to 'r+' which will not truncate.\n\t\t\t\t\t\tflags = 'r+';\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\t\t\t\tthis.logService.trace(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// We take opts.create as a hint that the file is opened for writing\n\t\t\t\t// as such we use 'w' to truncate an existing or create the\n\t\t\t\t// file otherwise. we do not allow reading.\n\t\t\t\tif (!flags) {\n\t\t\t\t\tflags = 'w';\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Otherwise we assume the file is opened for reading\n\t\t\t\t// as such we use 'r' to neither truncate, nor create\n\t\t\t\t// the file.\n\t\t\t\tflags = 'r';\n\t\t\t}\n\n\t\t\t// Finally open handle to file path\n\t\t\tfd = await Promises.open(filePath, flags);\n\n\t\t} catch (error) {\n\n\t\t\t// Release lock because we have no valid handle\n\t\t\t// if we did open a lock during this operation\n\t\t\tlock?.dispose();\n\n\t\t\t// Rethrow as file system provider error\n\t\t\tif (isFileOpenForWriteOptions(opts)) {\n\t\t\t\tthrow await this.toFileSystemProviderWriteError(resource, error);\n\t\t\t} else {\n\t\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t\t}\n\t\t}\n\n\t\t// Remember this handle to track file position of the handle\n\t\t// we init the position to 0 since the file descriptor was\n\t\t// just created and the position was not moved so far (see\n\t\t// also http://man7.org/linux/man-pages/man2/open.2.html -\n\t\t// \"The file offset is set to the beginning of the file.\")\n\t\tthis.mapHandleToPos.set(fd, 0);\n\n\t\t// remember that this handle was used for writing\n\t\tif (isFileOpenForWriteOptions(opts)) {\n\t\t\tthis.writeHandles.set(fd, resource);\n\t\t}\n\n\t\tif (lock) {\n\t\t\tconst previousLock = this.mapHandleToLock.get(fd);\n\n\t\t\t// Remember that this handle has an associated lock\n\t\t\tthis.logService.trace(`[Disk FileSystemProvider]: open() - storing lock for handle ${fd} (${filePath})`);\n\t\t\tthis.mapHandleToLock.set(fd, lock);\n\n\t\t\t// There is a slight chance that a resource lock for a\n\t\t\t// handle was not yet disposed when we acquire a new\n\t\t\t// lock, so we must ensure to dispose the previous lock\n\t\t\t// before storing a new one for the same handle, other\n\t\t\t// wise we end up in a deadlock situation\n\t\t\t// https://github.com/microsoft/vscode/issues/142462\n\t\t\tif (previousLock) {\n\t\t\t\tthis.logService.trace(`[Disk FileSystemProvider]: open() - disposing a previous lock that was still stored on same handle ${fd} (${filePath})`);\n\t\t\t\tpreviousLock.dispose();\n\t\t\t}\n\t\t}\n\n\t\treturn fd;\n\t}\n\n\tasync close(fd: number): Promise<void> {\n\n\t\t// It is very important that we keep any associated lock\n\t\t// for the file handle before attempting to call `fs.close(fd)`\n\t\t// because of a possible race condition: as soon as a file\n\t\t// handle is released, the OS may assign the same handle to\n\t\t// the next `fs.open` call and as such it is possible that our\n\t\t// lock is getting overwritten\n\t\tconst lockForHandle = this.mapHandleToLock.get(fd);\n\n\t\ttry {\n\n\t\t\t// Remove this handle from map of positions\n\t\t\tthis.mapHandleToPos.delete(fd);\n\n\t\t\t// If a handle is closed that was used for writing, ensure\n\t\t\t// to flush the contents to disk if possible.\n\t\t\tif (this.writeHandles.delete(fd) && DiskFileSystemProvider.canFlush) {\n\t\t\t\ttry {\n\t\t\t\t\tawait Promises.fdatasync(fd); // https://github.com/microsoft/vscode/issues/9589\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t\t// In that case we disable flushing and log the error to our logger\n\t\t\t\t\tDiskFileSystemProvider.configureFlushOnWrite(false);\n\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn await Promises.close(fd);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tif (lockForHandle) {\n\t\t\t\tif (this.mapHandleToLock.get(fd) === lockForHandle) {\n\t\t\t\t\tthis.logService.trace(`[Disk FileSystemProvider]: close() - resource lock removed from handle-lock map ${fd}`);\n\t\t\t\t\tthis.mapHandleToLock.delete(fd); // only delete from map if this is still our lock!\n\t\t\t\t}\n\n\t\t\t\tthis.logService.trace(`[Disk FileSystemProvider]: close() - disposing lock for handle ${fd}`);\n\t\t\t\tlockForHandle.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tasync read(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\tconst normalizedPos = this.normalizePos(fd, pos);\n\n\t\tlet bytesRead: number | null = null;\n\t\ttry {\n\t\t\tbytesRead = (await Promises.read(fd, data, offset, length, normalizedPos)).bytesRead;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tthis.updatePos(fd, normalizedPos, bytesRead);\n\t\t}\n\n\t\treturn bytesRead;\n\t}\n\n\tprivate normalizePos(fd: number, pos: number): number | null {\n\n\t\t// When calling fs.read/write we try to avoid passing in the \"pos\" argument and\n\t\t// rather prefer to pass in \"null\" because this avoids an extra seek(pos)\n\t\t// call that in some cases can even fail (e.g. when opening a file over FTP -\n\t\t// see https://github.com/microsoft/vscode/issues/73884).\n\t\t//\n\t\t// as such, we compare the passed in position argument with our last known\n\t\t// position for the file descriptor and use \"null\" if they match.\n\t\tif (pos === this.mapHandleToPos.get(fd)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn pos;\n\t}\n\n\tprivate updatePos(fd: number, pos: number | null, bytesLength: number | null): void {\n\t\tconst lastKnownPos = this.mapHandleToPos.get(fd);\n\t\tif (typeof lastKnownPos === 'number') {\n\n\t\t\t// pos !== null signals that previously a position was used that is\n\t\t\t// not null. node.js documentation explains, that in this case\n\t\t\t// the internal file pointer is not moving and as such we do not move\n\t\t\t// our position pointer.\n\t\t\t//\n\t\t\t// Docs: \"If position is null, data will be read from the current file position,\n\t\t\t// and the file position will be updated. If position is an integer, the file position\n\t\t\t// will remain unchanged.\"\n\t\t\tif (typeof pos === 'number') {\n\t\t\t\t// do not modify the position\n\t\t\t}\n\n\t\t\t// bytesLength = number is a signal that the read/write operation was\n\t\t\t// successful and as such we need to advance the position in the Map\n\t\t\t//\n\t\t\t// Docs (http://man7.org/linux/man-pages/man2/read.2.html):\n\t\t\t// \"On files that support seeking, the read operation commences at the\n\t\t\t// file offset, and the file offset is incremented by the number of\n\t\t\t// bytes read.\"\n\t\t\t//\n\t\t\t// Docs (http://man7.org/linux/man-pages/man2/write.2.html):\n\t\t\t// \"For a seekable file (i.e., one to which lseek(2) may be applied, for\n\t\t\t// example, a regular file) writing takes place at the file offset, and\n\t\t\t// the file offset is incremented by the number of bytes actually\n\t\t\t// written.\"\n\t\t\telse if (typeof bytesLength === 'number') {\n\t\t\t\tthis.mapHandleToPos.set(fd, lastKnownPos + bytesLength);\n\t\t\t}\n\n\t\t\t// bytesLength = null signals an error in the read/write operation\n\t\t\t// and as such we drop the handle from the Map because the position\n\t\t\t// is unspecificed at this point.\n\t\t\telse {\n\t\t\t\tthis.mapHandleToPos.delete(fd);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync write(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\n\t\t// We know at this point that the file to write to is truncated and thus empty\n\t\t// if the write now fails, the file remains empty. as such we really try hard\n\t\t// to ensure the write succeeds by retrying up to three times.\n\t\treturn retry(() => this.doWrite(fd, pos, data, offset, length), 100 /* ms delay */, 3 /* retries */);\n\t}\n\n\tprivate async doWrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\tconst normalizedPos = this.normalizePos(fd, pos);\n\n\t\tlet bytesWritten: number | null = null;\n\t\ttry {\n\t\t\tbytesWritten = (await Promises.write(fd, data, offset, length, normalizedPos)).bytesWritten;\n\t\t} catch (error) {\n\t\t\tthrow await this.toFileSystemProviderWriteError(this.writeHandles.get(fd), error);\n\t\t} finally {\n\t\t\tthis.updatePos(fd, normalizedPos, bytesWritten);\n\t\t}\n\n\t\treturn bytesWritten;\n\t}\n\n\t//#endregion\n\n\t//#region Move/Copy/Delete/Create Folder\n\n\tasync mkdir(resource: URI): Promise<void> {\n\t\ttry {\n\t\t\tawait Promises.mkdir(this.toFilePath(resource));\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync delete(resource: URI, opts: IFileDeleteOptions): Promise<void> {\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\tif (opts.recursive) {\n\t\t\t\tawait Promises.rm(filePath, RimRafMode.MOVE);\n\t\t\t} else {\n\t\t\t\tawait Promises.unlink(filePath);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync rename(from: URI, to: URI, opts: IFileOverwriteOptions): Promise<void> {\n\t\tconst fromFilePath = this.toFilePath(from);\n\t\tconst toFilePath = this.toFilePath(to);\n\n\t\tif (fromFilePath === toFilePath) {\n\t\t\treturn; // simulate node.js behaviour here and do a no-op if paths match\n\t\t}\n\n\t\ttry {\n\n\t\t\t// Ensure target does not exist\n\t\t\tawait this.validateTargetDeleted(from, to, 'move', opts.overwrite);\n\n\t\t\t// Move\n\t\t\tawait Promises.move(fromFilePath, toFilePath);\n\t\t} catch (error) {\n\n\t\t\t// Rewrite some typical errors that can happen especially around symlinks\n\t\t\t// to something the user can better understand\n\t\t\tif (error.code === 'EINVAL' || error.code === 'EBUSY' || error.code === 'ENAMETOOLONG') {\n\t\t\t\terror = new Error(localize('moveError', \"Unable to move '{0}' into '{1}' ({2}).\", basename(fromFilePath), basename(dirname(toFilePath)), error.toString()));\n\t\t\t}\n\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync copy(from: URI, to: URI, opts: IFileOverwriteOptions): Promise<void> {\n\t\tconst fromFilePath = this.toFilePath(from);\n\t\tconst toFilePath = this.toFilePath(to);\n\n\t\tif (fromFilePath === toFilePath) {\n\t\t\treturn; // simulate node.js behaviour here and do a no-op if paths match\n\t\t}\n\n\t\ttry {\n\n\t\t\t// Ensure target does not exist\n\t\t\tawait this.validateTargetDeleted(from, to, 'copy', opts.overwrite);\n\n\t\t\t// Copy\n\t\t\tawait Promises.copy(fromFilePath, toFilePath, { preserveSymlinks: true });\n\t\t} catch (error) {\n\n\t\t\t// Rewrite some typical errors that can happen especially around symlinks\n\t\t\t// to something the user can better understand\n\t\t\tif (error.code === 'EINVAL' || error.code === 'EBUSY' || error.code === 'ENAMETOOLONG') {\n\t\t\t\terror = new Error(localize('copyError', \"Unable to copy '{0}' into '{1}' ({2}).\", basename(fromFilePath), basename(dirname(toFilePath)), error.toString()));\n\t\t\t}\n\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprivate async validateTargetDeleted(from: URI, to: URI, mode: 'move' | 'copy', overwrite?: boolean): Promise<void> {\n\t\tconst fromFilePath = this.toFilePath(from);\n\t\tconst toFilePath = this.toFilePath(to);\n\n\t\tlet isSameResourceWithDifferentPathCase = false;\n\t\tconst isPathCaseSensitive = !!(this.capabilities & FileSystemProviderCapabilities.PathCaseSensitive);\n\t\tif (!isPathCaseSensitive) {\n\t\t\tisSameResourceWithDifferentPathCase = isEqual(fromFilePath, toFilePath, true /* ignore case */);\n\t\t}\n\n\t\tif (isSameResourceWithDifferentPathCase && mode === 'copy') {\n\t\t\tthrow createFileSystemProviderError(localize('fileCopyErrorPathCase', \"'File cannot be copied to same path with different path case\"), FileSystemProviderErrorCode.FileExists);\n\t\t}\n\n\t\t// Handle existing target (unless this is a case change)\n\t\tif (!isSameResourceWithDifferentPathCase && await Promises.exists(toFilePath)) {\n\t\t\tif (!overwrite) {\n\t\t\t\tthrow createFileSystemProviderError(localize('fileCopyErrorExists', \"File at target already exists\"), FileSystemProviderErrorCode.FileExists);\n\t\t\t}\n\n\t\t\t// Delete target\n\t\t\tawait this.delete(to, { recursive: true, useTrash: false });\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region Clone File\n\n\tasync cloneFile(from: URI, to: URI): Promise<void> {\n\t\treturn this.doCloneFile(from, to, false /* optimistically assume parent folders exist */);\n\t}\n\n\tprivate async doCloneFile(from: URI, to: URI, mkdir: boolean): Promise<void> {\n\t\tconst fromFilePath = this.toFilePath(from);\n\t\tconst toFilePath = this.toFilePath(to);\n\n\t\tconst isPathCaseSensitive = !!(this.capabilities & FileSystemProviderCapabilities.PathCaseSensitive);\n\t\tif (isEqual(fromFilePath, toFilePath, !isPathCaseSensitive)) {\n\t\t\treturn; // cloning is only supported `from` and `to` are different files\n\t\t}\n\n\t\t// Implement clone by using `fs.copyFile`, however setup locks\n\t\t// for both `from` and `to` because node.js does not ensure\n\t\t// this to be an atomic operation\n\n\t\tconst locks = new DisposableStore();\n\n\t\ttry {\n\t\t\tconst [fromLock, toLock] = await Promise.all([\n\t\t\t\tthis.createResourceLock(from),\n\t\t\t\tthis.createResourceLock(to)\n\t\t\t]);\n\n\t\t\tlocks.add(fromLock);\n\t\t\tlocks.add(toLock);\n\n\t\t\tif (mkdir) {\n\t\t\t\tawait Promises.mkdir(dirname(toFilePath), { recursive: true });\n\t\t\t}\n\n\t\t\tawait Promises.copyFile(fromFilePath, toFilePath);\n\t\t} catch (error) {\n\t\t\tif (error.code === 'ENOENT' && !mkdir) {\n\t\t\t\treturn this.doCloneFile(from, to, true);\n\t\t\t}\n\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tlocks.dispose();\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region File Watching\n\n\tprotected createUniversalWatcher(\n\t\tonChange: (changes: IDiskFileChange[]) => void,\n\t\tonLogMessage: (msg: ILogMessage) => void,\n\t\tverboseLogging: boolean\n\t): AbstractUniversalWatcherClient {\n\t\treturn new UniversalWatcherClient(changes => onChange(changes), msg => onLogMessage(msg), verboseLogging);\n\t}\n\n\tprotected createNonRecursiveWatcher(\n\t\tonChange: (changes: IDiskFileChange[]) => void,\n\t\tonLogMessage: (msg: ILogMessage) => void,\n\t\tverboseLogging: boolean\n\t): AbstractNonRecursiveWatcherClient {\n\t\treturn new NodeJSWatcherClient(changes => onChange(changes), msg => onLogMessage(msg), verboseLogging);\n\t}\n\n\t//#endregion\n\n\t//#region Helpers\n\n\tprivate toFileSystemProviderError(error: NodeJS.ErrnoException): FileSystemProviderError {\n\t\tif (error instanceof FileSystemProviderError) {\n\t\t\treturn error; // avoid double conversion\n\t\t}\n\n\t\tlet code: FileSystemProviderErrorCode;\n\t\tswitch (error.code) {\n\t\t\tcase 'ENOENT':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileNotFound;\n\t\t\t\tbreak;\n\t\t\tcase 'EISDIR':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileIsADirectory;\n\t\t\t\tbreak;\n\t\t\tcase 'ENOTDIR':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileNotADirectory;\n\t\t\t\tbreak;\n\t\t\tcase 'EEXIST':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileExists;\n\t\t\t\tbreak;\n\t\t\tcase 'EPERM':\n\t\t\tcase 'EACCES':\n\t\t\t\tcode = FileSystemProviderErrorCode.NoPermissions;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcode = FileSystemProviderErrorCode.Unknown;\n\t\t}\n\n\t\treturn createFileSystemProviderError(error, code);\n\t}\n\n\tprivate async toFileSystemProviderWriteError(resource: URI | undefined, error: NodeJS.ErrnoException): Promise<FileSystemProviderError> {\n\t\tlet fileSystemProviderWriteError = this.toFileSystemProviderError(error);\n\n\t\t// If the write error signals permission issues, we try\n\t\t// to read the file's mode to see if the file is write\n\t\t// locked.\n\t\tif (resource && fileSystemProviderWriteError.code === FileSystemProviderErrorCode.NoPermissions) {\n\t\t\ttry {\n\t\t\t\tconst { stat } = await SymlinkSupport.stat(this.toFilePath(resource));\n\t\t\t\tif (!(stat.mode & 0o200 /* File mode indicating writable by owner */)) {\n\t\t\t\t\tfileSystemProviderWriteError = createFileSystemProviderError(error, FileSystemProviderErrorCode.FileWriteLocked);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.trace(error); // ignore - return original error\n\t\t\t}\n\t\t}\n\n\t\treturn fileSystemProviderWriteError;\n\t}\n\n\t//#endregion\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { DiskFileSystemProvider } from 'vs/platform/files/node/diskFileSystemProvider';\nimport { Disposable, dispose, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IURITransformer } from 'vs/base/common/uriIpc';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { ReadableStreamEventPayload, listenStream } from 'vs/base/common/stream';\nimport { IStat, IFileReadStreamOptions, IFileWriteOptions, IFileOpenOptions, IFileDeleteOptions, IFileOverwriteOptions, IFileChange, IWatchOptions, FileType, IFileAtomicReadOptions } from 'vs/platform/files/common/files';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { IRecursiveWatcherOptions } from 'vs/platform/files/common/watcher';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\n\nexport interface ISessionFileWatcher extends IDisposable {\n\twatch(req: number, resource: URI, opts: IWatchOptions): IDisposable;\n}\n\n/**\n * A server implementation for a IPC based file system provider client.\n */\nexport abstract class AbstractDiskFileSystemProviderChannel<T> extends Disposable implements IServerChannel<T> {\n\n\tconstructor(\n\t\tprotected readonly provider: DiskFileSystemProvider,\n\t\tprotected readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t}\n\n\tcall(ctx: T, command: string, arg?: any): Promise<any> {\n\t\tconst uriTransformer = this.getUriTransformer(ctx);\n\n\t\tswitch (command) {\n\t\t\tcase 'stat': return this.stat(uriTransformer, arg[0]);\n\t\t\tcase 'readdir': return this.readdir(uriTransformer, arg[0]);\n\t\t\tcase 'open': return this.open(uriTransformer, arg[0], arg[1]);\n\t\t\tcase 'close': return this.close(arg[0]);\n\t\t\tcase 'read': return this.read(arg[0], arg[1], arg[2]);\n\t\t\tcase 'readFile': return this.readFile(uriTransformer, arg[0], arg[1]);\n\t\t\tcase 'write': return this.write(arg[0], arg[1], arg[2], arg[3], arg[4]);\n\t\t\tcase 'writeFile': return this.writeFile(uriTransformer, arg[0], arg[1], arg[2]);\n\t\t\tcase 'rename': return this.rename(uriTransformer, arg[0], arg[1], arg[2]);\n\t\t\tcase 'copy': return this.copy(uriTransformer, arg[0], arg[1], arg[2]);\n\t\t\tcase 'cloneFile': return this.cloneFile(uriTransformer, arg[0], arg[1]);\n\t\t\tcase 'mkdir': return this.mkdir(uriTransformer, arg[0]);\n\t\t\tcase 'delete': return this.delete(uriTransformer, arg[0], arg[1]);\n\t\t\tcase 'watch': return this.watch(uriTransformer, arg[0], arg[1], arg[2], arg[3]);\n\t\t\tcase 'unwatch': return this.unwatch(arg[0], arg[1]);\n\t\t}\n\n\t\tthrow new Error(`IPC Command ${command} not found`);\n\t}\n\n\tlisten(ctx: T, event: string, arg: any): Event<any> {\n\t\tconst uriTransformer = this.getUriTransformer(ctx);\n\n\t\tswitch (event) {\n\t\t\tcase 'fileChange': return this.onFileChange(uriTransformer, arg[0]);\n\t\t\tcase 'readFileStream': return this.onReadFileStream(uriTransformer, arg[0], arg[1]);\n\t\t}\n\n\t\tthrow new Error(`Unknown event ${event}`);\n\t}\n\n\tprotected abstract getUriTransformer(ctx: T): IURITransformer;\n\n\tprotected abstract transformIncoming(uriTransformer: IURITransformer, _resource: UriComponents, supportVSCodeResource?: boolean): URI;\n\n\t//#region File Metadata Resolving\n\n\tprivate stat(uriTransformer: IURITransformer, _resource: UriComponents): Promise<IStat> {\n\t\tconst resource = this.transformIncoming(uriTransformer, _resource, true);\n\n\t\treturn this.provider.stat(resource);\n\t}\n\n\tprivate readdir(uriTransformer: IURITransformer, _resource: UriComponents): Promise<[string, FileType][]> {\n\t\tconst resource = this.transformIncoming(uriTransformer, _resource);\n\n\t\treturn this.provider.readdir(resource);\n\t}\n\n\t//#endregion\n\n\t//#region File Reading/Writing\n\n\tprivate async readFile(uriTransformer: IURITransformer, _resource: UriComponents, opts?: IFileAtomicReadOptions): Promise<VSBuffer> {\n\t\tconst resource = this.transformIncoming(uriTransformer, _resource, true);\n\t\tconst buffer = await this.provider.readFile(resource, opts);\n\n\t\treturn VSBuffer.wrap(buffer);\n\t}\n\n\tprivate onReadFileStream(uriTransformer: IURITransformer, _resource: URI, opts: IFileReadStreamOptions): Event<ReadableStreamEventPayload<VSBuffer>> {\n\t\tconst resource = this.transformIncoming(uriTransformer, _resource, true);\n\t\tconst cts = new CancellationTokenSource();\n\n\t\tconst emitter = new Emitter<ReadableStreamEventPayload<VSBuffer>>({\n\t\t\tonLastListenerRemove: () => {\n\n\t\t\t\t// Ensure to cancel the read operation when there is no more\n\t\t\t\t// listener on the other side to prevent unneeded work.\n\t\t\t\tcts.cancel();\n\t\t\t}\n\t\t});\n\n\t\tconst fileStream = this.provider.readFileStream(resource, opts, cts.token);\n\t\tlistenStream(fileStream, {\n\t\t\tonData: chunk => emitter.fire(VSBuffer.wrap(chunk)),\n\t\t\tonError: error => emitter.fire(error),\n\t\t\tonEnd: () => {\n\n\t\t\t\t// Forward event\n\t\t\t\temitter.fire('end');\n\n\t\t\t\t// Cleanup\n\t\t\t\temitter.dispose();\n\t\t\t\tcts.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate writeFile(uriTransformer: IURITransformer, _resource: UriComponents, content: VSBuffer, opts: IFileWriteOptions): Promise<void> {\n\t\tconst resource = this.transformIncoming(uriTransformer, _resource);\n\n\t\treturn this.provider.writeFile(resource, content.buffer, opts);\n\t}\n\n\tprivate open(uriTransformer: IURITransformer, _resource: UriComponents, opts: IFileOpenOptions): Promise<number> {\n\t\tconst resource = this.transformIncoming(uriTransformer, _resource, true);\n\n\t\treturn this.provider.open(resource, opts);\n\t}\n\n\tprivate close(fd: number): Promise<void> {\n\t\treturn this.provider.close(fd);\n\t}\n\n\tprivate async read(fd: number, pos: number, length: number): Promise<[VSBuffer, number]> {\n\t\tconst buffer = VSBuffer.alloc(length);\n\t\tconst bufferOffset = 0; // offset is 0 because we create a buffer to read into for each call\n\t\tconst bytesRead = await this.provider.read(fd, pos, buffer.buffer, bufferOffset, length);\n\n\t\treturn [buffer, bytesRead];\n\t}\n\n\tprivate write(fd: number, pos: number, data: VSBuffer, offset: number, length: number): Promise<number> {\n\t\treturn this.provider.write(fd, pos, data.buffer, offset, length);\n\t}\n\n\t//#endregion\n\n\t//#region Move/Copy/Delete/Create Folder\n\n\tprivate mkdir(uriTransformer: IURITransformer, _resource: UriComponents): Promise<void> {\n\t\tconst resource = this.transformIncoming(uriTransformer, _resource);\n\n\t\treturn this.provider.mkdir(resource);\n\t}\n\n\tprotected delete(uriTransformer: IURITransformer, _resource: UriComponents, opts: IFileDeleteOptions): Promise<void> {\n\t\tconst resource = this.transformIncoming(uriTransformer, _resource);\n\n\t\treturn this.provider.delete(resource, opts);\n\t}\n\n\tprivate rename(uriTransformer: IURITransformer, _source: UriComponents, _target: UriComponents, opts: IFileOverwriteOptions): Promise<void> {\n\t\tconst source = this.transformIncoming(uriTransformer, _source);\n\t\tconst target = this.transformIncoming(uriTransformer, _target);\n\n\t\treturn this.provider.rename(source, target, opts);\n\t}\n\n\tprivate copy(uriTransformer: IURITransformer, _source: UriComponents, _target: UriComponents, opts: IFileOverwriteOptions): Promise<void> {\n\t\tconst source = this.transformIncoming(uriTransformer, _source);\n\t\tconst target = this.transformIncoming(uriTransformer, _target);\n\n\t\treturn this.provider.copy(source, target, opts);\n\t}\n\n\t//#endregion\n\n\t//#region Clone File\n\n\tprivate cloneFile(uriTransformer: IURITransformer, _source: UriComponents, _target: UriComponents): Promise<void> {\n\t\tconst source = this.transformIncoming(uriTransformer, _source);\n\t\tconst target = this.transformIncoming(uriTransformer, _target);\n\n\t\treturn this.provider.cloneFile(source, target);\n\t}\n\n\t//#endregion\n\n\t//#region File Watching\n\n\tprivate readonly sessionToWatcher = new Map<string /* session ID */, ISessionFileWatcher>();\n\tprivate readonly watchRequests = new Map<string /* session ID + request ID */, IDisposable>();\n\n\tprivate onFileChange(uriTransformer: IURITransformer, sessionId: string): Event<IFileChange[] | string> {\n\n\t\t// We want a specific emitter for the given session so that events\n\t\t// from the one session do not end up on the other session. As such\n\t\t// we create a `SessionFileWatcher` and a `Emitter` for that session.\n\n\t\tconst emitter = new Emitter<IFileChange[] | string>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tthis.sessionToWatcher.set(sessionId, this.createSessionFileWatcher(uriTransformer, emitter));\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tdispose(this.sessionToWatcher.get(sessionId));\n\t\t\t\tthis.sessionToWatcher.delete(sessionId);\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate async watch(uriTransformer: IURITransformer, sessionId: string, req: number, _resource: UriComponents, opts: IWatchOptions): Promise<void> {\n\t\tconst watcher = this.sessionToWatcher.get(sessionId);\n\t\tif (watcher) {\n\t\t\tconst resource = this.transformIncoming(uriTransformer, _resource);\n\t\t\tconst disposable = watcher.watch(req, resource, opts);\n\t\t\tthis.watchRequests.set(sessionId + req, disposable);\n\t\t}\n\t}\n\n\tprivate async unwatch(sessionId: string, req: number): Promise<void> {\n\t\tconst id = sessionId + req;\n\t\tconst disposable = this.watchRequests.get(id);\n\t\tif (disposable) {\n\t\t\tdispose(disposable);\n\t\t\tthis.watchRequests.delete(id);\n\t\t}\n\t}\n\n\tprotected abstract createSessionFileWatcher(uriTransformer: IURITransformer, emitter: Emitter<IFileChange[] | string>): ISessionFileWatcher;\n\n\t//#endregion\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tfor (const [, disposable] of this.watchRequests) {\n\t\t\tdisposable.dispose();\n\t\t}\n\t\tthis.watchRequests.clear();\n\n\t\tfor (const [, disposable] of this.sessionToWatcher) {\n\t\t\tdisposable.dispose();\n\t\t}\n\t\tthis.sessionToWatcher.clear();\n\t}\n}\n\nexport abstract class AbstractSessionFileWatcher extends Disposable implements ISessionFileWatcher {\n\n\tprivate readonly watcherRequests = new Map<number, IDisposable>();\n\n\t// To ensure we use one file watcher per session, we keep a\n\t// disk file system provider instantiated for this session.\n\t// The provider is cheap and only stateful when file watching\n\t// starts.\n\t//\n\t// This is important because we want to ensure that we only\n\t// forward events from the watched paths for this session and\n\t// not other clients that asked to watch other paths.\n\tprivate readonly fileWatcher = this._register(new DiskFileSystemProvider(this.logService, { watcher: { recursive: this.getRecursiveWatcherOptions(this.environmentService) } }));\n\n\tconstructor(\n\t\tprivate readonly uriTransformer: IURITransformer,\n\t\tsessionEmitter: Emitter<IFileChange[] | string>,\n\t\tprivate readonly logService: ILogService,\n\t\tprivate readonly environmentService: IEnvironmentService\n\t) {\n\t\tsuper();\n\n\t\tthis.registerListeners(sessionEmitter);\n\t}\n\n\tprivate registerListeners(sessionEmitter: Emitter<IFileChange[] | string>): void {\n\t\tconst localChangeEmitter = this._register(new Emitter<readonly IFileChange[]>());\n\n\t\tthis._register(localChangeEmitter.event((events) => {\n\t\t\tsessionEmitter.fire(\n\t\t\t\tevents.map(e => ({\n\t\t\t\t\tresource: this.uriTransformer.transformOutgoingURI(e.resource),\n\t\t\t\t\ttype: e.type\n\t\t\t\t}))\n\t\t\t);\n\t\t}));\n\n\t\tthis._register(this.fileWatcher.onDidChangeFile(events => localChangeEmitter.fire(events)));\n\t\tthis._register(this.fileWatcher.onDidWatchError(error => sessionEmitter.fire(error)));\n\t}\n\n\tprotected getRecursiveWatcherOptions(environmentService: IEnvironmentService): IRecursiveWatcherOptions | undefined {\n\t\treturn undefined; // subclasses can override\n\t}\n\n\tprotected getExtraExcludes(environmentService: IEnvironmentService): string[] | undefined {\n\t\treturn undefined; // subclasses can override\n\t}\n\n\twatch(req: number, resource: URI, opts: IWatchOptions): IDisposable {\n\t\tconst extraExcludes = this.getExtraExcludes(this.environmentService);\n\t\tif (Array.isArray(extraExcludes)) {\n\t\t\topts.excludes = [...opts.excludes, ...extraExcludes];\n\t\t}\n\n\t\tthis.watcherRequests.set(req, this.fileWatcher.watch(resource, opts));\n\n\t\treturn toDisposable(() => {\n\t\t\tdispose(this.watcherRequests.get(req));\n\t\t\tthis.watcherRequests.delete(req);\n\t\t});\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tfor (const [, disposable] of this.watcherRequests) {\n\t\t\tdisposable.dispose();\n\t\t}\n\t\tthis.watcherRequests.clear();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { URI } from 'vs/base/common/uri';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { AbstractLoggerService, AbstractMessageLogger, AdapterLogger, ILogger, ILoggerOptions, ILoggerService, ILogService, log, LogLevel, LogService } from 'vs/platform/log/common/log';\n\nexport class LogLevelChannel implements IServerChannel {\n\n\tonDidChangeLogLevel: Event<LogLevel>;\n\n\tconstructor(private service: ILogService) {\n\t\tthis.onDidChangeLogLevel = Event.buffer(service.onDidChangeLogLevel, true);\n\t}\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'onDidChangeLogLevel': return this.onDidChangeLogLevel;\n\t\t}\n\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tasync call(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'setLevel': return this.service.setLevel(arg);\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n\n}\n\nexport class LogLevelChannelClient {\n\n\tconstructor(private channel: IChannel) { }\n\n\tget onDidChangeLogLevel(): Event<LogLevel> {\n\t\treturn this.channel.listen('onDidChangeLogLevel');\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tLogLevelChannelClient.setLevel(this.channel, level);\n\t}\n\n\tpublic static setLevel(channel: IChannel, level: LogLevel): Promise<void> {\n\t\treturn channel.call('setLevel', level);\n\t}\n\n}\n\nexport class LoggerChannel implements IServerChannel {\n\n\tprivate readonly loggers = new Map<string, ILogger>();\n\n\tconstructor(private readonly loggerService: ILoggerService) { }\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tasync call(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'createLogger': this.createLogger(URI.revive(arg[0]), arg[1]); return;\n\t\t\tcase 'log': return this.log(URI.revive(arg[0]), arg[1]);\n\t\t\tcase 'consoleLog': return this.consoleLog(arg[0], arg[1]);\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n\n\tprivate createLogger(file: URI, options: ILoggerOptions): void {\n\t\tthis.loggers.set(file.toString(), this.loggerService.createLogger(file, options));\n\t}\n\n\tprivate consoleLog(level: LogLevel, args: any[]): void {\n\t\tlet consoleFn = console.log;\n\n\t\tswitch (level) {\n\t\t\tcase LogLevel.Error:\n\t\t\t\tconsoleFn = console.error;\n\t\t\t\tbreak;\n\t\t\tcase LogLevel.Warning:\n\t\t\t\tconsoleFn = console.warn;\n\t\t\t\tbreak;\n\t\t\tcase LogLevel.Info:\n\t\t\t\tconsoleFn = console.info;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconsoleFn.call(console, ...args);\n\t}\n\n\tprivate log(file: URI, messages: [LogLevel, string][]): void {\n\t\tconst logger = this.loggers.get(file.toString());\n\t\tif (!logger) {\n\t\t\tthrow new Error('Create the logger before logging');\n\t\t}\n\t\tfor (const [level, message] of messages) {\n\t\t\tlog(logger, level, message);\n\t\t}\n\t}\n}\n\nexport class LoggerChannelClient extends AbstractLoggerService implements ILoggerService {\n\n\tconstructor(logLevel: LogLevel, onDidChangeLogLevel: Event<LogLevel>, private readonly channel: IChannel) {\n\t\tsuper(logLevel, onDidChangeLogLevel);\n\t}\n\n\tcreateConsoleMainLogger(): ILogger {\n\t\treturn new AdapterLogger({\n\t\t\tlog: (level: LogLevel, args: any[]) => {\n\t\t\t\tthis.channel.call('consoleLog', [level, args]);\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected doCreateLogger(file: URI, logLevel: LogLevel, options?: ILoggerOptions): ILogger {\n\t\treturn new Logger(this.channel, file, logLevel, options);\n\t}\n\n}\n\nclass Logger extends AbstractMessageLogger {\n\n\tprivate isLoggerCreated: boolean = false;\n\tprivate buffer: [LogLevel, string][] = [];\n\n\tconstructor(\n\t\tprivate readonly channel: IChannel,\n\t\tprivate readonly file: URI,\n\t\tlogLevel: LogLevel,\n\t\tloggerOptions?: ILoggerOptions,\n\t) {\n\t\tsuper(loggerOptions?.always);\n\t\tthis.setLevel(logLevel);\n\t\tthis.channel.call('createLogger', [file, loggerOptions])\n\t\t\t.then(() => {\n\t\t\t\tthis.doLog(this.buffer);\n\t\t\t\tthis.isLoggerCreated = true;\n\t\t\t});\n\t}\n\n\tprotected log(level: LogLevel, message: string) {\n\t\tconst messages: [LogLevel, string][] = [[level, message]];\n\t\tif (this.isLoggerCreated) {\n\t\t\tthis.doLog(messages);\n\t\t} else {\n\t\t\tthis.buffer.push(...messages);\n\t\t}\n\t}\n\n\tprivate doLog(messages: [LogLevel, string][]) {\n\t\tthis.channel.call('log', [this.file, messages]);\n\t}\n}\n\nexport class FollowerLogService extends LogService implements ILogService {\n\n\tconstructor(private parent: LogLevelChannelClient, logService: ILogService) {\n\t\tsuper(logService);\n\t\tthis._register(parent.onDidChangeLogLevel(level => logService.setLevel(level)));\n\t}\n\n\toverride setLevel(level: LogLevel): void {\n\t\tsuper.setLevel(level);\n\n\t\tthis.parent.setLevel(level);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as spdlog from 'spdlog';\nimport { ByteSize } from 'vs/platform/files/common/files';\nimport { AbstractMessageLogger, ILogger, LogLevel } from 'vs/platform/log/common/log';\n\nasync function createSpdLogLogger(name: string, logfilePath: string, filesize: number, filecount: number, donotUseFormatters: boolean): Promise<spdlog.Logger | null> {\n\t// Do not crash if spdlog cannot be loaded\n\ttry {\n\t\tconst _spdlog = await import('spdlog');\n\t\t_spdlog.setFlushOn(LogLevel.Trace);\n\t\tconst logger = await _spdlog.createAsyncRotatingLogger(name, logfilePath, filesize, filecount);\n\t\tif (donotUseFormatters) {\n\t\t\tlogger.clearFormatters();\n\t\t}\n\t\treturn logger;\n\t} catch (e) {\n\t\tconsole.error(e);\n\t}\n\treturn null;\n}\n\ninterface ILog {\n\tlevel: LogLevel;\n\tmessage: string;\n}\n\nfunction log(logger: spdlog.Logger, level: LogLevel, message: string): void {\n\tswitch (level) {\n\t\tcase LogLevel.Trace: logger.trace(message); break;\n\t\tcase LogLevel.Debug: logger.debug(message); break;\n\t\tcase LogLevel.Info: logger.info(message); break;\n\t\tcase LogLevel.Warning: logger.warn(message); break;\n\t\tcase LogLevel.Error: logger.error(message); break;\n\t\tcase LogLevel.Critical: logger.critical(message); break;\n\t\tdefault: throw new Error('Invalid log level');\n\t}\n}\n\nexport class SpdLogLogger extends AbstractMessageLogger implements ILogger {\n\n\tprivate buffer: ILog[] = [];\n\tprivate readonly _loggerCreationPromise: Promise<void>;\n\tprivate _logger: spdlog.Logger | undefined;\n\n\tconstructor(\n\t\tname: string,\n\t\tfilepath: string,\n\t\trotating: boolean,\n\t\tdonotUseFormatters: boolean,\n\t\tlevel: LogLevel,\n\t) {\n\t\tsuper();\n\t\tthis.setLevel(level);\n\t\tthis._loggerCreationPromise = this._createSpdLogLogger(name, filepath, rotating, donotUseFormatters);\n\t\tthis._register(this.onDidChangeLogLevel(level => {\n\t\t\tthis._logger?.setLevel(level);\n\t\t}));\n\t}\n\n\tprivate async _createSpdLogLogger(name: string, filepath: string, rotating: boolean, donotUseFormatters: boolean): Promise<void> {\n\t\tconst filecount = rotating ? 6 : 1;\n\t\tconst filesize = (30 / filecount) * ByteSize.MB;\n\t\tconst logger = await createSpdLogLogger(name, filepath, filesize, filecount, donotUseFormatters);\n\t\tif (logger) {\n\t\t\tthis._logger = logger;\n\t\t\tthis._logger.setLevel(this.getLevel());\n\t\t\tfor (const { level, message } of this.buffer) {\n\t\t\t\tlog(this._logger, level, message);\n\t\t\t}\n\t\t\tthis.buffer = [];\n\t\t}\n\t}\n\n\tprotected log(level: LogLevel, message: string): void {\n\t\tif (this._logger) {\n\t\t\tlog(this._logger, level, message);\n\t\t} else if (this.getLevel() <= level) {\n\t\t\tthis.buffer.push({ level, message });\n\t\t}\n\t}\n\n\toverride flush(): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.flush();\n\t\t} else {\n\t\t\tthis._loggerCreationPromise.then(() => this.flush());\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tif (this._logger) {\n\t\t\tthis.disposeLogger();\n\t\t} else {\n\t\t\tthis._loggerCreationPromise.then(() => this.disposeLogger());\n\t\t}\n\t}\n\n\tprivate disposeLogger(): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.drop();\n\t\t\tthis._logger = undefined;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport Severity from 'vs/base/common/severity';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport interface IMarkerService {\n\treadonly _serviceBrand: undefined;\n\n\tgetStatistics(): MarkerStatistics;\n\n\tchangeOne(owner: string, resource: URI, markers: IMarkerData[]): void;\n\n\tchangeAll(owner: string, data: IResourceMarker[]): void;\n\n\tremove(owner: string, resources: URI[]): void;\n\n\tread(filter?: { owner?: string; resource?: URI; severities?: number; take?: number }): IMarker[];\n\n\treadonly onMarkerChanged: Event<readonly URI[]>;\n}\n\n/**\n *\n */\nexport interface IRelatedInformation {\n\tresource: URI;\n\tmessage: string;\n\tstartLineNumber: number;\n\tstartColumn: number;\n\tendLineNumber: number;\n\tendColumn: number;\n}\n\nexport const enum MarkerTag {\n\tUnnecessary = 1,\n\tDeprecated = 2\n}\n\nexport enum MarkerSeverity {\n\tHint = 1,\n\tInfo = 2,\n\tWarning = 4,\n\tError = 8,\n}\n\nexport namespace MarkerSeverity {\n\n\texport function compare(a: MarkerSeverity, b: MarkerSeverity): number {\n\t\treturn b - a;\n\t}\n\n\tconst _displayStrings: { [value: number]: string } = Object.create(null);\n\t_displayStrings[MarkerSeverity.Error] = localize('sev.error', \"Error\");\n\t_displayStrings[MarkerSeverity.Warning] = localize('sev.warning', \"Warning\");\n\t_displayStrings[MarkerSeverity.Info] = localize('sev.info', \"Info\");\n\n\texport function toString(a: MarkerSeverity): string {\n\t\treturn _displayStrings[a] || '';\n\t}\n\n\texport function fromSeverity(severity: Severity): MarkerSeverity {\n\t\tswitch (severity) {\n\t\t\tcase Severity.Error: return MarkerSeverity.Error;\n\t\t\tcase Severity.Warning: return MarkerSeverity.Warning;\n\t\t\tcase Severity.Info: return MarkerSeverity.Info;\n\t\t\tcase Severity.Ignore: return MarkerSeverity.Hint;\n\t\t}\n\t}\n\n\texport function toSeverity(severity: MarkerSeverity): Severity {\n\t\tswitch (severity) {\n\t\t\tcase MarkerSeverity.Error: return Severity.Error;\n\t\t\tcase MarkerSeverity.Warning: return Severity.Warning;\n\t\t\tcase MarkerSeverity.Info: return Severity.Info;\n\t\t\tcase MarkerSeverity.Hint: return Severity.Ignore;\n\t\t}\n\t}\n}\n\n/**\n * A structure defining a problem/warning/etc.\n */\nexport interface IMarkerData {\n\tcode?: string | { value: string; target: URI };\n\tseverity: MarkerSeverity;\n\tmessage: string;\n\tsource?: string;\n\tstartLineNumber: number;\n\tstartColumn: number;\n\tendLineNumber: number;\n\tendColumn: number;\n\trelatedInformation?: IRelatedInformation[];\n\ttags?: MarkerTag[];\n}\n\nexport interface IResourceMarker {\n\tresource: URI;\n\tmarker: IMarkerData;\n}\n\nexport interface IMarker {\n\towner: string;\n\tresource: URI;\n\tseverity: MarkerSeverity;\n\tcode?: string | { value: string; target: URI };\n\tmessage: string;\n\tsource?: string;\n\tstartLineNumber: number;\n\tstartColumn: number;\n\tendLineNumber: number;\n\tendColumn: number;\n\trelatedInformation?: IRelatedInformation[];\n\ttags?: MarkerTag[];\n}\n\nexport interface MarkerStatistics {\n\terrors: number;\n\twarnings: number;\n\tinfos: number;\n\tunknowns: number;\n}\n\nexport namespace IMarkerData {\n\tconst emptyString = '';\n\texport function makeKey(markerData: IMarkerData): string {\n\t\treturn makeKeyOptionalMessage(markerData, true);\n\t}\n\n\texport function makeKeyOptionalMessage(markerData: IMarkerData, useMessage: boolean): string {\n\t\tconst result: string[] = [emptyString];\n\t\tif (markerData.source) {\n\t\t\tresult.push(markerData.source.replace('¦', '\\\\¦'));\n\t\t} else {\n\t\t\tresult.push(emptyString);\n\t\t}\n\t\tif (markerData.code) {\n\t\t\tif (typeof markerData.code === 'string') {\n\t\t\t\tresult.push(markerData.code.replace('¦', '\\\\¦'));\n\t\t\t} else {\n\t\t\t\tresult.push(markerData.code.value.replace('¦', '\\\\¦'));\n\t\t\t}\n\t\t} else {\n\t\t\tresult.push(emptyString);\n\t\t}\n\t\tif (markerData.severity !== undefined && markerData.severity !== null) {\n\t\t\tresult.push(MarkerSeverity.toString(markerData.severity));\n\t\t} else {\n\t\t\tresult.push(emptyString);\n\t\t}\n\n\t\t// Modifed to not include the message as part of the marker key to work around\n\t\t// https://github.com/microsoft/vscode/issues/77475\n\t\tif (markerData.message && useMessage) {\n\t\t\tresult.push(markerData.message.replace('¦', '\\\\¦'));\n\t\t} else {\n\t\t\tresult.push(emptyString);\n\t\t}\n\t\tif (markerData.startLineNumber !== undefined && markerData.startLineNumber !== null) {\n\t\t\tresult.push(markerData.startLineNumber.toString());\n\t\t} else {\n\t\t\tresult.push(emptyString);\n\t\t}\n\t\tif (markerData.startColumn !== undefined && markerData.startColumn !== null) {\n\t\t\tresult.push(markerData.startColumn.toString());\n\t\t} else {\n\t\t\tresult.push(emptyString);\n\t\t}\n\t\tif (markerData.endLineNumber !== undefined && markerData.endLineNumber !== null) {\n\t\t\tresult.push(markerData.endLineNumber.toString());\n\t\t} else {\n\t\t\tresult.push(emptyString);\n\t\t}\n\t\tif (markerData.endColumn !== undefined && markerData.endColumn !== null) {\n\t\t\tresult.push(markerData.endColumn.toString());\n\t\t} else {\n\t\t\tresult.push(emptyString);\n\t\t}\n\t\tresult.push(emptyString);\n\t\treturn result.join('¦');\n\t}\n}\n\nexport const IMarkerService = createDecorator<IMarkerService>('markerService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Iterable } from 'vs/base/common/iterator';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport type PolicyName = string;\nexport type PolicyValue = string | number;\nexport type PolicyDefinition = { type: 'string' | 'number' };\n\nexport const IPolicyService = createDecorator<IPolicyService>('policy');\n\nexport interface IPolicyService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly onDidChange: Event<readonly PolicyName[]>;\n\tregisterPolicyDefinitions(policyDefinitions: IStringDictionary<PolicyDefinition>): Promise<IStringDictionary<PolicyValue>>;\n\tgetPolicyValue(name: PolicyName): PolicyValue | undefined;\n\tserialize(): IStringDictionary<{ definition: PolicyDefinition; value: PolicyValue }> | undefined;\n}\n\nexport abstract class AbstractPolicyService extends Disposable implements IPolicyService {\n\treadonly _serviceBrand: undefined;\n\n\tprotected policyDefinitions: IStringDictionary<PolicyDefinition> = {};\n\tprotected policies = new Map<PolicyName, PolicyValue>();\n\n\tprotected readonly _onDidChange = this._register(new Emitter<readonly PolicyName[]>());\n\treadonly onDidChange = this._onDidChange.event;\n\n\tasync registerPolicyDefinitions(policyDefinitions: IStringDictionary<PolicyDefinition>): Promise<IStringDictionary<PolicyValue>> {\n\t\tconst size = Object.keys(this.policyDefinitions).length;\n\t\tthis.policyDefinitions = { ...policyDefinitions, ...this.policyDefinitions };\n\n\t\tif (size !== Object.keys(this.policyDefinitions).length) {\n\t\t\tawait this.initializePolicies(policyDefinitions);\n\t\t}\n\n\t\treturn Iterable.reduce(this.policies.entries(), (r, [name, value]) => ({ ...r, [name]: value }), {});\n\t}\n\n\tgetPolicyValue(name: PolicyName): PolicyValue | undefined {\n\t\treturn this.policies.get(name);\n\t}\n\n\tserialize(): IStringDictionary<{ definition: PolicyDefinition; value: PolicyValue }> {\n\t\treturn Iterable.reduce<[PolicyName, PolicyDefinition], IStringDictionary<{ definition: PolicyDefinition; value: PolicyValue }>>(Object.entries(this.policyDefinitions), (r, [name, definition]) => ({ ...r, [name]: { definition, value: this.policies.get(name)! } }), {});\n\t}\n\n\tprotected abstract initializePolicies(policyDefinitions: IStringDictionary<PolicyDefinition>): Promise<void>;\n}\n\nexport class NullPolicyService implements IPolicyService {\n\treadonly _serviceBrand: undefined;\n\treadonly onDidChange = Event.None;\n\tasync registerPolicyDefinitions() { return {}; }\n\tgetPolicyValue() { return undefined; }\n\tserialize() { return undefined; }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { FileAccess } from 'vs/base/common/network';\nimport { globals } from 'vs/base/common/platform';\nimport { env } from 'vs/base/common/process';\nimport { IProductConfiguration } from 'vs/base/common/product';\nimport { dirname, joinPath } from 'vs/base/common/resources';\nimport { ISandboxConfiguration } from 'vs/base/parts/sandbox/common/sandboxTypes';\n\n/**\n * @deprecated You MUST use `IProductService` if possible.\n */\nlet product: IProductConfiguration;\n\n// Native sandbox environment\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.context !== 'undefined') {\n\tconst configuration: ISandboxConfiguration | undefined = globals.vscode.context.configuration();\n\tif (configuration) {\n\t\tproduct = configuration.product;\n\t} else {\n\t\tthrow new Error('Sandbox: unable to resolve product configuration from preload script.');\n\t}\n}\n\n// Native node.js environment\nelse if (typeof require?.__$__nodeRequire === 'function') {\n\n\t// Obtain values from product.json and package.json\n\tconst rootPath = dirname(FileAccess.asFileUri('', require));\n\n\tproduct = require.__$__nodeRequire(joinPath(rootPath, 'product.json').fsPath);\n\tconst pkg = require.__$__nodeRequire(joinPath(rootPath, 'package.json').fsPath) as { version: string };\n\n\t// Running out of sources\n\tif (env['VSCODE_DEV']) {\n\t\tObject.assign(product, {\n\t\t\tnameShort: `${product.nameShort} Dev`,\n\t\t\tnameLong: `${product.nameLong} Dev`,\n\t\t\tdataFolderName: `${product.dataFolderName}-dev`,\n\t\t\tserverDataFolderName: product.serverDataFolderName ? `${product.serverDataFolderName}-dev` : undefined\n\t\t});\n\t}\n\n\tObject.assign(product, {\n\t\tversion: pkg.version,\n\t\textensionsGallery: env.EXTENSIONS_GALLERY ? JSON.parse(env.EXTENSIONS_GALLERY) : (product.extensionsGallery || {\n\t\t\tserviceUrl: \"https://open-vsx.org/vscode/gallery\",\n\t\t\titemUrl: \"https://open-vsx.org/vscode/item\",\n\t\t\tresourceUrlTemplate: \"https://open-vsx.org/vscode/asset/{publisher}/{name}/{version}/Microsoft.VisualStudio.Code.WebResources/{path}\",\n\t\t\tcontrolUrl: \"\",\n\t\t\trecommendationsUrl: \"\",\n\t\t}),\n\t});\n}\n\n// Web environment or unknown\nelse {\n\n\t// Built time configuration (do NOT modify)\n\tproduct = { /*BUILD->INSERT_PRODUCT_CONFIGURATION*/ } as IProductConfiguration;\n\n\t// Running out of sources\n\tif (Object.keys(product).length === 0) {\n\t\tObject.assign(product, {\n\t\t\tversion: '1.67.0-dev',\n\t\t\tnameShort: 'Code - OSS Dev',\n\t\t\tnameLong: 'Code - OSS Dev',\n\t\t\tapplicationName: 'code-oss',\n\t\t\tdataFolderName: '.vscode-oss',\n\t\t\turlProtocol: 'code-oss',\n\t\t\treportIssueUrl: 'https://github.com/microsoft/vscode/issues/new',\n\t\t\tlicenseName: 'MIT',\n\t\t\tlicenseUrl: 'https://github.com/microsoft/vscode/blob/main/LICENSE.txt'\n\t\t});\n\t}\n}\n\n/**\n * @deprecated You MUST use `IProductService` if possible.\n */\nexport default product;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IProductConfiguration } from 'vs/base/common/product';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IProductService = createDecorator<IProductService>('productService');\n\nexport interface IProductService extends Readonly<IProductConfiguration> {\n\n\treadonly _serviceBrand: undefined;\n\n}\n\nexport const productSchemaId = 'vscode://schemas/vscode-product';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as Assert from 'vs/base/common/assert';\nimport * as Types from 'vs/base/common/types';\n\nexport interface IRegistry {\n\n\t/**\n\t * Adds the extension functions and properties defined by data to the\n\t * platform. The provided id must be unique.\n\t * @param id a unique identifier\n\t * @param data a contribution\n\t */\n\tadd(id: string, data: any): void;\n\n\t/**\n\t * Returns true iff there is an extension with the provided id.\n\t * @param id an extension identifier\n\t */\n\tknows(id: string): boolean;\n\n\t/**\n\t * Returns the extension functions and properties defined by the specified key or null.\n\t * @param id an extension identifier\n\t */\n\tas<T>(id: string): T;\n}\n\nclass RegistryImpl implements IRegistry {\n\n\tprivate readonly data = new Map<string, any>();\n\n\tpublic add(id: string, data: any): void {\n\t\tAssert.ok(Types.isString(id));\n\t\tAssert.ok(Types.isObject(data));\n\t\tAssert.ok(!this.data.has(id), 'There is already an extension with this id');\n\n\t\tthis.data.set(id, data);\n\t}\n\n\tpublic knows(id: string): boolean {\n\t\treturn this.data.has(id);\n\t}\n\n\tpublic as(id: string): any {\n\t\treturn this.data.get(id) || null;\n\t}\n}\n\nexport const Registry: IRegistry = new RegistryImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport * as platform from 'vs/platform/registry/common/platform';\n\nexport const Extensions = {\n\tJSONContribution: 'base.contributions.json'\n};\n\nexport interface ISchemaContributions {\n\tschemas: { [id: string]: IJSONSchema };\n}\n\nexport interface IJSONContributionRegistry {\n\n\treadonly onDidChangeSchema: Event<string>;\n\n\t/**\n\t * Register a schema to the registry.\n\t */\n\tregisterSchema(uri: string, unresolvedSchemaContent: IJSONSchema): void;\n\n\n\t/**\n\t * Notifies all listeners that the content of the given schema has changed.\n\t * @param uri The id of the schema\n\t */\n\tnotifySchemaChanged(uri: string): void;\n\n\t/**\n\t * Get all schemas\n\t */\n\tgetSchemaContributions(): ISchemaContributions;\n}\n\n\n\nfunction normalizeId(id: string) {\n\tif (id.length > 0 && id.charAt(id.length - 1) === '#') {\n\t\treturn id.substring(0, id.length - 1);\n\t}\n\treturn id;\n}\n\n\n\nclass JSONContributionRegistry implements IJSONContributionRegistry {\n\n\tprivate schemasById: { [id: string]: IJSONSchema };\n\n\tprivate readonly _onDidChangeSchema = new Emitter<string>();\n\treadonly onDidChangeSchema: Event<string> = this._onDidChangeSchema.event;\n\n\tconstructor() {\n\t\tthis.schemasById = {};\n\t}\n\n\tpublic registerSchema(uri: string, unresolvedSchemaContent: IJSONSchema): void {\n\t\tthis.schemasById[normalizeId(uri)] = unresolvedSchemaContent;\n\t\tthis._onDidChangeSchema.fire(uri);\n\t}\n\n\tpublic notifySchemaChanged(uri: string): void {\n\t\tthis._onDidChangeSchema.fire(uri);\n\t}\n\n\tpublic getSchemaContributions(): ISchemaContributions {\n\t\treturn {\n\t\t\tschemas: this.schemasById,\n\t\t};\n\t}\n\n}\n\nconst jsonContributionRegistry = new JSONContributionRegistry();\nplatform.Registry.add(Extensions.JSONContribution, jsonContributionRegistry);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { distinct } from 'vs/base/common/arrays';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport * as types from 'vs/base/common/types';\nimport * as nls from 'vs/nls';\nimport { getLanguageTagSettingPlainKey } from 'vs/platform/configuration/common/configuration';\nimport { Extensions as JSONExtensions, IJSONContributionRegistry } from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport { PolicyName } from 'vs/platform/policy/common/policy';\nimport { Registry } from 'vs/platform/registry/common/platform';\n\nexport enum EditPresentationTypes {\n\tMultiline = 'multilineText',\n\tSingleline = 'singlelineText'\n}\n\nexport const Extensions = {\n\tConfiguration: 'base.contributions.configuration'\n};\n\nexport interface IConfigurationRegistry {\n\n\t/**\n\t * Register a configuration to the registry.\n\t */\n\tregisterConfiguration(configuration: IConfigurationNode): void;\n\n\t/**\n\t * Register multiple configurations to the registry.\n\t */\n\tregisterConfigurations(configurations: IConfigurationNode[], validate?: boolean): void;\n\n\t/**\n\t * Deregister multiple configurations from the registry.\n\t */\n\tderegisterConfigurations(configurations: IConfigurationNode[]): void;\n\n\t/**\n\t * update the configuration registry by\n\t * \t- registering the configurations to add\n\t * \t- dereigstering the configurations to remove\n\t */\n\tupdateConfigurations(configurations: { add: IConfigurationNode[]; remove: IConfigurationNode[] }): void;\n\n\t/**\n\t * Register multiple default configurations to the registry.\n\t */\n\tregisterDefaultConfigurations(defaultConfigurations: IConfigurationDefaults[]): void;\n\n\t/**\n\t * Deregister multiple default configurations from the registry.\n\t */\n\tderegisterDefaultConfigurations(defaultConfigurations: IConfigurationDefaults[]): void;\n\n\t/**\n\t * Return the registered configuration defaults overrides\n\t */\n\tgetConfigurationDefaultsOverrides(): Map<string, IConfigurationDefaultOverride>;\n\n\t/**\n\t * Signal that the schema of a configuration setting has changes. It is currently only supported to change enumeration values.\n\t * Property or default value changes are not allowed.\n\t */\n\tnotifyConfigurationSchemaUpdated(...configurations: IConfigurationNode[]): void;\n\n\t/**\n\t * Event that fires whenever a configuration has been\n\t * registered.\n\t */\n\treadonly onDidSchemaChange: Event<void>;\n\n\t/**\n\t * Event that fires whenever a configuration has been\n\t * registered.\n\t */\n\treadonly onDidUpdateConfiguration: Event<{ properties: string[]; defaultsOverrides?: boolean }>;\n\n\t/**\n\t * Returns all configuration nodes contributed to this registry.\n\t */\n\tgetConfigurations(): IConfigurationNode[];\n\n\t/**\n\t * Returns all configurations settings of all configuration nodes contributed to this registry.\n\t */\n\tgetConfigurationProperties(): IStringDictionary<IRegisteredConfigurationPropertySchema>;\n\n\t/**\n\t * Return all configurations by policy name\n\t */\n\tgetPolicyConfigurations(): Map<PolicyName, string>;\n\n\t/**\n\t * Returns all excluded configurations settings of all configuration nodes contributed to this registry.\n\t */\n\tgetExcludedConfigurationProperties(): IStringDictionary<IRegisteredConfigurationPropertySchema>;\n\n\t/**\n\t * Register the identifiers for editor configurations\n\t */\n\tregisterOverrideIdentifiers(identifiers: string[]): void;\n}\n\nexport const enum ConfigurationScope {\n\t/**\n\t * Application specific configuration, which can be configured only in local user settings.\n\t */\n\tAPPLICATION = 1,\n\t/**\n\t * Machine specific configuration, which can be configured only in local and remote user settings.\n\t */\n\tMACHINE,\n\t/**\n\t * Window specific configuration, which can be configured in the user or workspace settings.\n\t */\n\tWINDOW,\n\t/**\n\t * Resource specific configuration, which can be configured in the user, workspace or folder settings.\n\t */\n\tRESOURCE,\n\t/**\n\t * Resource specific configuration that can be configured in language specific settings\n\t */\n\tLANGUAGE_OVERRIDABLE,\n\t/**\n\t * Machine specific configuration that can also be configured in workspace or folder settings.\n\t */\n\tMACHINE_OVERRIDABLE,\n}\n\nexport interface IPolicy {\n\n\t/**\n\t * The policy name.\n\t */\n\treadonly name: PolicyName;\n\n\t/**\n\t * The Code version in which this policy was introduced.\n\t */\n\treadonly minimumVersion: `${number}.${number}`;\n}\n\nexport interface IConfigurationPropertySchema extends IJSONSchema {\n\n\tscope?: ConfigurationScope;\n\n\t/**\n\t * When restricted, value of this configuration will be read only from trusted sources.\n\t * For eg., If the workspace is not trusted, then the value of this configuration is not read from workspace settings file.\n\t */\n\trestricted?: boolean;\n\n\t/**\n\t * When `false` this property is excluded from the registry. Default is to include.\n\t */\n\tincluded?: boolean;\n\n\t/**\n\t * List of tags associated to the property.\n\t *  - A tag can be used for filtering\n\t *  - Use `experimental` tag for marking the setting as experimental. **Note:** Defaults of experimental settings can be changed by the running experiments.\n\t */\n\ttags?: string[];\n\n\t/**\n\t * When enabled this setting is ignored during sync and user can override this.\n\t */\n\tignoreSync?: boolean;\n\n\t/**\n\t * When enabled this setting is ignored during sync and user cannot override this.\n\t */\n\tdisallowSyncIgnore?: boolean;\n\n\t/**\n\t * Labels for enumeration items\n\t */\n\tenumItemLabels?: string[];\n\n\t/**\n\t * When specified, controls the presentation format of string settings.\n\t * Otherwise, the presentation format defaults to `singleline`.\n\t */\n\teditPresentation?: EditPresentationTypes;\n\n\t/**\n\t * When specified, gives an order number for the setting\n\t * within the settings editor. Otherwise, the setting is placed at the end.\n\t */\n\torder?: number;\n\n\t/**\n\t * When specified, this setting's value can always be overwritten by\n\t * a system-wide policy.\n\t */\n\tpolicy?: IPolicy;\n}\n\nexport interface IExtensionInfo {\n\tid: string;\n\tdisplayName?: string;\n}\n\nexport interface IConfigurationNode {\n\tid?: string;\n\torder?: number;\n\ttype?: string | string[];\n\ttitle?: string;\n\tdescription?: string;\n\tproperties?: IStringDictionary<IConfigurationPropertySchema>;\n\tallOf?: IConfigurationNode[];\n\tscope?: ConfigurationScope;\n\textensionInfo?: IExtensionInfo;\n\trestrictedProperties?: string[];\n}\n\nexport interface IConfigurationDefaults {\n\toverrides: IStringDictionary<any>;\n\tsource?: IExtensionInfo | string;\n}\n\nexport type IRegisteredConfigurationPropertySchema = IConfigurationPropertySchema & {\n\tdefaultDefaultValue?: any;\n\tsource?: IExtensionInfo; // Source of the Property\n\tdefaultValueSource?: IExtensionInfo | string; // Source of the Default Value\n};\n\nexport type IConfigurationDefaultOverride = {\n\treadonly value: any;\n\treadonly source?: IExtensionInfo | string;  // Source of the default override\n\treadonly valuesSources?: Map<string, IExtensionInfo | string>; // Source of each value in default language overrides\n};\n\nexport const allSettings: { properties: IStringDictionary<IConfigurationPropertySchema>; patternProperties: IStringDictionary<IConfigurationPropertySchema> } = { properties: {}, patternProperties: {} };\nexport const applicationSettings: { properties: IStringDictionary<IConfigurationPropertySchema>; patternProperties: IStringDictionary<IConfigurationPropertySchema> } = { properties: {}, patternProperties: {} };\nexport const machineSettings: { properties: IStringDictionary<IConfigurationPropertySchema>; patternProperties: IStringDictionary<IConfigurationPropertySchema> } = { properties: {}, patternProperties: {} };\nexport const machineOverridableSettings: { properties: IStringDictionary<IConfigurationPropertySchema>; patternProperties: IStringDictionary<IConfigurationPropertySchema> } = { properties: {}, patternProperties: {} };\nexport const windowSettings: { properties: IStringDictionary<IConfigurationPropertySchema>; patternProperties: IStringDictionary<IConfigurationPropertySchema> } = { properties: {}, patternProperties: {} };\nexport const resourceSettings: { properties: IStringDictionary<IConfigurationPropertySchema>; patternProperties: IStringDictionary<IConfigurationPropertySchema> } = { properties: {}, patternProperties: {} };\n\nexport const resourceLanguageSettingsSchemaId = 'vscode://schemas/settings/resourceLanguage';\nexport const configurationDefaultsSchemaId = 'vscode://schemas/settings/configurationDefaults';\n\nconst contributionRegistry = Registry.as<IJSONContributionRegistry>(JSONExtensions.JSONContribution);\n\nclass ConfigurationRegistry implements IConfigurationRegistry {\n\n\tprivate readonly configurationDefaultsOverrides: Map<string, IConfigurationDefaultOverride>;\n\tprivate readonly defaultLanguageConfigurationOverridesNode: IConfigurationNode;\n\tprivate readonly configurationContributors: IConfigurationNode[];\n\tprivate readonly configurationProperties: IStringDictionary<IRegisteredConfigurationPropertySchema>;\n\tprivate readonly policyConfigurations: Map<PolicyName, string>;\n\tprivate readonly excludedConfigurationProperties: IStringDictionary<IRegisteredConfigurationPropertySchema>;\n\tprivate readonly resourceLanguageSettingsSchema: IJSONSchema;\n\tprivate readonly overrideIdentifiers = new Set<string>();\n\n\tprivate readonly _onDidSchemaChange = new Emitter<void>();\n\treadonly onDidSchemaChange: Event<void> = this._onDidSchemaChange.event;\n\n\tprivate readonly _onDidUpdateConfiguration = new Emitter<{ properties: string[]; defaultsOverrides?: boolean }>();\n\treadonly onDidUpdateConfiguration = this._onDidUpdateConfiguration.event;\n\n\tconstructor() {\n\t\tthis.configurationDefaultsOverrides = new Map<string, IConfigurationDefaultOverride>();\n\t\tthis.defaultLanguageConfigurationOverridesNode = {\n\t\t\tid: 'defaultOverrides',\n\t\t\ttitle: nls.localize('defaultLanguageConfigurationOverrides.title', \"Default Language Configuration Overrides\"),\n\t\t\tproperties: {}\n\t\t};\n\t\tthis.configurationContributors = [this.defaultLanguageConfigurationOverridesNode];\n\t\tthis.resourceLanguageSettingsSchema = { properties: {}, patternProperties: {}, additionalProperties: false, errorMessage: 'Unknown editor configuration setting', allowTrailingCommas: true, allowComments: true };\n\t\tthis.configurationProperties = {};\n\t\tthis.policyConfigurations = new Map<PolicyName, string>();\n\t\tthis.excludedConfigurationProperties = {};\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t\tthis.registerOverridePropertyPatternKey();\n\t}\n\n\tpublic registerConfiguration(configuration: IConfigurationNode, validate: boolean = true): void {\n\t\tthis.registerConfigurations([configuration], validate);\n\t}\n\n\tpublic registerConfigurations(configurations: IConfigurationNode[], validate: boolean = true): void {\n\t\tconst properties = this.doRegisterConfigurations(configurations, validate);\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire({ properties });\n\t}\n\n\tpublic deregisterConfigurations(configurations: IConfigurationNode[]): void {\n\t\tconst properties = this.doDeregisterConfigurations(configurations);\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire({ properties });\n\t}\n\n\tpublic updateConfigurations({ add, remove }: { add: IConfigurationNode[]; remove: IConfigurationNode[] }): void {\n\t\tconst properties = [];\n\t\tproperties.push(...this.doDeregisterConfigurations(remove));\n\t\tproperties.push(...this.doRegisterConfigurations(add, false));\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire({ properties: distinct(properties) });\n\t}\n\n\tpublic registerDefaultConfigurations(configurationDefaults: IConfigurationDefaults[]): void {\n\t\tconst properties: string[] = [];\n\t\tconst overrideIdentifiers: string[] = [];\n\n\t\tfor (const { overrides, source } of configurationDefaults) {\n\t\t\tfor (const key in overrides) {\n\t\t\t\tproperties.push(key);\n\n\t\t\t\tif (OVERRIDE_PROPERTY_REGEX.test(key)) {\n\t\t\t\t\tconst configurationDefaultOverride = this.configurationDefaultsOverrides.get(key);\n\t\t\t\t\tconst valuesSources = configurationDefaultOverride?.valuesSources ?? new Map<string, IExtensionInfo | string>();\n\t\t\t\t\tif (source) {\n\t\t\t\t\t\tfor (const configuration of Object.keys(overrides[key])) {\n\t\t\t\t\t\t\tvaluesSources.set(configuration, source);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst defaultValue = { ...(configurationDefaultOverride?.value || {}), ...overrides[key] };\n\t\t\t\t\tthis.configurationDefaultsOverrides.set(key, { source, value: defaultValue, valuesSources });\n\t\t\t\t\tconst plainKey = getLanguageTagSettingPlainKey(key);\n\t\t\t\t\tconst property: IRegisteredConfigurationPropertySchema = {\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\tdefault: defaultValue,\n\t\t\t\t\t\tdescription: nls.localize('defaultLanguageConfiguration.description', \"Configure settings to be overridden for the {0} language.\", plainKey),\n\t\t\t\t\t\t$ref: resourceLanguageSettingsSchemaId,\n\t\t\t\t\t\tdefaultDefaultValue: defaultValue,\n\t\t\t\t\t\tsource: types.isString(source) ? undefined : source,\n\t\t\t\t\t\tdefaultValueSource: source\n\t\t\t\t\t};\n\t\t\t\t\toverrideIdentifiers.push(...overrideIdentifiersFromKey(key));\n\t\t\t\t\tthis.configurationProperties[key] = property;\n\t\t\t\t\tthis.defaultLanguageConfigurationOverridesNode.properties![key] = property;\n\t\t\t\t} else {\n\t\t\t\t\tthis.configurationDefaultsOverrides.set(key, { value: overrides[key], source });\n\t\t\t\t\tconst property = this.configurationProperties[key];\n\t\t\t\t\tif (property) {\n\t\t\t\t\t\tthis.updatePropertyDefaultValue(key, property);\n\t\t\t\t\t\tthis.updateSchema(key, property);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.registerOverrideIdentifiers(overrideIdentifiers);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire({ properties, defaultsOverrides: true });\n\t}\n\n\tpublic deregisterDefaultConfigurations(defaultConfigurations: IConfigurationDefaults[]): void {\n\t\tconst properties: string[] = [];\n\t\tfor (const { overrides, source } of defaultConfigurations) {\n\t\t\tfor (const key in overrides) {\n\t\t\t\tconst configurationDefaultsOverride = this.configurationDefaultsOverrides.get(key);\n\t\t\t\tconst id = types.isString(source) ? source : source?.id;\n\t\t\t\tconst configurationDefaultsOverrideSourceId = types.isString(configurationDefaultsOverride?.source) ? configurationDefaultsOverride?.source : configurationDefaultsOverride?.source?.id;\n\t\t\t\tif (id !== configurationDefaultsOverrideSourceId) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tproperties.push(key);\n\t\t\t\tthis.configurationDefaultsOverrides.delete(key);\n\t\t\t\tif (OVERRIDE_PROPERTY_REGEX.test(key)) {\n\t\t\t\t\tdelete this.configurationProperties[key];\n\t\t\t\t\tdelete this.defaultLanguageConfigurationOverridesNode.properties![key];\n\t\t\t\t} else {\n\t\t\t\t\tconst property = this.configurationProperties[key];\n\t\t\t\t\tif (property) {\n\t\t\t\t\t\tthis.updatePropertyDefaultValue(key, property);\n\t\t\t\t\t\tthis.updateSchema(key, property);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.updateOverridePropertyPatternKey();\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire({ properties, defaultsOverrides: true });\n\t}\n\n\tpublic notifyConfigurationSchemaUpdated(...configurations: IConfigurationNode[]) {\n\t\tthis._onDidSchemaChange.fire();\n\t}\n\n\tpublic registerOverrideIdentifiers(overrideIdentifiers: string[]): void {\n\t\tfor (const overrideIdentifier of overrideIdentifiers) {\n\t\t\tthis.overrideIdentifiers.add(overrideIdentifier);\n\t\t}\n\t\tthis.updateOverridePropertyPatternKey();\n\t}\n\n\tprivate doRegisterConfigurations(configurations: IConfigurationNode[], validate: boolean): string[] {\n\t\tconst properties: string[] = [];\n\t\tconfigurations.forEach(configuration => {\n\t\t\tproperties.push(...this.validateAndRegisterProperties(configuration, validate, configuration.extensionInfo, configuration.restrictedProperties)); // fills in defaults\n\t\t\tthis.configurationContributors.push(configuration);\n\t\t\tthis.registerJSONConfiguration(configuration);\n\t\t});\n\t\treturn properties;\n\t}\n\n\tprivate doDeregisterConfigurations(configurations: IConfigurationNode[]): string[] {\n\t\tconst properties: string[] = [];\n\t\tconst deregisterConfiguration = (configuration: IConfigurationNode) => {\n\t\t\tif (configuration.properties) {\n\t\t\t\tfor (const key in configuration.properties) {\n\t\t\t\t\tproperties.push(key);\n\t\t\t\t\tconst property = this.configurationProperties[key];\n\t\t\t\t\tif (property?.policy?.name) {\n\t\t\t\t\t\tthis.policyConfigurations.delete(property.policy.name);\n\t\t\t\t\t}\n\t\t\t\t\tdelete this.configurationProperties[key];\n\t\t\t\t\tthis.removeFromSchema(key, configuration.properties[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconfiguration.allOf?.forEach(node => deregisterConfiguration(node));\n\t\t};\n\t\tfor (const configuration of configurations) {\n\t\t\tderegisterConfiguration(configuration);\n\t\t\tconst index = this.configurationContributors.indexOf(configuration);\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.configurationContributors.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\treturn properties;\n\t}\n\n\tprivate validateAndRegisterProperties(configuration: IConfigurationNode, validate: boolean = true, extensionInfo: IExtensionInfo | undefined, restrictedProperties: string[] | undefined, scope: ConfigurationScope = ConfigurationScope.WINDOW): string[] {\n\t\tscope = types.isUndefinedOrNull(configuration.scope) ? scope : configuration.scope;\n\t\tconst propertyKeys: string[] = [];\n\t\tconst properties = configuration.properties;\n\t\tif (properties) {\n\t\t\tfor (const key in properties) {\n\t\t\t\tconst property: IRegisteredConfigurationPropertySchema = properties[key];\n\t\t\t\tif (validate && validateProperty(key, property)) {\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tproperty.source = extensionInfo;\n\n\t\t\t\t// update default value\n\t\t\t\tproperty.defaultDefaultValue = properties[key].default;\n\t\t\t\tthis.updatePropertyDefaultValue(key, property);\n\n\t\t\t\t// update scope\n\t\t\t\tif (OVERRIDE_PROPERTY_REGEX.test(key)) {\n\t\t\t\t\tproperty.scope = undefined; // No scope for overridable properties `[${identifier}]`\n\t\t\t\t} else {\n\t\t\t\t\tproperty.scope = types.isUndefinedOrNull(property.scope) ? scope : property.scope;\n\t\t\t\t\tproperty.restricted = types.isUndefinedOrNull(property.restricted) ? !!restrictedProperties?.includes(key) : property.restricted;\n\t\t\t\t}\n\n\t\t\t\t// Add to properties maps\n\t\t\t\t// Property is included by default if 'included' is unspecified\n\t\t\t\tif (properties[key].hasOwnProperty('included') && !properties[key].included) {\n\t\t\t\t\tthis.excludedConfigurationProperties[key] = properties[key];\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tthis.configurationProperties[key] = properties[key];\n\t\t\t\t\tif (properties[key].policy?.name) {\n\t\t\t\t\t\tthis.policyConfigurations.set(properties[key].policy!.name, key);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!properties[key].deprecationMessage && properties[key].markdownDeprecationMessage) {\n\t\t\t\t\t// If not set, default deprecationMessage to the markdown source\n\t\t\t\t\tproperties[key].deprecationMessage = properties[key].markdownDeprecationMessage;\n\t\t\t\t}\n\n\t\t\t\tpropertyKeys.push(key);\n\t\t\t}\n\t\t}\n\t\tconst subNodes = configuration.allOf;\n\t\tif (subNodes) {\n\t\t\tfor (const node of subNodes) {\n\t\t\t\tpropertyKeys.push(...this.validateAndRegisterProperties(node, validate, extensionInfo, restrictedProperties, scope));\n\t\t\t}\n\t\t}\n\t\treturn propertyKeys;\n\t}\n\n\t// TODO: @sandy081 - Remove this method and include required info in getConfigurationProperties\n\tgetConfigurations(): IConfigurationNode[] {\n\t\treturn this.configurationContributors;\n\t}\n\n\tgetConfigurationProperties(): IStringDictionary<IRegisteredConfigurationPropertySchema> {\n\t\treturn this.configurationProperties;\n\t}\n\n\tgetPolicyConfigurations(): Map<PolicyName, string> {\n\t\treturn this.policyConfigurations;\n\t}\n\n\tgetExcludedConfigurationProperties(): IStringDictionary<IRegisteredConfigurationPropertySchema> {\n\t\treturn this.excludedConfigurationProperties;\n\t}\n\n\tgetConfigurationDefaultsOverrides(): Map<string, IConfigurationDefaultOverride> {\n\t\treturn this.configurationDefaultsOverrides;\n\t}\n\n\tprivate registerJSONConfiguration(configuration: IConfigurationNode) {\n\t\tconst register = (configuration: IConfigurationNode) => {\n\t\t\tconst properties = configuration.properties;\n\t\t\tif (properties) {\n\t\t\t\tfor (const key in properties) {\n\t\t\t\t\tthis.updateSchema(key, properties[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst subNodes = configuration.allOf;\n\t\t\tsubNodes?.forEach(register);\n\t\t};\n\t\tregister(configuration);\n\t}\n\n\tprivate updateSchema(key: string, property: IConfigurationPropertySchema): void {\n\t\tallSettings.properties[key] = property;\n\t\tswitch (property.scope) {\n\t\t\tcase ConfigurationScope.APPLICATION:\n\t\t\t\tapplicationSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.MACHINE:\n\t\t\t\tmachineSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.MACHINE_OVERRIDABLE:\n\t\t\t\tmachineOverridableSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.WINDOW:\n\t\t\t\twindowSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.RESOURCE:\n\t\t\t\tresourceSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.LANGUAGE_OVERRIDABLE:\n\t\t\t\tresourceSettings.properties[key] = property;\n\t\t\t\tthis.resourceLanguageSettingsSchema.properties![key] = property;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate removeFromSchema(key: string, property: IConfigurationPropertySchema): void {\n\t\tdelete allSettings.properties[key];\n\t\tswitch (property.scope) {\n\t\t\tcase ConfigurationScope.APPLICATION:\n\t\t\t\tdelete applicationSettings.properties[key];\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.MACHINE:\n\t\t\t\tdelete machineSettings.properties[key];\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.MACHINE_OVERRIDABLE:\n\t\t\t\tdelete machineOverridableSettings.properties[key];\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.WINDOW:\n\t\t\t\tdelete windowSettings.properties[key];\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.RESOURCE:\n\t\t\tcase ConfigurationScope.LANGUAGE_OVERRIDABLE:\n\t\t\t\tdelete resourceSettings.properties[key];\n\t\t\t\tdelete this.resourceLanguageSettingsSchema.properties![key];\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate updateOverridePropertyPatternKey(): void {\n\t\tfor (const overrideIdentifier of this.overrideIdentifiers.values()) {\n\t\t\tconst overrideIdentifierProperty = `[${overrideIdentifier}]`;\n\t\t\tconst resourceLanguagePropertiesSchema: IJSONSchema = {\n\t\t\t\ttype: 'object',\n\t\t\t\tdescription: nls.localize('overrideSettings.defaultDescription', \"Configure editor settings to be overridden for a language.\"),\n\t\t\t\terrorMessage: nls.localize('overrideSettings.errorMessage', \"This setting does not support per-language configuration.\"),\n\t\t\t\t$ref: resourceLanguageSettingsSchemaId,\n\t\t\t};\n\t\t\tthis.updatePropertyDefaultValue(overrideIdentifierProperty, resourceLanguagePropertiesSchema);\n\t\t\tallSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tapplicationSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tmachineSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tmachineOverridableSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\twindowSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tresourceSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t}\n\t\tthis._onDidSchemaChange.fire();\n\t}\n\n\tprivate registerOverridePropertyPatternKey(): void {\n\t\tconst resourceLanguagePropertiesSchema: IJSONSchema = {\n\t\t\ttype: 'object',\n\t\t\tdescription: nls.localize('overrideSettings.defaultDescription', \"Configure editor settings to be overridden for a language.\"),\n\t\t\terrorMessage: nls.localize('overrideSettings.errorMessage', \"This setting does not support per-language configuration.\"),\n\t\t\t$ref: resourceLanguageSettingsSchemaId,\n\t\t};\n\t\tallSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n\t\tapplicationSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n\t\tmachineSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n\t\tmachineOverridableSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n\t\twindowSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n\t\tresourceSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n\t\tthis._onDidSchemaChange.fire();\n\t}\n\n\tprivate updatePropertyDefaultValue(key: string, property: IRegisteredConfigurationPropertySchema): void {\n\t\tconst configurationdefaultOverride = this.configurationDefaultsOverrides.get(key);\n\t\tlet defaultValue = configurationdefaultOverride?.value;\n\t\tlet defaultSource = configurationdefaultOverride?.source;\n\t\tif (types.isUndefined(defaultValue)) {\n\t\t\tdefaultValue = property.defaultDefaultValue;\n\t\t\tdefaultSource = undefined;\n\t\t}\n\t\tif (types.isUndefined(defaultValue)) {\n\t\t\tdefaultValue = getDefaultValue(property.type);\n\t\t}\n\t\tproperty.default = defaultValue;\n\t\tproperty.defaultValueSource = defaultSource;\n\t}\n}\n\nconst OVERRIDE_IDENTIFIER_PATTERN = `\\\\[([^\\\\]]+)\\\\]`;\nconst OVERRIDE_IDENTIFIER_REGEX = new RegExp(OVERRIDE_IDENTIFIER_PATTERN, 'g');\nexport const OVERRIDE_PROPERTY_PATTERN = `^(${OVERRIDE_IDENTIFIER_PATTERN})+$`;\nexport const OVERRIDE_PROPERTY_REGEX = new RegExp(OVERRIDE_PROPERTY_PATTERN);\n\nexport function overrideIdentifiersFromKey(key: string): string[] {\n\tconst identifiers: string[] = [];\n\tif (OVERRIDE_PROPERTY_REGEX.test(key)) {\n\t\tlet matches = OVERRIDE_IDENTIFIER_REGEX.exec(key);\n\t\twhile (matches?.length) {\n\t\t\tconst identifier = matches[1].trim();\n\t\t\tif (identifier) {\n\t\t\t\tidentifiers.push(identifier);\n\t\t\t}\n\t\t\tmatches = OVERRIDE_IDENTIFIER_REGEX.exec(key);\n\t\t}\n\t}\n\treturn distinct(identifiers);\n}\n\nexport function keyFromOverrideIdentifiers(overrideIdentifiers: string[]): string {\n\treturn overrideIdentifiers.reduce((result, overrideIdentifier) => `${result}[${overrideIdentifier}]`, '');\n}\n\nexport function getDefaultValue(type: string | string[] | undefined): any {\n\tconst t = Array.isArray(type) ? (<string[]>type)[0] : <string>type;\n\tswitch (t) {\n\t\tcase 'boolean':\n\t\t\treturn false;\n\t\tcase 'integer':\n\t\tcase 'number':\n\t\t\treturn 0;\n\t\tcase 'string':\n\t\t\treturn '';\n\t\tcase 'array':\n\t\t\treturn [];\n\t\tcase 'object':\n\t\t\treturn {};\n\t\tdefault:\n\t\t\treturn null;\n\t}\n}\n\nconst configurationRegistry = new ConfigurationRegistry();\nRegistry.add(Extensions.Configuration, configurationRegistry);\n\nexport function validateProperty(property: string, schema: IRegisteredConfigurationPropertySchema): string | null {\n\tif (!property.trim()) {\n\t\treturn nls.localize('config.property.empty', \"Cannot register an empty property\");\n\t}\n\tif (OVERRIDE_PROPERTY_REGEX.test(property)) {\n\t\treturn nls.localize('config.property.languageDefault', \"Cannot register '{0}'. This matches property pattern '\\\\\\\\[.*\\\\\\\\]$' for describing language specific editor settings. Use 'configurationDefaults' contribution.\", property);\n\t}\n\tif (configurationRegistry.getConfigurationProperties()[property] !== undefined) {\n\t\treturn nls.localize('config.property.duplicate', \"Cannot register '{0}'. This property is already registered.\", property);\n\t}\n\tif (schema.policy?.name && configurationRegistry.getPolicyConfigurations().get(schema.policy?.name) !== undefined) {\n\t\treturn nls.localize('config.policy.duplicate', \"Cannot register '{0}'. The associated policy {1} is already registered with {2}.\", property, schema.policy?.name, configurationRegistry.getPolicyConfigurations().get(schema.policy?.name));\n\t}\n\treturn null;\n}\n\nexport function getScopes(): [string, ConfigurationScope | undefined][] {\n\tconst scopes: [string, ConfigurationScope | undefined][] = [];\n\tconst configurationProperties = configurationRegistry.getConfigurationProperties();\n\tfor (const key of Object.keys(configurationProperties)) {\n\t\tscopes.push([key, configurationProperties[key].scope]);\n\t}\n\tscopes.push(['launch', ConfigurationScope.RESOURCE]);\n\tscopes.push(['task', ConfigurationScope.RESOURCE]);\n\treturn scopes;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as arrays from 'vs/base/common/arrays';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport * as json from 'vs/base/common/json';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { getOrSet, ResourceMap } from 'vs/base/common/map';\nimport * as objects from 'vs/base/common/objects';\nimport { IExtUri } from 'vs/base/common/resources';\nimport * as types from 'vs/base/common/types';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { addToValueTree, ConfigurationTarget, getConfigurationValue, IConfigurationChange, IConfigurationChangeEvent, IConfigurationCompareResult, IConfigurationData, IConfigurationModel, IConfigurationOverrides, IConfigurationUpdateOverrides, IConfigurationValue, IOverrides, removeFromValueTree, toValuesTree } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationScope, Extensions, IConfigurationPropertySchema, IConfigurationRegistry, overrideIdentifiersFromKey, OVERRIDE_PROPERTY_REGEX } from 'vs/platform/configuration/common/configurationRegistry';\nimport { FileOperation, IFileService } from 'vs/platform/files/common/files';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Workspace } from 'vs/platform/workspace/common/workspace';\n\nexport class ConfigurationModel implements IConfigurationModel {\n\n\tprivate frozen: boolean = false;\n\tprivate readonly overrideConfigurations = new Map<string, ConfigurationModel>();\n\n\tconstructor(\n\t\tprivate readonly _contents: any = {},\n\t\tprivate readonly _keys: string[] = [],\n\t\tprivate readonly _overrides: IOverrides[] = []\n\t) {\n\t}\n\n\tget contents(): any {\n\t\treturn this.checkAndFreeze(this._contents);\n\t}\n\n\tget overrides(): IOverrides[] {\n\t\treturn this.checkAndFreeze(this._overrides);\n\t}\n\n\tget keys(): string[] {\n\t\treturn this.checkAndFreeze(this._keys);\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._keys.length === 0 && Object.keys(this._contents).length === 0 && this._overrides.length === 0;\n\t}\n\n\tisFrozen(): boolean {\n\t\treturn this.frozen;\n\t}\n\n\tgetValue<V>(section: string | undefined): V {\n\t\treturn section ? getConfigurationValue<any>(this.contents, section) : this.contents;\n\t}\n\n\tgetOverrideValue<V>(section: string | undefined, overrideIdentifier: string): V | undefined {\n\t\tconst overrideContents = this.getContentsForOverrideIdentifer(overrideIdentifier);\n\t\treturn overrideContents\n\t\t\t? section ? getConfigurationValue<any>(overrideContents, section) : overrideContents\n\t\t\t: undefined;\n\t}\n\n\tgetKeysForOverrideIdentifier(identifier: string): string[] {\n\t\tconst keys: string[] = [];\n\t\tfor (const override of this.overrides) {\n\t\t\tif (override.identifiers.includes(identifier)) {\n\t\t\t\tkeys.push(...override.keys);\n\t\t\t}\n\t\t}\n\t\treturn arrays.distinct(keys);\n\t}\n\n\tgetAllOverrideIdentifiers(): string[] {\n\t\tconst result: string[] = [];\n\t\tfor (const override of this.overrides) {\n\t\t\tresult.push(...override.identifiers);\n\t\t}\n\t\treturn arrays.distinct(result);\n\t}\n\n\toverride(identifier: string): ConfigurationModel {\n\t\tlet overrideConfigurationModel = this.overrideConfigurations.get(identifier);\n\t\tif (!overrideConfigurationModel) {\n\t\t\toverrideConfigurationModel = this.createOverrideConfigurationModel(identifier);\n\t\t\tthis.overrideConfigurations.set(identifier, overrideConfigurationModel);\n\t\t}\n\t\treturn overrideConfigurationModel;\n\t}\n\n\tmerge(...others: ConfigurationModel[]): ConfigurationModel {\n\t\tconst contents = objects.deepClone(this.contents);\n\t\tconst overrides = objects.deepClone(this.overrides);\n\t\tconst keys = [...this.keys];\n\n\t\tfor (const other of others) {\n\t\t\tif (other.isEmpty()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.mergeContents(contents, other.contents);\n\n\t\t\tfor (const otherOverride of other.overrides) {\n\t\t\t\tconst [override] = overrides.filter(o => arrays.equals(o.identifiers, otherOverride.identifiers));\n\t\t\t\tif (override) {\n\t\t\t\t\tthis.mergeContents(override.contents, otherOverride.contents);\n\t\t\t\t\toverride.keys.push(...otherOverride.keys);\n\t\t\t\t\toverride.keys = arrays.distinct(override.keys);\n\t\t\t\t} else {\n\t\t\t\t\toverrides.push(objects.deepClone(otherOverride));\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const key of other.keys) {\n\t\t\t\tif (keys.indexOf(key) === -1) {\n\t\t\t\t\tkeys.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn new ConfigurationModel(contents, keys, overrides);\n\t}\n\n\tfreeze(): ConfigurationModel {\n\t\tthis.frozen = true;\n\t\treturn this;\n\t}\n\n\tclone(): ConfigurationModel {\n\t\treturn new ConfigurationModel(objects.deepClone(this.contents), [...this.keys], objects.deepClone(this.overrides));\n\t}\n\n\tprivate createOverrideConfigurationModel(identifier: string): ConfigurationModel {\n\t\tconst overrideContents = this.getContentsForOverrideIdentifer(identifier);\n\n\t\tif (!overrideContents || typeof overrideContents !== 'object' || !Object.keys(overrideContents).length) {\n\t\t\t// If there are no valid overrides, return self\n\t\t\treturn this;\n\t\t}\n\n\t\tconst contents: any = {};\n\t\tfor (const key of arrays.distinct([...Object.keys(this.contents), ...Object.keys(overrideContents)])) {\n\n\t\t\tlet contentsForKey = this.contents[key];\n\t\t\tconst overrideContentsForKey = overrideContents[key];\n\n\t\t\t// If there are override contents for the key, clone and merge otherwise use base contents\n\t\t\tif (overrideContentsForKey) {\n\t\t\t\t// Clone and merge only if base contents and override contents are of type object otherwise just override\n\t\t\t\tif (typeof contentsForKey === 'object' && typeof overrideContentsForKey === 'object') {\n\t\t\t\t\tcontentsForKey = objects.deepClone(contentsForKey);\n\t\t\t\t\tthis.mergeContents(contentsForKey, overrideContentsForKey);\n\t\t\t\t} else {\n\t\t\t\t\tcontentsForKey = overrideContentsForKey;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcontents[key] = contentsForKey;\n\t\t}\n\n\t\treturn new ConfigurationModel(contents, this.keys, this.overrides);\n\t}\n\n\tprivate mergeContents(source: any, target: any): void {\n\t\tfor (const key of Object.keys(target)) {\n\t\t\tif (key in source) {\n\t\t\t\tif (types.isObject(source[key]) && types.isObject(target[key])) {\n\t\t\t\t\tthis.mergeContents(source[key], target[key]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsource[key] = objects.deepClone(target[key]);\n\t\t}\n\t}\n\n\tprivate checkAndFreeze<T>(data: T): T {\n\t\tif (this.frozen && !Object.isFrozen(data)) {\n\t\t\treturn objects.deepFreeze(data);\n\t\t}\n\t\treturn data;\n\t}\n\n\tprivate getContentsForOverrideIdentifer(identifier: string): any {\n\t\tlet contentsForIdentifierOnly: IStringDictionary<any> | null = null;\n\t\tlet contents: IStringDictionary<any> | null = null;\n\t\tconst mergeContents = (contentsToMerge: any) => {\n\t\t\tif (contentsToMerge) {\n\t\t\t\tif (contents) {\n\t\t\t\t\tthis.mergeContents(contents, contentsToMerge);\n\t\t\t\t} else {\n\t\t\t\t\tcontents = objects.deepClone(contentsToMerge);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tfor (const override of this.overrides) {\n\t\t\tif (arrays.equals(override.identifiers, [identifier])) {\n\t\t\t\tcontentsForIdentifierOnly = override.contents;\n\t\t\t} else if (override.identifiers.includes(identifier)) {\n\t\t\t\tmergeContents(override.contents);\n\t\t\t}\n\t\t}\n\t\t// Merge contents of the identifier only at the end to take precedence.\n\t\tmergeContents(contentsForIdentifierOnly);\n\t\treturn contents;\n\t}\n\n\ttoJSON(): IConfigurationModel {\n\t\treturn {\n\t\t\tcontents: this.contents,\n\t\t\toverrides: this.overrides,\n\t\t\tkeys: this.keys\n\t\t};\n\t}\n\n\t// Update methods\n\n\tpublic setValue(key: string, value: any) {\n\t\tthis.addKey(key);\n\t\taddToValueTree(this.contents, key, value, e => { throw new Error(e); });\n\t}\n\n\tpublic removeValue(key: string): void {\n\t\tif (this.removeKey(key)) {\n\t\t\tremoveFromValueTree(this.contents, key);\n\t\t}\n\t}\n\n\tprivate addKey(key: string): void {\n\t\tlet index = this.keys.length;\n\t\tfor (let i = 0; i < index; i++) {\n\t\t\tif (key.indexOf(this.keys[i]) === 0) {\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\tthis.keys.splice(index, 1, key);\n\t}\n\n\tprivate removeKey(key: string): boolean {\n\t\tconst index = this.keys.indexOf(key);\n\t\tif (index !== -1) {\n\t\t\tthis.keys.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n\nexport interface ConfigurationParseOptions {\n\tscopes: ConfigurationScope[] | undefined;\n\tskipRestricted?: boolean;\n}\n\nexport class ConfigurationModelParser {\n\n\tprivate _raw: any = null;\n\tprivate _configurationModel: ConfigurationModel | null = null;\n\tprivate _restrictedConfigurations: string[] = [];\n\tprivate _parseErrors: any[] = [];\n\n\tconstructor(protected readonly _name: string) { }\n\n\tget configurationModel(): ConfigurationModel {\n\t\treturn this._configurationModel || new ConfigurationModel();\n\t}\n\n\tget restrictedConfigurations(): string[] {\n\t\treturn this._restrictedConfigurations;\n\t}\n\n\tget errors(): any[] {\n\t\treturn this._parseErrors;\n\t}\n\n\tpublic parse(content: string | null | undefined, options?: ConfigurationParseOptions): void {\n\t\tif (!types.isUndefinedOrNull(content)) {\n\t\t\tconst raw = this.doParseContent(content);\n\t\t\tthis.parseRaw(raw, options);\n\t\t}\n\t}\n\n\tpublic reparse(options: ConfigurationParseOptions): void {\n\t\tif (this._raw) {\n\t\t\tthis.parseRaw(this._raw, options);\n\t\t}\n\t}\n\n\tpublic parseRaw(raw: any, options?: ConfigurationParseOptions): void {\n\t\tthis._raw = raw;\n\t\tconst { contents, keys, overrides, restricted } = this.doParseRaw(raw, options);\n\t\tthis._configurationModel = new ConfigurationModel(contents, keys, overrides);\n\t\tthis._restrictedConfigurations = restricted || [];\n\t}\n\n\tprivate doParseContent(content: string): any {\n\t\tlet raw: any = {};\n\t\tlet currentProperty: string | null = null;\n\t\tlet currentParent: any = [];\n\t\tconst previousParents: any[] = [];\n\t\tconst parseErrors: json.ParseError[] = [];\n\n\t\tfunction onValue(value: any) {\n\t\t\tif (Array.isArray(currentParent)) {\n\t\t\t\t(<any[]>currentParent).push(value);\n\t\t\t} else if (currentProperty !== null) {\n\t\t\t\tcurrentParent[currentProperty] = value;\n\t\t\t}\n\t\t}\n\n\t\tconst visitor: json.JSONVisitor = {\n\t\t\tonObjectBegin: () => {\n\t\t\t\tconst object = {};\n\t\t\t\tonValue(object);\n\t\t\t\tpreviousParents.push(currentParent);\n\t\t\t\tcurrentParent = object;\n\t\t\t\tcurrentProperty = null;\n\t\t\t},\n\t\t\tonObjectProperty: (name: string) => {\n\t\t\t\tcurrentProperty = name;\n\t\t\t},\n\t\t\tonObjectEnd: () => {\n\t\t\t\tcurrentParent = previousParents.pop();\n\t\t\t},\n\t\t\tonArrayBegin: () => {\n\t\t\t\tconst array: any[] = [];\n\t\t\t\tonValue(array);\n\t\t\t\tpreviousParents.push(currentParent);\n\t\t\t\tcurrentParent = array;\n\t\t\t\tcurrentProperty = null;\n\t\t\t},\n\t\t\tonArrayEnd: () => {\n\t\t\t\tcurrentParent = previousParents.pop();\n\t\t\t},\n\t\t\tonLiteralValue: onValue,\n\t\t\tonError: (error: json.ParseErrorCode, offset: number, length: number) => {\n\t\t\t\tparseErrors.push({ error, offset, length });\n\t\t\t}\n\t\t};\n\t\tif (content) {\n\t\t\ttry {\n\t\t\t\tjson.visit(content, visitor);\n\t\t\t\traw = currentParent[0] || {};\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(`Error while parsing settings file ${this._name}: ${e}`);\n\t\t\t\tthis._parseErrors = [e];\n\t\t\t}\n\t\t}\n\n\t\treturn raw;\n\t}\n\n\tprotected doParseRaw(raw: any, options?: ConfigurationParseOptions): IConfigurationModel & { restricted?: string[] } {\n\t\tconst configurationProperties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\t\tconst filtered = this.filter(raw, configurationProperties, true, options);\n\t\traw = filtered.raw;\n\t\tconst contents = toValuesTree(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\tconst keys = Object.keys(raw);\n\t\tconst overrides = this.toOverrides(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\treturn { contents, keys, overrides, restricted: filtered.restricted };\n\t}\n\n\tprivate filter(properties: any, configurationProperties: { [qualifiedKey: string]: IConfigurationPropertySchema | undefined }, filterOverriddenProperties: boolean, options?: ConfigurationParseOptions): { raw: {}; restricted: string[] } {\n\t\tif (!options?.scopes && !options?.skipRestricted) {\n\t\t\treturn { raw: properties, restricted: [] };\n\t\t}\n\t\tconst raw: any = {};\n\t\tconst restricted: string[] = [];\n\t\tfor (const key in properties) {\n\t\t\tif (OVERRIDE_PROPERTY_REGEX.test(key) && filterOverriddenProperties) {\n\t\t\t\tconst result = this.filter(properties[key], configurationProperties, false, options);\n\t\t\t\traw[key] = result.raw;\n\t\t\t\trestricted.push(...result.restricted);\n\t\t\t} else {\n\t\t\t\tconst propertySchema = configurationProperties[key];\n\t\t\t\tconst scope = propertySchema ? typeof propertySchema.scope !== 'undefined' ? propertySchema.scope : ConfigurationScope.WINDOW : undefined;\n\t\t\t\tif (propertySchema?.restricted) {\n\t\t\t\t\trestricted.push(key);\n\t\t\t\t}\n\t\t\t\t// Load unregistered configurations always.\n\t\t\t\tif (scope === undefined || options.scopes === undefined || options.scopes.includes(scope)) {\n\t\t\t\t\tif (!(options.skipRestricted && propertySchema?.restricted)) {\n\t\t\t\t\t\traw[key] = properties[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { raw, restricted };\n\t}\n\n\tprivate toOverrides(raw: any, conflictReporter: (message: string) => void): IOverrides[] {\n\t\tconst overrides: IOverrides[] = [];\n\t\tfor (const key of Object.keys(raw)) {\n\t\t\tif (OVERRIDE_PROPERTY_REGEX.test(key)) {\n\t\t\t\tconst overrideRaw: any = {};\n\t\t\t\tfor (const keyInOverrideRaw in raw[key]) {\n\t\t\t\t\toverrideRaw[keyInOverrideRaw] = raw[key][keyInOverrideRaw];\n\t\t\t\t}\n\t\t\t\toverrides.push({\n\t\t\t\t\tidentifiers: overrideIdentifiersFromKey(key),\n\t\t\t\t\tkeys: Object.keys(overrideRaw),\n\t\t\t\t\tcontents: toValuesTree(overrideRaw, conflictReporter)\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn overrides;\n\t}\n\n}\n\nexport class UserSettings extends Disposable {\n\n\tprivate readonly parser: ConfigurationModelParser;\n\tprivate readonly parseOptions: ConfigurationParseOptions;\n\tprotected readonly _onDidChange: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tconstructor(\n\t\tprivate readonly userSettingsResource: URI,\n\t\tprivate readonly scopes: ConfigurationScope[] | undefined,\n\t\textUri: IExtUri,\n\t\tprivate readonly fileService: IFileService\n\t) {\n\t\tsuper();\n\t\tthis.parser = new ConfigurationModelParser(this.userSettingsResource.toString());\n\t\tthis.parseOptions = { scopes: this.scopes };\n\t\tthis._register(this.fileService.watch(extUri.dirname(this.userSettingsResource)));\n\t\t// Also listen to the resource incase the resource is a symlink - https://github.com/microsoft/vscode/issues/118134\n\t\tthis._register(this.fileService.watch(this.userSettingsResource));\n\t\tthis._register(Event.any(\n\t\t\tEvent.filter(this.fileService.onDidFilesChange, e => e.contains(this.userSettingsResource)),\n\t\t\tEvent.filter(this.fileService.onDidRunOperation, e => (e.isOperation(FileOperation.CREATE) || e.isOperation(FileOperation.COPY) || e.isOperation(FileOperation.DELETE) || e.isOperation(FileOperation.WRITE)) && extUri.isEqual(e.resource, userSettingsResource))\n\t\t)(() => this._onDidChange.fire()));\n\t}\n\n\tasync loadConfiguration(): Promise<ConfigurationModel> {\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(this.userSettingsResource);\n\t\t\tthis.parser.parse(content.value.toString() || '{}', this.parseOptions);\n\t\t\treturn this.parser.configurationModel;\n\t\t} catch (e) {\n\t\t\treturn new ConfigurationModel();\n\t\t}\n\t}\n\n\treparse(): ConfigurationModel {\n\t\tthis.parser.reparse(this.parseOptions);\n\t\treturn this.parser.configurationModel;\n\t}\n\n\tgetRestrictedSettings(): string[] {\n\t\treturn this.parser.restrictedConfigurations;\n\t}\n}\n\n\nexport class Configuration {\n\n\tprivate _workspaceConsolidatedConfiguration: ConfigurationModel | null = null;\n\tprivate _foldersConsolidatedConfigurations: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>();\n\n\tconstructor(\n\t\tprivate _defaultConfiguration: ConfigurationModel,\n\t\tprivate _policyConfiguration: ConfigurationModel,\n\t\tprivate _applicationConfiguration: ConfigurationModel,\n\t\tprivate _localUserConfiguration: ConfigurationModel,\n\t\tprivate _remoteUserConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _workspaceConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _folderConfigurations: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>(),\n\t\tprivate _memoryConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _memoryConfigurationByResource: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>(),\n\t\tprivate _freeze: boolean = true) {\n\t}\n\n\tgetValue(section: string | undefined, overrides: IConfigurationOverrides, workspace: Workspace | undefined): any {\n\t\tconst consolidateConfigurationModel = this.getConsolidatedConfigurationModel(section, overrides, workspace);\n\t\treturn consolidateConfigurationModel.getValue(section);\n\t}\n\n\tupdateValue(key: string, value: any, overrides: IConfigurationUpdateOverrides = {}): void {\n\t\tlet memoryConfiguration: ConfigurationModel | undefined;\n\t\tif (overrides.resource) {\n\t\t\tmemoryConfiguration = this._memoryConfigurationByResource.get(overrides.resource);\n\t\t\tif (!memoryConfiguration) {\n\t\t\t\tmemoryConfiguration = new ConfigurationModel();\n\t\t\t\tthis._memoryConfigurationByResource.set(overrides.resource, memoryConfiguration);\n\t\t\t}\n\t\t} else {\n\t\t\tmemoryConfiguration = this._memoryConfiguration;\n\t\t}\n\n\t\tif (value === undefined) {\n\t\t\tmemoryConfiguration.removeValue(key);\n\t\t} else {\n\t\t\tmemoryConfiguration.setValue(key, value);\n\t\t}\n\n\t\tif (!overrides.resource) {\n\t\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\t}\n\t}\n\n\tinspect<C>(key: string, overrides: IConfigurationOverrides, workspace: Workspace | undefined): IConfigurationValue<C> {\n\t\tconst consolidateConfigurationModel = this.getConsolidatedConfigurationModel(key, overrides, workspace);\n\t\tconst folderConfigurationModel = this.getFolderConfigurationModelForResource(overrides.resource, workspace);\n\t\tconst memoryConfigurationModel = overrides.resource ? this._memoryConfigurationByResource.get(overrides.resource) || this._memoryConfiguration : this._memoryConfiguration;\n\n\t\tconst defaultValue = overrides.overrideIdentifier ? this._defaultConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this._defaultConfiguration.freeze().getValue<C>(key);\n\t\tconst policyValue = this._policyConfiguration.isEmpty() ? undefined : this._policyConfiguration.freeze().getValue<C>(key);\n\t\tconst applicationValue = this.applicationConfiguration.isEmpty() ? undefined : this.applicationConfiguration.freeze().getValue<C>(key);\n\t\tconst userValue = overrides.overrideIdentifier ? this.userConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.userConfiguration.freeze().getValue<C>(key);\n\t\tconst userLocalValue = overrides.overrideIdentifier ? this.localUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.localUserConfiguration.freeze().getValue<C>(key);\n\t\tconst userRemoteValue = overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.remoteUserConfiguration.freeze().getValue<C>(key);\n\t\tconst workspaceValue = workspace ? overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this._workspaceConfiguration.freeze().getValue<C>(key) : undefined; //Check on workspace exists or not because _workspaceConfiguration is never null\n\t\tconst workspaceFolderValue = folderConfigurationModel ? overrides.overrideIdentifier ? folderConfigurationModel.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : folderConfigurationModel.freeze().getValue<C>(key) : undefined;\n\t\tconst memoryValue = overrides.overrideIdentifier ? memoryConfigurationModel.override(overrides.overrideIdentifier).getValue<C>(key) : memoryConfigurationModel.getValue<C>(key);\n\t\tconst value = consolidateConfigurationModel.getValue<C>(key);\n\t\tconst overrideIdentifiers: string[] = arrays.distinct(consolidateConfigurationModel.overrides.map(override => override.identifiers).flat()).filter(overrideIdentifier => consolidateConfigurationModel.getOverrideValue(key, overrideIdentifier) !== undefined);\n\n\t\treturn {\n\t\t\tdefaultValue,\n\t\t\tpolicyValue,\n\t\t\tapplicationValue,\n\t\t\tuserValue,\n\t\t\tuserLocalValue,\n\t\t\tuserRemoteValue,\n\t\t\tworkspaceValue,\n\t\t\tworkspaceFolderValue,\n\t\t\tmemoryValue,\n\t\t\tvalue,\n\n\t\t\tdefault: defaultValue !== undefined ? { value: this._defaultConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this._defaultConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tpolicy: policyValue !== undefined ? { value: policyValue } : undefined,\n\t\t\tapplication: applicationValue !== undefined ? { value: applicationValue, override: overrides.overrideIdentifier ? this.applicationConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuser: userValue !== undefined ? { value: this.userConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.userConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuserLocal: userLocalValue !== undefined ? { value: this.localUserConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.localUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuserRemote: userRemoteValue !== undefined ? { value: this.remoteUserConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tworkspace: workspaceValue !== undefined ? { value: this._workspaceConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tworkspaceFolder: workspaceFolderValue !== undefined ? { value: folderConfigurationModel?.freeze().getValue(key), override: overrides.overrideIdentifier ? folderConfigurationModel?.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tmemory: memoryValue !== undefined ? { value: memoryConfigurationModel.getValue(key), override: overrides.overrideIdentifier ? memoryConfigurationModel.getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\n\t\t\toverrideIdentifiers: overrideIdentifiers.length ? overrideIdentifiers : undefined\n\t\t};\n\t}\n\n\tkeys(workspace: Workspace | undefined): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t} {\n\t\tconst folderConfigurationModel = this.getFolderConfigurationModelForResource(undefined, workspace);\n\t\treturn {\n\t\t\tdefault: this._defaultConfiguration.freeze().keys,\n\t\t\tuser: this.userConfiguration.freeze().keys,\n\t\t\tworkspace: this._workspaceConfiguration.freeze().keys,\n\t\t\tworkspaceFolder: folderConfigurationModel ? folderConfigurationModel.freeze().keys : []\n\t\t};\n\t}\n\n\tupdateDefaultConfiguration(defaultConfiguration: ConfigurationModel): void {\n\t\tthis._defaultConfiguration = defaultConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdatePolicyConfiguration(policyConfiguration: ConfigurationModel): void {\n\t\tthis._policyConfiguration = policyConfiguration;\n\t}\n\n\tupdateApplicationConfiguration(applicationConfiguration: ConfigurationModel): void {\n\t\tthis._applicationConfiguration = applicationConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateLocalUserConfiguration(localUserConfiguration: ConfigurationModel): void {\n\t\tthis._localUserConfiguration = localUserConfiguration;\n\t\tthis._userConfiguration = null;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateRemoteUserConfiguration(remoteUserConfiguration: ConfigurationModel): void {\n\t\tthis._remoteUserConfiguration = remoteUserConfiguration;\n\t\tthis._userConfiguration = null;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateWorkspaceConfiguration(workspaceConfiguration: ConfigurationModel): void {\n\t\tthis._workspaceConfiguration = workspaceConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateFolderConfiguration(resource: URI, configuration: ConfigurationModel): void {\n\t\tthis._folderConfigurations.set(resource, configuration);\n\t\tthis._foldersConsolidatedConfigurations.delete(resource);\n\t}\n\n\tdeleteFolderConfiguration(resource: URI): void {\n\t\tthis.folderConfigurations.delete(resource);\n\t\tthis._foldersConsolidatedConfigurations.delete(resource);\n\t}\n\n\tcompareAndUpdateDefaultConfiguration(defaults: ConfigurationModel, keys?: string[]): IConfigurationChange {\n\t\tconst overrides: [string, string[]][] = [];\n\t\tif (!keys) {\n\t\t\tconst { added, updated, removed } = compare(this._defaultConfiguration, defaults);\n\t\t\tkeys = [...added, ...updated, ...removed];\n\t\t}\n\t\tfor (const key of keys) {\n\t\t\tfor (const overrideIdentifier of overrideIdentifiersFromKey(key)) {\n\t\t\t\tconst fromKeys = this._defaultConfiguration.getKeysForOverrideIdentifier(overrideIdentifier);\n\t\t\t\tconst toKeys = defaults.getKeysForOverrideIdentifier(overrideIdentifier);\n\t\t\t\tconst keys = [\n\t\t\t\t\t...toKeys.filter(key => fromKeys.indexOf(key) === -1),\n\t\t\t\t\t...fromKeys.filter(key => toKeys.indexOf(key) === -1),\n\t\t\t\t\t...fromKeys.filter(key => !objects.equals(this._defaultConfiguration.override(overrideIdentifier).getValue(key), defaults.override(overrideIdentifier).getValue(key)))\n\t\t\t\t];\n\t\t\t\toverrides.push([overrideIdentifier, keys]);\n\t\t\t}\n\t\t}\n\t\tthis.updateDefaultConfiguration(defaults);\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdatePolicyConfiguration(policyConfiguration: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed } = compare(this._policyConfiguration, policyConfiguration);\n\t\tconst keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updatePolicyConfiguration(policyConfiguration);\n\t\t}\n\t\treturn { keys, overrides: [] };\n\t}\n\n\tcompareAndUpdateApplicationConfiguration(application: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.applicationConfiguration, application);\n\t\tconst keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateApplicationConfiguration(application);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateLocalUserConfiguration(user: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.localUserConfiguration, user);\n\t\tconst keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateLocalUserConfiguration(user);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateRemoteUserConfiguration(user: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.remoteUserConfiguration, user);\n\t\tconst keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateRemoteUserConfiguration(user);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateWorkspaceConfiguration(workspaceConfiguration: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.workspaceConfiguration, workspaceConfiguration);\n\t\tconst keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateWorkspaceConfiguration(workspaceConfiguration);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateFolderConfiguration(resource: URI, folderConfiguration: ConfigurationModel): IConfigurationChange {\n\t\tconst currentFolderConfiguration = this.folderConfigurations.get(resource);\n\t\tconst { added, updated, removed, overrides } = compare(currentFolderConfiguration, folderConfiguration);\n\t\tconst keys = [...added, ...updated, ...removed];\n\t\tif (keys.length || !currentFolderConfiguration) {\n\t\t\tthis.updateFolderConfiguration(resource, folderConfiguration);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndDeleteFolderConfiguration(folder: URI): IConfigurationChange {\n\t\tconst folderConfig = this.folderConfigurations.get(folder);\n\t\tif (!folderConfig) {\n\t\t\tthrow new Error('Unknown folder');\n\t\t}\n\t\tthis.deleteFolderConfiguration(folder);\n\t\tconst { added, updated, removed, overrides } = compare(folderConfig, undefined);\n\t\treturn { keys: [...added, ...updated, ...removed], overrides };\n\t}\n\n\tget defaults(): ConfigurationModel {\n\t\treturn this._defaultConfiguration;\n\t}\n\n\tget applicationConfiguration(): ConfigurationModel {\n\t\treturn this._applicationConfiguration;\n\t}\n\n\tprivate _userConfiguration: ConfigurationModel | null = null;\n\tget userConfiguration(): ConfigurationModel {\n\t\tif (!this._userConfiguration) {\n\t\t\tthis._userConfiguration = this._remoteUserConfiguration.isEmpty() ? this._localUserConfiguration : this._localUserConfiguration.merge(this._remoteUserConfiguration);\n\t\t\tif (this._freeze) {\n\t\t\t\tthis._userConfiguration.freeze();\n\t\t\t}\n\t\t}\n\t\treturn this._userConfiguration;\n\t}\n\n\tget localUserConfiguration(): ConfigurationModel {\n\t\treturn this._localUserConfiguration;\n\t}\n\n\tget remoteUserConfiguration(): ConfigurationModel {\n\t\treturn this._remoteUserConfiguration;\n\t}\n\n\tget workspaceConfiguration(): ConfigurationModel {\n\t\treturn this._workspaceConfiguration;\n\t}\n\n\tprotected get folderConfigurations(): ResourceMap<ConfigurationModel> {\n\t\treturn this._folderConfigurations;\n\t}\n\n\tprivate getConsolidatedConfigurationModel(section: string | undefined, overrides: IConfigurationOverrides, workspace: Workspace | undefined): ConfigurationModel {\n\t\tlet configurationModel = this.getConsolidatedConfigurationModelForResource(overrides, workspace);\n\t\tif (overrides.overrideIdentifier) {\n\t\t\tconfigurationModel = configurationModel.override(overrides.overrideIdentifier);\n\t\t}\n\t\tif (!this._policyConfiguration.isEmpty() && this._policyConfiguration.getValue(section) !== undefined) {\n\t\t\tconfigurationModel = configurationModel.merge(this._policyConfiguration);\n\t\t}\n\t\treturn configurationModel;\n\t}\n\n\tprivate getConsolidatedConfigurationModelForResource({ resource }: IConfigurationOverrides, workspace: Workspace | undefined): ConfigurationModel {\n\t\tlet consolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n\n\t\tif (workspace && resource) {\n\t\t\tconst root = workspace.getFolder(resource);\n\t\t\tif (root) {\n\t\t\t\tconsolidateConfiguration = this.getFolderConsolidatedConfiguration(root.uri) || consolidateConfiguration;\n\t\t\t}\n\t\t\tconst memoryConfigurationForResource = this._memoryConfigurationByResource.get(resource);\n\t\t\tif (memoryConfigurationForResource) {\n\t\t\t\tconsolidateConfiguration = consolidateConfiguration.merge(memoryConfigurationForResource);\n\t\t\t}\n\t\t}\n\n\t\treturn consolidateConfiguration;\n\t}\n\n\tprivate getWorkspaceConsolidatedConfiguration(): ConfigurationModel {\n\t\tif (!this._workspaceConsolidatedConfiguration) {\n\t\t\tthis._workspaceConsolidatedConfiguration = this._defaultConfiguration.merge(this.applicationConfiguration, this.userConfiguration, this._workspaceConfiguration, this._memoryConfiguration);\n\t\t\tif (this._freeze) {\n\t\t\t\tthis._workspaceConfiguration = this._workspaceConfiguration.freeze();\n\t\t\t}\n\t\t}\n\t\treturn this._workspaceConsolidatedConfiguration;\n\t}\n\n\tprivate getFolderConsolidatedConfiguration(folder: URI): ConfigurationModel {\n\t\tlet folderConsolidatedConfiguration = this._foldersConsolidatedConfigurations.get(folder);\n\t\tif (!folderConsolidatedConfiguration) {\n\t\t\tconst workspaceConsolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n\t\t\tconst folderConfiguration = this._folderConfigurations.get(folder);\n\t\t\tif (folderConfiguration) {\n\t\t\t\tfolderConsolidatedConfiguration = workspaceConsolidateConfiguration.merge(folderConfiguration);\n\t\t\t\tif (this._freeze) {\n\t\t\t\t\tfolderConsolidatedConfiguration = folderConsolidatedConfiguration.freeze();\n\t\t\t\t}\n\t\t\t\tthis._foldersConsolidatedConfigurations.set(folder, folderConsolidatedConfiguration);\n\t\t\t} else {\n\t\t\t\tfolderConsolidatedConfiguration = workspaceConsolidateConfiguration;\n\t\t\t}\n\t\t}\n\t\treturn folderConsolidatedConfiguration;\n\t}\n\n\tprivate getFolderConfigurationModelForResource(resource: URI | null | undefined, workspace: Workspace | undefined): ConfigurationModel | undefined {\n\t\tif (workspace && resource) {\n\t\t\tconst root = workspace.getFolder(resource);\n\t\t\tif (root) {\n\t\t\t\treturn this._folderConfigurations.get(root.uri);\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\ttoData(): IConfigurationData {\n\t\treturn {\n\t\t\tdefaults: {\n\t\t\t\tcontents: this._defaultConfiguration.contents,\n\t\t\t\toverrides: this._defaultConfiguration.overrides,\n\t\t\t\tkeys: this._defaultConfiguration.keys\n\t\t\t},\n\t\t\tpolicy: {\n\t\t\t\tcontents: this._policyConfiguration.contents,\n\t\t\t\toverrides: this._policyConfiguration.overrides,\n\t\t\t\tkeys: this._policyConfiguration.keys\n\t\t\t},\n\t\t\tapplication: {\n\t\t\t\tcontents: this.applicationConfiguration.contents,\n\t\t\t\toverrides: this.applicationConfiguration.overrides,\n\t\t\t\tkeys: this.applicationConfiguration.keys\n\t\t\t},\n\t\t\tuser: {\n\t\t\t\tcontents: this.userConfiguration.contents,\n\t\t\t\toverrides: this.userConfiguration.overrides,\n\t\t\t\tkeys: this.userConfiguration.keys\n\t\t\t},\n\t\t\tworkspace: {\n\t\t\t\tcontents: this._workspaceConfiguration.contents,\n\t\t\t\toverrides: this._workspaceConfiguration.overrides,\n\t\t\t\tkeys: this._workspaceConfiguration.keys\n\t\t\t},\n\t\t\tfolders: [...this._folderConfigurations.keys()].reduce<[UriComponents, IConfigurationModel][]>((result, folder) => {\n\t\t\t\tconst { contents, overrides, keys } = this._folderConfigurations.get(folder)!;\n\t\t\t\tresult.push([folder, { contents, overrides, keys }]);\n\t\t\t\treturn result;\n\t\t\t}, [])\n\t\t};\n\t}\n\n\tallKeys(): string[] {\n\t\tconst keys: Set<string> = new Set<string>();\n\t\tthis._defaultConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis.userConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis._workspaceConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis._folderConfigurations.forEach(folderConfiguraiton => folderConfiguraiton.freeze().keys.forEach(key => keys.add(key)));\n\t\treturn [...keys.values()];\n\t}\n\n\tprotected allOverrideIdentifiers(): string[] {\n\t\tconst keys: Set<string> = new Set<string>();\n\t\tthis._defaultConfiguration.freeze().getAllOverrideIdentifiers().forEach(key => keys.add(key));\n\t\tthis.userConfiguration.freeze().getAllOverrideIdentifiers().forEach(key => keys.add(key));\n\t\tthis._workspaceConfiguration.freeze().getAllOverrideIdentifiers().forEach(key => keys.add(key));\n\t\tthis._folderConfigurations.forEach(folderConfiguraiton => folderConfiguraiton.freeze().getAllOverrideIdentifiers().forEach(key => keys.add(key)));\n\t\treturn [...keys.values()];\n\t}\n\n\tprotected getAllKeysForOverrideIdentifier(overrideIdentifier: string): string[] {\n\t\tconst keys: Set<string> = new Set<string>();\n\t\tthis._defaultConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis.userConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis._workspaceConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis._folderConfigurations.forEach(folderConfiguraiton => folderConfiguraiton.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key)));\n\t\treturn [...keys.values()];\n\t}\n\n\tstatic parse(data: IConfigurationData): Configuration {\n\t\tconst defaultConfiguration = this.parseConfigurationModel(data.defaults);\n\t\tconst policyConfiguration = this.parseConfigurationModel(data.policy);\n\t\tconst applicationConfiguration = this.parseConfigurationModel(data.application);\n\t\tconst userConfiguration = this.parseConfigurationModel(data.user);\n\t\tconst workspaceConfiguration = this.parseConfigurationModel(data.workspace);\n\t\tconst folders: ResourceMap<ConfigurationModel> = data.folders.reduce((result, value) => {\n\t\t\tresult.set(URI.revive(value[0]), this.parseConfigurationModel(value[1]));\n\t\t\treturn result;\n\t\t}, new ResourceMap<ConfigurationModel>());\n\t\treturn new Configuration(defaultConfiguration, policyConfiguration, applicationConfiguration, userConfiguration, new ConfigurationModel(), workspaceConfiguration, folders, new ConfigurationModel(), new ResourceMap<ConfigurationModel>(), false);\n\t}\n\n\tprivate static parseConfigurationModel(model: IConfigurationModel): ConfigurationModel {\n\t\treturn new ConfigurationModel(model.contents, model.keys, model.overrides).freeze();\n\t}\n\n}\n\nexport function mergeChanges(...changes: IConfigurationChange[]): IConfigurationChange {\n\tif (changes.length === 0) {\n\t\treturn { keys: [], overrides: [] };\n\t}\n\tif (changes.length === 1) {\n\t\treturn changes[0];\n\t}\n\tconst keysSet = new Set<string>();\n\tconst overridesMap = new Map<string, Set<string>>();\n\tfor (const change of changes) {\n\t\tchange.keys.forEach(key => keysSet.add(key));\n\t\tchange.overrides.forEach(([identifier, keys]) => {\n\t\t\tconst result = getOrSet(overridesMap, identifier, new Set<string>());\n\t\t\tkeys.forEach(key => result.add(key));\n\t\t});\n\t}\n\tconst overrides: [string, string[]][] = [];\n\toverridesMap.forEach((keys, identifier) => overrides.push([identifier, [...keys.values()]]));\n\treturn { keys: [...keysSet.values()], overrides };\n}\n\nexport class ConfigurationChangeEvent implements IConfigurationChangeEvent {\n\n\tprivate readonly affectedKeysTree: any;\n\treadonly affectedKeys: string[];\n\tsource!: ConfigurationTarget;\n\tsourceConfig: any;\n\n\tconstructor(readonly change: IConfigurationChange, private readonly previous: { workspace?: Workspace; data: IConfigurationData } | undefined, private readonly currentConfiguraiton: Configuration, private readonly currentWorkspace?: Workspace) {\n\t\tconst keysSet = new Set<string>();\n\t\tchange.keys.forEach(key => keysSet.add(key));\n\t\tchange.overrides.forEach(([, keys]) => keys.forEach(key => keysSet.add(key)));\n\t\tthis.affectedKeys = [...keysSet.values()];\n\n\t\tconst configurationModel = new ConfigurationModel();\n\t\tthis.affectedKeys.forEach(key => configurationModel.setValue(key, {}));\n\t\tthis.affectedKeysTree = configurationModel.contents;\n\t}\n\n\tprivate _previousConfiguration: Configuration | undefined = undefined;\n\tget previousConfiguration(): Configuration | undefined {\n\t\tif (!this._previousConfiguration && this.previous) {\n\t\t\tthis._previousConfiguration = Configuration.parse(this.previous.data);\n\t\t}\n\t\treturn this._previousConfiguration;\n\t}\n\n\taffectsConfiguration(section: string, overrides?: IConfigurationOverrides): boolean {\n\t\tif (this.doesAffectedKeysTreeContains(this.affectedKeysTree, section)) {\n\t\t\tif (overrides) {\n\t\t\t\tconst value1 = this.previousConfiguration ? this.previousConfiguration.getValue(section, overrides, this.previous?.workspace) : undefined;\n\t\t\t\tconst value2 = this.currentConfiguraiton.getValue(section, overrides, this.currentWorkspace);\n\t\t\t\treturn !objects.equals(value1, value2);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate doesAffectedKeysTreeContains(affectedKeysTree: any, section: string): boolean {\n\t\tlet requestedTree = toValuesTree({ [section]: true }, () => { });\n\n\t\tlet key;\n\t\twhile (typeof requestedTree === 'object' && (key = Object.keys(requestedTree)[0])) { // Only one key should present, since we added only one property\n\t\t\taffectedKeysTree = affectedKeysTree[key];\n\t\t\tif (!affectedKeysTree) {\n\t\t\t\treturn false; // Requested tree is not found\n\t\t\t}\n\t\t\trequestedTree = requestedTree[key];\n\t\t}\n\t\treturn true;\n\t}\n}\n\nexport class AllKeysConfigurationChangeEvent extends ConfigurationChangeEvent {\n\tconstructor(configuration: Configuration, workspace: Workspace, source: ConfigurationTarget, sourceConfig: any) {\n\t\tsuper({ keys: configuration.allKeys(), overrides: [] }, undefined, configuration, workspace);\n\t\tthis.source = source;\n\t\tthis.sourceConfig = sourceConfig;\n\t}\n}\n\nfunction compare(from: ConfigurationModel | undefined, to: ConfigurationModel | undefined): IConfigurationCompareResult {\n\tconst { added, removed, updated } = compareConfigurationContents(to, from);\n\tconst overrides: [string, string[]][] = [];\n\n\tconst fromOverrideIdentifiers = from?.getAllOverrideIdentifiers() || [];\n\tconst toOverrideIdentifiers = to?.getAllOverrideIdentifiers() || [];\n\n\tif (to) {\n\t\tconst addedOverrideIdentifiers = toOverrideIdentifiers.filter(key => !fromOverrideIdentifiers.includes(key));\n\t\tfor (const identifier of addedOverrideIdentifiers) {\n\t\t\toverrides.push([identifier, to.getKeysForOverrideIdentifier(identifier)]);\n\t\t}\n\t}\n\n\tif (from) {\n\t\tconst removedOverrideIdentifiers = fromOverrideIdentifiers.filter(key => !toOverrideIdentifiers.includes(key));\n\t\tfor (const identifier of removedOverrideIdentifiers) {\n\t\t\toverrides.push([identifier, from.getKeysForOverrideIdentifier(identifier)]);\n\t\t}\n\t}\n\n\tif (to && from) {\n\t\tfor (const identifier of fromOverrideIdentifiers) {\n\t\t\tif (toOverrideIdentifiers.includes(identifier)) {\n\t\t\t\tconst result = compareConfigurationContents({ contents: from.getOverrideValue(undefined, identifier) || {}, keys: from.getKeysForOverrideIdentifier(identifier) }, { contents: to.getOverrideValue(undefined, identifier) || {}, keys: to.getKeysForOverrideIdentifier(identifier) });\n\t\t\t\toverrides.push([identifier, [...result.added, ...result.removed, ...result.updated]]);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { added, removed, updated, overrides };\n}\n\nfunction compareConfigurationContents(to: { keys: string[]; contents: any } | undefined, from: { keys: string[]; contents: any } | undefined) {\n\tconst added = to\n\t\t? from ? to.keys.filter(key => from.keys.indexOf(key) === -1) : [...to.keys]\n\t\t: [];\n\tconst removed = from\n\t\t? to ? from.keys.filter(key => to.keys.indexOf(key) === -1) : [...from.keys]\n\t\t: [];\n\tconst updated: string[] = [];\n\n\tif (to && from) {\n\t\tfor (const key of from.keys) {\n\t\t\tif (to.keys.indexOf(key) !== -1) {\n\t\t\t\tconst value1 = getConfigurationValue(from.contents, key);\n\t\t\t\tconst value2 = getConfigurationValue(to.contents, key);\n\t\t\t\tif (!objects.equals(value1, value2)) {\n\t\t\t\t\tupdated.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn { added, removed, updated };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { coalesce } from 'vs/base/common/arrays';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { equals } from 'vs/base/common/objects';\nimport { isEmptyObject } from 'vs/base/common/types';\nimport { addToValueTree, IOverrides, toValuesTree } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationModel } from 'vs/platform/configuration/common/configurationModels';\nimport { Extensions, IConfigurationRegistry, overrideIdentifiersFromKey, OVERRIDE_PROPERTY_REGEX } from 'vs/platform/configuration/common/configurationRegistry';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IPolicyService, PolicyDefinition, PolicyName, PolicyValue } from 'vs/platform/policy/common/policy';\nimport { Registry } from 'vs/platform/registry/common/platform';\n\nexport class DefaultConfiguration extends Disposable {\n\n\tprivate readonly _onDidChangeConfiguration = this._register(new Emitter<{ defaults: ConfigurationModel; properties: string[] }>());\n\treadonly onDidChangeConfiguration = this._onDidChangeConfiguration.event;\n\n\tprivate _configurationModel: ConfigurationModel | undefined;\n\tget configurationModel(): ConfigurationModel {\n\t\tif (!this._configurationModel) {\n\t\t\tthis._configurationModel = new DefaultConfigurationModel(this.getConfigurationDefaultOverrides());\n\t\t}\n\t\treturn this._configurationModel;\n\t}\n\n\tasync initialize(): Promise<ConfigurationModel> {\n\t\tthis._configurationModel = undefined;\n\t\tthis._register(Registry.as<IConfigurationRegistry>(Extensions.Configuration).onDidUpdateConfiguration(({ properties, defaultsOverrides }) => this.onDidUpdateConfiguration(properties, defaultsOverrides)));\n\t\treturn this.configurationModel;\n\t}\n\n\treload(): ConfigurationModel {\n\t\tthis._configurationModel = undefined;\n\t\treturn this.configurationModel;\n\t}\n\n\tprotected onDidUpdateConfiguration(properties: string[], defaultsOverrides?: boolean): void {\n\t\tthis._configurationModel = undefined;\n\t\tthis._onDidChangeConfiguration.fire({ defaults: this.configurationModel, properties });\n\t}\n\n\tprotected getConfigurationDefaultOverrides(): IStringDictionary<any> {\n\t\treturn {};\n\t}\n\n}\n\nexport class DefaultConfigurationModel extends ConfigurationModel {\n\n\tconstructor(configurationDefaultsOverrides: IStringDictionary<any> = {}) {\n\t\tconst properties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\t\tconst keys = Object.keys(properties);\n\t\tconst contents: any = Object.create(null);\n\t\tconst overrides: IOverrides[] = [];\n\n\t\tfor (const key in properties) {\n\t\t\tconst defaultOverrideValue = configurationDefaultsOverrides[key];\n\t\t\tconst value = defaultOverrideValue !== undefined ? defaultOverrideValue : properties[key].default;\n\t\t\taddToValueTree(contents, key, value, message => console.error(`Conflict in default settings: ${message}`));\n\t\t}\n\t\tfor (const key of Object.keys(contents)) {\n\t\t\tif (OVERRIDE_PROPERTY_REGEX.test(key)) {\n\t\t\t\toverrides.push({\n\t\t\t\t\tidentifiers: overrideIdentifiersFromKey(key),\n\t\t\t\t\tkeys: Object.keys(contents[key]),\n\t\t\t\t\tcontents: toValuesTree(contents[key], message => console.error(`Conflict in default settings file: ${message}`)),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tsuper(contents, keys, overrides);\n\t}\n}\n\nexport interface IPolicyConfiguration {\n\treadonly onDidChangeConfiguration: Event<ConfigurationModel>;\n\treadonly configurationModel: ConfigurationModel;\n\tinitialize(): Promise<ConfigurationModel>;\n}\n\nexport class NullPolicyConfiguration implements IPolicyConfiguration {\n\treadonly onDidChangeConfiguration = Event.None;\n\treadonly configurationModel = new ConfigurationModel();\n\tasync initialize() { return this.configurationModel; }\n}\n\nexport class PolicyConfiguration extends Disposable implements IPolicyConfiguration {\n\n\tprivate readonly _onDidChangeConfiguration = this._register(new Emitter<ConfigurationModel>());\n\treadonly onDidChangeConfiguration = this._onDidChangeConfiguration.event;\n\n\tprivate _configurationModel = new ConfigurationModel();\n\tget configurationModel() { return this._configurationModel; }\n\n\tconstructor(\n\t\tprivate readonly defaultConfiguration: DefaultConfiguration,\n\t\t@IPolicyService private readonly policyService: IPolicyService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t}\n\n\tasync initialize(): Promise<ConfigurationModel> {\n\t\tthis.update(await this.registerPolicyDefinitions(this.defaultConfiguration.configurationModel.keys), false);\n\t\tthis._register(this.policyService.onDidChange(policyNames => this.onDidChangePolicies(policyNames)));\n\t\tthis._register(this.defaultConfiguration.onDidChangeConfiguration(async ({ properties }) => this.update(await this.registerPolicyDefinitions(properties), true)));\n\t\treturn this._configurationModel;\n\t}\n\n\tprivate async registerPolicyDefinitions(properties: string[]): Promise<string[]> {\n\t\tconst policyDefinitions: IStringDictionary<PolicyDefinition> = {};\n\t\tconst keys: string[] = [];\n\t\tconst configurationProperties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\n\t\tfor (const key of properties) {\n\t\t\tconst config = configurationProperties[key];\n\t\t\tif (!config) {\n\t\t\t\t// Config is removed. So add it to the list if in case it was registered as policy before\n\t\t\t\tkeys.push(key);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (config.policy) {\n\t\t\t\tif (config.type !== 'string' && config.type !== 'number') {\n\t\t\t\t\tthis.logService.warn(`Policy ${config.policy.name} has unsupported type ${config.type}`);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tkeys.push(key);\n\t\t\t\tpolicyDefinitions[config.policy.name] = { type: config.type };\n\t\t\t}\n\t\t}\n\n\t\tif (!isEmptyObject(policyDefinitions)) {\n\t\t\tawait this.policyService.registerPolicyDefinitions(policyDefinitions);\n\t\t}\n\n\t\treturn keys;\n\t}\n\n\tprivate onDidChangePolicies(policyNames: readonly PolicyName[]): void {\n\t\tconst policyConfigurations = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getPolicyConfigurations();\n\t\tconst keys = coalesce(policyNames.map(policyName => policyConfigurations.get(policyName)));\n\t\tthis.update(keys, true);\n\t}\n\n\tprivate update(keys: string[], trigger: boolean): void {\n\t\tconst configurationProperties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\t\tconst changed: [string, PolicyValue | undefined][] = [];\n\t\tconst wasEmpty = this._configurationModel.isEmpty();\n\n\t\tfor (const key of keys) {\n\t\t\tconst policyName = configurationProperties[key]?.policy?.name;\n\t\t\tif (policyName) {\n\t\t\t\tconst policyValue = this.policyService.getPolicyValue(policyName);\n\t\t\t\tif (wasEmpty ? policyValue !== undefined : !equals(this._configurationModel.getValue(key), policyValue)) {\n\t\t\t\t\tchanged.push([key, policyValue]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this._configurationModel.getValue(key) !== undefined) {\n\t\t\t\t\tchanged.push([key, undefined]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (changed.length) {\n\t\t\tconst old = this._configurationModel;\n\t\t\tthis._configurationModel = new ConfigurationModel();\n\t\t\tfor (const key of old.keys) {\n\t\t\t\tthis._configurationModel.setValue(key, old.getValue(key));\n\t\t\t}\n\t\t\tfor (const [key, policyValue] of changed) {\n\t\t\t\tif (policyValue === undefined) {\n\t\t\t\t\tthis._configurationModel.removeValue(key);\n\t\t\t\t} else {\n\t\t\t\t\tthis._configurationModel.setValue(key, policyValue);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (trigger) {\n\t\t\t\tthis._onDidChangeConfiguration.fire(this._configurationModel);\n\t\t\t}\n\t\t}\n\t}\n\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { extUriBiasedIgnorePathCase } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { ConfigurationTarget, IConfigurationChange, IConfigurationChangeEvent, IConfigurationData, IConfigurationOverrides, IConfigurationService, IConfigurationValue, isConfigurationOverrides } from 'vs/platform/configuration/common/configuration';\nimport { Configuration, ConfigurationChangeEvent, ConfigurationModel, UserSettings } from 'vs/platform/configuration/common/configurationModels';\nimport { DefaultConfiguration, IPolicyConfiguration, NullPolicyConfiguration, PolicyConfiguration } from 'vs/platform/configuration/common/configurations';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IPolicyService, NullPolicyService } from 'vs/platform/policy/common/policy';\n\nexport class ConfigurationService extends Disposable implements IConfigurationService, IDisposable {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate configuration: Configuration;\n\tprivate readonly defaultConfiguration: DefaultConfiguration;\n\tprivate readonly policyConfiguration: IPolicyConfiguration;\n\tprivate readonly userConfiguration: UserSettings;\n\tprivate readonly reloadConfigurationScheduler: RunOnceScheduler;\n\n\tprivate readonly _onDidChangeConfiguration: Emitter<IConfigurationChangeEvent> = this._register(new Emitter<IConfigurationChangeEvent>());\n\treadonly onDidChangeConfiguration: Event<IConfigurationChangeEvent> = this._onDidChangeConfiguration.event;\n\n\tconstructor(\n\t\tprivate readonly settingsResource: URI,\n\t\tfileService: IFileService,\n\t\tpolicyService: IPolicyService,\n\t\tlogService: ILogService,\n\t) {\n\t\tsuper();\n\t\tthis.defaultConfiguration = this._register(new DefaultConfiguration());\n\t\tthis.policyConfiguration = policyService instanceof NullPolicyService ? new NullPolicyConfiguration() : this._register(new PolicyConfiguration(this.defaultConfiguration, policyService, logService));\n\t\tthis.userConfiguration = this._register(new UserSettings(this.settingsResource, undefined, extUriBiasedIgnorePathCase, fileService));\n\t\tthis.configuration = new Configuration(this.defaultConfiguration.configurationModel, this.policyConfiguration.configurationModel, new ConfigurationModel(), new ConfigurationModel());\n\n\t\tthis.reloadConfigurationScheduler = this._register(new RunOnceScheduler(() => this.reloadConfiguration(), 50));\n\t\tthis._register(this.defaultConfiguration.onDidChangeConfiguration(({ defaults, properties }) => this.onDidDefaultConfigurationChange(defaults, properties)));\n\t\tthis._register(this.policyConfiguration.onDidChangeConfiguration(model => this.onDidPolicyConfigurationChange(model)));\n\t\tthis._register(this.userConfiguration.onDidChange(() => this.reloadConfigurationScheduler.schedule()));\n\t}\n\n\tasync initialize(): Promise<void> {\n\t\tconst [defaultModel, policyModel, userModel] = await Promise.all([this.defaultConfiguration.initialize(), this.policyConfiguration.initialize(), this.userConfiguration.loadConfiguration()]);\n\t\tthis.configuration = new Configuration(defaultModel, policyModel, new ConfigurationModel(), userModel);\n\t}\n\n\tgetConfigurationData(): IConfigurationData {\n\t\treturn this.configuration.toData();\n\t}\n\n\tgetValue<T>(): T;\n\tgetValue<T>(section: string): T;\n\tgetValue<T>(overrides: IConfigurationOverrides): T;\n\tgetValue<T>(section: string, overrides: IConfigurationOverrides): T;\n\tgetValue(arg1?: any, arg2?: any): any {\n\t\tconst section = typeof arg1 === 'string' ? arg1 : undefined;\n\t\tconst overrides = isConfigurationOverrides(arg1) ? arg1 : isConfigurationOverrides(arg2) ? arg2 : {};\n\t\treturn this.configuration.getValue(section, overrides, undefined);\n\t}\n\n\tupdateValue(key: string, value: any): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides): Promise<void>;\n\tupdateValue(key: string, value: any, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, arg3?: any, arg4?: any): Promise<void> {\n\t\treturn Promise.reject(new Error('not supported'));\n\t}\n\n\tinspect<T>(key: string): IConfigurationValue<T> {\n\t\treturn this.configuration.inspect<T>(key, {}, undefined);\n\t}\n\n\tkeys(): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t} {\n\t\treturn this.configuration.keys(undefined);\n\t}\n\n\tasync reloadConfiguration(): Promise<void> {\n\t\tconst configurationModel = await this.userConfiguration.loadConfiguration();\n\t\tthis.onDidChangeUserConfiguration(configurationModel);\n\t}\n\n\tprivate onDidChangeUserConfiguration(userConfigurationModel: ConfigurationModel): void {\n\t\tconst previous = this.configuration.toData();\n\t\tconst change = this.configuration.compareAndUpdateLocalUserConfiguration(userConfigurationModel);\n\t\tthis.trigger(change, previous, ConfigurationTarget.USER);\n\t}\n\n\tprivate onDidDefaultConfigurationChange(defaultConfigurationModel: ConfigurationModel, properties: string[]): void {\n\t\tconst previous = this.configuration.toData();\n\t\tconst change = this.configuration.compareAndUpdateDefaultConfiguration(defaultConfigurationModel, properties);\n\t\tthis.trigger(change, previous, ConfigurationTarget.DEFAULT);\n\t}\n\n\tprivate onDidPolicyConfigurationChange(policyConfiguration: ConfigurationModel): void {\n\t\tconst previous = this.configuration.toData();\n\t\tconst change = this.configuration.compareAndUpdatePolicyConfiguration(policyConfiguration);\n\t\tthis.trigger(change, previous, ConfigurationTarget.DEFAULT);\n\t}\n\n\tprivate trigger(configurationChange: IConfigurationChange, previous: IConfigurationData, source: ConfigurationTarget): void {\n\t\tconst event = new ConfigurationChangeEvent(configurationChange, { data: previous }, this.configuration);\n\t\tevent.source = source;\n\t\tevent.sourceConfig = this.getTargetConfiguration(source);\n\t\tthis._onDidChangeConfiguration.fire(event);\n\t}\n\n\tprivate getTargetConfiguration(target: ConfigurationTarget): any {\n\t\tswitch (target) {\n\t\t\tcase ConfigurationTarget.DEFAULT:\n\t\t\t\treturn this.configuration.defaults.contents;\n\t\t\tcase ConfigurationTarget.USER:\n\t\t\t\treturn this.configuration.localUserConfiguration.contents;\n\t\t}\n\t\treturn {};\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ErrorNoTelemetry } from 'vs/base/common/errors';\nimport { Event } from 'vs/base/common/event';\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IRemoteAuthorityResolverService = createDecorator<IRemoteAuthorityResolverService>('remoteAuthorityResolverService');\n\nexport interface ResolvedAuthority {\n\treadonly authority: string;\n\treadonly host: string;\n\treadonly port: number;\n\treadonly connectionToken: string | undefined;\n}\n\nexport interface ResolvedOptions {\n\treadonly extensionHostEnv?: { [key: string]: string | null };\n\treadonly isTrusted?: boolean;\n\treadonly authenticationSession?: { id: string; providerId: string };\n}\n\nexport interface TunnelDescription {\n\tremoteAddress: { port: number; host: string };\n\tlocalAddress: { port: number; host: string } | string;\n\tprivacy?: string;\n\tprotocol?: string;\n}\nexport interface TunnelPrivacy {\n\tthemeIcon: string;\n\tid: string;\n\tlabel: string;\n}\nexport interface TunnelInformation {\n\tenvironmentTunnels?: TunnelDescription[];\n\tfeatures?: {\n\t\televation: boolean;\n\t\tpublic?: boolean;\n\t\tprivacyOptions: TunnelPrivacy[];\n\t};\n}\n\nexport interface ResolverResult {\n\tauthority: ResolvedAuthority;\n\toptions?: ResolvedOptions;\n\ttunnelInformation?: TunnelInformation;\n}\n\nexport interface IRemoteConnectionData {\n\thost: string;\n\tport: number;\n\tconnectionToken: string | undefined;\n}\n\nexport enum RemoteAuthorityResolverErrorCode {\n\tUnknown = 'Unknown',\n\tNotAvailable = 'NotAvailable',\n\tTemporarilyNotAvailable = 'TemporarilyNotAvailable',\n\tNoResolverFound = 'NoResolverFound'\n}\n\nexport class RemoteAuthorityResolverError extends ErrorNoTelemetry {\n\n\tpublic static isTemporarilyNotAvailable(err: any): boolean {\n\t\treturn (err instanceof RemoteAuthorityResolverError) && err._code === RemoteAuthorityResolverErrorCode.TemporarilyNotAvailable;\n\t}\n\n\tpublic static isNoResolverFound(err: any): err is RemoteAuthorityResolverError {\n\t\treturn (err instanceof RemoteAuthorityResolverError) && err._code === RemoteAuthorityResolverErrorCode.NoResolverFound;\n\t}\n\n\tpublic static isHandled(err: any): boolean {\n\t\treturn (err instanceof RemoteAuthorityResolverError) && err.isHandled;\n\t}\n\n\tpublic readonly _message: string | undefined;\n\tpublic readonly _code: RemoteAuthorityResolverErrorCode;\n\tpublic readonly _detail: any;\n\n\tpublic isHandled: boolean;\n\n\tconstructor(message?: string, code: RemoteAuthorityResolverErrorCode = RemoteAuthorityResolverErrorCode.Unknown, detail?: any) {\n\t\tsuper(message);\n\n\t\tthis._message = message;\n\t\tthis._code = code;\n\t\tthis._detail = detail;\n\n\t\tthis.isHandled = (code === RemoteAuthorityResolverErrorCode.NotAvailable) && detail === true;\n\n\t\t// workaround when extending builtin objects and when compiling to ES5, see:\n\t\t// https://github.com/microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n\t\tif (typeof (<any>Object).setPrototypeOf === 'function') {\n\t\t\t(<any>Object).setPrototypeOf(this, RemoteAuthorityResolverError.prototype);\n\t\t}\n\t}\n}\n\nexport interface IRemoteAuthorityResolverService {\n\n\treadonly _serviceBrand: undefined;\n\n\treadonly onDidChangeConnectionData: Event<void>;\n\n\tresolveAuthority(authority: string): Promise<ResolverResult>;\n\tgetConnectionData(authority: string): IRemoteConnectionData | null;\n\t/**\n\t * Get the canonical URI for a `vscode-remote://` URI.\n\t *\n\t * **NOTE**: This can throw e.g. in cases where there is no resolver installed for the specific remote authority.\n\t *\n\t * @param uri The `vscode-remote://` URI\n\t */\n\tgetCanonicalURI(uri: URI): Promise<URI>;\n\n\t_clearResolvedAuthority(authority: string): void;\n\t_setResolvedAuthority(resolvedAuthority: ResolvedAuthority, resolvedOptions?: ResolvedOptions): void;\n\t_setResolvedAuthorityError(authority: string, err: any): void;\n\t_setAuthorityConnectionToken(authority: string, connectionToken: string): void;\n\t_setCanonicalURIProvider(provider: (uri: URI) => Promise<URI>): void;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Schemas } from 'vs/base/common/network';\nimport { URI } from 'vs/base/common/uri';\n\nexport function getRemoteAuthority(uri: URI): string | undefined {\n\treturn uri.scheme === Schemas.vscodeRemote ? uri.authority : undefined;\n}\n\nexport function getRemoteName(authority: string): string;\nexport function getRemoteName(authority: undefined): undefined;\nexport function getRemoteName(authority: string | undefined): string | undefined;\nexport function getRemoteName(authority: string | undefined): string | undefined {\n\tif (!authority) {\n\t\treturn undefined;\n\t}\n\tconst pos = authority.indexOf('+');\n\tif (pos < 0) {\n\t\t// e.g. localhost:8000\n\t\treturn authority;\n\t}\n\treturn authority.substr(0, pos);\n}\n\n/**\n * The root path to use when accessing the remote server. The path contains the quality and commit of the current build.\n * @param product\n * @returns\n */\nexport function getRemoteServerRootPath(product: { quality?: string; commit?: string }): string {\n\treturn `/${product.quality ?? 'oss'}-${product.commit ?? 'dev'}`;\n}\n\nexport function parseAuthorityWithPort(authority: string): { host: string; port: number } {\n\tconst { host, port } = parseAuthority(authority);\n\tif (typeof port === 'undefined') {\n\t\tthrow new Error(`Remote authority doesn't contain a port!`);\n\t}\n\treturn { host, port };\n}\n\nexport function parseAuthorityWithOptionalPort(authority: string, defaultPort: number): { host: string; port: number } {\n\tlet { host, port } = parseAuthority(authority);\n\tif (typeof port === 'undefined') {\n\t\tport = defaultPort;\n\t}\n\treturn { host, port };\n}\n\nfunction parseAuthority(authority: string): { host: string; port: number | undefined } {\n\t// check for ipv6 with port\n\tconst m1 = authority.match(/^(\\[[0-9a-z:]+\\]):(\\d+)$/);\n\tif (m1) {\n\t\treturn { host: m1[1], port: parseInt(m1[2], 10) };\n\t}\n\n\t// check for ipv6 without port\n\tconst m2 = authority.match(/^(\\[[0-9a-z:]+\\])$/);\n\tif (m2) {\n\t\treturn { host: m2[1], port: undefined };\n\t}\n\n\t// anything with a trailing port\n\tconst m3 = authority.match(/(.*):(\\d+)$/);\n\tif (m3) {\n\t\treturn { host: m3[1], port: parseInt(m3[2], 10) };\n\t}\n\n\t// doesn't contain a port\n\treturn { host: authority, port: undefined };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport Severity from 'vs/base/common/severity';\nimport * as strings from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\nimport { ExtensionKind } from 'vs/platform/environment/common/environment';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { getRemoteName } from 'vs/platform/remote/common/remoteHosts';\n\nexport const MANIFEST_CACHE_FOLDER = 'CachedExtensions';\nexport const USER_MANIFEST_CACHE_FILE = 'user';\nexport const BUILTIN_MANIFEST_CACHE_FILE = 'builtin';\nexport const UNDEFINED_PUBLISHER = 'undefined_publisher';\n\nexport interface ICommand {\n\tcommand: string;\n\ttitle: string;\n\tcategory?: string;\n}\n\nexport interface IConfigurationProperty {\n\tdescription: string;\n\ttype: string | string[];\n\tdefault?: any;\n}\n\nexport interface IConfiguration {\n\tid?: string;\n\torder?: number;\n\ttitle?: string;\n\tproperties: { [key: string]: IConfigurationProperty };\n}\n\nexport interface IDebugger {\n\tlabel?: string;\n\ttype: string;\n\truntime?: string;\n}\n\nexport interface IGrammar {\n\tlanguage: string;\n}\n\nexport interface IJSONValidation {\n\tfileMatch: string | string[];\n\turl: string;\n}\n\nexport interface IKeyBinding {\n\tcommand: string;\n\tkey: string;\n\twhen?: string;\n\tmac?: string;\n\tlinux?: string;\n\twin?: string;\n}\n\nexport interface ILanguage {\n\tid: string;\n\textensions: string[];\n\taliases: string[];\n}\n\nexport interface IMenu {\n\tcommand: string;\n\talt?: string;\n\twhen?: string;\n\tgroup?: string;\n}\n\nexport interface ISnippet {\n\tlanguage: string;\n}\n\nexport interface ITheme {\n\tlabel: string;\n}\n\nexport interface IViewContainer {\n\tid: string;\n\ttitle: string;\n}\n\nexport interface IView {\n\tid: string;\n\tname: string;\n}\n\nexport interface IColor {\n\tid: string;\n\tdescription: string;\n\tdefaults: { light: string; dark: string; highContrast: string };\n}\n\nexport interface IWebviewEditor {\n\treadonly viewType: string;\n\treadonly priority: string;\n\treadonly selector: readonly {\n\t\treadonly filenamePattern?: string;\n\t}[];\n}\n\nexport interface ICodeActionContributionAction {\n\treadonly kind: string;\n\treadonly title: string;\n\treadonly description?: string;\n}\n\nexport interface ICodeActionContribution {\n\treadonly languages: readonly string[];\n\treadonly actions: readonly ICodeActionContributionAction[];\n}\n\nexport interface IAuthenticationContribution {\n\treadonly id: string;\n\treadonly label: string;\n}\n\nexport interface IWalkthroughStep {\n\treadonly id: string;\n\treadonly title: string;\n\treadonly description: string | undefined;\n\treadonly media:\n\t| { image: string | { dark: string; light: string; hc: string }; altText: string; markdown?: never; svg?: never }\n\t| { markdown: string; image?: never; svg?: never }\n\t| { svg: string; altText: string; markdown?: never; image?: never };\n\treadonly completionEvents?: string[];\n\t/** @deprecated use `completionEvents: 'onCommand:...'` */\n\treadonly doneOn?: { command: string };\n\treadonly when?: string;\n}\n\nexport interface IWalkthrough {\n\treadonly id: string;\n\treadonly title: string;\n\treadonly description: string;\n\treadonly steps: IWalkthroughStep[];\n\treadonly featuredFor: string[] | undefined;\n\treadonly when?: string;\n}\n\nexport interface IStartEntry {\n\treadonly title: string;\n\treadonly description: string;\n\treadonly command: string;\n\treadonly when?: string;\n\treadonly category: 'file' | 'folder' | 'notebook';\n}\n\nexport interface INotebookEntry {\n\treadonly type: string;\n\treadonly displayName: string;\n}\n\nexport interface INotebookRendererContribution {\n\treadonly id: string;\n\treadonly displayName: string;\n\treadonly mimeTypes: string[];\n}\n\nexport interface ITranslation {\n\tid: string;\n\tpath: string;\n}\n\nexport interface ILocalizationContribution {\n\tlanguageId: string;\n\tlanguageName?: string;\n\tlocalizedLanguageName?: string;\n\ttranslations: ITranslation[];\n\tminimalTranslations?: { [key: string]: string };\n}\n\nexport interface IExtensionContributions {\n\tcommands?: ICommand[];\n\tconfiguration?: IConfiguration | IConfiguration[];\n\tdebuggers?: IDebugger[];\n\tgrammars?: IGrammar[];\n\tjsonValidation?: IJSONValidation[];\n\tkeybindings?: IKeyBinding[];\n\tlanguages?: ILanguage[];\n\tmenus?: { [context: string]: IMenu[] };\n\tsnippets?: ISnippet[];\n\tthemes?: ITheme[];\n\ticonThemes?: ITheme[];\n\tproductIconThemes?: ITheme[];\n\tviewsContainers?: { [location: string]: IViewContainer[] };\n\tviews?: { [location: string]: IView[] };\n\tcolors?: IColor[];\n\tlocalizations?: ILocalizationContribution[];\n\treadonly customEditors?: readonly IWebviewEditor[];\n\treadonly codeActions?: readonly ICodeActionContribution[];\n\tauthentication?: IAuthenticationContribution[];\n\twalkthroughs?: IWalkthrough[];\n\tstartEntries?: IStartEntry[];\n\treadonly notebooks?: INotebookEntry[];\n\treadonly notebookRenderer?: INotebookRendererContribution[];\n}\n\nexport interface IExtensionCapabilities {\n\treadonly virtualWorkspaces?: ExtensionVirtualWorkspaceSupport;\n\treadonly untrustedWorkspaces?: ExtensionUntrustedWorkspaceSupport;\n}\n\n\nexport const ALL_EXTENSION_KINDS: readonly ExtensionKind[] = ['ui', 'workspace', 'web'];\n\nexport type LimitedWorkspaceSupportType = 'limited';\nexport type ExtensionUntrustedWorkspaceSupportType = boolean | LimitedWorkspaceSupportType;\nexport type ExtensionUntrustedWorkspaceSupport = { supported: true } | { supported: false; description: string } | { supported: LimitedWorkspaceSupportType; description: string; restrictedConfigurations?: string[] };\n\nexport type ExtensionVirtualWorkspaceSupportType = boolean | LimitedWorkspaceSupportType;\nexport type ExtensionVirtualWorkspaceSupport = boolean | { supported: true } | { supported: false | LimitedWorkspaceSupportType; description: string };\n\nexport function getWorkspaceSupportTypeMessage(supportType: ExtensionUntrustedWorkspaceSupport | ExtensionVirtualWorkspaceSupport | undefined): string | undefined {\n\tif (typeof supportType === 'object' && supportType !== null) {\n\t\tif (supportType.supported !== true) {\n\t\t\treturn supportType.description;\n\t\t}\n\t}\n\treturn undefined;\n}\n\n\nexport function isIExtensionIdentifier(thing: any): thing is IExtensionIdentifier {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.id === 'string'\n\t\t&& (!thing.uuid || typeof thing.uuid === 'string');\n}\n\nexport interface IExtensionIdentifier {\n\tid: string;\n\tuuid?: string;\n}\n\nexport const EXTENSION_CATEGORIES = [\n\t'Azure',\n\t'Data Science',\n\t'Debuggers',\n\t'Extension Packs',\n\t'Education',\n\t'Formatters',\n\t'Keymaps',\n\t'Language Packs',\n\t'Linters',\n\t'Machine Learning',\n\t'Notebooks',\n\t'Programming Languages',\n\t'SCM Providers',\n\t'Snippets',\n\t'Testing',\n\t'Themes',\n\t'Visualization',\n\t'Other',\n];\n\nexport interface IRelaxedExtensionManifest {\n\tname: string;\n\tdisplayName?: string;\n\tpublisher: string;\n\tversion: string;\n\tengines: { readonly vscode: string };\n\tdescription?: string;\n\tmain?: string;\n\tbrowser?: string;\n\ticon?: string;\n\tcategories?: string[];\n\tkeywords?: string[];\n\tactivationEvents?: string[];\n\textensionDependencies?: string[];\n\textensionPack?: string[];\n\textensionKind?: ExtensionKind | ExtensionKind[];\n\tcontributes?: IExtensionContributions;\n\trepository?: { url: string };\n\tbugs?: { url: string };\n\tenabledApiProposals?: readonly string[];\n\tapi?: string;\n\tscripts?: { [key: string]: string };\n\tcapabilities?: IExtensionCapabilities;\n}\n\nexport type IExtensionManifest = Readonly<IRelaxedExtensionManifest>;\n\nexport const enum ExtensionType {\n\tSystem,\n\tUser\n}\n\nexport const enum TargetPlatform {\n\tWIN32_X64 = 'win32-x64',\n\tWIN32_IA32 = 'win32-ia32',\n\tWIN32_ARM64 = 'win32-arm64',\n\n\tLINUX_X64 = 'linux-x64',\n\tLINUX_ARM64 = 'linux-arm64',\n\tLINUX_ARMHF = 'linux-armhf',\n\n\tALPINE_X64 = 'alpine-x64',\n\tALPINE_ARM64 = 'alpine-arm64',\n\n\tDARWIN_X64 = 'darwin-x64',\n\tDARWIN_ARM64 = 'darwin-arm64',\n\n\tWEB = 'web',\n\n\tUNIVERSAL = 'universal',\n\tUNKNOWN = 'unknown',\n\tUNDEFINED = 'undefined',\n}\n\nexport interface IExtension {\n\treadonly type: ExtensionType;\n\treadonly isBuiltin: boolean;\n\treadonly identifier: IExtensionIdentifier;\n\treadonly manifest: IExtensionManifest;\n\treadonly location: URI;\n\treadonly targetPlatform: TargetPlatform;\n\treadonly readmeUrl?: URI;\n\treadonly changelogUrl?: URI;\n\treadonly isValid: boolean;\n\treadonly validations: readonly [Severity, string][];\n}\n\n/**\n * **!Do not construct directly!**\n *\n * **!Only static methods because it gets serialized!**\n *\n * This represents the \"canonical\" version for an extension identifier. Extension ids\n * have to be case-insensitive (due to the marketplace), but we must ensure case\n * preservation because the extension API is already public at this time.\n *\n * For example, given an extension with the publisher `\"Hello\"` and the name `\"World\"`,\n * its canonical extension identifier is `\"Hello.World\"`. This extension could be\n * referenced in some other extension's dependencies using the string `\"hello.world\"`.\n *\n * To make matters more complicated, an extension can optionally have an UUID. When two\n * extensions have the same UUID, they are considered equal even if their identifier is different.\n */\nexport class ExtensionIdentifier {\n\tpublic readonly value: string;\n\tprivate readonly _lower: string;\n\n\tconstructor(value: string) {\n\t\tthis.value = value;\n\t\tthis._lower = value.toLowerCase();\n\t}\n\n\tpublic static equals(a: ExtensionIdentifier | string | null | undefined, b: ExtensionIdentifier | string | null | undefined) {\n\t\tif (typeof a === 'undefined' || a === null) {\n\t\t\treturn (typeof b === 'undefined' || b === null);\n\t\t}\n\t\tif (typeof b === 'undefined' || b === null) {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof a === 'string' || typeof b === 'string') {\n\t\t\t// At least one of the arguments is an extension id in string form,\n\t\t\t// so we have to use the string comparison which ignores case.\n\t\t\tconst aValue = (typeof a === 'string' ? a : a.value);\n\t\t\tconst bValue = (typeof b === 'string' ? b : b.value);\n\t\t\treturn strings.equalsIgnoreCase(aValue, bValue);\n\t\t}\n\n\t\t// Now we know both arguments are ExtensionIdentifier\n\t\treturn (a._lower === b._lower);\n\t}\n\n\t/**\n\t * Gives the value by which to index (for equality).\n\t */\n\tpublic static toKey(id: ExtensionIdentifier | string): string {\n\t\tif (typeof id === 'string') {\n\t\t\treturn id.toLowerCase();\n\t\t}\n\t\treturn id._lower;\n\t}\n}\n\nexport interface IRelaxedExtensionDescription extends IRelaxedExtensionManifest {\n\tid?: string;\n\tidentifier: ExtensionIdentifier;\n\tuuid?: string;\n\ttargetPlatform: TargetPlatform;\n\tisBuiltin: boolean;\n\tisUserBuiltin: boolean;\n\tisUnderDevelopment: boolean;\n\textensionLocation: URI;\n}\n\nexport type IExtensionDescription = Readonly<IRelaxedExtensionDescription>;\n\nexport function isApplicationScopedExtension(manifest: IExtensionManifest): boolean {\n\treturn isLanguagePackExtension(manifest);\n}\n\nexport function isLanguagePackExtension(manifest: IExtensionManifest): boolean {\n\treturn manifest.contributes && manifest.contributes.localizations ? manifest.contributes.localizations.length > 0 : false;\n}\n\nexport function isAuthenticationProviderExtension(manifest: IExtensionManifest): boolean {\n\treturn manifest.contributes && manifest.contributes.authentication ? manifest.contributes.authentication.length > 0 : false;\n}\n\nexport function isResolverExtension(manifest: IExtensionManifest, remoteAuthority: string | undefined): boolean {\n\tif (remoteAuthority) {\n\t\tconst activationEvent = `onResolveRemoteAuthority:${getRemoteName(remoteAuthority)}`;\n\t\treturn manifest.activationEvents?.indexOf(activationEvent) !== -1;\n\t}\n\treturn false;\n}\n\nexport const IBuiltinExtensionsScannerService = createDecorator<IBuiltinExtensionsScannerService>('IBuiltinExtensionsScannerService');\nexport interface IBuiltinExtensionsScannerService {\n\treadonly _serviceBrand: undefined;\n\tscanBuiltinExtensions(): Promise<IExtension[]>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { compareIgnoreCase } from 'vs/base/common/strings';\nimport { IExtensionIdentifier, IGalleryExtension, ILocalExtension, getTargetPlatform } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionIdentifier, IExtension, TargetPlatform } from 'vs/platform/extensions/common/extensions';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { isLinux, platform } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport { getErrorMessage } from 'vs/base/common/errors';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { arch } from 'vs/base/common/process';\n\nexport function areSameExtensions(a: IExtensionIdentifier, b: IExtensionIdentifier): boolean {\n\tif (a.uuid && b.uuid) {\n\t\treturn a.uuid === b.uuid;\n\t}\n\tif (a.id === b.id) {\n\t\treturn true;\n\t}\n\treturn compareIgnoreCase(a.id, b.id) === 0;\n}\n\nconst ExtensionKeyRegex = /^([^.]+\\..+)-(\\d+\\.\\d+\\.\\d+)(-(.+))?$/;\n\nexport class ExtensionKey {\n\n\tstatic create(extension: IExtension | IGalleryExtension): ExtensionKey {\n\t\tconst version = (extension as IExtension).manifest ? (extension as IExtension).manifest.version : (extension as IGalleryExtension).version;\n\t\tconst targetPlatform = (extension as IExtension).manifest ? (extension as IExtension).targetPlatform : (extension as IGalleryExtension).properties.targetPlatform;\n\t\treturn new ExtensionKey(extension.identifier, version, targetPlatform);\n\t}\n\n\tstatic parse(key: string): ExtensionKey | null {\n\t\tconst matches = ExtensionKeyRegex.exec(key);\n\t\treturn matches && matches[1] && matches[2] ? new ExtensionKey({ id: matches[1] }, matches[2], matches[4] as TargetPlatform || undefined) : null;\n\t}\n\n\treadonly id: string;\n\n\tconstructor(\n\t\tidentifier: IExtensionIdentifier,\n\t\treadonly version: string,\n\t\treadonly targetPlatform: TargetPlatform = TargetPlatform.UNDEFINED,\n\t) {\n\t\tthis.id = identifier.id;\n\t}\n\n\ttoString(): string {\n\t\treturn `${this.id}-${this.version}${this.targetPlatform !== TargetPlatform.UNDEFINED ? `-${this.targetPlatform}` : ''}`;\n\t}\n\n\tequals(o: any): boolean {\n\t\tif (!(o instanceof ExtensionKey)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn areSameExtensions(this, o) && this.version === o.version && this.targetPlatform === o.targetPlatform;\n\t}\n}\n\nconst EXTENSION_IDENTIFIER_WITH_VERSION_REGEX = /^([^.]+\\..+)@((prerelease)|(\\d+\\.\\d+\\.\\d+(-.*)?))$/;\nexport function getIdAndVersion(id: string): [string, string | undefined] {\n\tconst matches = EXTENSION_IDENTIFIER_WITH_VERSION_REGEX.exec(id);\n\tif (matches && matches[1]) {\n\t\treturn [adoptToGalleryExtensionId(matches[1]), matches[2]];\n\t}\n\treturn [adoptToGalleryExtensionId(id), undefined];\n}\n\nexport function getExtensionId(publisher: string, name: string): string {\n\treturn `${publisher}.${name}`;\n}\n\nexport function adoptToGalleryExtensionId(id: string): string {\n\treturn id.toLocaleLowerCase();\n}\n\nexport function getGalleryExtensionId(publisher: string, name: string): string {\n\treturn adoptToGalleryExtensionId(getExtensionId(publisher, name));\n}\n\nexport function groupByExtension<T>(extensions: T[], getExtensionIdentifier: (t: T) => IExtensionIdentifier): T[][] {\n\tconst byExtension: T[][] = [];\n\tconst findGroup = (extension: T) => {\n\t\tfor (const group of byExtension) {\n\t\t\tif (group.some(e => areSameExtensions(getExtensionIdentifier(e), getExtensionIdentifier(extension)))) {\n\t\t\t\treturn group;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\tfor (const extension of extensions) {\n\t\tconst group = findGroup(extension);\n\t\tif (group) {\n\t\t\tgroup.push(extension);\n\t\t} else {\n\t\t\tbyExtension.push([extension]);\n\t\t}\n\t}\n\treturn byExtension;\n}\n\nexport function getLocalExtensionTelemetryData(extension: ILocalExtension): any {\n\treturn {\n\t\tid: extension.identifier.id,\n\t\tname: extension.manifest.name,\n\t\tgalleryId: null,\n\t\tpublisherId: extension.publisherId,\n\t\tpublisherName: extension.manifest.publisher,\n\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\tdependencies: extension.manifest.extensionDependencies && extension.manifest.extensionDependencies.length > 0\n\t};\n}\n\n\n/* __GDPR__FRAGMENT__\n\t\"GalleryExtensionTelemetryData\" : {\n\t\t\"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"name\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"galleryId\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherId\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherName\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherDisplayName\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"isPreReleaseVersion\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"dependencies\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\"${include}\": [\n\t\t\t\"${GalleryExtensionTelemetryData2}\"\n\t\t]\n\t}\n*/\nexport function getGalleryExtensionTelemetryData(extension: IGalleryExtension): any {\n\treturn {\n\t\tid: extension.identifier.id,\n\t\tname: extension.name,\n\t\tgalleryId: extension.identifier.uuid,\n\t\tpublisherId: extension.publisherId,\n\t\tpublisherName: extension.publisher,\n\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\tisPreReleaseVersion: extension.properties.isPreReleaseVersion,\n\t\tdependencies: !!(extension.properties.dependencies && extension.properties.dependencies.length > 0),\n\t\t...extension.telemetryData\n\t};\n}\n\nexport const BetterMergeId = new ExtensionIdentifier('pprice.better-merge');\n\nexport function getExtensionDependencies(installedExtensions: ReadonlyArray<IExtension>, extension: IExtension): IExtension[] {\n\tconst dependencies: IExtension[] = [];\n\tconst extensions = extension.manifest.extensionDependencies?.slice(0) ?? [];\n\n\twhile (extensions.length) {\n\t\tconst id = extensions.shift();\n\n\t\tif (id && dependencies.every(e => !areSameExtensions(e.identifier, { id }))) {\n\t\t\tconst ext = installedExtensions.filter(e => areSameExtensions(e.identifier, { id }));\n\t\t\tif (ext.length === 1) {\n\t\t\t\tdependencies.push(ext[0]);\n\t\t\t\textensions.push(...ext[0].manifest.extensionDependencies?.slice(0) ?? []);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dependencies;\n}\n\nexport async function isAlpineLinux(fileService: IFileService, logService: ILogService): Promise<boolean> {\n\tif (!isLinux) {\n\t\treturn false;\n\t}\n\tlet content: string | undefined;\n\ttry {\n\t\tconst fileContent = await fileService.readFile(URI.file('/etc/os-release'));\n\t\tcontent = fileContent.value.toString();\n\t} catch (error) {\n\t\ttry {\n\t\t\tconst fileContent = await fileService.readFile(URI.file('/usr/lib/os-release'));\n\t\t\tcontent = fileContent.value.toString();\n\t\t} catch (error) {\n\t\t\t/* Ignore */\n\t\t\tlogService.debug(`Error while getting the os-release file.`, getErrorMessage(error));\n\t\t}\n\t}\n\treturn !!content && (content.match(/^ID=([^\\u001b\\r\\n]*)/m) || [])[1] === 'alpine';\n}\n\nexport async function computeTargetPlatform(fileService: IFileService, logService: ILogService): Promise<TargetPlatform> {\n\tconst alpineLinux = await isAlpineLinux(fileService, logService);\n\tconst targetPlatform = getTargetPlatform(alpineLinux ? 'alpine' : platform, arch);\n\tlogService.debug('ComputeTargetPlatform:', targetPlatform);\n\treturn targetPlatform;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { isCancellationError } from 'vs/base/common/errors';\nimport { Schemas } from 'vs/base/common/network';\nimport { basename } from 'vs/base/common/resources';\nimport { gt } from 'vs/base/common/semver/semver';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { CLIOutput, IExtensionGalleryService, IExtensionManagementCLIService, IExtensionManagementService, IGalleryExtension, ILocalExtension, InstallOptions } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions, getGalleryExtensionId, getIdAndVersion } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ExtensionType, EXTENSION_CATEGORIES, IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\n\nconst notFound = (id: string) => localize('notFound', \"Extension '{0}' not found.\", id);\nconst useId = localize('useId', \"Make sure you use the full extension ID, including the publisher, e.g.: {0}\", 'ms-dotnettools.csharp');\n\n\nfunction getId(manifest: IExtensionManifest, withVersion?: boolean): string {\n\tif (withVersion) {\n\t\treturn `${manifest.publisher}.${manifest.name}@${manifest.version}`;\n\t} else {\n\t\treturn `${manifest.publisher}.${manifest.name}`;\n\t}\n}\n\ntype InstallExtensionInfo = { id: string; version?: string; installOptions: InstallOptions };\n\n\nexport class ExtensionManagementCLIService implements IExtensionManagementCLIService {\n\n\t_serviceBrand: any;\n\n\tconstructor(\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService\n\t) { }\n\n\tprotected get location(): string | undefined {\n\t\treturn undefined;\n\t}\n\n\tpublic async listExtensions(showVersions: boolean, category?: string, output: CLIOutput = console): Promise<void> {\n\t\tlet extensions = await this.extensionManagementService.getInstalled(ExtensionType.User);\n\t\tconst categories = EXTENSION_CATEGORIES.map(c => c.toLowerCase());\n\t\tif (category && category !== '') {\n\t\t\tif (categories.indexOf(category.toLowerCase()) < 0) {\n\t\t\t\toutput.log('Invalid category please enter a valid category. To list valid categories run --category without a category specified');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\textensions = extensions.filter(e => {\n\t\t\t\tif (e.manifest.categories) {\n\t\t\t\t\tconst lowerCaseCategories: string[] = e.manifest.categories.map(c => c.toLowerCase());\n\t\t\t\t\treturn lowerCaseCategories.indexOf(category.toLowerCase()) > -1;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\t\t} else if (category === '') {\n\t\t\toutput.log('Possible Categories: ');\n\t\t\tcategories.forEach(category => {\n\t\t\t\toutput.log(category);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tif (this.location) {\n\t\t\toutput.log(localize('listFromLocation', \"Extensions installed on {0}:\", this.location));\n\t\t}\n\n\t\textensions = extensions.sort((e1, e2) => e1.identifier.id.localeCompare(e2.identifier.id));\n\t\tlet lastId: string | undefined = undefined;\n\t\tfor (const extension of extensions) {\n\t\t\tif (lastId !== extension.identifier.id) {\n\t\t\t\tlastId = extension.identifier.id;\n\t\t\t\toutput.log(getId(extension.manifest, showVersions));\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async installExtensions(extensions: (string | URI)[], builtinExtensionIds: string[], installOptions: InstallOptions, force: boolean, output: CLIOutput = console): Promise<void> {\n\t\tconst failed: string[] = [];\n\t\tconst installedExtensionsManifests: IExtensionManifest[] = [];\n\t\tif (extensions.length) {\n\t\t\toutput.log(this.location ? localize('installingExtensionsOnLocation', \"Installing extensions on {0}...\", this.location) : localize('installingExtensions', \"Installing extensions...\"));\n\t\t}\n\n\t\tconst installed = await this.extensionManagementService.getInstalled(ExtensionType.User);\n\t\tconst checkIfNotInstalled = (id: string, version?: string): boolean => {\n\t\t\tconst installedExtension = installed.find(i => areSameExtensions(i.identifier, { id }));\n\t\t\tif (installedExtension) {\n\t\t\t\tif (!force && (!version || (version === 'prerelease' && installedExtension.preRelease))) {\n\t\t\t\t\toutput.log(localize('alreadyInstalled-checkAndUpdate', \"Extension '{0}' v{1} is already installed. Use '--force' option to update to latest version or provide '@<version>' to install a specific version, for example: '{2}@1.2.3'.\", id, installedExtension.manifest.version, id));\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (version && installedExtension.manifest.version === version) {\n\t\t\t\t\toutput.log(localize('alreadyInstalled', \"Extension '{0}' is already installed.\", `${id}@${version}`));\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\t\tconst addInstallExtensionInfo = (id: string, version: string | undefined, isBuiltin: boolean) => {\n\t\t\tinstallExtensionInfos.push({ id, version: version !== 'prerelease' ? version : undefined, installOptions: { ...installOptions, isBuiltin, installPreReleaseVersion: version === 'prerelease' || installOptions.installPreReleaseVersion } });\n\t\t};\n\t\tconst vsixs: URI[] = [];\n\t\tconst installExtensionInfos: InstallExtensionInfo[] = [];\n\t\tfor (const extension of extensions) {\n\t\t\tif (extension instanceof URI) {\n\t\t\t\tvsixs.push(extension);\n\t\t\t} else {\n\t\t\t\tconst [id, version] = getIdAndVersion(extension);\n\t\t\t\tif (checkIfNotInstalled(id, version)) {\n\t\t\t\t\taddInstallExtensionInfo(id, version, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (const extension of builtinExtensionIds) {\n\t\t\tconst [id, version] = getIdAndVersion(extension);\n\t\t\tif (checkIfNotInstalled(id, version)) {\n\t\t\t\taddInstallExtensionInfo(id, version, true);\n\t\t\t}\n\t\t}\n\n\t\tif (vsixs.length) {\n\t\t\tawait Promise.all(vsixs.map(async vsix => {\n\t\t\t\ttry {\n\t\t\t\t\tconst manifest = await this.installVSIX(vsix, { ...installOptions, isBuiltin: false }, force, output);\n\t\t\t\t\tif (manifest) {\n\t\t\t\t\t\tinstalledExtensionsManifests.push(manifest);\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\toutput.error(err.message || err.stack || err);\n\t\t\t\t\tfailed.push(vsix.toString());\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\tif (installExtensionInfos.length) {\n\n\t\t\tconst galleryExtensions = await this.getGalleryExtensions(installExtensionInfos);\n\n\t\t\tawait Promise.all(installExtensionInfos.map(async extensionInfo => {\n\t\t\t\tconst gallery = galleryExtensions.get(extensionInfo.id.toLowerCase());\n\t\t\t\tif (gallery) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst manifest = await this.installFromGallery(extensionInfo, gallery, installed, force, output);\n\t\t\t\t\t\tif (manifest) {\n\t\t\t\t\t\t\tinstalledExtensionsManifests.push(manifest);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\toutput.error(err.message || err.stack || err);\n\t\t\t\t\t\tfailed.push(extensionInfo.id);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\toutput.error(`${notFound(extensionInfo.version ? `${extensionInfo.id}@${extensionInfo.version}` : extensionInfo.id)}\\n${useId}`);\n\t\t\t\t\tfailed.push(extensionInfo.id);\n\t\t\t\t}\n\t\t\t}));\n\n\t\t}\n\n\t\tif (failed.length) {\n\t\t\tthrow new Error(localize('installation failed', \"Failed Installing Extensions: {0}\", failed.join(', ')));\n\t\t}\n\t}\n\n\tprivate async installVSIX(vsix: URI, installOptions: InstallOptions, force: boolean, output: CLIOutput): Promise<IExtensionManifest | null> {\n\n\t\tconst manifest = await this.extensionManagementService.getManifest(vsix);\n\t\tif (!manifest) {\n\t\t\tthrow new Error('Invalid vsix');\n\t\t}\n\n\t\tconst valid = await this.validateVSIX(manifest, force, output);\n\t\tif (valid) {\n\t\t\ttry {\n\t\t\t\tawait this.extensionManagementService.install(vsix, installOptions);\n\t\t\t\toutput.log(localize('successVsixInstall', \"Extension '{0}' was successfully installed.\", basename(vsix)));\n\t\t\t\treturn manifest;\n\t\t\t} catch (error) {\n\t\t\t\tif (isCancellationError(error)) {\n\t\t\t\t\toutput.log(localize('cancelVsixInstall', \"Cancelled installing extension '{0}'.\", basename(vsix)));\n\t\t\t\t\treturn null;\n\t\t\t\t} else {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate async getGalleryExtensions(extensions: InstallExtensionInfo[]): Promise<Map<string, IGalleryExtension>> {\n\t\tconst galleryExtensions = new Map<string, IGalleryExtension>();\n\t\tconst preRelease = extensions.some(e => e.installOptions.installPreReleaseVersion);\n\t\tconst result = await this.extensionGalleryService.getExtensions(extensions.map(e => ({ ...e, preRelease })), CancellationToken.None);\n\t\tfor (const extension of result) {\n\t\t\tgalleryExtensions.set(extension.identifier.id.toLowerCase(), extension);\n\t\t}\n\t\treturn galleryExtensions;\n\t}\n\n\tprivate async installFromGallery({ id, version, installOptions }: InstallExtensionInfo, galleryExtension: IGalleryExtension, installed: ILocalExtension[], force: boolean, output: CLIOutput): Promise<IExtensionManifest | null> {\n\t\tconst manifest = await this.extensionGalleryService.getManifest(galleryExtension, CancellationToken.None);\n\t\tif (manifest && !this.validateExtensionKind(manifest, output)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst installedExtension = installed.find(e => areSameExtensions(e.identifier, galleryExtension.identifier));\n\t\tif (installedExtension) {\n\t\t\tif (galleryExtension.version === installedExtension.manifest.version) {\n\t\t\t\toutput.log(localize('alreadyInstalled', \"Extension '{0}' is already installed.\", version ? `${id}@${version}` : id));\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\toutput.log(localize('updateMessage', \"Updating the extension '{0}' to the version {1}\", id, galleryExtension.version));\n\t\t}\n\n\t\ttry {\n\t\t\tif (installOptions.isBuiltin) {\n\t\t\t\toutput.log(version ? localize('installing builtin with version', \"Installing builtin extension '{0}' v{1}...\", id, version) : localize('installing builtin ', \"Installing builtin extension '{0}'...\", id));\n\t\t\t} else {\n\t\t\t\toutput.log(version ? localize('installing with version', \"Installing extension '{0}' v{1}...\", id, version) : localize('installing', \"Installing extension '{0}'...\", id));\n\t\t\t}\n\n\t\t\tconst local = await this.extensionManagementService.installFromGallery(galleryExtension, { ...installOptions, installGivenVersion: !!version });\n\t\t\toutput.log(localize('successInstall', \"Extension '{0}' v{1} was successfully installed.\", id, local.manifest.version));\n\t\t\treturn manifest;\n\t\t} catch (error) {\n\t\t\tif (isCancellationError(error)) {\n\t\t\t\toutput.log(localize('cancelInstall', \"Cancelled installing extension '{0}'.\", id));\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected validateExtensionKind(_manifest: IExtensionManifest, output: CLIOutput): boolean {\n\t\treturn true;\n\t}\n\n\tprivate async validateVSIX(manifest: IExtensionManifest, force: boolean, output: CLIOutput): Promise<boolean> {\n\t\tconst extensionIdentifier = { id: getGalleryExtensionId(manifest.publisher, manifest.name) };\n\t\tconst installedExtensions = await this.extensionManagementService.getInstalled(ExtensionType.User);\n\t\tconst newer = installedExtensions.find(local => areSameExtensions(extensionIdentifier, local.identifier) && gt(local.manifest.version, manifest.version));\n\n\t\tif (newer && !force) {\n\t\t\toutput.log(localize('forceDowngrade', \"A newer version of extension '{0}' v{1} is already installed. Use '--force' option to downgrade to older version.\", newer.identifier.id, newer.manifest.version, manifest.version));\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.validateExtensionKind(manifest, output);\n\t}\n\n\tpublic async uninstallExtensions(extensions: (string | URI)[], force: boolean, output: CLIOutput = console): Promise<void> {\n\t\tconst getExtensionId = async (extensionDescription: string | URI): Promise<string> => {\n\t\t\tif (extensionDescription instanceof URI) {\n\t\t\t\tconst manifest = await this.extensionManagementService.getManifest(extensionDescription);\n\t\t\t\treturn getId(manifest);\n\t\t\t}\n\t\t\treturn extensionDescription;\n\t\t};\n\n\t\tconst uninstalledExtensions: ILocalExtension[] = [];\n\t\tfor (const extension of extensions) {\n\t\t\tconst id = await getExtensionId(extension);\n\t\t\tconst installed = await this.extensionManagementService.getInstalled();\n\t\t\tconst extensionsToUninstall = installed.filter(e => areSameExtensions(e.identifier, { id }));\n\t\t\tif (!extensionsToUninstall.length) {\n\t\t\t\tthrow new Error(`${this.notInstalled(id)}\\n${useId}`);\n\t\t\t}\n\t\t\tif (extensionsToUninstall.some(e => e.type === ExtensionType.System)) {\n\t\t\t\toutput.log(localize('builtin', \"Extension '{0}' is a Built-in extension and cannot be uninstalled\", id));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!force && extensionsToUninstall.some(e => e.isBuiltin)) {\n\t\t\t\toutput.log(localize('forceUninstall', \"Extension '{0}' is marked as a Built-in extension by user. Please use '--force' option to uninstall it.\", id));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\toutput.log(localize('uninstalling', \"Uninstalling {0}...\", id));\n\t\t\tfor (const extensionToUninstall of extensionsToUninstall) {\n\t\t\t\tawait this.extensionManagementService.uninstall(extensionToUninstall);\n\t\t\t\tuninstalledExtensions.push(extensionToUninstall);\n\t\t\t}\n\n\t\t\tif (this.location) {\n\t\t\t\toutput.log(localize('successUninstallFromLocation', \"Extension '{0}' was successfully uninstalled from {1}!\", id, this.location));\n\t\t\t} else {\n\t\t\t\toutput.log(localize('successUninstall', \"Extension '{0}' was successfully uninstalled!\", id));\n\t\t\t}\n\n\t\t}\n\t}\n\n\tpublic async locateExtension(extensions: string[], output: CLIOutput = console): Promise<void> {\n\t\tconst installed = await this.extensionManagementService.getInstalled();\n\t\textensions.forEach(e => {\n\t\t\tinstalled.forEach(i => {\n\t\t\t\tif (i.identifier.id === e) {\n\t\t\t\t\tif (i.location.scheme === Schemas.file) {\n\t\t\t\t\t\toutput.log(i.location.fsPath);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate notInstalled(id: string) {\n\t\treturn this.location ? localize('notInstalleddOnLocation', \"Extension '{0}' is not installed on {1}.\", id, this.location) : localize('notInstalled', \"Extension '{0}' is not installed.\", id);\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Queue } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { ILocalExtension, Metadata } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { IExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { FileOperationError, FileOperationResult, IFileService } from 'vs/platform/files/common/files';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ILogService } from 'vs/platform/log/common/log';\n\ninterface IStoredProfileExtension {\n\tidentifier: IExtensionIdentifier;\n\tlocation: UriComponents;\n\tversion: string;\n\tmetadata?: Metadata;\n}\n\nexport interface IScannedProfileExtension {\n\treadonly identifier: IExtensionIdentifier;\n\treadonly version: string;\n\treadonly location: URI;\n\treadonly metadata?: Metadata;\n}\n\nexport const IExtensionsProfileScannerService = createDecorator<IExtensionsProfileScannerService>('IExtensionsProfileScannerService');\nexport interface IExtensionsProfileScannerService {\n\treadonly _serviceBrand: undefined;\n\n\tscanProfileExtensions(profileLocation: URI): Promise<IScannedProfileExtension[]>;\n\taddExtensionsToProfile(extensions: [ILocalExtension, Metadata | undefined][], profileLocation: URI): Promise<IScannedProfileExtension[]>;\n\tremoveExtensionFromProfile(identifier: IExtensionIdentifier, profileLocation: URI): Promise<IScannedProfileExtension[]>;\n}\n\nexport class ExtensionsProfileScannerService extends Disposable implements IExtensionsProfileScannerService {\n\treadonly _serviceBrand: undefined;\n\n\tprivate readonly resourcesAccessQueueMap = new ResourceMap<Queue<IScannedProfileExtension[]>>();\n\n\tconstructor(\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t\tsuper();\n\t}\n\n\tscanProfileExtensions(profileLocation: URI): Promise<IScannedProfileExtension[]> {\n\t\treturn this.withProfileExtensions(profileLocation);\n\t}\n\n\taddExtensionsToProfile(extensions: [ILocalExtension, Metadata][], profileLocation: URI): Promise<IScannedProfileExtension[]> {\n\t\treturn this.withProfileExtensions(profileLocation, profileExtensions => {\n\t\t\t// Remove the existing extension to avoid duplicates\n\t\t\tprofileExtensions = profileExtensions.filter(e => extensions.some(([extension]) => !areSameExtensions(e.identifier, extension.identifier)));\n\t\t\tprofileExtensions.push(...extensions.map(([extension, metadata]) => ({ identifier: extension.identifier, version: extension.manifest.version, location: extension.location, metadata })));\n\t\t\treturn profileExtensions;\n\t\t});\n\t}\n\n\tremoveExtensionFromProfile(identifier: IExtensionIdentifier, profileLocation: URI): Promise<IScannedProfileExtension[]> {\n\t\treturn this.withProfileExtensions(profileLocation, profileExtensions => profileExtensions.filter(extension => !(areSameExtensions(extension.identifier, identifier))));\n\t}\n\n\tprivate async withProfileExtensions(file: URI, updateFn?: (extensions: IScannedProfileExtension[]) => IScannedProfileExtension[]): Promise<IScannedProfileExtension[]> {\n\t\treturn this.getResourceAccessQueue(file).queue(async () => {\n\t\t\tlet extensions: IScannedProfileExtension[] = [];\n\n\t\t\t// Read\n\t\t\ttry {\n\t\t\t\tconst content = await this.fileService.readFile(file);\n\t\t\t\tconst storedWebExtensions: IStoredProfileExtension[] = JSON.parse(content.value.toString());\n\t\t\t\tfor (const e of storedWebExtensions) {\n\t\t\t\t\tif (!e.identifier) {\n\t\t\t\t\t\tthis.logService.info('Ignoring invalid extension while scanning. Identifier does not exist.', e);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (!e.location) {\n\t\t\t\t\t\tthis.logService.info('Ignoring invalid extension while scanning. Location does not exist.', e);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (!e.version) {\n\t\t\t\t\t\tthis.logService.info('Ignoring invalid extension while scanning. Version does not exist.', e);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\textensions.push({\n\t\t\t\t\t\tidentifier: e.identifier,\n\t\t\t\t\t\tlocation: URI.revive(e.location),\n\t\t\t\t\t\tversion: e.version,\n\t\t\t\t\t\tmetadata: e.metadata,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\t/* Ignore */\n\t\t\t\tif ((<FileOperationError>error).fileOperationResult !== FileOperationResult.FILE_NOT_FOUND) {\n\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Update\n\t\t\tif (updateFn) {\n\t\t\t\textensions = updateFn(extensions);\n\t\t\t\tconst storedProfileExtensions: IStoredProfileExtension[] = extensions.map(e => ({\n\t\t\t\t\tidentifier: e.identifier,\n\t\t\t\t\tversion: e.version,\n\t\t\t\t\tlocation: e.location.toJSON(),\n\t\t\t\t\tmetadata: e.metadata\n\t\t\t\t}));\n\t\t\t\tawait this.fileService.writeFile(file, VSBuffer.fromString(JSON.stringify(storedProfileExtensions)));\n\t\t\t}\n\n\t\t\treturn extensions;\n\t\t});\n\t}\n\n\tprivate getResourceAccessQueue(file: URI): Queue<IScannedProfileExtension[]> {\n\t\tlet resourceQueue = this.resourcesAccessQueueMap.get(file);\n\t\tif (!resourceQueue) {\n\t\t\tresourceQueue = new Queue<IScannedProfileExtension[]>();\n\t\t\tthis.resourcesAccessQueueMap.set(file, resourceQueue);\n\t\t}\n\t\treturn resourceQueue;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Promises } from 'vs/base/common/async';\nimport { getErrorMessage } from 'vs/base/common/errors';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { isWindows } from 'vs/base/common/platform';\nimport { joinPath } from 'vs/base/common/resources';\nimport * as semver from 'vs/base/common/semver/semver';\nimport { URI } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { Promises as FSPromises } from 'vs/base/node/pfs';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IExtensionGalleryService, IGalleryExtension, InstallOperation } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionKey, groupByExtension } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { IFileService, IFileStatWithMetadata } from 'vs/platform/files/common/files';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nexport class ExtensionsDownloader extends Disposable {\n\n\tprivate readonly extensionsDownloadDir: URI;\n\tprivate readonly cache: number;\n\tprivate readonly cleanUpPromise: Promise<void>;\n\n\tconstructor(\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t\tsuper();\n\t\tthis.extensionsDownloadDir = URI.file(environmentService.extensionsDownloadPath);\n\t\tthis.cache = 20; // Cache 20 downloads\n\t\tthis.cleanUpPromise = this.cleanUp();\n\t}\n\n\tasync downloadExtension(extension: IGalleryExtension, operation: InstallOperation): Promise<URI> {\n\t\tawait this.cleanUpPromise;\n\t\tconst vsixName = this.getName(extension);\n\t\tconst location = joinPath(this.extensionsDownloadDir, vsixName);\n\n\t\t// Download only if vsix does not exist\n\t\tif (!await this.fileService.exists(location)) {\n\t\t\t// Download to temporary location first only if vsix does not exist\n\t\t\tconst tempLocation = joinPath(this.extensionsDownloadDir, `.${generateUuid()}`);\n\t\t\tif (!await this.fileService.exists(tempLocation)) {\n\t\t\t\tawait this.extensionGalleryService.download(extension, tempLocation, operation);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t// Rename temp location to original\n\t\t\t\tawait this.rename(tempLocation, location, Date.now() + (2 * 60 * 1000) /* Retry for 2 minutes */);\n\t\t\t} catch (error) {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.fileService.del(tempLocation);\n\t\t\t\t} catch (e) { /* ignore */ }\n\t\t\t\tif (error.code === 'ENOTEMPTY') {\n\t\t\t\t\tthis.logService.info(`Rename failed because vsix was downloaded by another source. So ignoring renaming.`, extension.identifier.id);\n\t\t\t\t} else {\n\t\t\t\t\tthis.logService.info(`Rename failed because of ${getErrorMessage(error)}. Deleted the vsix from downloaded location`, tempLocation.path);\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\treturn location;\n\t}\n\n\tasync delete(location: URI): Promise<void> {\n\t\tawait this.cleanUpPromise;\n\t\tawait this.fileService.del(location);\n\t}\n\n\tprivate async rename(from: URI, to: URI, retryUntil: number): Promise<void> {\n\t\ttry {\n\t\t\tawait FSPromises.rename(from.fsPath, to.fsPath);\n\t\t} catch (error) {\n\t\t\tif (isWindows && error && error.code === 'EPERM' && Date.now() < retryUntil) {\n\t\t\t\tthis.logService.info(`Failed renaming ${from} to ${to} with 'EPERM' error. Trying again...`);\n\t\t\t\treturn this.rename(from, to, retryUntil);\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate async cleanUp(): Promise<void> {\n\t\ttry {\n\t\t\tif (!(await this.fileService.exists(this.extensionsDownloadDir))) {\n\t\t\t\tthis.logService.trace('Extension VSIX downlads cache dir does not exist');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst folderStat = await this.fileService.resolve(this.extensionsDownloadDir, { resolveMetadata: true });\n\t\t\tif (folderStat.children) {\n\t\t\t\tconst toDelete: URI[] = [];\n\t\t\t\tconst all: [ExtensionKey, IFileStatWithMetadata][] = [];\n\t\t\t\tfor (const stat of folderStat.children) {\n\t\t\t\t\tconst extension = ExtensionKey.parse(stat.name);\n\t\t\t\t\tif (extension) {\n\t\t\t\t\t\tall.push([extension, stat]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst byExtension = groupByExtension(all, ([extension]) => extension);\n\t\t\t\tconst distinct: IFileStatWithMetadata[] = [];\n\t\t\t\tfor (const p of byExtension) {\n\t\t\t\t\tp.sort((a, b) => semver.rcompare(a[0].version, b[0].version));\n\t\t\t\t\ttoDelete.push(...p.slice(1).map(e => e[1].resource)); // Delete outdated extensions\n\t\t\t\t\tdistinct.push(p[0][1]);\n\t\t\t\t}\n\t\t\t\tdistinct.sort((a, b) => a.mtime - b.mtime); // sort by modified time\n\t\t\t\ttoDelete.push(...distinct.slice(0, Math.max(0, distinct.length - this.cache)).map(s => s.resource)); // Retain minimum cacheSize and delete the rest\n\t\t\t\tawait Promises.settled(toDelete.map(resource => {\n\t\t\t\t\tthis.logService.trace('Deleting vsix from cache', resource.path);\n\t\t\t\t\treturn this.fileService.del(resource);\n\t\t\t\t}));\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t}\n\t}\n\n\tprivate getName(extension: IGalleryExtension): string {\n\t\treturn this.cache ? ExtensionKey.create(extension).toString().toLowerCase() : generateUuid();\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { join } from 'vs/base/common/path';\nimport * as pfs from 'vs/base/node/pfs';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { DidUninstallExtensionEvent, IExtensionManagementService, InstallExtensionResult } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { MANIFEST_CACHE_FOLDER, USER_MANIFEST_CACHE_FILE } from 'vs/platform/extensions/common/extensions';\n\nexport class ExtensionsManifestCache extends Disposable {\n\n\tprivate extensionsManifestCache = join(this.environmentService.userDataPath, MANIFEST_CACHE_FOLDER, USER_MANIFEST_CACHE_FILE);\n\n\tconstructor(\n\t\tprivate readonly environmentService: INativeEnvironmentService,\n\t\textensionsManagementService: IExtensionManagementService\n\t) {\n\t\tsuper();\n\t\tthis._register(extensionsManagementService.onDidInstallExtensions(e => this.onDidInstallExtensions(e)));\n\t\tthis._register(extensionsManagementService.onDidUninstallExtension(e => this.onDidUnInstallExtension(e)));\n\t}\n\n\tprivate onDidInstallExtensions(results: readonly InstallExtensionResult[]): void {\n\t\tif (results.some(r => !!r.local)) {\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tprivate onDidUnInstallExtension(e: DidUninstallExtensionEvent): void {\n\t\tif (!e.error) {\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tinvalidate(): void {\n\t\tpfs.Promises.rm(this.extensionsManifestCache, pfs.RimRafMode.MOVE).then(() => { }, () => { });\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createHash } from 'crypto';\nimport { equals } from 'vs/base/common/arrays';\nimport { Queue } from 'vs/base/common/async';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport { join } from 'vs/base/common/path';\nimport { Promises } from 'vs/base/node/pfs';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IExtensionGalleryService, IExtensionIdentifier, IExtensionManagementService, ILocalExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ILocalizationContribution } from 'vs/platform/extensions/common/extensions';\nimport { ILanguagePackItem, LanguagePackBaseService } from 'vs/platform/languagePacks/common/languagePacks';\n\ninterface ILanguagePack {\n\thash: string;\n\tlabel: string | undefined;\n\textensions: {\n\t\textensionIdentifier: IExtensionIdentifier;\n\t\tversion: string;\n\t}[];\n\ttranslations: { [id: string]: string };\n}\n\nexport class NativeLanguagePackService extends LanguagePackBaseService {\n\tprivate readonly cache: LanguagePacksCache;\n\n\tconstructor(\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@IExtensionGalleryService extensionGalleryService: IExtensionGalleryService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper(extensionGalleryService);\n\t\tthis.cache = this._register(new LanguagePacksCache(environmentService, logService));\n\t\tthis.extensionManagementService.registerParticipant({\n\t\t\tpostInstall: async (extension: ILocalExtension): Promise<void> => {\n\t\t\t\treturn this.postInstallExtension(extension);\n\t\t\t},\n\t\t\tpostUninstall: async (extension: ILocalExtension): Promise<void> => {\n\t\t\t\treturn this.postUninstallExtension(extension);\n\t\t\t}\n\t\t});\n\t}\n\n\tasync getInstalledLanguages(): Promise<Array<ILanguagePackItem>> {\n\t\tconst languagePacks = await this.cache.getLanguagePacks();\n\t\tconst languages = Object.keys(languagePacks).map(locale => {\n\t\t\tconst languagePack = languagePacks[locale];\n\t\t\tconst baseQuickPick = this.createQuickPickItem({ locale, label: languagePack.label });\n\t\t\treturn {\n\t\t\t\t...baseQuickPick,\n\t\t\t\textensionId: languagePack.extensions[0].extensionIdentifier.id,\n\t\t\t};\n\t\t});\n\t\tlanguages.push({\n\t\t\t...this.createQuickPickItem({ locale: 'en', label: 'English' }),\n\t\t\textensionId: 'default',\n\t\t});\n\t\treturn languages;\n\t}\n\n\tprivate async postInstallExtension(extension: ILocalExtension): Promise<void> {\n\t\tif (extension && extension.manifest && extension.manifest.contributes && extension.manifest.contributes.localizations && extension.manifest.contributes.localizations.length) {\n\t\t\tthis.logService.info('Adding language packs from the extension', extension.identifier.id);\n\t\t\tawait this.update();\n\t\t}\n\t}\n\n\tprivate async postUninstallExtension(extension: ILocalExtension): Promise<void> {\n\t\tconst languagePacks = await this.cache.getLanguagePacks();\n\t\tif (Object.keys(languagePacks).some(language => languagePacks[language] && languagePacks[language].extensions.some(e => areSameExtensions(e.extensionIdentifier, extension.identifier)))) {\n\t\t\tthis.logService.info('Removing language packs from the extension', extension.identifier.id);\n\t\t\tawait this.update();\n\t\t}\n\t}\n\n\tasync update(): Promise<boolean> {\n\t\tconst [current, installed] = await Promise.all([this.cache.getLanguagePacks(), this.extensionManagementService.getInstalled()]);\n\t\tconst updated = await this.cache.update(installed);\n\t\treturn !equals(Object.keys(current), Object.keys(updated));\n\t}\n}\n\nclass LanguagePacksCache extends Disposable {\n\n\tprivate languagePacks: { [language: string]: ILanguagePack } = {};\n\tprivate languagePacksFilePath: string;\n\tprivate languagePacksFileLimiter: Queue<any>;\n\tprivate initializedCache: boolean | undefined;\n\n\tconstructor(\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.languagePacksFilePath = join(environmentService.userDataPath, 'languagepacks.json');\n\t\tthis.languagePacksFileLimiter = new Queue();\n\t}\n\n\tgetLanguagePacks(): Promise<{ [language: string]: ILanguagePack }> {\n\t\t// if queue is not empty, fetch from disk\n\t\tif (this.languagePacksFileLimiter.size || !this.initializedCache) {\n\t\t\treturn this.withLanguagePacks()\n\t\t\t\t.then(() => this.languagePacks);\n\t\t}\n\t\treturn Promise.resolve(this.languagePacks);\n\t}\n\n\tupdate(extensions: ILocalExtension[]): Promise<{ [language: string]: ILanguagePack }> {\n\t\treturn this.withLanguagePacks(languagePacks => {\n\t\t\tObject.keys(languagePacks).forEach(language => delete languagePacks[language]);\n\t\t\tthis.createLanguagePacksFromExtensions(languagePacks, ...extensions);\n\t\t}).then(() => this.languagePacks);\n\t}\n\n\tprivate createLanguagePacksFromExtensions(languagePacks: { [language: string]: ILanguagePack }, ...extensions: ILocalExtension[]): void {\n\t\tfor (const extension of extensions) {\n\t\t\tif (extension && extension.manifest && extension.manifest.contributes && extension.manifest.contributes.localizations && extension.manifest.contributes.localizations.length) {\n\t\t\t\tthis.createLanguagePacksFromExtension(languagePacks, extension);\n\t\t\t}\n\t\t}\n\t\tObject.keys(languagePacks).forEach(languageId => this.updateHash(languagePacks[languageId]));\n\t}\n\n\tprivate createLanguagePacksFromExtension(languagePacks: { [language: string]: ILanguagePack }, extension: ILocalExtension): void {\n\t\tconst extensionIdentifier = extension.identifier;\n\t\tconst localizations = extension.manifest.contributes && extension.manifest.contributes.localizations ? extension.manifest.contributes.localizations : [];\n\t\tfor (const localizationContribution of localizations) {\n\t\t\tif (extension.location.scheme === Schemas.file && isValidLocalization(localizationContribution)) {\n\t\t\t\tlet languagePack = languagePacks[localizationContribution.languageId];\n\t\t\t\tif (!languagePack) {\n\t\t\t\t\tlanguagePack = {\n\t\t\t\t\t\thash: '',\n\t\t\t\t\t\textensions: [],\n\t\t\t\t\t\ttranslations: {},\n\t\t\t\t\t\tlabel: localizationContribution.localizedLanguageName ?? localizationContribution.languageName\n\t\t\t\t\t};\n\t\t\t\t\tlanguagePacks[localizationContribution.languageId] = languagePack;\n\t\t\t\t}\n\t\t\t\tconst extensionInLanguagePack = languagePack.extensions.filter(e => areSameExtensions(e.extensionIdentifier, extensionIdentifier))[0];\n\t\t\t\tif (extensionInLanguagePack) {\n\t\t\t\t\textensionInLanguagePack.version = extension.manifest.version;\n\t\t\t\t} else {\n\t\t\t\t\tlanguagePack.extensions.push({ extensionIdentifier, version: extension.manifest.version });\n\t\t\t\t}\n\t\t\t\tfor (const translation of localizationContribution.translations) {\n\t\t\t\t\tlanguagePack.translations[translation.id] = join(extension.location.fsPath, translation.path);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateHash(languagePack: ILanguagePack): void {\n\t\tif (languagePack) {\n\t\t\tconst md5 = createHash('md5');\n\t\t\tfor (const extension of languagePack.extensions) {\n\t\t\t\tmd5.update(extension.extensionIdentifier.uuid || extension.extensionIdentifier.id).update(extension.version);\n\t\t\t}\n\t\t\tlanguagePack.hash = md5.digest('hex');\n\t\t}\n\t}\n\n\tprivate withLanguagePacks<T>(fn: (languagePacks: { [language: string]: ILanguagePack }) => T | null = () => null): Promise<T> {\n\t\treturn this.languagePacksFileLimiter.queue(() => {\n\t\t\tlet result: T | null = null;\n\t\t\treturn Promises.readFile(this.languagePacksFilePath, 'utf8')\n\t\t\t\t.then(undefined, err => err.code === 'ENOENT' ? Promise.resolve('{}') : Promise.reject(err))\n\t\t\t\t.then<{ [language: string]: ILanguagePack }>(raw => { try { return JSON.parse(raw); } catch (e) { return {}; } })\n\t\t\t\t.then(languagePacks => { result = fn(languagePacks); return languagePacks; })\n\t\t\t\t.then(languagePacks => {\n\t\t\t\t\tfor (const language of Object.keys(languagePacks)) {\n\t\t\t\t\t\tif (!languagePacks[language]) {\n\t\t\t\t\t\t\tdelete languagePacks[language];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.languagePacks = languagePacks;\n\t\t\t\t\tthis.initializedCache = true;\n\t\t\t\t\tconst raw = JSON.stringify(this.languagePacks);\n\t\t\t\t\tthis.logService.debug('Writing language packs', raw);\n\t\t\t\t\treturn Promises.writeFile(this.languagePacksFilePath, raw);\n\t\t\t\t})\n\t\t\t\t.then(() => result, error => this.logService.error(error));\n\t\t});\n\t}\n}\n\nfunction isValidLocalization(localization: ILocalizationContribution): boolean {\n\tif (typeof localization.languageId !== 'string') {\n\t\treturn false;\n\t}\n\tif (!Array.isArray(localization.translations) || localization.translations.length === 0) {\n\t\treturn false;\n\t}\n\tfor (const translation of localization.translations) {\n\t\tif (typeof translation.id !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof translation.path !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (localization.languageName && typeof localization.languageName !== 'string') {\n\t\treturn false;\n\t}\n\tif (localization.localizedLanguageName && typeof localization.localizedLanguageName !== 'string') {\n\t\treturn false;\n\t}\n\treturn true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { streamToBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IRequestContext, IRequestOptions } from 'vs/base/parts/request/common/request';\nimport { localize } from 'vs/nls';\nimport { ConfigurationScope, Extensions, IConfigurationNode, IConfigurationRegistry } from 'vs/platform/configuration/common/configurationRegistry';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Registry } from 'vs/platform/registry/common/platform';\n\nexport const IRequestService = createDecorator<IRequestService>('requestService');\n\nexport interface IRequestService {\n\treadonly _serviceBrand: undefined;\n\n\trequest(options: IRequestOptions, token: CancellationToken): Promise<IRequestContext>;\n\n\tresolveProxy(url: string): Promise<string | undefined>;\n}\n\nexport function isSuccess(context: IRequestContext): boolean {\n\treturn (context.res.statusCode && context.res.statusCode >= 200 && context.res.statusCode < 300) || context.res.statusCode === 1223;\n}\n\nfunction hasNoContent(context: IRequestContext): boolean {\n\treturn context.res.statusCode === 204;\n}\n\nexport async function asText(context: IRequestContext): Promise<string | null> {\n\tif (hasNoContent(context)) {\n\t\treturn null;\n\t}\n\tconst buffer = await streamToBuffer(context.stream);\n\treturn buffer.toString();\n}\n\nexport async function asTextOrError(context: IRequestContext): Promise<string | null> {\n\tif (!isSuccess(context)) {\n\t\tthrow new Error('Server returned ' + context.res.statusCode);\n\t}\n\treturn asText(context);\n}\n\nexport async function asJson<T = {}>(context: IRequestContext): Promise<T | null> {\n\tif (!isSuccess(context)) {\n\t\tthrow new Error('Server returned ' + context.res.statusCode);\n\t}\n\tif (hasNoContent(context)) {\n\t\treturn null;\n\t}\n\tconst buffer = await streamToBuffer(context.stream);\n\tconst str = buffer.toString();\n\ttry {\n\t\treturn JSON.parse(str);\n\t} catch (err) {\n\t\terr.message += ':\\n' + str;\n\t\tthrow err;\n\t}\n}\n\n\nexport interface IHTTPConfiguration {\n\thttp?: {\n\t\tproxy?: string;\n\t\tproxyStrictSSL?: boolean;\n\t\tproxyAuthorization?: string;\n\t};\n}\n\nexport function updateProxyConfigurationsScope(scope: ConfigurationScope): void {\n\tregisterProxyConfigurations(scope);\n}\n\nlet proxyConfiguration: IConfigurationNode | undefined;\nfunction registerProxyConfigurations(scope: ConfigurationScope): void {\n\tconst configurationRegistry = Registry.as<IConfigurationRegistry>(Extensions.Configuration);\n\tconst oldProxyConfiguration = proxyConfiguration;\n\tproxyConfiguration = {\n\t\tid: 'http',\n\t\torder: 15,\n\t\ttitle: localize('httpConfigurationTitle', \"HTTP\"),\n\t\ttype: 'object',\n\t\tscope,\n\t\tproperties: {\n\t\t\t'http.proxy': {\n\t\t\t\ttype: 'string',\n\t\t\t\tpattern: '^(https?|socks5?)://([^:]*(:[^@]*)?@)?([^:]+|\\\\[[:0-9a-fA-F]+\\\\])(:\\\\d+)?/?$|^$',\n\t\t\t\tmarkdownDescription: localize('proxy', \"The proxy setting to use. If not set, will be inherited from the `http_proxy` and `https_proxy` environment variables.\"),\n\t\t\t\trestricted: true\n\t\t\t},\n\t\t\t'http.proxyStrictSSL': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdescription: localize('strictSSL', \"Controls whether the proxy server certificate should be verified against the list of supplied CAs.\"),\n\t\t\t\trestricted: true\n\t\t\t},\n\t\t\t'http.proxyAuthorization': {\n\t\t\t\ttype: ['null', 'string'],\n\t\t\t\tdefault: null,\n\t\t\t\tmarkdownDescription: localize('proxyAuthorization', \"The value to send as the `Proxy-Authorization` header for every network request.\"),\n\t\t\t\trestricted: true\n\t\t\t},\n\t\t\t'http.proxySupport': {\n\t\t\t\ttype: 'string',\n\t\t\t\tenum: ['off', 'on', 'fallback', 'override'],\n\t\t\t\tenumDescriptions: [\n\t\t\t\t\tlocalize('proxySupportOff', \"Disable proxy support for extensions.\"),\n\t\t\t\t\tlocalize('proxySupportOn', \"Enable proxy support for extensions.\"),\n\t\t\t\t\tlocalize('proxySupportFallback', \"Enable proxy support for extensions, fall back to request options, when no proxy found.\"),\n\t\t\t\t\tlocalize('proxySupportOverride', \"Enable proxy support for extensions, override request options.\"),\n\t\t\t\t],\n\t\t\t\tdefault: 'override',\n\t\t\t\tdescription: localize('proxySupport', \"Use the proxy support for extensions.\"),\n\t\t\t\trestricted: true\n\t\t\t},\n\t\t\t'http.systemCertificates': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdescription: localize('systemCertificates', \"Controls whether CA certificates should be loaded from the OS. (On Windows and macOS, a reload of the window is required after turning this off.)\"),\n\t\t\t\trestricted: true\n\t\t\t}\n\t\t}\n\t};\n\tconfigurationRegistry.updateConfigurations({ add: [proxyConfiguration], remove: oldProxyConfiguration ? [oldProxyConfiguration] : [] });\n}\n\nregisterProxyConfigurations(ConfigurationScope.MACHINE);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Schemas } from 'vs/base/common/network';\nimport { URI } from 'vs/base/common/uri';\nimport { IDownloadService } from 'vs/platform/download/common/download';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { asTextOrError, IRequestService } from 'vs/platform/request/common/request';\n\nexport class DownloadService implements IDownloadService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IRequestService private readonly requestService: IRequestService,\n\t\t@IFileService private readonly fileService: IFileService\n\t) { }\n\n\tasync download(resource: URI, target: URI, cancellationToken: CancellationToken = CancellationToken.None): Promise<void> {\n\t\tif (resource.scheme === Schemas.file || resource.scheme === Schemas.vscodeRemote) {\n\t\t\t// Intentionally only support this for file|remote<->file|remote scenarios\n\t\t\tawait this.fileService.copy(resource, target);\n\t\t\treturn;\n\t\t}\n\t\tconst options = { type: 'GET', url: resource.toString(true) };\n\t\tconst context = await this.requestService.request(options, cancellationToken);\n\t\tif (context.res.statusCode === 200) {\n\t\t\tawait this.fileService.writeFile(target, context.stream);\n\t\t} else {\n\t\t\tconst message = await asTextOrError(context);\n\t\t\tthrow new Error(`Expected 200, got back ${context.res.statusCode} instead.\\n\\n${message}`);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { bufferToStream, streamToBuffer, VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Event } from 'vs/base/common/event';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IHeaders, IRequestContext, IRequestOptions } from 'vs/base/parts/request/common/request';\nimport { IRequestService } from 'vs/platform/request/common/request';\n\ntype RequestResponse = [\n\t{\n\t\theaders: IHeaders;\n\t\tstatusCode?: number;\n\t},\n\tVSBuffer\n];\n\nexport class RequestChannel implements IServerChannel {\n\n\tconstructor(private readonly service: IRequestService) { }\n\n\tlisten(context: any, event: string): Event<any> {\n\t\tthrow new Error('Invalid listen');\n\t}\n\n\tcall(context: any, command: string, args?: any, token: CancellationToken = CancellationToken.None): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'request': return this.service.request(args[0], token)\n\t\t\t\t.then(async ({ res, stream }) => {\n\t\t\t\t\tconst buffer = await streamToBuffer(stream);\n\t\t\t\t\treturn <RequestResponse>[{ statusCode: res.statusCode, headers: res.headers }, buffer];\n\t\t\t\t});\n\t\t\tcase 'resolveProxy': return this.service.resolveProxy(args[0]);\n\t\t}\n\t\tthrow new Error('Invalid call');\n\t}\n}\n\nexport class RequestChannelClient implements IRequestService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private readonly channel: IChannel) { }\n\n\tasync request(options: IRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\t\tconst [res, buffer] = await this.channel.call<RequestResponse>('request', [options], token);\n\t\treturn { res, stream: bufferToStream(buffer) };\n\t}\n\n\tasync resolveProxy(url: string): Promise<string | undefined> {\n\t\treturn this.channel.call<string | undefined>('resolveProxy', [url]);\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { parse as parseUrl, Url } from 'url';\nimport { isBoolean } from 'vs/base/common/types';\n\nexport type Agent = any;\n\nfunction getSystemProxyURI(requestURL: Url, env: typeof process.env): string | null {\n\tif (requestURL.protocol === 'http:') {\n\t\treturn env.HTTP_PROXY || env.http_proxy || null;\n\t} else if (requestURL.protocol === 'https:') {\n\t\treturn env.HTTPS_PROXY || env.https_proxy || env.HTTP_PROXY || env.http_proxy || null;\n\t}\n\n\treturn null;\n}\n\nexport interface IOptions {\n\tproxyUrl?: string;\n\tstrictSSL?: boolean;\n}\n\nexport async function getProxyAgent(rawRequestURL: string, env: typeof process.env, options: IOptions = {}): Promise<Agent> {\n\tconst requestURL = parseUrl(rawRequestURL);\n\tconst proxyURL = options.proxyUrl || getSystemProxyURI(requestURL, env);\n\n\tif (!proxyURL) {\n\t\treturn null;\n\t}\n\n\tconst proxyEndpoint = parseUrl(proxyURL);\n\n\tif (!/^https?:$/.test(proxyEndpoint.protocol || '')) {\n\t\treturn null;\n\t}\n\n\tconst opts = {\n\t\thost: proxyEndpoint.hostname || '',\n\t\tport: proxyEndpoint.port || (proxyEndpoint.protocol === 'https' ? '443' : '80'),\n\t\tauth: proxyEndpoint.auth,\n\t\trejectUnauthorized: isBoolean(options.strictSSL) ? options.strictSSL : true,\n\t};\n\n\treturn requestURL.protocol === 'http:'\n\t\t? new (await import('http-proxy-agent'))(opts as any as Url)\n\t\t: new (await import('https-proxy-agent'))(opts);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { spawn } from 'child_process';\nimport { basename } from 'vs/base/common/path';\nimport { localize } from 'vs/nls';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { canceled, isCancellationError } from 'vs/base/common/errors';\nimport { IProcessEnvironment, isWindows, OS } from 'vs/base/common/platform';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { getSystemShell } from 'vs/base/node/shell';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { isLaunchedFromCli } from 'vs/platform/environment/node/argvHelper';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { Promises } from 'vs/base/common/async';\n\n/**\n * The maximum of time we accept to wait on resolving the shell\n * environment before giving up. This ensures we are not blocking\n * other tasks from running for a too long time period.\n */\nconst MAX_SHELL_RESOLVE_TIME = 10000;\n\nlet unixShellEnvPromise: Promise<typeof process.env> | undefined = undefined;\n\n/**\n * Resolves the shell environment by spawning a shell. This call will cache\n * the shell spawning so that subsequent invocations use that cached result.\n *\n * Will throw an error if:\n * - we hit a timeout of `MAX_SHELL_RESOLVE_TIME`\n * - any other error from spawning a shell to figure out the environment\n */\nexport async function getResolvedShellEnv(logService: ILogService, args: NativeParsedArgs, env: IProcessEnvironment): Promise<typeof process.env> {\n\n\t// Skip if --force-disable-user-env\n\tif (args['force-disable-user-env']) {\n\t\tlogService.trace('resolveShellEnv(): skipped (--force-disable-user-env)');\n\n\t\treturn {};\n\t}\n\n\t// Skip on windows\n\telse if (isWindows) {\n\t\tlogService.trace('resolveShellEnv(): skipped (Windows)');\n\n\t\treturn {};\n\t}\n\n\t// Skip if running from CLI already\n\telse if (isLaunchedFromCli(env) && !args['force-user-env']) {\n\t\tlogService.trace('resolveShellEnv(): skipped (VSCODE_CLI is set)');\n\n\t\treturn {};\n\t}\n\n\t// Otherwise resolve (macOS, Linux)\n\telse {\n\t\tif (isLaunchedFromCli(env)) {\n\t\t\tlogService.trace('resolveShellEnv(): running (--force-user-env)');\n\t\t} else {\n\t\t\tlogService.trace('resolveShellEnv(): running (macOS/Linux)');\n\t\t}\n\n\t\t// Call this only once and cache the promise for\n\t\t// subsequent calls since this operation can be\n\t\t// expensive (spawns a process).\n\t\tif (!unixShellEnvPromise) {\n\t\t\tunixShellEnvPromise = Promises.withAsyncBody<NodeJS.ProcessEnv>(async (resolve, reject) => {\n\t\t\t\tconst cts = new CancellationTokenSource();\n\n\t\t\t\t// Give up resolving shell env after some time\n\t\t\t\tconst timeout = setTimeout(() => {\n\t\t\t\t\tcts.dispose(true);\n\t\t\t\t\treject(new Error(localize('resolveShellEnvTimeout', \"Unable to resolve your shell environment in a reasonable time. Please review your shell configuration.\")));\n\t\t\t\t}, MAX_SHELL_RESOLVE_TIME);\n\n\t\t\t\t// Resolve shell env and handle errors\n\t\t\t\ttry {\n\t\t\t\t\tresolve(await doResolveUnixShellEnv(logService, cts.token));\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (!isCancellationError(error) && !cts.token.isCancellationRequested) {\n\t\t\t\t\t\treject(new Error(localize('resolveShellEnvError', \"Unable to resolve your shell environment: {0}\", toErrorMessage(error))));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({});\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tclearTimeout(timeout);\n\t\t\t\t\tcts.dispose();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn unixShellEnvPromise;\n\t}\n}\n\nasync function doResolveUnixShellEnv(logService: ILogService, token: CancellationToken): Promise<typeof process.env> {\n\tconst runAsNode = process.env['ELECTRON_RUN_AS_NODE'];\n\tlogService.trace('getUnixShellEnvironment#runAsNode', runAsNode);\n\n\tconst noAttach = process.env['ELECTRON_NO_ATTACH_CONSOLE'];\n\tlogService.trace('getUnixShellEnvironment#noAttach', noAttach);\n\n\tconst mark = generateUuid().replace(/-/g, '').substr(0, 12);\n\tconst regex = new RegExp(mark + '(.*)' + mark);\n\n\tconst env = {\n\t\t...process.env,\n\t\tELECTRON_RUN_AS_NODE: '1',\n\t\tELECTRON_NO_ATTACH_CONSOLE: '1'\n\t};\n\n\tlogService.trace('getUnixShellEnvironment#env', env);\n\tconst systemShellUnix = await getSystemShell(OS, env);\n\tlogService.trace('getUnixShellEnvironment#shell', systemShellUnix);\n\n\treturn new Promise<typeof process.env>((resolve, reject) => {\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn reject(canceled());\n\t\t}\n\n\t\t// handle popular non-POSIX shells\n\t\tconst name = basename(systemShellUnix);\n\t\tlet command: string, shellArgs: Array<string>;\n\t\tconst extraArgs = (process.versions['electron'] && process.versions['microsoft-build']) ? '--ms-enable-electron-run-as-node' : '';\n\t\tif (/^pwsh(-preview)?$/.test(name)) {\n\t\t\t// Older versions of PowerShell removes double quotes sometimes so we use \"double single quotes\" which is how\n\t\t\t// you escape single quotes inside of a single quoted string.\n\t\t\tcommand = `& '${process.execPath}' ${extraArgs} -p '''${mark}'' + JSON.stringify(process.env) + ''${mark}'''`;\n\t\t\tshellArgs = ['-Login', '-Command'];\n\t\t} else {\n\t\t\tcommand = `'${process.execPath}' ${extraArgs} -p '\"${mark}\" + JSON.stringify(process.env) + \"${mark}\"'`;\n\n\t\t\tif (name === 'tcsh') {\n\t\t\t\tshellArgs = ['-ic'];\n\t\t\t} else {\n\t\t\t\tshellArgs = ['-ilc'];\n\t\t\t}\n\t\t}\n\n\t\tlogService.trace('getUnixShellEnvironment#spawn', JSON.stringify(shellArgs), command);\n\n\t\tconst child = spawn(systemShellUnix, [...shellArgs, command], {\n\t\t\tdetached: true,\n\t\t\tstdio: ['ignore', 'pipe', 'pipe'],\n\t\t\tenv\n\t\t});\n\n\t\ttoken.onCancellationRequested(() => {\n\t\t\tchild.kill();\n\n\t\t\treturn reject(canceled());\n\t\t});\n\n\t\tchild.on('error', err => {\n\t\t\tlogService.error('getUnixShellEnvironment#errorChildProcess', toErrorMessage(err));\n\t\t\treject(err);\n\t\t});\n\n\t\tconst buffers: Buffer[] = [];\n\t\tchild.stdout.on('data', b => buffers.push(b));\n\n\t\tconst stderr: Buffer[] = [];\n\t\tchild.stderr.on('data', b => stderr.push(b));\n\n\t\tchild.on('close', (code, signal) => {\n\t\t\tconst raw = Buffer.concat(buffers).toString('utf8');\n\t\t\tlogService.trace('getUnixShellEnvironment#raw', raw);\n\n\t\t\tconst stderrStr = Buffer.concat(stderr).toString('utf8');\n\t\t\tif (stderrStr.trim()) {\n\t\t\t\tlogService.trace('getUnixShellEnvironment#stderr', stderrStr);\n\t\t\t}\n\n\t\t\tif (code || signal) {\n\t\t\t\treturn reject(new Error(localize('resolveShellEnvExitError', \"Unexpected exit code from spawned shell (code {0}, signal {1})\", code, signal)));\n\t\t\t}\n\n\t\t\tconst match = regex.exec(raw);\n\t\t\tconst rawStripped = match ? match[1] : '{}';\n\n\t\t\ttry {\n\t\t\t\tconst env = JSON.parse(rawStripped);\n\n\t\t\t\tif (runAsNode) {\n\t\t\t\t\tenv['ELECTRON_RUN_AS_NODE'] = runAsNode;\n\t\t\t\t} else {\n\t\t\t\t\tdelete env['ELECTRON_RUN_AS_NODE'];\n\t\t\t\t}\n\n\t\t\t\tif (noAttach) {\n\t\t\t\t\tenv['ELECTRON_NO_ATTACH_CONSOLE'] = noAttach;\n\t\t\t\t} else {\n\t\t\t\t\tdelete env['ELECTRON_NO_ATTACH_CONSOLE'];\n\t\t\t\t}\n\n\t\t\t\t// https://github.com/microsoft/vscode/issues/22593#issuecomment-336050758\n\t\t\t\tdelete env['XDG_RUNTIME_DIR'];\n\n\t\t\t\tlogService.trace('getUnixShellEnvironment#result', env);\n\t\t\t\tresolve(env);\n\t\t\t} catch (err) {\n\t\t\t\tlogService.error('getUnixShellEnvironment#errorCaught', toErrorMessage(err));\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isLinuxSnap, platform, Platform, PlatformToString } from 'vs/base/common/platform';\nimport { env, platform as nodePlatform } from 'vs/base/common/process';\nimport { URI } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IFileService } from 'vs/platform/files/common/files';\n\nfunction getPlatformDetail(hostname: string): string | undefined {\n\tif (platform === Platform.Linux && /^penguin(\\.|$)/i.test(hostname)) {\n\t\treturn 'chromebook';\n\t}\n\n\treturn undefined;\n}\n\nexport async function resolveCommonProperties(\n\tfileService: IFileService,\n\trelease: string,\n\thostname: string,\n\tarch: string,\n\tcommit: string | undefined,\n\tversion: string | undefined,\n\tmachineId: string | undefined,\n\tisInternalTelemetry: boolean,\n\tinstallSourcePath: string,\n\tproduct?: string\n): Promise<{ [name: string]: string | boolean | undefined }> {\n\tconst result: { [name: string]: string | boolean | undefined } = Object.create(null);\n\n\t// __GDPR__COMMON__ \"common.machineId\" : { \"endPoint\": \"MacAddressHash\", \"classification\": \"EndUserPseudonymizedInformation\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.machineId'] = machineId;\n\t// __GDPR__COMMON__ \"sessionID\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['sessionID'] = generateUuid() + Date.now();\n\t// __GDPR__COMMON__ \"commitHash\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['commitHash'] = commit;\n\t// __GDPR__COMMON__ \"version\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['version'] = version;\n\t// __GDPR__COMMON__ \"common.platformVersion\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.platformVersion'] = (release || '').replace(/^(\\d+)(\\.\\d+)?(\\.\\d+)?(.*)/, '$1$2$3');\n\t// __GDPR__COMMON__ \"common.platform\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.platform'] = PlatformToString(platform);\n\t// __GDPR__COMMON__ \"common.nodePlatform\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.nodePlatform'] = nodePlatform;\n\t// __GDPR__COMMON__ \"common.nodeArch\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.nodeArch'] = arch;\n\t// __GDPR__COMMON__ \"common.product\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.product'] = product || 'desktop';\n\n\tif (isInternalTelemetry) {\n\t\t// __GDPR__COMMON__ \"common.msftInternal\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\tresult['common.msftInternal'] = isInternalTelemetry;\n\t}\n\n\t// dynamic properties which value differs on each call\n\tlet seq = 0;\n\tconst startTime = Date.now();\n\tObject.defineProperties(result, {\n\t\t// __GDPR__COMMON__ \"timestamp\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t'timestamp': {\n\t\t\tget: () => new Date(),\n\t\t\tenumerable: true\n\t\t},\n\t\t// __GDPR__COMMON__ \"common.timesincesessionstart\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t'common.timesincesessionstart': {\n\t\t\tget: () => Date.now() - startTime,\n\t\t\tenumerable: true\n\t\t},\n\t\t// __GDPR__COMMON__ \"common.sequence\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t'common.sequence': {\n\t\t\tget: () => seq++,\n\t\t\tenumerable: true\n\t\t}\n\t});\n\n\tif (isLinuxSnap) {\n\t\t// __GDPR__COMMON__ \"common.snap\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\tresult['common.snap'] = 'true';\n\t}\n\n\tconst platformDetail = getPlatformDetail(hostname);\n\n\tif (platformDetail) {\n\t\t// __GDPR__COMMON__ \"common.platformDetail\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\tresult['common.platformDetail'] = platformDetail;\n\t}\n\n\ttry {\n\t\tconst contents = await fileService.readFile(URI.file(installSourcePath));\n\n\t\t// __GDPR__COMMON__ \"common.source\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\tresult['common.source'] = contents.value.toString().slice(0, 30);\n\t} catch (error) {\n\t\t// ignore error\n\t}\n\n\treturn result;\n}\n\nexport function verifyMicrosoftInternalDomain(domainList: readonly string[]): boolean {\n\tconst userDnsDomain = env['USERDNSDOMAIN'];\n\tif (!userDnsDomain) {\n\t\treturn false;\n\t}\n\n\tconst domain = userDnsDomain.toLowerCase();\n\treturn domainList.some(msftDomain => domain === msftDomain);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { binarySearch } from 'vs/base/common/arrays';\nimport { errorHandler, ErrorNoTelemetry } from 'vs/base/common/errors';\nimport { DisposableStore, toDisposable } from 'vs/base/common/lifecycle';\nimport { safeStringify } from 'vs/base/common/objects';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\n\ntype ErrorEventFragment = {\n\towner: 'lramos15, sbatten';\n\tcomment: 'Whenever an error in VS Code is thrown.';\n\tcallstack: { classification: 'CallstackOrException'; purpose: 'PerformanceAndHealth'; comment: 'The callstack of the error.' };\n\tmsg?: { classification: 'CallstackOrException'; purpose: 'PerformanceAndHealth'; comment: 'The message of the error. Normally the first line int the callstack.' };\n\tfile?: { classification: 'CallstackOrException'; purpose: 'PerformanceAndHealth'; comment: 'The file the error originated from.' };\n\tline?: { classification: 'CallstackOrException'; purpose: 'PerformanceAndHealth'; isMeasurement: true; comment: 'The line the error originate on.' };\n\tcolumn?: { classification: 'CallstackOrException'; purpose: 'PerformanceAndHealth'; isMeasurement: true; comment: 'The column of the line which the error orginated on.' };\n\tuncaught_error_name?: { classification: 'CallstackOrException'; purpose: 'PerformanceAndHealth'; comment: 'If the error is uncaught what is the error type' };\n\tuncaught_error_msg?: { classification: 'CallstackOrException'; purpose: 'PerformanceAndHealth'; comment: 'If the error is uncaught this is just msg but for uncaught errors.' };\n\tcount?: { classification: 'CallstackOrException'; purpose: 'PerformanceAndHealth'; isMeasurement: true; comment: 'How many times this error has been thrown' };\n};\nexport interface ErrorEvent {\n\tcallstack: string;\n\tmsg?: string;\n\tfile?: string;\n\tline?: number;\n\tcolumn?: number;\n\tuncaught_error_name?: string;\n\tuncaught_error_msg?: string;\n\tcount?: number;\n}\n\nexport namespace ErrorEvent {\n\texport function compare(a: ErrorEvent, b: ErrorEvent) {\n\t\tif (a.callstack < b.callstack) {\n\t\t\treturn -1;\n\t\t} else if (a.callstack > b.callstack) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n}\n\nexport default abstract class BaseErrorTelemetry {\n\n\tpublic static ERROR_FLUSH_TIMEOUT: number = 5 * 1000;\n\n\tprivate _telemetryService: ITelemetryService;\n\tprivate _flushDelay: number;\n\tprivate _flushHandle: any = -1;\n\tprivate _buffer: ErrorEvent[] = [];\n\tprotected readonly _disposables = new DisposableStore();\n\n\tconstructor(telemetryService: ITelemetryService, flushDelay = BaseErrorTelemetry.ERROR_FLUSH_TIMEOUT) {\n\t\tthis._telemetryService = telemetryService;\n\t\tthis._flushDelay = flushDelay;\n\n\t\t// (1) check for unexpected but handled errors\n\t\tconst unbind = errorHandler.addListener((err) => this._onErrorEvent(err));\n\t\tthis._disposables.add(toDisposable(unbind));\n\n\t\t// (2) install implementation-specific error listeners\n\t\tthis.installErrorListeners();\n\t}\n\n\tdispose() {\n\t\tclearTimeout(this._flushHandle);\n\t\tthis._flushBuffer();\n\t\tthis._disposables.dispose();\n\t}\n\n\tprotected installErrorListeners(): void {\n\t\t// to override\n\t}\n\n\tprivate _onErrorEvent(err: any): void {\n\n\t\tif (!err) {\n\t\t\treturn;\n\t\t}\n\n\t\t// unwrap nested errors from loader\n\t\tif (err.detail && err.detail.stack) {\n\t\t\terr = err.detail;\n\t\t}\n\n\t\t// If it's the no telemetry error it doesn't get logged\n\t\tif (ErrorNoTelemetry.isErrorNoTelemetry(err)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// work around behavior in workerServer.ts that breaks up Error.stack\n\t\tconst callstack = Array.isArray(err.stack) ? err.stack.join('\\n') : err.stack;\n\t\tconst msg = err.message ? err.message : safeStringify(err);\n\n\t\t// errors without a stack are not useful telemetry\n\t\tif (!callstack) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._enqueue({ msg, callstack });\n\t}\n\n\tprotected _enqueue(e: ErrorEvent): void {\n\n\t\tconst idx = binarySearch(this._buffer, e, ErrorEvent.compare);\n\t\tif (idx < 0) {\n\t\t\te.count = 1;\n\t\t\tthis._buffer.splice(~idx, 0, e);\n\t\t} else {\n\t\t\tif (!this._buffer[idx].count) {\n\t\t\t\tthis._buffer[idx].count = 0;\n\t\t\t}\n\t\t\tthis._buffer[idx].count! += 1;\n\t\t}\n\n\t\tif (this._flushHandle === -1) {\n\t\t\tthis._flushHandle = setTimeout(() => {\n\t\t\t\tthis._flushBuffer();\n\t\t\t\tthis._flushHandle = -1;\n\t\t\t}, this._flushDelay);\n\t\t}\n\t}\n\n\tprivate _flushBuffer(): void {\n\t\tfor (const error of this._buffer) {\n\t\t\ttype UnhandledErrorClassification = {} & ErrorEventFragment;\n\t\t\tthis._telemetryService.publicLogError2<ErrorEvent, UnhandledErrorClassification>('UnhandledError', error);\n\t\t}\n\t\tthis._buffer.length = 0;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { TelemetryLevel } from 'vs/platform/telemetry/common/telemetry';\nimport { ITelemetryAppender } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { IServerTelemetryService } from 'vs/platform/telemetry/common/serverTelemetryService';\n\nexport class ServerTelemetryChannel extends Disposable implements IServerChannel {\n\tconstructor(\n\t\tprivate readonly telemetryService: IServerTelemetryService,\n\t\tprivate readonly telemetryAppender: ITelemetryAppender | null\n\t) {\n\t\tsuper();\n\t}\n\n\n\tasync call(_: any, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'updateTelemetryLevel': {\n\t\t\t\tconst { telemetryLevel } = arg;\n\t\t\t\treturn this.telemetryService.updateInjectedTelemetryLevel(telemetryLevel);\n\t\t\t}\n\n\t\t\tcase 'logTelemetry': {\n\t\t\t\tconst { eventName, data } = arg;\n\t\t\t\t// Logging is done directly to the appender instead of through the telemetry service\n\t\t\t\t// as the data sent from the client has already had common properties added to it and\n\t\t\t\t// has already been sent to the telemetry output channel\n\t\t\t\tif (this.telemetryAppender) {\n\t\t\t\t\treturn this.telemetryAppender.log(eventName, data);\n\t\t\t\t}\n\n\t\t\t\treturn Promise.resolve();\n\t\t\t}\n\n\t\t\tcase 'flushTelemetry': {\n\t\t\t\tif (this.telemetryAppender) {\n\t\t\t\t\treturn this.telemetryAppender.flush();\n\t\t\t\t}\n\n\t\t\t\treturn Promise.resolve();\n\t\t\t}\n\n\t\t\tcase 'ping': {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t// Command we cannot handle so we throw an error\n\t\tthrow new Error(`IPC Command ${command} not found`);\n\t}\n\n\tlisten(_: any, event: string, arg: any): Event<any> {\n\t\tthrow new Error('Not supported');\n\t}\n\n\t/**\n\t * Disposing the channel also disables the telemetryService as there is\n\t * no longer a way to control it\n\t */\n\tpublic override dispose(): void {\n\t\tthis.telemetryService.updateInjectedTelemetryLevel(TelemetryLevel.NONE);\n\t\tsuper.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ClassifiedEvent, GDPRClassification, StrictPropertyCheck } from 'vs/platform/telemetry/common/gdprTypings';\nimport { IObservableValue } from 'vs/base/common/observableValue';\n\nexport const ITelemetryService = createDecorator<ITelemetryService>('telemetryService');\n\nexport interface ITelemetryInfo {\n\tsessionId: string;\n\tmachineId: string;\n\tfirstSessionDate: string;\n\tmsftInternal?: boolean;\n}\n\nexport interface ITelemetryData {\n\tfrom?: string;\n\ttarget?: string;\n\t[key: string]: any;\n}\n\nexport interface ITelemetryService {\n\n\t/**\n\t * Whether error telemetry will get sent. If false, `publicLogError` will no-op.\n\t */\n\treadonly sendErrorTelemetry: boolean;\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * @deprecated Use publicLog2 and the typescript GDPR annotation where possible\n\t */\n\tpublicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<void>;\n\n\t/**\n\t * Sends a telemetry event that has been privacy approved.\n\t * Do not call this unless you have been given approval.\n\t */\n\tpublicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>, anonymizeFilePaths?: boolean): Promise<void>;\n\n\t/**\n\t * @deprecated Use publicLogError2 and the typescript GDPR annotation where possible\n\t */\n\tpublicLogError(errorEventName: string, data?: ITelemetryData): Promise<void>;\n\n\tpublicLogError2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>): Promise<void>;\n\n\tgetTelemetryInfo(): Promise<ITelemetryInfo>;\n\n\tsetExperimentProperty(name: string, value: string): void;\n\n\treadonly telemetryLevel: IObservableValue<TelemetryLevel>;\n}\n\nexport interface ITelemetryEndpoint {\n\tid: string;\n\taiKey: string;\n\tsendErrorTelemetry: boolean;\n}\n\nexport const ICustomEndpointTelemetryService = createDecorator<ICustomEndpointTelemetryService>('customEndpointTelemetryService');\n\nexport interface ICustomEndpointTelemetryService {\n\treadonly _serviceBrand: undefined;\n\n\tpublicLog(endpoint: ITelemetryEndpoint, eventName: string, data?: ITelemetryData): Promise<void>;\n\tpublicLogError(endpoint: ITelemetryEndpoint, errorEventName: string, data?: ITelemetryData): Promise<void>;\n}\n\n// Keys\nexport const currentSessionDateStorageKey = 'telemetry.currentSessionDate';\nexport const firstSessionDateStorageKey = 'telemetry.firstSessionDate';\nexport const lastSessionDateStorageKey = 'telemetry.lastSessionDate';\nexport const machineIdKey = 'telemetry.machineId';\n\n// Configuration Keys\nexport const TELEMETRY_SECTION_ID = 'telemetry';\nexport const TELEMETRY_SETTING_ID = 'telemetry.telemetryLevel';\nexport const TELEMETRY_OLD_SETTING_ID = 'telemetry.enableTelemetry';\n\nexport const enum TelemetryLevel {\n\tNONE = 0,\n\tCRASH = 1,\n\tERROR = 2,\n\tUSAGE = 3\n}\n\nexport const enum TelemetryConfiguration {\n\tOFF = 'off',\n\tCRASH = 'crash',\n\tERROR = 'error',\n\tON = 'all'\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as osLib from 'os';\nimport { Iterable } from 'vs/base/common/iterator';\nimport { Promises } from 'vs/base/common/async';\nimport { getNodeType, parse, ParseError } from 'vs/base/common/json';\nimport { Schemas } from 'vs/base/common/network';\nimport { basename, join } from 'vs/base/common/path';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { ProcessItem } from 'vs/base/common/processes';\nimport { URI } from 'vs/base/common/uri';\nimport { virtualMachineHint } from 'vs/base/node/id';\nimport { IDirent, Promises as pfs } from 'vs/base/node/pfs';\nimport { listProcesses } from 'vs/base/node/ps';\nimport { IDiagnosticsService, IMachineInfo, IRemoteDiagnosticError, IRemoteDiagnosticInfo, isRemoteDiagnosticError, IWorkspaceInformation, PerformanceInfo, SystemInfo, WorkspaceStatItem, WorkspaceStats } from 'vs/platform/diagnostics/common/diagnostics';\nimport { ByteSize } from 'vs/platform/files/common/files';\nimport { IMainProcessInfo } from 'vs/platform/launch/common/launch';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IWorkspace } from 'vs/platform/workspace/common/workspace';\n\nexport interface VersionInfo {\n\tvscodeVersion: string;\n\tos: string;\n}\n\nexport interface ProcessInfo {\n\tcpu: number;\n\tmemory: number;\n\tpid: number;\n\tname: string;\n}\n\ninterface ConfigFilePatterns {\n\ttag: string;\n\tfilePattern: RegExp;\n\trelativePathPattern?: RegExp;\n}\n\nconst worksapceStatsCache = new Map<string, Promise<WorkspaceStats>>();\nexport async function collectWorkspaceStats(folder: string, filter: string[]): Promise<WorkspaceStats> {\n\tconst cacheKey = `${folder}::${filter.join(':')}`;\n\tconst cached = worksapceStatsCache.get(cacheKey);\n\tif (cached) {\n\t\treturn cached;\n\t}\n\n\tconst configFilePatterns: ConfigFilePatterns[] = [\n\t\t{ tag: 'grunt.js', filePattern: /^gruntfile\\.js$/i },\n\t\t{ tag: 'gulp.js', filePattern: /^gulpfile\\.js$/i },\n\t\t{ tag: 'tsconfig.json', filePattern: /^tsconfig\\.json$/i },\n\t\t{ tag: 'package.json', filePattern: /^package\\.json$/i },\n\t\t{ tag: 'jsconfig.json', filePattern: /^jsconfig\\.json$/i },\n\t\t{ tag: 'tslint.json', filePattern: /^tslint\\.json$/i },\n\t\t{ tag: 'eslint.json', filePattern: /^eslint\\.json$/i },\n\t\t{ tag: 'tasks.json', filePattern: /^tasks\\.json$/i },\n\t\t{ tag: 'launch.json', filePattern: /^launch\\.json$/i },\n\t\t{ tag: 'settings.json', filePattern: /^settings\\.json$/i },\n\t\t{ tag: 'webpack.config.js', filePattern: /^webpack\\.config\\.js$/i },\n\t\t{ tag: 'project.json', filePattern: /^project\\.json$/i },\n\t\t{ tag: 'makefile', filePattern: /^makefile$/i },\n\t\t{ tag: 'sln', filePattern: /^.+\\.sln$/i },\n\t\t{ tag: 'csproj', filePattern: /^.+\\.csproj$/i },\n\t\t{ tag: 'cmake', filePattern: /^.+\\.cmake$/i },\n\t\t{ tag: 'github-actions', filePattern: /^.+\\.ya?ml$/i, relativePathPattern: /^\\.github(?:\\/|\\\\)workflows$/i },\n\t\t{ tag: 'devcontainer.json', filePattern: /^devcontainer\\.json$/i },\n\t\t{ tag: 'dockerfile', filePattern: /^(dockerfile|docker\\-compose\\.ya?ml)$/i }\n\t];\n\n\tconst fileTypes = new Map<string, number>();\n\tconst configFiles = new Map<string, number>();\n\n\tconst MAX_FILES = 20000;\n\n\tfunction collect(root: string, dir: string, filter: string[], token: { count: number; maxReached: boolean }): Promise<void> {\n\t\tconst relativePath = dir.substring(root.length + 1);\n\n\t\treturn Promises.withAsyncBody(async resolve => {\n\t\t\tlet files: IDirent[];\n\t\t\ttry {\n\t\t\t\tfiles = await pfs.readdir(dir, { withFileTypes: true });\n\t\t\t} catch (error) {\n\t\t\t\t// Ignore folders that can't be read\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (token.count >= MAX_FILES) {\n\t\t\t\ttoken.count += files.length;\n\t\t\t\ttoken.maxReached = true;\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet pending = files.length;\n\t\t\tif (pending === 0) {\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet filesToRead = files;\n\t\t\tif (token.count + files.length > MAX_FILES) {\n\t\t\t\ttoken.maxReached = true;\n\t\t\t\tpending = MAX_FILES - token.count;\n\t\t\t\tfilesToRead = files.slice(0, pending);\n\t\t\t}\n\n\t\t\ttoken.count += files.length;\n\n\t\t\tfor (const file of filesToRead) {\n\t\t\t\tif (file.isDirectory()) {\n\t\t\t\t\tif (!filter.includes(file.name)) {\n\t\t\t\t\t\tawait collect(root, join(dir, file.name), filter, token);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (--pending === 0) {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst index = file.name.lastIndexOf('.');\n\t\t\t\t\tif (index >= 0) {\n\t\t\t\t\t\tconst fileType = file.name.substring(index + 1);\n\t\t\t\t\t\tif (fileType) {\n\t\t\t\t\t\t\tfileTypes.set(fileType, (fileTypes.get(fileType) ?? 0) + 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const configFile of configFilePatterns) {\n\t\t\t\t\t\tif (configFile.relativePathPattern?.test(relativePath) !== false && configFile.filePattern.test(file.name)) {\n\t\t\t\t\t\t\tconfigFiles.set(configFile.tag, (configFiles.get(configFile.tag) ?? 0) + 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (--pending === 0) {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tconst statsPromise = Promises.withAsyncBody<WorkspaceStats>(async (resolve) => {\n\t\tconst token: { count: number; maxReached: boolean } = { count: 0, maxReached: false };\n\n\t\tawait collect(folder, folder, filter, token);\n\t\tconst launchConfigs = await collectLaunchConfigs(folder);\n\t\tresolve({\n\t\t\tconfigFiles: asSortedItems(configFiles),\n\t\t\tfileTypes: asSortedItems(fileTypes),\n\t\t\tfileCount: token.count,\n\t\t\tmaxFilesReached: token.maxReached,\n\t\t\tlaunchConfigFiles: launchConfigs\n\t\t});\n\t});\n\n\tworksapceStatsCache.set(cacheKey, statsPromise);\n\treturn statsPromise;\n}\n\nfunction asSortedItems(items: Map<string, number>): WorkspaceStatItem[] {\n\treturn [\n\t\t...Iterable.map(items.entries(), ([name, count]) => ({ name: name, count: count }))\n\t].sort((a, b) => b.count - a.count);\n}\n\nexport function getMachineInfo(): IMachineInfo {\n\n\tconst machineInfo: IMachineInfo = {\n\t\tos: `${osLib.type()} ${osLib.arch()} ${osLib.release()}`,\n\t\tmemory: `${(osLib.totalmem() / ByteSize.GB).toFixed(2)}GB (${(osLib.freemem() / ByteSize.GB).toFixed(2)}GB free)`,\n\t\tvmHint: `${Math.round((virtualMachineHint.value() * 100))}%`,\n\t};\n\n\tconst cpus = osLib.cpus();\n\tif (cpus && cpus.length > 0) {\n\t\tmachineInfo.cpus = `${cpus[0].model} (${cpus.length} x ${cpus[0].speed})`;\n\t}\n\n\treturn machineInfo;\n}\n\nexport async function collectLaunchConfigs(folder: string): Promise<WorkspaceStatItem[]> {\n\ttry {\n\t\tconst launchConfigs = new Map<string, number>();\n\t\tconst launchConfig = join(folder, '.vscode', 'launch.json');\n\n\t\tconst contents = await pfs.readFile(launchConfig);\n\n\t\tconst errors: ParseError[] = [];\n\t\tconst json = parse(contents.toString(), errors);\n\t\tif (errors.length) {\n\t\t\tconsole.log(`Unable to parse ${launchConfig}`);\n\t\t\treturn [];\n\t\t}\n\n\t\tif (getNodeType(json) === 'object' && json['configurations']) {\n\t\t\tfor (const each of json['configurations']) {\n\t\t\t\tconst type = each['type'];\n\t\t\t\tif (type) {\n\t\t\t\t\tif (launchConfigs.has(type)) {\n\t\t\t\t\t\tlaunchConfigs.set(type, launchConfigs.get(type)! + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlaunchConfigs.set(type, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn asSortedItems(launchConfigs);\n\t} catch (error) {\n\t\treturn [];\n\t}\n}\n\nexport class DiagnosticsService implements IDiagnosticsService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IProductService private readonly productService: IProductService\n\t) { }\n\n\tprivate formatMachineInfo(info: IMachineInfo): string {\n\t\tconst output: string[] = [];\n\t\toutput.push(`OS Version:       ${info.os}`);\n\t\toutput.push(`CPUs:             ${info.cpus}`);\n\t\toutput.push(`Memory (System):  ${info.memory}`);\n\t\toutput.push(`VM:               ${info.vmHint}`);\n\n\t\treturn output.join('\\n');\n\t}\n\n\tprivate formatEnvironment(info: IMainProcessInfo): string {\n\t\tconst output: string[] = [];\n\t\toutput.push(`Version:          ${this.productService.nameShort} ${this.productService.version} (${this.productService.commit || 'Commit unknown'}, ${this.productService.date || 'Date unknown'})`);\n\t\toutput.push(`OS Version:       ${osLib.type()} ${osLib.arch()} ${osLib.release()}`);\n\t\tconst cpus = osLib.cpus();\n\t\tif (cpus && cpus.length > 0) {\n\t\t\toutput.push(`CPUs:             ${cpus[0].model} (${cpus.length} x ${cpus[0].speed})`);\n\t\t}\n\t\toutput.push(`Memory (System):  ${(osLib.totalmem() / ByteSize.GB).toFixed(2)}GB (${(osLib.freemem() / ByteSize.GB).toFixed(2)}GB free)`);\n\t\tif (!isWindows) {\n\t\t\toutput.push(`Load (avg):       ${osLib.loadavg().map(l => Math.round(l)).join(', ')}`); // only provided on Linux/macOS\n\t\t}\n\t\toutput.push(`VM:               ${Math.round((virtualMachineHint.value() * 100))}%`);\n\t\toutput.push(`Screen Reader:    ${info.screenReader ? 'yes' : 'no'}`);\n\t\toutput.push(`Process Argv:     ${info.mainArguments.join(' ')}`);\n\t\toutput.push(`GPU Status:       ${this.expandGPUFeatures(info.gpuFeatureStatus)}`);\n\n\t\treturn output.join('\\n');\n\t}\n\n\tpublic async getPerformanceInfo(info: IMainProcessInfo, remoteData: (IRemoteDiagnosticInfo | IRemoteDiagnosticError)[]): Promise<PerformanceInfo> {\n\t\treturn Promise.all([listProcesses(info.mainPID), this.formatWorkspaceMetadata(info)]).then(async result => {\n\t\t\tlet [rootProcess, workspaceInfo] = result;\n\t\t\tlet processInfo = this.formatProcessList(info, rootProcess);\n\n\t\t\tremoteData.forEach(diagnostics => {\n\t\t\t\tif (isRemoteDiagnosticError(diagnostics)) {\n\t\t\t\t\tprocessInfo += `\\n${diagnostics.errorMessage}`;\n\t\t\t\t\tworkspaceInfo += `\\n${diagnostics.errorMessage}`;\n\t\t\t\t} else {\n\t\t\t\t\tprocessInfo += `\\n\\nRemote: ${diagnostics.hostName}`;\n\t\t\t\t\tif (diagnostics.processes) {\n\t\t\t\t\t\tprocessInfo += `\\n${this.formatProcessList(info, diagnostics.processes)}`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diagnostics.workspaceMetadata) {\n\t\t\t\t\t\tworkspaceInfo += `\\n|  Remote: ${diagnostics.hostName}`;\n\t\t\t\t\t\tfor (const folder of Object.keys(diagnostics.workspaceMetadata)) {\n\t\t\t\t\t\t\tconst metadata = diagnostics.workspaceMetadata[folder];\n\n\t\t\t\t\t\t\tlet countMessage = `${metadata.fileCount} files`;\n\t\t\t\t\t\t\tif (metadata.maxFilesReached) {\n\t\t\t\t\t\t\t\tcountMessage = `more than ${countMessage}`;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tworkspaceInfo += `|    Folder (${folder}): ${countMessage}`;\n\t\t\t\t\t\t\tworkspaceInfo += this.formatWorkspaceStats(metadata);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\tprocessInfo,\n\t\t\t\tworkspaceInfo\n\t\t\t};\n\t\t});\n\t}\n\n\tpublic async getSystemInfo(info: IMainProcessInfo, remoteData: (IRemoteDiagnosticInfo | IRemoteDiagnosticError)[]): Promise<SystemInfo> {\n\t\tconst { memory, vmHint, os, cpus } = getMachineInfo();\n\t\tconst systemInfo: SystemInfo = {\n\t\t\tos,\n\t\t\tmemory,\n\t\t\tcpus,\n\t\t\tvmHint,\n\t\t\tprocessArgs: `${info.mainArguments.join(' ')}`,\n\t\t\tgpuStatus: info.gpuFeatureStatus,\n\t\t\tscreenReader: `${info.screenReader ? 'yes' : 'no'}`,\n\t\t\tremoteData\n\t\t};\n\n\t\tif (!isWindows) {\n\t\t\tsystemInfo.load = `${osLib.loadavg().map(l => Math.round(l)).join(', ')}`;\n\t\t}\n\n\t\tif (isLinux) {\n\t\t\tsystemInfo.linuxEnv = {\n\t\t\t\tdesktopSession: process.env['DESKTOP_SESSION'],\n\t\t\t\txdgSessionDesktop: process.env['XDG_SESSION_DESKTOP'],\n\t\t\t\txdgCurrentDesktop: process.env['XDG_CURRENT_DESKTOP'],\n\t\t\t\txdgSessionType: process.env['XDG_SESSION_TYPE']\n\t\t\t};\n\t\t}\n\n\t\treturn Promise.resolve(systemInfo);\n\t}\n\n\tpublic async getDiagnostics(info: IMainProcessInfo, remoteDiagnostics: (IRemoteDiagnosticInfo | IRemoteDiagnosticError)[]): Promise<string> {\n\t\tconst output: string[] = [];\n\t\treturn listProcesses(info.mainPID).then(async rootProcess => {\n\n\t\t\t// Environment Info\n\t\t\toutput.push('');\n\t\t\toutput.push(this.formatEnvironment(info));\n\n\t\t\t// Process List\n\t\t\toutput.push('');\n\t\t\toutput.push(this.formatProcessList(info, rootProcess));\n\n\t\t\t// Workspace Stats\n\t\t\tif (info.windows.some(window => window.folderURIs && window.folderURIs.length > 0 && !window.remoteAuthority)) {\n\t\t\t\toutput.push('');\n\t\t\t\toutput.push('Workspace Stats: ');\n\t\t\t\toutput.push(await this.formatWorkspaceMetadata(info));\n\t\t\t}\n\n\t\t\tremoteDiagnostics.forEach(diagnostics => {\n\t\t\t\tif (isRemoteDiagnosticError(diagnostics)) {\n\t\t\t\t\toutput.push(`\\n${diagnostics.errorMessage}`);\n\t\t\t\t} else {\n\t\t\t\t\toutput.push('\\n\\n');\n\t\t\t\t\toutput.push(`Remote:           ${diagnostics.hostName}`);\n\t\t\t\t\toutput.push(this.formatMachineInfo(diagnostics.machineInfo));\n\n\t\t\t\t\tif (diagnostics.processes) {\n\t\t\t\t\t\toutput.push(this.formatProcessList(info, diagnostics.processes));\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diagnostics.workspaceMetadata) {\n\t\t\t\t\t\tfor (const folder of Object.keys(diagnostics.workspaceMetadata)) {\n\t\t\t\t\t\t\tconst metadata = diagnostics.workspaceMetadata[folder];\n\n\t\t\t\t\t\t\tlet countMessage = `${metadata.fileCount} files`;\n\t\t\t\t\t\t\tif (metadata.maxFilesReached) {\n\t\t\t\t\t\t\t\tcountMessage = `more than ${countMessage}`;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\toutput.push(`Folder (${folder}): ${countMessage}`);\n\t\t\t\t\t\t\toutput.push(this.formatWorkspaceStats(metadata));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\toutput.push('');\n\t\t\toutput.push('');\n\n\t\t\treturn output.join('\\n');\n\t\t});\n\t}\n\n\tprivate formatWorkspaceStats(workspaceStats: WorkspaceStats): string {\n\t\tconst output: string[] = [];\n\t\tconst lineLength = 60;\n\t\tlet col = 0;\n\n\t\tconst appendAndWrap = (name: string, count: number) => {\n\t\t\tconst item = ` ${name}(${count})`;\n\n\t\t\tif (col + item.length > lineLength) {\n\t\t\t\toutput.push(line);\n\t\t\t\tline = '|                 ';\n\t\t\t\tcol = line.length;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcol += item.length;\n\t\t\t}\n\t\t\tline += item;\n\t\t};\n\n\t\t// File Types\n\t\tlet line = '|      File types:';\n\t\tconst maxShown = 10;\n\t\tconst max = workspaceStats.fileTypes.length > maxShown ? maxShown : workspaceStats.fileTypes.length;\n\t\tfor (let i = 0; i < max; i++) {\n\t\t\tconst item = workspaceStats.fileTypes[i];\n\t\t\tappendAndWrap(item.name, item.count);\n\t\t}\n\t\toutput.push(line);\n\n\t\t// Conf Files\n\t\tif (workspaceStats.configFiles.length >= 0) {\n\t\t\tline = '|      Conf files:';\n\t\t\tcol = 0;\n\t\t\tworkspaceStats.configFiles.forEach((item) => {\n\t\t\t\tappendAndWrap(item.name, item.count);\n\t\t\t});\n\t\t\toutput.push(line);\n\t\t}\n\n\t\tif (workspaceStats.launchConfigFiles.length > 0) {\n\t\t\tlet line = '|      Launch Configs:';\n\t\t\tworkspaceStats.launchConfigFiles.forEach(each => {\n\t\t\t\tconst item = each.count > 1 ? ` ${each.name}(${each.count})` : ` ${each.name}`;\n\t\t\t\tline += item;\n\t\t\t});\n\t\t\toutput.push(line);\n\t\t}\n\t\treturn output.join('\\n');\n\t}\n\n\tprivate expandGPUFeatures(gpuFeatures: any): string {\n\t\tconst longestFeatureName = Math.max(...Object.keys(gpuFeatures).map(feature => feature.length));\n\t\t// Make columns aligned by adding spaces after feature name\n\t\treturn Object.keys(gpuFeatures).map(feature => `${feature}:  ${' '.repeat(longestFeatureName - feature.length)}  ${gpuFeatures[feature]}`).join('\\n                  ');\n\t}\n\n\tprivate formatWorkspaceMetadata(info: IMainProcessInfo): Promise<string> {\n\t\tconst output: string[] = [];\n\t\tconst workspaceStatPromises: Promise<void>[] = [];\n\n\t\tinfo.windows.forEach(window => {\n\t\t\tif (window.folderURIs.length === 0 || !!window.remoteAuthority) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\toutput.push(`|  Window (${window.title})`);\n\n\t\t\twindow.folderURIs.forEach(uriComponents => {\n\t\t\t\tconst folderUri = URI.revive(uriComponents);\n\t\t\t\tif (folderUri.scheme === Schemas.file) {\n\t\t\t\t\tconst folder = folderUri.fsPath;\n\t\t\t\t\tworkspaceStatPromises.push(collectWorkspaceStats(folder, ['node_modules', '.git']).then(stats => {\n\t\t\t\t\t\tlet countMessage = `${stats.fileCount} files`;\n\t\t\t\t\t\tif (stats.maxFilesReached) {\n\t\t\t\t\t\t\tcountMessage = `more than ${countMessage}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\toutput.push(`|    Folder (${basename(folder)}): ${countMessage}`);\n\t\t\t\t\t\toutput.push(this.formatWorkspaceStats(stats));\n\n\t\t\t\t\t}).catch(error => {\n\t\t\t\t\t\toutput.push(`|      Error: Unable to collect workspace stats for folder ${folder} (${error.toString()})`);\n\t\t\t\t\t}));\n\t\t\t\t} else {\n\t\t\t\t\toutput.push(`|    Folder (${folderUri.toString()}): Workspace stats not available.`);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn Promise.all(workspaceStatPromises)\n\t\t\t.then(_ => output.join('\\n'))\n\t\t\t.catch(e => `Unable to collect workspace stats: ${e}`);\n\t}\n\n\tprivate formatProcessList(info: IMainProcessInfo, rootProcess: ProcessItem): string {\n\t\tconst mapPidToWindowTitle = new Map<number, string>();\n\t\tinfo.windows.forEach(window => mapPidToWindowTitle.set(window.pid, window.title));\n\n\t\tconst output: string[] = [];\n\n\t\toutput.push('CPU %\\tMem MB\\t   PID\\tProcess');\n\n\t\tif (rootProcess) {\n\t\t\tthis.formatProcessItem(info.mainPID, mapPidToWindowTitle, output, rootProcess, 0);\n\t\t}\n\n\t\treturn output.join('\\n');\n\t}\n\n\tprivate formatProcessItem(mainPid: number, mapPidToWindowTitle: Map<number, string>, output: string[], item: ProcessItem, indent: number): void {\n\t\tconst isRoot = (indent === 0);\n\n\t\t// Format name with indent\n\t\tlet name: string;\n\t\tif (isRoot) {\n\t\t\tname = item.pid === mainPid ? `${this.productService.applicationName} main` : 'remote agent';\n\t\t} else {\n\t\t\tname = `${'  '.repeat(indent)} ${item.name}`;\n\n\t\t\tif (item.name === 'window') {\n\t\t\t\tname = `${name} (${mapPidToWindowTitle.get(item.pid)})`;\n\t\t\t}\n\t\t}\n\n\t\tconst memory = process.platform === 'win32' ? item.mem : (osLib.totalmem() * (item.mem / 100));\n\t\toutput.push(`${item.load.toFixed(0).padStart(5, ' ')}\\t${(memory / ByteSize.MB).toFixed(0).padStart(6, ' ')}\\t${item.pid.toFixed(0).padStart(6, ' ')}\\t${name}`);\n\n\t\t// Recurse into children if any\n\t\tif (Array.isArray(item.children)) {\n\t\t\titem.children.forEach(child => this.formatProcessItem(mainPid, mapPidToWindowTitle, output, child, indent + 1));\n\t\t}\n\t}\n\n\tpublic async getWorkspaceFileExtensions(workspace: IWorkspace): Promise<{ extensions: string[] }> {\n\t\tconst items = new Set<string>();\n\t\tfor (const { uri } of workspace.folders) {\n\t\t\tconst folderUri = URI.revive(uri);\n\t\t\tif (folderUri.scheme !== Schemas.file) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst folder = folderUri.fsPath;\n\t\t\ttry {\n\t\t\t\tconst stats = await collectWorkspaceStats(folder, ['node_modules', '.git']);\n\t\t\t\tstats.fileTypes.forEach(item => items.add(item.name));\n\t\t\t} catch { }\n\t\t}\n\t\treturn { extensions: [...items] };\n\t}\n\n\tpublic async reportWorkspaceStats(workspace: IWorkspaceInformation): Promise<void> {\n\t\tfor (const { uri } of workspace.folders) {\n\t\t\tconst folderUri = URI.revive(uri);\n\t\t\tif (folderUri.scheme !== Schemas.file) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst folder = folderUri.fsPath;\n\t\t\ttry {\n\t\t\t\tconst stats = await collectWorkspaceStats(folder, ['node_modules', '.git']);\n\t\t\t\ttype WorkspaceStatsClassification = {\n\t\t\t\t\towner: 'lramos15';\n\t\t\t\t\tcomment: 'Metadata related to the workspace';\n\t\t\t\t\t'workspace.id': { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'A UUID given to a workspace to identify it.' };\n\t\t\t\t\trendererSessionId: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'The ID of the session' };\n\t\t\t\t};\n\t\t\t\ttype WorkspaceStatsEvent = {\n\t\t\t\t\t'workspace.id': string | undefined;\n\t\t\t\t\trendererSessionId: string;\n\t\t\t\t};\n\t\t\t\tthis.telemetryService.publicLog2<WorkspaceStatsEvent, WorkspaceStatsClassification>('workspace.stats', {\n\t\t\t\t\t'workspace.id': workspace.telemetryId,\n\t\t\t\t\trendererSessionId: workspace.rendererSessionId\n\t\t\t\t});\n\t\t\t\ttype WorkspaceStatsFileClassification = {\n\t\t\t\t\towner: 'lramos15';\n\t\t\t\t\tcomment: 'Helps us gain insights into what type of files are being used in a workspace';\n\t\t\t\t\trendererSessionId: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'The ID of the session.' };\n\t\t\t\t\ttype: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; isMeasurement: true; comment: 'The type of file' };\n\t\t\t\t\tcount: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; isMeasurement: true; comment: 'How many types of that file are present' };\n\t\t\t\t};\n\t\t\t\ttype WorkspaceStatsFileEvent = {\n\t\t\t\t\trendererSessionId: string;\n\t\t\t\t\ttype: string;\n\t\t\t\t\tcount: number;\n\t\t\t\t};\n\t\t\t\tstats.fileTypes.forEach(e => {\n\t\t\t\t\tthis.telemetryService.publicLog2<WorkspaceStatsFileEvent, WorkspaceStatsFileClassification>('workspace.stats.file', {\n\t\t\t\t\t\trendererSessionId: workspace.rendererSessionId,\n\t\t\t\t\t\ttype: e.name,\n\t\t\t\t\t\tcount: e.count\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tstats.launchConfigFiles.forEach(e => {\n\t\t\t\t\tthis.telemetryService.publicLog2<WorkspaceStatsFileEvent, WorkspaceStatsFileClassification>('workspace.stats.launchConfigFile', {\n\t\t\t\t\t\trendererSessionId: workspace.rendererSessionId,\n\t\t\t\t\t\ttype: e.name,\n\t\t\t\t\t\tcount: e.count\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tstats.configFiles.forEach(e => {\n\t\t\t\t\tthis.telemetryService.publicLog2<WorkspaceStatsFileEvent, WorkspaceStatsFileClassification>('workspace.stats.configFiles', {\n\t\t\t\t\t\trendererSessionId: workspace.rendererSessionId,\n\t\t\t\t\t\ttype: e.name,\n\t\t\t\t\t\tcount: e.count\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} catch {\n\t\t\t\t// Report nothing if collecting metadata fails.\n\t\t\t}\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { safeStringify } from 'vs/base/common/objects';\nimport { staticObservableValue } from 'vs/base/common/observableValue';\nimport { isObject } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { ConfigurationTarget, ConfigurationTargetToString, IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { verifyMicrosoftInternalDomain } from 'vs/platform/telemetry/common/commonProperties';\nimport { ClassifiedEvent, GDPRClassification, StrictPropertyCheck } from 'vs/platform/telemetry/common/gdprTypings';\nimport { ICustomEndpointTelemetryService, ITelemetryData, ITelemetryEndpoint, ITelemetryInfo, ITelemetryService, TelemetryConfiguration, TelemetryLevel, TELEMETRY_OLD_SETTING_ID, TELEMETRY_SETTING_ID } from 'vs/platform/telemetry/common/telemetry';\n\nexport class NullTelemetryServiceShape implements ITelemetryService {\n\tdeclare readonly _serviceBrand: undefined;\n\treadonly sendErrorTelemetry = false;\n\n\tpublicLog(eventName: string, data?: ITelemetryData) {\n\t\treturn Promise.resolve(undefined);\n\t}\n\tpublicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>) {\n\t\treturn this.publicLog(eventName, data as ITelemetryData);\n\t}\n\tpublicLogError(eventName: string, data?: ITelemetryData) {\n\t\treturn Promise.resolve(undefined);\n\t}\n\tpublicLogError2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>) {\n\t\treturn this.publicLogError(eventName, data as ITelemetryData);\n\t}\n\n\tsetExperimentProperty() { }\n\ttelemetryLevel = staticObservableValue(TelemetryLevel.NONE);\n\tgetTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\treturn Promise.resolve({\n\t\t\tinstanceId: 'someValue.instanceId',\n\t\t\tsessionId: 'someValue.sessionId',\n\t\t\tmachineId: 'someValue.machineId',\n\t\t\tfirstSessionDate: 'someValue.firstSessionDate'\n\t\t});\n\t}\n}\n\nexport const NullTelemetryService = new NullTelemetryServiceShape();\n\nexport class NullEndpointTelemetryService implements ICustomEndpointTelemetryService {\n\t_serviceBrand: undefined;\n\n\tasync publicLog(_endpoint: ITelemetryEndpoint, _eventName: string, _data?: ITelemetryData): Promise<void> {\n\t\t// noop\n\t}\n\n\tasync publicLogError(_endpoint: ITelemetryEndpoint, _errorEventName: string, _data?: ITelemetryData): Promise<void> {\n\t\t// noop\n\t}\n}\n\nexport interface ITelemetryAppender {\n\tlog(eventName: string, data: any): void;\n\tflush(): Promise<any>;\n}\n\nexport const NullAppender: ITelemetryAppender = { log: () => null, flush: () => Promise.resolve(null) };\n\n\n/* __GDPR__FRAGMENT__\n\t\"URIDescriptor\" : {\n\t\t\"mimeType\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"scheme\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"ext\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"path\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t}\n*/\nexport interface URIDescriptor {\n\tmimeType?: string;\n\tscheme?: string;\n\text?: string;\n\tpath?: string;\n}\n\nexport function configurationTelemetry(telemetryService: ITelemetryService, configurationService: IConfigurationService): IDisposable {\n\treturn configurationService.onDidChangeConfiguration(event => {\n\t\tif (event.source !== ConfigurationTarget.DEFAULT) {\n\t\t\ttype UpdateConfigurationClassification = {\n\t\t\t\towner: 'lramos15, sbatten';\n\t\t\t\tcomment: 'Event which fires when user updates telemetry configuration';\n\t\t\t\tconfigurationSource: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'What configuration file was updated i.e user or workspace' };\n\t\t\t\tconfigurationKeys: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'What configuration keys were updated' };\n\t\t\t};\n\t\t\ttype UpdateConfigurationEvent = {\n\t\t\t\tconfigurationSource: string;\n\t\t\t\tconfigurationKeys: string[];\n\t\t\t};\n\t\t\ttelemetryService.publicLog2<UpdateConfigurationEvent, UpdateConfigurationClassification>('updateConfiguration', {\n\t\t\t\tconfigurationSource: ConfigurationTargetToString(event.source),\n\t\t\t\tconfigurationKeys: flattenKeys(event.sourceConfig)\n\t\t\t});\n\t\t}\n\t});\n}\n\n/**\n * Determines whether or not we support logging telemetry.\n * This checks if the product is capable of collecting telemetry but not whether or not it can send it\n * For checking the user setting and what telemetry you can send please check `getTelemetryLevel`.\n * This returns true if `--disable-telemetry` wasn't used, the product.json allows for telemetry, and we're not testing an extension\n * If false telemetry is disabled throughout the product\n * @param productService\n * @param environmentService\n * @returns false - telemetry is completely disabled, true - telemetry is logged locally, but may not be sent\n */\nexport function supportsTelemetry(productService: IProductService, environmentService: IEnvironmentService): boolean {\n\treturn !(environmentService.disableTelemetry || !productService.enableTelemetry || environmentService.extensionTestsLocationURI);\n}\n\n/**\n * Determines how telemetry is handled based on the user's configuration.\n *\n * @param configurationService\n * @returns OFF, ERROR, ON\n */\nexport function getTelemetryLevel(configurationService: IConfigurationService): TelemetryLevel {\n\tconst newConfig = configurationService.getValue<TelemetryConfiguration>(TELEMETRY_SETTING_ID);\n\tconst crashReporterConfig = configurationService.getValue<boolean | undefined>('telemetry.enableCrashReporter');\n\tconst oldConfig = configurationService.getValue<boolean | undefined>(TELEMETRY_OLD_SETTING_ID);\n\n\t// If `telemetry.enableCrashReporter` is false or `telemetry.enableTelemetry' is false, disable telemetry\n\tif (oldConfig === false || crashReporterConfig === false) {\n\t\treturn TelemetryLevel.NONE;\n\t}\n\n\t// Maps new telemetry setting to a telemetry level\n\tswitch (newConfig ?? TelemetryConfiguration.ON) {\n\t\tcase TelemetryConfiguration.ON:\n\t\t\treturn TelemetryLevel.USAGE;\n\t\tcase TelemetryConfiguration.ERROR:\n\t\t\treturn TelemetryLevel.ERROR;\n\t\tcase TelemetryConfiguration.CRASH:\n\t\t\treturn TelemetryLevel.CRASH;\n\t\tcase TelemetryConfiguration.OFF:\n\t\t\treturn TelemetryLevel.NONE;\n\t}\n}\n\nexport interface Properties {\n\t[key: string]: string;\n}\n\nexport interface Measurements {\n\t[key: string]: number;\n}\n\nexport function validateTelemetryData(data?: any): { properties: Properties; measurements: Measurements } {\n\n\tconst properties: Properties = {};\n\tconst measurements: Measurements = {};\n\n\tconst flat: Record<string, any> = {};\n\tflatten(data, flat);\n\n\tfor (let prop in flat) {\n\t\t// enforce property names less than 150 char, take the last 150 char\n\t\tprop = prop.length > 150 ? prop.substr(prop.length - 149) : prop;\n\t\tconst value = flat[prop];\n\n\t\tif (typeof value === 'number') {\n\t\t\tmeasurements[prop] = value;\n\n\t\t} else if (typeof value === 'boolean') {\n\t\t\tmeasurements[prop] = value ? 1 : 0;\n\n\t\t} else if (typeof value === 'string') {\n\t\t\tif (value.length > 8192) {\n\t\t\t\tconsole.warn(`Telemetry property: ${prop} has been trimmed to 8192, the original length is ${value.length}`);\n\t\t\t}\n\t\t\t//enforce property value to be less than 8192 char, take the first 8192 char\n\t\t\t// https://docs.microsoft.com/en-us/azure/azure-monitor/app/api-custom-events-metrics#limits\n\t\t\tproperties[prop] = value.substring(0, 8191);\n\n\t\t} else if (typeof value !== 'undefined' && value !== null) {\n\t\t\tproperties[prop] = value;\n\t\t}\n\t}\n\n\treturn {\n\t\tproperties,\n\t\tmeasurements\n\t};\n}\n\nconst telemetryAllowedAuthorities: readonly string[] = ['ssh-remote', 'dev-container', 'attached-container', 'wsl', 'tunneling'];\n\nexport function cleanRemoteAuthority(remoteAuthority?: string): string {\n\tif (!remoteAuthority) {\n\t\treturn 'none';\n\t}\n\n\tfor (const authority of telemetryAllowedAuthorities) {\n\t\tif (remoteAuthority.startsWith(`${authority}+`)) {\n\t\t\treturn authority;\n\t\t}\n\t}\n\n\treturn 'other';\n}\n\nfunction flatten(obj: any, result: { [key: string]: any }, order: number = 0, prefix?: string): void {\n\tif (!obj) {\n\t\treturn;\n\t}\n\n\tfor (const item of Object.getOwnPropertyNames(obj)) {\n\t\tconst value = obj[item];\n\t\tconst index = prefix ? prefix + item : item;\n\n\t\tif (Array.isArray(value)) {\n\t\t\tresult[index] = safeStringify(value);\n\n\t\t} else if (value instanceof Date) {\n\t\t\t// TODO unsure why this is here and not in _getData\n\t\t\tresult[index] = value.toISOString();\n\n\t\t} else if (isObject(value)) {\n\t\t\tif (order < 2) {\n\t\t\t\tflatten(value, result, order + 1, index + '.');\n\t\t\t} else {\n\t\t\t\tresult[index] = safeStringify(value);\n\t\t\t}\n\t\t} else {\n\t\t\tresult[index] = value;\n\t\t}\n\t}\n}\n\nfunction flattenKeys(value: Object | undefined): string[] {\n\tif (!value) {\n\t\treturn [];\n\t}\n\tconst result: string[] = [];\n\tflatKeys(result, '', value);\n\treturn result;\n}\n\nfunction flatKeys(result: string[], prefix: string, value: { [key: string]: any } | undefined): void {\n\tif (value && typeof value === 'object' && !Array.isArray(value)) {\n\t\tObject.keys(value)\n\t\t\t.forEach(key => flatKeys(result, prefix ? `${prefix}.${key}` : key, value[key]));\n\t} else {\n\t\tresult.push(prefix);\n\t}\n}\n\n/**\n * Whether or not this is an internal user\n * @param productService The product service\n * @param configService The config servivce\n * @returns true if internal, false otherwise\n */\nexport function isInternalTelemetry(productService: IProductService, configService: IConfigurationService) {\n\tconst msftInternalDomains = productService.msftInternalDomains || [];\n\tconst internalTesting = configService.getValue<boolean>('telemetry.internalTesting');\n\treturn verifyMicrosoftInternalDomain(msftInternalDomains) || internalTesting;\n}\n\ninterface IPathEnvironment {\n\tappRoot: string;\n\textensionsPath: string;\n\tuserDataPath: string;\n\tuserHome: URI;\n\ttmpDir: URI;\n}\n\nexport function getPiiPathsFromEnvironment(paths: IPathEnvironment): string[] {\n\treturn [paths.appRoot, paths.extensionsPath, paths.userHome.fsPath, paths.tmpDir.fsPath, paths.userDataPath];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IHeaders } from 'vs/base/parts/request/common/request';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { getServiceMachineId } from 'vs/platform/externalServices/common/serviceMachineId';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { ITelemetryService, TelemetryLevel } from 'vs/platform/telemetry/common/telemetry';\nimport { getTelemetryLevel, supportsTelemetry } from 'vs/platform/telemetry/common/telemetryUtils';\n\nexport async function resolveMarketplaceHeaders(version: string,\n\tproductService: IProductService,\n\tenvironmentService: IEnvironmentService,\n\tconfigurationService: IConfigurationService,\n\tfileService: IFileService,\n\tstorageService: IStorageService | undefined,\n\ttelemetryService: ITelemetryService): Promise<IHeaders> {\n\tconst headers: IHeaders = {\n\t\t'X-Market-Client-Id': `VSCode ${version}`,\n\t\t'User-Agent': `VSCode ${version} (${productService.nameShort})`\n\t};\n\tconst uuid = await getServiceMachineId(environmentService, fileService, storageService);\n\tconst { sessionId } = await telemetryService.getTelemetryInfo();\n\n\tif (supportsTelemetry(productService, environmentService) && getTelemetryLevel(configurationService) === TelemetryLevel.USAGE) {\n\t\theaders['X-Market-User-Id'] = uuid;\n\t\theaders['VSCode-SessionId'] = sessionId;\n\t}\n\treturn headers;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { AppInsightsCore, IExtendedConfiguration } from '@microsoft/1ds-core-js';\nimport type { IChannelConfiguration, IXHROverride, PostChannel } from '@microsoft/1ds-post-js';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { mixin } from 'vs/base/common/objects';\nimport { ITelemetryAppender, validateTelemetryData } from 'vs/platform/telemetry/common/telemetryUtils';\n\nexport const telemetryEndpointUrl = 'https://mobile.events.data.microsoft.com/OneCollector/1.0';\n\nasync function getClient(instrumentationKey: string, addInternalFlag?: boolean, xhrOverride?: IXHROverride): Promise<AppInsightsCore> {\n\tconst oneDs = await import('@microsoft/1ds-core-js');\n\tconst postPlugin = await import('@microsoft/1ds-post-js');\n\tconst appInsightsCore = new oneDs.AppInsightsCore();\n\tconst collectorChannelPlugin: PostChannel = new postPlugin.PostChannel();\n\t// Configure the app insights core to send to collector++ and disable logging of debug info\n\tconst coreConfig: IExtendedConfiguration = {\n\t\tinstrumentationKey,\n\t\tendpointUrl: telemetryEndpointUrl,\n\t\tloggingLevelTelemetry: 0,\n\t\tloggingLevelConsole: 0,\n\t\tdisableCookiesUsage: true,\n\t\tdisableDbgExt: true,\n\t\tdisableInstrumentationKeyValidation: true,\n\t\tchannels: [[\n\t\t\tcollectorChannelPlugin\n\t\t]]\n\t};\n\n\tif (xhrOverride) {\n\t\tcoreConfig.extensionConfig = {};\n\t\t// Configure the channel to use a XHR Request override since it's not available in node\n\t\tconst channelConfig: IChannelConfiguration = {\n\t\t\talwaysUseXhrOverride: true,\n\t\t\thttpXHROverride: xhrOverride\n\t\t};\n\t\tcoreConfig.extensionConfig[collectorChannelPlugin.identifier] = channelConfig;\n\t}\n\n\tappInsightsCore.initialize(coreConfig, []);\n\n\tappInsightsCore.addTelemetryInitializer((envelope) => {\n\t\tif (addInternalFlag) {\n\t\t\tenvelope['ext'] = envelope['ext'] ?? {};\n\t\t\tenvelope['ext']['utc'] = envelope['ext']['utc'] ?? {};\n\t\t\t// Sets it to be internal only based on Windows UTC flagging\n\t\t\tenvelope['ext']['utc']['flags'] = 0x0000811ECD;\n\t\t}\n\t});\n\n\treturn appInsightsCore;\n}\n\n// TODO @lramos15 maybe make more in line with src/vs/platform/telemetry/browser/appInsightsAppender.ts with caching support\nexport abstract class AbstractOneDataSystemAppender implements ITelemetryAppender {\n\n\tprotected _aiCoreOrKey: AppInsightsCore | string | undefined;\n\tprivate _asyncAiCore: Promise<AppInsightsCore> | null;\n\tprotected readonly endPointUrl = telemetryEndpointUrl;\n\n\tconstructor(\n\t\tprivate readonly _isInternalTelemetry: boolean,\n\t\tprivate _eventPrefix: string,\n\t\tprivate _defaultData: { [key: string]: any } | null,\n\t\tiKeyOrClientFactory: string | (() => AppInsightsCore), // allow factory function for testing\n\t\tprivate _xhrOverride?: IXHROverride\n\t) {\n\t\tif (!this._defaultData) {\n\t\t\tthis._defaultData = {};\n\t\t}\n\n\t\tif (typeof iKeyOrClientFactory === 'function') {\n\t\t\tthis._aiCoreOrKey = iKeyOrClientFactory();\n\t\t} else {\n\t\t\tthis._aiCoreOrKey = iKeyOrClientFactory;\n\t\t}\n\t\tthis._asyncAiCore = null;\n\t}\n\n\tprivate _withAIClient(callback: (aiCore: AppInsightsCore) => void): void {\n\t\tif (!this._aiCoreOrKey) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (typeof this._aiCoreOrKey !== 'string') {\n\t\t\tcallback(this._aiCoreOrKey);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._asyncAiCore) {\n\t\t\tthis._asyncAiCore = getClient(this._aiCoreOrKey, this._isInternalTelemetry, this._xhrOverride);\n\t\t}\n\n\t\tthis._asyncAiCore.then(\n\t\t\t(aiClient) => {\n\t\t\t\tcallback(aiClient);\n\t\t\t},\n\t\t\t(err) => {\n\t\t\t\tonUnexpectedError(err);\n\t\t\t\tconsole.error(err);\n\t\t\t}\n\t\t);\n\t}\n\n\tlog(eventName: string, data?: any): void {\n\t\tif (!this._aiCoreOrKey) {\n\t\t\treturn;\n\t\t}\n\t\tdata = mixin(data, this._defaultData);\n\t\tdata = validateTelemetryData(data);\n\t\tconst name = this._eventPrefix + '/' + eventName;\n\n\t\ttry {\n\t\t\tthis._withAIClient((aiClient) => {\n\t\t\t\taiClient.pluginVersionString = data?.properties.version ?? 'Unknown';\n\t\t\t\taiClient.track({\n\t\t\t\t\tname,\n\t\t\t\t\tbaseData: { name, properties: data?.properties, measurements: data?.measurements }\n\t\t\t\t});\n\t\t\t});\n\t\t} catch { }\n\t}\n\n\tflush(): Promise<any> {\n\t\tif (this._aiCoreOrKey) {\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tthis._withAIClient((aiClient) => {\n\t\t\t\t\taiClient.unload(true, () => {\n\t\t\t\t\t\tthis._aiCoreOrKey = undefined;\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { cloneAndChange, mixin } from 'vs/base/common/objects';\nimport { MutableObservableValue } from 'vs/base/common/observableValue';\nimport { isWeb } from 'vs/base/common/platform';\nimport { escapeRegExpCharacters } from 'vs/base/common/strings';\nimport { localize } from 'vs/nls';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationScope, Extensions, IConfigurationRegistry } from 'vs/platform/configuration/common/configurationRegistry';\nimport product from 'vs/platform/product/common/product';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { ClassifiedEvent, GDPRClassification, StrictPropertyCheck } from 'vs/platform/telemetry/common/gdprTypings';\nimport { ITelemetryData, ITelemetryInfo, ITelemetryService, TelemetryConfiguration, TelemetryLevel, TELEMETRY_OLD_SETTING_ID, TELEMETRY_SECTION_ID, TELEMETRY_SETTING_ID } from 'vs/platform/telemetry/common/telemetry';\nimport { getTelemetryLevel, ITelemetryAppender } from 'vs/platform/telemetry/common/telemetryUtils';\n\nexport interface ITelemetryServiceConfig {\n\tappenders: ITelemetryAppender[];\n\tsendErrorTelemetry?: boolean;\n\tcommonProperties?: Promise<{ [name: string]: any }>;\n\tpiiPaths?: string[];\n}\n\nexport class TelemetryService implements ITelemetryService {\n\n\tstatic readonly IDLE_START_EVENT_NAME = 'UserIdleStart';\n\tstatic readonly IDLE_STOP_EVENT_NAME = 'UserIdleStop';\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _appenders: ITelemetryAppender[];\n\tprivate _commonProperties: Promise<{ [name: string]: any }>;\n\tprivate _experimentProperties: { [name: string]: string } = {};\n\tprivate _piiPaths: string[];\n\tprivate _sendErrorTelemetry: boolean;\n\n\tpublic readonly telemetryLevel = new MutableObservableValue<TelemetryLevel>(TelemetryLevel.USAGE);\n\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate _cleanupPatterns: RegExp[] = [];\n\n\tconstructor(\n\t\tconfig: ITelemetryServiceConfig,\n\t\t@IConfigurationService private _configurationService: IConfigurationService,\n\t\t@IProductService private _productService: IProductService\n\t) {\n\t\tthis._appenders = config.appenders;\n\t\tthis._commonProperties = config.commonProperties || Promise.resolve({});\n\t\tthis._piiPaths = config.piiPaths || [];\n\t\tthis._sendErrorTelemetry = !!config.sendErrorTelemetry;\n\n\t\t// static cleanup pattern for: `file:///DANGEROUS/PATH/resources/app/Useful/Information`\n\t\tthis._cleanupPatterns = [/file:\\/\\/\\/.*?\\/resources\\/app\\//gi];\n\n\t\tfor (const piiPath of this._piiPaths) {\n\t\t\tthis._cleanupPatterns.push(new RegExp(escapeRegExpCharacters(piiPath), 'gi'));\n\t\t}\n\n\t\tthis._updateTelemetryLevel();\n\t\tthis._configurationService.onDidChangeConfiguration(this._updateTelemetryLevel, this, this._disposables);\n\t}\n\n\tsetExperimentProperty(name: string, value: string): void {\n\t\tthis._experimentProperties[name] = value;\n\t}\n\n\tprivate _updateTelemetryLevel(): void {\n\t\tlet level = getTelemetryLevel(this._configurationService);\n\t\tconst collectableTelemetry = this._productService.enabledTelemetryLevels;\n\t\t// Also ensure that error telemetry is respecting the product configuration for collectable telemetry\n\t\tif (collectableTelemetry) {\n\t\t\tthis._sendErrorTelemetry = this.sendErrorTelemetry ? collectableTelemetry.error : false;\n\t\t\t// Make sure the telemetry level from the service is the minimum of the config and product\n\t\t\tconst maxCollectableTelemetryLevel = collectableTelemetry.usage ? TelemetryLevel.USAGE : collectableTelemetry.error ? TelemetryLevel.ERROR : TelemetryLevel.NONE;\n\t\t\tlevel = Math.min(level, maxCollectableTelemetryLevel);\n\t\t}\n\n\t\tthis.telemetryLevel.value = level;\n\t}\n\n\tget sendErrorTelemetry(): boolean {\n\t\treturn this._sendErrorTelemetry;\n\t}\n\n\tasync getTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\tconst values = await this._commonProperties;\n\n\t\t// well known properties\n\t\tconst sessionId = values['sessionID'];\n\t\tconst machineId = values['common.machineId'];\n\t\tconst firstSessionDate = values['common.firstSessionDate'];\n\t\tconst msftInternal = values['common.msftInternal'];\n\n\t\treturn { sessionId, machineId, firstSessionDate, msftInternal };\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t}\n\n\tprivate _log(eventName: string, eventLevel: TelemetryLevel, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<any> {\n\t\t// don't send events when the user is optout\n\t\tif (this.telemetryLevel.value < eventLevel) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn this._commonProperties.then(values => {\n\n\t\t\t// (first) add common properties\n\t\t\tdata = mixin(data, values);\n\n\t\t\t// (next) add experiment properties\n\t\t\tdata = mixin(data, this._experimentProperties);\n\n\t\t\t// (last) remove all PII from data\n\t\t\tdata = cloneAndChange(data, value => {\n\t\t\t\tif (typeof value === 'string') {\n\t\t\t\t\treturn this._cleanupInfo(value, anonymizeFilePaths);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\n\t\t\t// Log to the appenders of sufficient level\n\t\t\tthis._appenders.forEach(a => a.log(eventName, data));\n\n\t\t}, err => {\n\t\t\t// unsure what to do now...\n\t\t\tconsole.error(err);\n\t\t});\n\t}\n\n\tpublicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<any> {\n\t\treturn this._log(eventName, TelemetryLevel.USAGE, data, anonymizeFilePaths);\n\t}\n\n\tpublicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>, anonymizeFilePaths?: boolean): Promise<any> {\n\t\treturn this.publicLog(eventName, data as ITelemetryData, anonymizeFilePaths);\n\t}\n\n\tpublicLogError(errorEventName: string, data?: ITelemetryData): Promise<any> {\n\t\tif (!this._sendErrorTelemetry) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\t// Send error event and anonymize paths\n\t\treturn this._log(errorEventName, TelemetryLevel.ERROR, data, true);\n\t}\n\n\tpublicLogError2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>): Promise<any> {\n\t\treturn this.publicLogError(eventName, data as ITelemetryData);\n\t}\n\n\tprivate _anonymizeFilePaths(stack: string): string {\n\t\tlet updatedStack = stack;\n\n\t\tconst cleanUpIndexes: [number, number][] = [];\n\t\tfor (const regexp of this._cleanupPatterns) {\n\t\t\twhile (true) {\n\t\t\t\tconst result = regexp.exec(stack);\n\t\t\t\tif (!result) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcleanUpIndexes.push([result.index, regexp.lastIndex]);\n\t\t\t}\n\t\t}\n\n\t\tconst nodeModulesRegex = /^[\\\\\\/]?(node_modules|node_modules\\.asar)[\\\\\\/]/;\n\t\tconst fileRegex = /(file:\\/\\/)?([a-zA-Z]:(\\\\\\\\|\\\\|\\/)|(\\\\\\\\|\\\\|\\/))?([\\w-\\._]+(\\\\\\\\|\\\\|\\/))+[\\w-\\._]*/g;\n\t\tlet lastIndex = 0;\n\t\tupdatedStack = '';\n\n\t\twhile (true) {\n\t\t\tconst result = fileRegex.exec(stack);\n\t\t\tif (!result) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// Anoynimize user file paths that do not need to be retained or cleaned up.\n\t\t\tif (!nodeModulesRegex.test(result[0]) && cleanUpIndexes.every(([x, y]) => result.index < x || result.index >= y)) {\n\t\t\t\tupdatedStack += stack.substring(lastIndex, result.index) + '<REDACTED: user-file-path>';\n\t\t\t\tlastIndex = fileRegex.lastIndex;\n\t\t\t}\n\t\t}\n\t\tif (lastIndex < stack.length) {\n\t\t\tupdatedStack += stack.substr(lastIndex);\n\t\t}\n\n\t\treturn updatedStack;\n\t}\n\n\tprivate _removePropertiesWithPossibleUserInfo(property: string): string {\n\t\t// If for some reason it is undefined we skip it (this shouldn't be possible);\n\t\tif (!property) {\n\t\t\treturn property;\n\t\t}\n\n\t\tconst value = property.toLowerCase();\n\n\t\tconst userDataRegexes = [\n\t\t\t{ label: 'Google API Key', regex: /AIza[A-Za-z0-9_\\\\\\-]{35}/ },\n\t\t\t{ label: 'Slack Token', regex: /xox[pbar]\\-[A-Za-z0-9]/ },\n\t\t\t{ label: 'Generic Secret', regex: /(key|token|sig|secret|signature|password|passwd|pwd|android:value)[^a-zA-Z0-9]/ },\n\t\t\t{ label: 'Email', regex: /@[a-zA-Z0-9-.]+/ } // Regex which matches @*.site\n\t\t];\n\n\t\t// Check for common user data in the telemetry events\n\t\tfor (const secretRegex of userDataRegexes) {\n\t\t\tif (secretRegex.regex.test(value)) {\n\t\t\t\treturn `<REDACTED: ${secretRegex.label}>`;\n\t\t\t}\n\t\t}\n\n\t\treturn property;\n\t}\n\n\n\tprivate _cleanupInfo(property: string, anonymizeFilePaths?: boolean): string {\n\t\tlet updatedProperty = property;\n\n\t\t// anonymize file paths\n\t\tif (anonymizeFilePaths) {\n\t\t\tupdatedProperty = this._anonymizeFilePaths(updatedProperty);\n\t\t}\n\n\t\t// sanitize with configured cleanup patterns\n\t\tfor (const regexp of this._cleanupPatterns) {\n\t\t\tupdatedProperty = updatedProperty.replace(regexp, '');\n\t\t}\n\n\t\t// remove possible user info\n\t\tupdatedProperty = this._removePropertiesWithPossibleUserInfo(updatedProperty);\n\n\t\treturn updatedProperty;\n\t}\n}\n\nfunction getTelemetryLevelSettingDescription(): string {\n\tconst telemetryText = localize('telemetry.telemetryLevelMd', \"Controls {0} telemetry, first-party extension telemetry and participating third-party extension telemetry. Some third party extensions might not respect this setting. Consult the specific extension's documentation to be sure. Telemetry helps us better understand how {0} is performing, where improvements need to be made, and how features are being used.\", product.nameLong);\n\tconst externalLinksStatement = !product.privacyStatementUrl ?\n\t\tlocalize(\"telemetry.docsStatement\", \"Read more about the [data we collect]({0}).\", 'https://aka.ms/vscode-telemetry') :\n\t\tlocalize(\"telemetry.docsAndPrivacyStatement\", \"Read more about the [data we collect]({0}) and our [privacy statement]({1}).\", 'https://aka.ms/vscode-telemetry', product.privacyStatementUrl);\n\tconst restartString = !isWeb ? localize('telemetry.restart', 'A full restart of the application is necessary for crash reporting changes to take effect.') : '';\n\n\tconst crashReportsHeader = localize('telemetry.crashReports', \"Crash Reports\");\n\tconst errorsHeader = localize('telemetry.errors', \"Error Telemetry\");\n\tconst usageHeader = localize('telemetry.usage', \"Usage Data\");\n\n\tconst telemetryTableDescription = localize('telemetry.telemetryLevel.tableDescription', \"The following table outlines the data sent with each setting:\");\n\tconst telemetryTable = `\n|       | ${crashReportsHeader} | ${errorsHeader} | ${usageHeader} |\n|:------|:---------------------:|:---------------:|:--------------:|\n| all   |            ✓          |        ✓        |        ✓       |\n| error |            ✓          |        ✓        |        -       |\n| crash |            ✓          |        -        |        -       |\n| off   |            -          |        -        |        -       |\n`;\n\n\tconst deprecatedSettingNote = localize('telemetry.telemetryLevel.deprecated', \"****Note:*** If this setting is 'off', no telemetry will be sent regardless of other telemetry settings. If this setting is set to anything except 'off' and telemetry is disabled with deprecated settings, no telemetry will be sent.*\");\n\tconst telemetryDescription = `\n${telemetryText} ${externalLinksStatement} ${restartString}\n\n&nbsp;\n\n${telemetryTableDescription}\n${telemetryTable}\n\n&nbsp;\n\n${deprecatedSettingNote}\n`;\n\n\treturn telemetryDescription;\n}\n\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration).registerConfiguration({\n\t'id': TELEMETRY_SECTION_ID,\n\t'order': 110,\n\t'type': 'object',\n\t'title': localize('telemetryConfigurationTitle', \"Telemetry\"),\n\t'properties': {\n\t\t[TELEMETRY_SETTING_ID]: {\n\t\t\t'type': 'string',\n\t\t\t'enum': [TelemetryConfiguration.ON, TelemetryConfiguration.ERROR, TelemetryConfiguration.CRASH, TelemetryConfiguration.OFF],\n\t\t\t'enumDescriptions': [\n\t\t\t\tlocalize('telemetry.telemetryLevel.default', \"Sends usage data, errors, and crash reports.\"),\n\t\t\t\tlocalize('telemetry.telemetryLevel.error', \"Sends general error telemetry and crash reports.\"),\n\t\t\t\tlocalize('telemetry.telemetryLevel.crash', \"Sends OS level crash reports.\"),\n\t\t\t\tlocalize('telemetry.telemetryLevel.off', \"Disables all product telemetry.\")\n\t\t\t],\n\t\t\t'markdownDescription': getTelemetryLevelSettingDescription(),\n\t\t\t'default': TelemetryConfiguration.ON,\n\t\t\t'restricted': true,\n\t\t\t'scope': ConfigurationScope.APPLICATION,\n\t\t\t'tags': ['usesOnlineServices', 'telemetry']\n\t\t}\n\t}\n});\n\n// Deprecated telemetry setting\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration).registerConfiguration({\n\t'id': TELEMETRY_SECTION_ID,\n\t'order': 110,\n\t'type': 'object',\n\t'title': localize('telemetryConfigurationTitle', \"Telemetry\"),\n\t'properties': {\n\t\t[TELEMETRY_OLD_SETTING_ID]: {\n\t\t\t'type': 'boolean',\n\t\t\t'markdownDescription':\n\t\t\t\t!product.privacyStatementUrl ?\n\t\t\t\t\tlocalize('telemetry.enableTelemetry', \"Enable diagnostic data to be collected. This helps us to better understand how {0} is performing and where improvements need to be made.\", product.nameLong) :\n\t\t\t\t\tlocalize('telemetry.enableTelemetryMd', \"Enable diagnostic data to be collected. This helps us to better understand how {0} is performing and where improvements need to be made. [Read more]({1}) about what we collect and our privacy statement.\", product.nameLong, product.privacyStatementUrl),\n\t\t\t'default': true,\n\t\t\t'restricted': true,\n\t\t\t'markdownDeprecationMessage': localize('enableTelemetryDeprecated', \"If this setting is false, no telemetry will be sent regardless of the new setting's value. Deprecated in favor of the {0} setting.\", `\\`#${TELEMETRY_SETTING_ID}#\\``),\n\t\t\t'scope': ConfigurationScope.APPLICATION,\n\t\t\t'tags': ['usesOnlineServices', 'telemetry']\n\t\t}\n\t}\n});\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { refineServiceDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ClassifiedEvent, GDPRClassification, StrictPropertyCheck } from 'vs/platform/telemetry/common/gdprTypings';\nimport { ITelemetryData, ITelemetryService, TelemetryLevel } from 'vs/platform/telemetry/common/telemetry';\nimport { ITelemetryServiceConfig, TelemetryService } from 'vs/platform/telemetry/common/telemetryService';\nimport { NullTelemetryServiceShape } from 'vs/platform/telemetry/common/telemetryUtils';\n\nexport interface IServerTelemetryService extends ITelemetryService {\n\tupdateInjectedTelemetryLevel(telemetryLevel: TelemetryLevel): Promise<void>;\n}\n\nexport class ServerTelemetryService extends TelemetryService implements IServerTelemetryService {\n\t// Because we cannot read the workspace config on the remote site\n\t// the ServerTelemetryService is responsible for knowing its telemetry level\n\t// this is done through IPC calls and initial value injections\n\tprivate _injectedTelemetryLevel: TelemetryLevel;\n\tconstructor(\n\t\tconfig: ITelemetryServiceConfig,\n\t\tinjectedTelemetryLevel: TelemetryLevel,\n\t\t@IConfigurationService _configurationService: IConfigurationService,\n\t\t@IProductService _productService: IProductService\n\t) {\n\t\tsuper(config, _configurationService, _productService);\n\t\tthis._injectedTelemetryLevel = injectedTelemetryLevel;\n\t}\n\n\toverride publicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<void> {\n\t\tif (this._injectedTelemetryLevel < TelemetryLevel.USAGE) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\t\treturn super.publicLog(eventName, data, anonymizeFilePaths);\n\t}\n\n\toverride publicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>, anonymizeFilePaths?: boolean): Promise<void> {\n\t\treturn this.publicLog(eventName, data as ITelemetryData | undefined, anonymizeFilePaths);\n\t}\n\n\toverride publicLogError(errorEventName: string, data?: ITelemetryData): Promise<void> {\n\t\tif (this._injectedTelemetryLevel < TelemetryLevel.ERROR) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\t\treturn super.publicLogError(errorEventName, data);\n\t}\n\n\toverride publicLogError2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>): Promise<void> {\n\t\treturn this.publicLogError(eventName, data as ITelemetryData | undefined);\n\t}\n\n\tasync updateInjectedTelemetryLevel(telemetryLevel: TelemetryLevel): Promise<void> {\n\t\tif (telemetryLevel === undefined) {\n\t\t\tthis._injectedTelemetryLevel = TelemetryLevel.NONE;\n\t\t\tthrow new Error('Telemetry level cannot be undefined. This will cause infinite looping!');\n\t\t}\n\t\t// We always take the most restrictive level because we don't want multiple clients to connect and send data when one client does not consent\n\t\tthis._injectedTelemetryLevel = this._injectedTelemetryLevel ? Math.min(this._injectedTelemetryLevel, telemetryLevel) : telemetryLevel;\n\t\tif (this._injectedTelemetryLevel === TelemetryLevel.NONE) {\n\t\t\tthis.dispose();\n\t\t}\n\t}\n}\n\nexport const ServerNullTelemetryService = new class extends NullTelemetryServiceShape implements IServerTelemetryService {\n\tasync updateInjectedTelemetryLevel(): Promise<void> { return; } // No-op, telemetry is already disabled\n};\n\nexport const IServerTelemetryService = refineServiceDecorator<ITelemetryService, IServerTelemetryService>(ITelemetryService);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { AppInsightsCore } from '@microsoft/1ds-core-js';\nimport type { IPayloadData, IXHROverride } from '@microsoft/1ds-post-js';\nimport * as https from 'https';\nimport { AbstractOneDataSystemAppender } from 'vs/platform/telemetry/common/1dsAppender';\n\n\nexport class OneDataSystemAppender extends AbstractOneDataSystemAppender {\n\n\tconstructor(\n\t\tisInternalTelemetry: boolean,\n\t\teventPrefix: string,\n\t\tdefaultData: { [key: string]: any } | null,\n\t\tiKeyOrClientFactory: string | (() => AppInsightsCore), // allow factory function for testing\n\t) {\n\t\t// Override the way events get sent since node doesn't have XHTMLRequest\n\t\tconst customHttpXHROverride: IXHROverride = {\n\t\t\tsendPOST: (payload: IPayloadData, oncomplete) => {\n\t\t\t\tconst options = {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t...payload.headers,\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\t'Content-Length': Buffer.byteLength(payload.data)\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\ttry {\n\t\t\t\t\tconst req = https.request(payload.urlString, options, res => {\n\t\t\t\t\t\tres.on('data', function (responseData) {\n\t\t\t\t\t\t\toncomplete(res.statusCode ?? 200, res.headers as Record<string, any>, responseData.toString());\n\t\t\t\t\t\t});\n\t\t\t\t\t\t// On response with error send status of 0 and a blank response to oncomplete so we can retry events\n\t\t\t\t\t\tres.on('error', function (err) {\n\t\t\t\t\t\t\toncomplete(0, {});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\treq.write(payload.data);\n\t\t\t\t\treq.end();\n\t\t\t\t} catch {\n\t\t\t\t\t// If it errors out, send status of 0 and a blank response to oncomplete so we can retry events\n\t\t\t\t\toncomplete(0, {});\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tsuper(isInternalTelemetry, eventPrefix, defaultData, iKeyOrClientFactory, customHttpXHROverride);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isCancellationError, onUnexpectedError, setUnexpectedErrorHandler } from 'vs/base/common/errors';\nimport BaseErrorTelemetry from 'vs/platform/telemetry/common/errorTelemetry';\n\nexport default class ErrorTelemetry extends BaseErrorTelemetry {\n\tprotected override installErrorListeners(): void {\n\t\tsetUnexpectedErrorHandler(err => console.error(err));\n\n\t\t// Print a console message when rejection isn't handled within N seconds. For details:\n\t\t// see https://nodejs.org/api/process.html#process_event_unhandledrejection\n\t\t// and https://nodejs.org/api/process.html#process_event_rejectionhandled\n\t\tconst unhandledPromises: Promise<any>[] = [];\n\t\tprocess.on('unhandledRejection', (reason: any, promise: Promise<any>) => {\n\t\t\tunhandledPromises.push(promise);\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst idx = unhandledPromises.indexOf(promise);\n\t\t\t\tif (idx >= 0) {\n\t\t\t\t\tpromise.catch(e => {\n\t\t\t\t\t\tunhandledPromises.splice(idx, 1);\n\t\t\t\t\t\tif (!isCancellationError(e)) {\n\t\t\t\t\t\t\tconsole.warn(`rejected promise not handled within 1 second: ${e}`);\n\t\t\t\t\t\t\tif (e.stack) {\n\t\t\t\t\t\t\t\tconsole.warn(`stack trace: ${e.stack}`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (reason) {\n\t\t\t\t\t\t\t\tonUnexpectedError(reason);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, 1000);\n\t\t});\n\n\t\tprocess.on('rejectionHandled', (promise: Promise<any>) => {\n\t\t\tconst idx = unhandledPromises.indexOf(promise);\n\t\t\tif (idx >= 0) {\n\t\t\t\tunhandledPromises.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\t// Print a console message when an exception isn't handled.\n\t\tprocess.on('uncaughtException', (err: Error) => {\n\t\t\tonUnexpectedError(err);\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { timeout } from 'vs/base/common/async';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable, dispose, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { ILogService } from 'vs/platform/log/common/log';\n\n/**\n * A helper class to track requests that have replies. Using this it's easy to implement an event\n * that accepts a reply.\n */\nexport class RequestStore<T, RequestArgs> extends Disposable {\n\tprivate _lastRequestId = 0;\n\tprivate readonly _timeout: number;\n\tprivate _pendingRequests: Map<number, (resolved: T) => void> = new Map();\n\tprivate _pendingRequestDisposables: Map<number, IDisposable[]> = new Map();\n\n\tprivate readonly _onCreateRequest = this._register(new Emitter<RequestArgs & { requestId: number }>());\n\treadonly onCreateRequest = this._onCreateRequest.event;\n\n\t/**\n\t * @param timeout How long in ms to allow requests to go unanswered for, undefined will use the\n\t * default (15 seconds).\n\t */\n\tconstructor(\n\t\ttimeout: number | undefined,\n\t\t@ILogService private readonly _logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis._timeout = timeout === undefined ? 15000 : timeout;\n\t}\n\n\t/**\n\t * Creates a request.\n\t * @param args The arguments to pass to the onCreateRequest event.\n\t */\n\tcreateRequest(args: RequestArgs): Promise<T> {\n\t\treturn new Promise<T>((resolve, reject) => {\n\t\t\tconst requestId = ++this._lastRequestId;\n\t\t\tthis._pendingRequests.set(requestId, resolve);\n\t\t\tthis._onCreateRequest.fire({ requestId, ...args });\n\t\t\tconst tokenSource = new CancellationTokenSource();\n\t\t\ttimeout(this._timeout, tokenSource.token).then(() => reject(`Request ${requestId} timed out (${this._timeout}ms)`));\n\t\t\tthis._pendingRequestDisposables.set(requestId, [toDisposable(() => tokenSource.cancel())]);\n\t\t});\n\t}\n\n\t/**\n\t * Accept a reply to a request.\n\t * @param requestId The request ID originating from the onCreateRequest event.\n\t * @param data The reply data.\n\t */\n\tacceptReply(requestId: number, data: T) {\n\t\tconst resolveRequest = this._pendingRequests.get(requestId);\n\t\tif (resolveRequest) {\n\t\t\tthis._pendingRequests.delete(requestId);\n\t\t\tdispose(this._pendingRequestDisposables.get(requestId) || []);\n\t\t\tthis._pendingRequestDisposables.delete(requestId);\n\t\t\tresolveRequest(data);\n\t\t} else {\n\t\t\tthis._logService.warn(`RequestStore#acceptReply was called without receiving a matching request ${requestId}`);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { IProcessEnvironment, OperatingSystem } from 'vs/base/common/platform';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ITerminalCapabilityStore } from 'vs/platform/terminal/common/capabilities/capabilities';\nimport { IGetTerminalLayoutInfoArgs, IProcessDetails, IPtyHostProcessReplayEvent, ISerializedCommandDetectionCapability, ISetTerminalLayoutInfoArgs } from 'vs/platform/terminal/common/terminalProcess';\nimport { ThemeIcon } from 'vs/platform/theme/common/themeService';\nimport { ISerializableEnvironmentVariableCollections } from 'vs/platform/terminal/common/environmentVariable';\n\nexport const enum TerminalSettingPrefix {\n\tShell = 'terminal.integrated.shell.',\n\tShellArgs = 'terminal.integrated.shellArgs.',\n\tDefaultProfile = 'terminal.integrated.defaultProfile.',\n\tProfiles = 'terminal.integrated.profiles.'\n}\n\nexport const enum TerminalSettingId {\n\tShellLinux = 'terminal.integrated.shell.linux',\n\tShellMacOs = 'terminal.integrated.shell.osx',\n\tShellWindows = 'terminal.integrated.shell.windows',\n\tSendKeybindingsToShell = 'terminal.integrated.sendKeybindingsToShell',\n\tAutomationShellLinux = 'terminal.integrated.automationShell.linux',\n\tAutomationShellMacOs = 'terminal.integrated.automationShell.osx',\n\tAutomationShellWindows = 'terminal.integrated.automationShell.windows',\n\tAutomationProfileLinux = 'terminal.integrated.automationProfile.linux',\n\tAutomationProfileMacOs = 'terminal.integrated.automationProfile.osx',\n\tAutomationProfileWindows = 'terminal.integrated.automationProfile.windows',\n\tShellArgsLinux = 'terminal.integrated.shellArgs.linux',\n\tShellArgsMacOs = 'terminal.integrated.shellArgs.osx',\n\tShellArgsWindows = 'terminal.integrated.shellArgs.windows',\n\tProfilesWindows = 'terminal.integrated.profiles.windows',\n\tProfilesMacOs = 'terminal.integrated.profiles.osx',\n\tProfilesLinux = 'terminal.integrated.profiles.linux',\n\tDefaultProfileLinux = 'terminal.integrated.defaultProfile.linux',\n\tDefaultProfileMacOs = 'terminal.integrated.defaultProfile.osx',\n\tDefaultProfileWindows = 'terminal.integrated.defaultProfile.windows',\n\tUseWslProfiles = 'terminal.integrated.useWslProfiles',\n\tTabsDefaultColor = 'terminal.integrated.tabs.defaultColor',\n\tTabsDefaultIcon = 'terminal.integrated.tabs.defaultIcon',\n\tTabsEnabled = 'terminal.integrated.tabs.enabled',\n\tTabsEnableAnimation = 'terminal.integrated.tabs.enableAnimation',\n\tTabsHideCondition = 'terminal.integrated.tabs.hideCondition',\n\tTabsShowActiveTerminal = 'terminal.integrated.tabs.showActiveTerminal',\n\tTabsShowActions = 'terminal.integrated.tabs.showActions',\n\tTabsLocation = 'terminal.integrated.tabs.location',\n\tTabsFocusMode = 'terminal.integrated.tabs.focusMode',\n\tMacOptionIsMeta = 'terminal.integrated.macOptionIsMeta',\n\tMacOptionClickForcesSelection = 'terminal.integrated.macOptionClickForcesSelection',\n\tAltClickMovesCursor = 'terminal.integrated.altClickMovesCursor',\n\tCopyOnSelection = 'terminal.integrated.copyOnSelection',\n\tEnableMultiLinePasteWarning = 'terminal.integrated.enableMultiLinePasteWarning',\n\tDrawBoldTextInBrightColors = 'terminal.integrated.drawBoldTextInBrightColors',\n\tFontFamily = 'terminal.integrated.fontFamily',\n\tFontSize = 'terminal.integrated.fontSize',\n\tLetterSpacing = 'terminal.integrated.letterSpacing',\n\tLineHeight = 'terminal.integrated.lineHeight',\n\tMinimumContrastRatio = 'terminal.integrated.minimumContrastRatio',\n\tFastScrollSensitivity = 'terminal.integrated.fastScrollSensitivity',\n\tMouseWheelScrollSensitivity = 'terminal.integrated.mouseWheelScrollSensitivity',\n\tBellDuration = 'terminal.integrated.bellDuration',\n\tFontWeight = 'terminal.integrated.fontWeight',\n\tFontWeightBold = 'terminal.integrated.fontWeightBold',\n\tCursorBlinking = 'terminal.integrated.cursorBlinking',\n\tCursorStyle = 'terminal.integrated.cursorStyle',\n\tCursorWidth = 'terminal.integrated.cursorWidth',\n\tScrollback = 'terminal.integrated.scrollback',\n\tDetectLocale = 'terminal.integrated.detectLocale',\n\tDefaultLocation = 'terminal.integrated.defaultLocation',\n\tGpuAcceleration = 'terminal.integrated.gpuAcceleration',\n\tTerminalTitleSeparator = 'terminal.integrated.tabs.separator',\n\tTerminalTitle = 'terminal.integrated.tabs.title',\n\tTerminalDescription = 'terminal.integrated.tabs.description',\n\tRightClickBehavior = 'terminal.integrated.rightClickBehavior',\n\tCwd = 'terminal.integrated.cwd',\n\tConfirmOnExit = 'terminal.integrated.confirmOnExit',\n\tConfirmOnKill = 'terminal.integrated.confirmOnKill',\n\tEnableBell = 'terminal.integrated.enableBell',\n\tCommandsToSkipShell = 'terminal.integrated.commandsToSkipShell',\n\tAllowChords = 'terminal.integrated.allowChords',\n\tAllowMnemonics = 'terminal.integrated.allowMnemonics',\n\tEnvMacOs = 'terminal.integrated.env.osx',\n\tEnvLinux = 'terminal.integrated.env.linux',\n\tEnvWindows = 'terminal.integrated.env.windows',\n\tEnvironmentChangesIndicator = 'terminal.integrated.environmentChangesIndicator',\n\tEnvironmentChangesRelaunch = 'terminal.integrated.environmentChangesRelaunch',\n\tShowExitAlert = 'terminal.integrated.showExitAlert',\n\tSplitCwd = 'terminal.integrated.splitCwd',\n\tWindowsEnableConpty = 'terminal.integrated.windowsEnableConpty',\n\tWordSeparators = 'terminal.integrated.wordSeparators',\n\tEnableFileLinks = 'terminal.integrated.enableFileLinks',\n\tUnicodeVersion = 'terminal.integrated.unicodeVersion',\n\tLocalEchoLatencyThreshold = 'terminal.integrated.localEchoLatencyThreshold',\n\tLocalEchoEnabled = 'terminal.integrated.localEchoEnabled',\n\tLocalEchoExcludePrograms = 'terminal.integrated.localEchoExcludePrograms',\n\tLocalEchoStyle = 'terminal.integrated.localEchoStyle',\n\tEnablePersistentSessions = 'terminal.integrated.enablePersistentSessions',\n\tPersistentSessionReviveProcess = 'terminal.integrated.persistentSessionReviveProcess',\n\tCustomGlyphs = 'terminal.integrated.customGlyphs',\n\tPersistentSessionScrollback = 'terminal.integrated.persistentSessionScrollback',\n\tInheritEnv = 'terminal.integrated.inheritEnv',\n\tShowLinkHover = 'terminal.integrated.showLinkHover',\n\tIgnoreProcessNames = 'terminal.integrated.ignoreProcessNames',\n\tAutoReplies = 'terminal.integrated.autoReplies',\n\tShellIntegrationEnabled = 'terminal.integrated.shellIntegration.enabled',\n\tShellIntegrationShowWelcome = 'terminal.integrated.shellIntegration.showWelcome',\n\tShellIntegrationDecorationsEnabled = 'terminal.integrated.shellIntegration.decorationsEnabled',\n\tShellIntegrationDecorationIcon = 'terminal.integrated.shellIntegration.decorationIcon',\n\tShellIntegrationDecorationIconError = 'terminal.integrated.shellIntegration.decorationIconError',\n\tShellIntegrationDecorationIconSuccess = 'terminal.integrated.shellIntegration.decorationIconSuccess',\n\tShellIntegrationCommandHistory = 'terminal.integrated.shellIntegration.history'\n}\n\nexport const enum TerminalLogConstants {\n\tFileName = 'ptyhost'\n}\n\nexport const enum PosixShellType {\n\tPowerShell = 'pwsh',\n\tBash = 'bash',\n\tFish = 'fish',\n\tSh = 'sh',\n\tCsh = 'csh',\n\tKsh = 'ksh',\n\tZsh = 'zsh',\n}\nexport const enum WindowsShellType {\n\tCommandPrompt = 'cmd',\n\tPowerShell = 'pwsh',\n\tWsl = 'wsl',\n\tGitBash = 'gitbash'\n}\nexport type TerminalShellType = PosixShellType | WindowsShellType | undefined;\n\nexport interface IRawTerminalInstanceLayoutInfo<T> {\n\trelativeSize: number;\n\tterminal: T;\n}\nexport type ITerminalInstanceLayoutInfoById = IRawTerminalInstanceLayoutInfo<number>;\nexport type ITerminalInstanceLayoutInfo = IRawTerminalInstanceLayoutInfo<IPtyHostAttachTarget>;\n\nexport interface IRawTerminalTabLayoutInfo<T> {\n\tisActive: boolean;\n\tactivePersistentProcessId: number | undefined;\n\tterminals: IRawTerminalInstanceLayoutInfo<T>[];\n}\n\nexport type ITerminalTabLayoutInfoById = IRawTerminalTabLayoutInfo<number>;\n\nexport interface IRawTerminalsLayoutInfo<T> {\n\ttabs: IRawTerminalTabLayoutInfo<T>[];\n}\n\nexport interface IPtyHostAttachTarget {\n\tid: number;\n\tpid: number;\n\ttitle: string;\n\ttitleSource: TitleEventSource;\n\tcwd: string;\n\tworkspaceId: string;\n\tworkspaceName: string;\n\tisOrphan: boolean;\n\ticon: TerminalIcon | undefined;\n\tfixedDimensions: IFixedTerminalDimensions | undefined;\n\tenvironmentVariableCollections: ISerializableEnvironmentVariableCollections | undefined;\n\treconnectionOwner?: string;\n\ttask?: { label: string; id: string; lastTask: string; group?: string };\n\twaitOnExit?: WaitOnExitValue;\n\thideFromUser?: boolean;\n\tisFeatureTerminal?: boolean;\n\ttype?: TerminalType;\n}\n\nexport type TerminalType = 'Task' | 'Local' | undefined;\n\nexport enum TitleEventSource {\n\t/** From the API or the rename command that overrides any other type */\n\tApi,\n\t/** From the process name property*/\n\tProcess,\n\t/** From the VT sequence */\n\tSequence,\n\t/** Config changed */\n\tConfig\n}\n\nexport type ITerminalsLayoutInfo = IRawTerminalsLayoutInfo<IPtyHostAttachTarget | null>;\nexport type ITerminalsLayoutInfoById = IRawTerminalsLayoutInfo<number>;\n\nexport enum TerminalIpcChannels {\n\t/**\n\t * Communicates between the renderer process and shared process.\n\t */\n\tLocalPty = 'localPty',\n\t/**\n\t * Communicates between the shared process and the pty host process.\n\t */\n\tPtyHost = 'ptyHost',\n\t/**\n\t * Deals with logging from the pty host process.\n\t */\n\tLog = 'log',\n\t/**\n\t * Enables the detection of unresponsive pty hosts.\n\t */\n\tHeartbeat = 'heartbeat'\n}\n\nexport const IPtyService = createDecorator<IPtyService>('ptyService');\n\nexport const enum ProcessPropertyType {\n\tCwd = 'cwd',\n\tInitialCwd = 'initialCwd',\n\tFixedDimensions = 'fixedDimensions',\n\tTitle = 'title',\n\tShellType = 'shellType',\n\tHasChildProcesses = 'hasChildProcesses',\n\tResolvedShellLaunchConfig = 'resolvedShellLaunchConfig',\n\tOverrideDimensions = 'overrideDimensions',\n\tFailedShellIntegrationActivation = 'failedShellIntegrationActivation',\n\tUsedShellIntegrationInjection = 'usedShellIntegrationInjection'\n}\n\nexport interface IProcessProperty<T extends ProcessPropertyType> {\n\ttype: T;\n\tvalue: IProcessPropertyMap[T];\n}\n\nexport interface IProcessPropertyMap {\n\t[ProcessPropertyType.Cwd]: string;\n\t[ProcessPropertyType.InitialCwd]: string;\n\t[ProcessPropertyType.FixedDimensions]: IFixedTerminalDimensions;\n\t[ProcessPropertyType.Title]: string;\n\t[ProcessPropertyType.ShellType]: TerminalShellType | undefined;\n\t[ProcessPropertyType.HasChildProcesses]: boolean;\n\t[ProcessPropertyType.ResolvedShellLaunchConfig]: IShellLaunchConfig;\n\t[ProcessPropertyType.OverrideDimensions]: ITerminalDimensionsOverride | undefined;\n\t[ProcessPropertyType.FailedShellIntegrationActivation]: boolean | undefined;\n\t[ProcessPropertyType.UsedShellIntegrationInjection]: boolean | undefined;\n}\n\nexport interface IFixedTerminalDimensions {\n\t/**\n\t * The fixed columns of the terminal.\n\t */\n\tcols?: number;\n\n\t/**\n\t * The fixed rows of the terminal.\n\t */\n\trows?: number;\n}\n\nexport interface IPtyHostController {\n\treadonly onPtyHostExit?: Event<number>;\n\treadonly onPtyHostStart?: Event<void>;\n\treadonly onPtyHostUnresponsive?: Event<void>;\n\treadonly onPtyHostResponsive?: Event<void>;\n\treadonly onPtyHostRequestResolveVariables?: Event<IRequestResolveVariablesEvent>;\n\n\trestartPtyHost?(): Promise<void>;\n\tacceptPtyHostResolvedVariables?(requestId: number, resolved: string[]): Promise<void>;\n}\n\nexport interface IPtyService extends IPtyHostController {\n\treadonly _serviceBrand: undefined;\n\n\treadonly onProcessData: Event<{ id: number; event: IProcessDataEvent | string }>;\n\treadonly onProcessReady: Event<{ id: number; event: IProcessReadyEvent }>;\n\treadonly onProcessReplay: Event<{ id: number; event: IPtyHostProcessReplayEvent }>;\n\treadonly onProcessOrphanQuestion: Event<{ id: number }>;\n\treadonly onDidRequestDetach: Event<{ requestId: number; workspaceId: string; instanceId: number }>;\n\treadonly onDidChangeProperty: Event<{ id: number; property: IProcessProperty<any> }>;\n\treadonly onProcessExit: Event<{ id: number; event: number | undefined }>;\n\n\trestartPtyHost?(): Promise<void>;\n\tshutdownAll?(): Promise<void>;\n\tacceptPtyHostResolvedVariables?(requestId: number, resolved: string[]): Promise<void>;\n\n\tcreateProcess(\n\t\tshellLaunchConfig: IShellLaunchConfig,\n\t\tcwd: string,\n\t\tcols: number,\n\t\trows: number,\n\t\tunicodeVersion: '6' | '11',\n\t\tenv: IProcessEnvironment,\n\t\texecutableEnv: IProcessEnvironment,\n\t\toptions: ITerminalProcessOptions,\n\t\tshouldPersist: boolean,\n\t\tworkspaceId: string,\n\t\tworkspaceName: string\n\t): Promise<number>;\n\tattachToProcess(id: number): Promise<void>;\n\tdetachFromProcess(id: number): Promise<void>;\n\n\t/**\n\t * Lists all orphaned processes, ie. those without a connected frontend.\n\t */\n\tlistProcesses(): Promise<IProcessDetails[]>;\n\n\tstart(id: number): Promise<ITerminalLaunchError | undefined>;\n\tshutdown(id: number, immediate: boolean): Promise<void>;\n\tinput(id: number, data: string): Promise<void>;\n\tresize(id: number, cols: number, rows: number): Promise<void>;\n\tgetInitialCwd(id: number): Promise<string>;\n\tgetCwd(id: number): Promise<string>;\n\tgetLatency(id: number): Promise<number>;\n\tacknowledgeDataEvent(id: number, charCount: number): Promise<void>;\n\tsetUnicodeVersion(id: number, version: '6' | '11'): Promise<void>;\n\tprocessBinary(id: number, data: string): Promise<void>;\n\t/** Confirm the process is _not_ an orphan. */\n\torphanQuestionReply(id: number): Promise<void>;\n\tupdateTitle(id: number, title: string, titleSource: TitleEventSource): Promise<void>;\n\tupdateIcon(id: number, icon: TerminalIcon, color?: string): Promise<void>;\n\tinstallAutoReply(match: string, reply: string): Promise<void>;\n\tuninstallAllAutoReplies(): Promise<void>;\n\tuninstallAutoReply(match: string): Promise<void>;\n\tgetDefaultSystemShell(osOverride?: OperatingSystem): Promise<string>;\n\tgetProfiles?(workspaceId: string, profiles: unknown, defaultProfile: unknown, includeDetectedProfiles?: boolean): Promise<ITerminalProfile[]>;\n\tgetEnvironment(): Promise<IProcessEnvironment>;\n\tgetWslPath(original: string): Promise<string>;\n\tgetRevivedPtyNewId(id: number): Promise<number | undefined>;\n\tsetTerminalLayoutInfo(args: ISetTerminalLayoutInfoArgs): Promise<void>;\n\tgetTerminalLayoutInfo(args: IGetTerminalLayoutInfoArgs): Promise<ITerminalsLayoutInfo | undefined>;\n\treduceConnectionGraceTime(): Promise<void>;\n\trequestDetachInstance(workspaceId: string, instanceId: number): Promise<IProcessDetails | undefined>;\n\tacceptDetachInstanceReply(requestId: number, persistentProcessId?: number): Promise<void>;\n\t/**\n\t * Serializes and returns terminal state.\n\t * @param ids The persistent terminal IDs to serialize.\n\t */\n\tserializeTerminalState(ids: number[]): Promise<string>;\n\t/**\n\t * Revives a workspaces terminal processes, these can then be reconnected to using the normal\n\t * flow for restoring terminals after reloading.\n\t */\n\treviveTerminalProcesses(state: ISerializedTerminalState[], dateTimeFormatLocate: string): Promise<void>;\n\trefreshProperty<T extends ProcessPropertyType>(id: number, property: T): Promise<IProcessPropertyMap[T]>;\n\tupdateProperty<T extends ProcessPropertyType>(id: number, property: T, value: IProcessPropertyMap[T]): Promise<void>;\n\n\trefreshIgnoreProcessNames?(names: string[]): Promise<void>;\n}\n\n/**\n * Serialized terminal state matching the interface that can be used across versions, the version\n * should be verified before using the state payload.\n */\nexport interface ICrossVersionSerializedTerminalState {\n\tversion: number;\n\tstate: unknown;\n}\n\nexport interface ISerializedTerminalState {\n\tid: number;\n\tshellLaunchConfig: IShellLaunchConfig;\n\tprocessDetails: IProcessDetails;\n\tprocessLaunchConfig: IPersistentTerminalProcessLaunchConfig;\n\tunicodeVersion: '6' | '11';\n\treplayEvent: IPtyHostProcessReplayEvent;\n\ttimestamp: number;\n}\n\nexport interface IPersistentTerminalProcessLaunchConfig {\n\tenv: IProcessEnvironment;\n\texecutableEnv: IProcessEnvironment;\n\toptions: ITerminalProcessOptions;\n}\n\nexport interface IRequestResolveVariablesEvent {\n\trequestId: number;\n\tworkspaceId: string;\n\toriginalText: string[];\n}\n\nexport enum HeartbeatConstants {\n\t/**\n\t * The duration between heartbeats\n\t */\n\tBeatInterval = 5000,\n\t/**\n\t * Defines a multiplier for BeatInterval for how long to wait before starting the second wait\n\t * timer.\n\t */\n\tFirstWaitMultiplier = 1.2,\n\t/**\n\t * Defines a multiplier for BeatInterval for how long to wait before telling the user about\n\t * non-responsiveness. The second timer is to avoid informing the user incorrectly when waking\n\t * the computer up from sleep\n\t */\n\tSecondWaitMultiplier = 1,\n\t/**\n\t * How long to wait before telling the user about non-responsiveness when they try to create a\n\t * process. This short circuits the standard wait timeouts to tell the user sooner and only\n\t * create process is handled to avoid additional perf overhead.\n\t */\n\tCreateProcessTimeout = 5000\n}\n\nexport interface IHeartbeatService {\n\treadonly onBeat: Event<void>;\n}\n\n\nexport interface IShellLaunchConfig {\n\t/**\n\t * The name of the terminal, if this is not set the name of the process will be used.\n\t */\n\tname?: string;\n\n\t/**\n\t * A string to follow the name of the terminal with, indicating the type of terminal\n\t */\n\ttype?: 'Task' | 'Local';\n\n\t/**\n\t * The shell executable (bash, cmd, etc.).\n\t */\n\texecutable?: string;\n\n\t/**\n\t * The CLI arguments to use with executable, a string[] is in argv format and will be escaped,\n\t * a string is in \"CommandLine\" pre-escaped format and will be used as is. The string option is\n\t * only supported on Windows and will throw an exception if used on macOS or Linux.\n\t */\n\targs?: string[] | string;\n\n\t/**\n\t * The current working directory of the terminal, this overrides the `terminal.integrated.cwd`\n\t * settings key.\n\t */\n\tcwd?: string | URI;\n\n\t/**\n\t * A custom environment for the terminal, if this is not set the environment will be inherited\n\t * from the VS Code process.\n\t */\n\tenv?: ITerminalEnvironment;\n\n\t/**\n\t * Whether to ignore a custom cwd from the `terminal.integrated.cwd` settings key (e.g. if the\n\t * shell is being launched by an extension).\n\t */\n\tignoreConfigurationCwd?: boolean;\n\n\t/**\n\t * The owner of this terminal for reconnection.\n\t */\n\treconnectionOwner?: string;\n\n\t/** Whether to wait for a key press before closing the terminal. */\n\twaitOnExit?: WaitOnExitValue;\n\n\t/**\n\t * A string including ANSI escape sequences that will be written to the terminal emulator\n\t * _before_ the terminal process has launched, when a string is specified, a trailing \\n is\n\t * added at the end. This allows for example the terminal instance to display a styled message\n\t * as the first line of the terminal. Use \\x1b over \\033 or \\e for the escape control character.\n\t */\n\tinitialText?: string | { text: string; trailingNewLine: boolean };\n\n\t/**\n\t * Custom PTY/pseudoterminal process to use.\n\t */\n\tcustomPtyImplementation?: (terminalId: number, cols: number, rows: number) => ITerminalChildProcess;\n\n\t/**\n\t * A UUID generated by the extension host process for terminals created on the extension host process.\n\t */\n\textHostTerminalId?: string;\n\n\t/**\n\t * This is a terminal that attaches to an already running terminal.\n\t */\n\tattachPersistentProcess?: {\n\t\tid: number; findRevivedId?: boolean; pid: number; title: string; titleSource: TitleEventSource; cwd: string; icon?: TerminalIcon; color?: string; hasChildProcesses?: boolean; fixedDimensions?: IFixedTerminalDimensions; environmentVariableCollections?: ISerializableEnvironmentVariableCollections; reconnectionOwner?: string; task?: { label: string; id: string; lastTask: string; group?: string }; type?: TerminalType; waitOnExit?: WaitOnExitValue; hideFromUser?: boolean; isFeatureTerminal?: boolean;\n\t};\n\n\t/**\n\t * Whether the terminal process environment should be exactly as provided in\n\t * `TerminalOptions.env`. When this is false (default), the environment will be based on the\n\t * window's environment and also apply configured platform settings like\n\t * `terminal.integrated.windows.env` on top. When this is true, the complete environment must be\n\t * provided as nothing will be inherited from the process or any configuration.\n\t */\n\tstrictEnv?: boolean;\n\n\t/**\n\t * Whether the terminal process environment will inherit VS Code's \"shell environment\" that may\n\t * get sourced from running a login shell depnding on how the application was launched.\n\t * Consumers that rely on development tools being present in the $PATH should set this to true.\n\t * This will overwrite the value of the inheritEnv setting.\n\t */\n\tuseShellEnvironment?: boolean;\n\n\t/**\n\t * When enabled the terminal will run the process as normal but not be surfaced to the user\n\t * until `Terminal.show` is called. The typical usage for this is when you need to run\n\t * something that may need interactivity but only want to tell the user about it when\n\t * interaction is needed. Note that the terminals will still be exposed to all extensions\n\t * as normal.\n\t */\n\thideFromUser?: boolean;\n\n\t/**\n\t * Whether this terminal is not a terminal that the user directly created and uses, but rather\n\t * a terminal used to drive some VS Code feature.\n\t */\n\tisFeatureTerminal?: boolean;\n\n\t/**\n\t * Whether this terminal was created by an extension.\n\t */\n\tisExtensionOwnedTerminal?: boolean;\n\n\t/**\n\t * The icon for the terminal, used primarily in the terminal tab.\n\t */\n\ticon?: TerminalIcon;\n\n\t/**\n\t * The color ID to use for this terminal. If not specified it will use the default fallback\n\t */\n\tcolor?: string;\n\n\t/**\n\t * When a parent terminal is provided via API, the group needs\n\t * to find the index in order to place the child\n\t * directly to the right of its parent.\n\t */\n\tparentTerminalId?: number;\n\n\t/**\n\t * The dimensions for the instance as set by the user\n\t * or via Size to Content Width\n\t */\n\tfixedDimensions?: IFixedTerminalDimensions;\n\n\t/**\n\t * Opt-out of the default terminal persistence on restart and reload\n\t */\n\tisTransient?: boolean;\n\n\t/**\n\t * Create a terminal without shell integration even when it's enabled\n\t */\n\tignoreShellIntegration?: boolean;\n\n\t/**\n\t * The task associated with this terminal\n\t */\n\ttask?: { label: string; id: string; lastTask: string; group?: string };\n}\n\nexport type WaitOnExitValue = boolean | string | ((exitCode: number) => string);\n\nexport interface ICreateContributedTerminalProfileOptions {\n\ticon?: URI | string | { light: URI; dark: URI };\n\tcolor?: string;\n\tlocation?: TerminalLocation | { viewColumn: number; preserveState?: boolean } | { splitActiveTerminal: boolean };\n}\n\nexport enum TerminalLocation {\n\tPanel = 1,\n\tEditor = 2\n}\n\nexport const enum TerminalLocationString {\n\tTerminalView = 'view',\n\tEditor = 'editor'\n}\n\nexport type TerminalIcon = ThemeIcon | URI | { light: URI; dark: URI };\n\nexport interface IShellLaunchConfigDto {\n\tname?: string;\n\texecutable?: string;\n\targs?: string[] | string;\n\tcwd?: string | UriComponents;\n\tenv?: ITerminalEnvironment;\n\tuseShellEnvironment?: boolean;\n\thideFromUser?: boolean;\n}\n\n/**\n * A set of options for the terminal process. These differ from the shell launch config in that they\n * are set internally to the terminal component, not from the outside.\n */\nexport interface ITerminalProcessOptions {\n\tshellIntegration: {\n\t\tenabled: boolean;\n\t};\n\twindowsEnableConpty: boolean;\n\tenvironmentVariableCollections: ISerializableEnvironmentVariableCollections | undefined;\n}\n\nexport interface ITerminalEnvironment {\n\t[key: string]: string | null | undefined;\n}\n\nexport interface ITerminalLaunchError {\n\tmessage: string;\n\tcode?: number;\n}\n\nexport interface IProcessReadyEvent {\n\tpid: number;\n\tcwd: string;\n\trequiresWindowsMode?: boolean;\n}\n\n/**\n * An interface representing a raw terminal child process, this contains a subset of the\n * child_process.ChildProcess node.js interface.\n */\nexport interface ITerminalChildProcess {\n\t/**\n\t * A unique identifier for the terminal process. Note that the uniqueness only applies to a\n\t * given pty service connection, IDs will be duplicated for remote and local terminals for\n\t * example. The ID will be 0 if it does not support reconnection.\n\t */\n\tid: number;\n\n\t/**\n\t * Whether the process should be persisted across reloads.\n\t */\n\tshouldPersist: boolean;\n\n\tonProcessData: Event<IProcessDataEvent | string>;\n\tonProcessReady: Event<IProcessReadyEvent>;\n\tonDidChangeProperty: Event<IProcessProperty<any>>;\n\tonProcessExit: Event<number | undefined>;\n\tonRestoreCommands?: Event<ISerializedCommandDetectionCapability>;\n\n\t/**\n\t * Starts the process.\n\t *\n\t * @returns undefined when the process was successfully started, otherwise an object containing\n\t * information on what went wrong.\n\t */\n\tstart(): Promise<ITerminalLaunchError | undefined>;\n\n\t/**\n\t * Detach the process from the UI and await reconnect.\n\t */\n\tdetach?(): Promise<void>;\n\n\t/**\n\t * Shutdown the terminal process.\n\t *\n\t * @param immediate When true the process will be killed immediately, otherwise the process will\n\t * be given some time to make sure no additional data comes through.\n\t */\n\tshutdown(immediate: boolean): void;\n\tinput(data: string): void;\n\tprocessBinary(data: string): Promise<void>;\n\tresize(cols: number, rows: number): void;\n\n\t/**\n\t * Acknowledge a data event has been parsed by the terminal, this is used to implement flow\n\t * control to ensure remote processes to not get too far ahead of the client and flood the\n\t * connection.\n\t * @param charCount The number of characters being acknowledged.\n\t */\n\tacknowledgeDataEvent(charCount: number): void;\n\n\t/**\n\t * Sets the unicode version for the process, this drives the size of some characters in the\n\t * xterm-headless instance.\n\t */\n\tsetUnicodeVersion(version: '6' | '11'): Promise<void>;\n\n\tgetInitialCwd(): Promise<string>;\n\tgetCwd(): Promise<string>;\n\tgetLatency(): Promise<number>;\n\trefreshProperty<T extends ProcessPropertyType>(property: T): Promise<IProcessPropertyMap[T]>;\n\tupdateProperty<T extends ProcessPropertyType>(property: T, value: IProcessPropertyMap[T]): Promise<void>;\n}\n\nexport interface IReconnectConstants {\n\tgraceTime: number;\n\tshortGraceTime: number;\n\tscrollback: number;\n}\n\nexport const enum LocalReconnectConstants {\n\t/**\n\t * If there is no reconnection within this time-frame, consider the connection permanently closed...\n\t*/\n\tGraceTime = 60000, // 60 seconds\n\t/**\n\t * Maximal grace time between the first and the last reconnection...\n\t*/\n\tShortGraceTime = 6000, // 6 seconds\n}\n\nexport const enum FlowControlConstants {\n\t/**\n\t * The number of _unacknowledged_ chars to have been sent before the pty is paused in order for\n\t * the client to catch up.\n\t */\n\tHighWatermarkChars = 100000,\n\t/**\n\t * After flow control pauses the pty for the client the catch up, this is the number of\n\t * _unacknowledged_ chars to have been caught up to on the client before resuming the pty again.\n\t * This is used to attempt to prevent pauses in the flowing data; ideally while the pty is\n\t * paused the number of unacknowledged chars would always be greater than 0 or the client will\n\t * appear to stutter. In reality this balance is hard to accomplish though so heavy commands\n\t * will likely pause as latency grows, not flooding the connection is the important thing as\n\t * it's shared with other core functionality.\n\t */\n\tLowWatermarkChars = 5000,\n\t/**\n\t * The number characters that are accumulated on the client side before sending an ack event.\n\t * This must be less than or equal to LowWatermarkChars or the terminal max never unpause.\n\t */\n\tCharCountAckSize = 5000\n}\n\nexport interface IProcessDataEvent {\n\tdata: string;\n\ttrackCommit: boolean;\n\t/**\n\t * When trackCommit is set, this will be set to a promise that resolves when the data is parsed.\n\t */\n\twritePromise?: Promise<void>;\n}\n\nexport interface ITerminalDimensions {\n\t/**\n\t * The columns of the terminal.\n\t */\n\tcols: number;\n\n\t/**\n\t * The rows of the terminal.\n\t */\n\trows: number;\n}\n\nexport interface ITerminalProfile {\n\tprofileName: string;\n\tpath: string;\n\tisDefault: boolean;\n\tisAutoDetected?: boolean;\n\t/**\n\t * Whether the profile path was found on the `$PATH` environment variable, if so it will be\n\t * cleaner to display this profile in the UI using only `basename(path)`.\n\t */\n\tisFromPath?: boolean;\n\targs?: string | string[] | undefined;\n\tenv?: ITerminalEnvironment;\n\toverrideName?: boolean;\n\tcolor?: string;\n\ticon?: ThemeIcon | URI | { light: URI; dark: URI };\n}\n\nexport interface ITerminalDimensionsOverride extends Readonly<ITerminalDimensions> {\n\t/**\n\t * indicate that xterm must receive these exact dimensions, even if they overflow the ui!\n\t */\n\tforceExactSize?: boolean;\n}\n\nexport const enum ProfileSource {\n\tGitBash = 'Git Bash',\n\tPwsh = 'PowerShell'\n}\n\nexport interface IBaseUnresolvedTerminalProfile {\n\targs?: string | string[] | undefined;\n\tisAutoDetected?: boolean;\n\toverrideName?: boolean;\n\ticon?: string | ThemeIcon | URI | { light: URI; dark: URI };\n\tcolor?: string;\n\tenv?: ITerminalEnvironment;\n}\n\nexport interface ITerminalExecutable extends IBaseUnresolvedTerminalProfile {\n\tpath: string | string[];\n}\n\nexport interface ITerminalProfileSource extends IBaseUnresolvedTerminalProfile {\n\tsource: ProfileSource;\n}\n\n\nexport interface ITerminalContributions {\n\tprofiles?: ITerminalProfileContribution[];\n}\n\nexport interface ITerminalProfileContribution {\n\ttitle: string;\n\tid: string;\n\ticon?: URI | { light: URI; dark: URI } | string;\n\tcolor?: string;\n}\n\nexport interface IExtensionTerminalProfile extends ITerminalProfileContribution {\n\textensionIdentifier: string;\n}\n\nexport type ITerminalProfileObject = ITerminalExecutable | ITerminalProfileSource | IExtensionTerminalProfile | null;\nexport type ITerminalProfileType = ITerminalProfile | IExtensionTerminalProfile;\n\nexport interface IShellIntegration {\n\treadonly capabilities: ITerminalCapabilityStore;\n\treadonly status: ShellIntegrationStatus;\n\n\treadonly onDidChangeStatus: Event<ShellIntegrationStatus>;\n\n\tdeserialize(serialized: ISerializedCommandDetectionCapability): void;\n}\n\nexport const enum ShellIntegrationStatus {\n\t/** No shell integration sequences have been encountered. */\n\tOff,\n\t/** Final term shell integration sequences have been encountered. */\n\tFinalTerm,\n\t/** VS Code shell integration sequences have been encountered. Supercedes FinalTerm. */\n\tVSCode\n}\n\nexport enum TerminalExitReason {\n\tUnknown = 0,\n\tShutdown = 1,\n\tProcess = 2,\n\tUser = 3,\n\tExtension = 4,\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as os from 'os';\nimport { FileAccess } from 'vs/base/common/network';\nimport { getCaseInsensitive } from 'vs/base/common/objects';\nimport * as path from 'vs/base/common/path';\nimport { IProcessEnvironment, isWindows } from 'vs/base/common/platform';\nimport * as process from 'vs/base/common/process';\nimport { format } from 'vs/base/common/strings';\nimport { isString } from 'vs/base/common/types';\nimport * as pfs from 'vs/base/node/pfs';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IShellLaunchConfig, ITerminalProcessOptions } from 'vs/platform/terminal/common/terminal';\n\nexport function getWindowsBuildNumber(): number {\n\tconst osVersion = (/(\\d+)\\.(\\d+)\\.(\\d+)/g).exec(os.release());\n\tlet buildNumber: number = 0;\n\tif (osVersion && osVersion.length === 4) {\n\t\tbuildNumber = parseInt(osVersion[3]);\n\t}\n\treturn buildNumber;\n}\n\nexport async function findExecutable(command: string, cwd?: string, paths?: string[], env: IProcessEnvironment = process.env as IProcessEnvironment, exists: (path: string) => Promise<boolean> = pfs.Promises.exists): Promise<string | undefined> {\n\t// If we have an absolute path then we take it.\n\tif (path.isAbsolute(command)) {\n\t\treturn await exists(command) ? command : undefined;\n\t}\n\tif (cwd === undefined) {\n\t\tcwd = process.cwd();\n\t}\n\tconst dir = path.dirname(command);\n\tif (dir !== '.') {\n\t\t// We have a directory and the directory is relative (see above). Make the path absolute\n\t\t// to the current working directory.\n\t\tconst fullPath = path.join(cwd, command);\n\t\treturn await exists(fullPath) ? fullPath : undefined;\n\t}\n\tconst envPath = getCaseInsensitive(env, 'PATH');\n\tif (paths === undefined && isString(envPath)) {\n\t\tpaths = envPath.split(path.delimiter);\n\t}\n\t// No PATH environment. Make path absolute to the cwd.\n\tif (paths === undefined || paths.length === 0) {\n\t\tconst fullPath = path.join(cwd, command);\n\t\treturn await exists(fullPath) ? fullPath : undefined;\n\t}\n\t// We have a simple file name. We get the path variable from the env\n\t// and try to find the executable on the path.\n\tfor (const pathEntry of paths) {\n\t\t// The path entry is absolute.\n\t\tlet fullPath: string;\n\t\tif (path.isAbsolute(pathEntry)) {\n\t\t\tfullPath = path.join(pathEntry, command);\n\t\t} else {\n\t\t\tfullPath = path.join(cwd, pathEntry, command);\n\t\t}\n\n\t\tif (await exists(fullPath)) {\n\t\t\treturn fullPath;\n\t\t}\n\t\tif (isWindows) {\n\t\t\tlet withExtension = fullPath + '.com';\n\t\t\tif (await exists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t\twithExtension = fullPath + '.exe';\n\t\t\tif (await exists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t}\n\t}\n\tconst fullPath = path.join(cwd, command);\n\treturn await exists(fullPath) ? fullPath : undefined;\n}\n\nexport interface IShellIntegrationConfigInjection {\n\t/**\n\t * A new set of arguments to use.\n\t */\n\tnewArgs: string[] | undefined;\n\t/**\n\t * An optional environment to mixing to the real environment.\n\t */\n\tenvMixin?: IProcessEnvironment;\n\t/**\n\t * An optional array of files to copy from `source` to `dest`.\n\t */\n\tfilesToCopy?: {\n\t\tsource: string;\n\t\tdest: string;\n\t}[];\n}\n\n/**\n * For a given shell launch config, returns arguments to replace and an optional environment to\n * mixin to the SLC's environment to enable shell integration. This must be run within the context\n * that creates the process to ensure accuracy. Returns undefined if shell integration cannot be\n * enabled.\n */\nexport function getShellIntegrationInjection(\n\tshellLaunchConfig: IShellLaunchConfig,\n\toptions: ITerminalProcessOptions['shellIntegration'],\n\tlogService: ILogService\n): IShellIntegrationConfigInjection | undefined {\n\t// Shell integration arg injection is disabled when:\n\t// - The global setting is disabled\n\t// - There is no executable (not sure what script to run)\n\t// - The terminal is used by a feature like tasks or debugging\n\tif (!options.enabled || !shellLaunchConfig.executable || shellLaunchConfig.isFeatureTerminal || shellLaunchConfig.hideFromUser || shellLaunchConfig.ignoreShellIntegration) {\n\t\treturn undefined;\n\t}\n\n\tconst originalArgs = shellLaunchConfig.args;\n\tconst shell = process.platform === 'win32' ? path.basename(shellLaunchConfig.executable).toLowerCase() : path.basename(shellLaunchConfig.executable);\n\tconst appRoot = path.dirname(FileAccess.asFileUri('', require).fsPath);\n\tlet newArgs: string[] | undefined;\n\tconst envMixin: IProcessEnvironment = {\n\t\t'VSCODE_INJECTION': '1'\n\t};\n\n\t// Windows\n\tif (isWindows) {\n\t\tif (shell === 'pwsh.exe') {\n\t\t\tif (!originalArgs || arePwshImpliedArgs(originalArgs)) {\n\t\t\t\tnewArgs = shellIntegrationArgs.get(ShellIntegrationExecutable.WindowsPwsh);\n\t\t\t} else if (arePwshLoginArgs(originalArgs)) {\n\t\t\t\tnewArgs = shellIntegrationArgs.get(ShellIntegrationExecutable.WindowsPwshLogin);\n\t\t\t}\n\t\t\tif (!newArgs) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tif (newArgs) {\n\t\t\t\tnewArgs = [...newArgs]; // Shallow clone the array to avoid setting the default array\n\t\t\t\tnewArgs[newArgs.length - 1] = format(newArgs[newArgs.length - 1], appRoot, '');\n\t\t\t}\n\t\t\treturn { newArgs, envMixin };\n\t\t}\n\t\tlogService.warn(`Shell integration cannot be enabled for executable \"${shellLaunchConfig.executable}\" and args`, shellLaunchConfig.args);\n\t\treturn undefined;\n\t}\n\n\t// Linux & macOS\n\tswitch (shell) {\n\t\tcase 'bash': {\n\t\t\tif (!originalArgs || originalArgs.length === 0) {\n\t\t\t\tnewArgs = shellIntegrationArgs.get(ShellIntegrationExecutable.Bash);\n\t\t\t} else if (areZshBashLoginArgs(originalArgs)) {\n\t\t\t\tenvMixin['VSCODE_SHELL_LOGIN'] = '1';\n\t\t\t\tnewArgs = shellIntegrationArgs.get(ShellIntegrationExecutable.Bash);\n\t\t\t}\n\t\t\tif (!newArgs) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tnewArgs = [...newArgs]; // Shallow clone the array to avoid setting the default array\n\t\t\tnewArgs[newArgs.length - 1] = format(newArgs[newArgs.length - 1], appRoot);\n\t\t\treturn { newArgs, envMixin };\n\t\t}\n\t\tcase 'pwsh': {\n\t\t\tif (!originalArgs || arePwshImpliedArgs(originalArgs)) {\n\t\t\t\tnewArgs = shellIntegrationArgs.get(ShellIntegrationExecutable.Pwsh);\n\t\t\t} else if (arePwshLoginArgs(originalArgs)) {\n\t\t\t\tnewArgs = shellIntegrationArgs.get(ShellIntegrationExecutable.PwshLogin);\n\t\t\t}\n\t\t\tif (!newArgs) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tnewArgs = [...newArgs]; // Shallow clone the array to avoid setting the default array\n\t\t\tnewArgs[newArgs.length - 1] = format(newArgs[newArgs.length - 1], appRoot, '');\n\t\t\treturn { newArgs, envMixin };\n\t\t}\n\t\tcase 'zsh': {\n\t\t\tif (!originalArgs || originalArgs.length === 0) {\n\t\t\t\tnewArgs = shellIntegrationArgs.get(ShellIntegrationExecutable.Zsh);\n\t\t\t} else if (areZshBashLoginArgs(originalArgs)) {\n\t\t\t\tnewArgs = shellIntegrationArgs.get(ShellIntegrationExecutable.ZshLogin);\n\t\t\t} else if (originalArgs === shellIntegrationArgs.get(ShellIntegrationExecutable.Zsh) || originalArgs === shellIntegrationArgs.get(ShellIntegrationExecutable.ZshLogin)) {\n\t\t\t\tnewArgs = originalArgs;\n\t\t\t}\n\t\t\tif (!newArgs) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tnewArgs = [...newArgs]; // Shallow clone the array to avoid setting the default array\n\t\t\tnewArgs[newArgs.length - 1] = format(newArgs[newArgs.length - 1], appRoot);\n\t\t\t// Move .zshrc into $ZDOTDIR as the way to activate the script\n\t\t\tconst zdotdir = path.join(os.tmpdir(), 'vscode-zsh');\n\t\t\tenvMixin['ZDOTDIR'] = zdotdir;\n\t\t\tconst filesToCopy: IShellIntegrationConfigInjection['filesToCopy'] = [];\n\t\t\tfilesToCopy.push({\n\t\t\t\tsource: path.join(appRoot, 'out/vs/workbench/contrib/terminal/browser/media/shellIntegration-rc.zsh'),\n\t\t\t\tdest: path.join(zdotdir, '.zshrc')\n\t\t\t});\n\t\t\tfilesToCopy.push({\n\t\t\t\tsource: path.join(appRoot, 'out/vs/workbench/contrib/terminal/browser/media/shellIntegration-profile.zsh'),\n\t\t\t\tdest: path.join(zdotdir, '.zprofile')\n\t\t\t});\n\t\t\tfilesToCopy.push({\n\t\t\t\tsource: path.join(appRoot, 'out/vs/workbench/contrib/terminal/browser/media/shellIntegration-env.zsh'),\n\t\t\t\tdest: path.join(zdotdir, '.zshenv')\n\t\t\t});\n\t\t\tfilesToCopy.push({\n\t\t\t\tsource: path.join(appRoot, 'out/vs/workbench/contrib/terminal/browser/media/shellIntegration-login.zsh'),\n\t\t\t\tdest: path.join(zdotdir, '.zlogin')\n\t\t\t});\n\t\t\treturn { newArgs, envMixin, filesToCopy };\n\t\t}\n\t}\n\tlogService.warn(`Shell integration cannot be enabled for executable \"${shellLaunchConfig.executable}\" and args`, shellLaunchConfig.args);\n\treturn undefined;\n}\n\nexport enum ShellIntegrationExecutable {\n\tWindowsPwsh = 'windows-pwsh',\n\tWindowsPwshLogin = 'windows-pwsh-login',\n\tPwsh = 'pwsh',\n\tPwshLogin = 'pwsh-login',\n\tZsh = 'zsh',\n\tZshLogin = 'zsh-login',\n\tBash = 'bash'\n}\n\nexport const shellIntegrationArgs: Map<ShellIntegrationExecutable, string[]> = new Map();\n// The try catch swallows execution policy errors in the case of the archive distributable\nshellIntegrationArgs.set(ShellIntegrationExecutable.WindowsPwsh, ['-noexit', '-command', 'try { . \\\"{0}\\\\out\\\\vs\\\\workbench\\\\contrib\\\\terminal\\\\browser\\\\media\\\\shellIntegration.ps1\\\" } catch {}{1}']);\nshellIntegrationArgs.set(ShellIntegrationExecutable.WindowsPwshLogin, ['-l', '-noexit', '-command', 'try { . \\\"{0}\\\\out\\\\vs\\\\workbench\\\\contrib\\\\terminal\\\\browser\\\\media\\\\shellIntegration.ps1\\\" } catch {}{1}']);\nshellIntegrationArgs.set(ShellIntegrationExecutable.Pwsh, ['-noexit', '-command', '. \"{0}/out/vs/workbench/contrib/terminal/browser/media/shellIntegration.ps1\"{1}']);\nshellIntegrationArgs.set(ShellIntegrationExecutable.PwshLogin, ['-l', '-noexit', '-command', '. \"{0}/out/vs/workbench/contrib/terminal/browser/media/shellIntegration.ps1\"']);\nshellIntegrationArgs.set(ShellIntegrationExecutable.Zsh, ['-i']);\nshellIntegrationArgs.set(ShellIntegrationExecutable.ZshLogin, ['-il']);\nshellIntegrationArgs.set(ShellIntegrationExecutable.Bash, ['--init-file', '{0}/out/vs/workbench/contrib/terminal/browser/media/shellIntegration-bash.sh']);\nconst loginArgs = ['-login', '-l'];\nconst pwshImpliedArgs = ['-nol', '-nologo'];\n\nfunction arePwshLoginArgs(originalArgs: string | string[]): boolean {\n\tif (typeof originalArgs === 'string') {\n\t\treturn loginArgs.includes(originalArgs.toLowerCase());\n\t} else {\n\t\treturn originalArgs.length === 1 && loginArgs.includes(originalArgs[0].toLowerCase()) ||\n\t\t\t(originalArgs.length === 2 &&\n\t\t\t\t(((loginArgs.includes(originalArgs[0].toLowerCase())) || loginArgs.includes(originalArgs[1].toLowerCase())))\n\t\t\t\t&& ((pwshImpliedArgs.includes(originalArgs[0].toLowerCase())) || pwshImpliedArgs.includes(originalArgs[1].toLowerCase())));\n\t}\n}\n\nfunction arePwshImpliedArgs(originalArgs: string | string[]): boolean {\n\tif (typeof originalArgs === 'string') {\n\t\treturn pwshImpliedArgs.includes(originalArgs.toLowerCase());\n\t} else {\n\t\treturn originalArgs.length === 0 || originalArgs?.length === 1 && pwshImpliedArgs.includes(originalArgs[0].toLowerCase());\n\t}\n}\n\nfunction areZshBashLoginArgs(originalArgs: string | string[]): boolean {\n\treturn originalArgs === 'string' && loginArgs.includes(originalArgs.toLowerCase())\n\t\t|| typeof originalArgs !== 'string' && originalArgs.length === 1 && loginArgs.includes(originalArgs[0].toLowerCase());\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Color scheme used by the OS and by color themes.\n */\nexport enum ColorScheme {\n\tDARK = 'dark',\n\tLIGHT = 'light',\n\tHIGH_CONTRAST_DARK = 'hcDark',\n\tHIGH_CONTRAST_LIGHT = 'hcLight'\n}\n\nexport function isHighContrast(scheme: ColorScheme): boolean {\n\treturn scheme === ColorScheme.HIGH_CONTRAST_DARK || scheme === ColorScheme.HIGH_CONTRAST_LIGHT;\n}\n\nexport function isDark(scheme: ColorScheme): boolean {\n\treturn scheme === ColorScheme.DARK || scheme === ColorScheme.HIGH_CONTRAST_DARK;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Codicon, CSSIcon } from 'vs/base/common/codicons';\nimport { Color } from 'vs/base/common/color';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport * as platform from 'vs/platform/registry/common/platform';\nimport { ColorIdentifier } from 'vs/platform/theme/common/colorRegistry';\nimport { IconContribution, IconDefinition } from 'vs/platform/theme/common/iconRegistry';\nimport { ColorScheme } from 'vs/platform/theme/common/theme';\n\nexport const IThemeService = createDecorator<IThemeService>('themeService');\n\nexport interface ThemeColor {\n\tid: string;\n}\n\nexport namespace ThemeColor {\n\texport function isThemeColor(obj: any): obj is ThemeColor {\n\t\treturn obj && typeof obj === 'object' && typeof (<ThemeColor>obj).id === 'string';\n\t}\n}\n\nexport function themeColorFromId(id: ColorIdentifier) {\n\treturn { id };\n}\n\n// theme icon\nexport interface ThemeIcon {\n\treadonly id: string;\n\treadonly color?: ThemeColor;\n}\n\nexport namespace ThemeIcon {\n\texport function isThemeIcon(obj: any): obj is ThemeIcon {\n\t\treturn obj && typeof obj === 'object' && typeof (<ThemeIcon>obj).id === 'string' && (typeof (<ThemeIcon>obj).color === 'undefined' || ThemeColor.isThemeColor((<ThemeIcon>obj).color));\n\t}\n\n\tconst _regexFromString = new RegExp(`^\\\\$\\\\((${CSSIcon.iconNameExpression}(?:${CSSIcon.iconModifierExpression})?)\\\\)$`);\n\n\texport function fromString(str: string): ThemeIcon | undefined {\n\t\tconst match = _regexFromString.exec(str);\n\t\tif (!match) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst [, name] = match;\n\t\treturn { id: name };\n\t}\n\n\texport function fromId(id: string): ThemeIcon {\n\t\treturn { id };\n\t}\n\n\texport function modify(icon: ThemeIcon, modifier: 'disabled' | 'spin' | undefined): ThemeIcon {\n\t\tlet id = icon.id;\n\t\tconst tildeIndex = id.lastIndexOf('~');\n\t\tif (tildeIndex !== -1) {\n\t\t\tid = id.substring(0, tildeIndex);\n\t\t}\n\t\tif (modifier) {\n\t\t\tid = `${id}~${modifier}`;\n\t\t}\n\t\treturn { id };\n\t}\n\n\texport function getModifier(icon: ThemeIcon): string | undefined {\n\t\tconst tildeIndex = icon.id.lastIndexOf('~');\n\t\tif (tildeIndex !== -1) {\n\t\t\treturn icon.id.substring(tildeIndex + 1);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\texport function isEqual(ti1: ThemeIcon, ti2: ThemeIcon): boolean {\n\t\treturn ti1.id === ti2.id && ti1.color?.id === ti2.color?.id;\n\t}\n\n\texport function asThemeIcon(codicon: Codicon, color?: string): ThemeIcon {\n\t\treturn { id: codicon.id, color: color ? themeColorFromId(color) : undefined };\n\t}\n\n\texport const asClassNameArray: (icon: ThemeIcon) => string[] = CSSIcon.asClassNameArray;\n\texport const asClassName: (icon: ThemeIcon) => string = CSSIcon.asClassName;\n\texport const asCSSSelector: (icon: ThemeIcon) => string = CSSIcon.asCSSSelector;\n}\n\nexport const FileThemeIcon = Codicon.file;\nexport const FolderThemeIcon = Codicon.folder;\n\nexport function getThemeTypeSelector(type: ColorScheme): string {\n\tswitch (type) {\n\t\tcase ColorScheme.DARK: return 'vs-dark';\n\t\tcase ColorScheme.HIGH_CONTRAST_DARK: return 'hc-black';\n\t\tcase ColorScheme.HIGH_CONTRAST_LIGHT: return 'hc-light';\n\t\tdefault: return 'vs';\n\t}\n}\n\nexport interface ITokenStyle {\n\treadonly foreground: number | undefined;\n\treadonly bold: boolean | undefined;\n\treadonly underline: boolean | undefined;\n\treadonly strikethrough: boolean | undefined;\n\treadonly italic: boolean | undefined;\n}\n\nexport interface IColorTheme {\n\n\treadonly type: ColorScheme;\n\n\treadonly label: string;\n\n\t/**\n\t * Resolves the color of the given color identifier. If the theme does not\n\t * specify the color, the default color is returned unless <code>useDefault</code> is set to false.\n\t * @param color the id of the color\n\t * @param useDefault specifies if the default color should be used. If not set, the default is used.\n\t */\n\tgetColor(color: ColorIdentifier, useDefault?: boolean): Color | undefined;\n\n\t/**\n\t * Returns whether the theme defines a value for the color. If not, that means the\n\t * default color will be used.\n\t */\n\tdefines(color: ColorIdentifier): boolean;\n\n\t/**\n\t * Returns the token style for a given classification. The result uses the <code>MetadataConsts</code> format\n\t */\n\tgetTokenStyleMetadata(type: string, modifiers: string[], modelLanguage: string): ITokenStyle | undefined;\n\n\t/**\n\t * List of all colors used with tokens. <code>getTokenStyleMetadata</code> references the colors by index into this list.\n\t */\n\treadonly tokenColorMap: string[];\n\n\t/**\n\t * Defines whether semantic highlighting should be enabled for the theme.\n\t */\n\treadonly semanticHighlighting: boolean;\n}\n\nexport interface IFileIconTheme {\n\treadonly hasFileIcons: boolean;\n\treadonly hasFolderIcons: boolean;\n\treadonly hidesExplorerArrows: boolean;\n}\n\nexport interface IProductIconTheme {\n\t/**\n\t * Resolves the definition for the given icon as defined by the theme.\n\t *\n\t * @param iconContribution The icon\n\t */\n\tgetIcon(iconContribution: IconContribution): IconDefinition | undefined;\n}\n\n\nexport interface ICssStyleCollector {\n\taddRule(rule: string): void;\n}\n\nexport interface IThemingParticipant {\n\t(theme: IColorTheme, collector: ICssStyleCollector, environment: IEnvironmentService): void;\n}\n\nexport interface IThemeService {\n\treadonly _serviceBrand: undefined;\n\n\tgetColorTheme(): IColorTheme;\n\n\treadonly onDidColorThemeChange: Event<IColorTheme>;\n\n\tgetFileIconTheme(): IFileIconTheme;\n\n\treadonly onDidFileIconThemeChange: Event<IFileIconTheme>;\n\n\tgetProductIconTheme(): IProductIconTheme;\n\n\treadonly onDidProductIconThemeChange: Event<IProductIconTheme>;\n\n}\n\n// static theming participant\nexport const Extensions = {\n\tThemingContribution: 'base.contributions.theming'\n};\n\nexport interface IThemingRegistry {\n\n\t/**\n\t * Register a theming participant that is invoked on every theme change.\n\t */\n\tonColorThemeChange(participant: IThemingParticipant): IDisposable;\n\n\tgetThemingParticipants(): IThemingParticipant[];\n\n\treadonly onThemingParticipantAdded: Event<IThemingParticipant>;\n}\n\nclass ThemingRegistry implements IThemingRegistry {\n\tprivate themingParticipants: IThemingParticipant[] = [];\n\tprivate readonly onThemingParticipantAddedEmitter: Emitter<IThemingParticipant>;\n\n\tconstructor() {\n\t\tthis.themingParticipants = [];\n\t\tthis.onThemingParticipantAddedEmitter = new Emitter<IThemingParticipant>();\n\t}\n\n\tpublic onColorThemeChange(participant: IThemingParticipant): IDisposable {\n\t\tthis.themingParticipants.push(participant);\n\t\tthis.onThemingParticipantAddedEmitter.fire(participant);\n\t\treturn toDisposable(() => {\n\t\t\tconst idx = this.themingParticipants.indexOf(participant);\n\t\t\tthis.themingParticipants.splice(idx, 1);\n\t\t});\n\t}\n\n\tpublic get onThemingParticipantAdded(): Event<IThemingParticipant> {\n\t\treturn this.onThemingParticipantAddedEmitter.event;\n\t}\n\n\tpublic getThemingParticipants(): IThemingParticipant[] {\n\t\treturn this.themingParticipants;\n\t}\n}\n\nconst themingRegistry = new ThemingRegistry();\nplatform.Registry.add(Extensions.ThemingContribution, themingRegistry);\n\nexport function registerThemingParticipant(participant: IThemingParticipant): IDisposable {\n\treturn themingRegistry.onColorThemeChange(participant);\n}\n\n/**\n * Utility base class for all themable components.\n */\nexport class Themable extends Disposable {\n\tprotected theme: IColorTheme;\n\n\tconstructor(\n\t\tprotected themeService: IThemeService\n\t) {\n\t\tsuper();\n\n\t\tthis.theme = themeService.getColorTheme();\n\n\t\t// Hook up to theme changes\n\t\tthis._register(this.themeService.onDidColorThemeChange(theme => this.onThemeChange(theme)));\n\t}\n\n\tprotected onThemeChange(theme: IColorTheme): void {\n\t\tthis.theme = theme;\n\n\t\tthis.updateStyles();\n\t}\n\n\tprotected updateStyles(): void {\n\t\t// Subclasses to override\n\t}\n\n\tprotected getColor(id: string, modify?: (color: Color, theme: IColorTheme) => Color): string | null {\n\t\tlet color = this.theme.getColor(id);\n\n\t\tif (color && modify) {\n\t\t\tcolor = modify(color, this.theme);\n\t\t}\n\n\t\treturn color ? color.toString() : null;\n\t}\n}\n\nexport interface IPartsSplash {\n\tbaseTheme: string;\n\tcolorInfo: {\n\t\tbackground: string;\n\t\tforeground: string | undefined;\n\t\teditorBackground: string | undefined;\n\t\ttitleBarBackground: string | undefined;\n\t\tactivityBarBackground: string | undefined;\n\t\tsideBarBackground: string | undefined;\n\t\tstatusBarBackground: string | undefined;\n\t\tstatusBarNoFolderBackground: string | undefined;\n\t\twindowBorder: string | undefined;\n\t};\n\tlayoutInfo: {\n\t\tsideBarSide: string;\n\t\teditorPartMinWidth: number;\n\t\ttitleBarHeight: number;\n\t\tactivityBarWidth: number;\n\t\tsideBarWidth: number;\n\t\tstatusBarHeight: number;\n\t\twindowBorder: boolean;\n\t\twindowBorderRadius: string | undefined;\n\t} | undefined;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Codicon } from 'vs/base/common/codicons';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { IExtensionTerminalProfile, ITerminalProfile, TerminalIcon } from 'vs/platform/terminal/common/terminal';\nimport { ThemeIcon } from 'vs/platform/theme/common/themeService';\n\nexport function createProfileSchemaEnums(detectedProfiles: ITerminalProfile[], extensionProfiles?: readonly IExtensionTerminalProfile[]): {\n\tvalues: (string | null)[] | undefined;\n\tmarkdownDescriptions: string[] | undefined;\n} {\n\tconst result: { name: string | null; description: string }[] = [{\n\t\tname: null,\n\t\tdescription: localize('terminalAutomaticProfile', 'Automatically detect the default')\n\t}];\n\tresult.push(...detectedProfiles.map(e => {\n\t\treturn {\n\t\t\tname: e.profileName,\n\t\t\tdescription: createProfileDescription(e)\n\t\t};\n\t}));\n\tif (extensionProfiles) {\n\t\tresult.push(...extensionProfiles.map(extensionProfile => {\n\t\t\treturn {\n\t\t\t\tname: extensionProfile.title,\n\t\t\t\tdescription: createExtensionProfileDescription(extensionProfile)\n\t\t\t};\n\t\t}));\n\t}\n\treturn {\n\t\tvalues: result.map(e => e.name),\n\t\tmarkdownDescriptions: result.map(e => e.description)\n\t};\n}\n\nfunction createProfileDescription(profile: ITerminalProfile): string {\n\tlet description = `$(${ThemeIcon.isThemeIcon(profile.icon) ? profile.icon.id : profile.icon ? profile.icon : Codicon.terminal.id}) ${profile.profileName}\\n- path: ${profile.path}`;\n\tif (profile.args) {\n\t\tif (typeof profile.args === 'string') {\n\t\t\tdescription += `\\n- args: \"${profile.args}\"`;\n\t\t} else {\n\t\t\tdescription += `\\n- args: [${profile.args.length === 0 ? '' : `'${profile.args.join(`','`)}'`}]`;\n\t\t}\n\t}\n\tif (profile.overrideName !== undefined) {\n\t\tdescription += `\\n- overrideName: ${profile.overrideName}`;\n\t}\n\tif (profile.color) {\n\t\tdescription += `\\n- color: ${profile.color}`;\n\t}\n\tif (profile.env) {\n\t\tdescription += `\\n- env: ${JSON.stringify(profile.env)}`;\n\t}\n\treturn description;\n}\n\nfunction createExtensionProfileDescription(profile: IExtensionTerminalProfile): string {\n\tconst description = `$(${ThemeIcon.isThemeIcon(profile.icon) ? profile.icon.id : profile.icon ? profile.icon : Codicon.terminal.id}) ${profile.title}\\n- extensionIdentifier: ${profile.extensionIdentifier}`;\n\treturn description;\n}\n\n\nexport function terminalProfileArgsMatch(args1: string | string[] | undefined, args2: string | string[] | undefined): boolean {\n\tif (!args1 && !args2) {\n\t\treturn true;\n\t} else if (typeof args1 === 'string' && typeof args2 === 'string') {\n\t\treturn args1 === args2;\n\t} else if (Array.isArray(args1) && Array.isArray(args2)) {\n\t\tif (args1.length !== args2.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0; i < args1.length; i++) {\n\t\t\tif (args1[i] !== args2[i]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nexport function terminalIconsEqual(iconOne?: TerminalIcon, iconTwo?: TerminalIcon): boolean {\n\tif (!iconOne && !iconTwo) {\n\t\treturn true;\n\t} else if (!iconOne || !iconTwo) {\n\t\treturn false;\n\t}\n\n\tif (ThemeIcon.isThemeIcon(iconOne) && ThemeIcon.isThemeIcon(iconTwo)) {\n\t\treturn iconOne.id === iconTwo.id && iconOne.color === iconTwo.color;\n\t}\n\tif (typeof iconOne === 'object' && iconOne && 'light' in iconOne && 'dark' in iconOne\n\t\t&& typeof iconTwo === 'object' && iconTwo && 'light' in iconTwo && 'dark' in iconTwo) {\n\t\tconst castedIcon = (iconOne as { light: unknown; dark: unknown });\n\t\tconst castedIconTwo = (iconTwo as { light: unknown; dark: unknown });\n\t\tif ((URI.isUri(castedIcon.light) || isUriComponents(castedIcon.light)) && (URI.isUri(castedIcon.dark) || isUriComponents(castedIcon.dark))\n\t\t\t&& (URI.isUri(castedIconTwo.light) || isUriComponents(castedIconTwo.light)) && (URI.isUri(castedIconTwo.dark) || isUriComponents(castedIconTwo.dark))) {\n\t\t\treturn castedIcon.light.path === castedIconTwo.light.path && castedIcon.dark.path === castedIconTwo.dark.path;\n\t\t}\n\t}\n\tif ((URI.isUri(iconOne) && URI.isUri(iconTwo)) || (isUriComponents(iconOne) || isUriComponents(iconTwo))) {\n\t\tconst castedIcon = (iconOne as { scheme: unknown; path: unknown });\n\t\tconst castedIconTwo = (iconTwo as { scheme: unknown; path: unknown });\n\t\treturn castedIcon.path === castedIconTwo.path && castedIcon.scheme === castedIconTwo.scheme;\n\t}\n\n\treturn false;\n}\n\n\nexport function isUriComponents(thing: unknown): thing is UriComponents {\n\tif (!thing) {\n\t\treturn false;\n\t}\n\treturn typeof (<any>thing).path === 'string' &&\n\t\ttypeof (<any>thing).scheme === 'string';\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Codicon } from 'vs/base/common/codicons';\nimport { IJSONSchema, IJSONSchemaMap } from 'vs/base/common/jsonSchema';\nimport { OperatingSystem } from 'vs/base/common/platform';\nimport { localize } from 'vs/nls';\nimport { ConfigurationScope, Extensions, IConfigurationNode, IConfigurationRegistry } from 'vs/platform/configuration/common/configurationRegistry';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IExtensionTerminalProfile, ITerminalProfile, TerminalSettingId } from 'vs/platform/terminal/common/terminal';\nimport { createProfileSchemaEnums } from 'vs/platform/terminal/common/terminalProfiles';\n\nexport const terminalColorSchema: IJSONSchema = {\n\ttype: ['string', 'null'],\n\tenum: [\n\t\t'terminal.ansiBlack',\n\t\t'terminal.ansiRed',\n\t\t'terminal.ansiGreen',\n\t\t'terminal.ansiYellow',\n\t\t'terminal.ansiBlue',\n\t\t'terminal.ansiMagenta',\n\t\t'terminal.ansiCyan',\n\t\t'terminal.ansiWhite'\n\t],\n\tdefault: null\n};\n\nexport const terminalIconSchema: IJSONSchema = {\n\ttype: 'string',\n\tenum: Array.from(Codicon.getAll(), icon => icon.id),\n\tmarkdownEnumDescriptions: Array.from(Codicon.getAll(), icon => `$(${icon.id})`),\n};\n\nconst terminalProfileBaseProperties: IJSONSchemaMap = {\n\targs: {\n\t\tdescription: localize('terminalProfile.args', 'An optional set of arguments to run the shell executable with.'),\n\t\ttype: 'array',\n\t\titems: {\n\t\t\ttype: 'string'\n\t\t}\n\t},\n\toverrideName: {\n\t\tdescription: localize('terminalProfile.overrideName', 'Controls whether or not the profile name overrides the auto detected one.'),\n\t\ttype: 'boolean'\n\t},\n\ticon: {\n\t\tdescription: localize('terminalProfile.icon', 'A codicon ID to associate with the terminal icon.'),\n\t\t...terminalIconSchema\n\t},\n\tcolor: {\n\t\tdescription: localize('terminalProfile.color', 'A theme color ID to associate with the terminal icon.'),\n\t\t...terminalColorSchema\n\t},\n\tenv: {\n\t\tmarkdownDescription: localize('terminalProfile.env', \"An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.\"),\n\t\ttype: 'object',\n\t\tadditionalProperties: {\n\t\t\ttype: ['string', 'null']\n\t\t},\n\t\tdefault: {}\n\t}\n};\n\nconst terminalProfileSchema: IJSONSchema = {\n\ttype: 'object',\n\trequired: ['path'],\n\tproperties: {\n\t\tpath: {\n\t\t\tdescription: localize('terminalProfile.path', 'A single path to a shell executable or an array of paths that will be used as fallbacks when one fails.'),\n\t\t\ttype: ['string', 'array'],\n\t\t\titems: {\n\t\t\t\ttype: 'string'\n\t\t\t}\n\t\t},\n\t\t...terminalProfileBaseProperties\n\t}\n};\n\nconst terminalAutomationProfileSchema: IJSONSchema = {\n\ttype: 'object',\n\trequired: ['path'],\n\tproperties: {\n\t\tpath: {\n\t\t\tdescription: localize('terminalAutomationProfile.path', 'A single path to a shell executable.'),\n\t\t\ttype: ['string'],\n\t\t\titems: {\n\t\t\t\ttype: 'string'\n\t\t\t}\n\t\t},\n\t\t...terminalProfileBaseProperties\n\t}\n};\n\nconst shellDeprecationMessageLinux = localize('terminal.integrated.shell.linux.deprecation', \"This is deprecated, the new recommended way to configure your default shell is by creating a terminal profile in {0} and setting its profile name as the default in {1}. This will currently take priority over the new profiles settings but that will change in the future.\", '`#terminal.integrated.profiles.linux#`', '`#terminal.integrated.defaultProfile.linux#`');\nconst shellDeprecationMessageOsx = localize('terminal.integrated.shell.osx.deprecation', \"This is deprecated, the new recommended way to configure your default shell is by creating a terminal profile in {0} and setting its profile name as the default in {1}. This will currently take priority over the new profiles settings but that will change in the future.\", '`#terminal.integrated.profiles.osx#`', '`#terminal.integrated.defaultProfile.osx#`');\nconst shellDeprecationMessageWindows = localize('terminal.integrated.shell.windows.deprecation', \"This is deprecated, the new recommended way to configure your default shell is by creating a terminal profile in {0} and setting its profile name as the default in {1}. This will currently take priority over the new profiles settings but that will change in the future.\", '`#terminal.integrated.profiles.windows#`', '`#terminal.integrated.defaultProfile.windows#`');\nconst automationShellDeprecationMessageLinux = localize('terminal.integrated.automationShell.linux.deprecation', \"This is deprecated, the new recommended way to configure your automation shell is by creating a terminal automation profile with {0}. This will currently take priority over the new automation profile settings but that will change in the future.\", '`#terminal.integrated.automationProfile.linux#`');\nconst automationShellDeprecationMessageOsx = localize('terminal.integrated.automationShell.osx.deprecation', \"This is deprecated, the new recommended way to configure your automation shell is by creating a terminal automation profile with {0}. This will currently take priority over the new automation profile settings but that will change in the future.\", '`#terminal.integrated.automationProfile.osx#`');\nconst automationShellDeprecationMessageWindows = localize('terminal.integrated.automationShell.windows.deprecation', \"This is deprecated, the new recommended way to configure your automation shell is by creating a terminal automation profile with {0}. This will currently take priority over the new automation profile settings but that will change in the future.\", '`#terminal.integrated.automationProfile.windows#`');\n\nconst terminalPlatformConfiguration: IConfigurationNode = {\n\tid: 'terminal',\n\torder: 100,\n\ttitle: localize('terminalIntegratedConfigurationTitle', \"Integrated Terminal\"),\n\ttype: 'object',\n\tproperties: {\n\t\t[TerminalSettingId.AutomationShellLinux]: {\n\t\t\trestricted: true,\n\t\t\tmarkdownDescription: localize({\n\t\t\t\tkey: 'terminal.integrated.automationShell.linux',\n\t\t\t\tcomment: ['{0} and {1} are the `shell` and `shellArgs` settings keys']\n\t\t\t}, \"A path that when set will override {0} and ignore {1} values for automation-related terminal usage like tasks and debug.\", '`terminal.integrated.shell.linux`', '`shellArgs`'),\n\t\t\ttype: ['string', 'null'],\n\t\t\tdefault: null,\n\t\t\tmarkdownDeprecationMessage: automationShellDeprecationMessageLinux\n\t\t},\n\t\t[TerminalSettingId.AutomationShellMacOs]: {\n\t\t\trestricted: true,\n\t\t\tmarkdownDescription: localize({\n\t\t\t\tkey: 'terminal.integrated.automationShell.osx',\n\t\t\t\tcomment: ['{0} and {1} are the `shell` and `shellArgs` settings keys']\n\t\t\t}, \"A path that when set will override {0} and ignore {1} values for automation-related terminal usage like tasks and debug.\", '`terminal.integrated.shell.osx`', '`shellArgs`'),\n\t\t\ttype: ['string', 'null'],\n\t\t\tdefault: null,\n\t\t\tmarkdownDeprecationMessage: automationShellDeprecationMessageOsx\n\t\t},\n\t\t[TerminalSettingId.AutomationShellWindows]: {\n\t\t\trestricted: true,\n\t\t\tmarkdownDescription: localize({\n\t\t\t\tkey: 'terminal.integrated.automationShell.windows',\n\t\t\t\tcomment: ['{0} and {1} are the `shell` and `shellArgs` settings keys']\n\t\t\t}, \"A path that when set will override {0} and ignore {1} values for automation-related terminal usage like tasks and debug.\", '`terminal.integrated.shell.windows`', '`shellArgs`'),\n\t\t\ttype: ['string', 'null'],\n\t\t\tdefault: null,\n\t\t\tmarkdownDeprecationMessage: automationShellDeprecationMessageWindows\n\t\t},\n\t\t[TerminalSettingId.AutomationProfileLinux]: {\n\t\t\trestricted: true,\n\t\t\tmarkdownDescription: localize('terminal.integrated.automationProfile.linux', \"The terminal profile to use on Linux for automation-related terminal usage like tasks and debug. This setting will currently be ignored if {0} is set.\", '`#terminal.integrated.automationShell.linux#`'),\n\t\t\ttype: ['object', 'null'],\n\t\t\tdefault: null,\n\t\t\t'anyOf': [\n\t\t\t\t{ type: 'null' },\n\t\t\t\tterminalAutomationProfileSchema\n\t\t\t],\n\t\t\tdefaultSnippets: [\n\t\t\t\t{\n\t\t\t\t\tbody: {\n\t\t\t\t\t\tpath: '${1}',\n\t\t\t\t\t\ticon: '${2}'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t[TerminalSettingId.AutomationProfileMacOs]: {\n\t\t\trestricted: true,\n\t\t\tmarkdownDescription: localize('terminal.integrated.automationProfile.osx', \"The terminal profile to use on macOS for automation-related terminal usage like tasks and debug. This setting will currently be ignored if {0} is set.\", '`#terminal.integrated.automationShell.osx#`'),\n\t\t\ttype: ['object', 'null'],\n\t\t\tdefault: null,\n\t\t\t'anyOf': [\n\t\t\t\t{ type: 'null' },\n\t\t\t\tterminalAutomationProfileSchema\n\t\t\t],\n\t\t\tdefaultSnippets: [\n\t\t\t\t{\n\t\t\t\t\tbody: {\n\t\t\t\t\t\tpath: '${1}',\n\t\t\t\t\t\ticon: '${2}'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t[TerminalSettingId.AutomationProfileWindows]: {\n\t\t\trestricted: true,\n\t\t\tmarkdownDescription: localize('terminal.integrated.automationProfile.windows', \"The terminal profile to use for automation-related terminal usage like tasks and debug. This setting will currently be ignored if {0} is set.\", '`#terminal.integrated.automationShell.windows#`'),\n\t\t\ttype: ['object', 'null'],\n\t\t\tdefault: null,\n\t\t\t'anyOf': [\n\t\t\t\t{ type: 'null' },\n\t\t\t\tterminalAutomationProfileSchema\n\t\t\t],\n\t\t\tdefaultSnippets: [\n\t\t\t\t{\n\t\t\t\t\tbody: {\n\t\t\t\t\t\tpath: '${1}',\n\t\t\t\t\t\ticon: '${2}'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t[TerminalSettingId.ShellLinux]: {\n\t\t\trestricted: true,\n\t\t\tmarkdownDescription: localize('terminal.integrated.shell.linux', \"The path of the shell that the terminal uses on Linux. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).\"),\n\t\t\ttype: ['string', 'null'],\n\t\t\tdefault: null,\n\t\t\tmarkdownDeprecationMessage: shellDeprecationMessageLinux\n\t\t},\n\t\t[TerminalSettingId.ShellMacOs]: {\n\t\t\trestricted: true,\n\t\t\tmarkdownDescription: localize('terminal.integrated.shell.osx', \"The path of the shell that the terminal uses on macOS. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).\"),\n\t\t\ttype: ['string', 'null'],\n\t\t\tdefault: null,\n\t\t\tmarkdownDeprecationMessage: shellDeprecationMessageOsx\n\t\t},\n\t\t[TerminalSettingId.ShellWindows]: {\n\t\t\trestricted: true,\n\t\t\tmarkdownDescription: localize('terminal.integrated.shell.windows', \"The path of the shell that the terminal uses on Windows. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).\"),\n\t\t\ttype: ['string', 'null'],\n\t\t\tdefault: null,\n\t\t\tmarkdownDeprecationMessage: shellDeprecationMessageWindows\n\t\t},\n\t\t[TerminalSettingId.ShellArgsLinux]: {\n\t\t\trestricted: true,\n\t\t\tmarkdownDescription: localize('terminal.integrated.shellArgs.linux', \"The command line arguments to use when on the Linux terminal. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).\"),\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\ttype: 'string'\n\t\t\t},\n\t\t\tdefault: [],\n\t\t\tmarkdownDeprecationMessage: shellDeprecationMessageLinux\n\t\t},\n\t\t[TerminalSettingId.ShellArgsMacOs]: {\n\t\t\trestricted: true,\n\t\t\tmarkdownDescription: localize('terminal.integrated.shellArgs.osx', \"The command line arguments to use when on the macOS terminal. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).\"),\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\ttype: 'string'\n\t\t\t},\n\t\t\t// Unlike on Linux, ~/.profile is not sourced when logging into a macOS session. This\n\t\t\t// is the reason terminals on macOS typically run login shells by default which set up\n\t\t\t// the environment. See http://unix.stackexchange.com/a/119675/115410\n\t\t\tdefault: ['-l'],\n\t\t\tmarkdownDeprecationMessage: shellDeprecationMessageOsx\n\t\t},\n\t\t[TerminalSettingId.ShellArgsWindows]: {\n\t\t\trestricted: true,\n\t\t\tmarkdownDescription: localize('terminal.integrated.shellArgs.windows', \"The command line arguments to use when on the Windows terminal. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).\"),\n\t\t\t'anyOf': [\n\t\t\t\t{\n\t\t\t\t\ttype: 'array',\n\t\t\t\t\titems: {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tmarkdownDescription: localize('terminal.integrated.shellArgs.windows', \"The command line arguments to use when on the Windows terminal. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).\")\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tmarkdownDescription: localize('terminal.integrated.shellArgs.windows.string', \"The command line arguments in [command-line format](https://msdn.microsoft.com/en-au/08dfcab2-eb6e-49a4-80eb-87d4076c98c6) to use when on the Windows terminal. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).\")\n\t\t\t\t}\n\t\t\t],\n\t\t\tdefault: [],\n\t\t\tmarkdownDeprecationMessage: shellDeprecationMessageWindows\n\t\t},\n\t\t[TerminalSettingId.ProfilesWindows]: {\n\t\t\trestricted: true,\n\t\t\tmarkdownDescription: localize(\n\t\t\t\t{\n\t\t\t\t\tkey: 'terminal.integrated.profiles.windows',\n\t\t\t\t\tcomment: ['{0}, {1}, and {2} are the `source`, `path` and optional `args` settings keys']\n\t\t\t\t},\n\t\t\t\t\"The Windows profiles to present when creating a new terminal via the terminal dropdown. Use the {0} property to automatically detect the shell's location. Or set the {1} property manually with an optional {2}.\\n\\nSet an existing profile to {3} to hide the profile from the list, for example: {4}.\", '`source`', '`path`', '`args`', '`null`', '`\"Ubuntu-20.04 (WSL)\": null`'\n\t\t\t),\n\t\t\ttype: 'object',\n\t\t\tdefault: {\n\t\t\t\t'PowerShell': {\n\t\t\t\t\tsource: 'PowerShell',\n\t\t\t\t\ticon: 'terminal-powershell'\n\t\t\t\t},\n\t\t\t\t'Command Prompt': {\n\t\t\t\t\tpath: [\n\t\t\t\t\t\t'${env:windir}\\\\Sysnative\\\\cmd.exe',\n\t\t\t\t\t\t'${env:windir}\\\\System32\\\\cmd.exe'\n\t\t\t\t\t],\n\t\t\t\t\targs: [],\n\t\t\t\t\ticon: 'terminal-cmd'\n\t\t\t\t},\n\t\t\t\t'Git Bash': {\n\t\t\t\t\tsource: 'Git Bash'\n\t\t\t\t}\n\t\t\t},\n\t\t\tadditionalProperties: {\n\t\t\t\t'anyOf': [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\trequired: ['source'],\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tsource: {\n\t\t\t\t\t\t\t\tdescription: localize('terminalProfile.windowsSource', 'A profile source that will auto detect the paths to the shell.'),\n\t\t\t\t\t\t\t\tenum: ['PowerShell', 'Git Bash']\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t...terminalProfileBaseProperties\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\trequired: ['extensionIdentifier', 'id', 'title'],\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\textensionIdentifier: {\n\t\t\t\t\t\t\t\tdescription: localize('terminalProfile.windowsExtensionIdentifier', 'The extension that contributed this profile.'),\n\t\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tid: {\n\t\t\t\t\t\t\t\tdescription: localize('terminalProfile.windowsExtensionId', 'The id of the extension terminal'),\n\t\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\t\tdescription: localize('terminalProfile.windowsExtensionTitle', 'The name of the extension terminal'),\n\t\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t...terminalProfileBaseProperties\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{ type: 'null' },\n\t\t\t\t\tterminalProfileSchema\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t[TerminalSettingId.ProfilesMacOs]: {\n\t\t\trestricted: true,\n\t\t\tmarkdownDescription: localize(\n\t\t\t\t{\n\t\t\t\t\tkey: 'terminal.integrated.profile.osx',\n\t\t\t\t\tcomment: ['{0} and {1} are the `path` and optional `args` settings keys']\n\t\t\t\t},\n\t\t\t\t\"The macOS profiles to present when creating a new terminal via the terminal dropdown. Set the {0} property manually with an optional {1}.\\n\\nSet an existing profile to {2} to hide the profile from the list, for example: {3}.\", '`path`', '`args`', '`null`', '`\"bash\": null`'\n\t\t\t),\n\t\t\ttype: 'object',\n\t\t\tdefault: {\n\t\t\t\t'bash': {\n\t\t\t\t\tpath: 'bash',\n\t\t\t\t\targs: ['-l'],\n\t\t\t\t\ticon: 'terminal-bash'\n\t\t\t\t},\n\t\t\t\t'zsh': {\n\t\t\t\t\tpath: 'zsh',\n\t\t\t\t\targs: ['-l']\n\t\t\t\t},\n\t\t\t\t'fish': {\n\t\t\t\t\tpath: 'fish',\n\t\t\t\t\targs: ['-l']\n\t\t\t\t},\n\t\t\t\t'tmux': {\n\t\t\t\t\tpath: 'tmux',\n\t\t\t\t\ticon: 'terminal-tmux'\n\t\t\t\t},\n\t\t\t\t'pwsh': {\n\t\t\t\t\tpath: 'pwsh',\n\t\t\t\t\ticon: 'terminal-powershell'\n\t\t\t\t}\n\t\t\t},\n\t\t\tadditionalProperties: {\n\t\t\t\t'anyOf': [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\trequired: ['extensionIdentifier', 'id', 'title'],\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\textensionIdentifier: {\n\t\t\t\t\t\t\t\tdescription: localize('terminalProfile.osxExtensionIdentifier', 'The extension that contributed this profile.'),\n\t\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tid: {\n\t\t\t\t\t\t\t\tdescription: localize('terminalProfile.osxExtensionId', 'The id of the extension terminal'),\n\t\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\t\tdescription: localize('terminalProfile.osxExtensionTitle', 'The name of the extension terminal'),\n\t\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t...terminalProfileBaseProperties\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{ type: 'null' },\n\t\t\t\t\tterminalProfileSchema\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t[TerminalSettingId.ProfilesLinux]: {\n\t\t\trestricted: true,\n\t\t\tmarkdownDescription: localize(\n\t\t\t\t{\n\t\t\t\t\tkey: 'terminal.integrated.profile.linux',\n\t\t\t\t\tcomment: ['{0} and {1} are the `path` and optional `args` settings keys']\n\t\t\t\t},\n\t\t\t\t\"The Linux profiles to present when creating a new terminal via the terminal dropdown. Set the {0} property manually with an optional {1}.\\n\\nSet an existing profile to {2} to hide the profile from the list, for example: {3}.\", '`path`', '`args`', '`null`', '`\"bash\": null`'\n\t\t\t),\n\t\t\ttype: 'object',\n\t\t\tdefault: {\n\t\t\t\t'bash': {\n\t\t\t\t\tpath: 'bash',\n\t\t\t\t\ticon: 'terminal-bash'\n\t\t\t\t},\n\t\t\t\t'zsh': {\n\t\t\t\t\tpath: 'zsh'\n\t\t\t\t},\n\t\t\t\t'fish': {\n\t\t\t\t\tpath: 'fish'\n\t\t\t\t},\n\t\t\t\t'tmux': {\n\t\t\t\t\tpath: 'tmux',\n\t\t\t\t\ticon: 'terminal-tmux'\n\t\t\t\t},\n\t\t\t\t'pwsh': {\n\t\t\t\t\tpath: 'pwsh',\n\t\t\t\t\ticon: 'terminal-powershell'\n\t\t\t\t}\n\t\t\t},\n\t\t\tadditionalProperties: {\n\t\t\t\t'anyOf': [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\trequired: ['extensionIdentifier', 'id', 'title'],\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\textensionIdentifier: {\n\t\t\t\t\t\t\t\tdescription: localize('terminalProfile.linuxExtensionIdentifier', 'The extension that contributed this profile.'),\n\t\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tid: {\n\t\t\t\t\t\t\t\tdescription: localize('terminalProfile.linuxExtensionId', 'The id of the extension terminal'),\n\t\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\t\tdescription: localize('terminalProfile.linuxExtensionTitle', 'The name of the extension terminal'),\n\t\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t...terminalProfileBaseProperties\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{ type: 'null' },\n\t\t\t\t\tterminalProfileSchema\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t[TerminalSettingId.UseWslProfiles]: {\n\t\t\tdescription: localize('terminal.integrated.useWslProfiles', 'Controls whether or not WSL distros are shown in the terminal dropdown'),\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true\n\t\t},\n\t\t[TerminalSettingId.InheritEnv]: {\n\t\t\tscope: ConfigurationScope.APPLICATION,\n\t\t\tdescription: localize('terminal.integrated.inheritEnv', \"Whether new shells should inherit their environment from VS Code, which may source a login shell to ensure $PATH and other development variables are initialized. This has no effect on Windows.\"),\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true\n\t\t},\n\t\t[TerminalSettingId.PersistentSessionScrollback]: {\n\t\t\tscope: ConfigurationScope.APPLICATION,\n\t\t\tmarkdownDescription: localize('terminal.integrated.persistentSessionScrollback', \"Controls the maximum amount of lines that will be restored when reconnecting to a persistent terminal session. Increasing this will restore more lines of scrollback at the cost of more memory and increase the time it takes to connect to terminals on start up. This setting requires a restart to take effect and should be set to a value less than or equal to `#terminal.integrated.scrollback#`.\"),\n\t\t\ttype: 'number',\n\t\t\tdefault: 100\n\t\t},\n\t\t[TerminalSettingId.ShowLinkHover]: {\n\t\t\tscope: ConfigurationScope.APPLICATION,\n\t\t\tdescription: localize('terminal.integrated.showLinkHover', \"Whether to show hovers for links in the terminal output.\"),\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true\n\t\t},\n\t\t[TerminalSettingId.IgnoreProcessNames]: {\n\t\t\tdescription: localize('terminal.integrated.confirmIgnoreProcesses', \"A set of process names to ignore when using the {0} setting.\", '`terminal.integrated.confirmOnKill`'),\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\ttype: 'string',\n\t\t\t\tuniqueItems: true\n\t\t\t},\n\t\t\tdefault: [\n\t\t\t\t// Popular prompt programs, these should not count as child processes\n\t\t\t\t'starship',\n\t\t\t\t'oh-my-posh',\n\t\t\t\t// Git bash may runs a subprocess of itself (bin\\bash.exe -> usr\\bin\\bash.exe)\n\t\t\t\t'bash',\n\t\t\t\t'zsh',\n\t\t\t]\n\t\t}\n\t}\n};\n\n/**\n * Registers terminal configurations required by shared process and remote server.\n */\nexport function registerTerminalPlatformConfiguration() {\n\tRegistry.as<IConfigurationRegistry>(Extensions.Configuration).registerConfiguration(terminalPlatformConfiguration);\n\tregisterTerminalDefaultProfileConfiguration();\n}\n\nlet defaultProfilesConfiguration: IConfigurationNode | undefined;\nexport function registerTerminalDefaultProfileConfiguration(detectedProfiles?: { os: OperatingSystem; profiles: ITerminalProfile[] }, extensionContributedProfiles?: readonly IExtensionTerminalProfile[]) {\n\tconst registry = Registry.as<IConfigurationRegistry>(Extensions.Configuration);\n\tlet profileEnum;\n\tif (detectedProfiles) {\n\t\tprofileEnum = createProfileSchemaEnums(detectedProfiles?.profiles, extensionContributedProfiles);\n\t}\n\tconst oldDefaultProfilesConfiguration = defaultProfilesConfiguration;\n\tdefaultProfilesConfiguration = {\n\t\tid: 'terminal',\n\t\torder: 100,\n\t\ttitle: localize('terminalIntegratedConfigurationTitle', \"Integrated Terminal\"),\n\t\ttype: 'object',\n\t\tproperties: {\n\t\t\t[TerminalSettingId.DefaultProfileLinux]: {\n\t\t\t\trestricted: true,\n\t\t\t\tmarkdownDescription: localize('terminal.integrated.defaultProfile.linux', \"The default profile used on Linux. This setting will currently be ignored if either {0} or {1} are set.\", '`terminal.integrated.shell.linux`', '`terminal.integrated.shellArgs.linux`'),\n\t\t\t\ttype: ['string', 'null'],\n\t\t\t\tdefault: null,\n\t\t\t\tenum: detectedProfiles?.os === OperatingSystem.Linux ? profileEnum?.values : undefined,\n\t\t\t\tmarkdownEnumDescriptions: detectedProfiles?.os === OperatingSystem.Linux ? profileEnum?.markdownDescriptions : undefined\n\t\t\t},\n\t\t\t[TerminalSettingId.DefaultProfileMacOs]: {\n\t\t\t\trestricted: true,\n\t\t\t\tmarkdownDescription: localize('terminal.integrated.defaultProfile.osx', \"The default profile used on macOS. This setting will currently be ignored if either {0} or {1} are set.\", '`terminal.integrated.shell.osx`', '`terminal.integrated.shellArgs.osx`'),\n\t\t\t\ttype: ['string', 'null'],\n\t\t\t\tdefault: null,\n\t\t\t\tenum: detectedProfiles?.os === OperatingSystem.Macintosh ? profileEnum?.values : undefined,\n\t\t\t\tmarkdownEnumDescriptions: detectedProfiles?.os === OperatingSystem.Macintosh ? profileEnum?.markdownDescriptions : undefined\n\t\t\t},\n\t\t\t[TerminalSettingId.DefaultProfileWindows]: {\n\t\t\t\trestricted: true,\n\t\t\t\tmarkdownDescription: localize('terminal.integrated.defaultProfile.windows', \"The default profile used on Windows. This setting will currently be ignored if either {0} or {1} are set.\", '`terminal.integrated.shell.windows`', '`terminal.integrated.shellArgs.windows`'),\n\t\t\t\ttype: ['string', 'null'],\n\t\t\t\tdefault: null,\n\t\t\t\tenum: detectedProfiles?.os === OperatingSystem.Windows ? profileEnum?.values : undefined,\n\t\t\t\tmarkdownEnumDescriptions: detectedProfiles?.os === OperatingSystem.Windows ? profileEnum?.markdownDescriptions : undefined\n\t\t\t},\n\t\t}\n\t};\n\tregistry.updateConfigurations({ add: [defaultProfilesConfiguration], remove: oldDefaultProfilesConfiguration ? [oldDefaultProfilesConfiguration] : [] });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as cp from 'child_process';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { basename, delimiter, normalize } from 'vs/base/common/path';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport * as pfs from 'vs/base/node/pfs';\nimport { enumeratePowerShellInstallations } from 'vs/base/node/powershell';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ITerminalEnvironment, ITerminalExecutable, ITerminalProfile, ITerminalProfileSource, ProfileSource, TerminalIcon, TerminalSettingId } from 'vs/platform/terminal/common/terminal';\nimport { findExecutable, getWindowsBuildNumber } from 'vs/platform/terminal/node/terminalEnvironment';\nimport { ThemeIcon } from 'vs/platform/theme/common/themeService';\n\nlet profileSources: Map<string, IPotentialTerminalProfile> | undefined;\nlet logIfWslNotInstalled: boolean = true;\n\nexport function detectAvailableProfiles(\n\tprofiles: unknown,\n\tdefaultProfile: unknown,\n\tincludeDetectedProfiles: boolean,\n\tconfigurationService: IConfigurationService,\n\tshellEnv: typeof process.env = process.env,\n\tfsProvider?: IFsProvider,\n\tlogService?: ILogService,\n\tvariableResolver?: (text: string[]) => Promise<string[]>,\n\ttestPwshSourcePaths?: string[]\n): Promise<ITerminalProfile[]> {\n\tfsProvider = fsProvider || {\n\t\texistsFile: pfs.SymlinkSupport.existsFile,\n\t\treadFile: pfs.Promises.readFile\n\t};\n\tif (isWindows) {\n\t\treturn detectAvailableWindowsProfiles(\n\t\t\tincludeDetectedProfiles,\n\t\t\tfsProvider,\n\t\t\tshellEnv,\n\t\t\tlogService,\n\t\t\tconfigurationService.getValue(TerminalSettingId.UseWslProfiles) !== false,\n\t\t\tprofiles && typeof profiles === 'object' ? { ...profiles } : configurationService.getValue<{ [key: string]: IUnresolvedTerminalProfile }>(TerminalSettingId.ProfilesWindows),\n\t\t\ttypeof defaultProfile === 'string' ? defaultProfile : configurationService.getValue<string>(TerminalSettingId.DefaultProfileWindows),\n\t\t\ttestPwshSourcePaths,\n\t\t\tvariableResolver\n\t\t);\n\t}\n\treturn detectAvailableUnixProfiles(\n\t\tfsProvider,\n\t\tlogService,\n\t\tincludeDetectedProfiles,\n\t\tprofiles && typeof profiles === 'object' ? { ...profiles } : configurationService.getValue<{ [key: string]: IUnresolvedTerminalProfile }>(isLinux ? TerminalSettingId.ProfilesLinux : TerminalSettingId.ProfilesMacOs),\n\t\ttypeof defaultProfile === 'string' ? defaultProfile : configurationService.getValue<string>(isLinux ? TerminalSettingId.DefaultProfileLinux : TerminalSettingId.DefaultProfileMacOs),\n\t\ttestPwshSourcePaths,\n\t\tvariableResolver,\n\t\tshellEnv\n\t);\n}\n\nasync function detectAvailableWindowsProfiles(\n\tincludeDetectedProfiles: boolean,\n\tfsProvider: IFsProvider,\n\tshellEnv: typeof process.env,\n\tlogService?: ILogService,\n\tuseWslProfiles?: boolean,\n\tconfigProfiles?: { [key: string]: IUnresolvedTerminalProfile },\n\tdefaultProfileName?: string,\n\ttestPwshSourcePaths?: string[],\n\tvariableResolver?: (text: string[]) => Promise<string[]>\n): Promise<ITerminalProfile[]> {\n\t// Determine the correct System32 path. We want to point to Sysnative\n\t// when the 32-bit version of VS Code is running on a 64-bit machine.\n\t// The reason for this is because PowerShell's important PSReadline\n\t// module doesn't work if this is not the case. See #27915.\n\tconst is32ProcessOn64Windows = process.env.hasOwnProperty('PROCESSOR_ARCHITEW6432');\n\tconst system32Path = `${process.env['windir']}\\\\${is32ProcessOn64Windows ? 'Sysnative' : 'System32'}`;\n\n\tlet useWSLexe = false;\n\n\tif (getWindowsBuildNumber() >= 16299) {\n\t\tuseWSLexe = true;\n\t}\n\n\tawait initializeWindowsProfiles(testPwshSourcePaths);\n\n\tconst detectedProfiles: Map<string, IUnresolvedTerminalProfile> = new Map();\n\n\t// Add auto detected profiles\n\tif (includeDetectedProfiles) {\n\t\tdetectedProfiles.set('PowerShell', {\n\t\t\tsource: ProfileSource.Pwsh,\n\t\t\ticon: Codicon.terminalPowershell,\n\t\t\tisAutoDetected: true\n\t\t});\n\t\tdetectedProfiles.set('Windows PowerShell', {\n\t\t\tpath: `${system32Path}\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe`,\n\t\t\ticon: Codicon.terminalPowershell,\n\t\t\tisAutoDetected: true\n\t\t});\n\t\tdetectedProfiles.set('Git Bash', {\n\t\t\tsource: ProfileSource.GitBash,\n\t\t\tisAutoDetected: true\n\t\t});\n\t\tdetectedProfiles.set('Cygwin', {\n\t\t\tpath: [\n\t\t\t\t`${process.env['HOMEDRIVE']}\\\\cygwin64\\\\bin\\\\bash.exe`,\n\t\t\t\t`${process.env['HOMEDRIVE']}\\\\cygwin\\\\bin\\\\bash.exe`\n\t\t\t],\n\t\t\targs: ['--login'],\n\t\t\tisAutoDetected: true\n\t\t});\n\t\tdetectedProfiles.set('Command Prompt', {\n\t\t\tpath: `${system32Path}\\\\cmd.exe`,\n\t\t\ticon: Codicon.terminalCmd,\n\t\t\tisAutoDetected: true\n\t\t});\n\t}\n\n\tapplyConfigProfilesToMap(configProfiles, detectedProfiles);\n\n\tconst resultProfiles: ITerminalProfile[] = await transformToTerminalProfiles(detectedProfiles.entries(), defaultProfileName, fsProvider, shellEnv, logService, variableResolver);\n\n\tif (includeDetectedProfiles || (!includeDetectedProfiles && useWslProfiles)) {\n\t\ttry {\n\t\t\tconst result = await getWslProfiles(`${system32Path}\\\\${useWSLexe ? 'wsl' : 'bash'}.exe`, defaultProfileName);\n\t\t\tfor (const wslProfile of result) {\n\t\t\t\tif (!configProfiles || !(wslProfile.profileName in configProfiles)) {\n\t\t\t\t\tresultProfiles.push(wslProfile);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tif (logIfWslNotInstalled) {\n\t\t\t\tlogService?.info('WSL is not installed, so could not detect WSL profiles');\n\t\t\t\tlogIfWslNotInstalled = false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn resultProfiles;\n}\n\nasync function transformToTerminalProfiles(\n\tentries: IterableIterator<[string, IUnresolvedTerminalProfile]>,\n\tdefaultProfileName: string | undefined,\n\tfsProvider: IFsProvider,\n\tshellEnv: typeof process.env = process.env,\n\tlogService?: ILogService,\n\tvariableResolver?: (text: string[]) => Promise<string[]>,\n): Promise<ITerminalProfile[]> {\n\tconst resultProfiles: ITerminalProfile[] = [];\n\tfor (const [profileName, profile] of entries) {\n\t\tif (profile === null) { continue; }\n\t\tlet originalPaths: string[];\n\t\tlet args: string[] | string | undefined;\n\t\tlet icon: ThemeIcon | URI | { light: URI; dark: URI } | undefined = undefined;\n\t\tif ('source' in profile) {\n\t\t\tconst source = profileSources?.get(profile.source);\n\t\t\tif (!source) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\toriginalPaths = source.paths;\n\n\t\t\t// if there are configured args, override the default ones\n\t\t\targs = profile.args || source.args;\n\t\t\tif (profile.icon) {\n\t\t\t\ticon = validateIcon(profile.icon);\n\t\t\t} else if (source.icon) {\n\t\t\t\ticon = source.icon;\n\t\t\t}\n\t\t} else {\n\t\t\toriginalPaths = Array.isArray(profile.path) ? profile.path : [profile.path];\n\t\t\targs = isWindows ? profile.args : Array.isArray(profile.args) ? profile.args : undefined;\n\t\t\ticon = validateIcon(profile.icon);\n\t\t}\n\n\t\tconst paths = (await variableResolver?.(originalPaths)) || originalPaths.slice();\n\t\tconst validatedProfile = await validateProfilePaths(profileName, defaultProfileName, paths, fsProvider, shellEnv, args, profile.env, profile.overrideName, profile.isAutoDetected, logService);\n\t\tif (validatedProfile) {\n\t\t\tvalidatedProfile.isAutoDetected = profile.isAutoDetected;\n\t\t\tvalidatedProfile.icon = icon;\n\t\t\tvalidatedProfile.color = profile.color;\n\t\t\tresultProfiles.push(validatedProfile);\n\t\t} else {\n\t\t\tlogService?.debug('Terminal profile not validated', profileName, originalPaths);\n\t\t}\n\t}\n\tlogService?.debug('Validated terminal profiles', resultProfiles);\n\treturn resultProfiles;\n}\n\nfunction validateIcon(icon: string | TerminalIcon | undefined): TerminalIcon | undefined {\n\tif (typeof icon === 'string') {\n\t\treturn { id: icon };\n\t}\n\treturn icon;\n}\n\nasync function initializeWindowsProfiles(testPwshSourcePaths?: string[]): Promise<void> {\n\tif (profileSources && !testPwshSourcePaths) {\n\t\treturn;\n\t}\n\n\tprofileSources = new Map();\n\tprofileSources.set(\n\t\t'Git Bash', {\n\t\tprofileName: 'Git Bash',\n\t\tpaths: [\n\t\t\t`${process.env['ProgramW6432']}\\\\Git\\\\bin\\\\bash.exe`,\n\t\t\t`${process.env['ProgramW6432']}\\\\Git\\\\usr\\\\bin\\\\bash.exe`,\n\t\t\t`${process.env['ProgramFiles']}\\\\Git\\\\bin\\\\bash.exe`,\n\t\t\t`${process.env['ProgramFiles']}\\\\Git\\\\usr\\\\bin\\\\bash.exe`,\n\t\t\t`${process.env['LocalAppData']}\\\\Programs\\\\Git\\\\bin\\\\bash.exe`,\n\t\t\t`${process.env['UserProfile']}\\\\scoop\\\\apps\\\\git-with-openssh\\\\current\\\\bin\\\\bash.exe`,\n\t\t\t`${process.env['AllUsersProfile']}\\\\scoop\\\\apps\\\\git-with-openssh\\\\current\\\\bin\\\\bash.exe`\n\t\t],\n\t\targs: ['--login']\n\t});\n\tprofileSources.set('PowerShell', {\n\t\tprofileName: 'PowerShell',\n\t\tpaths: testPwshSourcePaths || await getPowershellPaths(),\n\t\ticon: ThemeIcon.asThemeIcon(Codicon.terminalPowershell)\n\t});\n}\n\nasync function getPowershellPaths(): Promise<string[]> {\n\tconst paths: string[] = [];\n\t// Add all of the different kinds of PowerShells\n\tfor await (const pwshExe of enumeratePowerShellInstallations()) {\n\t\tpaths.push(pwshExe.exePath);\n\t}\n\treturn paths;\n}\n\nasync function getWslProfiles(wslPath: string, defaultProfileName: string | undefined): Promise<ITerminalProfile[]> {\n\tconst profiles: ITerminalProfile[] = [];\n\tconst distroOutput = await new Promise<string>((resolve, reject) => {\n\t\t// wsl.exe output is encoded in utf16le (ie. A -> 0x4100)\n\t\tcp.exec('wsl.exe -l -q', { encoding: 'utf16le', timeout: 1000 }, (err, stdout) => {\n\t\t\tif (err) {\n\t\t\t\treturn reject('Problem occurred when getting wsl distros');\n\t\t\t}\n\t\t\tresolve(stdout);\n\t\t});\n\t});\n\tif (!distroOutput) {\n\t\treturn [];\n\t}\n\tconst regex = new RegExp(/[\\r?\\n]/);\n\tconst distroNames = distroOutput.split(regex).filter(t => t.trim().length > 0 && t !== '');\n\tfor (const distroName of distroNames) {\n\t\t// Skip empty lines\n\t\tif (distroName === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// docker-desktop and docker-desktop-data are treated as implementation details of\n\t\t// Docker Desktop for Windows and therefore not exposed\n\t\tif (distroName.startsWith('docker-desktop')) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Create the profile, adding the icon depending on the distro\n\t\tconst profileName = `${distroName} (WSL)`;\n\t\tconst profile: ITerminalProfile = {\n\t\t\tprofileName,\n\t\t\tpath: wslPath,\n\t\t\targs: [`-d`, `${distroName}`],\n\t\t\tisDefault: profileName === defaultProfileName,\n\t\t\ticon: getWslIcon(distroName),\n\t\t\tisAutoDetected: false\n\t\t};\n\t\t// Add the profile\n\t\tprofiles.push(profile);\n\t}\n\treturn profiles;\n}\n\nfunction getWslIcon(distroName: string): ThemeIcon {\n\tif (distroName.includes('Ubuntu')) {\n\t\treturn ThemeIcon.asThemeIcon(Codicon.terminalUbuntu);\n\t} else if (distroName.includes('Debian')) {\n\t\treturn ThemeIcon.asThemeIcon(Codicon.terminalDebian);\n\t} else {\n\t\treturn ThemeIcon.asThemeIcon(Codicon.terminalLinux);\n\t}\n}\n\nasync function detectAvailableUnixProfiles(\n\tfsProvider: IFsProvider,\n\tlogService?: ILogService,\n\tincludeDetectedProfiles?: boolean,\n\tconfigProfiles?: { [key: string]: IUnresolvedTerminalProfile },\n\tdefaultProfileName?: string,\n\ttestPaths?: string[],\n\tvariableResolver?: (text: string[]) => Promise<string[]>,\n\tshellEnv?: typeof process.env\n): Promise<ITerminalProfile[]> {\n\tconst detectedProfiles: Map<string, IUnresolvedTerminalProfile> = new Map();\n\n\t// Add non-quick launch profiles\n\tif (includeDetectedProfiles) {\n\t\tconst contents = (await fsProvider.readFile('/etc/shells')).toString();\n\t\tconst profiles = testPaths || contents.split('\\n').filter(e => e.trim().indexOf('#') !== 0 && e.trim().length > 0);\n\t\tconst counts: Map<string, number> = new Map();\n\t\tfor (const profile of profiles) {\n\t\t\tlet profileName = basename(profile);\n\t\t\tlet count = counts.get(profileName) || 0;\n\t\t\tcount++;\n\t\t\tif (count > 1) {\n\t\t\t\tprofileName = `${profileName} (${count})`;\n\t\t\t}\n\t\t\tcounts.set(profileName, count);\n\t\t\tdetectedProfiles.set(profileName, { path: profile, isAutoDetected: true });\n\t\t}\n\t}\n\n\tapplyConfigProfilesToMap(configProfiles, detectedProfiles);\n\n\treturn await transformToTerminalProfiles(detectedProfiles.entries(), defaultProfileName, fsProvider, shellEnv, logService, variableResolver);\n}\n\nfunction applyConfigProfilesToMap(configProfiles: { [key: string]: IUnresolvedTerminalProfile } | undefined, profilesMap: Map<string, IUnresolvedTerminalProfile>) {\n\tif (!configProfiles) {\n\t\treturn;\n\t}\n\tfor (const [profileName, value] of Object.entries(configProfiles)) {\n\t\tif (value === null || (!('path' in value) && !('source' in value))) {\n\t\t\tprofilesMap.delete(profileName);\n\t\t} else {\n\t\t\tvalue.icon = value.icon || profilesMap.get(profileName)?.icon;\n\t\t\tprofilesMap.set(profileName, value);\n\t\t}\n\t}\n}\n\nasync function validateProfilePaths(profileName: string, defaultProfileName: string | undefined, potentialPaths: string[], fsProvider: IFsProvider, shellEnv: typeof process.env, args?: string[] | string, env?: ITerminalEnvironment, overrideName?: boolean, isAutoDetected?: boolean, logService?: ILogService): Promise<ITerminalProfile | undefined> {\n\tif (potentialPaths.length === 0) {\n\t\treturn Promise.resolve(undefined);\n\t}\n\tconst path = potentialPaths.shift()!;\n\tif (path === '') {\n\t\treturn validateProfilePaths(profileName, defaultProfileName, potentialPaths, fsProvider, shellEnv, args, env, overrideName, isAutoDetected);\n\t}\n\n\tconst profile: ITerminalProfile = { profileName, path, args, env, overrideName, isAutoDetected, isDefault: profileName === defaultProfileName };\n\n\t// For non-absolute paths, check if it's available on $PATH\n\tif (basename(path) === path) {\n\t\t// The executable isn't an absolute path, try find it on the PATH\n\t\tconst envPaths: string[] | undefined = shellEnv.PATH ? shellEnv.PATH.split(delimiter) : undefined;\n\t\tconst executable = await findExecutable(path, undefined, envPaths, undefined, fsProvider.existsFile);\n\t\tif (!executable) {\n\t\t\treturn validateProfilePaths(profileName, defaultProfileName, potentialPaths, fsProvider, shellEnv, args);\n\t\t}\n\t\tprofile.path = executable;\n\t\tprofile.isFromPath = true;\n\t\treturn profile;\n\t}\n\n\tconst result = await fsProvider.existsFile(normalize(path));\n\tif (result) {\n\t\treturn profile;\n\t}\n\n\treturn validateProfilePaths(profileName, defaultProfileName, potentialPaths, fsProvider, shellEnv, args, env, overrideName, isAutoDetected);\n}\n\nexport interface IFsProvider {\n\texistsFile(path: string): Promise<boolean>;\n\treadFile(path: string): Promise<Buffer>;\n}\n\nexport interface IProfileVariableResolver {\n\tresolve(text: string[]): Promise<string[]>;\n}\n\ninterface IPotentialTerminalProfile {\n\tprofileName: string;\n\tpaths: string[];\n\targs?: string[];\n\ticon?: ThemeIcon | URI | { light: URI; dark: URI };\n}\n\nexport type IUnresolvedTerminalProfile = ITerminalExecutable | ITerminalProfileSource | null;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { FileAccess } from 'vs/base/common/network';\nimport { IProcessEnvironment, isWindows, OperatingSystem } from 'vs/base/common/platform';\nimport { ProxyChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Client, IIPCOptions } from 'vs/base/parts/ipc/node/ipc.cp';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IEnvironmentService, INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { parsePtyHostPort } from 'vs/platform/environment/common/environmentService';\nimport { getResolvedShellEnv } from 'vs/platform/shell/node/shellEnv';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { LogLevelChannelClient } from 'vs/platform/log/common/logIpc';\nimport { RequestStore } from 'vs/platform/terminal/common/requestStore';\nimport { HeartbeatConstants, IHeartbeatService, IProcessDataEvent, IPtyService, IReconnectConstants, IRequestResolveVariablesEvent, IShellLaunchConfig, ITerminalLaunchError, ITerminalProfile, ITerminalsLayoutInfo, TerminalIcon, TerminalIpcChannels, IProcessProperty, TitleEventSource, ProcessPropertyType, IProcessPropertyMap, TerminalSettingId, ISerializedTerminalState, ITerminalProcessOptions } from 'vs/platform/terminal/common/terminal';\nimport { registerTerminalPlatformConfiguration } from 'vs/platform/terminal/common/terminalPlatformConfiguration';\nimport { IGetTerminalLayoutInfoArgs, IProcessDetails, IPtyHostProcessReplayEvent, ISetTerminalLayoutInfoArgs } from 'vs/platform/terminal/common/terminalProcess';\nimport { detectAvailableProfiles } from 'vs/platform/terminal/node/terminalProfiles';\n\nenum Constants {\n\tMaxRestarts = 5\n}\n\n/**\n * Tracks the last terminal ID from the pty host so we can give it to the new pty host if it's\n * restarted and avoid ID conflicts.\n */\nlet lastPtyId = 0;\n\n/**\n * This service implements IPtyService by launching a pty host process, forwarding messages to and\n * from the pty host process and manages the connection.\n */\nexport class PtyHostService extends Disposable implements IPtyService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _client: Client;\n\t// ProxyChannel is not used here because events get lost when forwarding across multiple proxies\n\tprivate _proxy: IPtyService;\n\n\tprivate readonly _shellEnv: Promise<typeof process.env>;\n\tprivate readonly _resolveVariablesRequestStore: RequestStore<string[], { workspaceId: string; originalText: string[] }>;\n\tprivate _restartCount = 0;\n\tprivate _isResponsive = true;\n\tprivate _isDisposed = false;\n\tprivate _heartbeatFirstTimeout?: NodeJS.Timeout;\n\tprivate _heartbeatSecondTimeout?: NodeJS.Timeout;\n\n\tprivate readonly _onPtyHostExit = this._register(new Emitter<number>());\n\treadonly onPtyHostExit = this._onPtyHostExit.event;\n\tprivate readonly _onPtyHostStart = this._register(new Emitter<void>());\n\treadonly onPtyHostStart = this._onPtyHostStart.event;\n\tprivate readonly _onPtyHostUnresponsive = this._register(new Emitter<void>());\n\treadonly onPtyHostUnresponsive = this._onPtyHostUnresponsive.event;\n\tprivate readonly _onPtyHostResponsive = this._register(new Emitter<void>());\n\treadonly onPtyHostResponsive = this._onPtyHostResponsive.event;\n\tprivate readonly _onPtyHostRequestResolveVariables = this._register(new Emitter<IRequestResolveVariablesEvent>());\n\treadonly onPtyHostRequestResolveVariables = this._onPtyHostRequestResolveVariables.event;\n\n\tprivate readonly _onProcessData = this._register(new Emitter<{ id: number; event: IProcessDataEvent | string }>());\n\treadonly onProcessData = this._onProcessData.event;\n\tprivate readonly _onProcessReady = this._register(new Emitter<{ id: number; event: { pid: number; cwd: string } }>());\n\treadonly onProcessReady = this._onProcessReady.event;\n\tprivate readonly _onProcessReplay = this._register(new Emitter<{ id: number; event: IPtyHostProcessReplayEvent }>());\n\treadonly onProcessReplay = this._onProcessReplay.event;\n\tprivate readonly _onProcessOrphanQuestion = this._register(new Emitter<{ id: number }>());\n\treadonly onProcessOrphanQuestion = this._onProcessOrphanQuestion.event;\n\tprivate readonly _onDidRequestDetach = this._register(new Emitter<{ requestId: number; workspaceId: string; instanceId: number }>());\n\treadonly onDidRequestDetach = this._onDidRequestDetach.event;\n\tprivate readonly _onDidChangeProperty = this._register(new Emitter<{ id: number; property: IProcessProperty<any> }>());\n\treadonly onDidChangeProperty = this._onDidChangeProperty.event;\n\tprivate readonly _onProcessExit = this._register(new Emitter<{ id: number; event: number | undefined }>());\n\treadonly onProcessExit = this._onProcessExit.event;\n\n\tconstructor(\n\t\tprivate readonly _reconnectConstants: IReconnectConstants,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IEnvironmentService private readonly _environmentService: INativeEnvironmentService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t) {\n\t\tsuper();\n\n\t\t// Platform configuration is required on the process running the pty host (shared process or\n\t\t// remote server).\n\t\tregisterTerminalPlatformConfiguration();\n\n\t\tthis._shellEnv = this._resolveShellEnv();\n\n\t\tthis._register(toDisposable(() => this._disposePtyHost()));\n\n\t\tthis._resolveVariablesRequestStore = this._register(new RequestStore(undefined, this._logService));\n\t\tthis._resolveVariablesRequestStore.onCreateRequest(this._onPtyHostRequestResolveVariables.fire, this._onPtyHostRequestResolveVariables);\n\n\t\t[this._client, this._proxy] = this._startPtyHost();\n\n\t\tthis._register(this._configurationService.onDidChangeConfiguration(async e => {\n\t\t\tif (e.affectsConfiguration(TerminalSettingId.IgnoreProcessNames)) {\n\t\t\t\tawait this._refreshIgnoreProcessNames();\n\t\t\t}\n\t\t}));\n\t}\n\n\tinitialize(): void {\n\t\tthis._refreshIgnoreProcessNames();\n\t}\n\n\tprivate get _ignoreProcessNames(): string[] {\n\t\treturn this._configurationService.getValue<string[]>(TerminalSettingId.IgnoreProcessNames);\n\t}\n\n\tprivate async _refreshIgnoreProcessNames(): Promise<void> {\n\t\treturn this._proxy.refreshIgnoreProcessNames?.(this._ignoreProcessNames);\n\t}\n\n\tprivate async _resolveShellEnv(): Promise<typeof process.env> {\n\t\tif (isWindows) {\n\t\t\treturn process.env;\n\t\t}\n\n\t\ttry {\n\t\t\treturn await getResolvedShellEnv(this._logService, { _: [] }, process.env);\n\t\t} catch (error) {\n\t\t\tthis._logService.error('ptyHost was unable to resolve shell environment', error);\n\n\t\t\treturn {};\n\t\t}\n\t}\n\n\tprivate _startPtyHost(): [Client, IPtyService] {\n\t\tconst opts: IIPCOptions = {\n\t\t\tserverName: 'Pty Host',\n\t\t\targs: ['--type=ptyHost', '--logsPath', this._environmentService.logsPath],\n\t\t\tenv: {\n\t\t\t\tVSCODE_LAST_PTY_ID: lastPtyId,\n\t\t\t\tVSCODE_AMD_ENTRYPOINT: 'vs/platform/terminal/node/ptyHostMain',\n\t\t\t\tVSCODE_PIPE_LOGGING: 'true',\n\t\t\t\tVSCODE_VERBOSE_LOGGING: 'true', // transmit console logs from server to client,\n\t\t\t\tVSCODE_RECONNECT_GRACE_TIME: this._reconnectConstants.graceTime,\n\t\t\t\tVSCODE_RECONNECT_SHORT_GRACE_TIME: this._reconnectConstants.shortGraceTime,\n\t\t\t\tVSCODE_RECONNECT_SCROLLBACK: this._reconnectConstants.scrollback\n\t\t\t}\n\t\t};\n\n\t\tconst ptyHostDebug = parsePtyHostPort(this._environmentService.args, this._environmentService.isBuilt);\n\t\tif (ptyHostDebug) {\n\t\t\tif (ptyHostDebug.break && ptyHostDebug.port) {\n\t\t\t\topts.debugBrk = ptyHostDebug.port;\n\t\t\t} else if (!ptyHostDebug.break && ptyHostDebug.port) {\n\t\t\t\topts.debug = ptyHostDebug.port;\n\t\t\t}\n\t\t}\n\n\t\tconst client = new Client(FileAccess.asFileUri('bootstrap-fork', require).fsPath, opts);\n\t\tthis._onPtyHostStart.fire();\n\n\t\t// Setup heartbeat service and trigger a heartbeat immediately to reset the timeouts\n\t\tconst heartbeatService = ProxyChannel.toService<IHeartbeatService>(client.getChannel(TerminalIpcChannels.Heartbeat));\n\t\theartbeatService.onBeat(() => this._handleHeartbeat());\n\t\tthis._handleHeartbeat();\n\n\t\t// Handle exit\n\t\tthis._register(client.onDidProcessExit(e => {\n\t\t\tthis._onPtyHostExit.fire(e.code);\n\t\t\tif (!this._isDisposed) {\n\t\t\t\tif (this._restartCount <= Constants.MaxRestarts) {\n\t\t\t\t\tthis._logService.error(`ptyHost terminated unexpectedly with code ${e.code}`);\n\t\t\t\t\tthis._restartCount++;\n\t\t\t\t\tthis.restartPtyHost();\n\t\t\t\t} else {\n\t\t\t\t\tthis._logService.error(`ptyHost terminated unexpectedly with code ${e.code}, giving up`);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\t// Setup logging\n\t\tconst logChannel = client.getChannel(TerminalIpcChannels.Log);\n\t\tLogLevelChannelClient.setLevel(logChannel, this._logService.getLevel());\n\t\tthis._register(this._logService.onDidChangeLogLevel(() => {\n\t\t\tLogLevelChannelClient.setLevel(logChannel, this._logService.getLevel());\n\t\t}));\n\n\t\t// Create proxy and forward events\n\t\tconst proxy = ProxyChannel.toService<IPtyService>(client.getChannel(TerminalIpcChannels.PtyHost));\n\t\tthis._register(proxy.onProcessData(e => this._onProcessData.fire(e)));\n\t\tthis._register(proxy.onProcessReady(e => this._onProcessReady.fire(e)));\n\t\tthis._register(proxy.onProcessExit(e => this._onProcessExit.fire(e)));\n\t\tthis._register(proxy.onDidChangeProperty(e => this._onDidChangeProperty.fire(e)));\n\t\tthis._register(proxy.onProcessReplay(e => this._onProcessReplay.fire(e)));\n\t\tthis._register(proxy.onProcessOrphanQuestion(e => this._onProcessOrphanQuestion.fire(e)));\n\t\tthis._register(proxy.onDidRequestDetach(e => this._onDidRequestDetach.fire(e)));\n\n\t\treturn [client, proxy];\n\t}\n\n\toverride dispose() {\n\t\tthis._isDisposed = true;\n\t\tsuper.dispose();\n\t}\n\n\tasync createProcess(\n\t\tshellLaunchConfig: IShellLaunchConfig,\n\t\tcwd: string,\n\t\tcols: number,\n\t\trows: number,\n\t\tunicodeVersion: '6' | '11',\n\t\tenv: IProcessEnvironment,\n\t\texecutableEnv: IProcessEnvironment,\n\t\toptions: ITerminalProcessOptions,\n\t\tshouldPersist: boolean,\n\t\tworkspaceId: string,\n\t\tworkspaceName: string\n\t): Promise<number> {\n\t\tconst timeout = setTimeout(() => this._handleUnresponsiveCreateProcess(), HeartbeatConstants.CreateProcessTimeout);\n\t\tconst id = await this._proxy.createProcess(shellLaunchConfig, cwd, cols, rows, unicodeVersion, env, executableEnv, options, shouldPersist, workspaceId, workspaceName);\n\t\tclearTimeout(timeout);\n\t\tlastPtyId = Math.max(lastPtyId, id);\n\t\treturn id;\n\t}\n\tupdateTitle(id: number, title: string, titleSource: TitleEventSource): Promise<void> {\n\t\treturn this._proxy.updateTitle(id, title, titleSource);\n\t}\n\tupdateIcon(id: number, icon: TerminalIcon, color?: string): Promise<void> {\n\t\treturn this._proxy.updateIcon(id, icon, color);\n\t}\n\tattachToProcess(id: number): Promise<void> {\n\t\treturn this._proxy.attachToProcess(id);\n\t}\n\tdetachFromProcess(id: number): Promise<void> {\n\t\treturn this._proxy.detachFromProcess(id);\n\t}\n\tlistProcesses(): Promise<IProcessDetails[]> {\n\t\treturn this._proxy.listProcesses();\n\t}\n\treduceConnectionGraceTime(): Promise<void> {\n\t\treturn this._proxy.reduceConnectionGraceTime();\n\t}\n\tstart(id: number): Promise<ITerminalLaunchError | undefined> {\n\t\treturn this._proxy.start(id);\n\t}\n\tshutdown(id: number, immediate: boolean): Promise<void> {\n\t\treturn this._proxy.shutdown(id, immediate);\n\t}\n\tinput(id: number, data: string): Promise<void> {\n\t\treturn this._proxy.input(id, data);\n\t}\n\tprocessBinary(id: number, data: string): Promise<void> {\n\t\treturn this._proxy.processBinary(id, data);\n\t}\n\tresize(id: number, cols: number, rows: number): Promise<void> {\n\t\treturn this._proxy.resize(id, cols, rows);\n\t}\n\tacknowledgeDataEvent(id: number, charCount: number): Promise<void> {\n\t\treturn this._proxy.acknowledgeDataEvent(id, charCount);\n\t}\n\tsetUnicodeVersion(id: number, version: '6' | '11'): Promise<void> {\n\t\treturn this._proxy.setUnicodeVersion(id, version);\n\t}\n\tgetInitialCwd(id: number): Promise<string> {\n\t\treturn this._proxy.getInitialCwd(id);\n\t}\n\tgetCwd(id: number): Promise<string> {\n\t\treturn this._proxy.getCwd(id);\n\t}\n\tgetLatency(id: number): Promise<number> {\n\t\treturn this._proxy.getLatency(id);\n\t}\n\torphanQuestionReply(id: number): Promise<void> {\n\t\treturn this._proxy.orphanQuestionReply(id);\n\t}\n\n\tinstallAutoReply(match: string, reply: string): Promise<void> {\n\t\treturn this._proxy.installAutoReply(match, reply);\n\t}\n\tuninstallAllAutoReplies(): Promise<void> {\n\t\treturn this._proxy.uninstallAllAutoReplies();\n\t}\n\tuninstallAutoReply(match: string): Promise<void> {\n\t\treturn this._proxy.uninstallAutoReply(match);\n\t}\n\n\tgetDefaultSystemShell(osOverride?: OperatingSystem): Promise<string> {\n\t\treturn this._proxy.getDefaultSystemShell(osOverride);\n\t}\n\tasync getProfiles(workspaceId: string, profiles: unknown, defaultProfile: unknown, includeDetectedProfiles: boolean = false): Promise<ITerminalProfile[]> {\n\t\tconst shellEnv = await this._shellEnv;\n\t\treturn detectAvailableProfiles(profiles, defaultProfile, includeDetectedProfiles, this._configurationService, shellEnv, undefined, this._logService, this._resolveVariables.bind(this, workspaceId));\n\t}\n\tgetEnvironment(): Promise<IProcessEnvironment> {\n\t\treturn this._proxy.getEnvironment();\n\t}\n\tgetWslPath(original: string): Promise<string> {\n\t\treturn this._proxy.getWslPath(original);\n\t}\n\n\tgetRevivedPtyNewId(id: number): Promise<number | undefined> {\n\t\treturn this._proxy.getRevivedPtyNewId(id);\n\t}\n\n\tsetTerminalLayoutInfo(args: ISetTerminalLayoutInfoArgs): Promise<void> {\n\t\treturn this._proxy.setTerminalLayoutInfo(args);\n\t}\n\tasync getTerminalLayoutInfo(args: IGetTerminalLayoutInfoArgs): Promise<ITerminalsLayoutInfo | undefined> {\n\t\treturn await this._proxy.getTerminalLayoutInfo(args);\n\t}\n\n\tasync requestDetachInstance(workspaceId: string, instanceId: number): Promise<IProcessDetails | undefined> {\n\t\treturn this._proxy.requestDetachInstance(workspaceId, instanceId);\n\t}\n\n\tasync acceptDetachInstanceReply(requestId: number, persistentProcessId: number): Promise<void> {\n\t\treturn this._proxy.acceptDetachInstanceReply(requestId, persistentProcessId);\n\t}\n\n\tasync serializeTerminalState(ids: number[]): Promise<string> {\n\t\treturn this._proxy.serializeTerminalState(ids);\n\t}\n\n\tasync reviveTerminalProcesses(state: ISerializedTerminalState[], dateTimeFormatLocate: string) {\n\t\treturn this._proxy.reviveTerminalProcesses(state, dateTimeFormatLocate);\n\t}\n\n\tasync refreshProperty<T extends ProcessPropertyType>(id: number, property: T): Promise<IProcessPropertyMap[T]> {\n\t\treturn this._proxy.refreshProperty(id, property);\n\n\t}\n\tasync updateProperty<T extends ProcessPropertyType>(id: number, property: T, value: IProcessPropertyMap[T]): Promise<void> {\n\t\treturn this._proxy.updateProperty(id, property, value);\n\t}\n\n\tasync restartPtyHost(): Promise<void> {\n\t\tthis._isResponsive = true;\n\t\tthis._disposePtyHost();\n\t\t[this._client, this._proxy] = this._startPtyHost();\n\t}\n\n\tprivate _disposePtyHost(): void {\n\t\tthis._proxy.shutdownAll?.();\n\t\tthis._client.dispose();\n\t}\n\n\tprivate _handleHeartbeat() {\n\t\tthis._clearHeartbeatTimeouts();\n\t\tthis._heartbeatFirstTimeout = setTimeout(() => this._handleHeartbeatFirstTimeout(), HeartbeatConstants.BeatInterval * HeartbeatConstants.FirstWaitMultiplier);\n\t\tif (!this._isResponsive) {\n\t\t\tthis._isResponsive = true;\n\t\t\tthis._onPtyHostResponsive.fire();\n\t\t}\n\t}\n\n\tprivate _handleHeartbeatFirstTimeout() {\n\t\tthis._logService.warn(`No ptyHost heartbeat after ${HeartbeatConstants.BeatInterval * HeartbeatConstants.FirstWaitMultiplier / 1000} seconds`);\n\t\tthis._heartbeatFirstTimeout = undefined;\n\t\tthis._heartbeatSecondTimeout = setTimeout(() => this._handleHeartbeatSecondTimeout(), HeartbeatConstants.BeatInterval * HeartbeatConstants.SecondWaitMultiplier);\n\t}\n\n\tprivate _handleHeartbeatSecondTimeout() {\n\t\tthis._logService.error(`No ptyHost heartbeat after ${(HeartbeatConstants.BeatInterval * HeartbeatConstants.FirstWaitMultiplier + HeartbeatConstants.BeatInterval * HeartbeatConstants.FirstWaitMultiplier) / 1000} seconds`);\n\t\tthis._heartbeatSecondTimeout = undefined;\n\t\tif (this._isResponsive) {\n\t\t\tthis._isResponsive = false;\n\t\t\tthis._onPtyHostUnresponsive.fire();\n\t\t}\n\t}\n\n\tprivate _handleUnresponsiveCreateProcess() {\n\t\tthis._clearHeartbeatTimeouts();\n\t\tthis._logService.error(`No ptyHost response to createProcess after ${HeartbeatConstants.CreateProcessTimeout / 1000} seconds`);\n\t\tif (this._isResponsive) {\n\t\t\tthis._isResponsive = false;\n\t\t\tthis._onPtyHostUnresponsive.fire();\n\t\t}\n\t}\n\n\tprivate _clearHeartbeatTimeouts() {\n\t\tif (this._heartbeatFirstTimeout) {\n\t\t\tclearTimeout(this._heartbeatFirstTimeout);\n\t\t\tthis._heartbeatFirstTimeout = undefined;\n\t\t}\n\t\tif (this._heartbeatSecondTimeout) {\n\t\t\tclearTimeout(this._heartbeatSecondTimeout);\n\t\t\tthis._heartbeatSecondTimeout = undefined;\n\t\t}\n\t}\n\n\tprivate _resolveVariables(workspaceId: string, text: string[]): Promise<string[]> {\n\t\treturn this._resolveVariablesRequestStore.createRequest({ workspaceId, originalText: text });\n\t}\n\tasync acceptPtyHostResolvedVariables(requestId: number, resolved: string[]) {\n\t\tthis._resolveVariablesRequestStore.acceptReply(requestId, resolved);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IExtUri } from 'vs/base/common/resources';\n\n\nexport const IUriIdentityService = createDecorator<IUriIdentityService>('IUriIdentityService');\n\nexport interface IUriIdentityService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Uri extensions that are aware of casing.\n\t */\n\treadonly extUri: IExtUri;\n\n\t/**\n\t * Returns a canonical uri for the given resource. Different uris can point to the same\n\t * resource. That's because of casing or missing normalization, e.g the following uris\n\t * are different but refer to the same document (because windows paths are not case-sensitive)\n\t *\n\t * ```txt\n\t * file:///c:/foo/bar.txt\n\t * file:///c:/FOO/BAR.txt\n\t * ```\n\t *\n\t * This function should be invoked when feeding uris into the system that represent the truth,\n\t * e.g document uris or marker-to-document associations etc. This function should NOT be called\n\t * to pretty print a label nor to sanitize a uri.\n\t *\n\t * Samples:\n\t *\n\t * | in | out | |\n\t * |---|---|---|\n\t * | `file:///foo/bar/../bar` | `file:///foo/bar` | n/a |\n\t * | `file:///foo/bar/../bar#frag` | `file:///foo/bar#frag` | keep fragment |\n\t * | `file:///foo/BAR` | `file:///foo/bar` | assume ignore case |\n\t * | `file:///foo/bar/../BAR?q=2` | `file:///foo/BAR?q=2` | query makes it a different document |\n\t */\n\tasCanonicalUri(uri: URI): URI;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { DidUninstallExtensionEvent, IExtensionManagementService, ILocalExtension, InstallExtensionEvent, InstallExtensionResult } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { IExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { FileChangeType, IFileChange, IFileService } from 'vs/platform/files/common/files';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\n\nexport class ExtensionsWatcher extends Disposable {\n\n\tprivate readonly _onDidChangeExtensionsByAnotherSource = this._register(new Emitter<{ added: ILocalExtension[]; removed: IExtensionIdentifier[] }>());\n\treadonly onDidChangeExtensionsByAnotherSource = this._onDidChangeExtensionsByAnotherSource.event;\n\n\tprivate startTimestamp = 0;\n\tprivate installingExtensions: IExtensionIdentifier[] = [];\n\tprivate installedExtensions: IExtensionIdentifier[] | undefined;\n\n\tconstructor(\n\t\tprivate readonly extensionsManagementService: IExtensionManagementService,\n\t\t@IFileService fileService: IFileService,\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper();\n\t\tthis.extensionsManagementService.getInstalled().then(extensions => {\n\t\t\tthis.installedExtensions = extensions.map(e => e.identifier);\n\t\t\tthis.startTimestamp = Date.now();\n\t\t});\n\t\tthis._register(extensionsManagementService.onInstallExtension(e => this.onInstallExtension(e)));\n\t\tthis._register(extensionsManagementService.onDidInstallExtensions(e => this.onDidInstallExtensions(e)));\n\t\tthis._register(extensionsManagementService.onDidUninstallExtension(e => this.onDidUninstallExtension(e)));\n\n\t\tconst extensionsResource = URI.file(environmentService.extensionsPath);\n\t\tthis._register(fileService.watch(extensionsResource));\n\t\tthis._register(Event.filter(fileService.onDidFilesChange, e => e.rawChanges.some(change => this.doesChangeAffects(change, extensionsResource)))(() => this.onDidChange()));\n\t}\n\n\tprivate doesChangeAffects(change: IFileChange, extensionsResource: URI): boolean {\n\t\t// Only interested in added/deleted changes\n\t\tif (change.type !== FileChangeType.ADDED && change.type !== FileChangeType.DELETED) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Is not immediate child of extensions resource\n\t\tif (!this.uriIdentityService.extUri.isEqual(this.uriIdentityService.extUri.dirname(change.resource), extensionsResource)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// .obsolete file changed\n\t\tif (this.uriIdentityService.extUri.isEqual(change.resource, this.uriIdentityService.extUri.joinPath(extensionsResource, '.obsolete'))) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Ignore changes to files starting with `.`\n\t\tif (this.uriIdentityService.extUri.basename(change.resource).startsWith('.')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate onInstallExtension(e: InstallExtensionEvent): void {\n\t\tthis.addInstallingExtension(e.identifier);\n\t}\n\n\tprivate onDidInstallExtensions(results: readonly InstallExtensionResult[]): void {\n\t\tfor (const e of results) {\n\t\t\tthis.removeInstallingExtension(e.identifier);\n\t\t\tif (e.local) {\n\t\t\t\tthis.addInstalledExtension(e.identifier);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onDidUninstallExtension(e: DidUninstallExtensionEvent): void {\n\t\tif (!e.error) {\n\t\t\tthis.removeInstalledExtension(e.identifier);\n\t\t}\n\t}\n\n\tprivate addInstallingExtension(extension: IExtensionIdentifier) {\n\t\tthis.removeInstallingExtension(extension);\n\t\tthis.installingExtensions.push(extension);\n\t}\n\n\tprivate removeInstallingExtension(identifier: IExtensionIdentifier) {\n\t\tthis.installingExtensions = this.installingExtensions.filter(e => !areSameExtensions(e, identifier));\n\t}\n\n\tprivate addInstalledExtension(extension: IExtensionIdentifier): void {\n\t\tif (this.installedExtensions) {\n\t\t\tthis.removeInstalledExtension(extension);\n\t\t\tthis.installedExtensions.push(extension);\n\t\t}\n\t}\n\n\tprivate removeInstalledExtension(identifier: IExtensionIdentifier): void {\n\t\tif (this.installedExtensions) {\n\t\t\tthis.installedExtensions = this.installedExtensions.filter(e => !areSameExtensions(e, identifier));\n\t\t}\n\t}\n\n\tprivate async onDidChange(): Promise<void> {\n\t\tif (this.installedExtensions) {\n\t\t\tconst extensions = await this.extensionsManagementService.getInstalled();\n\t\t\tconst added = extensions.filter(e => {\n\t\t\t\tif ([...this.installingExtensions, ...this.installedExtensions!].some(identifier => areSameExtensions(identifier, e.identifier))) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (e.installedTimestamp && e.installedTimestamp > this.startTimestamp) {\n\t\t\t\t\tthis.logService.info('Detected extension installed from another source', e.identifier.id);\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\tthis.logService.info('Ignored extension installed by another source because of invalid timestamp', e.identifier.id);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t\tconst removed = this.installedExtensions.filter(identifier => {\n\t\t\t\t// Extension being installed\n\t\t\t\tif (this.installingExtensions.some(installingExtension => areSameExtensions(installingExtension, identifier))) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (extensions.every(e => !areSameExtensions(e.identifier, identifier))) {\n\t\t\t\t\tthis.logService.info('Detected extension removed from another source', identifier.id);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\t\t\tthis.installedExtensions = extensions.map(e => e.identifier);\n\t\t\tif (added.length || removed.length) {\n\t\t\t\tthis._onDidChangeExtensionsByAnotherSource.fire({ added, removed });\n\t\t\t}\n\t\t}\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { URI } from 'vs/base/common/uri';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IFileService, FileSystemProviderCapabilities, IFileSystemProviderCapabilitiesChangeEvent, IFileSystemProviderRegistrationEvent } from 'vs/platform/files/common/files';\nimport { ExtUri, IExtUri, normalizePath } from 'vs/base/common/resources';\nimport { SkipList } from 'vs/base/common/skipList';\nimport { Event } from 'vs/base/common/event';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\n\nclass Entry {\n\tstatic _clock = 0;\n\ttime: number = Entry._clock++;\n\tconstructor(readonly uri: URI) { }\n\ttouch() {\n\t\tthis.time = Entry._clock++;\n\t\treturn this;\n\t}\n}\n\nexport class UriIdentityService implements IUriIdentityService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\treadonly extUri: IExtUri;\n\n\tprivate readonly _dispooables = new DisposableStore();\n\tprivate readonly _canonicalUris: SkipList<URI, Entry>;\n\tprivate readonly _limit = 2 ** 16;\n\n\tconstructor(@IFileService private readonly _fileService: IFileService) {\n\n\t\tconst schemeIgnoresPathCasingCache = new Map<string, boolean>();\n\n\t\t// assume path casing matters unless the file system provider spec'ed the opposite.\n\t\t// for all other cases path casing matters, e.g for\n\t\t// * virtual documents\n\t\t// * in-memory uris\n\t\t// * all kind of \"private\" schemes\n\t\tconst ignorePathCasing = (uri: URI): boolean => {\n\t\t\tlet ignorePathCasing = schemeIgnoresPathCasingCache.get(uri.scheme);\n\t\t\tif (ignorePathCasing === undefined) {\n\t\t\t\t// retrieve once and then case per scheme until a change happens\n\t\t\t\tignorePathCasing = _fileService.hasProvider(uri) && !this._fileService.hasCapability(uri, FileSystemProviderCapabilities.PathCaseSensitive);\n\t\t\t\tschemeIgnoresPathCasingCache.set(uri.scheme, ignorePathCasing);\n\t\t\t}\n\t\t\treturn ignorePathCasing;\n\t\t};\n\t\tthis._dispooables.add(Event.any<IFileSystemProviderCapabilitiesChangeEvent | IFileSystemProviderRegistrationEvent>(\n\t\t\t_fileService.onDidChangeFileSystemProviderRegistrations,\n\t\t\t_fileService.onDidChangeFileSystemProviderCapabilities\n\t\t)(e => {\n\t\t\t// remove from cache\n\t\t\tschemeIgnoresPathCasingCache.delete(e.scheme);\n\t\t}));\n\n\t\tthis.extUri = new ExtUri(ignorePathCasing);\n\t\tthis._canonicalUris = new SkipList((a, b) => this.extUri.compare(a, b, true), this._limit);\n\t}\n\n\tdispose(): void {\n\t\tthis._dispooables.dispose();\n\t\tthis._canonicalUris.clear();\n\t}\n\n\tasCanonicalUri(uri: URI): URI {\n\n\t\t// (1) normalize URI\n\t\tif (this._fileService.hasProvider(uri)) {\n\t\t\turi = normalizePath(uri);\n\t\t}\n\n\t\t// (2) find the uri in its canonical form or use this uri to define it\n\t\tconst item = this._canonicalUris.get(uri);\n\t\tif (item) {\n\t\t\treturn item.touch().uri.with({ fragment: uri.fragment });\n\t\t}\n\n\t\t// this uri is first and defines the canonical form\n\t\tthis._canonicalUris.set(uri, new Entry(uri));\n\t\tthis._checkTrim();\n\n\t\treturn uri;\n\t}\n\n\tprivate _checkTrim(): void {\n\t\tif (this._canonicalUris.size < this._limit) {\n\t\t\treturn;\n\t\t}\n\n\t\t// get all entries, sort by touch (MRU) and re-initalize\n\t\t// the uri cache and the entry clock. this is an expensive\n\t\t// operation and should happen rarely\n\t\tconst entries = [...this._canonicalUris.entries()].sort((a, b) => {\n\t\t\tif (a[1].touch < b[1].touch) {\n\t\t\t\treturn 1;\n\t\t\t} else if (a[1].touch > b[1].touch) {\n\t\t\t\treturn -1;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t});\n\n\t\tEntry._clock = 0;\n\t\tthis._canonicalUris.clear();\n\t\tconst newSize = this._limit * 0.5;\n\t\tfor (let i = 0; i < newSize; i++) {\n\t\t\tthis._canonicalUris.set(entries[i][0], entries[i][1].touch());\n\t\t}\n\t}\n}\n\nregisterSingleton(IUriIdentityService, UriIdentityService, true);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { Event } from 'vs/base/common/event';\nimport { extname } from 'vs/base/common/path';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { extname as resourceExtname, basenameOrAuthority, joinPath, extUriBiasedIgnorePathCase } from 'vs/base/common/resources';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { Schemas } from 'vs/base/common/network';\n\nexport const IWorkspaceContextService = createDecorator<IWorkspaceContextService>('contextService');\n\nexport interface IWorkspaceContextService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * An event which fires on workbench state changes.\n\t */\n\treadonly onDidChangeWorkbenchState: Event<WorkbenchState>;\n\n\t/**\n\t * An event which fires on workspace name changes.\n\t */\n\treadonly onDidChangeWorkspaceName: Event<void>;\n\n\t/**\n\t * An event which fires before workspace folders change.\n\t */\n\treadonly onWillChangeWorkspaceFolders: Event<IWorkspaceFoldersWillChangeEvent>;\n\n\t/**\n\t * An event which fires on workspace folders change.\n\t */\n\treadonly onDidChangeWorkspaceFolders: Event<IWorkspaceFoldersChangeEvent>;\n\n\t/**\n\t * Provides access to the complete workspace object.\n\t */\n\tgetCompleteWorkspace(): Promise<IWorkspace>;\n\n\t/**\n\t * Provides access to the workspace object the window is running with.\n\t * Use `getCompleteWorkspace` to get complete workspace object.\n\t */\n\tgetWorkspace(): IWorkspace;\n\n\t/**\n\t * Return the state of the workbench.\n\t *\n\t * WorkbenchState.EMPTY - if the workbench was opened with empty window or file\n\t * WorkbenchState.FOLDER - if the workbench was opened with a folder\n\t * WorkbenchState.WORKSPACE - if the workbench was opened with a workspace\n\t */\n\tgetWorkbenchState(): WorkbenchState;\n\n\t/**\n\t * Returns the folder for the given resource from the workspace.\n\t * Can be null if there is no workspace or the resource is not inside the workspace.\n\t */\n\tgetWorkspaceFolder(resource: URI): IWorkspaceFolder | null;\n\n\t/**\n\t * Return `true` if the current workspace has the given identifier or root URI otherwise `false`.\n\t */\n\tisCurrentWorkspace(workspaceIdOrFolder: IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | URI): boolean;\n\n\t/**\n\t * Returns if the provided resource is inside the workspace or not.\n\t */\n\tisInsideWorkspace(resource: URI): boolean;\n}\n\nexport interface IResolvedWorkspace extends IWorkspaceIdentifier, IBaseWorkspace {\n\treadonly folders: IWorkspaceFolder[];\n}\n\nexport interface IBaseWorkspace {\n\n\t/**\n\t * If present, marks the window that opens the workspace\n\t * as a remote window with the given authority.\n\t */\n\treadonly remoteAuthority?: string;\n\n\t/**\n\t * Transient workspaces are meant to go away after being used\n\t * once, e.g. a window reload of a transient workspace will\n\t * open an empty window.\n\t *\n\t * See: https://github.com/microsoft/vscode/issues/119695\n\t */\n\treadonly transient?: boolean;\n}\n\nexport interface IBaseWorkspaceIdentifier {\n\n\t/**\n\t * Every workspace (multi-root, single folder or empty)\n\t * has a unique identifier. It is not possible to open\n\t * a workspace with the same `id` in multiple windows\n\t */\n\treadonly id: string;\n}\n\n/**\n * A single folder workspace identifier is a path to a folder + id.\n */\nexport interface ISingleFolderWorkspaceIdentifier extends IBaseWorkspaceIdentifier {\n\n\t/**\n\t * Folder path as `URI`.\n\t */\n\treadonly uri: URI;\n}\n\n/**\n * A multi-root workspace identifier is a path to a workspace file + id.\n */\nexport interface IWorkspaceIdentifier extends IBaseWorkspaceIdentifier {\n\n\t/**\n\t * Workspace config file path as `URI`.\n\t */\n\tconfigPath: URI;\n}\n\nexport interface IEmptyWorkspaceIdentifier extends IBaseWorkspaceIdentifier { }\n\nexport type IAnyWorkspaceIdentifier = IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | IEmptyWorkspaceIdentifier;\n\nexport function isSingleFolderWorkspaceIdentifier(obj: unknown): obj is ISingleFolderWorkspaceIdentifier {\n\tconst singleFolderIdentifier = obj as ISingleFolderWorkspaceIdentifier | undefined;\n\n\treturn typeof singleFolderIdentifier?.id === 'string' && URI.isUri(singleFolderIdentifier.uri);\n}\n\nexport function toWorkspaceIdentifier(workspace: IWorkspace): IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | undefined {\n\n\t// Multi root\n\tif (workspace.configuration) {\n\t\treturn {\n\t\t\tid: workspace.id,\n\t\t\tconfigPath: workspace.configuration\n\t\t};\n\t}\n\n\t// Single folder\n\tif (workspace.folders.length === 1) {\n\t\treturn {\n\t\t\tid: workspace.id,\n\t\t\turi: workspace.folders[0].uri\n\t\t};\n\t}\n\n\t// Empty workspace\n\treturn undefined;\n}\n\nexport function isWorkspaceIdentifier(obj: unknown): obj is IWorkspaceIdentifier {\n\tconst workspaceIdentifier = obj as IWorkspaceIdentifier | undefined;\n\n\treturn typeof workspaceIdentifier?.id === 'string' && URI.isUri(workspaceIdentifier.configPath);\n}\n\nexport interface ISerializedSingleFolderWorkspaceIdentifier extends IBaseWorkspaceIdentifier {\n\treadonly uri: UriComponents;\n}\n\nexport interface ISerializedWorkspaceIdentifier extends IBaseWorkspaceIdentifier {\n\treadonly configPath: UriComponents;\n}\n\nexport function reviveIdentifier(identifier: undefined): undefined;\nexport function reviveIdentifier(identifier: ISerializedWorkspaceIdentifier): IWorkspaceIdentifier;\nexport function reviveIdentifier(identifier: ISerializedSingleFolderWorkspaceIdentifier): ISingleFolderWorkspaceIdentifier;\nexport function reviveIdentifier(identifier: IEmptyWorkspaceIdentifier): IEmptyWorkspaceIdentifier;\nexport function reviveIdentifier(identifier: ISerializedWorkspaceIdentifier | ISerializedSingleFolderWorkspaceIdentifier | IEmptyWorkspaceIdentifier | undefined): IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | IEmptyWorkspaceIdentifier | undefined;\nexport function reviveIdentifier(identifier: ISerializedWorkspaceIdentifier | ISerializedSingleFolderWorkspaceIdentifier | IEmptyWorkspaceIdentifier | undefined): IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | IEmptyWorkspaceIdentifier | undefined {\n\n\t// Single Folder\n\tconst singleFolderIdentifierCandidate = identifier as ISerializedSingleFolderWorkspaceIdentifier | undefined;\n\tif (singleFolderIdentifierCandidate?.uri) {\n\t\treturn { id: singleFolderIdentifierCandidate.id, uri: URI.revive(singleFolderIdentifierCandidate.uri) };\n\t}\n\n\t// Multi folder\n\tconst workspaceIdentifierCandidate = identifier as ISerializedWorkspaceIdentifier | undefined;\n\tif (workspaceIdentifierCandidate?.configPath) {\n\t\treturn { id: workspaceIdentifierCandidate.id, configPath: URI.revive(workspaceIdentifierCandidate.configPath) };\n\t}\n\n\t// Empty\n\tif (identifier?.id) {\n\t\treturn { id: identifier.id };\n\t}\n\n\treturn undefined;\n}\n\nexport const enum WorkbenchState {\n\tEMPTY = 1,\n\tFOLDER,\n\tWORKSPACE\n}\n\nexport interface IWorkspaceFoldersWillChangeEvent {\n\n\treadonly changes: IWorkspaceFoldersChangeEvent;\n\treadonly fromCache: boolean;\n\n\tjoin(promise: Promise<void>): void;\n}\n\nexport interface IWorkspaceFoldersChangeEvent {\n\tadded: IWorkspaceFolder[];\n\tremoved: IWorkspaceFolder[];\n\tchanged: IWorkspaceFolder[];\n}\n\nexport interface IWorkspace {\n\n\t/**\n\t * the unique identifier of the workspace.\n\t */\n\treadonly id: string;\n\n\t/**\n\t * Folders in the workspace.\n\t */\n\treadonly folders: IWorkspaceFolder[];\n\n\t/**\n\t * Transient workspaces are meant to go away after being used\n\t * once, e.g. a window reload of a transient workspace will\n\t * open an empty window.\n\t */\n\treadonly transient?: boolean;\n\n\t/**\n\t * the location of the workspace configuration\n\t */\n\treadonly configuration?: URI | null;\n}\n\nexport function isWorkspace(thing: unknown): thing is IWorkspace {\n\tconst candidate = thing as IWorkspace | undefined;\n\n\treturn !!(candidate && typeof candidate === 'object'\n\t\t&& typeof candidate.id === 'string'\n\t\t&& Array.isArray(candidate.folders));\n}\n\nexport interface IWorkspaceFolderData {\n\n\t/**\n\t * The associated URI for this workspace folder.\n\t */\n\treadonly uri: URI;\n\n\t/**\n\t * The name of this workspace folder. Defaults to\n\t * the basename of its [uri-path](#Uri.path)\n\t */\n\treadonly name: string;\n\n\t/**\n\t * The ordinal number of this workspace folder.\n\t */\n\treadonly index: number;\n}\n\nexport interface IWorkspaceFolder extends IWorkspaceFolderData {\n\n\t/**\n\t * Given workspace folder relative path, returns the resource with the absolute path.\n\t */\n\ttoResource: (relativePath: string) => URI;\n}\n\nexport function isWorkspaceFolder(thing: unknown): thing is IWorkspaceFolder {\n\tconst candidate = thing as IWorkspaceFolder;\n\n\treturn !!(candidate && typeof candidate === 'object'\n\t\t&& URI.isUri(candidate.uri)\n\t\t&& typeof candidate.name === 'string'\n\t\t&& typeof candidate.toResource === 'function');\n}\n\nexport class Workspace implements IWorkspace {\n\n\tprivate _foldersMap: TernarySearchTree<URI, WorkspaceFolder> = TernarySearchTree.forUris<WorkspaceFolder>(this._ignorePathCasing, () => true);\n\tprivate _folders!: WorkspaceFolder[];\n\n\tconstructor(\n\t\tprivate _id: string,\n\t\tfolders: WorkspaceFolder[],\n\t\tprivate _transient: boolean,\n\t\tprivate _configuration: URI | null,\n\t\tprivate _ignorePathCasing: (key: URI) => boolean,\n\t) {\n\t\tthis.folders = folders;\n\t}\n\n\tupdate(workspace: Workspace) {\n\t\tthis._id = workspace.id;\n\t\tthis._configuration = workspace.configuration;\n\t\tthis._transient = workspace.transient;\n\t\tthis._ignorePathCasing = workspace._ignorePathCasing;\n\t\tthis.folders = workspace.folders;\n\t}\n\n\tget folders(): WorkspaceFolder[] {\n\t\treturn this._folders;\n\t}\n\n\tset folders(folders: WorkspaceFolder[]) {\n\t\tthis._folders = folders;\n\t\tthis.updateFoldersMap();\n\t}\n\n\tget id(): string {\n\t\treturn this._id;\n\t}\n\n\tget transient(): boolean {\n\t\treturn this._transient;\n\t}\n\n\tget configuration(): URI | null {\n\t\treturn this._configuration;\n\t}\n\n\tset configuration(configuration: URI | null) {\n\t\tthis._configuration = configuration;\n\t}\n\n\tgetFolder(resource: URI): IWorkspaceFolder | null {\n\t\tif (!resource) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this._foldersMap.findSubstr(resource) || null;\n\t}\n\n\tprivate updateFoldersMap(): void {\n\t\tthis._foldersMap = TernarySearchTree.forUris<WorkspaceFolder>(this._ignorePathCasing, () => true);\n\t\tfor (const folder of this.folders) {\n\t\t\tthis._foldersMap.set(folder.uri, folder);\n\t\t}\n\t}\n\n\ttoJSON(): IWorkspace {\n\t\treturn { id: this.id, folders: this.folders, transient: this.transient, configuration: this.configuration };\n\t}\n}\n\nexport interface IRawFileWorkspaceFolder {\n\treadonly path: string;\n\tname?: string;\n}\n\nexport interface IRawUriWorkspaceFolder {\n\treadonly uri: string;\n\tname?: string;\n}\n\nexport class WorkspaceFolder implements IWorkspaceFolder {\n\n\treadonly uri: URI;\n\treadonly name: string;\n\treadonly index: number;\n\n\tconstructor(\n\t\tdata: IWorkspaceFolderData,\n\t\t/**\n\t\t * Provides access to the original metadata for this workspace\n\t\t * folder. This can be different from the metadata provided in\n\t\t * this class:\n\t\t * - raw paths can be relative\n\t\t * - raw paths are not normalized\n\t\t */\n\t\treadonly raw?: IRawFileWorkspaceFolder | IRawUriWorkspaceFolder\n\t) {\n\t\tthis.uri = data.uri;\n\t\tthis.index = data.index;\n\t\tthis.name = data.name;\n\t}\n\n\ttoResource(relativePath: string): URI {\n\t\treturn joinPath(this.uri, relativePath);\n\t}\n\n\ttoJSON(): IWorkspaceFolderData {\n\t\treturn { uri: this.uri, name: this.name, index: this.index };\n\t}\n}\n\nexport function toWorkspaceFolder(resource: URI): WorkspaceFolder {\n\treturn new WorkspaceFolder({ uri: resource, index: 0, name: basenameOrAuthority(resource) }, { uri: resource.toString() });\n}\n\nexport const WORKSPACE_EXTENSION = 'code-workspace';\nconst WORKSPACE_SUFFIX = `.${WORKSPACE_EXTENSION}`;\nexport const WORKSPACE_FILTER = [{ name: localize('codeWorkspace', \"Code Workspace\"), extensions: [WORKSPACE_EXTENSION] }];\nexport const UNTITLED_WORKSPACE_NAME = 'workspace.json';\n\nexport function isUntitledWorkspace(path: URI, environmentService: IEnvironmentService): boolean {\n\treturn extUriBiasedIgnorePathCase.isEqualOrParent(path, environmentService.untitledWorkspacesHome);\n}\n\nexport function isTemporaryWorkspace(workspace: IWorkspace): boolean;\nexport function isTemporaryWorkspace(path: URI): boolean;\nexport function isTemporaryWorkspace(arg1: IWorkspace | URI): boolean {\n\tlet path: URI | null | undefined;\n\tif (URI.isUri(arg1)) {\n\t\tpath = arg1;\n\t} else {\n\t\tpath = arg1.configuration;\n\t}\n\n\treturn path?.scheme === Schemas.tmp;\n}\n\nexport function isSavedWorkspace(path: URI, environmentService: IEnvironmentService): boolean {\n\treturn !isUntitledWorkspace(path, environmentService) && !isTemporaryWorkspace(path);\n}\n\nexport function hasWorkspaceFileExtension(path: string | URI) {\n\tconst ext = (typeof path === 'string') ? extname(path) : resourceExtname(path);\n\n\treturn ext === WORKSPACE_SUFFIX;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { hash } from 'vs/base/common/hash';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { joinPath } from 'vs/base/common/resources';\nimport { isUndefined, UriDto } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ISingleFolderWorkspaceIdentifier, isSingleFolderWorkspaceIdentifier, isWorkspaceIdentifier, IWorkspaceIdentifier } from 'vs/platform/workspace/common/workspace';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { Promises } from 'vs/base/common/async';\nimport { generateUuid } from 'vs/base/common/uuid';\n\n/**\n * Flags to indicate whether to use the default profile or not.\n */\nexport type UseDefaultProfileFlags = {\n\tsettings?: boolean;\n\tkeybindings?: boolean;\n\ttasks?: boolean;\n\tsnippets?: boolean;\n\textensions?: boolean;\n\tuiState?: boolean;\n};\n\nexport interface IUserDataProfile {\n\treadonly id: string;\n\treadonly isDefault: boolean;\n\treadonly name: string;\n\treadonly location: URI;\n\treadonly globalStorageHome: URI;\n\treadonly settingsResource: URI;\n\treadonly keybindingsResource: URI;\n\treadonly tasksResource: URI;\n\treadonly snippetsHome: URI;\n\treadonly extensionsResource: URI | undefined;\n\treadonly useDefaultFlags?: UseDefaultProfileFlags;\n}\n\nexport function isUserDataProfile(thing: unknown): thing is IUserDataProfile {\n\tconst candidate = thing as IUserDataProfile | undefined;\n\n\treturn !!(candidate && typeof candidate === 'object'\n\t\t&& typeof candidate.id === 'string'\n\t\t&& typeof candidate.isDefault === 'boolean'\n\t\t&& typeof candidate.name === 'string'\n\t\t&& URI.isUri(candidate.location)\n\t\t&& URI.isUri(candidate.globalStorageHome)\n\t\t&& URI.isUri(candidate.settingsResource)\n\t\t&& URI.isUri(candidate.keybindingsResource)\n\t\t&& URI.isUri(candidate.tasksResource)\n\t\t&& URI.isUri(candidate.snippetsHome)\n\t\t&& (isUndefined(candidate.extensionsResource) || URI.isUri(candidate.extensionsResource))\n\t);\n}\n\nexport const PROFILES_ENABLEMENT_CONFIG = 'workbench.experimental.settingsProfiles.enabled';\n\nexport type EmptyWindowWorkspaceIdentifier = 'empty-window';\nexport type WorkspaceIdentifier = ISingleFolderWorkspaceIdentifier | IWorkspaceIdentifier | EmptyWindowWorkspaceIdentifier;\n\nexport type DidChangeProfilesEvent = { readonly added: IUserDataProfile[]; readonly removed: IUserDataProfile[]; readonly updated: IUserDataProfile[]; readonly all: IUserDataProfile[] };\n\nexport type WillCreateProfileEvent = {\n\tprofile: IUserDataProfile;\n\tjoin(promise: Promise<void>): void;\n};\n\nexport type WillRemoveProfileEvent = {\n\tprofile: IUserDataProfile;\n\tjoin(promise: Promise<void>): void;\n};\n\nexport const IUserDataProfilesService = createDecorator<IUserDataProfilesService>('IUserDataProfilesService');\nexport interface IUserDataProfilesService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly profilesHome: URI;\n\treadonly defaultProfile: IUserDataProfile;\n\n\treadonly onDidChangeProfiles: Event<DidChangeProfilesEvent>;\n\treadonly profiles: IUserDataProfile[];\n\n\tcreateProfile(name: string, useDefaultFlags?: UseDefaultProfileFlags, workspaceIdentifier?: WorkspaceIdentifier): Promise<IUserDataProfile>;\n\tupdateProfile(profile: IUserDataProfile, name: string, useDefaultFlags?: UseDefaultProfileFlags): Promise<IUserDataProfile>;\n\tsetProfileForWorkspace(profile: IUserDataProfile, workspaceIdentifier: WorkspaceIdentifier): Promise<void>;\n\tgetProfile(workspaceIdentifier: WorkspaceIdentifier): IUserDataProfile;\n\tremoveProfile(profile: IUserDataProfile): Promise<void>;\n}\n\nexport function reviveProfile(profile: UriDto<IUserDataProfile>, scheme: string): IUserDataProfile {\n\treturn {\n\t\tid: profile.id,\n\t\tisDefault: profile.isDefault,\n\t\tname: profile.name,\n\t\tlocation: URI.revive(profile.location).with({ scheme }),\n\t\tglobalStorageHome: URI.revive(profile.globalStorageHome).with({ scheme }),\n\t\tsettingsResource: URI.revive(profile.settingsResource).with({ scheme }),\n\t\tkeybindingsResource: URI.revive(profile.keybindingsResource).with({ scheme }),\n\t\ttasksResource: URI.revive(profile.tasksResource).with({ scheme }),\n\t\tsnippetsHome: URI.revive(profile.snippetsHome).with({ scheme }),\n\t\textensionsResource: URI.revive(profile.extensionsResource)?.with({ scheme })\n\t};\n}\n\nexport const EXTENSIONS_RESOURCE_NAME = 'extensions.json';\n\nexport function toUserDataProfile(name: string, location: URI, useDefaultFlags?: UseDefaultProfileFlags): IUserDataProfile {\n\treturn {\n\t\tid: hash(location.path).toString(16),\n\t\tname: name,\n\t\tlocation: location,\n\t\tisDefault: false,\n\t\tglobalStorageHome: joinPath(location, 'globalStorage'),\n\t\tsettingsResource: joinPath(location, 'settings.json'),\n\t\tkeybindingsResource: joinPath(location, 'keybindings.json'),\n\t\ttasksResource: joinPath(location, 'tasks.json'),\n\t\tsnippetsHome: joinPath(location, 'snippets'),\n\t\textensionsResource: joinPath(location, EXTENSIONS_RESOURCE_NAME),\n\t\tuseDefaultFlags\n\t};\n}\n\nexport type UserDataProfilesObject = {\n\tprofiles: IUserDataProfile[];\n\tworkspaces: ResourceMap<IUserDataProfile>;\n\temptyWindow?: IUserDataProfile;\n};\n\nexport type StoredUserDataProfile = {\n\tname: string;\n\tlocation: URI;\n\tuseDefaultFlags?: UseDefaultProfileFlags;\n};\n\nexport type StoredProfileAssociations = {\n\tworkspaces?: IStringDictionary<string>;\n\temptyWindow?: string;\n};\n\nexport class UserDataProfilesService extends Disposable implements IUserDataProfilesService {\n\n\tprotected static readonly PROFILES_KEY = 'userDataProfiles';\n\tprotected static readonly PROFILE_ASSOCIATIONS_KEY = 'profileAssociations';\n\n\treadonly _serviceBrand: undefined;\n\n\tprotected enabled: boolean = false;\n\tprotected readonly defaultProfileShouldIncludeExtensionsResourceAlways: boolean = false;\n\treadonly profilesHome: URI;\n\n\tget defaultProfile(): IUserDataProfile { return this.profiles[0]; }\n\tget profiles(): IUserDataProfile[] { return this.profilesObject.profiles; }\n\n\tprotected readonly _onDidChangeProfiles = this._register(new Emitter<DidChangeProfilesEvent>());\n\treadonly onDidChangeProfiles = this._onDidChangeProfiles.event;\n\n\tprotected readonly _onWillCreateProfile = this._register(new Emitter<WillCreateProfileEvent>());\n\treadonly onWillCreateProfile = this._onWillCreateProfile.event;\n\n\tprotected readonly _onWillRemoveProfile = this._register(new Emitter<WillRemoveProfileEvent>());\n\treadonly onWillRemoveProfile = this._onWillRemoveProfile.event;\n\n\tconstructor(\n\t\t@IEnvironmentService protected readonly environmentService: IEnvironmentService,\n\t\t@IFileService protected readonly fileService: IFileService,\n\t\t@IUriIdentityService protected readonly uriIdentityService: IUriIdentityService,\n\t\t@ILogService protected readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.profilesHome = joinPath(this.environmentService.userRoamingDataHome, 'profiles');\n\t}\n\n\tsetEnablement(enabled: boolean): void {\n\t\tif (this.enabled !== enabled) {\n\t\t\tthis._profilesObject = undefined;\n\t\t\tthis.enabled = enabled;\n\t\t}\n\t}\n\n\tprotected _profilesObject: UserDataProfilesObject | undefined;\n\tprotected get profilesObject(): UserDataProfilesObject {\n\t\tif (!this._profilesObject) {\n\t\t\tconst profiles = this.enabled ? this.getStoredProfiles().map<IUserDataProfile>(storedProfile => toUserDataProfile(storedProfile.name, storedProfile.location, storedProfile.useDefaultFlags)) : [];\n\t\t\tlet emptyWindow: IUserDataProfile | undefined;\n\t\t\tconst workspaces = new ResourceMap<IUserDataProfile>();\n\t\t\tif (profiles.length) {\n\t\t\t\tconst profileAssicaitions = this.getStoredProfileAssociations();\n\t\t\t\tif (profileAssicaitions.workspaces) {\n\t\t\t\t\tfor (const [workspacePath, profilePath] of Object.entries(profileAssicaitions.workspaces)) {\n\t\t\t\t\t\tconst workspace = URI.parse(workspacePath);\n\t\t\t\t\t\tconst profileLocation = URI.parse(profilePath);\n\t\t\t\t\t\tconst profile = profiles.find(p => this.uriIdentityService.extUri.isEqual(p.location, profileLocation));\n\t\t\t\t\t\tif (profile) {\n\t\t\t\t\t\t\tworkspaces.set(workspace, profile);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (profileAssicaitions.emptyWindow) {\n\t\t\t\t\tconst emptyWindowProfileLocation = URI.parse(profileAssicaitions.emptyWindow);\n\t\t\t\t\temptyWindow = profiles.find(p => this.uriIdentityService.extUri.isEqual(p.location, emptyWindowProfileLocation));\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst profile = toUserDataProfile(localize('defaultProfile', \"Default\"), this.environmentService.userRoamingDataHome);\n\t\t\tprofiles.unshift({ ...profile, isDefault: true, extensionsResource: this.defaultProfileShouldIncludeExtensionsResourceAlways || profiles.length > 0 ? profile.extensionsResource : undefined });\n\t\t\tthis._profilesObject = { profiles, workspaces, emptyWindow };\n\t\t}\n\t\treturn this._profilesObject;\n\t}\n\n\tgetProfile(workspaceIdentifier: WorkspaceIdentifier): IUserDataProfile {\n\t\tconst workspace = this.getWorkspace(workspaceIdentifier);\n\t\tconst profile = URI.isUri(workspace) ? this.profilesObject.workspaces.get(workspace) : this.profilesObject.emptyWindow;\n\t\treturn profile ?? this.defaultProfile;\n\t}\n\n\tprotected getWorkspace(workspaceIdentifier: WorkspaceIdentifier): URI | EmptyWindowWorkspaceIdentifier {\n\t\tif (isSingleFolderWorkspaceIdentifier(workspaceIdentifier)) {\n\t\t\treturn workspaceIdentifier.uri;\n\t\t}\n\t\tif (isWorkspaceIdentifier(workspaceIdentifier)) {\n\t\t\treturn workspaceIdentifier.configPath;\n\t\t}\n\t\treturn 'empty-window';\n\t}\n\n\tasync createProfile(name: string, useDefaultFlags?: UseDefaultProfileFlags, workspaceIdentifier?: WorkspaceIdentifier): Promise<IUserDataProfile> {\n\t\tif (!this.enabled) {\n\t\t\tthrow new Error(`Settings Profiles are disabled. Enable them via the '${PROFILES_ENABLEMENT_CONFIG}' setting.`);\n\t\t}\n\t\tif (this.getStoredProfiles().some(p => p.name === name)) {\n\t\t\tthrow new Error(`Profile with name ${name} already exists`);\n\t\t}\n\n\t\tconst profile = toUserDataProfile(name, joinPath(this.profilesHome, hash(generateUuid()).toString(16)), useDefaultFlags);\n\t\tawait this.fileService.createFolder(profile.location);\n\n\t\tconst joiners: Promise<void>[] = [];\n\t\tthis._onWillCreateProfile.fire({\n\t\t\tprofile,\n\t\t\tjoin(promise) {\n\t\t\t\tjoiners.push(promise);\n\t\t\t}\n\t\t});\n\t\tawait Promises.settled(joiners);\n\n\t\tthis.updateProfiles([profile], [], []);\n\n\t\tif (workspaceIdentifier) {\n\t\t\tawait this.setProfileForWorkspace(profile, workspaceIdentifier);\n\t\t}\n\n\t\treturn profile;\n\t}\n\n\tasync updateProfile(profileToUpdate: IUserDataProfile, name: string, useDefaultFlags?: UseDefaultProfileFlags): Promise<IUserDataProfile> {\n\t\tif (!this.enabled) {\n\t\t\tthrow new Error(`Settings Profiles are disabled. Enable them via the '${PROFILES_ENABLEMENT_CONFIG}' setting.`);\n\t\t}\n\n\t\tlet profile = this.profiles.find(p => p.id === profileToUpdate.id);\n\t\tif (!profile) {\n\t\t\tthrow new Error(`Profile '${profileToUpdate.name}' does not exist`);\n\t\t}\n\n\t\tprofile = toUserDataProfile(name, profile.location, useDefaultFlags);\n\t\tthis.updateProfiles([], [], [profile]);\n\n\t\treturn profile;\n\t}\n\n\tasync setProfileForWorkspace(profileToSet: IUserDataProfile, workspaceIdentifier: WorkspaceIdentifier): Promise<void> {\n\t\tif (!this.enabled) {\n\t\t\tthrow new Error(`Settings Profiles are disabled. Enable them via the '${PROFILES_ENABLEMENT_CONFIG}' setting.`);\n\t\t}\n\n\t\tconst profile = this.profiles.find(p => p.id === profileToSet.id);\n\t\tif (!profile) {\n\t\t\tthrow new Error(`Profile '${profileToSet.name}' does not exist`);\n\t\t}\n\n\t\tthis.updateWorkspaceAssociation(workspaceIdentifier, profile);\n\t}\n\n\tasync unsetWorkspace(workspaceIdentifier: WorkspaceIdentifier): Promise<void> {\n\t\tif (!this.enabled) {\n\t\t\tthrow new Error(`Settings Profiles are disabled. Enable them via the '${PROFILES_ENABLEMENT_CONFIG}' setting.`);\n\t\t}\n\t\tthis.updateWorkspaceAssociation(workspaceIdentifier);\n\t}\n\n\tasync removeProfile(profileToRemove: IUserDataProfile): Promise<void> {\n\t\tif (!this.enabled) {\n\t\t\tthrow new Error(`Settings Profiles are disabled. Enable them via the '${PROFILES_ENABLEMENT_CONFIG}' setting.`);\n\t\t}\n\t\tif (profileToRemove.isDefault) {\n\t\t\tthrow new Error('Cannot remove default profile');\n\t\t}\n\t\tconst profile = this.profiles.find(p => p.id === profileToRemove.id);\n\t\tif (!profile) {\n\t\t\tthrow new Error(`Profile '${profileToRemove.name}' does not exist`);\n\t\t}\n\n\t\tconst joiners: Promise<void>[] = [];\n\t\tthis._onWillRemoveProfile.fire({\n\t\t\tprofile,\n\t\t\tjoin(promise) {\n\t\t\t\tjoiners.push(promise);\n\t\t\t}\n\t\t});\n\t\tawait Promises.settled(joiners);\n\n\t\tif (profile.id === this.profilesObject.emptyWindow?.id) {\n\t\t\tthis.profilesObject.emptyWindow = undefined;\n\t\t}\n\t\tfor (const workspace of [...this.profilesObject.workspaces.keys()]) {\n\t\t\tif (profile.id === this.profilesObject.workspaces.get(workspace)?.id) {\n\t\t\t\tthis.profilesObject.workspaces.delete(workspace);\n\t\t\t}\n\t\t}\n\t\tthis.updateStoredProfileAssociations();\n\n\t\tthis.updateProfiles([], [profile], []);\n\n\t\ttry {\n\t\t\tif (this.profiles.length === 1) {\n\t\t\t\tawait this.fileService.del(this.profilesHome, { recursive: true });\n\t\t\t} else {\n\t\t\t\tawait this.fileService.del(profile.location, { recursive: true });\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t}\n\t}\n\n\tprivate updateProfiles(added: IUserDataProfile[], removed: IUserDataProfile[], updated: IUserDataProfile[]) {\n\t\tconst storedProfiles: StoredUserDataProfile[] = [];\n\t\tfor (let profile of [...this.profilesObject.profiles, ...added]) {\n\t\t\tif (profile.isDefault) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (removed.some(p => profile.id === p.id)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tprofile = updated.find(p => profile.id === p.id) ?? profile;\n\t\t\tstoredProfiles.push({ location: profile.location, name: profile.name, useDefaultFlags: profile.useDefaultFlags });\n\t\t}\n\t\tthis.saveStoredProfiles(storedProfiles);\n\t\tthis._profilesObject = undefined;\n\t\tthis.triggerProfilesChanges(added, removed, updated);\n\t}\n\n\tprotected triggerProfilesChanges(added: IUserDataProfile[], removed: IUserDataProfile[], updated: IUserDataProfile[]) {\n\t\tthis._onDidChangeProfiles.fire({ added, removed, updated, all: this.profiles });\n\t}\n\n\tprivate updateWorkspaceAssociation(workspaceIdentifier: WorkspaceIdentifier, newProfile?: IUserDataProfile) {\n\t\tconst workspace = this.getWorkspace(workspaceIdentifier);\n\n\t\t// Folder or Multiroot workspace\n\t\tif (URI.isUri(workspace)) {\n\t\t\tthis.profilesObject.workspaces.delete(workspace);\n\t\t\tif (newProfile && !newProfile.isDefault) {\n\t\t\t\tthis.profilesObject.workspaces.set(workspace, newProfile);\n\t\t\t}\n\t\t}\n\t\t// Empty Window\n\t\telse {\n\t\t\tthis.profilesObject.emptyWindow = !newProfile?.isDefault ? newProfile : undefined;\n\t\t}\n\n\t\tthis.updateStoredProfileAssociations();\n\t}\n\n\tprivate updateStoredProfileAssociations() {\n\t\tconst workspaces: IStringDictionary<string> = {};\n\t\tfor (const [workspace, profile] of this.profilesObject.workspaces.entries()) {\n\t\t\tworkspaces[workspace.toString()] = profile.location.toString();\n\t\t}\n\t\tconst emptyWindow = this.profilesObject.emptyWindow?.location.toString();\n\t\tthis.saveStoredProfileAssociations({ workspaces, emptyWindow });\n\t\tthis._profilesObject = undefined;\n\t}\n\n\tprotected getStoredProfiles(): StoredUserDataProfile[] { return []; }\n\tprotected saveStoredProfiles(storedProfiles: StoredUserDataProfile[]): void { throw new Error('not implemented'); }\n\n\tprotected getStoredProfileAssociations(): StoredProfileAssociations { return {}; }\n\tprotected saveStoredProfileAssociations(storedProfileAssociations: StoredProfileAssociations): void { throw new Error('not implemented'); }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isNonEmptyArray } from 'vs/base/common/arrays';\nimport { Barrier, CancelablePromise, createCancelablePromise } from 'vs/base/common/async';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { CancellationError, getErrorMessage } from 'vs/base/common/errors';\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { isWeb } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport * as nls from 'vs/nls';\nimport {\n\tExtensionManagementError, IExtensionGalleryService, IExtensionIdentifier, IExtensionManagementParticipant, IGalleryExtension, IGalleryMetadata, ILocalExtension, InstallOperation,\n\tIExtensionsControlManifest, StatisticType, isTargetPlatformCompatible, TargetPlatformToString, ExtensionManagementErrorCode, IServerExtensionManagementService,\n\tServerInstallOptions, ServerInstallVSIXOptions, ServerUninstallOptions, Metadata, ServerInstallExtensionEvent, ServerInstallExtensionResult, ServerUninstallExtensionEvent, ServerDidUninstallExtensionEvent\n} from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions, ExtensionKey, getGalleryExtensionTelemetryData, getLocalExtensionTelemetryData } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ExtensionType, IExtensionManifest, isApplicationScopedExtension, TargetPlatform } from 'vs/platform/extensions/common/extensions';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IUserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\n\nexport interface IInstallExtensionTask {\n\treadonly identifier: IExtensionIdentifier;\n\treadonly source: IGalleryExtension | URI;\n\treadonly operation: InstallOperation;\n\trun(): Promise<{ local: ILocalExtension; metadata: Metadata }>;\n\twaitUntilTaskIsFinished(): Promise<{ local: ILocalExtension; metadata: Metadata }>;\n\tcancel(): void;\n}\n\nexport interface IUninstallExtensionTask {\n\treadonly extension: ILocalExtension;\n\trun(): Promise<void>;\n\twaitUntilTaskIsFinished(): Promise<void>;\n\tcancel(): void;\n}\n\nexport abstract class AbstractExtensionManagementService extends Disposable implements IServerExtensionManagementService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate extensionsControlManifest: Promise<IExtensionsControlManifest> | undefined;\n\tprivate lastReportTimestamp = 0;\n\tprivate readonly installingExtensions = new Map<string, IInstallExtensionTask>();\n\tprivate readonly uninstallingExtensions = new Map<string, IUninstallExtensionTask>();\n\n\tprivate readonly _onInstallExtension = this._register(new Emitter<ServerInstallExtensionEvent>());\n\treadonly onInstallExtension = this._onInstallExtension.event;\n\n\tprotected readonly _onDidInstallExtensions = this._register(new Emitter<ServerInstallExtensionResult[]>());\n\treadonly onDidInstallExtensions = this._onDidInstallExtensions.event;\n\n\tprotected readonly _onUninstallExtension = this._register(new Emitter<ServerUninstallExtensionEvent>());\n\treadonly onUninstallExtension = this._onUninstallExtension.event;\n\n\tprotected _onDidUninstallExtension = this._register(new Emitter<ServerDidUninstallExtensionEvent>());\n\treadonly onDidUninstallExtension = this._onDidUninstallExtension.event;\n\n\tprivate readonly participants: IExtensionManagementParticipant[] = [];\n\n\tconstructor(\n\t\t@IExtensionGalleryService protected readonly galleryService: IExtensionGalleryService,\n\t\t@ITelemetryService protected readonly telemetryService: ITelemetryService,\n\t\t@ILogService protected readonly logService: ILogService,\n\t\t@IProductService protected readonly productService: IProductService,\n\t\t@IUserDataProfilesService protected readonly userDataProfilesService: IUserDataProfilesService,\n\t) {\n\t\tsuper();\n\t\tthis._register(toDisposable(() => {\n\t\t\tthis.installingExtensions.forEach(task => task.cancel());\n\t\t\tthis.uninstallingExtensions.forEach(promise => promise.cancel());\n\t\t\tthis.installingExtensions.clear();\n\t\t\tthis.uninstallingExtensions.clear();\n\t\t}));\n\t}\n\n\tasync canInstall(extension: IGalleryExtension): Promise<boolean> {\n\t\tconst currentTargetPlatform = await this.getTargetPlatform();\n\t\treturn extension.allTargetPlatforms.some(targetPlatform => isTargetPlatformCompatible(targetPlatform, extension.allTargetPlatforms, currentTargetPlatform));\n\t}\n\n\tasync installFromGallery(extension: IGalleryExtension, options: ServerInstallOptions = {}): Promise<ILocalExtension> {\n\t\ttry {\n\t\t\tif (!this.galleryService.isEnabled()) {\n\t\t\t\tthrow new ExtensionManagementError(nls.localize('MarketPlaceDisabled', \"Marketplace is not enabled\"), ExtensionManagementErrorCode.Internal);\n\t\t\t}\n\t\t\tconst compatible = await this.checkAndGetCompatibleVersion(extension, !!options.installGivenVersion, !!options.installPreReleaseVersion);\n\t\t\treturn await this.installExtension(compatible.manifest, compatible.extension, options);\n\t\t} catch (error) {\n\t\t\treportTelemetry(this.telemetryService, 'extensionGallery:install', { extensionData: getGalleryExtensionTelemetryData(extension), error });\n\t\t\tthis.logService.error(`Failed to install extension.`, extension.identifier.id);\n\t\t\tthis.logService.error(error);\n\t\t\tthrow toExtensionManagementError(error);\n\t\t}\n\t}\n\n\tasync uninstall(extension: ILocalExtension, options: ServerUninstallOptions = {}): Promise<void> {\n\t\tthis.logService.trace('ExtensionManagementService#uninstall', extension.identifier.id);\n\t\treturn this.uninstallExtension(extension, options);\n\t}\n\n\tasync reinstallFromGallery(extension: ILocalExtension): Promise<void> {\n\t\tthis.logService.trace('ExtensionManagementService#reinstallFromGallery', extension.identifier.id);\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\tthrow new Error(nls.localize('MarketPlaceDisabled', \"Marketplace is not enabled\"));\n\t\t}\n\n\t\tconst targetPlatform = await this.getTargetPlatform();\n\t\tconst [galleryExtension] = await this.galleryService.getExtensions([{ ...extension.identifier, preRelease: extension.preRelease }], { targetPlatform, compatible: true }, CancellationToken.None);\n\t\tif (!galleryExtension) {\n\t\t\tthrow new Error(nls.localize('Not a Marketplace extension', \"Only Marketplace Extensions can be reinstalled\"));\n\t\t}\n\n\t\tawait this.createUninstallExtensionTask(extension, { remove: true, versionOnly: true }).run();\n\t\tawait this.installFromGallery(galleryExtension);\n\t}\n\n\tgetExtensionsControlManifest(): Promise<IExtensionsControlManifest> {\n\t\tconst now = new Date().getTime();\n\n\t\tif (!this.extensionsControlManifest || now - this.lastReportTimestamp > 1000 * 60 * 5) { // 5 minute cache freshness\n\t\t\tthis.extensionsControlManifest = this.updateControlCache();\n\t\t\tthis.lastReportTimestamp = now;\n\t\t}\n\n\t\treturn this.extensionsControlManifest;\n\t}\n\n\tregisterParticipant(participant: IExtensionManagementParticipant): void {\n\t\tthis.participants.push(participant);\n\t}\n\n\tprotected async installExtension(manifest: IExtensionManifest, extension: URI | IGalleryExtension, options: ServerInstallOptions & ServerInstallVSIXOptions): Promise<ILocalExtension> {\n\n\t\tconst getInstallExtensionTaskKey = (extension: IGalleryExtension) => `${ExtensionKey.create(extension).toString()}${options.profileLocation ? `-${options.profileLocation.toString()}` : ''}`;\n\n\t\t// only cache gallery extensions tasks\n\t\tif (!URI.isUri(extension)) {\n\t\t\tconst installExtensionTask = this.installingExtensions.get(getInstallExtensionTaskKey(extension));\n\t\t\tif (installExtensionTask) {\n\t\t\t\tthis.logService.info('Extensions is already requested to install', extension.identifier.id);\n\t\t\t\tconst { local } = await installExtensionTask.waitUntilTaskIsFinished();\n\t\t\t\treturn local;\n\t\t\t}\n\t\t\toptions = { ...options, installOnlyNewlyAddedFromExtensionPack: true /* always true for gallery extensions */ };\n\t\t}\n\n\t\tconst allInstallExtensionTasks: { task: IInstallExtensionTask; manifest: IExtensionManifest }[] = [];\n\t\tconst installResults: (ServerInstallExtensionResult & { local: ILocalExtension })[] = [];\n\t\tconst installExtensionTask = this.createInstallExtensionTask(manifest, extension, options);\n\t\tif (!URI.isUri(extension)) {\n\t\t\tthis.installingExtensions.set(getInstallExtensionTaskKey(extension), installExtensionTask);\n\t\t}\n\t\tthis._onInstallExtension.fire({ identifier: installExtensionTask.identifier, source: extension, profileLocation: options.profileLocation });\n\t\tthis.logService.info('Installing extension:', installExtensionTask.identifier.id);\n\t\tallInstallExtensionTasks.push({ task: installExtensionTask, manifest });\n\t\tlet installExtensionHasDependents: boolean = false;\n\n\t\ttry {\n\t\t\tif (options.donotIncludePackAndDependencies) {\n\t\t\t\tthis.logService.info('Installing the extension without checking dependencies and pack', installExtensionTask.identifier.id);\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tconst allDepsAndPackExtensionsToInstall = await this.getAllDepsAndPackExtensionsToInstall(installExtensionTask.identifier, manifest, !!options.installOnlyNewlyAddedFromExtensionPack, !!options.installPreReleaseVersion, options.profileLocation);\n\t\t\t\t\tfor (const { gallery, manifest } of allDepsAndPackExtensionsToInstall) {\n\t\t\t\t\t\tinstallExtensionHasDependents = installExtensionHasDependents || !!manifest.extensionDependencies?.some(id => areSameExtensions({ id }, installExtensionTask.identifier));\n\t\t\t\t\t\tconst key = getInstallExtensionTaskKey(gallery);\n\t\t\t\t\t\tif (this.installingExtensions.has(key)) {\n\t\t\t\t\t\t\tthis.logService.info('Extension is already requested to install', gallery.identifier.id);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst task = this.createInstallExtensionTask(manifest, gallery, { ...options, donotIncludePackAndDependencies: true });\n\t\t\t\t\t\t\tthis.installingExtensions.set(key, task);\n\t\t\t\t\t\t\tthis._onInstallExtension.fire({ identifier: task.identifier, source: gallery, profileLocation: options.profileLocation });\n\t\t\t\t\t\t\tthis.logService.info('Installing extension:', task.identifier.id);\n\t\t\t\t\t\t\tallInstallExtensionTasks.push({ task, manifest });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// Installing through VSIX\n\t\t\t\t\tif (URI.isUri(installExtensionTask.source)) {\n\t\t\t\t\t\t// Ignore installing dependencies and packs\n\t\t\t\t\t\tif (isNonEmptyArray(manifest.extensionDependencies)) {\n\t\t\t\t\t\t\tthis.logService.warn(`Cannot install dependencies of extension:`, installExtensionTask.identifier.id, error.message);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (isNonEmptyArray(manifest.extensionPack)) {\n\t\t\t\t\t\t\tthis.logService.warn(`Cannot install packed extensions of extension:`, installExtensionTask.identifier.id, error.message);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.logService.error('Error while preparing to install dependencies and extension packs of the extension:', installExtensionTask.identifier.id);\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst extensionsToInstallMap = allInstallExtensionTasks.reduce((result, { task, manifest }) => {\n\t\t\t\tresult.set(task.identifier.id.toLowerCase(), { task, manifest });\n\t\t\t\treturn result;\n\t\t\t}, new Map<string, { task: IInstallExtensionTask; manifest: IExtensionManifest }>());\n\n\t\t\twhile (extensionsToInstallMap.size) {\n\t\t\t\tlet extensionsToInstall;\n\t\t\t\tconst extensionsWithoutDepsToInstall = [...extensionsToInstallMap.values()].filter(({ manifest }) => !manifest.extensionDependencies?.some(id => extensionsToInstallMap.has(id.toLowerCase())));\n\t\t\t\tif (extensionsWithoutDepsToInstall.length) {\n\t\t\t\t\textensionsToInstall = extensionsToInstallMap.size === 1 ? extensionsWithoutDepsToInstall\n\t\t\t\t\t\t/* If the main extension has no dependents remove it and install it at the end */\n\t\t\t\t\t\t: extensionsWithoutDepsToInstall.filter(({ task }) => !(task === installExtensionTask && !installExtensionHasDependents));\n\t\t\t\t} else {\n\t\t\t\t\tthis.logService.info('Found extensions with circular dependencies', extensionsWithoutDepsToInstall.map(({ task }) => task.identifier.id));\n\t\t\t\t\textensionsToInstall = [...extensionsToInstallMap.values()];\n\t\t\t\t}\n\n\t\t\t\t// Install extensions in parallel and wait until all extensions are installed / failed\n\t\t\t\tawait this.joinAllSettled(extensionsToInstall.map(async ({ task }) => {\n\t\t\t\t\tconst startTime = new Date().getTime();\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst { local } = await task.run();\n\t\t\t\t\t\tawait this.joinAllSettled(this.participants.map(participant => participant.postInstall(local, task.source, options, CancellationToken.None)));\n\t\t\t\t\t\tif (!URI.isUri(task.source)) {\n\t\t\t\t\t\t\tconst isUpdate = task.operation === InstallOperation.Update;\n\t\t\t\t\t\t\tconst durationSinceUpdate = isUpdate ? undefined : (new Date().getTime() - task.source.lastUpdated) / 1000;\n\t\t\t\t\t\t\treportTelemetry(this.telemetryService, isUpdate ? 'extensionGallery:update' : 'extensionGallery:install', {\n\t\t\t\t\t\t\t\textensionData: getGalleryExtensionTelemetryData(task.source),\n\t\t\t\t\t\t\t\tduration: new Date().getTime() - startTime,\n\t\t\t\t\t\t\t\tdurationSinceUpdate\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t// In web, report extension install statistics explicitly. In Desktop, statistics are automatically updated while downloading the VSIX.\n\t\t\t\t\t\t\tif (isWeb && task.operation !== InstallOperation.Update) {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tawait this.galleryService.reportStatistic(local.manifest.publisher, local.manifest.name, local.manifest.version, StatisticType.Install);\n\t\t\t\t\t\t\t\t} catch (error) { /* ignore */ }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinstallResults.push({ local, identifier: task.identifier, operation: task.operation, source: task.source, context: options.context, profileLocation: options.profileLocation, applicationScoped: local.isApplicationScoped });\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (!URI.isUri(task.source)) {\n\t\t\t\t\t\t\treportTelemetry(this.telemetryService, task.operation === InstallOperation.Update ? 'extensionGallery:update' : 'extensionGallery:install', { extensionData: getGalleryExtensionTelemetryData(task.source), duration: new Date().getTime() - startTime, error });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.logService.error('Error while installing the extension:', task.identifier.id);\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t} finally { extensionsToInstallMap.delete(task.identifier.id.toLowerCase()); }\n\t\t\t\t}));\n\t\t\t}\n\n\t\t\tinstallResults.forEach(({ identifier }) => this.logService.info(`Extension installed successfully:`, identifier.id));\n\t\t\tthis._onDidInstallExtensions.fire(installResults);\n\t\t\treturn installResults.filter(({ identifier }) => areSameExtensions(identifier, installExtensionTask.identifier))[0].local;\n\n\t\t} catch (error) {\n\n\t\t\t// cancel all tasks\n\t\t\tallInstallExtensionTasks.forEach(({ task }) => task.cancel());\n\n\t\t\t// rollback installed extensions\n\t\t\tif (installResults.length) {\n\t\t\t\ttry {\n\t\t\t\t\tconst result = await Promise.allSettled(installResults.map(({ local }) => this.createUninstallExtensionTask(local, { versionOnly: true, profileLocation: options.profileLocation }).run()));\n\t\t\t\t\tfor (let index = 0; index < result.length; index++) {\n\t\t\t\t\t\tconst r = result[index];\n\t\t\t\t\t\tconst { identifier } = installResults[index];\n\t\t\t\t\t\tif (r.status === 'fulfilled') {\n\t\t\t\t\t\t\tthis.logService.info('Rollback: Uninstalled extension', identifier.id);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.logService.warn('Rollback: Error while uninstalling extension', identifier.id, getErrorMessage(r.reason));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// ignore error\n\t\t\t\t\tthis.logService.warn('Error while rolling back extensions', getErrorMessage(error), installResults.map(({ identifier }) => identifier.id));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._onDidInstallExtensions.fire(allInstallExtensionTasks.map(({ task }) => ({ identifier: task.identifier, operation: InstallOperation.Install, source: task.source, context: options.context, profileLocation: options.profileLocation })));\n\t\t\tthrow error;\n\t\t} finally {\n\t\t\t/* Remove the gallery tasks from the cache */\n\t\t\tfor (const { task } of allInstallExtensionTasks) {\n\t\t\t\tif (!URI.isUri(task.source)) {\n\t\t\t\t\tconst key = getInstallExtensionTaskKey(task.source);\n\t\t\t\t\tif (!this.installingExtensions.delete(key)) {\n\t\t\t\t\t\tthis.logService.warn('Installation task is not found in the cache', key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async joinAllSettled<T>(promises: Promise<T>[]): Promise<T[]> {\n\t\tconst results: T[] = [];\n\t\tconst errors: any[] = [];\n\t\tconst promiseResults = await Promise.allSettled(promises);\n\t\tfor (const r of promiseResults) {\n\t\t\tif (r.status === 'fulfilled') {\n\t\t\t\tresults.push(r.value);\n\t\t\t} else {\n\t\t\t\terrors.push(r.reason);\n\t\t\t}\n\t\t}\n\t\t// If there are errors, throw the error.\n\t\tif (errors.length) { throw joinErrors(errors); }\n\t\treturn results;\n\t}\n\n\tprivate async getAllDepsAndPackExtensionsToInstall(extensionIdentifier: IExtensionIdentifier, manifest: IExtensionManifest, getOnlyNewlyAddedFromExtensionPack: boolean, installPreRelease: boolean, profile: URI | undefined): Promise<{ gallery: IGalleryExtension; manifest: IExtensionManifest }[]> {\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\treturn [];\n\t\t}\n\n\t\tlet installed = await this.getInstalled(undefined, profile);\n\t\tconst knownIdentifiers = [extensionIdentifier, ...(installed).map(i => i.identifier)];\n\n\t\tconst allDependenciesAndPacks: { gallery: IGalleryExtension; manifest: IExtensionManifest }[] = [];\n\t\tconst collectDependenciesAndPackExtensionsToInstall = async (extensionIdentifier: IExtensionIdentifier, manifest: IExtensionManifest): Promise<void> => {\n\t\t\tconst dependecies: string[] = manifest.extensionDependencies || [];\n\t\t\tconst dependenciesAndPackExtensions = [...dependecies];\n\t\t\tif (manifest.extensionPack) {\n\t\t\t\tconst existing = getOnlyNewlyAddedFromExtensionPack ? installed.find(e => areSameExtensions(e.identifier, extensionIdentifier)) : undefined;\n\t\t\t\tfor (const extension of manifest.extensionPack) {\n\t\t\t\t\t// add only those extensions which are new in currently installed extension\n\t\t\t\t\tif (!(existing && existing.manifest.extensionPack && existing.manifest.extensionPack.some(old => areSameExtensions({ id: old }, { id: extension })))) {\n\t\t\t\t\t\tif (dependenciesAndPackExtensions.every(e => !areSameExtensions({ id: e }, { id: extension }))) {\n\t\t\t\t\t\t\tdependenciesAndPackExtensions.push(extension);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (dependenciesAndPackExtensions.length) {\n\t\t\t\t// filter out installed and known extensions\n\t\t\t\tconst identifiers = [...knownIdentifiers, ...allDependenciesAndPacks.map(r => r.gallery.identifier)];\n\t\t\t\tconst ids = dependenciesAndPackExtensions.filter(id => identifiers.every(galleryIdentifier => !areSameExtensions(galleryIdentifier, { id })));\n\t\t\t\tif (ids.length) {\n\t\t\t\t\tconst galleryExtensions = await this.galleryService.getExtensions(ids.map(id => ({ id, preRelease: installPreRelease })), CancellationToken.None);\n\t\t\t\t\tfor (const galleryExtension of galleryExtensions) {\n\t\t\t\t\t\tif (identifiers.find(identifier => areSameExtensions(identifier, galleryExtension.identifier))) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst isDependency = dependecies.some(id => areSameExtensions({ id }, galleryExtension.identifier));\n\t\t\t\t\t\tlet compatible;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tcompatible = await this.checkAndGetCompatibleVersion(galleryExtension, false, installPreRelease);\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tif (error instanceof ExtensionManagementError && error.code === ExtensionManagementErrorCode.IncompatibleTargetPlatform && !isDependency) {\n\t\t\t\t\t\t\t\tthis.logService.info('Skipping the packed extension as it cannot be installed', galleryExtension.identifier.id);\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tallDependenciesAndPacks.push({ gallery: compatible.extension, manifest: compatible.manifest });\n\t\t\t\t\t\tawait collectDependenciesAndPackExtensionsToInstall(compatible.extension.identifier, compatible.manifest);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tawait collectDependenciesAndPackExtensionsToInstall(extensionIdentifier, manifest);\n\t\tinstalled = await this.getInstalled(undefined, profile);\n\t\treturn allDependenciesAndPacks.filter(e => !installed.some(i => areSameExtensions(i.identifier, e.gallery.identifier)));\n\t}\n\n\tprivate async checkAndGetCompatibleVersion(extension: IGalleryExtension, sameVersion: boolean, installPreRelease: boolean): Promise<{ extension: IGalleryExtension; manifest: IExtensionManifest }> {\n\t\tconst extensionsControlManifest = await this.getExtensionsControlManifest();\n\t\tif (extensionsControlManifest.malicious.some(identifier => areSameExtensions(extension.identifier, identifier))) {\n\t\t\tthrow new ExtensionManagementError(nls.localize('malicious extension', \"Can't install '{0}' extension since it was reported to be problematic.\", extension.identifier.id), ExtensionManagementErrorCode.Malicious);\n\t\t}\n\n\t\tif (!await this.canInstall(extension)) {\n\t\t\tconst targetPlatform = await this.getTargetPlatform();\n\t\t\tthrow new ExtensionManagementError(nls.localize('incompatible platform', \"The '{0}' extension is not available in {1} for {2}.\", extension.identifier.id, this.productService.nameLong, TargetPlatformToString(targetPlatform)), ExtensionManagementErrorCode.IncompatibleTargetPlatform);\n\t\t}\n\n\t\tconst compatibleExtension = await this.getCompatibleVersion(extension, sameVersion, installPreRelease);\n\t\tif (compatibleExtension) {\n\t\t\tif (installPreRelease && !sameVersion && extension.hasPreReleaseVersion && !compatibleExtension.properties.isPreReleaseVersion) {\n\t\t\t\tthrow new ExtensionManagementError(nls.localize('notFoundCompatiblePrereleaseDependency', \"Can't install pre-release version of '{0}' extension because it is not compatible with the current version of {1} (version {2}).\", extension.identifier.id, this.productService.nameLong, this.productService.version), ExtensionManagementErrorCode.IncompatiblePreRelease);\n\t\t\t}\n\t\t} else {\n\t\t\t/** If no compatible release version is found, check if the extension has a release version or not and throw relevant error */\n\t\t\tif (!installPreRelease && extension.properties.isPreReleaseVersion && (await this.galleryService.getExtensions([extension.identifier], CancellationToken.None))[0]) {\n\t\t\t\tthrow new ExtensionManagementError(nls.localize('notFoundReleaseExtension', \"Can't install release version of '{0}' extension because it has no release version.\", extension.identifier.id), ExtensionManagementErrorCode.ReleaseVersionNotFound);\n\t\t\t}\n\t\t\tthrow new ExtensionManagementError(nls.localize('notFoundCompatibleDependency', \"Can't install '{0}' extension because it is not compatible with the current version of {1} (version {2}).\", extension.identifier.id, this.productService.nameLong, this.productService.version), ExtensionManagementErrorCode.Incompatible);\n\t\t}\n\n\t\tthis.logService.info('Getting Manifest...', compatibleExtension.identifier.id);\n\t\tconst manifest = await this.galleryService.getManifest(compatibleExtension, CancellationToken.None);\n\t\tif (manifest === null) {\n\t\t\tthrow new ExtensionManagementError(`Missing manifest for extension ${extension.identifier.id}`, ExtensionManagementErrorCode.Invalid);\n\t\t}\n\n\t\tif (manifest.version !== compatibleExtension.version) {\n\t\t\tthrow new ExtensionManagementError(`Cannot install '${extension.identifier.id}' extension because of version mismatch in Marketplace`, ExtensionManagementErrorCode.Invalid);\n\t\t}\n\n\t\treturn { extension: compatibleExtension, manifest };\n\t}\n\n\tprotected async getCompatibleVersion(extension: IGalleryExtension, sameVersion: boolean, includePreRelease: boolean): Promise<IGalleryExtension | null> {\n\t\tconst targetPlatform = await this.getTargetPlatform();\n\t\tlet compatibleExtension: IGalleryExtension | null = null;\n\n\t\tif (!sameVersion && extension.hasPreReleaseVersion && extension.properties.isPreReleaseVersion !== includePreRelease) {\n\t\t\tcompatibleExtension = (await this.galleryService.getExtensions([{ ...extension.identifier, preRelease: includePreRelease }], { targetPlatform, compatible: true }, CancellationToken.None))[0] || null;\n\t\t}\n\n\t\tif (!compatibleExtension && await this.galleryService.isExtensionCompatible(extension, includePreRelease, targetPlatform)) {\n\t\t\tcompatibleExtension = extension;\n\t\t}\n\n\t\tif (!compatibleExtension) {\n\t\t\tif (sameVersion) {\n\t\t\t\tcompatibleExtension = (await this.galleryService.getExtensions([{ ...extension.identifier, version: extension.version }], { targetPlatform, compatible: true }, CancellationToken.None))[0] || null;\n\t\t\t} else {\n\t\t\t\tcompatibleExtension = await this.galleryService.getCompatibleExtension(extension, includePreRelease, targetPlatform);\n\t\t\t}\n\t\t}\n\n\t\treturn compatibleExtension;\n\t}\n\n\tprivate async uninstallExtension(extension: ILocalExtension, options: ServerUninstallOptions): Promise<void> {\n\t\tconst getUninstallExtensionTaskKey = (identifier: IExtensionIdentifier) => `${identifier.id.toLowerCase()}${options.versionOnly ? `-${extension.manifest.version}` : ''}${options.profileLocation ? `@${options.profileLocation.toString()}` : ''}`;\n\t\tconst uninstallExtensionTask = this.uninstallingExtensions.get(getUninstallExtensionTaskKey(extension.identifier));\n\t\tif (uninstallExtensionTask) {\n\t\t\tthis.logService.info('Extensions is already requested to uninstall', extension.identifier.id);\n\t\t\treturn uninstallExtensionTask.waitUntilTaskIsFinished();\n\t\t}\n\n\t\tconst createUninstallExtensionTask = (extension: ILocalExtension, uninstallOptions: ServerUninstallOptions): IUninstallExtensionTask => {\n\t\t\tconst uninstallExtensionTask = this.createUninstallExtensionTask(extension, uninstallOptions);\n\t\t\tthis.uninstallingExtensions.set(getUninstallExtensionTaskKey(uninstallExtensionTask.extension.identifier), uninstallExtensionTask);\n\t\t\tif (options.profileLocation) {\n\t\t\t\tthis.logService.info('Uninstalling extension from the profile:', `${extension.identifier.id}@${extension.manifest.version}`, options.profileLocation.toString());\n\t\t\t} else {\n\t\t\t\tthis.logService.info('Uninstalling extension:', `${extension.identifier.id}@${extension.manifest.version}`);\n\t\t\t}\n\t\t\tthis._onUninstallExtension.fire({ identifier: extension.identifier, profileLocation: options.profileLocation, applicationScoped: extension.isApplicationScoped });\n\t\t\treturn uninstallExtensionTask;\n\t\t};\n\n\t\tconst postUninstallExtension = (extension: ILocalExtension, error?: ExtensionManagementError): void => {\n\t\t\tif (error) {\n\t\t\t\tif (options.profileLocation) {\n\t\t\t\t\tthis.logService.error('Failed to uninstall extension from the profile:', `${extension.identifier.id}@${extension.manifest.version}`, options.profileLocation.toString(), error.message);\n\t\t\t\t} else {\n\t\t\t\t\tthis.logService.error('Failed to uninstall extension:', `${extension.identifier.id}@${extension.manifest.version}`, error.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (options.profileLocation) {\n\t\t\t\t\tthis.logService.info('Successfully uninstalled extension from the profile', `${extension.identifier.id}@${extension.manifest.version}`, options.profileLocation.toString());\n\t\t\t\t} else {\n\t\t\t\t\tthis.logService.info('Successfully uninstalled extension:', `${extension.identifier.id}@${extension.manifest.version}`);\n\t\t\t\t}\n\t\t\t}\n\t\t\treportTelemetry(this.telemetryService, 'extensionGallery:uninstall', { extensionData: getLocalExtensionTelemetryData(extension), error });\n\t\t\tthis._onDidUninstallExtension.fire({ identifier: extension.identifier, version: extension.manifest.version, error: error?.code, profileLocation: options.profileLocation, applicationScoped: extension.isApplicationScoped });\n\t\t};\n\n\t\tconst allTasks: IUninstallExtensionTask[] = [];\n\t\tconst processedTasks: IUninstallExtensionTask[] = [];\n\n\t\ttry {\n\t\t\tallTasks.push(createUninstallExtensionTask(extension, options));\n\t\t\tconst installed = await this.getInstalled(ExtensionType.User, options.profileLocation);\n\t\t\tif (options.donotIncludePack) {\n\t\t\t\tthis.logService.info('Uninstalling the extension without including packed extension', `${extension.identifier.id}@${extension.manifest.version}`);\n\t\t\t} else {\n\t\t\t\tconst packedExtensions = this.getAllPackExtensionsToUninstall(extension, installed);\n\t\t\t\tfor (const packedExtension of packedExtensions) {\n\t\t\t\t\tif (this.uninstallingExtensions.has(getUninstallExtensionTaskKey(packedExtension.identifier))) {\n\t\t\t\t\t\tthis.logService.info('Extensions is already requested to uninstall', packedExtension.identifier.id);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tallTasks.push(createUninstallExtensionTask(packedExtension, options));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (options.donotCheckDependents) {\n\t\t\t\tthis.logService.info('Uninstalling the extension without checking dependents', `${extension.identifier.id}@${extension.manifest.version}`);\n\t\t\t} else {\n\t\t\t\tthis.checkForDependents(allTasks.map(task => task.extension), installed, extension);\n\t\t\t}\n\n\t\t\t// Uninstall extensions in parallel and wait until all extensions are uninstalled / failed\n\t\t\tawait this.joinAllSettled(allTasks.map(async task => {\n\t\t\t\ttry {\n\t\t\t\t\tawait task.run();\n\t\t\t\t\tawait this.joinAllSettled(this.participants.map(participant => participant.postUninstall(task.extension, options, CancellationToken.None)));\n\t\t\t\t\t// only report if extension has a mapped gallery extension. UUID identifies the gallery extension.\n\t\t\t\t\tif (task.extension.identifier.uuid) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait this.galleryService.reportStatistic(task.extension.manifest.publisher, task.extension.manifest.name, task.extension.manifest.version, StatisticType.Uninstall);\n\t\t\t\t\t\t} catch (error) { /* ignore */ }\n\t\t\t\t\t}\n\t\t\t\t\tpostUninstallExtension(task.extension);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconst error = e instanceof ExtensionManagementError ? e : new ExtensionManagementError(getErrorMessage(e), ExtensionManagementErrorCode.Internal);\n\t\t\t\t\tpostUninstallExtension(task.extension, error);\n\t\t\t\t\tthrow error;\n\t\t\t\t} finally {\n\t\t\t\t\tprocessedTasks.push(task);\n\t\t\t\t}\n\t\t\t}));\n\n\t\t} catch (e) {\n\t\t\tconst error = e instanceof ExtensionManagementError ? e : new ExtensionManagementError(getErrorMessage(e), ExtensionManagementErrorCode.Internal);\n\t\t\tfor (const task of allTasks) {\n\t\t\t\t// cancel the tasks\n\t\t\t\ttry { task.cancel(); } catch (error) { /* ignore */ }\n\t\t\t\tif (!processedTasks.includes(task)) {\n\t\t\t\t\tpostUninstallExtension(task.extension, error);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow error;\n\t\t} finally {\n\t\t\t// Remove tasks from cache\n\t\t\tfor (const task of allTasks) {\n\t\t\t\tif (!this.uninstallingExtensions.delete(getUninstallExtensionTaskKey(task.extension.identifier))) {\n\t\t\t\t\tthis.logService.warn('Uninstallation task is not found in the cache', task.extension.identifier.id);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate checkForDependents(extensionsToUninstall: ILocalExtension[], installed: ILocalExtension[], extensionToUninstall: ILocalExtension): void {\n\t\tfor (const extension of extensionsToUninstall) {\n\t\t\tconst dependents = this.getDependents(extension, installed);\n\t\t\tif (dependents.length) {\n\t\t\t\tconst remainingDependents = dependents.filter(dependent => !extensionsToUninstall.some(e => areSameExtensions(e.identifier, dependent.identifier)));\n\t\t\t\tif (remainingDependents.length) {\n\t\t\t\t\tthrow new Error(this.getDependentsErrorMessage(extension, remainingDependents, extensionToUninstall));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getDependentsErrorMessage(dependingExtension: ILocalExtension, dependents: ILocalExtension[], extensionToUninstall: ILocalExtension): string {\n\t\tif (extensionToUninstall === dependingExtension) {\n\t\t\tif (dependents.length === 1) {\n\t\t\t\treturn nls.localize('singleDependentError', \"Cannot uninstall '{0}' extension. '{1}' extension depends on this.\",\n\t\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name);\n\t\t\t}\n\t\t\tif (dependents.length === 2) {\n\t\t\t\treturn nls.localize('twoDependentsError', \"Cannot uninstall '{0}' extension. '{1}' and '{2}' extensions depend on this.\",\n\t\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t\t\t}\n\t\t\treturn nls.localize('multipleDependentsError', \"Cannot uninstall '{0}' extension. '{1}', '{2}' and other extension depend on this.\",\n\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t\t}\n\t\tif (dependents.length === 1) {\n\t\t\treturn nls.localize('singleIndirectDependentError', \"Cannot uninstall '{0}' extension . It includes uninstalling '{1}' extension and '{2}' extension depends on this.\",\n\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependingExtension.manifest.displayName\n\t\t\t|| dependingExtension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name);\n\t\t}\n\t\tif (dependents.length === 2) {\n\t\t\treturn nls.localize('twoIndirectDependentsError', \"Cannot uninstall '{0}' extension. It includes uninstalling '{1}' extension and '{2}' and '{3}' extensions depend on this.\",\n\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependingExtension.manifest.displayName\n\t\t\t|| dependingExtension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t\t}\n\t\treturn nls.localize('multipleIndirectDependentsError', \"Cannot uninstall '{0}' extension. It includes uninstalling '{1}' extension and '{2}', '{3}' and other extensions depend on this.\",\n\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependingExtension.manifest.displayName\n\t\t|| dependingExtension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\n\t}\n\n\tprivate getAllPackExtensionsToUninstall(extension: ILocalExtension, installed: ILocalExtension[], checked: ILocalExtension[] = []): ILocalExtension[] {\n\t\tif (checked.indexOf(extension) !== -1) {\n\t\t\treturn [];\n\t\t}\n\t\tchecked.push(extension);\n\t\tconst extensionsPack = extension.manifest.extensionPack ? extension.manifest.extensionPack : [];\n\t\tif (extensionsPack.length) {\n\t\t\tconst packedExtensions = installed.filter(i => !i.isBuiltin && extensionsPack.some(id => areSameExtensions({ id }, i.identifier)));\n\t\t\tconst packOfPackedExtensions: ILocalExtension[] = [];\n\t\t\tfor (const packedExtension of packedExtensions) {\n\t\t\t\tpackOfPackedExtensions.push(...this.getAllPackExtensionsToUninstall(packedExtension, installed, checked));\n\t\t\t}\n\t\t\treturn [...packedExtensions, ...packOfPackedExtensions];\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate getDependents(extension: ILocalExtension, installed: ILocalExtension[]): ILocalExtension[] {\n\t\treturn installed.filter(e => e.manifest.extensionDependencies && e.manifest.extensionDependencies.some(id => areSameExtensions({ id }, extension.identifier)));\n\t}\n\n\tprivate async updateControlCache(): Promise<IExtensionsControlManifest> {\n\t\ttry {\n\t\t\tthis.logService.trace('ExtensionManagementService.refreshReportedCache');\n\t\t\tconst manifest = await this.galleryService.getExtensionsControlManifest();\n\t\t\tthis.logService.trace(`ExtensionManagementService.refreshControlCache`, manifest);\n\t\t\treturn manifest;\n\t\t} catch (err) {\n\t\t\tthis.logService.trace('ExtensionManagementService.refreshControlCache - failed to get extension control manifest');\n\t\t\treturn { malicious: [], deprecated: {} };\n\t\t}\n\t}\n\n\tprivate createInstallExtensionTask(manifest: IExtensionManifest, extension: URI | IGalleryExtension, options: ServerInstallOptions & ServerInstallVSIXOptions): IInstallExtensionTask {\n\t\tif (options.profileLocation && isApplicationScopedExtension(manifest)) {\n\t\t\toptions = { ...options, profileLocation: this.userDataProfilesService.defaultProfile.extensionsResource };\n\t\t}\n\t\treturn this.doCreateInstallExtensionTask(manifest, extension, options);\n\t}\n\n\tprivate createUninstallExtensionTask(extension: ILocalExtension, options: ServerUninstallOptions): IUninstallExtensionTask {\n\t\tif (options.profileLocation && extension.isApplicationScoped) {\n\t\t\toptions = { ...options, profileLocation: this.userDataProfilesService.defaultProfile.extensionsResource };\n\t\t}\n\t\treturn this.doCreateUninstallExtensionTask(extension, options);\n\t}\n\n\tabstract getTargetPlatform(): Promise<TargetPlatform>;\n\tabstract zip(extension: ILocalExtension): Promise<URI>;\n\tabstract unzip(zipLocation: URI): Promise<IExtensionIdentifier>;\n\tabstract getManifest(vsix: URI): Promise<IExtensionManifest>;\n\tabstract install(vsix: URI, options?: ServerInstallVSIXOptions): Promise<ILocalExtension>;\n\tabstract getInstalled(type?: ExtensionType, profileLocation?: URI): Promise<ILocalExtension[]>;\n\n\tabstract getMetadata(extension: ILocalExtension): Promise<Metadata | undefined>;\n\tabstract updateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension>;\n\tabstract updateExtensionScope(local: ILocalExtension, isMachineScoped: boolean): Promise<ILocalExtension>;\n\n\tprotected abstract doCreateInstallExtensionTask(manifest: IExtensionManifest, extension: URI | IGalleryExtension, options: ServerInstallOptions & ServerInstallVSIXOptions): IInstallExtensionTask;\n\tprotected abstract doCreateUninstallExtensionTask(extension: ILocalExtension, options: ServerUninstallOptions): IUninstallExtensionTask;\n}\n\nexport function joinErrors(errorOrErrors: (Error | string) | (Array<Error | string>)): Error {\n\tconst errors = Array.isArray(errorOrErrors) ? errorOrErrors : [errorOrErrors];\n\tif (errors.length === 1) {\n\t\treturn errors[0] instanceof Error ? <Error>errors[0] : new Error(<string>errors[0]);\n\t}\n\treturn errors.reduce<Error>((previousValue: Error, currentValue: Error | string) => {\n\t\treturn new Error(`${previousValue.message}${previousValue.message ? ',' : ''}${currentValue instanceof Error ? currentValue.message : currentValue}`);\n\t}, new Error(''));\n}\n\nfunction toExtensionManagementError(error: Error): ExtensionManagementError {\n\tif (error instanceof ExtensionManagementError) {\n\t\treturn error;\n\t}\n\tconst e = new ExtensionManagementError(error.message, ExtensionManagementErrorCode.Internal);\n\te.stack = error.stack;\n\treturn e;\n}\n\nexport function reportTelemetry(telemetryService: ITelemetryService, eventName: string, { extensionData, duration, error, durationSinceUpdate }: { extensionData: any; duration?: number; durationSinceUpdate?: number; error?: Error }): void {\n\tconst errorcode = error ? error instanceof ExtensionManagementError ? error.code : ExtensionManagementErrorCode.Internal : undefined;\n\t/* __GDPR__\n\t\t\"extensionGallery:install\" : {\n\t\t\t\"owner\": \"sandy081\",\n\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\"durationSinceUpdate\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\"recommendationReason\": { \"retiredFromVersion\": \"1.23.0\", \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\"${include}\": [\n\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t]\n\t\t}\n\t*/\n\t/* __GDPR__\n\t\t\"extensionGallery:uninstall\" : {\n\t\t\t\"owner\": \"sandy081\",\n\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\"${include}\": [\n\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t]\n\t\t}\n\t*/\n\t/* __GDPR__\n\t\t\"extensionGallery:update\" : {\n\t\t\t\"owner\": \"sandy081\",\n\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\"${include}\": [\n\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t]\n\t\t}\n\t*/\n\ttelemetryService.publicLog(eventName, { ...extensionData, success: !error, duration, errorcode, durationSinceUpdate });\n}\n\nexport abstract class AbstractExtensionTask<T> {\n\n\tprivate readonly barrier = new Barrier();\n\tprivate cancellablePromise: CancelablePromise<T> | undefined;\n\n\tasync waitUntilTaskIsFinished(): Promise<T> {\n\t\tawait this.barrier.wait();\n\t\treturn this.cancellablePromise!;\n\t}\n\n\tasync run(): Promise<T> {\n\t\tif (!this.cancellablePromise) {\n\t\t\tthis.cancellablePromise = createCancelablePromise(token => this.doRun(token));\n\t\t}\n\t\tthis.barrier.open();\n\t\treturn this.cancellablePromise;\n\t}\n\n\tcancel(): void {\n\t\tif (!this.cancellablePromise) {\n\t\t\tthis.cancellablePromise = createCancelablePromise(token => {\n\t\t\t\treturn new Promise((c, e) => {\n\t\t\t\t\tconst disposable = token.onCancellationRequested(() => {\n\t\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\t\te(new CancellationError());\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t\tthis.barrier.open();\n\t\t}\n\t\tthis.cancellablePromise.cancel();\n\t}\n\n\tprotected abstract doRun(token: CancellationToken): Promise<T>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { coalesce } from 'vs/base/common/arrays';\nimport { ThrottledDelayer } from 'vs/base/common/async';\nimport * as objects from 'vs/base/common/objects';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { getErrorMessage } from 'vs/base/common/errors';\nimport { getNodeType, parse, ParseError } from 'vs/base/common/json';\nimport { getParseErrorMessage } from 'vs/base/common/jsonErrorMessages';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { FileAccess, Schemas } from 'vs/base/common/network';\nimport * as path from 'vs/base/common/path';\nimport * as platform from 'vs/base/common/platform';\nimport { basename, isEqual, joinPath } from 'vs/base/common/resources';\nimport * as semver from 'vs/base/common/semver/semver';\nimport Severity from 'vs/base/common/severity';\nimport { isArray, isEmptyObject, isObject, isString } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { Metadata } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions, computeTargetPlatform, ExtensionKey, getExtensionId, getGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ExtensionType, ExtensionIdentifier, IExtensionManifest, TargetPlatform, IExtensionIdentifier, IRelaxedExtensionManifest, UNDEFINED_PUBLISHER, IExtensionDescription, BUILTIN_MANIFEST_CACHE_FILE, USER_MANIFEST_CACHE_FILE, MANIFEST_CACHE_FOLDER } from 'vs/platform/extensions/common/extensions';\nimport { validateExtensionManifest } from 'vs/platform/extensions/common/extensionValidator';\nimport { FileOperationResult, IFileService, toFileOperationResult } from 'vs/platform/files/common/files';\nimport { createDecorator, IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { revive } from 'vs/base/common/marshalling';\nimport { IExtensionsProfileScannerService, IScannedProfileExtension } from 'vs/platform/extensionManagement/common/extensionsProfileScannerService';\nimport { IUserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { ILocalizedString } from 'vs/platform/action/common/action';\n\nexport type IScannedExtensionManifest = IRelaxedExtensionManifest & { __metadata?: Metadata };\n\ninterface IRelaxedScannedExtension {\n\ttype: ExtensionType;\n\tisBuiltin: boolean;\n\tidentifier: IExtensionIdentifier;\n\tmanifest: IRelaxedExtensionManifest;\n\tlocation: URI;\n\ttargetPlatform: TargetPlatform;\n\tmetadata: Metadata | undefined;\n\tisValid: boolean;\n\tvalidations: readonly [Severity, string][];\n}\n\nexport type IScannedExtension = Readonly<IRelaxedScannedExtension> & { manifest: IExtensionManifest };\n\nexport interface Translations {\n\t[id: string]: string;\n}\n\nexport namespace Translations {\n\texport function equals(a: Translations, b: Translations): boolean {\n\t\tif (a === b) {\n\t\t\treturn true;\n\t\t}\n\t\tconst aKeys = Object.keys(a);\n\t\tconst bKeys: Set<string> = new Set<string>();\n\t\tfor (const key of Object.keys(b)) {\n\t\t\tbKeys.add(key);\n\t\t}\n\t\tif (aKeys.length !== bKeys.size) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (const key of aKeys) {\n\t\t\tif (a[key] !== b[key]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tbKeys.delete(key);\n\t\t}\n\t\treturn bKeys.size === 0;\n\t}\n}\n\ninterface MessageBag {\n\t[key: string]: string | { message: string; comment: string[] };\n}\n\ninterface TranslationBundle {\n\tcontents: {\n\t\tpackage: MessageBag;\n\t};\n}\n\ninterface LocalizedMessages {\n\tvalues: MessageBag | undefined;\n\tdefault: URI | null;\n}\n\ninterface IBuiltInExtensionControl {\n\t[name: string]: 'marketplace' | 'disabled' | string;\n}\n\nexport type ScanOptions = {\n\treadonly profileLocation?: URI;\n\treadonly includeInvalid?: boolean;\n\treadonly includeAllVersions?: boolean;\n\treadonly includeUninstalled?: boolean;\n\treadonly checkControlFile?: boolean;\n\treadonly language?: string;\n\treadonly useCache?: boolean;\n};\n\nexport const IExtensionsScannerService = createDecorator<IExtensionsScannerService>('IExtensionsScannerService');\nexport interface IExtensionsScannerService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly systemExtensionsLocation: URI;\n\treadonly userExtensionsLocation: URI;\n\treadonly onDidChangeCache: Event<ExtensionType>;\n\n\tgetTargetPlatform(): Promise<TargetPlatform>;\n\n\tscanAllExtensions(systemScanOptions: ScanOptions, userScanOptions: ScanOptions): Promise<IScannedExtension[]>;\n\tscanSystemExtensions(scanOptions: ScanOptions): Promise<IScannedExtension[]>;\n\tscanUserExtensions(scanOptions: ScanOptions): Promise<IScannedExtension[]>;\n\tscanExtensionsUnderDevelopment(scanOptions: ScanOptions, existingExtensions: IScannedExtension[]): Promise<IScannedExtension[]>;\n\tscanExistingExtension(extensionLocation: URI, extensionType: ExtensionType, scanOptions: ScanOptions): Promise<IScannedExtension | null>;\n\tscanOneOrMultipleExtensions(extensionLocation: URI, extensionType: ExtensionType, scanOptions: ScanOptions): Promise<IScannedExtension[]>;\n\n\tscanMetadata(extensionLocation: URI): Promise<Metadata | undefined>;\n\tupdateMetadata(extensionLocation: URI, metadata: Partial<Metadata>): Promise<void>;\n}\n\nexport abstract class AbstractExtensionsScannerService extends Disposable implements IExtensionsScannerService {\n\n\treadonly _serviceBrand: undefined;\n\n\tprotected abstract getTranslations(language: string): Promise<Translations>;\n\n\tprivate readonly _onDidChangeCache = this._register(new Emitter<ExtensionType>());\n\treadonly onDidChangeCache = this._onDidChangeCache.event;\n\n\tprivate readonly obsoleteFile = joinPath(this.userExtensionsLocation, '.obsolete');\n\tprivate readonly systemExtensionsCachedScanner = this._register(this.instantiationService.createInstance(CachedExtensionsScanner, joinPath(this.cacheLocation, BUILTIN_MANIFEST_CACHE_FILE), this.obsoleteFile));\n\tprivate readonly userExtensionsCachedScanner = this._register(this.instantiationService.createInstance(CachedExtensionsScanner, joinPath(this.cacheLocation, USER_MANIFEST_CACHE_FILE), this.obsoleteFile));\n\tprivate readonly extensionsScanner = this._register(this.instantiationService.createInstance(ExtensionsScanner, this.obsoleteFile));\n\n\tconstructor(\n\t\treadonly systemExtensionsLocation: URI,\n\t\treadonly userExtensionsLocation: URI,\n\t\tprivate readonly extensionsControlLocation: URI,\n\t\tprivate readonly cacheLocation: URI,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IExtensionsProfileScannerService protected readonly extensionsProfileScannerService: IExtensionsProfileScannerService,\n\t\t@IFileService protected readonly fileService: IFileService,\n\t\t@ILogService protected readonly logService: ILogService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(this.systemExtensionsCachedScanner.onDidChangeCache(() => this._onDidChangeCache.fire(ExtensionType.System)));\n\t\tthis._register(this.userExtensionsCachedScanner.onDidChangeCache(() => this._onDidChangeCache.fire(ExtensionType.User)));\n\t}\n\n\tprivate _targetPlatformPromise: Promise<TargetPlatform> | undefined;\n\tgetTargetPlatform(): Promise<TargetPlatform> {\n\t\tif (!this._targetPlatformPromise) {\n\t\t\tthis._targetPlatformPromise = computeTargetPlatform(this.fileService, this.logService);\n\t\t}\n\t\treturn this._targetPlatformPromise;\n\t}\n\n\tasync scanAllExtensions(systemScanOptions: ScanOptions, userScanOptions: ScanOptions): Promise<IScannedExtension[]> {\n\t\tconst [system, user] = await Promise.all([\n\t\t\tthis.scanSystemExtensions(systemScanOptions),\n\t\t\tthis.scanUserExtensions(userScanOptions),\n\t\t]);\n\t\tconst development = await this.scanExtensionsUnderDevelopment(systemScanOptions, [...system, ...user]);\n\t\treturn this.dedupExtensions(system, user, development, await this.getTargetPlatform(), true);\n\t}\n\n\tasync scanSystemExtensions(scanOptions: ScanOptions): Promise<IScannedExtension[]> {\n\t\tconst promises: Promise<IRelaxedScannedExtension[]>[] = [];\n\t\tpromises.push(this.scanDefaultSystemExtensions(!!scanOptions.useCache, scanOptions.language));\n\t\tpromises.push(this.scanDevSystemExtensions(scanOptions.language, !!scanOptions.checkControlFile));\n\t\tconst [defaultSystemExtensions, devSystemExtensions] = await Promise.all(promises);\n\t\treturn this.applyScanOptions([...defaultSystemExtensions, ...devSystemExtensions], ExtensionType.System, scanOptions, false);\n\t}\n\n\tasync scanUserExtensions(scanOptions: ScanOptions): Promise<IScannedExtension[]> {\n\t\tthis.logService.trace('Started scanning user extensions');\n\t\tconst extensionsScannerInput = await this.createExtensionScannerInput(scanOptions.profileLocation ?? this.userExtensionsLocation, !!scanOptions.profileLocation, ExtensionType.User, !scanOptions.includeUninstalled, scanOptions.language);\n\t\tconst extensionsScanner = scanOptions.useCache && !extensionsScannerInput.devMode && extensionsScannerInput.excludeObsolete ? this.userExtensionsCachedScanner : this.extensionsScanner;\n\t\tlet extensions = await extensionsScanner.scanExtensions(extensionsScannerInput);\n\t\textensions = await this.applyScanOptions(extensions, ExtensionType.User, scanOptions, true);\n\t\tthis.logService.trace('Scanned user extensions:', extensions.length);\n\t\treturn extensions;\n\t}\n\n\tasync scanExtensionsUnderDevelopment(scanOptions: ScanOptions, existingExtensions: IScannedExtension[]): Promise<IScannedExtension[]> {\n\t\tif (this.environmentService.isExtensionDevelopment && this.environmentService.extensionDevelopmentLocationURI) {\n\t\t\tconst extensions = (await Promise.all(this.environmentService.extensionDevelopmentLocationURI.filter(extLoc => extLoc.scheme === Schemas.file)\n\t\t\t\t.map(async extensionDevelopmentLocationURI => {\n\t\t\t\t\tconst input = await this.createExtensionScannerInput(extensionDevelopmentLocationURI, false, ExtensionType.User, true, scanOptions.language, false /* do not validate */);\n\t\t\t\t\tconst extensions = await this.extensionsScanner.scanOneOrMultipleExtensions(input);\n\t\t\t\t\treturn extensions.map(extension => {\n\t\t\t\t\t\t// Override the extension type from the existing extensions\n\t\t\t\t\t\textension.type = existingExtensions.find(e => areSameExtensions(e.identifier, extension.identifier))?.type ?? extension.type;\n\t\t\t\t\t\t// Validate the extension\n\t\t\t\t\t\treturn this.extensionsScanner.validate(extension, input);\n\t\t\t\t\t});\n\t\t\t\t})))\n\t\t\t\t.flat();\n\t\t\treturn this.applyScanOptions(extensions, 'development', scanOptions, true);\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync scanExistingExtension(extensionLocation: URI, extensionType: ExtensionType, scanOptions: ScanOptions): Promise<IScannedExtension | null> {\n\t\tconst extensionsScannerInput = await this.createExtensionScannerInput(extensionLocation, false, extensionType, true, scanOptions.language);\n\t\tconst extension = await this.extensionsScanner.scanExtension(extensionsScannerInput);\n\t\tif (!extension) {\n\t\t\treturn null;\n\t\t}\n\t\tif (!scanOptions.includeInvalid && !extension.isValid) {\n\t\t\treturn null;\n\t\t}\n\t\treturn extension;\n\t}\n\n\tasync scanOneOrMultipleExtensions(extensionLocation: URI, extensionType: ExtensionType, scanOptions: ScanOptions): Promise<IScannedExtension[]> {\n\t\tconst extensionsScannerInput = await this.createExtensionScannerInput(extensionLocation, false, extensionType, true, scanOptions.language);\n\t\tconst extensions = await this.extensionsScanner.scanOneOrMultipleExtensions(extensionsScannerInput);\n\t\treturn this.applyScanOptions(extensions, extensionType, scanOptions, true);\n\t}\n\n\tasync scanMetadata(extensionLocation: URI): Promise<Metadata | undefined> {\n\t\tconst manifestLocation = joinPath(extensionLocation, 'package.json');\n\t\tconst content = (await this.fileService.readFile(manifestLocation)).value.toString();\n\t\tconst manifest: IScannedExtensionManifest = JSON.parse(content);\n\t\treturn manifest.__metadata;\n\t}\n\n\tasync updateMetadata(extensionLocation: URI, metaData: Partial<Metadata>): Promise<void> {\n\t\tconst manifestLocation = joinPath(extensionLocation, 'package.json');\n\t\tconst content = (await this.fileService.readFile(manifestLocation)).value.toString();\n\t\tconst manifest: IScannedExtensionManifest = JSON.parse(content);\n\n\t\t// unset if false\n\t\tmetaData.isMachineScoped = metaData.isMachineScoped || undefined;\n\t\tmetaData.isBuiltin = metaData.isBuiltin || undefined;\n\t\tmetaData.installedTimestamp = metaData.installedTimestamp || undefined;\n\t\tmanifest.__metadata = { ...manifest.__metadata, ...metaData };\n\n\t\tawait this.fileService.writeFile(joinPath(extensionLocation, 'package.json'), VSBuffer.fromString(JSON.stringify(manifest, null, '\\t')));\n\t}\n\n\tprivate async applyScanOptions(extensions: IRelaxedScannedExtension[], type: ExtensionType | 'development', scanOptions: ScanOptions, pickLatest: boolean): Promise<IRelaxedScannedExtension[]> {\n\t\tif (!scanOptions.includeAllVersions) {\n\t\t\textensions = this.dedupExtensions(type === ExtensionType.System ? extensions : undefined, type === ExtensionType.User ? extensions : undefined, type === 'development' ? extensions : undefined, await this.getTargetPlatform(), pickLatest);\n\t\t}\n\t\tif (!scanOptions.includeInvalid) {\n\t\t\textensions = extensions.filter(extension => extension.isValid);\n\t\t}\n\t\treturn extensions.sort((a, b) => {\n\t\t\tconst aLastSegment = path.basename(a.location.fsPath);\n\t\t\tconst bLastSegment = path.basename(b.location.fsPath);\n\t\t\tif (aLastSegment < bLastSegment) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (aLastSegment > bLastSegment) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn 0;\n\t\t});\n\t}\n\n\tprivate dedupExtensions(system: IScannedExtension[] | undefined, user: IScannedExtension[] | undefined, development: IScannedExtension[] | undefined, targetPlatform: TargetPlatform, pickLatest: boolean): IScannedExtension[] {\n\t\tconst pick = (existing: IScannedExtension, extension: IScannedExtension, isDevelopment: boolean): boolean => {\n\t\t\tif (existing.isValid && !extension.isValid) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (existing.isValid === extension.isValid) {\n\t\t\t\tif (pickLatest && semver.gt(existing.manifest.version, extension.manifest.version)) {\n\t\t\t\t\tthis.logService.debug(`Skipping extension ${extension.location.path} with lower version ${extension.manifest.version} in favour of ${existing.location.path} with version ${existing.manifest.version}`);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (semver.eq(existing.manifest.version, extension.manifest.version)) {\n\t\t\t\t\tif (existing.type === ExtensionType.System) {\n\t\t\t\t\t\tthis.logService.debug(`Skipping extension ${extension.location.path} in favour of system extension ${existing.location.path} with same version`);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif (existing.targetPlatform === targetPlatform) {\n\t\t\t\t\t\tthis.logService.debug(`Skipping extension ${extension.location.path} from different target platform ${extension.targetPlatform}`);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isDevelopment) {\n\t\t\t\tthis.logService.warn(`Overwriting user extension ${existing.location.path} with ${extension.location.path}.`);\n\t\t\t} else {\n\t\t\t\tthis.logService.debug(`Overwriting user extension ${existing.location.path} with ${extension.location.path}.`);\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\t\tconst result = new Map<string, IScannedExtension>();\n\t\tsystem?.forEach((extension) => {\n\t\t\tconst extensionKey = ExtensionIdentifier.toKey(extension.identifier.id);\n\t\t\tconst existing = result.get(extensionKey);\n\t\t\tif (!existing || pick(existing, extension, false)) {\n\t\t\t\tresult.set(extensionKey, extension);\n\t\t\t}\n\t\t});\n\t\tuser?.forEach((extension) => {\n\t\t\tconst extensionKey = ExtensionIdentifier.toKey(extension.identifier.id);\n\t\t\tconst existing = result.get(extensionKey);\n\t\t\tif (!existing && system && extension.type === ExtensionType.System) {\n\t\t\t\tthis.logService.debug(`Skipping obsolete system extension ${extension.location.path}.`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!existing || pick(existing, extension, false)) {\n\t\t\t\tresult.set(extensionKey, extension);\n\t\t\t}\n\t\t});\n\t\tdevelopment?.forEach(extension => {\n\t\t\tconst extensionKey = ExtensionIdentifier.toKey(extension.identifier.id);\n\t\t\tconst existing = result.get(extensionKey);\n\t\t\tif (!existing || pick(existing, extension, true)) {\n\t\t\t\tresult.set(extensionKey, extension);\n\t\t\t}\n\t\t\tresult.set(extensionKey, extension);\n\t\t});\n\t\treturn [...result.values()];\n\t}\n\n\tprivate async scanDefaultSystemExtensions(useCache: boolean, language: string | undefined): Promise<IRelaxedScannedExtension[]> {\n\t\tthis.logService.trace('Started scanning system extensions');\n\t\tconst extensionsScannerInput = await this.createExtensionScannerInput(this.systemExtensionsLocation, false, ExtensionType.System, true, language);\n\t\tconst extensionsScanner = useCache && !extensionsScannerInput.devMode ? this.systemExtensionsCachedScanner : this.extensionsScanner;\n\t\tconst result = await extensionsScanner.scanExtensions(extensionsScannerInput);\n\t\tthis.logService.trace('Scanned system extensions:', result.length);\n\t\treturn result;\n\t}\n\n\tprivate async scanDevSystemExtensions(language: string | undefined, checkControlFile: boolean): Promise<IRelaxedScannedExtension[]> {\n\t\tconst devSystemExtensionsList = this.environmentService.isBuilt ? [] : this.productService.builtInExtensions;\n\t\tif (!devSystemExtensionsList?.length) {\n\t\t\treturn [];\n\t\t}\n\n\t\tthis.logService.trace('Started scanning dev system extensions');\n\t\tconst builtinExtensionControl = checkControlFile ? await this.getBuiltInExtensionControl() : {};\n\t\tconst devSystemExtensionsLocations: URI[] = [];\n\t\tconst devSystemExtensionsLocation = URI.file(path.normalize(path.join(FileAccess.asFileUri('', require).fsPath, '..', '.build', 'builtInExtensions')));\n\t\tfor (const extension of devSystemExtensionsList) {\n\t\t\tconst controlState = builtinExtensionControl[extension.name] || 'marketplace';\n\t\t\tswitch (controlState) {\n\t\t\t\tcase 'disabled':\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'marketplace':\n\t\t\t\t\tdevSystemExtensionsLocations.push(joinPath(devSystemExtensionsLocation, extension.name));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tdevSystemExtensionsLocations.push(URI.file(controlState));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst result = await Promise.all(devSystemExtensionsLocations.map(async location => this.extensionsScanner.scanExtension((await this.createExtensionScannerInput(location, false, ExtensionType.System, true, language)))));\n\t\tthis.logService.trace('Scanned dev system extensions:', result.length);\n\t\treturn coalesce(result);\n\t}\n\n\tprivate async getBuiltInExtensionControl(): Promise<IBuiltInExtensionControl> {\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(this.extensionsControlLocation);\n\t\t\treturn JSON.parse(content.value.toString());\n\t\t} catch (error) {\n\t\t\treturn {};\n\t\t}\n\t}\n\n\tprivate async createExtensionScannerInput(location: URI, profile: boolean, type: ExtensionType, excludeObsolete: boolean, language: string | undefined, validate: boolean = true): Promise<ExtensionScannerInput> {\n\t\tconst translations = await this.getTranslations(language ?? platform.language);\n\t\tconst mtime = await this.getMtime(location);\n\t\tconst applicationExtensionsLocation = profile ? this.userDataProfilesService.defaultProfile.extensionsResource : undefined;\n\t\tconst applicationExtensionsLocationMtime = applicationExtensionsLocation ? await this.getMtime(applicationExtensionsLocation) : undefined;\n\t\treturn new ExtensionScannerInput(\n\t\t\tlocation,\n\t\t\tmtime,\n\t\t\tapplicationExtensionsLocation,\n\t\t\tapplicationExtensionsLocationMtime,\n\t\t\tprofile,\n\t\t\ttype,\n\t\t\texcludeObsolete,\n\t\t\tvalidate,\n\t\t\tthis.productService.version,\n\t\t\tthis.productService.date,\n\t\t\tthis.productService.commit,\n\t\t\t!this.environmentService.isBuilt,\n\t\t\tlanguage,\n\t\t\ttranslations,\n\t\t);\n\t}\n\n\tprivate async getMtime(location: URI): Promise<number | undefined> {\n\t\ttry {\n\t\t\tconst stat = await this.fileService.stat(location);\n\t\t\tif (typeof stat.mtime === 'number') {\n\t\t\t\treturn stat.mtime;\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t// That's ok...\n\t\t}\n\t\treturn undefined;\n\t}\n\n}\n\nclass ExtensionScannerInput {\n\n\tconstructor(\n\t\tpublic readonly location: URI,\n\t\tpublic readonly mtime: number | undefined,\n\t\tpublic readonly applicationExtensionslocation: URI | undefined,\n\t\tpublic readonly applicationExtensionslocationMtime: number | undefined,\n\t\tpublic readonly profile: boolean,\n\t\tpublic readonly type: ExtensionType,\n\t\tpublic readonly excludeObsolete: boolean,\n\t\tpublic readonly validate: boolean,\n\t\tpublic readonly productVersion: string,\n\t\tpublic readonly productDate: string | undefined,\n\t\tpublic readonly productCommit: string | undefined,\n\t\tpublic readonly devMode: boolean,\n\t\tpublic readonly language: string | undefined,\n\t\tpublic readonly translations: Translations\n\t) {\n\t\t// Keep empty!! (JSON.parse)\n\t}\n\n\tpublic static createNlsConfiguration(input: ExtensionScannerInput): NlsConfiguration {\n\t\treturn {\n\t\t\tlanguage: input.language,\n\t\t\tpseudo: input.language === 'pseudo',\n\t\t\tdevMode: input.devMode,\n\t\t\ttranslations: input.translations\n\t\t};\n\t}\n\n\tpublic static equals(a: ExtensionScannerInput, b: ExtensionScannerInput): boolean {\n\t\treturn (\n\t\t\tisEqual(a.location, b.location)\n\t\t\t&& a.mtime === b.mtime\n\t\t\t&& isEqual(a.applicationExtensionslocation, b.applicationExtensionslocation)\n\t\t\t&& a.applicationExtensionslocationMtime === b.applicationExtensionslocationMtime\n\t\t\t&& a.profile === b.profile\n\t\t\t&& a.type === b.type\n\t\t\t&& a.excludeObsolete === b.excludeObsolete\n\t\t\t&& a.validate === b.validate\n\t\t\t&& a.productVersion === b.productVersion\n\t\t\t&& a.productDate === b.productDate\n\t\t\t&& a.productCommit === b.productCommit\n\t\t\t&& a.devMode === b.devMode\n\t\t\t&& a.language === b.language\n\t\t\t&& Translations.equals(a.translations, b.translations)\n\t\t);\n\t}\n}\n\ntype NlsConfiguration = {\n\tlanguage: string | undefined;\n\tpseudo: boolean;\n\tdevMode: boolean;\n\ttranslations: Translations;\n};\n\nclass ExtensionsScanner extends Disposable {\n\n\tconstructor(\n\t\tprivate readonly obsoleteFile: URI,\n\t\t@IExtensionsProfileScannerService protected readonly extensionsProfileScannerService: IExtensionsProfileScannerService,\n\t\t@IUriIdentityService protected readonly uriIdentityService: IUriIdentityService,\n\t\t@IFileService protected readonly fileService: IFileService,\n\t\t@ILogService protected readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t}\n\n\tasync scanExtensions(input: ExtensionScannerInput): Promise<IRelaxedScannedExtension[]> {\n\t\tconst extensions = input.profile ? await this.scanExtensionsFromProfile(input) : await this.scanExtensionsFromLocation(input);\n\t\tlet obsolete: IStringDictionary<boolean> = {};\n\t\tif (input.excludeObsolete && input.type === ExtensionType.User) {\n\t\t\ttry {\n\t\t\t\tconst raw = (await this.fileService.readFile(this.obsoleteFile)).value.toString();\n\t\t\t\tobsolete = JSON.parse(raw);\n\t\t\t} catch (error) { /* ignore */ }\n\t\t}\n\t\treturn isEmptyObject(obsolete) ? extensions : extensions.filter(e => !obsolete[ExtensionKey.create(e).toString()]);\n\t}\n\n\tprivate async scanExtensionsFromLocation(input: ExtensionScannerInput): Promise<IRelaxedScannedExtension[]> {\n\t\tconst stat = await this.fileService.resolve(input.location);\n\t\tif (!stat.children?.length) {\n\t\t\treturn [];\n\t\t}\n\t\tconst extensions = await Promise.all<IRelaxedScannedExtension | null>(\n\t\t\tstat.children.map(async c => {\n\t\t\t\tif (!c.isDirectory) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\t// Do not consider user extension folder starting with `.`\n\t\t\t\tif (input.type === ExtensionType.User && basename(c.resource).indexOf('.') === 0) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tconst extensionScannerInput = new ExtensionScannerInput(c.resource, input.mtime, input.applicationExtensionslocation, input.applicationExtensionslocationMtime, input.profile, input.type, input.excludeObsolete, input.validate, input.productVersion, input.productDate, input.productCommit, input.devMode, input.language, input.translations);\n\t\t\t\treturn this.scanExtension(extensionScannerInput);\n\t\t\t}));\n\t\treturn coalesce(extensions)\n\t\t\t// Sort: Make sure extensions are in the same order always. Helps cache invalidation even if the order changes.\n\t\t\t.sort((a, b) => a.location.path < b.location.path ? -1 : 1);\n\t}\n\n\tprivate async scanExtensionsFromProfile(input: ExtensionScannerInput): Promise<IRelaxedScannedExtension[]> {\n\t\tlet profileExtensions = await this.scanExtensionsFromProfileResource(input.location, () => true, input);\n\t\tif (input.applicationExtensionslocation && !this.uriIdentityService.extUri.isEqual(input.location, input.applicationExtensionslocation)) {\n\t\t\tprofileExtensions = profileExtensions.filter(e => !e.metadata?.isApplicationScoped);\n\t\t\tconst applicationExtensions = await this.scanExtensionsFromProfileResource(input.applicationExtensionslocation, (e) => !!e.metadata?.isApplicationScoped, input);\n\t\t\tprofileExtensions.push(...applicationExtensions);\n\t\t}\n\t\treturn profileExtensions;\n\t}\n\n\tprivate async scanExtensionsFromProfileResource(profileResource: URI, filter: (extensionInfo: IScannedProfileExtension) => boolean, input: ExtensionScannerInput): Promise<IRelaxedScannedExtension[]> {\n\t\tconst scannedProfileExtensions = await this.extensionsProfileScannerService.scanProfileExtensions(profileResource);\n\t\tif (!scannedProfileExtensions.length) {\n\t\t\treturn [];\n\t\t}\n\t\tconst extensions = await Promise.all<IRelaxedScannedExtension | null>(\n\t\t\tscannedProfileExtensions.map(async extensionInfo => {\n\t\t\t\tif (filter(extensionInfo)) {\n\t\t\t\t\tconst extensionScannerInput = new ExtensionScannerInput(extensionInfo.location, input.mtime, input.applicationExtensionslocation, input.applicationExtensionslocationMtime, input.profile, input.type, input.excludeObsolete, input.validate, input.productVersion, input.productDate, input.productCommit, input.devMode, input.language, input.translations);\n\t\t\t\t\treturn this.scanExtension(extensionScannerInput, extensionInfo.metadata);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}));\n\t\treturn coalesce(extensions);\n\t}\n\n\tasync scanOneOrMultipleExtensions(input: ExtensionScannerInput): Promise<IRelaxedScannedExtension[]> {\n\t\ttry {\n\t\t\tif (await this.fileService.exists(joinPath(input.location, 'package.json'))) {\n\t\t\t\tconst extension = await this.scanExtension(input);\n\t\t\t\treturn extension ? [extension] : [];\n\t\t\t} else {\n\t\t\t\treturn await this.scanExtensions(input);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.logService.error(`Error scanning extensions at ${input.location.path}:`, getErrorMessage(error));\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tasync scanExtension(input: ExtensionScannerInput, metadata?: Metadata): Promise<IRelaxedScannedExtension | null> {\n\t\ttry {\n\t\t\tlet manifest = await this.scanExtensionManifest(input.location);\n\t\t\tif (manifest) {\n\t\t\t\t// allow publisher to be undefined to make the initial extension authoring experience smoother\n\t\t\t\tif (!manifest.publisher) {\n\t\t\t\t\tmanifest.publisher = UNDEFINED_PUBLISHER;\n\t\t\t\t}\n\t\t\t\tmetadata = metadata ?? manifest.__metadata;\n\t\t\t\tdelete manifest.__metadata;\n\t\t\t\tconst id = getGalleryExtensionId(manifest.publisher, manifest.name);\n\t\t\t\tconst identifier = metadata?.id ? { id, uuid: metadata.id } : { id };\n\t\t\t\tconst type = metadata?.isSystem ? ExtensionType.System : input.type;\n\t\t\t\tconst isBuiltin = type === ExtensionType.System || !!metadata?.isBuiltin;\n\t\t\t\tmanifest = await this.translateManifest(input.location, manifest, ExtensionScannerInput.createNlsConfiguration(input));\n\t\t\t\tconst extension = {\n\t\t\t\t\ttype,\n\t\t\t\t\tidentifier,\n\t\t\t\t\tmanifest,\n\t\t\t\t\tlocation: input.location,\n\t\t\t\t\tisBuiltin,\n\t\t\t\t\ttargetPlatform: metadata?.targetPlatform ?? TargetPlatform.UNDEFINED,\n\t\t\t\t\tmetadata,\n\t\t\t\t\tisValid: true,\n\t\t\t\t\tvalidations: []\n\t\t\t\t};\n\t\t\t\treturn input.validate ? this.validate(extension, input) : extension;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tif (input.type !== ExtensionType.System) {\n\t\t\t\tthis.logService.error(e);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tvalidate(extension: IRelaxedScannedExtension, input: ExtensionScannerInput): IRelaxedScannedExtension {\n\t\tlet isValid = true;\n\t\tconst validations = validateExtensionManifest(input.productVersion, input.productDate, input.location, extension.manifest, extension.isBuiltin);\n\t\tfor (const [severity, message] of validations) {\n\t\t\tif (severity === Severity.Error) {\n\t\t\t\tisValid = false;\n\t\t\t\tthis.logService.error(this.formatMessage(input.location, message));\n\t\t\t}\n\t\t}\n\t\textension.isValid = isValid;\n\t\textension.validations = validations;\n\t\treturn extension;\n\t}\n\n\tasync scanExtensionManifest(extensionLocation: URI): Promise<IScannedExtensionManifest | null> {\n\t\tconst manifestLocation = joinPath(extensionLocation, 'package.json');\n\t\tlet content;\n\t\ttry {\n\t\t\tcontent = (await this.fileService.readFile(manifestLocation)).value.toString();\n\t\t} catch (error) {\n\t\t\tif (toFileOperationResult(error) !== FileOperationResult.FILE_NOT_FOUND) {\n\t\t\t\tthis.logService.error(this.formatMessage(extensionLocation, localize('fileReadFail', \"Cannot read file {0}: {1}.\", manifestLocation.path, error.message)));\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\tlet manifest: IScannedExtensionManifest;\n\t\ttry {\n\t\t\tmanifest = JSON.parse(content);\n\t\t} catch (err) {\n\t\t\t// invalid JSON, let's get good errors\n\t\t\tconst errors: ParseError[] = [];\n\t\t\tparse(content, errors);\n\t\t\tfor (const e of errors) {\n\t\t\t\tthis.logService.error(this.formatMessage(extensionLocation, localize('jsonParseFail', \"Failed to parse {0}: [{1}, {2}] {3}.\", manifestLocation.path, e.offset, e.length, getParseErrorMessage(e.error))));\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\tif (getNodeType(manifest) !== 'object') {\n\t\t\tthis.logService.error(this.formatMessage(extensionLocation, localize('jsonParseInvalidType', \"Invalid manifest file {0}: Not an JSON object.\", manifestLocation.path)));\n\t\t\treturn null;\n\t\t}\n\t\treturn manifest;\n\t}\n\n\tprivate async translateManifest(extensionLocation: URI, extensionManifest: IExtensionManifest, nlsConfiguration: NlsConfiguration): Promise<IExtensionManifest> {\n\t\tconst localizedMessages = await this.getLocalizedMessages(extensionLocation, extensionManifest, nlsConfiguration);\n\t\tif (localizedMessages) {\n\t\t\ttry {\n\t\t\t\tconst errors: ParseError[] = [];\n\t\t\t\t// resolveOriginalMessageBundle returns null if localizedMessages.default === undefined;\n\t\t\t\tconst defaults = await this.resolveOriginalMessageBundle(localizedMessages.default, errors);\n\t\t\t\tif (errors.length > 0) {\n\t\t\t\t\terrors.forEach((error) => {\n\t\t\t\t\t\tthis.logService.error(this.formatMessage(extensionLocation, localize('jsonsParseReportErrors', \"Failed to parse {0}: {1}.\", localizedMessages.default?.path, getParseErrorMessage(error.error))));\n\t\t\t\t\t});\n\t\t\t\t\treturn extensionManifest;\n\t\t\t\t} else if (getNodeType(localizedMessages) !== 'object') {\n\t\t\t\t\tthis.logService.error(this.formatMessage(extensionLocation, localize('jsonInvalidFormat', \"Invalid format {0}: JSON object expected.\", localizedMessages.default?.path)));\n\t\t\t\t\treturn extensionManifest;\n\t\t\t\t}\n\t\t\t\tconst localized = localizedMessages.values || Object.create(null);\n\t\t\t\tthis.replaceNLStrings(nlsConfiguration.pseudo, extensionManifest, localized, defaults, extensionLocation);\n\t\t\t} catch (error) {\n\t\t\t\t/*Ignore Error*/\n\t\t\t}\n\t\t}\n\t\treturn extensionManifest;\n\t}\n\n\tprivate async getLocalizedMessages(extensionLocation: URI, extensionManifest: IExtensionManifest, nlsConfiguration: NlsConfiguration): Promise<LocalizedMessages | undefined> {\n\t\tconst defaultPackageNLS = joinPath(extensionLocation, 'package.nls.json');\n\t\tconst reportErrors = (localized: URI | null, errors: ParseError[]): void => {\n\t\t\terrors.forEach((error) => {\n\t\t\t\tthis.logService.error(this.formatMessage(extensionLocation, localize('jsonsParseReportErrors', \"Failed to parse {0}: {1}.\", localized?.path, getParseErrorMessage(error.error))));\n\t\t\t});\n\t\t};\n\t\tconst reportInvalidFormat = (localized: URI | null): void => {\n\t\t\tthis.logService.error(this.formatMessage(extensionLocation, localize('jsonInvalidFormat', \"Invalid format {0}: JSON object expected.\", localized?.path)));\n\t\t};\n\n\t\tconst translationId = `${extensionManifest.publisher}.${extensionManifest.name}`;\n\t\tconst translationPath = nlsConfiguration.translations[translationId];\n\n\t\tif (translationPath) {\n\t\t\ttry {\n\t\t\t\tconst translationResource = URI.file(translationPath);\n\t\t\t\tconst content = (await this.fileService.readFile(translationResource)).value.toString();\n\t\t\t\tconst errors: ParseError[] = [];\n\t\t\t\tconst translationBundle: TranslationBundle = parse(content, errors);\n\t\t\t\tif (errors.length > 0) {\n\t\t\t\t\treportErrors(translationResource, errors);\n\t\t\t\t\treturn { values: undefined, default: defaultPackageNLS };\n\t\t\t\t} else if (getNodeType(translationBundle) !== 'object') {\n\t\t\t\t\treportInvalidFormat(translationResource);\n\t\t\t\t\treturn { values: undefined, default: defaultPackageNLS };\n\t\t\t\t} else {\n\t\t\t\t\tconst values = translationBundle.contents ? translationBundle.contents.package : undefined;\n\t\t\t\t\treturn { values: values, default: defaultPackageNLS };\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\treturn { values: undefined, default: defaultPackageNLS };\n\t\t\t}\n\t\t} else {\n\t\t\tconst exists = await this.fileService.exists(defaultPackageNLS);\n\t\t\tif (!exists) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tlet messageBundle;\n\t\t\ttry {\n\t\t\t\tmessageBundle = await this.findMessageBundles(extensionLocation, nlsConfiguration);\n\t\t\t} catch (error) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tif (!messageBundle.localized) {\n\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tconst messageBundleContent = (await this.fileService.readFile(messageBundle.localized)).value.toString();\n\t\t\t\tconst errors: ParseError[] = [];\n\t\t\t\tconst messages: MessageBag = parse(messageBundleContent, errors);\n\t\t\t\tif (errors.length > 0) {\n\t\t\t\t\treportErrors(messageBundle.localized, errors);\n\t\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t\t} else if (getNodeType(messages) !== 'object') {\n\t\t\t\t\treportInvalidFormat(messageBundle.localized);\n\t\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t\t}\n\t\t\t\treturn { values: messages, default: messageBundle.original };\n\t\t\t} catch (error) {\n\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Parses original message bundle, returns null if the original message bundle is null.\n\t */\n\tprivate async resolveOriginalMessageBundle(originalMessageBundle: URI | null, errors: ParseError[]): Promise<{ [key: string]: string } | null> {\n\t\tif (originalMessageBundle) {\n\t\t\ttry {\n\t\t\t\tconst originalBundleContent = (await this.fileService.readFile(originalMessageBundle)).value.toString();\n\t\t\t\treturn parse(originalBundleContent, errors);\n\t\t\t} catch (error) {\n\t\t\t\t/* Ignore Error */\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Finds localized message bundle and the original (unlocalized) one.\n\t * If the localized file is not present, returns null for the original and marks original as localized.\n\t */\n\tprivate findMessageBundles(extensionLocation: URI, nlsConfiguration: NlsConfiguration): Promise<{ localized: URI; original: URI | null }> {\n\t\treturn new Promise<{ localized: URI; original: URI | null }>((c, e) => {\n\t\t\tconst loop = (locale: string): void => {\n\t\t\t\tconst toCheck = joinPath(extensionLocation, `package.nls.${locale}.json`);\n\t\t\t\tthis.fileService.exists(toCheck).then(exists => {\n\t\t\t\t\tif (exists) {\n\t\t\t\t\t\tc({ localized: toCheck, original: joinPath(extensionLocation, 'package.nls.json') });\n\t\t\t\t\t}\n\t\t\t\t\tconst index = locale.lastIndexOf('-');\n\t\t\t\t\tif (index === -1) {\n\t\t\t\t\t\tc({ localized: joinPath(extensionLocation, 'package.nls.json'), original: null });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlocale = locale.substring(0, index);\n\t\t\t\t\t\tloop(locale);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\t\t\tif (nlsConfiguration.devMode || nlsConfiguration.pseudo || !nlsConfiguration.language) {\n\t\t\t\treturn c({ localized: joinPath(extensionLocation, 'package.nls.json'), original: null });\n\t\t\t}\n\t\t\tloop(nlsConfiguration.language);\n\t\t});\n\t}\n\n\t/**\n\t * This routine makes the following assumptions:\n\t * The root element is an object literal\n\t */\n\tprivate replaceNLStrings<T extends object>(pseudo: boolean, literal: T, messages: MessageBag, originalMessages: MessageBag | null, extensionLocation: URI): void {\n\t\tconst processEntry = (obj: any, key: string | number, command?: boolean) => {\n\t\t\tconst value = obj[key];\n\t\t\tif (isString(value)) {\n\t\t\t\tconst str = <string>value;\n\t\t\t\tconst length = str.length;\n\t\t\t\tif (length > 1 && str[0] === '%' && str[length - 1] === '%') {\n\t\t\t\t\tconst messageKey = str.substr(1, length - 2);\n\t\t\t\t\tlet translated = messages[messageKey];\n\t\t\t\t\t// If the messages come from a language pack they might miss some keys\n\t\t\t\t\t// Fill them from the original messages.\n\t\t\t\t\tif (translated === undefined && originalMessages) {\n\t\t\t\t\t\ttranslated = originalMessages[messageKey];\n\t\t\t\t\t}\n\t\t\t\t\tlet message: string | undefined = typeof translated === 'string' ? translated : translated.message;\n\t\t\t\t\tif (message !== undefined) {\n\t\t\t\t\t\tif (pseudo) {\n\t\t\t\t\t\t\t// FF3B and FF3D is the Unicode zenkaku representation for [ and ]\n\t\t\t\t\t\t\tmessage = '\\uFF3B' + message.replace(/[aouei]/g, '$&$&') + '\\uFF3D';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// This branch returns ILocalizedString's instead of Strings so that the Command Palette can contain both the localized and the original value.\n\t\t\t\t\t\tif (command && originalMessages && (key === 'title' || key === 'category')) {\n\t\t\t\t\t\t\tconst originalMessage = originalMessages[messageKey];\n\t\t\t\t\t\t\tconst localizedString: ILocalizedString = {\n\t\t\t\t\t\t\t\tvalue: message,\n\t\t\t\t\t\t\t\toriginal: typeof originalMessage === 'string' ? originalMessage : originalMessage?.message\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tobj[key] = localizedString;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tobj[key] = message;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.logService.warn(this.formatMessage(extensionLocation, localize('missingNLSKey', \"Couldn't find message for key {0}.\", messageKey)));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (isObject(value)) {\n\t\t\t\tfor (const k in value) {\n\t\t\t\t\tif (value.hasOwnProperty(k)) {\n\t\t\t\t\t\tk === 'commands' ? processEntry(value, k, true) : processEntry(value, k, command);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (isArray(value)) {\n\t\t\t\tfor (let i = 0; i < value.length; i++) {\n\t\t\t\t\tprocessEntry(value, i, command);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tfor (const key in literal) {\n\t\t\tif (literal.hasOwnProperty(key)) {\n\t\t\t\tprocessEntry(literal, key);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate formatMessage(extensionLocation: URI, message: string): string {\n\t\treturn `[${extensionLocation.path}]: ${message}`;\n\t}\n\n}\n\ninterface IExtensionCacheData {\n\tinput: ExtensionScannerInput;\n\tresult: IRelaxedScannedExtension[];\n}\n\nclass CachedExtensionsScanner extends ExtensionsScanner {\n\n\tprivate input: ExtensionScannerInput | undefined;\n\tprivate readonly cacheValidatorThrottler: ThrottledDelayer<void> = this._register(new ThrottledDelayer(3000));\n\n\tprivate readonly _onDidChangeCache = this._register(new Emitter<void>());\n\treadonly onDidChangeCache = this._onDidChangeCache.event;\n\n\tconstructor(\n\t\tprivate readonly cacheFile: URI,\n\t\tobsoleteFile: URI,\n\t\t@IExtensionsProfileScannerService extensionsProfileScannerService: IExtensionsProfileScannerService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t\t@IFileService fileService: IFileService,\n\t\t@ILogService logService: ILogService\n\t) {\n\t\tsuper(obsoleteFile, extensionsProfileScannerService, uriIdentityService, fileService, logService);\n\t}\n\n\toverride async scanExtensions(input: ExtensionScannerInput): Promise<IRelaxedScannedExtension[]> {\n\t\tconst cacheContents = await this.readExtensionCache();\n\t\tthis.input = input;\n\t\tif (cacheContents && cacheContents.input && ExtensionScannerInput.equals(cacheContents.input, this.input)) {\n\t\t\tthis.cacheValidatorThrottler.trigger(() => this.validateCache());\n\t\t\treturn cacheContents.result.map((extension) => {\n\t\t\t\t// revive URI object\n\t\t\t\textension.location = URI.revive(extension.location);\n\t\t\t\treturn extension;\n\t\t\t});\n\t\t}\n\t\tconst result = await super.scanExtensions(input);\n\t\tawait this.writeExtensionCache({ input, result });\n\t\treturn result;\n\t}\n\n\tprivate async readExtensionCache(): Promise<IExtensionCacheData | null> {\n\t\ttry {\n\t\t\tconst cacheRawContents = await this.fileService.readFile(this.cacheFile);\n\t\t\tconst extensionCacheData: IExtensionCacheData = JSON.parse(cacheRawContents.value.toString());\n\t\t\treturn { result: extensionCacheData.result, input: revive(extensionCacheData.input) };\n\t\t} catch (error) {\n\t\t\tthis.logService.debug('Error while reading the extension cache file:', this.cacheFile.path, getErrorMessage(error));\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate async writeExtensionCache(cacheContents: IExtensionCacheData): Promise<void> {\n\t\ttry {\n\t\t\tawait this.fileService.writeFile(this.cacheFile, VSBuffer.fromString(JSON.stringify(cacheContents)));\n\t\t} catch (error) {\n\t\t\tthis.logService.debug('Error while writing the extension cache file:', this.cacheFile.path, getErrorMessage(error));\n\t\t}\n\t}\n\n\tprivate async validateCache(): Promise<void> {\n\t\tif (!this.input) {\n\t\t\t// Input has been unset by the time we get here, so skip validation\n\t\t\treturn;\n\t\t}\n\n\t\tconst cacheContents = await this.readExtensionCache();\n\t\tif (!cacheContents) {\n\t\t\t// Cache has been deleted by someone else, which is perfectly fine...\n\t\t\treturn;\n\t\t}\n\n\t\tconst actual = cacheContents.result;\n\t\tconst expected = JSON.parse(JSON.stringify(await super.scanExtensions(this.input)));\n\t\tif (objects.equals(expected, actual)) {\n\t\t\t// Cache is valid and running with it is perfectly fine...\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\t// Cache is invalid, delete it\n\t\t\tawait this.fileService.del(this.cacheFile);\n\t\t\tthis._onDidChangeCache.fire();\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t}\n\t}\n\n}\n\nexport function toExtensionDescription(extension: IScannedExtension, isUnderDevelopment: boolean): IExtensionDescription {\n\tconst id = getExtensionId(extension.manifest.publisher, extension.manifest.name);\n\treturn {\n\t\tid,\n\t\tidentifier: new ExtensionIdentifier(id),\n\t\tisBuiltin: extension.type === ExtensionType.System,\n\t\tisUserBuiltin: extension.type === ExtensionType.User && extension.isBuiltin,\n\t\tisUnderDevelopment,\n\t\textensionLocation: extension.location,\n\t\tuuid: extension.identifier.uuid,\n\t\ttargetPlatform: extension.targetPlatform,\n\t\t...extension.manifest,\n\t};\n}\n\nexport class NativeExtensionsScannerService extends AbstractExtensionsScannerService implements IExtensionsScannerService {\n\n\tprivate readonly translationsPromise: Promise<Translations>;\n\n\tconstructor(\n\t\tsystemExtensionsLocation: URI,\n\t\tuserExtensionsLocation: URI,\n\t\tuserHome: URI,\n\t\tuserDataPath: URI,\n\t\tuserDataProfilesService: IUserDataProfilesService,\n\t\textensionsProfileScannerService: IExtensionsProfileScannerService,\n\t\tfileService: IFileService,\n\t\tlogService: ILogService,\n\t\tenvironmentService: IEnvironmentService,\n\t\tproductService: IProductService,\n\t\tinstantiationService: IInstantiationService,\n\t) {\n\t\tsuper(\n\t\t\tsystemExtensionsLocation,\n\t\t\tuserExtensionsLocation,\n\t\t\tjoinPath(userHome, '.vscode-oss-dev', 'extensions', 'control.json'),\n\t\t\tjoinPath(userDataPath, MANIFEST_CACHE_FOLDER),\n\t\t\tuserDataProfilesService, extensionsProfileScannerService, fileService, logService, environmentService, productService, instantiationService);\n\t\tthis.translationsPromise = (async () => {\n\t\t\tif (platform.translationsConfigFile) {\n\t\t\t\ttry {\n\t\t\t\t\tconst content = await this.fileService.readFile(URI.file(platform.translationsConfigFile));\n\t\t\t\t\treturn JSON.parse(content.value.toString());\n\t\t\t\t} catch (err) { /* Ignore Error */ }\n\t\t\t}\n\t\t\treturn Object.create(null);\n\t\t})();\n\t}\n\n\tprotected getTranslations(language: string): Promise<Translations> {\n\t\treturn this.translationsPromise;\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ChildProcess, fork } from 'child_process';\nimport { Limiter } from 'vs/base/common/async';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport { join } from 'vs/base/common/path';\nimport { Promises } from 'vs/base/node/pfs';\nimport { ILocalExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IUserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\n\nexport class ExtensionsLifecycle extends Disposable {\n\n\tprivate processesLimiter: Limiter<void> = new Limiter(5); // Run max 5 processes in parallel\n\n\tconstructor(\n\t\t@IUserDataProfilesService private userDataProfilesService: IUserDataProfilesService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t}\n\n\tasync postUninstall(extension: ILocalExtension): Promise<void> {\n\t\tconst script = this.parseScript(extension, 'uninstall');\n\t\tif (script) {\n\t\t\tthis.logService.info(extension.identifier.id, extension.manifest.version, `Running post uninstall script`);\n\t\t\tawait this.processesLimiter.queue(() =>\n\t\t\t\tthis.runLifecycleHook(script.script, 'uninstall', script.args, true, extension)\n\t\t\t\t\t.then(() => this.logService.info(extension.identifier.id, extension.manifest.version, `Finished running post uninstall script`), err => this.logService.error(extension.identifier.id, extension.manifest.version, `Failed to run post uninstall script: ${err}`)));\n\t\t}\n\t\treturn Promises.rm(this.getExtensionStoragePath(extension)).then(undefined, e => this.logService.error('Error while removing extension storage path', e));\n\t}\n\n\tprivate parseScript(extension: ILocalExtension, type: string): { script: string; args: string[] } | null {\n\t\tconst scriptKey = `vscode:${type}`;\n\t\tif (extension.location.scheme === Schemas.file && extension.manifest && extension.manifest['scripts'] && typeof extension.manifest['scripts'][scriptKey] === 'string') {\n\t\t\tconst script = (<string>extension.manifest['scripts'][scriptKey]).split(' ');\n\t\t\tif (script.length < 2 || script[0] !== 'node' || !script[1]) {\n\t\t\t\tthis.logService.warn(extension.identifier.id, extension.manifest.version, `${scriptKey} should be a node script`);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn { script: join(extension.location.fsPath, script[1]), args: script.slice(2) || [] };\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate runLifecycleHook(lifecycleHook: string, lifecycleType: string, args: string[], timeout: boolean, extension: ILocalExtension): Promise<void> {\n\t\treturn new Promise<void>((c, e) => {\n\n\t\t\tconst extensionLifecycleProcess = this.start(lifecycleHook, lifecycleType, args, extension);\n\t\t\tlet timeoutHandler: any;\n\n\t\t\tconst onexit = (error?: string) => {\n\t\t\t\tif (timeoutHandler) {\n\t\t\t\t\tclearTimeout(timeoutHandler);\n\t\t\t\t\ttimeoutHandler = null;\n\t\t\t\t}\n\t\t\t\tif (error) {\n\t\t\t\t\te(error);\n\t\t\t\t} else {\n\t\t\t\t\tc(undefined);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// on error\n\t\t\textensionLifecycleProcess.on('error', (err) => {\n\t\t\t\tonexit(toErrorMessage(err) || 'Unknown');\n\t\t\t});\n\n\t\t\t// on exit\n\t\t\textensionLifecycleProcess.on('exit', (code: number, signal: string) => {\n\t\t\t\tonexit(code ? `post-${lifecycleType} process exited with code ${code}` : undefined);\n\t\t\t});\n\n\t\t\tif (timeout) {\n\t\t\t\t// timeout: kill process after waiting for 5s\n\t\t\t\ttimeoutHandler = setTimeout(() => {\n\t\t\t\t\ttimeoutHandler = null;\n\t\t\t\t\textensionLifecycleProcess.kill();\n\t\t\t\t\te('timed out');\n\t\t\t\t}, 5000);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate start(uninstallHook: string, lifecycleType: string, args: string[], extension: ILocalExtension): ChildProcess {\n\t\tconst opts = {\n\t\t\tsilent: true,\n\t\t\texecArgv: undefined\n\t\t};\n\t\tconst extensionUninstallProcess = fork(uninstallHook, [`--type=extension-post-${lifecycleType}`, ...args], opts);\n\n\t\t// Catch all output coming from the process\n\t\ttype Output = { data: string; format: string[] };\n\t\textensionUninstallProcess.stdout!.setEncoding('utf8');\n\t\textensionUninstallProcess.stderr!.setEncoding('utf8');\n\n\t\tconst onStdout = Event.fromNodeEventEmitter<string>(extensionUninstallProcess.stdout!, 'data');\n\t\tconst onStderr = Event.fromNodeEventEmitter<string>(extensionUninstallProcess.stderr!, 'data');\n\n\t\t// Log output\n\t\tonStdout(data => this.logService.info(extension.identifier.id, extension.manifest.version, `post-${lifecycleType}`, data));\n\t\tonStderr(data => this.logService.error(extension.identifier.id, extension.manifest.version, `post-${lifecycleType}`, data));\n\n\t\tconst onOutput = Event.any(\n\t\t\tEvent.map(onStdout, o => ({ data: `%c${o}`, format: [''] })),\n\t\t\tEvent.map(onStderr, o => ({ data: `%c${o}`, format: ['color: red'] }))\n\t\t);\n\t\t// Debounce all output, so we can render it in the Chrome console as a group\n\t\tconst onDebouncedOutput = Event.debounce<Output>(onOutput, (r, o) => {\n\t\t\treturn r\n\t\t\t\t? { data: r.data + o.data, format: [...r.format, ...o.format] }\n\t\t\t\t: { data: o.data, format: o.format };\n\t\t}, 100);\n\n\t\t// Print out output\n\t\tonDebouncedOutput(data => {\n\t\t\tconsole.group(extension.identifier.id);\n\t\t\tconsole.log(data.data, ...data.format);\n\t\t\tconsole.groupEnd();\n\t\t});\n\n\t\treturn extensionUninstallProcess;\n\t}\n\n\tprivate getExtensionStoragePath(extension: ILocalExtension): string {\n\t\treturn join(this.userDataProfilesService.defaultProfile.globalStorageHome.fsPath, extension.identifier.id.toLowerCase());\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Promises, RunOnceScheduler, runWhenIdle } from 'vs/base/common/async';\nimport { Emitter, Event, PauseableEmitter } from 'vs/base/common/event';\nimport { Disposable, dispose, MutableDisposable } from 'vs/base/common/lifecycle';\nimport { mark } from 'vs/base/common/performance';\nimport { isUndefinedOrNull } from 'vs/base/common/types';\nimport { InMemoryStorageDatabase, IStorage, Storage } from 'vs/base/parts/storage/common/storage';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { isUserDataProfile, IUserDataProfile } from 'vs/platform/userDataProfile/common/userDataProfile';\nimport { IAnyWorkspaceIdentifier } from 'vs/platform/workspace/common/workspace';\n\nexport const IS_NEW_KEY = '__$__isNewStorageMarker';\nconst TARGET_KEY = '__$__targetStorageMarker';\n\nexport const IStorageService = createDecorator<IStorageService>('storageService');\n\nexport enum WillSaveStateReason {\n\n\t/**\n\t * No specific reason to save state.\n\t */\n\tNONE,\n\n\t/**\n\t * A hint that the workbench is about to shutdown.\n\t */\n\tSHUTDOWN\n}\n\nexport interface IWillSaveStateEvent {\n\treadonly reason: WillSaveStateReason;\n}\n\nexport interface IStorageService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Emitted whenever data is updated or deleted.\n\t */\n\treadonly onDidChangeValue: Event<IStorageValueChangeEvent>;\n\n\t/**\n\t * Emitted whenever target of a storage entry changes.\n\t */\n\treadonly onDidChangeTarget: Event<IStorageTargetChangeEvent>;\n\n\t/**\n\t * Emitted when the storage is about to persist. This is the right time\n\t * to persist data to ensure it is stored before the application shuts\n\t * down.\n\t *\n\t * The will save state event allows to optionally ask for the reason of\n\t * saving the state, e.g. to find out if the state is saved due to a\n\t * shutdown.\n\t *\n\t * Note: this event may be fired many times, not only on shutdown to prevent\n\t * loss of state in situations where the shutdown is not sufficient to\n\t * persist the data properly.\n\t */\n\treadonly onWillSaveState: Event<IWillSaveStateEvent>;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided `defaultValue` if the element is `null` or `undefined`.\n\t *\n\t * @param scope allows to define the scope of the storage operation\n\t * to either the current workspace only, all workspaces or all profiles.\n\t */\n\tget(key: string, scope: StorageScope, fallbackValue: string): string;\n\tget(key: string, scope: StorageScope, fallbackValue?: string): string | undefined;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided `defaultValue` if the element is `null` or `undefined`.\n\t * The element will be converted to a `boolean`.\n\t *\n\t * @param scope allows to define the scope of the storage operation\n\t * to either the current workspace only, all workspaces or all profiles.\n\t */\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue: boolean): boolean;\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue?: boolean): boolean | undefined;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided `defaultValue` if the element is `null` or `undefined`.\n\t * The element will be converted to a `number` using `parseInt` with a\n\t * base of `10`.\n\t *\n\t * @param scope allows to define the scope of the storage operation\n\t * to either the current workspace only, all workspaces or all profiles.\n\t */\n\tgetNumber(key: string, scope: StorageScope, fallbackValue: number): number;\n\tgetNumber(key: string, scope: StorageScope, fallbackValue?: number): number | undefined;\n\n\t/**\n\t * Store a value under the given key to storage. The value will be\n\t * converted to a `string`. Storing either `undefined` or `null` will\n\t * remove the entry under the key.\n\t *\n\t * @param scope allows to define the scope of the storage operation\n\t * to either the current workspace only, all workspaces or all profiles.\n\t *\n\t * @param target allows to define the target of the storage operation\n\t * to either the current machine or user.\n\t */\n\tstore(key: string, value: string | boolean | number | undefined | null, scope: StorageScope, target: StorageTarget): void;\n\n\t/**\n\t * Delete an element stored under the provided key from storage.\n\t *\n\t * The scope argument allows to define the scope of the storage\n\t * operation to either the current workspace only, all workspaces\n\t * or all profiles.\n\t */\n\tremove(key: string, scope: StorageScope): void;\n\n\t/**\n\t * Returns all the keys used in the storage for the provided `scope`\n\t * and `target`.\n\t *\n\t * Note: this will NOT return all keys stored in the storage layer.\n\t * Some keys may not have an associated `StorageTarget` and thus\n\t * will be excluded from the results.\n\t *\n\t * @param scope allows to define the scope for the keys\n\t * to either the current workspace only, all workspaces or all profiles.\n\t *\n\t * @param target allows to define the target for the keys\n\t * to either the current machine or user.\n\t */\n\tkeys(scope: StorageScope, target: StorageTarget): string[];\n\n\t/**\n\t * Log the contents of the storage to the console.\n\t */\n\tlog(): void;\n\n\t/**\n\t * Switch storage to another workspace or profile. Optionally preserve the\n\t * current data to the new storage.\n\t */\n\tswitch(to: IAnyWorkspaceIdentifier | IUserDataProfile, preserveData: boolean): Promise<void>;\n\n\t/**\n\t * Whether the storage for the given scope was created during this session or\n\t * existed before.\n\t */\n\tisNew(scope: StorageScope): boolean;\n\n\t/**\n\t * Allows to flush state, e.g. in cases where a shutdown is\n\t * imminent. This will send out the `onWillSaveState` to ask\n\t * everyone for latest state.\n\t *\n\t * @returns a `Promise` that can be awaited on when all updates\n\t * to the underlying storage have been flushed.\n\t */\n\tflush(reason?: WillSaveStateReason): Promise<void>;\n}\n\nexport const enum StorageScope {\n\n\t/**\n\t * The stored data will be scoped to all workspaces across all profiles.\n\t */\n\tAPPLICATION = -1,\n\n\t/**\n\t * The stored data will be scoped to all workspaces of the same profile.\n\t */\n\tPROFILE = 0,\n\n\t/**\n\t * The stored data will be scoped to the current workspace.\n\t */\n\tWORKSPACE = 1\n}\n\nexport const enum StorageTarget {\n\n\t/**\n\t * The stored data is user specific and applies across machines.\n\t */\n\tUSER,\n\n\t/**\n\t * The stored data is machine specific.\n\t */\n\tMACHINE\n}\n\nexport interface IStorageValueChangeEvent {\n\n\t/**\n\t * The scope for the storage entry that changed\n\t * or was removed.\n\t */\n\treadonly scope: StorageScope;\n\n\t/**\n\t * The `key` of the storage entry that was changed\n\t * or was removed.\n\t */\n\treadonly key: string;\n\n\t/**\n\t * The `target` can be `undefined` if a key is being\n\t * removed.\n\t */\n\treadonly target: StorageTarget | undefined;\n}\n\nexport interface IStorageTargetChangeEvent {\n\n\t/**\n\t * The scope for the target that changed. Listeners\n\t * should use `keys(scope, target)` to get an updated\n\t * list of keys for the given `scope` and `target`.\n\t */\n\treadonly scope: StorageScope;\n}\n\ninterface IKeyTargets {\n\t[key: string]: StorageTarget;\n}\n\nexport interface IStorageServiceOptions {\n\tflushInterval: number;\n}\n\nexport abstract class AbstractStorageService extends Disposable implements IStorageService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate static DEFAULT_FLUSH_INTERVAL = 60 * 1000; // every minute\n\n\tprivate readonly _onDidChangeValue = this._register(new PauseableEmitter<IStorageValueChangeEvent>());\n\treadonly onDidChangeValue = this._onDidChangeValue.event;\n\n\tprivate readonly _onDidChangeTarget = this._register(new PauseableEmitter<IStorageTargetChangeEvent>());\n\treadonly onDidChangeTarget = this._onDidChangeTarget.event;\n\n\tprivate readonly _onWillSaveState = this._register(new Emitter<IWillSaveStateEvent>());\n\treadonly onWillSaveState = this._onWillSaveState.event;\n\n\tprivate initializationPromise: Promise<void> | undefined;\n\n\tprivate readonly flushWhenIdleScheduler = this._register(new RunOnceScheduler(() => this.doFlushWhenIdle(), this.options.flushInterval));\n\tprivate readonly runFlushWhenIdle = this._register(new MutableDisposable());\n\n\tconstructor(private readonly options: IStorageServiceOptions = { flushInterval: AbstractStorageService.DEFAULT_FLUSH_INTERVAL }) {\n\t\tsuper();\n\t}\n\n\tprivate doFlushWhenIdle(): void {\n\t\tthis.runFlushWhenIdle.value = runWhenIdle(() => {\n\t\t\tif (this.shouldFlushWhenIdle()) {\n\t\t\t\tthis.flush();\n\t\t\t}\n\n\t\t\t// repeat\n\t\t\tthis.flushWhenIdleScheduler.schedule();\n\t\t});\n\t}\n\n\tprotected shouldFlushWhenIdle(): boolean {\n\t\treturn true;\n\t}\n\n\tprotected stopFlushWhenIdle(): void {\n\t\tdispose([this.runFlushWhenIdle, this.flushWhenIdleScheduler]);\n\t}\n\n\tinitialize(): Promise<void> {\n\t\tif (!this.initializationPromise) {\n\t\t\tthis.initializationPromise = (async () => {\n\n\t\t\t\t// Init all storage locations\n\t\t\t\tmark('code/willInitStorage');\n\t\t\t\ttry {\n\t\t\t\t\t// Ask subclasses to initialize storage\n\t\t\t\t\tawait this.doInitialize();\n\t\t\t\t} finally {\n\t\t\t\t\tmark('code/didInitStorage');\n\t\t\t\t}\n\n\t\t\t\t// On some OS we do not get enough time to persist state on shutdown (e.g. when\n\t\t\t\t// Windows restarts after applying updates). In other cases, VSCode might crash,\n\t\t\t\t// so we periodically save state to reduce the chance of loosing any state.\n\t\t\t\t// In the browser we do not have support for long running unload sequences. As such,\n\t\t\t\t// we cannot ask for saving state in that moment, because that would result in a\n\t\t\t\t// long running operation.\n\t\t\t\t// Instead, periodically ask customers to save save. The library will be clever enough\n\t\t\t\t// to only save state that has actually changed.\n\t\t\t\tthis.flushWhenIdleScheduler.schedule();\n\t\t\t})();\n\t\t}\n\n\t\treturn this.initializationPromise;\n\t}\n\n\tprotected emitDidChangeValue(scope: StorageScope, key: string): void {\n\n\t\t// Specially handle `TARGET_KEY`\n\t\tif (key === TARGET_KEY) {\n\n\t\t\t// Clear our cached version which is now out of date\n\t\t\tswitch (scope) {\n\t\t\t\tcase StorageScope.APPLICATION:\n\t\t\t\t\tthis._applicationKeyTargets = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\tcase StorageScope.PROFILE:\n\t\t\t\t\tthis._profileKeyTargets = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\tcase StorageScope.WORKSPACE:\n\t\t\t\t\tthis._workspaceKeyTargets = undefined;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Emit as `didChangeTarget` event\n\t\t\tthis._onDidChangeTarget.fire({ scope });\n\t\t}\n\n\t\t// Emit any other key to outside\n\t\telse {\n\t\t\tthis._onDidChangeValue.fire({ scope, key, target: this.getKeyTargets(scope)[key] });\n\t\t}\n\t}\n\n\tprotected emitWillSaveState(reason: WillSaveStateReason): void {\n\t\tthis._onWillSaveState.fire({ reason });\n\t}\n\n\tget(key: string, scope: StorageScope, fallbackValue: string): string;\n\tget(key: string, scope: StorageScope): string | undefined;\n\tget(key: string, scope: StorageScope, fallbackValue?: string): string | undefined {\n\t\treturn this.getStorage(scope)?.get(key, fallbackValue);\n\t}\n\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue: boolean): boolean;\n\tgetBoolean(key: string, scope: StorageScope): boolean | undefined;\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue?: boolean): boolean | undefined {\n\t\treturn this.getStorage(scope)?.getBoolean(key, fallbackValue);\n\t}\n\n\tgetNumber(key: string, scope: StorageScope, fallbackValue: number): number;\n\tgetNumber(key: string, scope: StorageScope): number | undefined;\n\tgetNumber(key: string, scope: StorageScope, fallbackValue?: number): number | undefined {\n\t\treturn this.getStorage(scope)?.getNumber(key, fallbackValue);\n\t}\n\n\tstore(key: string, value: string | boolean | number | undefined | null, scope: StorageScope, target: StorageTarget): void {\n\n\t\t// We remove the key for undefined/null values\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\tthis.remove(key, scope);\n\t\t\treturn;\n\t\t}\n\n\t\t// Update our datastructures but send events only after\n\t\tthis.withPausedEmitters(() => {\n\n\t\t\t// Update key-target map\n\t\t\tthis.updateKeyTarget(key, scope, target);\n\n\t\t\t// Store actual value\n\t\t\tthis.getStorage(scope)?.set(key, value);\n\t\t});\n\t}\n\n\tremove(key: string, scope: StorageScope): void {\n\n\t\t// Update our datastructures but send events only after\n\t\tthis.withPausedEmitters(() => {\n\n\t\t\t// Update key-target map\n\t\t\tthis.updateKeyTarget(key, scope, undefined);\n\n\t\t\t// Remove actual key\n\t\t\tthis.getStorage(scope)?.delete(key);\n\t\t});\n\t}\n\n\tprivate withPausedEmitters(fn: Function): void {\n\n\t\t// Pause emitters\n\t\tthis._onDidChangeValue.pause();\n\t\tthis._onDidChangeTarget.pause();\n\n\t\ttry {\n\t\t\tfn();\n\t\t} finally {\n\n\t\t\t// Resume emitters\n\t\t\tthis._onDidChangeValue.resume();\n\t\t\tthis._onDidChangeTarget.resume();\n\t\t}\n\t}\n\n\tkeys(scope: StorageScope, target: StorageTarget): string[] {\n\t\tconst keys: string[] = [];\n\n\t\tconst keyTargets = this.getKeyTargets(scope);\n\t\tfor (const key of Object.keys(keyTargets)) {\n\t\t\tconst keyTarget = keyTargets[key];\n\t\t\tif (keyTarget === target) {\n\t\t\t\tkeys.push(key);\n\t\t\t}\n\t\t}\n\n\t\treturn keys;\n\t}\n\n\tprivate updateKeyTarget(key: string, scope: StorageScope, target: StorageTarget | undefined): void {\n\n\t\t// Add\n\t\tconst keyTargets = this.getKeyTargets(scope);\n\t\tif (typeof target === 'number') {\n\t\t\tif (keyTargets[key] !== target) {\n\t\t\t\tkeyTargets[key] = target;\n\t\t\t\tthis.getStorage(scope)?.set(TARGET_KEY, JSON.stringify(keyTargets));\n\t\t\t}\n\t\t}\n\n\t\t// Remove\n\t\telse {\n\t\t\tif (typeof keyTargets[key] === 'number') {\n\t\t\t\tdelete keyTargets[key];\n\t\t\t\tthis.getStorage(scope)?.set(TARGET_KEY, JSON.stringify(keyTargets));\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _workspaceKeyTargets: IKeyTargets | undefined = undefined;\n\tprivate get workspaceKeyTargets(): IKeyTargets {\n\t\tif (!this._workspaceKeyTargets) {\n\t\t\tthis._workspaceKeyTargets = this.loadKeyTargets(StorageScope.WORKSPACE);\n\t\t}\n\n\t\treturn this._workspaceKeyTargets;\n\t}\n\n\tprivate _profileKeyTargets: IKeyTargets | undefined = undefined;\n\tprivate get profileKeyTargets(): IKeyTargets {\n\t\tif (!this._profileKeyTargets) {\n\t\t\tthis._profileKeyTargets = this.loadKeyTargets(StorageScope.PROFILE);\n\t\t}\n\n\t\treturn this._profileKeyTargets;\n\t}\n\n\tprivate _applicationKeyTargets: IKeyTargets | undefined = undefined;\n\tprivate get applicationKeyTargets(): IKeyTargets {\n\t\tif (!this._applicationKeyTargets) {\n\t\t\tthis._applicationKeyTargets = this.loadKeyTargets(StorageScope.APPLICATION);\n\t\t}\n\n\t\treturn this._applicationKeyTargets;\n\t}\n\n\tprivate getKeyTargets(scope: StorageScope): IKeyTargets {\n\t\tswitch (scope) {\n\t\t\tcase StorageScope.APPLICATION:\n\t\t\t\treturn this.applicationKeyTargets;\n\t\t\tcase StorageScope.PROFILE:\n\t\t\t\treturn this.profileKeyTargets;\n\t\t\tdefault:\n\t\t\t\treturn this.workspaceKeyTargets;\n\t\t}\n\t}\n\n\tprivate loadKeyTargets(scope: StorageScope): { [key: string]: StorageTarget } {\n\t\tconst keysRaw = this.get(TARGET_KEY, scope);\n\t\tif (keysRaw) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(keysRaw);\n\t\t\t} catch (error) {\n\t\t\t\t// Fail gracefully\n\t\t\t}\n\t\t}\n\n\t\treturn Object.create(null);\n\t}\n\n\tisNew(scope: StorageScope): boolean {\n\t\treturn this.getBoolean(IS_NEW_KEY, scope) === true;\n\t}\n\n\tasync flush(reason = WillSaveStateReason.NONE): Promise<void> {\n\n\t\t// Signal event to collect changes\n\t\tthis._onWillSaveState.fire({ reason });\n\n\t\tconst applicationStorage = this.getStorage(StorageScope.APPLICATION);\n\t\tconst profileStorage = this.getStorage(StorageScope.PROFILE);\n\t\tconst workspaceStorage = this.getStorage(StorageScope.WORKSPACE);\n\n\t\tswitch (reason) {\n\n\t\t\t// Unspecific reason: just wait when data is flushed\n\t\t\tcase WillSaveStateReason.NONE:\n\t\t\t\tawait Promises.settled([\n\t\t\t\t\tapplicationStorage?.whenFlushed() ?? Promise.resolve(),\n\t\t\t\t\tprofileStorage?.whenFlushed() ?? Promise.resolve(),\n\t\t\t\t\tworkspaceStorage?.whenFlushed() ?? Promise.resolve()\n\t\t\t\t]);\n\t\t\t\tbreak;\n\n\t\t\t// Shutdown: we want to flush as soon as possible\n\t\t\t// and not hit any delays that might be there\n\t\t\tcase WillSaveStateReason.SHUTDOWN:\n\t\t\t\tawait Promises.settled([\n\t\t\t\t\tapplicationStorage?.flush(0) ?? Promise.resolve(),\n\t\t\t\t\tprofileStorage?.flush(0) ?? Promise.resolve(),\n\t\t\t\t\tworkspaceStorage?.flush(0) ?? Promise.resolve()\n\t\t\t\t]);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tasync log(): Promise<void> {\n\t\tconst applicationItems = this.getStorage(StorageScope.APPLICATION)?.items ?? new Map<string, string>();\n\t\tconst profileItems = this.getStorage(StorageScope.PROFILE)?.items ?? new Map<string, string>();\n\t\tconst workspaceItems = this.getStorage(StorageScope.WORKSPACE)?.items ?? new Map<string, string>();\n\n\t\treturn logStorage(\n\t\t\tapplicationItems,\n\t\t\tprofileItems,\n\t\t\tworkspaceItems,\n\t\t\tthis.getLogDetails(StorageScope.APPLICATION) ?? '',\n\t\t\tthis.getLogDetails(StorageScope.PROFILE) ?? '',\n\t\t\tthis.getLogDetails(StorageScope.WORKSPACE) ?? ''\n\t\t);\n\t}\n\n\tasync switch(to: IAnyWorkspaceIdentifier | IUserDataProfile, preserveData: boolean): Promise<void> {\n\n\t\t// Signal as event so that clients can store data before we switch\n\t\tthis.emitWillSaveState(WillSaveStateReason.NONE);\n\n\t\tif (isUserDataProfile(to)) {\n\t\t\treturn this.switchToProfile(to, preserveData);\n\t\t}\n\n\t\treturn this.switchToWorkspace(to, preserveData);\n\t}\n\n\tprotected canSwitchProfile(from: IUserDataProfile, to: IUserDataProfile): boolean {\n\t\tif (from.id === to.id) {\n\t\t\treturn false; // both profiles are same\n\t\t}\n\n\t\tif (isProfileUsingDefaultStorage(to) && isProfileUsingDefaultStorage(from)) {\n\t\t\treturn false; // both profiles are using default\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprotected switchData(oldStorage: Map<string, string>, newStorage: IStorage, scope: StorageScope, preserveData: boolean): void {\n\t\tthis.withPausedEmitters(() => {\n\n\t\t\t// Copy over previous keys if `preserveData`\n\t\t\tif (preserveData) {\n\t\t\t\tfor (const [key, value] of oldStorage) {\n\t\t\t\t\tnewStorage.set(key, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Otherwise signal storage keys that have changed\n\t\t\telse {\n\t\t\t\tconst handledkeys = new Set<string>();\n\t\t\t\tfor (const [key, oldValue] of oldStorage) {\n\t\t\t\t\thandledkeys.add(key);\n\n\t\t\t\t\tconst newValue = newStorage.get(key);\n\t\t\t\t\tif (newValue !== oldValue) {\n\t\t\t\t\t\tthis.emitDidChangeValue(scope, key);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (const [key] of newStorage.items) {\n\t\t\t\t\tif (!handledkeys.has(key)) {\n\t\t\t\t\t\tthis.emitDidChangeValue(scope, key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t// --- abstract\n\n\tprotected abstract doInitialize(): Promise<void>;\n\n\tprotected abstract getStorage(scope: StorageScope): IStorage | undefined;\n\n\tprotected abstract getLogDetails(scope: StorageScope): string | undefined;\n\n\tprotected abstract switchToProfile(toProfile: IUserDataProfile, preserveData: boolean): Promise<void>;\n\tprotected abstract switchToWorkspace(toWorkspace: IAnyWorkspaceIdentifier | IUserDataProfile, preserveData: boolean): Promise<void>;\n}\n\nexport function isProfileUsingDefaultStorage(profile: IUserDataProfile): boolean {\n\treturn profile.isDefault || !!profile.useDefaultFlags?.uiState;\n}\n\nexport class InMemoryStorageService extends AbstractStorageService {\n\n\tprivate readonly applicationStorage = this._register(new Storage(new InMemoryStorageDatabase()));\n\tprivate readonly profileStorage = this._register(new Storage(new InMemoryStorageDatabase()));\n\tprivate readonly workspaceStorage = this._register(new Storage(new InMemoryStorageDatabase()));\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._register(this.workspaceStorage.onDidChangeStorage(key => this.emitDidChangeValue(StorageScope.WORKSPACE, key)));\n\t\tthis._register(this.profileStorage.onDidChangeStorage(key => this.emitDidChangeValue(StorageScope.PROFILE, key)));\n\t\tthis._register(this.applicationStorage.onDidChangeStorage(key => this.emitDidChangeValue(StorageScope.APPLICATION, key)));\n\t}\n\n\tprotected getStorage(scope: StorageScope): IStorage {\n\t\tswitch (scope) {\n\t\t\tcase StorageScope.APPLICATION:\n\t\t\t\treturn this.applicationStorage;\n\t\t\tcase StorageScope.PROFILE:\n\t\t\t\treturn this.profileStorage;\n\t\t\tdefault:\n\t\t\t\treturn this.workspaceStorage;\n\t\t}\n\t}\n\n\tprotected getLogDetails(scope: StorageScope): string | undefined {\n\t\tswitch (scope) {\n\t\t\tcase StorageScope.APPLICATION:\n\t\t\t\treturn 'inMemory (application)';\n\t\t\tcase StorageScope.PROFILE:\n\t\t\t\treturn 'inMemory (profile)';\n\t\t\tdefault:\n\t\t\t\treturn 'inMemory (workspace)';\n\t\t}\n\t}\n\n\tprotected async doInitialize(): Promise<void> { }\n\n\tprotected async switchToProfile(): Promise<void> {\n\t\t// no-op when in-memory\n\t}\n\n\tprotected async switchToWorkspace(): Promise<void> {\n\t\t// no-op when in-memory\n\t}\n}\n\nexport async function logStorage(application: Map<string, string>, profile: Map<string, string>, workspace: Map<string, string>, applicationPath: string, profilePath: string, workspacePath: string): Promise<void> {\n\tconst safeParse = (value: string) => {\n\t\ttry {\n\t\t\treturn JSON.parse(value);\n\t\t} catch (error) {\n\t\t\treturn value;\n\t\t}\n\t};\n\n\tconst applicationItems = new Map<string, string>();\n\tconst applicationItemsParsed = new Map<string, string>();\n\tapplication.forEach((value, key) => {\n\t\tapplicationItems.set(key, value);\n\t\tapplicationItemsParsed.set(key, safeParse(value));\n\t});\n\n\tconst profileItems = new Map<string, string>();\n\tconst profileItemsParsed = new Map<string, string>();\n\tprofile.forEach((value, key) => {\n\t\tprofileItems.set(key, value);\n\t\tprofileItemsParsed.set(key, safeParse(value));\n\t});\n\n\tconst workspaceItems = new Map<string, string>();\n\tconst workspaceItemsParsed = new Map<string, string>();\n\tworkspace.forEach((value, key) => {\n\t\tworkspaceItems.set(key, value);\n\t\tworkspaceItemsParsed.set(key, safeParse(value));\n\t});\n\n\tif (applicationPath !== profilePath) {\n\t\tconsole.group(`Storage: Application (path: ${applicationPath})`);\n\t} else {\n\t\tconsole.group(`Storage: Application & Profile (path: ${applicationPath}, default profile)`);\n\t}\n\tconst applicationValues: { key: string; value: string }[] = [];\n\tapplicationItems.forEach((value, key) => {\n\t\tapplicationValues.push({ key, value });\n\t});\n\tconsole.table(applicationValues);\n\tconsole.groupEnd();\n\n\tconsole.log(applicationItemsParsed);\n\n\tif (applicationPath !== profilePath) {\n\t\tconsole.group(`Storage: Profile (path: ${profilePath}, profile specific)`);\n\t\tconst profileValues: { key: string; value: string }[] = [];\n\t\tprofileItems.forEach((value, key) => {\n\t\t\tprofileValues.push({ key, value });\n\t\t});\n\t\tconsole.table(profileValues);\n\t\tconsole.groupEnd();\n\n\t\tconsole.log(profileItemsParsed);\n\t}\n\n\tconsole.group(`Storage: Workspace (path: ${workspacePath})`);\n\tconst workspaceValues: { key: string; value: string }[] = [];\n\tworkspaceItems.forEach((value, key) => {\n\t\tworkspaceValues.push({ key, value });\n\t});\n\tconsole.table(workspaceValues);\n\tconsole.groupEnd();\n\n\tconsole.log(workspaceItemsParsed);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { distinct } from 'vs/base/common/arrays';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { CancellationError, getErrorMessage, isCancellationError } from 'vs/base/common/errors';\nimport { IPager } from 'vs/base/common/paging';\nimport { isWeb, platform } from 'vs/base/common/platform';\nimport { arch } from 'vs/base/common/process';\nimport { isBoolean } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { IRequestContext, IRequestOptions } from 'vs/base/parts/request/common/request';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { getFallbackTargetPlarforms, getTargetPlatform, IExtensionGalleryService, IExtensionIdentifier, IExtensionInfo, IGalleryExtension, IGalleryExtensionAsset, IGalleryExtensionAssets, IGalleryExtensionVersion, InstallOperation, IQueryOptions, IExtensionsControlManifest, isNotWebExtensionInWebTargetPlatform, isTargetPlatformCompatible, ITranslation, SortBy, SortOrder, StatisticType, toTargetPlatform, WEB_EXTENSION_TAG, IExtensionQueryOptions, IDeprecationInfo } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { adoptToGalleryExtensionId, areSameExtensions, getGalleryExtensionId, getGalleryExtensionTelemetryData } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { IExtensionManifest, TargetPlatform } from 'vs/platform/extensions/common/extensions';\nimport { isEngineValid } from 'vs/platform/extensions/common/extensionValidator';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { asJson, asTextOrError, IRequestService, isSuccess } from 'vs/platform/request/common/request';\nimport { resolveMarketplaceHeaders } from 'vs/platform/externalServices/common/marketplace';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\n\nconst CURRENT_TARGET_PLATFORM = isWeb ? TargetPlatform.WEB : getTargetPlatform(platform, arch);\n\ninterface IRawGalleryExtensionFile {\n\treadonly assetType: string;\n\treadonly source: string;\n}\n\ninterface IRawGalleryExtensionProperty {\n\treadonly key: string;\n\treadonly value: string;\n}\n\nexport interface IRawGalleryExtensionVersion {\n\treadonly version: string;\n\treadonly lastUpdated: string;\n\treadonly assetUri: string;\n\treadonly fallbackAssetUri: string;\n\treadonly files: IRawGalleryExtensionFile[];\n\treadonly properties?: IRawGalleryExtensionProperty[];\n\treadonly targetPlatform?: string;\n}\n\ninterface IRawGalleryExtensionStatistics {\n\treadonly statisticName: string;\n\treadonly value: number;\n}\n\ninterface IRawGalleryExtensionPublisher {\n\treadonly displayName: string;\n\treadonly publisherId: string;\n\treadonly publisherName: string;\n\treadonly domain?: string | null;\n\treadonly isDomainVerified?: boolean;\n}\n\ninterface IRawGalleryExtension {\n\treadonly extensionId: string;\n\treadonly extensionName: string;\n\treadonly displayName: string;\n\treadonly shortDescription: string;\n\treadonly publisher: IRawGalleryExtensionPublisher;\n\treadonly versions: IRawGalleryExtensionVersion[];\n\treadonly statistics: IRawGalleryExtensionStatistics[];\n\treadonly tags: string[] | undefined;\n\treadonly releaseDate: string;\n\treadonly publishedDate: string;\n\treadonly lastUpdated: string;\n\treadonly categories: string[] | undefined;\n\treadonly flags: string;\n}\n\ninterface IRawGalleryQueryResult {\n\treadonly results: {\n\t\treadonly extensions: IRawGalleryExtension[];\n\t\treadonly resultMetadata: {\n\t\t\treadonly metadataType: string;\n\t\t\treadonly metadataItems: {\n\t\t\t\treadonly name: string;\n\t\t\t\treadonly count: number;\n\t\t\t}[];\n\t\t}[];\n\t}[];\n}\n\nenum Flags {\n\n\t/**\n\t * None is used to retrieve only the basic extension details.\n\t */\n\tNone = 0x0,\n\n\t/**\n\t * IncludeVersions will return version information for extensions returned\n\t */\n\tIncludeVersions = 0x1,\n\n\t/**\n\t * IncludeFiles will return information about which files were found\n\t * within the extension that were stored independent of the manifest.\n\t * When asking for files, versions will be included as well since files\n\t * are returned as a property of the versions.\n\t * These files can be retrieved using the path to the file without\n\t * requiring the entire manifest be downloaded.\n\t */\n\tIncludeFiles = 0x2,\n\n\t/**\n\t * Include the Categories and Tags that were added to the extension definition.\n\t */\n\tIncludeCategoryAndTags = 0x4,\n\n\t/**\n\t * Include the details about which accounts the extension has been shared\n\t * with if the extension is a private extension.\n\t */\n\tIncludeSharedAccounts = 0x8,\n\n\t/**\n\t * Include properties associated with versions of the extension\n\t */\n\tIncludeVersionProperties = 0x10,\n\n\t/**\n\t * Excluding non-validated extensions will remove any extension versions that\n\t * either are in the process of being validated or have failed validation.\n\t */\n\tExcludeNonValidated = 0x20,\n\n\t/**\n\t * Include the set of installation targets the extension has requested.\n\t */\n\tIncludeInstallationTargets = 0x40,\n\n\t/**\n\t * Include the base uri for assets of this extension\n\t */\n\tIncludeAssetUri = 0x80,\n\n\t/**\n\t * Include the statistics associated with this extension\n\t */\n\tIncludeStatistics = 0x100,\n\n\t/**\n\t * When retrieving versions from a query, only include the latest\n\t * version of the extensions that matched. This is useful when the\n\t * caller doesn't need all the published versions. It will save a\n\t * significant size in the returned payload.\n\t */\n\tIncludeLatestVersionOnly = 0x200,\n\n\t/**\n\t * This flag switches the asset uri to use GetAssetByName instead of CDN\n\t * When this is used, values of base asset uri and base asset uri fallback are switched\n\t * When this is used, source of asset files are pointed to Gallery service always even if CDN is available\n\t */\n\tUnpublished = 0x1000,\n\n\t/**\n\t * Include the details if an extension is in conflict list or not\n\t */\n\tIncludeNameConflictInfo = 0x8000,\n}\n\nfunction flagsToString(...flags: Flags[]): string {\n\treturn String(flags.reduce((r, f) => r | f, 0));\n}\n\nenum FilterType {\n\tTag = 1,\n\tExtensionId = 4,\n\tCategory = 5,\n\tExtensionName = 7,\n\tTarget = 8,\n\tFeatured = 9,\n\tSearchText = 10,\n\tExcludeWithFlags = 12\n}\n\nconst AssetType = {\n\tIcon: 'Microsoft.VisualStudio.Services.Icons.Default',\n\tDetails: 'Microsoft.VisualStudio.Services.Content.Details',\n\tChangelog: 'Microsoft.VisualStudio.Services.Content.Changelog',\n\tManifest: 'Microsoft.VisualStudio.Code.Manifest',\n\tVSIX: 'Microsoft.VisualStudio.Services.VSIXPackage',\n\tLicense: 'Microsoft.VisualStudio.Services.Content.License',\n\tRepository: 'Microsoft.VisualStudio.Services.Links.Source'\n};\n\nconst PropertyType = {\n\tDependency: 'Microsoft.VisualStudio.Code.ExtensionDependencies',\n\tExtensionPack: 'Microsoft.VisualStudio.Code.ExtensionPack',\n\tEngine: 'Microsoft.VisualStudio.Code.Engine',\n\tPreRelease: 'Microsoft.VisualStudio.Code.PreRelease',\n\tLocalizedLanguages: 'Microsoft.VisualStudio.Code.LocalizedLanguages',\n\tWebExtension: 'Microsoft.VisualStudio.Code.WebExtension',\n\tSponsorLink: 'Microsoft.VisualStudio.Code.SponsorLink'\n};\n\ninterface ICriterium {\n\treadonly filterType: FilterType;\n\treadonly value?: string;\n}\n\nconst DefaultPageSize = 10;\n\ninterface IQueryState {\n\treadonly pageNumber: number;\n\treadonly pageSize: number;\n\treadonly sortBy: SortBy;\n\treadonly sortOrder: SortOrder;\n\treadonly flags: Flags;\n\treadonly criteria: ICriterium[];\n\treadonly assetTypes: string[];\n\treadonly source?: string;\n}\n\nconst DefaultQueryState: IQueryState = {\n\tpageNumber: 1,\n\tpageSize: DefaultPageSize,\n\tsortBy: SortBy.NoneOrRelevance,\n\tsortOrder: SortOrder.Default,\n\tflags: Flags.None,\n\tcriteria: [],\n\tassetTypes: []\n};\n\ntype GalleryServiceQueryClassification = {\n\towner: 'sandy081';\n\tcomment: 'Information about Marketplace query and its response';\n\treadonly filterTypes: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Filter types used in the query.' };\n\treadonly flags: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Flags passed in the query.' };\n\treadonly sortBy: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'sorted by option passed in the query' };\n\treadonly sortOrder: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'sort order option passed in the query' };\n\treadonly pageNumber: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'requested page number in the query' };\n\treadonly duration: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; 'isMeasurement': true; comment: 'amount of time taken by the query request' };\n\treadonly success: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'whether the query reques is success or not' };\n\treadonly requestBodySize: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'size of the request body' };\n\treadonly responseBodySize?: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'size of the response body' };\n\treadonly statusCode?: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'status code of the response' };\n\treadonly errorCode?: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'error code of the response' };\n\treadonly count?: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'total number of extensions matching the query' };\n\treadonly source?: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'source that requested this query, eg., recommendations, viewlet' };\n\treadonly searchTextLength?: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'length of the search text in the query' };\n};\n\ntype QueryTelemetryData = {\n\treadonly flags: number;\n\treadonly filterTypes: string[];\n\treadonly sortBy: string;\n\treadonly sortOrder: string;\n\treadonly pageNumber: string;\n\treadonly source?: string;\n\treadonly searchTextLength?: number;\n};\n\ntype GalleryServiceQueryEvent = QueryTelemetryData & {\n\treadonly duration: number;\n\treadonly success: boolean;\n\treadonly requestBodySize: string;\n\treadonly responseBodySize?: string;\n\treadonly statusCode?: string;\n\treadonly errorCode?: string;\n\treadonly count?: string;\n};\n\ntype GalleryServiceAdditionalQueryClassification = {\n\towner: 'sandy081';\n\tcomment: 'Response information about the additional query to the Marketplace for fetching all versions to get release version';\n\treadonly duration: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; 'isMeasurement': true; comment: 'Amount of time taken by the additional query' };\n\treadonly count: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Total number of extensions returned by this additional query' };\n};\n\ntype GalleryServiceAdditionalQueryEvent = {\n\treadonly duration: number;\n\treadonly count: number;\n};\n\ninterface IExtensionCriteria {\n\treadonly targetPlatform: TargetPlatform;\n\treadonly compatible: boolean;\n\treadonly includePreRelease: boolean | (IExtensionIdentifier & { includePreRelease: boolean })[];\n\treadonly versions?: (IExtensionIdentifier & { version: string })[];\n}\n\nclass Query {\n\n\tconstructor(private state = DefaultQueryState) { }\n\n\tget pageNumber(): number { return this.state.pageNumber; }\n\tget pageSize(): number { return this.state.pageSize; }\n\tget sortBy(): number { return this.state.sortBy; }\n\tget sortOrder(): number { return this.state.sortOrder; }\n\tget flags(): number { return this.state.flags; }\n\n\twithPage(pageNumber: number, pageSize: number = this.state.pageSize): Query {\n\t\treturn new Query({ ...this.state, pageNumber, pageSize });\n\t}\n\n\twithFilter(filterType: FilterType, ...values: string[]): Query {\n\t\tconst criteria = [\n\t\t\t...this.state.criteria,\n\t\t\t...values.length ? values.map(value => ({ filterType, value })) : [{ filterType }]\n\t\t];\n\n\t\treturn new Query({ ...this.state, criteria });\n\t}\n\n\twithSortBy(sortBy: SortBy): Query {\n\t\treturn new Query({ ...this.state, sortBy });\n\t}\n\n\twithSortOrder(sortOrder: SortOrder): Query {\n\t\treturn new Query({ ...this.state, sortOrder });\n\t}\n\n\twithFlags(...flags: Flags[]): Query {\n\t\treturn new Query({ ...this.state, flags: flags.reduce<number>((r, f) => r | f, 0) });\n\t}\n\n\twithAssetTypes(...assetTypes: string[]): Query {\n\t\treturn new Query({ ...this.state, assetTypes });\n\t}\n\n\twithSource(source: string): Query {\n\t\treturn new Query({ ...this.state, source });\n\t}\n\n\tget raw(): any {\n\t\tconst { criteria, pageNumber, pageSize, sortBy, sortOrder, flags, assetTypes } = this.state;\n\t\tconst filters = [{ criteria, pageNumber, pageSize, sortBy, sortOrder }];\n\t\treturn { filters, assetTypes, flags };\n\t}\n\n\tget searchText(): string {\n\t\tconst criterium = this.state.criteria.filter(criterium => criterium.filterType === FilterType.SearchText)[0];\n\t\treturn criterium && criterium.value ? criterium.value : '';\n\t}\n\n\tget telemetryData(): QueryTelemetryData {\n\t\treturn {\n\t\t\tfilterTypes: this.state.criteria.map(criterium => String(criterium.filterType)),\n\t\t\tflags: this.state.flags,\n\t\t\tsortBy: String(this.sortBy),\n\t\t\tsortOrder: String(this.sortOrder),\n\t\t\tpageNumber: String(this.pageNumber),\n\t\t\tsource: this.state.source,\n\t\t\tsearchTextLength: this.searchText.length\n\t\t};\n\t}\n}\n\nfunction getStatistic(statistics: IRawGalleryExtensionStatistics[], name: string): number {\n\tconst result = (statistics || []).filter(s => s.statisticName === name)[0];\n\treturn result ? result.value : 0;\n}\n\nfunction getCoreTranslationAssets(version: IRawGalleryExtensionVersion): [string, IGalleryExtensionAsset][] {\n\tconst coreTranslationAssetPrefix = 'Microsoft.VisualStudio.Code.Translation.';\n\tconst result = version.files.filter(f => f.assetType.indexOf(coreTranslationAssetPrefix) === 0);\n\treturn result.reduce<[string, IGalleryExtensionAsset][]>((result, file) => {\n\t\tconst asset = getVersionAsset(version, file.assetType);\n\t\tif (asset) {\n\t\t\tresult.push([file.assetType.substring(coreTranslationAssetPrefix.length), asset]);\n\t\t}\n\t\treturn result;\n\t}, []);\n}\n\nfunction getRepositoryAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset | null {\n\tif (version.properties) {\n\t\tconst results = version.properties.filter(p => p.key === AssetType.Repository);\n\t\tconst gitRegExp = new RegExp('((git|ssh|http(s)?)|(git@[\\\\w.]+))(:(//)?)([\\\\w.@:/\\\\-~]+)(.git)(/)?');\n\n\t\tconst uri = results.filter(r => gitRegExp.test(r.value))[0];\n\t\treturn uri ? { uri: uri.value, fallbackUri: uri.value } : null;\n\t}\n\treturn getVersionAsset(version, AssetType.Repository);\n}\n\nfunction getDownloadAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset {\n\treturn {\n\t\turi: `${version.fallbackAssetUri}/${AssetType.VSIX}?redirect=true${version.targetPlatform ? `&targetPlatform=${version.targetPlatform}` : ''}`,\n\t\tfallbackUri: `${version.fallbackAssetUri}/${AssetType.VSIX}${version.targetPlatform ? `?targetPlatform=${version.targetPlatform}` : ''}`\n\t};\n}\n\nfunction getVersionAsset(version: IRawGalleryExtensionVersion, type: string): IGalleryExtensionAsset | null {\n\tconst result = version.files.filter(f => f.assetType === type)[0];\n\treturn result ? {\n\t\turi: `${version.assetUri}/${type}${version.targetPlatform ? `?targetPlatform=${version.targetPlatform}` : ''}`,\n\t\tfallbackUri: `${version.fallbackAssetUri}/${type}${version.targetPlatform ? `?targetPlatform=${version.targetPlatform}` : ''}`\n\t} : null;\n}\n\nfunction getExtensions(version: IRawGalleryExtensionVersion, property: string): string[] {\n\tconst values = version.properties ? version.properties.filter(p => p.key === property) : [];\n\tconst value = values.length > 0 && values[0].value;\n\treturn value ? value.split(',').map(v => adoptToGalleryExtensionId(v)) : [];\n}\n\nfunction getEngine(version: IRawGalleryExtensionVersion): string {\n\tconst values = version.properties ? version.properties.filter(p => p.key === PropertyType.Engine) : [];\n\treturn (values.length > 0 && values[0].value) || '';\n}\n\nfunction isPreReleaseVersion(version: IRawGalleryExtensionVersion): boolean {\n\tconst values = version.properties ? version.properties.filter(p => p.key === PropertyType.PreRelease) : [];\n\treturn values.length > 0 && values[0].value === 'true';\n}\n\nfunction getLocalizedLanguages(version: IRawGalleryExtensionVersion): string[] {\n\tconst values = version.properties ? version.properties.filter(p => p.key === PropertyType.LocalizedLanguages) : [];\n\tconst value = (values.length > 0 && values[0].value) || '';\n\treturn value ? value.split(',') : [];\n}\n\nfunction getSponsorLink(version: IRawGalleryExtensionVersion): string | undefined {\n\treturn version.properties?.find(p => p.key === PropertyType.SponsorLink)?.value;\n}\n\nfunction getIsPreview(flags: string): boolean {\n\treturn flags.indexOf('preview') !== -1;\n}\n\nfunction getTargetPlatformForExtensionVersion(version: IRawGalleryExtensionVersion): TargetPlatform {\n\treturn version.targetPlatform ? toTargetPlatform(version.targetPlatform) : TargetPlatform.UNDEFINED;\n}\n\nfunction getAllTargetPlatforms(rawGalleryExtension: IRawGalleryExtension): TargetPlatform[] {\n\tconst allTargetPlatforms = distinct(rawGalleryExtension.versions.map(getTargetPlatformForExtensionVersion));\n\n\t// Is a web extension only if it has WEB_EXTENSION_TAG\n\tconst isWebExtension = !!rawGalleryExtension.tags?.includes(WEB_EXTENSION_TAG);\n\n\t// Include Web Target Platform only if it is a web extension\n\tconst webTargetPlatformIndex = allTargetPlatforms.indexOf(TargetPlatform.WEB);\n\tif (isWebExtension) {\n\t\tif (webTargetPlatformIndex === -1) {\n\t\t\t// Web extension but does not has web target platform -> add it\n\t\t\tallTargetPlatforms.push(TargetPlatform.WEB);\n\t\t}\n\t} else {\n\t\tif (webTargetPlatformIndex !== -1) {\n\t\t\t// Not a web extension but has web target platform -> remove it\n\t\t\tallTargetPlatforms.splice(webTargetPlatformIndex, 1);\n\t\t}\n\t}\n\n\treturn allTargetPlatforms;\n}\n\nexport function sortExtensionVersions(versions: IRawGalleryExtensionVersion[], preferredTargetPlatform: TargetPlatform): IRawGalleryExtensionVersion[] {\n\t/* It is expected that versions from Marketplace are sorted by version. So we are just sorting by preferred targetPlatform */\n\tconst fallbackTargetPlatforms = getFallbackTargetPlarforms(preferredTargetPlatform);\n\tfor (let index = 0; index < versions.length; index++) {\n\t\tconst version = versions[index];\n\t\tif (version.version === versions[index - 1]?.version) {\n\t\t\tlet insertionIndex = index;\n\t\t\tconst versionTargetPlatform = getTargetPlatformForExtensionVersion(version);\n\t\t\t/* put it at the beginning */\n\t\t\tif (versionTargetPlatform === preferredTargetPlatform) {\n\t\t\t\twhile (insertionIndex > 0 && versions[insertionIndex - 1].version === version.version) { insertionIndex--; }\n\t\t\t}\n\t\t\t/* put it after version with preferred targetPlatform or at the beginning */\n\t\t\telse if (fallbackTargetPlatforms.includes(versionTargetPlatform)) {\n\t\t\t\twhile (insertionIndex > 0 && versions[insertionIndex - 1].version === version.version && getTargetPlatformForExtensionVersion(versions[insertionIndex - 1]) !== preferredTargetPlatform) { insertionIndex--; }\n\t\t\t}\n\t\t\tif (insertionIndex !== index) {\n\t\t\t\tversions.splice(index, 1);\n\t\t\t\tversions.splice(insertionIndex, 0, version);\n\t\t\t}\n\t\t}\n\t}\n\treturn versions;\n}\n\nfunction setTelemetry(extension: IGalleryExtension, index: number, querySource?: string): void {\n\t/* __GDPR__FRAGMENT__\n\t\"GalleryExtensionTelemetryData2\" : {\n\t\t\"index\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\"querySource\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t}\n\t*/\n\textension.telemetryData = { index, querySource };\n}\n\nfunction toExtension(galleryExtension: IRawGalleryExtension, version: IRawGalleryExtensionVersion, allTargetPlatforms: TargetPlatform[]): IGalleryExtension {\n\tconst latestVersion = galleryExtension.versions[0];\n\tconst assets = <IGalleryExtensionAssets>{\n\t\tmanifest: getVersionAsset(version, AssetType.Manifest),\n\t\treadme: getVersionAsset(version, AssetType.Details),\n\t\tchangelog: getVersionAsset(version, AssetType.Changelog),\n\t\tlicense: getVersionAsset(version, AssetType.License),\n\t\trepository: getRepositoryAsset(version),\n\t\tdownload: getDownloadAsset(version),\n\t\ticon: getVersionAsset(version, AssetType.Icon),\n\t\tcoreTranslations: getCoreTranslationAssets(version)\n\t};\n\n\treturn {\n\t\tidentifier: {\n\t\t\tid: getGalleryExtensionId(galleryExtension.publisher.publisherName, galleryExtension.extensionName),\n\t\t\tuuid: galleryExtension.extensionId\n\t\t},\n\t\tname: galleryExtension.extensionName,\n\t\tversion: version.version,\n\t\tdisplayName: galleryExtension.displayName,\n\t\tpublisherId: galleryExtension.publisher.publisherId,\n\t\tpublisher: galleryExtension.publisher.publisherName,\n\t\tpublisherDisplayName: galleryExtension.publisher.displayName,\n\t\tpublisherDomain: galleryExtension.publisher.domain ? { link: galleryExtension.publisher.domain, verified: !!galleryExtension.publisher.isDomainVerified } : undefined,\n\t\tpublisherSponsorLink: getSponsorLink(latestVersion),\n\t\tdescription: galleryExtension.shortDescription || '',\n\t\tinstallCount: getStatistic(galleryExtension.statistics, 'install'),\n\t\trating: getStatistic(galleryExtension.statistics, 'averagerating'),\n\t\tratingCount: getStatistic(galleryExtension.statistics, 'ratingcount'),\n\t\tcategories: galleryExtension.categories || [],\n\t\ttags: galleryExtension.tags || [],\n\t\treleaseDate: Date.parse(galleryExtension.releaseDate),\n\t\tlastUpdated: Date.parse(galleryExtension.lastUpdated),\n\t\tallTargetPlatforms,\n\t\tassets,\n\t\tproperties: {\n\t\t\tdependencies: getExtensions(version, PropertyType.Dependency),\n\t\t\textensionPack: getExtensions(version, PropertyType.ExtensionPack),\n\t\t\tengine: getEngine(version),\n\t\t\tlocalizedLanguages: getLocalizedLanguages(version),\n\t\t\ttargetPlatform: getTargetPlatformForExtensionVersion(version),\n\t\t\tisPreReleaseVersion: isPreReleaseVersion(version)\n\t\t},\n\t\thasPreReleaseVersion: isPreReleaseVersion(latestVersion),\n\t\thasReleaseVersion: true,\n\t\tpreview: getIsPreview(galleryExtension.flags),\n\t};\n}\n\ninterface IRawExtensionsControlManifest {\n\tmalicious: string[];\n\tmigrateToPreRelease?: IStringDictionary<{\n\t\tid: string;\n\t\tdisplayName: string;\n\t\tmigrateStorage?: boolean;\n\t\tengine?: string;\n\t}>;\n\tdeprecated?: IStringDictionary<boolean | {\n\t\tdisallowInstall?: boolean;\n\t\textension?: {\n\t\t\tid: string;\n\t\t\tdisplayName: string;\n\t\t};\n\t\tsettings?: string[];\n\t}>;\n}\n\nabstract class AbstractExtensionGalleryService implements IExtensionGalleryService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate extensionsGalleryUrl: string | undefined;\n\tprivate extensionsControlUrl: string | undefined;\n\n\tprivate readonly commonHeadersPromise: Promise<{ [key: string]: string }>;\n\n\tconstructor(\n\t\tstorageService: IStorageService | undefined,\n\t\t@IRequestService private readonly requestService: IRequestService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t) {\n\t\tconst config = productService.extensionsGallery;\n\t\tthis.extensionsGalleryUrl = config && config.serviceUrl;\n\t\tthis.extensionsControlUrl = config && config.controlUrl;\n\t\tthis.commonHeadersPromise = resolveMarketplaceHeaders(\n\t\t\tproductService.version,\n\t\t\tproductService,\n\t\t\tthis.environmentService,\n\t\t\tthis.configurationService,\n\t\t\tthis.fileService,\n\t\t\tstorageService,\n\t\t\tthis.telemetryService);\n\t}\n\n\tprivate api(path = ''): string {\n\t\treturn `${this.extensionsGalleryUrl}${path}`;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn !!this.extensionsGalleryUrl;\n\t}\n\n\tgetExtensions(extensionInfos: ReadonlyArray<IExtensionInfo>, token: CancellationToken): Promise<IGalleryExtension[]>;\n\tgetExtensions(extensionInfos: ReadonlyArray<IExtensionInfo>, options: IExtensionQueryOptions, token: CancellationToken): Promise<IGalleryExtension[]>;\n\tasync getExtensions(extensionInfos: ReadonlyArray<IExtensionInfo>, arg1: any, arg2?: any): Promise<IGalleryExtension[]> {\n\t\tconst options = CancellationToken.isCancellationToken(arg1) ? {} : arg1 as IExtensionQueryOptions;\n\t\tconst token = CancellationToken.isCancellationToken(arg1) ? arg1 : arg2 as CancellationToken;\n\t\tconst names: string[] = []; const ids: string[] = [], includePreReleases: (IExtensionIdentifier & { includePreRelease: boolean })[] = [], versions: (IExtensionIdentifier & { version: string })[] = [];\n\t\tlet isQueryForReleaseVersionFromPreReleaseVersion = true;\n\t\tfor (const extensionInfo of extensionInfos) {\n\t\t\tif (extensionInfo.uuid) {\n\t\t\t\tids.push(extensionInfo.uuid);\n\t\t\t} else {\n\t\t\t\tnames.push(extensionInfo.id);\n\t\t\t}\n\t\t\t// Set includePreRelease to true if version is set, because the version can be a pre-release version\n\t\t\tconst includePreRelease = !!(extensionInfo.version || extensionInfo.preRelease);\n\t\t\tincludePreReleases.push({ id: extensionInfo.id, uuid: extensionInfo.uuid, includePreRelease });\n\t\t\tif (extensionInfo.version) {\n\t\t\t\tversions.push({ id: extensionInfo.id, uuid: extensionInfo.uuid, version: extensionInfo.version });\n\t\t\t}\n\t\t\tisQueryForReleaseVersionFromPreReleaseVersion = isQueryForReleaseVersionFromPreReleaseVersion && (!!extensionInfo.hasPreRelease && !includePreRelease);\n\t\t}\n\n\t\tif (!ids.length && !names.length) {\n\t\t\treturn [];\n\t\t}\n\n\t\tlet query = new Query().withPage(1, extensionInfos.length);\n\t\tif (ids.length) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, ...ids);\n\t\t}\n\t\tif (names.length) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, ...names);\n\t\t}\n\t\tif (options.queryAllVersions || isQueryForReleaseVersionFromPreReleaseVersion /* Inlcude all versions if every requested extension is for release version and has pre-release version  */) {\n\t\t\tquery = query.withFlags(query.flags, Flags.IncludeVersions);\n\t\t}\n\t\tif (options.source) {\n\t\t\tquery = query.withSource(options.source);\n\t\t}\n\n\t\tconst { extensions } = await this.queryGalleryExtensions(query, { targetPlatform: options.targetPlatform ?? CURRENT_TARGET_PLATFORM, includePreRelease: includePreReleases, versions, compatible: !!options.compatible }, token);\n\t\tif (options.source) {\n\t\t\textensions.forEach((e, index) => setTelemetry(e, index, options.source));\n\t\t}\n\t\treturn extensions;\n\t}\n\n\tasync getCompatibleExtension(extension: IGalleryExtension, includePreRelease: boolean, targetPlatform: TargetPlatform): Promise<IGalleryExtension | null> {\n\t\tif (isNotWebExtensionInWebTargetPlatform(extension.allTargetPlatforms, targetPlatform)) {\n\t\t\treturn null;\n\t\t}\n\t\tif (await this.isExtensionCompatible(extension, includePreRelease, targetPlatform)) {\n\t\t\treturn extension;\n\t\t}\n\t\tconst query = new Query()\n\t\t\t.withFlags(Flags.IncludeVersions)\n\t\t\t.withPage(1, 1)\n\t\t\t.withFilter(FilterType.ExtensionId, extension.identifier.uuid);\n\t\tconst { extensions } = await this.queryGalleryExtensions(query, { targetPlatform, compatible: true, includePreRelease }, CancellationToken.None);\n\t\treturn extensions[0] || null;\n\t}\n\n\tasync isExtensionCompatible(extension: IGalleryExtension, includePreRelease: boolean, targetPlatform: TargetPlatform): Promise<boolean> {\n\t\tif (!isTargetPlatformCompatible(extension.properties.targetPlatform, extension.allTargetPlatforms, targetPlatform)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!includePreRelease && extension.properties.isPreReleaseVersion) {\n\t\t\t// Pre-releases are not allowed when include pre-release flag is not set\n\t\t\treturn false;\n\t\t}\n\n\t\tlet engine = extension.properties.engine;\n\t\tif (!engine) {\n\t\t\tconst manifest = await this.getManifest(extension, CancellationToken.None);\n\t\t\tif (!manifest) {\n\t\t\t\tthrow new Error('Manifest was not found');\n\t\t\t}\n\t\t\tengine = manifest.engines.vscode;\n\t\t}\n\t\treturn isEngineValid(engine, this.productService.version, this.productService.date);\n\t}\n\n\tprivate async isValidVersion(rawGalleryExtensionVersion: IRawGalleryExtensionVersion, versionType: 'release' | 'prerelease' | 'any', compatible: boolean, allTargetPlatforms: TargetPlatform[], targetPlatform: TargetPlatform): Promise<boolean> {\n\t\tif (!isTargetPlatformCompatible(getTargetPlatformForExtensionVersion(rawGalleryExtensionVersion), allTargetPlatforms, targetPlatform)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (versionType !== 'any' && isPreReleaseVersion(rawGalleryExtensionVersion) !== (versionType === 'prerelease')) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (compatible) {\n\t\t\ttry {\n\t\t\t\tconst engine = await this.getEngine(rawGalleryExtensionVersion);\n\t\t\t\tif (!isEngineValid(engine, this.productService.version, this.productService.date)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.error(`Error while getting the engine for the version ${rawGalleryExtensionVersion.version}.`, getErrorMessage(error));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tasync query(options: IQueryOptions, token: CancellationToken): Promise<IPager<IGalleryExtension>> {\n\t\tif (!this.isEnabled()) {\n\t\t\tthrow new Error('No extension gallery service configured.');\n\t\t}\n\n\t\tlet text = options.text || '';\n\t\tconst pageSize = options.pageSize ?? 50;\n\n\t\tlet query = new Query()\n\t\t\t.withPage(1, pageSize);\n\n\t\tif (text) {\n\t\t\t// Use category filter instead of \"category:themes\"\n\t\t\ttext = text.replace(/\\bcategory:(\"([^\"]*)\"|([^\"]\\S*))(\\s+|\\b|$)/g, (_, quotedCategory, category) => {\n\t\t\t\tquery = query.withFilter(FilterType.Category, category || quotedCategory);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\t// Use tag filter instead of \"tag:debuggers\"\n\t\t\ttext = text.replace(/\\btag:(\"([^\"]*)\"|([^\"]\\S*))(\\s+|\\b|$)/g, (_, quotedTag, tag) => {\n\t\t\t\tquery = query.withFilter(FilterType.Tag, tag || quotedTag);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\t// Use featured filter\n\t\t\ttext = text.replace(/\\bfeatured(\\s+|\\b|$)/g, () => {\n\t\t\t\tquery = query.withFilter(FilterType.Featured);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\ttext = text.trim();\n\n\t\t\tif (text) {\n\t\t\t\ttext = text.length < 200 ? text : text.substring(0, 200);\n\t\t\t\tquery = query.withFilter(FilterType.SearchText, text);\n\t\t\t}\n\n\t\t\tquery = query.withSortBy(SortBy.NoneOrRelevance);\n\t\t} else if (options.ids) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, ...options.ids);\n\t\t} else if (options.names) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, ...options.names);\n\t\t} else {\n\t\t\tquery = query.withSortBy(SortBy.InstallCount);\n\t\t}\n\n\t\tif (typeof options.sortBy === 'number') {\n\t\t\tquery = query.withSortBy(options.sortBy);\n\t\t}\n\n\t\tif (typeof options.sortOrder === 'number') {\n\t\t\tquery = query.withSortOrder(options.sortOrder);\n\t\t}\n\n\t\tif (options.source) {\n\t\t\tquery = query.withSource(options.source);\n\t\t}\n\n\t\tconst runQuery = async (query: Query, token: CancellationToken) => {\n\t\t\tconst { extensions, total } = await this.queryGalleryExtensions(query, { targetPlatform: CURRENT_TARGET_PLATFORM, compatible: false, includePreRelease: !!options.includePreRelease }, token);\n\t\t\textensions.forEach((e, index) => setTelemetry(e, ((query.pageNumber - 1) * query.pageSize) + index, options.source));\n\t\t\treturn { extensions, total };\n\t\t};\n\t\tconst { extensions, total } = await runQuery(query, token);\n\t\tconst getPage = async (pageIndex: number, ct: CancellationToken) => {\n\t\t\tif (ct.isCancellationRequested) {\n\t\t\t\tthrow new CancellationError();\n\t\t\t}\n\t\t\tconst { extensions } = await runQuery(query.withPage(pageIndex + 1), ct);\n\t\t\treturn extensions;\n\t\t};\n\n\t\treturn { firstPage: extensions, total, pageSize: query.pageSize, getPage } as IPager<IGalleryExtension>;\n\t}\n\n\tprivate async queryGalleryExtensions(query: Query, criteria: IExtensionCriteria, token: CancellationToken): Promise<{ extensions: IGalleryExtension[]; total: number }> {\n\t\tconst flags = query.flags;\n\n\t\t/**\n\t\t * If both version flags (IncludeLatestVersionOnly and IncludeVersions) are included, then only include latest versions (IncludeLatestVersionOnly) flag.\n\t\t */\n\t\tif (!!(query.flags & Flags.IncludeLatestVersionOnly) && !!(query.flags & Flags.IncludeVersions)) {\n\t\t\tquery = query.withFlags(query.flags & ~Flags.IncludeVersions, Flags.IncludeLatestVersionOnly);\n\t\t}\n\n\t\t/**\n\t\t * If version flags (IncludeLatestVersionOnly and IncludeVersions) are not included, default is to query for latest versions (IncludeLatestVersionOnly).\n\t\t */\n\t\tif (!(query.flags & Flags.IncludeLatestVersionOnly) && !(query.flags & Flags.IncludeVersions)) {\n\t\t\tquery = query.withFlags(query.flags, Flags.IncludeLatestVersionOnly);\n\t\t}\n\n\t\t/**\n\t\t * If versions criteria exist, then remove IncludeLatestVersionOnly flag and add IncludeVersions flag.\n\t\t */\n\t\tif (criteria.versions?.length) {\n\t\t\tquery = query.withFlags(query.flags & ~Flags.IncludeLatestVersionOnly, Flags.IncludeVersions);\n\t\t}\n\n\t\t/**\n\t\t * Add necessary extension flags\n\t\t */\n\t\tquery = query.withFlags(query.flags, Flags.IncludeAssetUri, Flags.IncludeCategoryAndTags, Flags.IncludeFiles, Flags.IncludeStatistics, Flags.IncludeVersionProperties);\n\t\tconst { galleryExtensions: rawGalleryExtensions, total } = await this.queryRawGalleryExtensions(query, token);\n\n\t\tconst hasAllVersions: boolean = !(query.flags & Flags.IncludeLatestVersionOnly);\n\t\tif (hasAllVersions) {\n\t\t\tconst extensions: IGalleryExtension[] = [];\n\t\t\tfor (const rawGalleryExtension of rawGalleryExtensions) {\n\t\t\t\tconst extension = await this.toGalleryExtensionWithCriteria(rawGalleryExtension, criteria);\n\t\t\t\tif (extension) {\n\t\t\t\t\textensions.push(extension);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn { extensions, total };\n\t\t}\n\n\t\tconst result: [number, IGalleryExtension][] = [];\n\t\tconst needAllVersions = new Map<string, number>();\n\t\tfor (let index = 0; index < rawGalleryExtensions.length; index++) {\n\t\t\tconst rawGalleryExtension = rawGalleryExtensions[index];\n\t\t\tconst extensionIdentifier = { id: getGalleryExtensionId(rawGalleryExtension.publisher.publisherName, rawGalleryExtension.extensionName), uuid: rawGalleryExtension.extensionId };\n\t\t\tconst includePreRelease = isBoolean(criteria.includePreRelease) ? criteria.includePreRelease : !!criteria.includePreRelease.find(extensionIdentifierWithPreRelease => areSameExtensions(extensionIdentifierWithPreRelease, extensionIdentifier))?.includePreRelease;\n\t\t\tif (criteria.compatible && isNotWebExtensionInWebTargetPlatform(getAllTargetPlatforms(rawGalleryExtension), criteria.targetPlatform)) {\n\t\t\t\t/** Skip if requested for a web-compatible extension and it is not a web extension.\n\t\t\t\t * All versions are not needed in this case\n\t\t\t\t*/\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst extension = await this.toGalleryExtensionWithCriteria(rawGalleryExtension, criteria);\n\t\t\tif (!extension\n\t\t\t\t/** Need all versions if the extension is a pre-release version but\n\t\t\t\t * \t\t- the query is to look for a release version or\n\t\t\t\t * \t\t- the extension has no release version\n\t\t\t\t * Get all versions to get or check the release version\n\t\t\t\t*/\n\t\t\t\t|| (extension.properties.isPreReleaseVersion && (!includePreRelease || !extension.hasReleaseVersion))\n\t\t\t\t/**\n\t\t\t\t * Need all versions if the extension is a release version with a different target platform than requested and also has a pre-release version\n\t\t\t\t * Because, this is a platform specific extension and can have a newer release version supporting this platform.\n\t\t\t\t * See https://github.com/microsoft/vscode/issues/139628\n\t\t\t\t*/\n\t\t\t\t|| (!extension.properties.isPreReleaseVersion && extension.properties.targetPlatform !== criteria.targetPlatform && extension.hasPreReleaseVersion)\n\t\t\t) {\n\t\t\t\tneedAllVersions.set(rawGalleryExtension.extensionId, index);\n\t\t\t} else {\n\t\t\t\tresult.push([index, extension]);\n\t\t\t}\n\t\t}\n\n\t\tif (needAllVersions.size) {\n\t\t\tconst startTime = new Date().getTime();\n\t\t\tconst query = new Query()\n\t\t\t\t.withFlags(flags & ~Flags.IncludeLatestVersionOnly, Flags.IncludeVersions)\n\t\t\t\t.withPage(1, needAllVersions.size)\n\t\t\t\t.withFilter(FilterType.ExtensionId, ...needAllVersions.keys());\n\t\t\tconst { extensions } = await this.queryGalleryExtensions(query, criteria, token);\n\t\t\tthis.telemetryService.publicLog2<GalleryServiceAdditionalQueryEvent, GalleryServiceAdditionalQueryClassification>('galleryService:additionalQuery', {\n\t\t\t\tduration: new Date().getTime() - startTime,\n\t\t\t\tcount: needAllVersions.size\n\t\t\t});\n\t\t\tfor (const extension of extensions) {\n\t\t\t\tconst index = needAllVersions.get(extension.identifier.uuid)!;\n\t\t\t\tresult.push([index, extension]);\n\t\t\t}\n\t\t}\n\n\t\treturn { extensions: result.sort((a, b) => a[0] - b[0]).map(([, extension]) => extension), total };\n\t}\n\n\tprivate async toGalleryExtensionWithCriteria(rawGalleryExtension: IRawGalleryExtension, criteria: IExtensionCriteria): Promise<IGalleryExtension | null> {\n\n\t\tconst extensionIdentifier = { id: getGalleryExtensionId(rawGalleryExtension.publisher.publisherName, rawGalleryExtension.extensionName), uuid: rawGalleryExtension.extensionId };\n\t\tconst version = criteria.versions?.find(extensionIdentifierWithVersion => areSameExtensions(extensionIdentifierWithVersion, extensionIdentifier))?.version;\n\t\tconst includePreRelease = isBoolean(criteria.includePreRelease) ? criteria.includePreRelease : !!criteria.includePreRelease.find(extensionIdentifierWithPreRelease => areSameExtensions(extensionIdentifierWithPreRelease, extensionIdentifier))?.includePreRelease;\n\t\tconst allTargetPlatforms = getAllTargetPlatforms(rawGalleryExtension);\n\t\tconst rawGalleryExtensionVersions = sortExtensionVersions(rawGalleryExtension.versions, criteria.targetPlatform);\n\n\t\tif (criteria.compatible && isNotWebExtensionInWebTargetPlatform(allTargetPlatforms, criteria.targetPlatform)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tfor (let index = 0; index < rawGalleryExtensionVersions.length; index++) {\n\t\t\tconst rawGalleryExtensionVersion = rawGalleryExtensionVersions[index];\n\t\t\tif (version && rawGalleryExtensionVersion.version !== version) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Allow any version if includePreRelease flag is set otherwise only release versions are allowed\n\t\t\tif (await this.isValidVersion(rawGalleryExtensionVersion, includePreRelease ? 'any' : 'release', criteria.compatible, allTargetPlatforms, criteria.targetPlatform)) {\n\t\t\t\treturn toExtension(rawGalleryExtension, rawGalleryExtensionVersion, allTargetPlatforms);\n\t\t\t}\n\t\t\tif (version && rawGalleryExtensionVersion.version === version) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tif (version || criteria.compatible) {\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n\t\t * Fallback: Return the latest version\n\t\t * This can happen when the extension does not have a release version or does not have a version compatible with the given target platform.\n\t\t */\n\t\treturn toExtension(rawGalleryExtension, rawGalleryExtension.versions[0], allTargetPlatforms);\n\t}\n\n\tprivate async queryRawGalleryExtensions(query: Query, token: CancellationToken): Promise<{ galleryExtensions: IRawGalleryExtension[]; total: number }> {\n\t\tif (!this.isEnabled()) {\n\t\t\tthrow new Error('No extension gallery service configured.');\n\t\t}\n\n\t\tquery = query\n\t\t\t/* Always exclude non validated extensions */\n\t\t\t.withFlags(query.flags, Flags.ExcludeNonValidated)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code')\n\t\t\t/* Always exclude unpublished extensions */\n\t\t\t.withFilter(FilterType.ExcludeWithFlags, flagsToString(Flags.Unpublished));\n\n\t\tconst commonHeaders = await this.commonHeadersPromise;\n\t\tconst data = JSON.stringify(query.raw);\n\t\tconst headers = {\n\t\t\t...commonHeaders,\n\t\t\t'Content-Type': 'application/json',\n\t\t\t'Accept': 'application/json;api-version=3.0-preview.1',\n\t\t\t'Accept-Encoding': 'gzip',\n\t\t\t'Content-Length': String(data.length),\n\t\t};\n\n\t\tconst startTime = new Date().getTime();\n\t\tlet context: IRequestContext | undefined, error: any, total: number = 0;\n\n\t\ttry {\n\t\t\tcontext = await this.requestService.request({\n\t\t\t\ttype: 'POST',\n\t\t\t\turl: this.api('/extensionquery'),\n\t\t\t\tdata,\n\t\t\t\theaders\n\t\t\t}, token);\n\n\t\t\tif (context.res.statusCode && context.res.statusCode >= 400 && context.res.statusCode < 500) {\n\t\t\t\treturn { galleryExtensions: [], total };\n\t\t\t}\n\n\t\t\tconst result = await asJson<IRawGalleryQueryResult>(context);\n\t\t\tif (result) {\n\t\t\t\tconst r = result.results[0];\n\t\t\t\tconst galleryExtensions = r.extensions;\n\t\t\t\tconst resultCount = r.resultMetadata && r.resultMetadata.filter(m => m.metadataType === 'ResultCount')[0];\n\t\t\t\ttotal = resultCount && resultCount.metadataItems.filter(i => i.name === 'TotalCount')[0].count || 0;\n\n\t\t\t\treturn { galleryExtensions, total };\n\t\t\t}\n\t\t\treturn { galleryExtensions: [], total };\n\n\t\t} catch (e) {\n\t\t\terror = e;\n\t\t\tthrow e;\n\t\t} finally {\n\t\t\tthis.telemetryService.publicLog2<GalleryServiceQueryEvent, GalleryServiceQueryClassification>('galleryService:query', {\n\t\t\t\t...query.telemetryData,\n\t\t\t\trequestBodySize: String(data.length),\n\t\t\t\tduration: new Date().getTime() - startTime,\n\t\t\t\tsuccess: !!context && isSuccess(context),\n\t\t\t\tresponseBodySize: context?.res.headers['Content-Length'],\n\t\t\t\tstatusCode: context ? String(context.res.statusCode) : undefined,\n\t\t\t\terrorCode: error\n\t\t\t\t\t? isCancellationError(error) ? 'canceled' : getErrorMessage(error).startsWith('XHR timeout') ? 'timeout' : 'failed'\n\t\t\t\t\t: undefined,\n\t\t\t\tcount: String(total)\n\t\t\t});\n\t\t}\n\t}\n\n\tasync reportStatistic(publisher: string, name: string, version: string, type: StatisticType): Promise<void> {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst url = isWeb ? this.api(`/itemName/${publisher}.${name}/version/${version}/statType/${type === StatisticType.Install ? '1' : '3'}/vscodewebextension`) : this.api(`/publishers/${publisher}/extensions/${name}/${version}/stats?statType=${type}`);\n\t\tconst Accept = isWeb ? 'api-version=6.1-preview.1' : '*/*;api-version=4.0-preview.1';\n\n\t\tconst commonHeaders = await this.commonHeadersPromise;\n\t\tconst headers = { ...commonHeaders, Accept };\n\t\ttry {\n\t\t\tawait this.requestService.request({\n\t\t\t\ttype: 'POST',\n\t\t\t\turl,\n\t\t\t\theaders\n\t\t\t}, CancellationToken.None);\n\t\t} catch (error) { /* Ignore */ }\n\t}\n\n\tasync download(extension: IGalleryExtension, location: URI, operation: InstallOperation): Promise<void> {\n\t\tthis.logService.trace('ExtensionGalleryService#download', extension.identifier.id);\n\t\tconst data = getGalleryExtensionTelemetryData(extension);\n\t\tconst startTime = new Date().getTime();\n\t\t/* __GDPR__\n\t\t\t\"galleryService:downloadVSIX\" : {\n\t\t\t\t\"owner\": \"sandy081\",\n\t\t\t\t\"duration\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\tconst log = (duration: number) => this.telemetryService.publicLog('galleryService:downloadVSIX', { ...data, duration });\n\n\t\tconst operationParam = operation === InstallOperation.Install ? 'install' : operation === InstallOperation.Update ? 'update' : '';\n\t\tconst downloadAsset = operationParam ? {\n\t\t\turi: `${extension.assets.download.uri}${URI.parse(extension.assets.download.uri).query ? '&' : '?'}${operationParam}=true`,\n\t\t\tfallbackUri: `${extension.assets.download.fallbackUri}${URI.parse(extension.assets.download.fallbackUri).query ? '&' : '?'}${operationParam}=true`\n\t\t} : extension.assets.download;\n\n\t\tconst context = await this.getAsset(downloadAsset);\n\t\tawait this.fileService.writeFile(location, context.stream);\n\t\tlog(new Date().getTime() - startTime);\n\t}\n\n\tasync getReadme(extension: IGalleryExtension, token: CancellationToken): Promise<string> {\n\t\tif (extension.assets.readme) {\n\t\t\tconst context = await this.getAsset(extension.assets.readme, {}, token);\n\t\t\tconst content = await asTextOrError(context);\n\t\t\treturn content || '';\n\t\t}\n\t\treturn '';\n\t}\n\n\tasync getManifest(extension: IGalleryExtension, token: CancellationToken): Promise<IExtensionManifest | null> {\n\t\tif (extension.assets.manifest) {\n\t\t\tconst context = await this.getAsset(extension.assets.manifest, {}, token);\n\t\t\tconst text = await asTextOrError(context);\n\t\t\treturn text ? JSON.parse(text) : null;\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate async getManifestFromRawExtensionVersion(rawExtensionVersion: IRawGalleryExtensionVersion, token: CancellationToken): Promise<IExtensionManifest | null> {\n\t\tconst manifestAsset = getVersionAsset(rawExtensionVersion, AssetType.Manifest);\n\t\tif (!manifestAsset) {\n\t\t\tthrow new Error('Manifest was not found');\n\t\t}\n\t\tconst headers = { 'Accept-Encoding': 'gzip' };\n\t\tconst context = await this.getAsset(manifestAsset, { headers });\n\t\treturn await asJson<IExtensionManifest>(context);\n\t}\n\n\tasync getCoreTranslation(extension: IGalleryExtension, languageId: string): Promise<ITranslation | null> {\n\t\tconst asset = extension.assets.coreTranslations.filter(t => t[0] === languageId.toUpperCase())[0];\n\t\tif (asset) {\n\t\t\tconst context = await this.getAsset(asset[1]);\n\t\t\tconst text = await asTextOrError(context);\n\t\t\treturn text ? JSON.parse(text) : null;\n\t\t}\n\t\treturn null;\n\t}\n\n\tasync getChangelog(extension: IGalleryExtension, token: CancellationToken): Promise<string> {\n\t\tif (extension.assets.changelog) {\n\t\t\tconst context = await this.getAsset(extension.assets.changelog, {}, token);\n\t\t\tconst content = await asTextOrError(context);\n\t\t\treturn content || '';\n\t\t}\n\t\treturn '';\n\t}\n\n\tasync getAllCompatibleVersions(extension: IGalleryExtension, includePreRelease: boolean, targetPlatform: TargetPlatform): Promise<IGalleryExtensionVersion[]> {\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeVersions, Flags.IncludeCategoryAndTags, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t.withPage(1, 1);\n\n\t\tif (extension.identifier.uuid) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, extension.identifier.uuid);\n\t\t} else {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, extension.identifier.id);\n\t\t}\n\n\t\tconst { galleryExtensions } = await this.queryRawGalleryExtensions(query, CancellationToken.None);\n\t\tif (!galleryExtensions.length) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst allTargetPlatforms = getAllTargetPlatforms(galleryExtensions[0]);\n\t\tif (isNotWebExtensionInWebTargetPlatform(allTargetPlatforms, targetPlatform)) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst validVersions: IRawGalleryExtensionVersion[] = [];\n\t\tawait Promise.all(galleryExtensions[0].versions.map(async (version) => {\n\t\t\ttry {\n\t\t\t\tif (await this.isValidVersion(version, includePreRelease ? 'any' : 'release', true, allTargetPlatforms, targetPlatform)) {\n\t\t\t\t\tvalidVersions.push(version);\n\t\t\t\t}\n\t\t\t} catch (error) { /* Ignore error and skip version */ }\n\t\t}));\n\n\t\tconst result: IGalleryExtensionVersion[] = [];\n\t\tconst seen = new Set<string>();\n\t\tfor (const version of sortExtensionVersions(validVersions, targetPlatform)) {\n\t\t\tif (!seen.has(version.version)) {\n\t\t\t\tseen.add(version.version);\n\t\t\t\tresult.push({ version: version.version, date: version.lastUpdated, isPreReleaseVersion: isPreReleaseVersion(version) });\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate async getAsset(asset: IGalleryExtensionAsset, options: IRequestOptions = {}, token: CancellationToken = CancellationToken.None): Promise<IRequestContext> {\n\t\tconst commonHeaders = await this.commonHeadersPromise;\n\t\tconst baseOptions = { type: 'GET' };\n\t\tconst headers = { ...commonHeaders, ...(options.headers || {}) };\n\t\toptions = { ...options, ...baseOptions, headers };\n\n\t\tconst url = asset.uri;\n\t\tconst fallbackUrl = asset.fallbackUri;\n\t\tconst firstOptions = { ...options, url };\n\n\t\ttry {\n\t\t\tconst context = await this.requestService.request(firstOptions, token);\n\t\t\tif (context.res.statusCode === 200) {\n\t\t\t\treturn context;\n\t\t\t}\n\t\t\tconst message = await asTextOrError(context);\n\t\t\tthrow new Error(`Expected 200, got back ${context.res.statusCode} instead.\\n\\n${message}`);\n\t\t} catch (err) {\n\t\t\tif (isCancellationError(err)) {\n\t\t\t\tthrow err;\n\t\t\t}\n\n\t\t\tconst message = getErrorMessage(err);\n\t\t\ttype GalleryServiceCDNFallbackClassification = {\n\t\t\t\towner: 'sandy081';\n\t\t\t\tcomment: 'Fallback request information when the primary asset request to CDN fails';\n\t\t\t\turl: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'asset url that failed' };\n\t\t\t\tmessage: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'error message' };\n\t\t\t};\n\t\t\ttype GalleryServiceCDNFallbackEvent = {\n\t\t\t\turl: string;\n\t\t\t\tmessage: string;\n\t\t\t};\n\t\t\tthis.telemetryService.publicLog2<GalleryServiceCDNFallbackEvent, GalleryServiceCDNFallbackClassification>('galleryService:cdnFallback', { url, message });\n\n\t\t\tconst fallbackOptions = { ...options, url: fallbackUrl };\n\t\t\treturn this.requestService.request(fallbackOptions, token);\n\t\t}\n\t}\n\n\tprivate async getEngine(rawExtensionVersion: IRawGalleryExtensionVersion): Promise<string> {\n\t\tlet engine = getEngine(rawExtensionVersion);\n\t\tif (!engine) {\n\t\t\tconst manifest = await this.getManifestFromRawExtensionVersion(rawExtensionVersion, CancellationToken.None);\n\t\t\tif (!manifest) {\n\t\t\t\tthrow new Error('Manifest was not found');\n\t\t\t}\n\t\t\tengine = manifest.engines.vscode;\n\t\t}\n\t\treturn engine;\n\t}\n\n\tasync getExtensionsControlManifest(): Promise<IExtensionsControlManifest> {\n\t\tif (!this.isEnabled()) {\n\t\t\tthrow new Error('No extension gallery service configured.');\n\t\t}\n\n\t\tif (!this.extensionsControlUrl) {\n\t\t\treturn { malicious: [], deprecated: {} };\n\t\t}\n\n\t\tconst context = await this.requestService.request({ type: 'GET', url: this.extensionsControlUrl }, CancellationToken.None);\n\t\tif (context.res.statusCode !== 200) {\n\t\t\tthrow new Error('Could not get extensions report.');\n\t\t}\n\n\t\tconst result = await asJson<IRawExtensionsControlManifest>(context);\n\t\tconst malicious: IExtensionIdentifier[] = [];\n\t\tconst deprecated: IStringDictionary<IDeprecationInfo> = {};\n\t\tif (result) {\n\t\t\tfor (const id of result.malicious) {\n\t\t\t\tmalicious.push({ id });\n\t\t\t}\n\t\t\tif (result.migrateToPreRelease) {\n\t\t\t\tfor (const [unsupportedPreReleaseExtensionId, preReleaseExtensionInfo] of Object.entries(result.migrateToPreRelease)) {\n\t\t\t\t\tif (!preReleaseExtensionInfo.engine || isEngineValid(preReleaseExtensionInfo.engine, this.productService.version, this.productService.date)) {\n\t\t\t\t\t\tdeprecated[unsupportedPreReleaseExtensionId.toLowerCase()] = {\n\t\t\t\t\t\t\tdisallowInstall: true,\n\t\t\t\t\t\t\textension: {\n\t\t\t\t\t\t\t\tid: preReleaseExtensionInfo.id,\n\t\t\t\t\t\t\t\tdisplayName: preReleaseExtensionInfo.displayName,\n\t\t\t\t\t\t\t\tautoMigrate: { storage: !!preReleaseExtensionInfo.migrateStorage },\n\t\t\t\t\t\t\t\tpreRelease: true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (result.deprecated) {\n\t\t\t\tfor (const [deprecatedExtensionId, deprecationInfo] of Object.entries(result.deprecated)) {\n\t\t\t\t\tif (deprecationInfo) {\n\t\t\t\t\t\tdeprecated[deprecatedExtensionId.toLowerCase()] = isBoolean(deprecationInfo) ? {} : deprecationInfo;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { malicious, deprecated };\n\t}\n}\n\nexport class ExtensionGalleryService extends AbstractExtensionGalleryService {\n\n\tconstructor(\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IRequestService requestService: IRequestService,\n\t\t@ILogService logService: ILogService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IProductService productService: IProductService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t) {\n\t\tsuper(storageService, requestService, logService, environmentService, telemetryService, fileService, productService, configurationService);\n\t}\n}\n\nexport class ExtensionGalleryServiceWithNoStorageService extends AbstractExtensionGalleryService {\n\n\tconstructor(\n\t\t@IRequestService requestService: IRequestService,\n\t\t@ILogService logService: ILogService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IProductService productService: IProductService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t) {\n\t\tsuper(undefined, requestService, logService, environmentService, telemetryService, fileService, productService, configurationService);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IExtensionHostExitInfo } from 'vs/workbench/services/remote/common/remoteAgentService';\n\nexport const IExtensionHostStatusService = createDecorator<IExtensionHostStatusService>('extensionHostStatusService');\n\nexport interface IExtensionHostStatusService {\n\treadonly _serviceBrand: undefined;\n\n\tsetExitInfo(reconnectionToken: string, info: IExtensionHostExitInfo): void;\n\tgetExitInfo(reconnectionToken: string): IExtensionHostExitInfo | null;\n}\n\nexport class ExtensionHostStatusService implements IExtensionHostStatusService {\n\t_serviceBrand: undefined;\n\n\tprivate readonly _exitInfo = new Map<string, IExtensionHostExitInfo>();\n\n\tsetExitInfo(reconnectionToken: string, info: IExtensionHostExitInfo): void {\n\t\tthis._exitInfo.set(reconnectionToken, info);\n\t}\n\n\tgetExitInfo(reconnectionToken: string): IExtensionHostExitInfo | null {\n\t\treturn this._exitInfo.get(reconnectionToken) || null;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { PersistentProtocol, ProtocolConstants, ISocket } from 'vs/base/parts/ipc/common/ipc.net';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { ProcessTimeRunOnceScheduler } from 'vs/base/common/async';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\n\nexport interface IExtensionsManagementProcessInitData {\n\targs: NativeParsedArgs;\n}\n\nexport function printTime(ms: number): string {\n\tlet h = 0;\n\tlet m = 0;\n\tlet s = 0;\n\tif (ms >= 1000) {\n\t\ts = Math.floor(ms / 1000);\n\t\tms -= s * 1000;\n\t}\n\tif (s >= 60) {\n\t\tm = Math.floor(s / 60);\n\t\ts -= m * 60;\n\t}\n\tif (m >= 60) {\n\t\th = Math.floor(m / 60);\n\t\tm -= h * 60;\n\t}\n\tconst _h = h ? `${h}h` : ``;\n\tconst _m = m ? `${m}m` : ``;\n\tconst _s = s ? `${s}s` : ``;\n\tconst _ms = ms ? `${ms}ms` : ``;\n\treturn `${_h}${_m}${_s}${_ms}`;\n}\n\nexport class ManagementConnection {\n\n\tprivate _onClose = new Emitter<void>();\n\tpublic readonly onClose: Event<void> = this._onClose.event;\n\n\tprivate readonly _reconnectionGraceTime: number;\n\tprivate readonly _reconnectionShortGraceTime: number;\n\tprivate _remoteAddress: string;\n\n\tpublic readonly protocol: PersistentProtocol;\n\tprivate _disposed: boolean;\n\tprivate _disconnectRunner1: ProcessTimeRunOnceScheduler;\n\tprivate _disconnectRunner2: ProcessTimeRunOnceScheduler;\n\n\tconstructor(\n\t\tprivate readonly _logService: ILogService,\n\t\tprivate readonly _reconnectionToken: string,\n\t\tremoteAddress: string,\n\t\tprotocol: PersistentProtocol\n\t) {\n\t\tthis._reconnectionGraceTime = ProtocolConstants.ReconnectionGraceTime;\n\t\tthis._reconnectionShortGraceTime = ProtocolConstants.ReconnectionShortGraceTime;\n\t\tthis._remoteAddress = remoteAddress;\n\n\t\tthis.protocol = protocol;\n\t\tthis._disposed = false;\n\t\tthis._disconnectRunner1 = new ProcessTimeRunOnceScheduler(() => {\n\t\t\tthis._log(`The reconnection grace time of ${printTime(this._reconnectionGraceTime)} has expired, so the connection will be disposed.`);\n\t\t\tthis._cleanResources();\n\t\t}, this._reconnectionGraceTime);\n\t\tthis._disconnectRunner2 = new ProcessTimeRunOnceScheduler(() => {\n\t\t\tthis._log(`The reconnection short grace time of ${printTime(this._reconnectionShortGraceTime)} has expired, so the connection will be disposed.`);\n\t\t\tthis._cleanResources();\n\t\t}, this._reconnectionShortGraceTime);\n\n\t\tthis.protocol.onDidDispose(() => {\n\t\t\tthis._log(`The client has disconnected gracefully, so the connection will be disposed.`);\n\t\t\tthis._cleanResources();\n\t\t});\n\t\tthis.protocol.onSocketClose(() => {\n\t\t\tthis._log(`The client has disconnected, will wait for reconnection ${printTime(this._reconnectionGraceTime)} before disposing...`);\n\t\t\t// The socket has closed, let's give the renderer a certain amount of time to reconnect\n\t\t\tthis._disconnectRunner1.schedule();\n\t\t});\n\n\t\tthis._log(`New connection established.`);\n\t}\n\n\tprivate _log(_str: string): void {\n\t\tthis._logService.info(`[${this._remoteAddress}][${this._reconnectionToken.substr(0, 8)}][ManagementConnection] ${_str}`);\n\t}\n\n\tpublic shortenReconnectionGraceTimeIfNecessary(): void {\n\t\tif (this._disconnectRunner2.isScheduled()) {\n\t\t\t// we are disconnected and already running the short reconnection timer\n\t\t\treturn;\n\t\t}\n\t\tif (this._disconnectRunner1.isScheduled()) {\n\t\t\tthis._log(`Another client has connected, will shorten the wait for reconnection ${printTime(this._reconnectionShortGraceTime)} before disposing...`);\n\t\t\t// we are disconnected and running the long reconnection timer\n\t\t\tthis._disconnectRunner2.schedule();\n\t\t}\n\t}\n\n\tprivate _cleanResources(): void {\n\t\tif (this._disposed) {\n\t\t\t// already called\n\t\t\treturn;\n\t\t}\n\t\tthis._disposed = true;\n\t\tthis._disconnectRunner1.dispose();\n\t\tthis._disconnectRunner2.dispose();\n\t\tconst socket = this.protocol.getSocket();\n\t\tthis.protocol.sendDisconnect();\n\t\tthis.protocol.dispose();\n\t\tsocket.end();\n\t\tthis._onClose.fire(undefined);\n\t}\n\n\tpublic acceptReconnection(remoteAddress: string, socket: ISocket, initialDataChunk: VSBuffer): void {\n\t\tthis._remoteAddress = remoteAddress;\n\t\tthis._log(`The client has reconnected.`);\n\t\tthis._disconnectRunner1.cancel();\n\t\tthis._disconnectRunner2.cancel();\n\t\tthis.protocol.beginAcceptReconnection(socket, initialDataChunk);\n\t\tthis.protocol.endAcceptReconnection();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { FileAccess } from 'vs/base/common/network';\nimport * as path from 'vs/base/common/path';\n\nimport * as lp from 'vs/base/node/languagePacks';\nimport product from 'vs/platform/product/common/product';\n\nconst metaData = path.join(FileAccess.asFileUri('', require).fsPath, 'nls.metadata.json');\nconst _cache: Map<string, Promise<lp.NLSConfiguration>> = new Map();\n\nfunction exists(file: string) {\n\treturn new Promise(c => fs.exists(file, c));\n}\n\nexport function getNLSConfiguration(language: string, userDataPath: string): Promise<lp.NLSConfiguration> {\n\treturn exists(metaData).then((fileExists) => {\n\t\tif (!fileExists || !product.commit) {\n\t\t\t// console.log(`==> MetaData or commit unknown. Using default language.`);\n\t\t\treturn Promise.resolve({ locale: 'en', availableLanguages: {} });\n\t\t}\n\t\tconst key = `${language}||${userDataPath}`;\n\t\tlet result = _cache.get(key);\n\t\tif (!result) {\n\t\t\tresult = lp.getNLSConfiguration(product.commit, userDataPath, metaData, language).then(value => {\n\t\t\t\tif (InternalNLSConfiguration.is(value)) {\n\t\t\t\t\tvalue._languagePackSupport = true;\n\t\t\t\t}\n\t\t\t\t// If the configuration has no results keep trying since code-server\n\t\t\t\t// doesn't restart when a language is installed so this result would\n\t\t\t\t// persist (the plugin might not be installed yet for example).\n\t\t\t\tif (value.locale !== 'en' && value.locale !== 'en-us' && Object.keys(value.availableLanguages).length === 0) {\n\t\t\t\t\t_cache.delete(key);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t});\n\t\t\t_cache.set(key, result);\n\t\t}\n\t\treturn result;\n\t});\n}\n\nexport namespace InternalNLSConfiguration {\n\texport function is(value: lp.NLSConfiguration): value is lp.InternalNLSConfiguration {\n\t\tconst candidate: lp.InternalNLSConfiguration = value as lp.InternalNLSConfiguration;\n\t\treturn candidate && typeof candidate._languagePackId === 'string';\n\t}\n}\n\n/**\n * The code below is copied from from src/main.js.\n */\n\nexport const getLocaleFromConfig = async (argvResource: string): Promise<string> => {\n\ttry {\n\t\tconst content = stripComments(await fs.promises.readFile(argvResource, 'utf8'));\n\t\treturn JSON.parse(content).locale;\n\t} catch (error) {\n\t\tif (error.code !== \"ENOENT\") {\n\t\t\tconsole.warn(error)\n\t\t}\n\t\treturn 'en';\n\t}\n};\n\nconst stripComments = (content: string): string => {\n\tconst regexp = /('(?:[^\\\\']*(?:\\\\.)?)*')|('(?:[^\\\\']*(?:\\\\.)?)*')|(\\/\\*(?:\\r?\\n|.)*?\\*\\/)|(\\/{2,}.*?(?:(?:\\r?\\n)|$))/g;\n\n\treturn content.replace(regexp, (match, _m1, _m2, m3, m4) => {\n\t\t// Only one of m1, m2, m3, m4 matches\n\t\tif (m3) {\n\t\t\t// A block comment. Replace with nothing\n\t\t\treturn '';\n\t\t} else if (m4) {\n\t\t\t// A line comment. If it ends in \\r?\\n then keep it.\n\t\t\tconst length_1 = m4.length;\n\t\t\tif (length_1 > 2 && m4[length_1 - 1] === '\\n') {\n\t\t\t\treturn m4[length_1 - 2] === '\\r' ? '\\r\\n' : '\\n';\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t} else {\n\t\t\t// We match a string\n\t\t\treturn match;\n\t\t}\n\t});\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { joinPath } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IExtensionsProfileScannerService } from 'vs/platform/extensionManagement/common/extensionsProfileScannerService';\nimport { AbstractExtensionsScannerService, IExtensionsScannerService, Translations } from 'vs/platform/extensionManagement/common/extensionsScannerService';\nimport { MANIFEST_CACHE_FOLDER } from 'vs/platform/extensions/common/extensions';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IUserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\nimport { getNLSConfiguration, InternalNLSConfiguration } from 'vs/server/node/remoteLanguagePacks';\n\nexport class ExtensionsScannerService extends AbstractExtensionsScannerService implements IExtensionsScannerService {\n\n\tconstructor(\n\t\t@IUserDataProfilesService userDataProfilesService: IUserDataProfilesService,\n\t\t@IExtensionsProfileScannerService extensionsProfileScannerService: IExtensionsProfileScannerService,\n\t\t@IFileService fileService: IFileService,\n\t\t@ILogService logService: ILogService,\n\t\t@INativeEnvironmentService private readonly nativeEnvironmentService: INativeEnvironmentService,\n\t\t@IProductService productService: IProductService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\tsuper(\n\t\t\tURI.file(nativeEnvironmentService.builtinExtensionsPath),\n\t\t\tURI.file(nativeEnvironmentService.extensionsPath),\n\t\t\tjoinPath(nativeEnvironmentService.userHome, '.vscode-oss-dev', 'extensions', 'control.json'),\n\t\t\tjoinPath(URI.file(nativeEnvironmentService.userDataPath), MANIFEST_CACHE_FOLDER),\n\t\t\tuserDataProfilesService, extensionsProfileScannerService, fileService, logService, nativeEnvironmentService, productService, instantiationService);\n\t}\n\n\tprotected async getTranslations(language: string): Promise<Translations> {\n\t\tconst config = await getNLSConfiguration(language, this.nativeEnvironmentService.userDataPath);\n\t\tif (InternalNLSConfiguration.is(config)) {\n\t\t\ttry {\n\t\t\t\tconst content = await this.fileService.readFile(URI.file(config._translationsConfigFile));\n\t\t\t\treturn JSON.parse(content.value.toString());\n\t\t\t} catch (err) { /* Ignore error */ }\n\t\t}\n\t\treturn Object.create(null);\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as cookie from 'cookie';\nimport * as fs from 'fs';\nimport * as http from 'http';\nimport * as url from 'url';\nimport * as path from 'vs/base/common/path';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { connectionTokenCookieName, connectionTokenQueryName } from 'vs/base/common/network';\nimport { ServerParsedArgs } from 'vs/server/node/serverEnvironmentService';\nimport { Promises } from 'vs/base/node/pfs';\n\nconst connectionTokenRegex = /^[0-9A-Za-z-]+$/;\n\nexport const enum ServerConnectionTokenType {\n\tNone,\n\tOptional,// TODO: Remove this soon\n\tMandatory\n}\n\nexport class NoneServerConnectionToken {\n\tpublic readonly type = ServerConnectionTokenType.None;\n\n\tpublic validate(connectionToken: any): boolean {\n\t\treturn true;\n\t}\n}\n\nexport class OptionalServerConnectionToken {\n\tpublic readonly type = ServerConnectionTokenType.Optional;\n\n\tconstructor(public readonly value: string) {\n\t}\n\n\tpublic validate(connectionToken: any): boolean {\n\t\treturn (connectionToken === this.value);\n\t}\n}\n\nexport class MandatoryServerConnectionToken {\n\tpublic readonly type = ServerConnectionTokenType.Mandatory;\n\n\tconstructor(public readonly value: string) {\n\t}\n\n\tpublic validate(connectionToken: any): boolean {\n\t\treturn (connectionToken === this.value);\n\t}\n}\n\nexport type ServerConnectionToken = NoneServerConnectionToken | OptionalServerConnectionToken | MandatoryServerConnectionToken;\n\nexport class ServerConnectionTokenParseError {\n\tconstructor(\n\t\tpublic readonly message: string\n\t) { }\n}\n\nexport async function parseServerConnectionToken(args: ServerParsedArgs, defaultValue: () => Promise<string>): Promise<ServerConnectionToken | ServerConnectionTokenParseError> {\n\tconst withoutConnectionToken = args['without-connection-token'];\n\tconst connectionToken = args['connection-token'];\n\tconst connectionTokenFile = args['connection-token-file'];\n\tconst compatibility = (args['compatibility'] === '1.63');\n\n\tif (withoutConnectionToken) {\n\t\tif (typeof connectionToken !== 'undefined' || typeof connectionTokenFile !== 'undefined') {\n\t\t\treturn new ServerConnectionTokenParseError(`Please do not use the argument '--connection-token' or '--connection-token-file' at the same time as '--without-connection-token'.`);\n\t\t}\n\t\treturn new NoneServerConnectionToken();\n\t}\n\n\tif (typeof connectionTokenFile !== 'undefined') {\n\t\tif (typeof connectionToken !== 'undefined') {\n\t\t\treturn new ServerConnectionTokenParseError(`Please do not use the argument '--connection-token' at the same time as '--connection-token-file'.`);\n\t\t}\n\n\t\tlet rawConnectionToken: string;\n\t\ttry {\n\t\t\trawConnectionToken = fs.readFileSync(connectionTokenFile).toString().replace(/\\r?\\n$/, '');\n\t\t} catch (e) {\n\t\t\treturn new ServerConnectionTokenParseError(`Unable to read the connection token file at '${connectionTokenFile}'.`);\n\t\t}\n\n\t\tif (!connectionTokenRegex.test(rawConnectionToken)) {\n\t\t\treturn new ServerConnectionTokenParseError(`The connection token defined in '${connectionTokenFile} does not adhere to the characters 0-9, a-z, A-Z or -.`);\n\t\t}\n\n\t\treturn new MandatoryServerConnectionToken(rawConnectionToken);\n\t}\n\n\tif (typeof connectionToken !== 'undefined') {\n\t\tif (!connectionTokenRegex.test(connectionToken)) {\n\t\t\treturn new ServerConnectionTokenParseError(`The connection token '${connectionToken} does not adhere to the characters 0-9, a-z, A-Z or -.`);\n\t\t}\n\n\t\tif (compatibility) {\n\t\t\t// TODO: Remove this case soon\n\t\t\treturn new OptionalServerConnectionToken(connectionToken);\n\t\t}\n\n\t\treturn new MandatoryServerConnectionToken(connectionToken);\n\t}\n\n\tif (compatibility) {\n\t\t// TODO: Remove this case soon\n\t\tconsole.log(`Breaking change in the next release: Please use one of the following arguments: '--connection-token', '--connection-token-file' or '--without-connection-token'.`);\n\t\treturn new OptionalServerConnectionToken(await defaultValue());\n\t}\n\n\treturn new MandatoryServerConnectionToken(await defaultValue());\n}\n\nexport async function determineServerConnectionToken(args: ServerParsedArgs): Promise<ServerConnectionToken | ServerConnectionTokenParseError> {\n\tconst readOrGenerateConnectionToken = async () => {\n\t\tif (!args['user-data-dir']) {\n\t\t\t// No place to store it!\n\t\t\treturn generateUuid();\n\t\t}\n\t\tconst storageLocation = path.join(args['user-data-dir'], 'token');\n\n\t\t// First try to find a connection token\n\t\ttry {\n\t\t\tconst fileContents = await Promises.readFile(storageLocation);\n\t\t\tconst connectionToken = fileContents.toString().replace(/\\r?\\n$/, '');\n\t\t\tif (connectionTokenRegex.test(connectionToken)) {\n\t\t\t\treturn connectionToken;\n\t\t\t}\n\t\t} catch (err) { }\n\n\t\t// No connection token found, generate one\n\t\tconst connectionToken = generateUuid();\n\n\t\ttry {\n\t\t\t// Try to store it\n\t\t\tawait Promises.writeFile(storageLocation, connectionToken, { mode: 0o600 });\n\t\t} catch (err) { }\n\n\t\treturn connectionToken;\n\t};\n\treturn parseServerConnectionToken(args, readOrGenerateConnectionToken);\n}\n\nexport function requestHasValidConnectionToken(connectionToken: ServerConnectionToken, req: http.IncomingMessage, parsedUrl: url.UrlWithParsedQuery) {\n\t// First check if there is a valid query parameter\n\tif (connectionToken.validate(parsedUrl.query[connectionTokenQueryName])) {\n\t\treturn true;\n\t}\n\n\t// Otherwise, check if there is a valid cookie\n\tconst cookies = cookie.parse(req.headers.cookie || '');\n\treturn connectionToken.validate(cookies[connectionTokenCookieName]);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\n\nimport { NativeEnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { OPTIONS, OptionDescriptions } from 'vs/platform/environment/node/argv';\nimport { refineServiceDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IEnvironmentService, INativeEnvironmentService } from 'vs/platform/environment/common/environment';\n\nexport const serverOptions: OptionDescriptions<ServerParsedArgs> = {\n\t/* ----- code-server ----- */\n\t'disable-update-check': { type: 'boolean' },\n\t'auth': { type: 'string' },\n\t'disable-file-downloads': { type: 'boolean' },\n\t'locale': { type: 'string' },\n\n\t/* ----- server setup ----- */\n\n\t'host': { type: 'string', cat: 'o', args: 'ip-address', description: nls.localize('host', \"The host name or IP address the server should listen to. If not set, defaults to 'localhost'.\") },\n\t'port': { type: 'string', cat: 'o', args: 'port | port range', description: nls.localize('port', \"The port the server should listen to. If 0 is passed a random free port is picked. If a range in the format num-num is passed, a free port from the range (end inclusive) is selected.\") },\n\t'pick-port': { type: 'string', deprecationMessage: 'Use the range notation in \\'port\\' instead.' },\n\t'socket-path': { type: 'string', cat: 'o', args: 'path', description: nls.localize('socket-path', \"The path to a socket file for the server to listen to.\") },\n\t'connection-token': { type: 'string', cat: 'o', args: 'token', deprecates: ['connectionToken'], description: nls.localize('connection-token', \"A secret that must be included with all requests.\") },\n\t'connection-token-file': { type: 'string', cat: 'o', args: 'path', deprecates: ['connection-secret', 'connectionTokenFile'], description: nls.localize('connection-token-file', \"Path to a file that contains the connection token.\") },\n\t'without-connection-token': { type: 'boolean', cat: 'o', description: nls.localize('without-connection-token', \"Run without a connection token. Only use this if the connection is secured by other means.\") },\n\t'disable-websocket-compression': { type: 'boolean' },\n\t'print-startup-performance': { type: 'boolean' },\n\t'print-ip-address': { type: 'boolean' },\n\t'accept-server-license-terms': { type: 'boolean', cat: 'o', description: nls.localize('acceptLicenseTerms', \"If set, the user accepts the server license terms and the server will be started without a user prompt.\") },\n\t'server-data-dir': { type: 'string', cat: 'o', description: nls.localize('serverDataDir', \"Specifies the directory that server data is kept in.\") },\n\t'telemetry-level': { type: 'string', cat: 'o', args: 'level', description: nls.localize('telemetry-level', \"Sets the initial telemetry level. Valid levels are: 'off', 'crash', 'error' and 'all'. If not specified, the server will send telemetry until a client connects, it will then use the clients telemetry setting. Setting this to 'off' is equivalent to --disable-telemetry\") },\n\n\t/* ----- vs code options ---\t-- */\n\n\t'user-data-dir': OPTIONS['user-data-dir'],\n\t'enable-smoke-test-driver': OPTIONS['enable-smoke-test-driver'],\n\t'disable-telemetry': OPTIONS['disable-telemetry'],\n\t'disable-workspace-trust': OPTIONS['disable-workspace-trust'],\n\t'file-watcher-polling': { type: 'string', deprecates: ['fileWatcherPolling'] },\n\t'log': OPTIONS['log'],\n\t'logsPath': OPTIONS['logsPath'],\n\t'force-disable-user-env': OPTIONS['force-disable-user-env'],\n\n\t/* ----- vs code web options ----- */\n\n\t'folder': { type: 'string', deprecationMessage: 'No longer supported. Folder needs to be provided in the browser URL or with `default-folder`.' },\n\t'workspace': { type: 'string', deprecationMessage: 'No longer supported. Workspace needs to be provided in the browser URL or with `default-workspace`.' },\n\n\t'default-folder': { type: 'string', description: nls.localize('default-folder', 'The workspace folder to open when no input is specified in the browser URL. A relative or absolute path resolved against the current working directory.') },\n\t'default-workspace': { type: 'string', description: nls.localize('default-workspace', 'The workspace to open when no input is specified in the browser URL. A relative or absolute path resolved against the current working directory.') },\n\n\t'enable-sync': { type: 'boolean' },\n\t'github-auth': { type: 'string' },\n\n\t/* ----- extension management ----- */\n\n\t'extensions-dir': OPTIONS['extensions-dir'],\n\t'extensions-download-dir': OPTIONS['extensions-download-dir'],\n\t'builtin-extensions-dir': OPTIONS['builtin-extensions-dir'],\n\t'install-extension': OPTIONS['install-extension'],\n\t'install-builtin-extension': OPTIONS['install-builtin-extension'],\n\t'uninstall-extension': OPTIONS['uninstall-extension'],\n\t'list-extensions': OPTIONS['list-extensions'],\n\t'locate-extension': OPTIONS['locate-extension'],\n\n\t'show-versions': OPTIONS['show-versions'],\n\t'category': OPTIONS['category'],\n\t'force': OPTIONS['force'],\n\t'do-not-sync': OPTIONS['do-not-sync'],\n\t'pre-release': OPTIONS['pre-release'],\n\t'start-server': { type: 'boolean', cat: 'e', description: nls.localize('start-server', \"Start the server when installing or uninstalling extensions. To be used in combination with 'install-extension', 'install-builtin-extension' and 'uninstall-extension'.\") },\n\n\n\t/* ----- remote development options ----- */\n\n\t'enable-remote-auto-shutdown': { type: 'boolean' },\n\t'remote-auto-shutdown-without-delay': { type: 'boolean' },\n\n\t'use-host-proxy': { type: 'boolean' },\n\t'without-browser-env-var': { type: 'boolean' },\n\n\t/* ----- server cli ----- */\n\n\t'help': OPTIONS['help'],\n\t'version': OPTIONS['version'],\n\t'locate-shell-integration-path': OPTIONS['locate-shell-integration-path'],\n\n\t'compatibility': { type: 'string' },\n\n\t_: OPTIONS['_']\n};\n\nexport interface ServerParsedArgs {\n\t/* ----- code-server ----- */\n\t'disable-update-check'?: boolean;\n\t'auth'?: string\n\t'disable-file-downloads'?: boolean;\n\t'locale'?: string\n\n\t/* ----- server setup ----- */\n\n\thost?: string;\n\tport?: string;\n\t'pick-port'?: string;\n\t'socket-path'?: string;\n\n\t/**\n\t * A secret token that must be provided by the web client with all requests.\n\t * Use only `[0-9A-Za-z\\-]`.\n\t *\n\t * By default, a UUID will be generated every time the server starts up.\n\t *\n\t * If the server is running on a multi-user system, then consider\n\t * using `--connection-token-file` which has the advantage that the token cannot\n\t * be seen by other users using `ps` or similar commands.\n\t */\n\t'connection-token'?: string;\n\t/**\n\t * A path to a filename which will be read on startup.\n\t * Consider placing this file in a folder readable only by the same user (a `chmod 0700` directory).\n\t *\n\t * The contents of the file will be used as the connection token. Use only `[0-9A-Z\\-]` as contents in the file.\n\t * The file can optionally end in a `\\n` which will be ignored.\n\t *\n\t * This secret must be communicated to any vscode instance via the resolver or embedder API.\n\t */\n\t'connection-token-file'?: string;\n\n\t/**\n\t * Run the server without a connection token\n\t */\n\t'without-connection-token'?: boolean;\n\n\t'disable-websocket-compression'?: boolean;\n\n\t'print-startup-performance'?: boolean;\n\t'print-ip-address'?: boolean;\n\n\t'accept-server-license-terms': boolean;\n\n\t'server-data-dir'?: string;\n\n\t'telemetry-level'?: string;\n\n\t'disable-workspace-trust'?: boolean;\n\n\t/* ----- vs code options ----- */\n\n\t'user-data-dir'?: string;\n\n\t'enable-smoke-test-driver'?: boolean;\n\n\t'disable-telemetry'?: boolean;\n\t'file-watcher-polling'?: string;\n\n\t'log'?: string;\n\t'logsPath'?: string;\n\n\t'force-disable-user-env'?: boolean;\n\n\t/* ----- vs code web options ----- */\n\n\t'default-workspace'?: string;\n\t'default-folder'?: string;\n\n\t/** @deprecated, use default-workspace instead */\n\tworkspace: string;\n\t/** @deprecated, use default-folder instead */\n\tfolder: string;\n\n\n\t'enable-sync'?: boolean;\n\t'github-auth'?: string;\n\n\t/* ----- extension management ----- */\n\n\t'extensions-dir'?: string;\n\t'extensions-download-dir'?: string;\n\t'builtin-extensions-dir'?: string;\n\t'install-extension'?: string[];\n\t'install-builtin-extension'?: string[];\n\t'uninstall-extension'?: string[];\n\t'list-extensions'?: boolean;\n\t'locate-extension'?: string[];\n\t'show-versions'?: boolean;\n\t'category'?: string;\n\tforce?: boolean; // used by install-extension\n\t'do-not-sync'?: boolean; // used by install-extension\n\t'pre-release'?: boolean; // used by install-extension\n\n\t'start-server'?: boolean;\n\n\t/* ----- remote development options ----- */\n\n\t'enable-remote-auto-shutdown'?: boolean;\n\t'remote-auto-shutdown-without-delay'?: boolean;\n\n\t'use-host-proxy'?: boolean;\n\t'without-browser-env-var'?: boolean;\n\n\t/* ----- server cli ----- */\n\thelp: boolean;\n\tversion: boolean;\n\t'locate-shell-integration-path'?: string;\n\n\tcompatibility: string;\n\n\t_: string[];\n}\n\nexport const IServerEnvironmentService = refineServiceDecorator<IEnvironmentService, IServerEnvironmentService>(IEnvironmentService);\n\nexport interface IServerEnvironmentService extends INativeEnvironmentService {\n\treadonly args: ServerParsedArgs;\n}\n\nexport class ServerEnvironmentService extends NativeEnvironmentService implements IServerEnvironmentService {\n\toverride get args(): ServerParsedArgs { return super.args as ServerParsedArgs; }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { InMemoryCredentialsProvider } from 'vs/platform/credentials/common/credentials';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IServerEnvironmentService } from 'vs/server/node/serverEnvironmentService';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { BaseCredentialsMainService, KeytarModule } from 'vs/platform/credentials/common/credentialsMainService';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { equals as arrayEquals } from 'vs/base/common/arrays';\n\ninterface IToken {\n\taccessToken: string\n\taccount?: { label: string }\n\tid: string\n\tscopes: string[]\n}\n\nexport class CredentialsWebMainService extends BaseCredentialsMainService {\n\t// Since we fallback to the in-memory credentials provider, we do not need to surface any Keytar load errors\n\t// to the user.\n\tprotected surfaceKeytarLoadError?: (err: any) => void;\n\n\tconstructor(\n\t\t@ILogService logService: ILogService,\n\t\t@IServerEnvironmentService private readonly environmentMainService: IServerEnvironmentService,\n\t\t@IProductService private readonly productService: IProductService,\n\t) {\n\t\tsuper(logService);\n\t\tif (this.environmentMainService.args[\"github-auth\"]) {\n\t\t\tthis.storeGitHubToken(this.environmentMainService.args[\"github-auth\"]).catch((error) => {\n\t\t\t\tthis.logService.error('Failed to store provided GitHub token', error)\n\t\t\t})\n\t\t}\n\t}\n\n\t// If the credentials service is running on the server, we add a suffix -server to differentiate from the location that the\n\t// client would store the credentials.\n\tpublic override async getSecretStoragePrefix() { return Promise.resolve(`${this.productService.urlProtocol}-server`); }\n\n\tprotected async withKeytar(): Promise<KeytarModule> {\n\t\tif (this._keytarCache) {\n\t\t\treturn this._keytarCache;\n\t\t}\n\n\t\tif (this.environmentMainService.disableKeytar) {\n\t\t\tthis.logService.info('Keytar is disabled. Using in-memory credential store instead.');\n\t\t\tthis._keytarCache = new InMemoryCredentialsProvider();\n\t\t\treturn this._keytarCache;\n\t\t}\n\n\t\ttry {\n\t\t\tthis._keytarCache = await import('keytar');\n\t\t\t// Try using keytar to see if it throws or not.\n\t\t\tawait this._keytarCache.findCredentials('test-keytar-loads');\n\t\t} catch (e) {\n\t\t\tthis.logService.warn(\n\t\t\t\t`Using the in-memory credential store as the operating system's credential store could not be accessed. Please see https://aka.ms/vscode-server-keyring on how to set this up. Details: ${e.message ?? e}`);\n\t\t\tthis._keytarCache = new InMemoryCredentialsProvider();\n\t\t}\n\t\treturn this._keytarCache;\n\t}\n\n\tprivate async storeGitHubToken(githubToken: string): Promise<void> {\n\t\tconst extensionId = 'vscode.github-authentication';\n\t\tconst service = `${await this.getSecretStoragePrefix()}${extensionId}`;\n\t\tconst account = 'github.auth';\n\t\tconst scopes = [['read:user', 'user:email', 'repo']]\n\n\t\t// Oddly the scopes need to match exactly so we cannot just have one token\n\t\t// with all the scopes, instead we have to duplicate the token for each\n\t\t// expected set of scopes.\n\t\tconst tokens: IToken[] = scopes.map((scopes) => ({\n\t\t\tid: generateUuid(),\n\t\t\tscopes: scopes.sort(), // Sort for comparing later.\n\t\t\taccessToken: githubToken,\n\t\t}));\n\n\t\tconst raw = await this.getPassword(service, account)\n\n\t\tlet existing: {\n\t\t\tcontent: IToken[]\n\t\t} | undefined;\n\n\t\tif (raw) {\n\t\t\ttry {\n\t\t\t\tconst json = JSON.parse(raw);\n\t\t\t\tjson.content = JSON.parse(json.content);\n\t\t\t\texisting = json;\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.error('Failed to parse existing GitHub credentials', error)\n\t\t\t}\n\t\t}\n\n\t\t// Keep tokens for account and scope combinations we do not have in case\n\t\t// there is an extension that uses scopes we have not accounted for (in\n\t\t// these cases the user will need to manually authenticate the extension\n\t\t// through the UI) or the user has tokens for other accounts.\n\t\tif (existing?.content) {\n\t\t\texisting.content = existing.content.filter((existingToken) => {\n\t\t\t\tconst scopes = existingToken.scopes.sort();\n\t\t\t\treturn !(tokens.find((token) => {\n\t\t\t\t\treturn arrayEquals(scopes, token.scopes)\n\t\t\t\t\t\t&& token.account?.label === existingToken.account?.label;\n\t\t\t\t}))\n\t\t\t})\n\t\t}\n\n\t\treturn this.setPassword(service, account, JSON.stringify({\n\t\t\textensionId,\n\t\t\t...(existing || {}),\n\t\t\tcontent: JSON.stringify([\n\t\t\t\t...tokens,\n\t\t\t\t...(existing?.content || []),\n\t\t\t])\n\t\t}));\n\t}\n}\n","import { AppInsightsCore, IExtendedTelemetryItem, ITelemetryItem } from '@microsoft/1ds-core-js';\nimport * as https from 'https';\nimport * as http from 'http';\nimport * as os from 'os';\n\nexport class TelemetryClient extends AppInsightsCore {\n\tpublic constructor(private readonly endpoint: string) {\n\t\tsuper();\n\t}\n\n\tpublic override track(item: IExtendedTelemetryItem | ITelemetryItem): void {\n\t\tconst options = item.baseData || {}\n\t\tif (!options.properties) {\n\t\t\toptions.properties = {};\n\t\t}\n\t\tif (!options.measurements) {\n\t\t\toptions.measurements = {};\n\t\t}\n\n\t\ttry {\n\t\t\tconst cpus = os.cpus();\n\t\t\toptions.measurements.cores = cpus.length;\n\t\t\toptions.properties['common.cpuModel'] = cpus[0].model;\n\t\t} catch (error) {}\n\n\t\ttry {\n\t\t\toptions.measurements.memoryFree = os.freemem();\n\t\t\toptions.measurements.memoryTotal = os.totalmem();\n\t\t} catch (error) {}\n\n\t\ttry {\n\t\t\toptions.properties['common.shell'] = os.userInfo().shell;\n\t\t\toptions.properties['common.release'] = os.release();\n\t\t\toptions.properties['common.arch'] = os.arch();\n\t\t} catch (error) {}\n\n\t\ttry {\n\t\t\tconst request = (/^http:/.test(this.endpoint) ? http : https).request(this.endpoint, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t});\n\t\t\trequest.on('error', () => { /* We don't care. */ });\n\t\t\trequest.write(JSON.stringify(options));\n\t\t\trequest.end();\n\t\t} catch (error) {}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { promises as fsp, createReadStream } from 'fs';\nimport * as path from 'path';\nimport * as http from 'http';\nimport * as url from 'url';\nimport * as cookie from 'cookie';\nimport * as crypto from 'crypto';\nimport { isEqualOrParent } from 'vs/base/common/extpath';\nimport { getMediaMime } from 'vs/base/common/mime';\nimport { isLinux } from 'vs/base/common/platform';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IServerEnvironmentService } from 'vs/server/node/serverEnvironmentService';\nimport { extname, dirname, join, normalize } from 'vs/base/common/path';\nimport { FileAccess, connectionTokenCookieName, connectionTokenQueryName, Schemas } from 'vs/base/common/network';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ServerConnectionToken, ServerConnectionTokenType } from 'vs/server/node/serverConnectionToken';\nimport { asTextOrError, IRequestService } from 'vs/platform/request/common/request';\nimport { IHeaders } from 'vs/base/parts/request/common/request';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { URI } from 'vs/base/common/uri';\nimport { streamToBuffer } from 'vs/base/common/buffer';\nimport { IProductConfiguration } from 'vs/base/common/product';\nimport { isString } from 'vs/base/common/types';\nimport { getLocaleFromConfig, getNLSConfiguration } from 'vs/server/node/remoteLanguagePacks';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { getRemoteServerRootPath } from 'vs/platform/remote/common/remoteHosts';\n\nconst textMimeType = {\n\t'.html': 'text/html',\n\t'.js': 'text/javascript',\n\t'.json': 'application/json',\n\t'.css': 'text/css',\n\t'.svg': 'image/svg+xml',\n} as { [ext: string]: string | undefined };\n\n/**\n * Return an error to the client.\n */\nexport async function serveError(req: http.IncomingMessage, res: http.ServerResponse, errorCode: number, errorMessage: string): Promise<void> {\n\tres.writeHead(errorCode, { 'Content-Type': 'text/plain' });\n\tres.end(errorMessage);\n}\n\nexport const enum CacheControl {\n\tNO_CACHING, ETAG, NO_EXPIRY\n}\n\n/**\n * Serve a file at a given path or 404 if the file is missing.\n */\nexport async function serveFile(filePath: string, cacheControl: CacheControl, logService: ILogService, req: http.IncomingMessage, res: http.ServerResponse, responseHeaders: Record<string, string>): Promise<void> {\n\ttry {\n\t\tconst stat = await fsp.stat(filePath); // throws an error if file doesn't exist\n\t\tif (cacheControl === CacheControl.ETAG) {\n\n\t\t\t// Check if file modified since\n\t\t\tconst etag = `W/\"${[stat.ino, stat.size, stat.mtime.getTime()].join('-')}\"`; // weak validator (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag)\n\t\t\tif (req.headers['if-none-match'] === etag) {\n\t\t\t\tres.writeHead(304);\n\t\t\t\treturn res.end();\n\t\t\t}\n\n\t\t\tresponseHeaders['Etag'] = etag;\n\t\t} else if (cacheControl === CacheControl.NO_EXPIRY) {\n\t\t\tresponseHeaders['Cache-Control'] = 'public, max-age=31536000';\n\t\t} else if (cacheControl === CacheControl.NO_CACHING) {\n\t\t\tresponseHeaders['Cache-Control'] = 'no-store';\n\t\t}\n\n\t\tresponseHeaders['Content-Type'] = textMimeType[extname(filePath)] || getMediaMime(filePath) || 'text/plain';\n\n\t\tres.writeHead(200, responseHeaders);\n\n\t\t// Data\n\t\tcreateReadStream(filePath).pipe(res);\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tlogService.error(error);\n\t\t\tconsole.error(error.toString());\n\t\t} else {\n\t\t\tconsole.error(`File not found: ${filePath}`);\n\t\t}\n\n\t\tres.writeHead(404, { 'Content-Type': 'text/plain' });\n\t\treturn res.end('Not found');\n\t}\n}\n\nconst APP_ROOT = dirname(FileAccess.asFileUri('', require).fsPath);\n\nexport class WebClientServer {\n\n\tprivate readonly _webExtensionResourceUrlTemplate: URI | undefined;\n\n\tprivate readonly _staticRoute: string;\n\tprivate readonly _callbackRoute: string;\n\tprivate readonly _webExtensionRoute: string;\n\n\tconstructor(\n\t\tprivate readonly _connectionToken: ServerConnectionToken,\n\t\t@IServerEnvironmentService private readonly _environmentService: IServerEnvironmentService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@IRequestService private readonly _requestService: IRequestService,\n\t\t@IProductService private readonly _productService: IProductService,\n\t) {\n\t\tthis._webExtensionResourceUrlTemplate = this._productService.extensionsGallery?.resourceUrlTemplate ? URI.parse(this._productService.extensionsGallery.resourceUrlTemplate) : undefined;\n\t\tconst serverRootPath = getRemoteServerRootPath(_productService);\n\t\tthis._staticRoute = `${serverRootPath}/static`;\n\t\tthis._callbackRoute = `${serverRootPath}/callback`;\n\t\tthis._webExtensionRoute = `/web-extension-resource`;\n\t}\n\n\t/**\n\t * Handle web resources (i.e. only needed by the web client).\n\t * **NOTE**: This method is only invoked when the server has web bits.\n\t * **NOTE**: This method is only invoked after the connection token has been validated.\n\t */\n\tasync handle(req: http.IncomingMessage, res: http.ServerResponse, parsedUrl: url.UrlWithParsedQuery): Promise<void> {\n\t\ttry {\n\t\t\tconst pathname = parsedUrl.pathname!;\n\n\t\t\tif (pathname.startsWith(this._staticRoute) && pathname.charCodeAt(this._staticRoute.length) === CharCode.Slash) {\n\t\t\t\treturn this._handleStatic(req, res, parsedUrl);\n\t\t\t}\n\t\t\tif (pathname === '/') {\n\t\t\t\treturn this._handleRoot(req, res, parsedUrl);\n\t\t\t}\n\t\t\tif (pathname === this._callbackRoute) {\n\t\t\t\t// callback support\n\t\t\t\treturn this._handleCallback(res);\n\t\t\t}\n\t\t\tif (pathname.startsWith(this._webExtensionRoute) && pathname.charCodeAt(this._webExtensionRoute.length) === CharCode.Slash) {\n\t\t\t\t// extension resource support\n\t\t\t\treturn this._handleWebExtensionResource(req, res, parsedUrl);\n\t\t\t}\n\n\t\t\treturn serveError(req, res, 404, 'Not found.');\n\t\t} catch (error) {\n\t\t\tthis._logService.error(error);\n\t\t\tconsole.error(error.toString());\n\n\t\t\treturn serveError(req, res, 500, 'Internal Server Error.');\n\t\t}\n\t}\n\t/**\n\t * Handle HTTP requests for /static/*\n\t */\n\tprivate async _handleStatic(req: http.IncomingMessage, res: http.ServerResponse, parsedUrl: url.UrlWithParsedQuery): Promise<void> {\n\t\tconst headers: Record<string, string> = Object.create(null);\n\n\t\t// Strip the this._staticRoute from the path\n\t\tconst normalizedPathname = decodeURIComponent(parsedUrl.pathname!); // support paths that are uri-encoded (e.g. spaces => %20)\n\t\tconst relativeFilePath = normalizedPathname.substring(this._staticRoute.length + 1);\n\n\t\tconst filePath = join(APP_ROOT, relativeFilePath); // join also normalizes the path\n\t\tif (!isEqualOrParent(filePath, APP_ROOT, !isLinux)) {\n\t\t\treturn serveError(req, res, 400, `Bad request.`);\n\t\t}\n\n\t\treturn serveFile(filePath, this._environmentService.isBuilt ? CacheControl.NO_EXPIRY : CacheControl.ETAG, this._logService, req, res, headers);\n\t}\n\n\tprivate _getResourceURLTemplateAuthority(uri: URI): string | undefined {\n\t\tconst index = uri.authority.indexOf('.');\n\t\treturn index !== -1 ? uri.authority.substring(index + 1) : undefined;\n\t}\n\n\t/**\n\t * Handle extension resources\n\t */\n\tprivate async _handleWebExtensionResource(req: http.IncomingMessage, res: http.ServerResponse, parsedUrl: url.UrlWithParsedQuery): Promise<void> {\n\t\tif (!this._webExtensionResourceUrlTemplate) {\n\t\t\treturn serveError(req, res, 500, 'No extension gallery service configured.');\n\t\t}\n\n\t\t// Strip `/web-extension-resource/` from the path\n\t\tconst normalizedPathname = decodeURIComponent(parsedUrl.pathname!); // support paths that are uri-encoded (e.g. spaces => %20)\n\t\tconst path = normalize(normalizedPathname.substring(this._webExtensionRoute.length + 1));\n\t\tconst uri = URI.parse(path).with({\n\t\t\tscheme: this._webExtensionResourceUrlTemplate.scheme,\n\t\t\tauthority: path.substring(0, path.indexOf('/')),\n\t\t\tpath: path.substring(path.indexOf('/') + 1)\n\t\t});\n\n\t\tif (this._getResourceURLTemplateAuthority(this._webExtensionResourceUrlTemplate) !== this._getResourceURLTemplateAuthority(uri)) {\n\t\t\treturn serveError(req, res, 403, 'Request Forbidden');\n\t\t}\n\n\t\tconst headers: IHeaders = {};\n\t\tconst setRequestHeader = (header: string) => {\n\t\t\tconst value = req.headers[header];\n\t\t\tif (value && (isString(value) || value[0])) {\n\t\t\t\theaders[header] = isString(value) ? value : value[0];\n\t\t\t} else if (header !== header.toLowerCase()) {\n\t\t\t\tsetRequestHeader(header.toLowerCase());\n\t\t\t}\n\t\t};\n\t\tsetRequestHeader('X-Client-Name');\n\t\tsetRequestHeader('X-Client-Version');\n\t\tsetRequestHeader('X-Machine-Id');\n\t\tsetRequestHeader('X-Client-Commit');\n\n\t\tconst context = await this._requestService.request({\n\t\t\ttype: 'GET',\n\t\t\turl: uri.toString(true),\n\t\t\theaders\n\t\t}, CancellationToken.None);\n\n\t\tconst status = context.res.statusCode || 500;\n\t\tif (status !== 200) {\n\t\t\tlet text: string | null = null;\n\t\t\ttry {\n\t\t\t\ttext = await asTextOrError(context);\n\t\t\t} catch (error) {/* Ignore */ }\n\t\t\treturn serveError(req, res, status, text || `Request failed with status ${status}`);\n\t\t}\n\n\t\tconst responseHeaders: Record<string, string> = Object.create(null);\n\t\tconst setResponseHeader = (header: string) => {\n\t\t\tconst value = context.res.headers[header];\n\t\t\tif (value) {\n\t\t\t\tresponseHeaders[header] = value;\n\t\t\t} else if (header !== header.toLowerCase()) {\n\t\t\t\tsetResponseHeader(header.toLowerCase());\n\t\t\t}\n\t\t};\n\t\tsetResponseHeader('Cache-Control');\n\t\tsetResponseHeader('Content-Type');\n\t\tres.writeHead(200, responseHeaders);\n\t\tconst buffer = await streamToBuffer(context.stream);\n\t\treturn res.end(buffer.buffer);\n\t}\n\n\t/**\n\t * Handle HTTP requests for /\n\t */\n\tprivate async _handleRoot(req: http.IncomingMessage, res: http.ServerResponse, parsedUrl: url.UrlWithParsedQuery): Promise<void> {\n\n\t\tconst queryConnectionToken = parsedUrl.query[connectionTokenQueryName];\n\t\tif (typeof queryConnectionToken === 'string') {\n\t\t\t// We got a connection token as a query parameter.\n\t\t\t// We want to have a clean URL, so we strip it\n\t\t\tconst responseHeaders: Record<string, string> = Object.create(null);\n\t\t\tresponseHeaders['Set-Cookie'] = cookie.serialize(\n\t\t\t\tconnectionTokenCookieName,\n\t\t\t\tqueryConnectionToken,\n\t\t\t\t{\n\t\t\t\t\tsameSite: 'lax',\n\t\t\t\t\tmaxAge: 60 * 60 * 24 * 7 /* 1 week */\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tconst newQuery = Object.create(null);\n\t\t\tfor (const key in parsedUrl.query) {\n\t\t\t\tif (key !== connectionTokenQueryName) {\n\t\t\t\t\tnewQuery[key] = parsedUrl.query[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst newLocation = url.format({ pathname: '/', query: newQuery });\n\t\t\tresponseHeaders['Location'] = newLocation;\n\n\t\t\tres.writeHead(302, responseHeaders);\n\t\t\treturn res.end();\n\t\t}\n\n\t\t// For now we are getting the remote authority from the client to avoid\n\t\t// needing specific configuration for reverse proxies to work.  Set this to\n\t\t// something invalid to make sure we catch code that is using this value\n\t\t// from the backend when it should not.\n\t\tconst remoteAuthority = 'remote';\n\t\tif (!remoteAuthority) {\n\t\t\treturn serveError(req, res, 400, `Bad request.`);\n\t\t}\n\n\t\tfunction asJSON(value: unknown): string {\n\t\t\treturn JSON.stringify(value).replace(/\"/g, '&quot;');\n\t\t}\n\n\t\tlet _wrapWebWorkerExtHostInIframe: undefined | false = undefined;\n\t\tif (this._environmentService.args['enable-smoke-test-driver']) {\n\t\t\t// integration tests run at a time when the built output is not yet published to the CDN\n\t\t\t// so we must disable the iframe wrapping because the iframe URL will give a 404\n\t\t\t_wrapWebWorkerExtHostInIframe = false;\n\t\t}\n\n\t\tconst resolveWorkspaceURI = (defaultLocation?: string) => defaultLocation && URI.file(path.resolve(defaultLocation)).with({ scheme: Schemas.vscodeRemote, authority: remoteAuthority });\n\n\t\tconst filePath = FileAccess.asFileUri(this._environmentService.isBuilt ? 'vs/code/browser/workbench/workbench.html' : 'vs/code/browser/workbench/workbench-dev.html', require).fsPath;\n\t\tconst authSessionInfo = !this._environmentService.isBuilt && this._environmentService.args['github-auth'] ? {\n\t\t\tid: generateUuid(),\n\t\t\tproviderId: 'github',\n\t\t\taccessToken: this._environmentService.args['github-auth'],\n\t\t\tscopes: [['user:email'], ['repo']]\n\t\t} : undefined;\n\n\t\tconst base = relativeRoot(getOriginalUrl(req))\n\t\tconst vscodeBase = relativePath(getOriginalUrl(req))\n\t\tconst locale = this._environmentService.args.locale || await getLocaleFromConfig(this._environmentService.argvResource.fsPath);\n\t\tconst nlsConfiguration = await getNLSConfiguration(locale, this._environmentService.userDataPath)\n\n\t\tconst workbenchWebConfiguration = {\n\t\t\tremoteAuthority,\n\t\t\twebviewEndpoint: vscodeBase + this._staticRoute + '/out/vs/workbench/contrib/webview/browser/pre',\n\t\t\tuserDataPath: this._environmentService.userDataPath,\n\t\t\tisEnabledFileDownloads: !this._environmentService.args['disable-file-downloads'],\n\t\t\t_wrapWebWorkerExtHostInIframe,\n\t\t\tdevelopmentOptions: {\n\t\t\t\tenableSmokeTestDriver: this._environmentService.args['enable-smoke-test-driver'] ? true : undefined,\n\t\t\t\tlogLevel: this._logService.getLevel(),\n\t\t\t},\n\t\t\tsettingsSyncOptions: !this._environmentService.isBuilt && this._environmentService.args['enable-sync'] ? { enabled: true } : undefined,\n\t\t\tenableWorkspaceTrust: !this._environmentService.args['disable-workspace-trust'],\n\t\t\tfolderUri: resolveWorkspaceURI(this._environmentService.args['default-folder']),\n\t\t\tworkspaceUri: resolveWorkspaceURI(this._environmentService.args['default-workspace']),\n\t\t\tproductConfiguration: <Partial<IProductConfiguration>>{\n\t\t\t\tcodeServerVersion: this._productService.codeServerVersion,\n\t\t\t\trootEndpoint: base,\n\t\t\t\tupdateEndpoint: !this._environmentService.args['disable-update-check'] ? base + '/update/check' : undefined,\n\t\t\t\tlogoutEndpoint: this._environmentService.args['auth'] && this._environmentService.args['auth'] !== \"none\" ? base + '/logout' : undefined,\n\t\t\t\tproxyEndpointTemplate: base + '/proxy/{{port}}',\n\t\t\t\tserviceWorker: {\n\t\t\t\t\tscope: vscodeBase + '/',\n\t\t\t\t\tpath: base + '/_static/out/browser/serviceWorker.js',\n\t\t\t\t},\n\t\t\t\tenableTelemetry: this._productService.enableTelemetry,\n\t\t\t\tembedderIdentifier: 'server-distro',\n\t\t\t\textensionsGallery: this._productService.extensionsGallery,\n\t\t\t},\n\t\t\tcallbackRoute: this._callbackRoute\n\t\t};\n\n\t\tconst nlsBaseUrl = this._productService.extensionsGallery?.nlsBaseUrl;\n\t\tconst values: { [key: string]: string } = {\n\t\t\tWORKBENCH_WEB_CONFIGURATION: asJSON(workbenchWebConfiguration),\n\t\t\tWORKBENCH_AUTH_SESSION: authSessionInfo ? asJSON(authSessionInfo) : '',\n\t\t\tWORKBENCH_WEB_BASE_URL: vscodeBase + this._staticRoute,\n\t\t\tWORKBENCH_NLS_BASE_URL: vscodeBase + (nlsBaseUrl ? `${nlsBaseUrl}${!nlsBaseUrl.endsWith('/') ? '/' : ''}${this._productService.commit}/${this._productService.version}/` : ''),\n\t\t\tBASE: base,\n\t\t\tVS_BASE: vscodeBase,\n\t\t\tNLS_CONFIGURATION: asJSON(nlsConfiguration),\n\t\t};\n\n\n\t\tlet data;\n\t\ttry {\n\t\t\tconst workbenchTemplate = (await fsp.readFile(filePath)).toString();\n\t\t\tdata = workbenchTemplate.replace(/\\{\\{([^}]+)\\}\\}/g, (_, key) => values[key] ?? 'undefined');\n\t\t} catch (e) {\n\t\t\tres.writeHead(404, { 'Content-Type': 'text/plain' });\n\t\t\treturn res.end('Not found');\n\t\t}\n\n\t\tconst cspDirectives = [\n\t\t\t'default-src \\'self\\';',\n\t\t\t'img-src \\'self\\' https: data: blob:;',\n\t\t\t'media-src \\'self\\';',\n\t\t\t`script-src 'self' 'unsafe-eval' ${this._getScriptCspHashes(data).join(' ')} 'sha256-fh3TwPMflhsEIpR8g1OYTIMVWhXTLcjQ9kh2tIpmv54=';`, // the sha is the same as in src/vs/workbench/services/extensions/worker/webWorkerExtensionHostIframe.html\n\t\t\t'child-src \\'self\\';',\n\t\t\t`frame-src 'self' https://*.vscode-cdn.net data:;`,\n\t\t\t'worker-src \\'self\\' data:;',\n\t\t\t'style-src \\'self\\' \\'unsafe-inline\\';',\n\t\t\t'connect-src \\'self\\' ws: wss: https:;',\n\t\t\t'font-src \\'self\\' blob:;',\n\t\t\t'manifest-src \\'self\\';'\n\t\t].join(' ');\n\n\t\tconst headers: http.OutgoingHttpHeaders = {\n\t\t\t'Content-Type': 'text/html',\n\t\t\t'Content-Security-Policy': cspDirectives\n\t\t};\n\t\tif (this._connectionToken.type !== ServerConnectionTokenType.None) {\n\t\t\t// At this point we know the client has a valid cookie\n\t\t\t// and we want to set it prolong it to ensure that this\n\t\t\t// client is valid for another 1 week at least\n\t\t\theaders['Set-Cookie'] = cookie.serialize(\n\t\t\t\tconnectionTokenCookieName,\n\t\t\t\tthis._connectionToken.value,\n\t\t\t\t{\n\t\t\t\t\tsameSite: 'lax',\n\t\t\t\t\tmaxAge: 60 * 60 * 24 * 7 /* 1 week */\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tres.writeHead(200, headers);\n\t\treturn res.end(data);\n\t}\n\n\tprivate _getScriptCspHashes(content: string): string[] {\n\t\t// Compute the CSP hashes for line scripts. Uses regex\n\t\t// which means it isn't 100% good.\n\t\tconst regex = /<script>([\\s\\S]+?)<\\/script>/img;\n\t\tconst result: string[] = [];\n\t\tlet match: RegExpExecArray | null;\n\t\twhile (match = regex.exec(content)) {\n\t\t\tconst hasher = crypto.createHash('sha256');\n\t\t\t// This only works on Windows if we strip `\\r` from `\\r\\n`.\n\t\t\tconst script = match[1].replace(/\\r\\n/g, '\\n');\n\t\t\tconst hash = hasher\n\t\t\t\t.update(Buffer.from(script))\n\t\t\t\t.digest().toString('base64');\n\n\t\t\tresult.push(`'sha256-${hash}'`);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * Handle HTTP requests for /callback\n\t */\n\tprivate async _handleCallback(res: http.ServerResponse): Promise<void> {\n\t\tconst filePath = FileAccess.asFileUri('vs/code/browser/workbench/callback.html', require).fsPath;\n\t\tconst data = (await fsp.readFile(filePath)).toString();\n\t\tconst cspDirectives = [\n\t\t\t'default-src \\'self\\';',\n\t\t\t'img-src \\'self\\' https: data: blob:;',\n\t\t\t'media-src \\'none\\';',\n\t\t\t`script-src 'self' ${this._getScriptCspHashes(data).join(' ')};`,\n\t\t\t'style-src \\'self\\' \\'unsafe-inline\\';',\n\t\t\t'font-src \\'self\\' blob:;'\n\t\t].join(' ');\n\n\t\tres.writeHead(200, {\n\t\t\t'Content-Type': 'text/html',\n\t\t\t'Content-Security-Policy': cspDirectives\n\t\t});\n\t\treturn res.end(data);\n\t}\n}\n\n/**\n * Remove extra slashes in a URL.\n *\n * This is meant to fill the job of `path.join` so you can concatenate paths and\n * then normalize out any extra slashes.\n *\n * If you are using `path.join` you do not need this but note that `path` is for\n * file system paths, not URLs.\n */\nexport const normalizeUrlPath = (url: string, keepTrailing = false): string => {\n\treturn url.replace(/\\/\\/+/g, \"/\").replace(/\\/+$/, keepTrailing ? \"/\" : \"\")\n}\n\n/**\n * Get the relative path that will get us to the root of the page. For each\n * slash we need to go up a directory.  Will not have a trailing slash.\n *\n * For example:\n *\n * / => .\n * /foo => .\n * /foo/ => ./..\n * /foo/bar => ./..\n * /foo/bar/ => ./../..\n *\n * All paths must be relative in order to work behind a reverse proxy since we\n * we do not know the base path.  Anything that needs to be absolute (for\n * example cookies) must get the base path from the frontend.\n *\n * All relative paths must be prefixed with the relative root to ensure they\n * work no matter the depth at which they happen to appear.\n *\n * For Express `req.originalUrl` should be used as they remove the base from the\n * standard `url` property making it impossible to get the true depth.\n */\nexport const relativeRoot = (originalUrl: string): string => {\n\tconst depth = (originalUrl.split(\"?\", 1)[0].match(/\\//g) || []).length\n\treturn normalizeUrlPath(\"./\" + (depth > 1 ? \"../\".repeat(depth - 1) : \"\"))\n}\n\n/**\n * Get the relative path to the current resource.\n *\n * For example:\n *\n * / => .\n * /foo => ./foo\n * /foo/ => .\n * /foo/bar => ./bar\n * /foo/bar/ => .\n */\nexport const relativePath = (originalUrl: string): string => {\n\tconst parts = originalUrl.split(\"?\", 1)[0].split(\"/\")\n\treturn normalizeUrlPath(\"./\" + parts[parts.length - 1])\n}\n\n/**\n * code-server serves Code using Express.  Express removes the base from the url\n * and puts the original in `originalUrl` so we must use this to get the correct\n * depth.  Code is not aware it is behind Express so the types do not match.  We\n * may want to continue moving code into Code and eventually remove the Express\n * wrapper or move the web server back into code-server.\n */\nexport const getOriginalUrl = (req: http.IncomingMessage): string => {\n\treturn (req as any).originalUrl || req.url\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ProxyIdentifier, IRPCProtocol, Proxied } from 'vs/workbench/services/extensions/common/proxyIdentifier';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IExtHostRpcService = createDecorator<IExtHostRpcService>('IExtHostRpcService');\n\nexport interface IExtHostRpcService extends IRPCProtocol {\n\treadonly _serviceBrand: undefined;\n}\n\nexport class ExtHostRpcService implements IExtHostRpcService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly getProxy: <T>(identifier: ProxyIdentifier<T>) => Proxied<T>;\n\treadonly set: <T, R extends T> (identifier: ProxyIdentifier<T>, instance: R) => R;\n\treadonly dispose: () => void;\n\treadonly assertRegistered: (identifiers: ProxyIdentifier<any>[]) => void;\n\treadonly drain: () => Promise<void>;\n\n\tconstructor(rpcProtocol: IRPCProtocol) {\n\t\tthis.getProxy = rpcProtocol.getProxy.bind(rpcProtocol);\n\t\tthis.set = rpcProtocol.set.bind(rpcProtocol);\n\t\tthis.dispose = rpcProtocol.dispose.bind(rpcProtocol);\n\t\tthis.assertRegistered = rpcProtocol.assertRegistered.bind(rpcProtocol);\n\t\tthis.drain = rpcProtocol.drain.bind(rpcProtocol);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { asArray, coalesceInPlace, equals } from 'vs/base/common/arrays';\nimport { illegalArgument } from 'vs/base/common/errors';\nimport { IRelativePattern } from 'vs/base/common/glob';\nimport { MarkdownString as BaseMarkdownString } from 'vs/base/common/htmlContent';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { Mimes, normalizeMimeType } from 'vs/base/common/mime';\nimport { nextCharLength } from 'vs/base/common/strings';\nimport { isArray, isString, isStringArray } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { FileSystemProviderErrorCode, markAsFileSystemProviderError } from 'vs/platform/files/common/files';\nimport { RemoteAuthorityResolverErrorCode } from 'vs/platform/remote/common/remoteAuthorityResolver';\nimport { IRelativePatternDto } from 'vs/workbench/api/common/extHost.protocol';\nimport { CellEditType, ICellPartialMetadataEdit, IDocumentMetadataEdit } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport type * as vscode from 'vscode';\n\n/**\n * @deprecated\n *\n * This utility ensures that old JS code that uses functions for classes still works. Existing usages cannot be removed\n * but new ones must not be added\n * */\nfunction es5ClassCompat(target: Function): any {\n\t///@ts-expect-error\n\tfunction _() { return Reflect.construct(target, arguments, this.constructor); }\n\tObject.defineProperty(_, 'name', Object.getOwnPropertyDescriptor(target, 'name')!);\n\tObject.setPrototypeOf(_, target);\n\tObject.setPrototypeOf(_.prototype, target.prototype);\n\treturn _;\n}\n\n@es5ClassCompat\nexport class Disposable {\n\n\tstatic from(...inDisposables: { dispose(): any }[]): Disposable {\n\t\tlet disposables: ReadonlyArray<{ dispose(): any }> | undefined = inDisposables;\n\t\treturn new Disposable(function () {\n\t\t\tif (disposables) {\n\t\t\t\tfor (const disposable of disposables) {\n\t\t\t\t\tif (disposable && typeof disposable.dispose === 'function') {\n\t\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdisposables = undefined;\n\t\t\t}\n\t\t});\n\t}\n\n\t#callOnDispose?: () => any;\n\n\tconstructor(callOnDispose: () => any) {\n\t\tthis.#callOnDispose = callOnDispose;\n\t}\n\n\tdispose(): any {\n\t\tif (typeof this.#callOnDispose === 'function') {\n\t\t\tthis.#callOnDispose();\n\t\t\tthis.#callOnDispose = undefined;\n\t\t}\n\t}\n}\n\n@es5ClassCompat\nexport class Position {\n\n\tstatic Min(...positions: Position[]): Position {\n\t\tif (positions.length === 0) {\n\t\t\tthrow new TypeError();\n\t\t}\n\t\tlet result = positions[0];\n\t\tfor (let i = 1; i < positions.length; i++) {\n\t\t\tconst p = positions[i];\n\t\t\tif (p.isBefore(result!)) {\n\t\t\t\tresult = p;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tstatic Max(...positions: Position[]): Position {\n\t\tif (positions.length === 0) {\n\t\t\tthrow new TypeError();\n\t\t}\n\t\tlet result = positions[0];\n\t\tfor (let i = 1; i < positions.length; i++) {\n\t\t\tconst p = positions[i];\n\t\t\tif (p.isAfter(result!)) {\n\t\t\t\tresult = p;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tstatic isPosition(other: any): other is Position {\n\t\tif (!other) {\n\t\t\treturn false;\n\t\t}\n\t\tif (other instanceof Position) {\n\t\t\treturn true;\n\t\t}\n\t\tconst { line, character } = <Position>other;\n\t\tif (typeof line === 'number' && typeof character === 'number') {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tstatic of(obj: vscode.Position): Position {\n\t\tif (obj instanceof Position) {\n\t\t\treturn obj;\n\t\t} else if (this.isPosition(obj)) {\n\t\t\treturn new Position(obj.line, obj.character);\n\t\t}\n\t\tthrow new Error('Invalid argument, is NOT a position-like object');\n\t}\n\n\tprivate _line: number;\n\tprivate _character: number;\n\n\tget line(): number {\n\t\treturn this._line;\n\t}\n\n\tget character(): number {\n\t\treturn this._character;\n\t}\n\n\tconstructor(line: number, character: number) {\n\t\tif (line < 0) {\n\t\t\tthrow illegalArgument('line must be non-negative');\n\t\t}\n\t\tif (character < 0) {\n\t\t\tthrow illegalArgument('character must be non-negative');\n\t\t}\n\t\tthis._line = line;\n\t\tthis._character = character;\n\t}\n\n\tisBefore(other: Position): boolean {\n\t\tif (this._line < other._line) {\n\t\t\treturn true;\n\t\t}\n\t\tif (other._line < this._line) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this._character < other._character;\n\t}\n\n\tisBeforeOrEqual(other: Position): boolean {\n\t\tif (this._line < other._line) {\n\t\t\treturn true;\n\t\t}\n\t\tif (other._line < this._line) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this._character <= other._character;\n\t}\n\n\tisAfter(other: Position): boolean {\n\t\treturn !this.isBeforeOrEqual(other);\n\t}\n\n\tisAfterOrEqual(other: Position): boolean {\n\t\treturn !this.isBefore(other);\n\t}\n\n\tisEqual(other: Position): boolean {\n\t\treturn this._line === other._line && this._character === other._character;\n\t}\n\n\tcompareTo(other: Position): number {\n\t\tif (this._line < other._line) {\n\t\t\treturn -1;\n\t\t} else if (this._line > other.line) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\t// equal line\n\t\t\tif (this._character < other._character) {\n\t\t\t\treturn -1;\n\t\t\t} else if (this._character > other._character) {\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\t// equal line and character\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\n\ttranslate(change: { lineDelta?: number; characterDelta?: number }): Position;\n\ttranslate(lineDelta?: number, characterDelta?: number): Position;\n\ttranslate(lineDeltaOrChange: number | undefined | { lineDelta?: number; characterDelta?: number }, characterDelta: number = 0): Position {\n\n\t\tif (lineDeltaOrChange === null || characterDelta === null) {\n\t\t\tthrow illegalArgument();\n\t\t}\n\n\t\tlet lineDelta: number;\n\t\tif (typeof lineDeltaOrChange === 'undefined') {\n\t\t\tlineDelta = 0;\n\t\t} else if (typeof lineDeltaOrChange === 'number') {\n\t\t\tlineDelta = lineDeltaOrChange;\n\t\t} else {\n\t\t\tlineDelta = typeof lineDeltaOrChange.lineDelta === 'number' ? lineDeltaOrChange.lineDelta : 0;\n\t\t\tcharacterDelta = typeof lineDeltaOrChange.characterDelta === 'number' ? lineDeltaOrChange.characterDelta : 0;\n\t\t}\n\n\t\tif (lineDelta === 0 && characterDelta === 0) {\n\t\t\treturn this;\n\t\t}\n\t\treturn new Position(this.line + lineDelta, this.character + characterDelta);\n\t}\n\n\twith(change: { line?: number; character?: number }): Position;\n\twith(line?: number, character?: number): Position;\n\twith(lineOrChange: number | undefined | { line?: number; character?: number }, character: number = this.character): Position {\n\n\t\tif (lineOrChange === null || character === null) {\n\t\t\tthrow illegalArgument();\n\t\t}\n\n\t\tlet line: number;\n\t\tif (typeof lineOrChange === 'undefined') {\n\t\t\tline = this.line;\n\n\t\t} else if (typeof lineOrChange === 'number') {\n\t\t\tline = lineOrChange;\n\n\t\t} else {\n\t\t\tline = typeof lineOrChange.line === 'number' ? lineOrChange.line : this.line;\n\t\t\tcharacter = typeof lineOrChange.character === 'number' ? lineOrChange.character : this.character;\n\t\t}\n\n\t\tif (line === this.line && character === this.character) {\n\t\t\treturn this;\n\t\t}\n\t\treturn new Position(line, character);\n\t}\n\n\ttoJSON(): any {\n\t\treturn { line: this.line, character: this.character };\n\t}\n}\n\n@es5ClassCompat\nexport class Range {\n\n\tstatic isRange(thing: any): thing is vscode.Range {\n\t\tif (thing instanceof Range) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn Position.isPosition((<Range>thing).start)\n\t\t\t&& Position.isPosition((<Range>thing.end));\n\t}\n\n\tstatic of(obj: vscode.Range): Range {\n\t\tif (obj instanceof Range) {\n\t\t\treturn obj;\n\t\t}\n\t\tif (this.isRange(obj)) {\n\t\t\treturn new Range(obj.start, obj.end);\n\t\t}\n\t\tthrow new Error('Invalid argument, is NOT a range-like object');\n\t}\n\n\tprotected _start: Position;\n\tprotected _end: Position;\n\n\tget start(): Position {\n\t\treturn this._start;\n\t}\n\n\tget end(): Position {\n\t\treturn this._end;\n\t}\n\n\tconstructor(start: vscode.Position, end: vscode.Position);\n\tconstructor(start: Position, end: Position);\n\tconstructor(startLine: number, startColumn: number, endLine: number, endColumn: number);\n\tconstructor(startLineOrStart: number | Position | vscode.Position, startColumnOrEnd: number | Position | vscode.Position, endLine?: number, endColumn?: number) {\n\t\tlet start: Position | undefined;\n\t\tlet end: Position | undefined;\n\n\t\tif (typeof startLineOrStart === 'number' && typeof startColumnOrEnd === 'number' && typeof endLine === 'number' && typeof endColumn === 'number') {\n\t\t\tstart = new Position(startLineOrStart, startColumnOrEnd);\n\t\t\tend = new Position(endLine, endColumn);\n\t\t} else if (Position.isPosition(startLineOrStart) && Position.isPosition(startColumnOrEnd)) {\n\t\t\tstart = Position.of(startLineOrStart);\n\t\t\tend = Position.of(startColumnOrEnd);\n\t\t}\n\n\t\tif (!start || !end) {\n\t\t\tthrow new Error('Invalid arguments');\n\t\t}\n\n\t\tif (start.isBefore(end)) {\n\t\t\tthis._start = start;\n\t\t\tthis._end = end;\n\t\t} else {\n\t\t\tthis._start = end;\n\t\t\tthis._end = start;\n\t\t}\n\t}\n\n\tcontains(positionOrRange: Position | Range): boolean {\n\t\tif (Range.isRange(positionOrRange)) {\n\t\t\treturn this.contains(positionOrRange.start)\n\t\t\t\t&& this.contains(positionOrRange.end);\n\n\t\t} else if (Position.isPosition(positionOrRange)) {\n\t\t\tif (Position.of(positionOrRange).isBefore(this._start)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this._end.isBefore(positionOrRange)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tisEqual(other: Range): boolean {\n\t\treturn this._start.isEqual(other._start) && this._end.isEqual(other._end);\n\t}\n\n\tintersection(other: Range): Range | undefined {\n\t\tconst start = Position.Max(other.start, this._start);\n\t\tconst end = Position.Min(other.end, this._end);\n\t\tif (start.isAfter(end)) {\n\t\t\t// this happens when there is no overlap:\n\t\t\t// |-----|\n\t\t\t//          |----|\n\t\t\treturn undefined;\n\t\t}\n\t\treturn new Range(start, end);\n\t}\n\n\tunion(other: Range): Range {\n\t\tif (this.contains(other)) {\n\t\t\treturn this;\n\t\t} else if (other.contains(this)) {\n\t\t\treturn other;\n\t\t}\n\t\tconst start = Position.Min(other.start, this._start);\n\t\tconst end = Position.Max(other.end, this.end);\n\t\treturn new Range(start, end);\n\t}\n\n\tget isEmpty(): boolean {\n\t\treturn this._start.isEqual(this._end);\n\t}\n\n\tget isSingleLine(): boolean {\n\t\treturn this._start.line === this._end.line;\n\t}\n\n\twith(change: { start?: Position; end?: Position }): Range;\n\twith(start?: Position, end?: Position): Range;\n\twith(startOrChange: Position | undefined | { start?: Position; end?: Position }, end: Position = this.end): Range {\n\n\t\tif (startOrChange === null || end === null) {\n\t\t\tthrow illegalArgument();\n\t\t}\n\n\t\tlet start: Position;\n\t\tif (!startOrChange) {\n\t\t\tstart = this.start;\n\n\t\t} else if (Position.isPosition(startOrChange)) {\n\t\t\tstart = startOrChange;\n\n\t\t} else {\n\t\t\tstart = startOrChange.start || this.start;\n\t\t\tend = startOrChange.end || this.end;\n\t\t}\n\n\t\tif (start.isEqual(this._start) && end.isEqual(this.end)) {\n\t\t\treturn this;\n\t\t}\n\t\treturn new Range(start, end);\n\t}\n\n\ttoJSON(): any {\n\t\treturn [this.start, this.end];\n\t}\n}\n\n@es5ClassCompat\nexport class Selection extends Range {\n\n\tstatic isSelection(thing: any): thing is Selection {\n\t\tif (thing instanceof Selection) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn Range.isRange(thing)\n\t\t\t&& Position.isPosition((<Selection>thing).anchor)\n\t\t\t&& Position.isPosition((<Selection>thing).active)\n\t\t\t&& typeof (<Selection>thing).isReversed === 'boolean';\n\t}\n\n\tprivate _anchor: Position;\n\n\tpublic get anchor(): Position {\n\t\treturn this._anchor;\n\t}\n\n\tprivate _active: Position;\n\n\tpublic get active(): Position {\n\t\treturn this._active;\n\t}\n\n\tconstructor(anchor: Position, active: Position);\n\tconstructor(anchorLine: number, anchorColumn: number, activeLine: number, activeColumn: number);\n\tconstructor(anchorLineOrAnchor: number | Position, anchorColumnOrActive: number | Position, activeLine?: number, activeColumn?: number) {\n\t\tlet anchor: Position | undefined;\n\t\tlet active: Position | undefined;\n\n\t\tif (typeof anchorLineOrAnchor === 'number' && typeof anchorColumnOrActive === 'number' && typeof activeLine === 'number' && typeof activeColumn === 'number') {\n\t\t\tanchor = new Position(anchorLineOrAnchor, anchorColumnOrActive);\n\t\t\tactive = new Position(activeLine, activeColumn);\n\t\t} else if (Position.isPosition(anchorLineOrAnchor) && Position.isPosition(anchorColumnOrActive)) {\n\t\t\tanchor = Position.of(anchorLineOrAnchor);\n\t\t\tactive = Position.of(anchorColumnOrActive);\n\t\t}\n\n\t\tif (!anchor || !active) {\n\t\t\tthrow new Error('Invalid arguments');\n\t\t}\n\n\t\tsuper(anchor, active);\n\n\t\tthis._anchor = anchor;\n\t\tthis._active = active;\n\t}\n\n\tget isReversed(): boolean {\n\t\treturn this._anchor === this._end;\n\t}\n\n\toverride toJSON() {\n\t\treturn {\n\t\t\tstart: this.start,\n\t\t\tend: this.end,\n\t\t\tactive: this.active,\n\t\t\tanchor: this.anchor\n\t\t};\n\t}\n}\n\nexport class ResolvedAuthority {\n\treadonly host: string;\n\treadonly port: number;\n\treadonly connectionToken: string | undefined;\n\n\tconstructor(host: string, port: number, connectionToken?: string) {\n\t\tif (typeof host !== 'string' || host.length === 0) {\n\t\t\tthrow illegalArgument('host');\n\t\t}\n\t\tif (typeof port !== 'number' || port === 0 || Math.round(port) !== port) {\n\t\t\tthrow illegalArgument('port');\n\t\t}\n\t\tif (typeof connectionToken !== 'undefined') {\n\t\t\tif (typeof connectionToken !== 'string' || connectionToken.length === 0 || !/^[0-9A-Za-z\\-]+$/.test(connectionToken)) {\n\t\t\t\tthrow illegalArgument('connectionToken');\n\t\t\t}\n\t\t}\n\t\tthis.host = host;\n\t\tthis.port = Math.round(port);\n\t\tthis.connectionToken = connectionToken;\n\t}\n}\n\nexport class RemoteAuthorityResolverError extends Error {\n\n\tstatic NotAvailable(message?: string, handled?: boolean): RemoteAuthorityResolverError {\n\t\treturn new RemoteAuthorityResolverError(message, RemoteAuthorityResolverErrorCode.NotAvailable, handled);\n\t}\n\n\tstatic TemporarilyNotAvailable(message?: string): RemoteAuthorityResolverError {\n\t\treturn new RemoteAuthorityResolverError(message, RemoteAuthorityResolverErrorCode.TemporarilyNotAvailable);\n\t}\n\n\tpublic readonly _message: string | undefined;\n\tpublic readonly _code: RemoteAuthorityResolverErrorCode;\n\tpublic readonly _detail: any;\n\n\tconstructor(message?: string, code: RemoteAuthorityResolverErrorCode = RemoteAuthorityResolverErrorCode.Unknown, detail?: any) {\n\t\tsuper(message);\n\n\t\tthis._message = message;\n\t\tthis._code = code;\n\t\tthis._detail = detail;\n\n\t\t// workaround when extending builtin objects and when compiling to ES5, see:\n\t\t// https://github.com/microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n\t\tif (typeof (<any>Object).setPrototypeOf === 'function') {\n\t\t\t(<any>Object).setPrototypeOf(this, RemoteAuthorityResolverError.prototype);\n\t\t}\n\t}\n}\n\nexport enum EndOfLine {\n\tLF = 1,\n\tCRLF = 2\n}\n\nexport enum EnvironmentVariableMutatorType {\n\tReplace = 1,\n\tAppend = 2,\n\tPrepend = 3\n}\n\n@es5ClassCompat\nexport class TextEdit {\n\n\tstatic isTextEdit(thing: any): thing is TextEdit {\n\t\tif (thing instanceof TextEdit) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn Range.isRange((<TextEdit>thing))\n\t\t\t&& typeof (<TextEdit>thing).newText === 'string';\n\t}\n\n\tstatic replace(range: Range, newText: string): TextEdit {\n\t\treturn new TextEdit(range, newText);\n\t}\n\n\tstatic insert(position: Position, newText: string): TextEdit {\n\t\treturn TextEdit.replace(new Range(position, position), newText);\n\t}\n\n\tstatic delete(range: Range): TextEdit {\n\t\treturn TextEdit.replace(range, '');\n\t}\n\n\tstatic setEndOfLine(eol: EndOfLine): TextEdit {\n\t\tconst ret = new TextEdit(new Range(new Position(0, 0), new Position(0, 0)), '');\n\t\tret.newEol = eol;\n\t\treturn ret;\n\t}\n\n\tprotected _range: Range;\n\tprotected _newText: string | null;\n\tprotected _newEol?: EndOfLine;\n\n\tget range(): Range {\n\t\treturn this._range;\n\t}\n\n\tset range(value: Range) {\n\t\tif (value && !Range.isRange(value)) {\n\t\t\tthrow illegalArgument('range');\n\t\t}\n\t\tthis._range = value;\n\t}\n\n\tget newText(): string {\n\t\treturn this._newText || '';\n\t}\n\n\tset newText(value: string) {\n\t\tif (value && typeof value !== 'string') {\n\t\t\tthrow illegalArgument('newText');\n\t\t}\n\t\tthis._newText = value;\n\t}\n\n\tget newEol(): EndOfLine | undefined {\n\t\treturn this._newEol;\n\t}\n\n\tset newEol(value: EndOfLine | undefined) {\n\t\tif (value && typeof value !== 'number') {\n\t\t\tthrow illegalArgument('newEol');\n\t\t}\n\t\tthis._newEol = value;\n\t}\n\n\tconstructor(range: Range, newText: string | null) {\n\t\tthis._range = range;\n\t\tthis._newText = newText;\n\t}\n\n\ttoJSON(): any {\n\t\treturn {\n\t\t\trange: this.range,\n\t\t\tnewText: this.newText,\n\t\t\tnewEol: this._newEol\n\t\t};\n\t}\n}\n\n@es5ClassCompat\nexport class NotebookEdit implements vscode.NotebookEdit {\n\n\tstatic isNotebookCellEdit(thing: any): thing is NotebookEdit {\n\t\tif (thing instanceof NotebookEdit) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn NotebookRange.isNotebookRange((<NotebookEdit>thing))\n\t\t\t&& Array.isArray((<NotebookEdit>thing).newCells);\n\t}\n\n\tstatic replaceCells(range: NotebookRange, newCells: NotebookCellData[]): NotebookEdit {\n\t\treturn new NotebookEdit(range, newCells);\n\t}\n\n\tstatic insertCells(index: number, newCells: vscode.NotebookCellData[]): vscode.NotebookEdit {\n\t\treturn new NotebookEdit(new NotebookRange(index, index), newCells);\n\t}\n\n\tstatic deleteCells(range: NotebookRange): NotebookEdit {\n\t\treturn new NotebookEdit(range, []);\n\t}\n\n\tstatic updateCellMetadata(index: number, newMetadata: { [key: string]: any }): NotebookEdit {\n\t\tconst edit = new NotebookEdit(new NotebookRange(index, index), []);\n\t\tedit.newCellMetadata = newMetadata;\n\t\treturn edit;\n\t}\n\n\tstatic updateNotebookMetadata(newMetadata: { [key: string]: any }): NotebookEdit {\n\t\tconst edit = new NotebookEdit(new NotebookRange(0, 0), []);\n\t\tedit.newNotebookMetadata = newMetadata;\n\t\treturn edit;\n\t}\n\n\trange: NotebookRange;\n\tnewCells: NotebookCellData[];\n\tnewCellMetadata?: { [key: string]: any };\n\tnewNotebookMetadata?: { [key: string]: any };\n\n\tconstructor(range: NotebookRange, newCells: NotebookCellData[]) {\n\t\tthis.range = range;\n\t\tthis.newCells = newCells;\n\t}\n}\n\nexport interface IFileOperationOptions {\n\toverwrite?: boolean;\n\tignoreIfExists?: boolean;\n\tignoreIfNotExists?: boolean;\n\trecursive?: boolean;\n}\n\nexport const enum FileEditType {\n\tFile = 1,\n\tText = 2,\n\tCell = 3,\n\tCellReplace = 5,\n\tSnippet = 6,\n}\n\nexport interface IFileOperation {\n\t_type: FileEditType.File;\n\tfrom?: URI;\n\tto?: URI;\n\toptions?: IFileOperationOptions;\n\tmetadata?: vscode.WorkspaceEditEntryMetadata;\n}\n\nexport interface IFileTextEdit {\n\t_type: FileEditType.Text;\n\turi: URI;\n\tedit: TextEdit;\n\tmetadata?: vscode.WorkspaceEditEntryMetadata;\n}\n\nexport interface IFileSnippetTextEdit {\n\t_type: FileEditType.Snippet;\n\turi: URI;\n\trange: vscode.Range;\n\tedit: vscode.SnippetString;\n\tmetadata?: vscode.WorkspaceEditEntryMetadata;\n}\n\nexport interface IFileCellEdit {\n\t_type: FileEditType.Cell;\n\turi: URI;\n\tedit?: ICellPartialMetadataEdit | IDocumentMetadataEdit;\n\tnotebookMetadata?: Record<string, any>;\n\tmetadata?: vscode.WorkspaceEditEntryMetadata;\n}\n\nexport interface ICellEdit {\n\t_type: FileEditType.CellReplace;\n\tmetadata?: vscode.WorkspaceEditEntryMetadata;\n\turi: URI;\n\tindex: number;\n\tcount: number;\n\tcells: vscode.NotebookCellData[];\n}\n\n\ntype WorkspaceEditEntry = IFileOperation | IFileTextEdit | IFileSnippetTextEdit | IFileCellEdit | ICellEdit;\n\n@es5ClassCompat\nexport class WorkspaceEdit implements vscode.WorkspaceEdit {\n\n\tprivate readonly _edits: WorkspaceEditEntry[] = [];\n\n\n\t_allEntries(): ReadonlyArray<WorkspaceEditEntry> {\n\t\treturn this._edits;\n\t}\n\n\t// --- file\n\n\trenameFile(from: vscode.Uri, to: vscode.Uri, options?: { overwrite?: boolean; ignoreIfExists?: boolean }, metadata?: vscode.WorkspaceEditEntryMetadata): void {\n\t\tthis._edits.push({ _type: FileEditType.File, from, to, options, metadata });\n\t}\n\n\tcreateFile(uri: vscode.Uri, options?: { overwrite?: boolean; ignoreIfExists?: boolean }, metadata?: vscode.WorkspaceEditEntryMetadata): void {\n\t\tthis._edits.push({ _type: FileEditType.File, from: undefined, to: uri, options, metadata });\n\t}\n\n\tdeleteFile(uri: vscode.Uri, options?: { recursive?: boolean; ignoreIfNotExists?: boolean }, metadata?: vscode.WorkspaceEditEntryMetadata): void {\n\t\tthis._edits.push({ _type: FileEditType.File, from: uri, to: undefined, options, metadata });\n\t}\n\n\t// --- notebook\n\n\treplaceNotebookMetadata(uri: URI, value: Record<string, any>, metadata?: vscode.WorkspaceEditEntryMetadata): void {\n\t\tthis._edits.push({ _type: FileEditType.Cell, metadata, uri, edit: { editType: CellEditType.DocumentMetadata, metadata: value }, notebookMetadata: value });\n\t}\n\n\treplaceNotebookCells(uri: URI, range: vscode.NotebookRange, cells: vscode.NotebookCellData[], metadata?: vscode.WorkspaceEditEntryMetadata): void;\n\treplaceNotebookCells(uri: URI, start: number, end: number, cells: vscode.NotebookCellData[], metadata?: vscode.WorkspaceEditEntryMetadata): void;\n\treplaceNotebookCells(uri: URI, startOrRange: number | vscode.NotebookRange, endOrCells: number | vscode.NotebookCellData[], cellsOrMetadata?: vscode.NotebookCellData[] | vscode.WorkspaceEditEntryMetadata, metadata?: vscode.WorkspaceEditEntryMetadata): void {\n\t\tlet start: number | undefined;\n\t\tlet end: number | undefined;\n\t\tlet cellData: vscode.NotebookCellData[] = [];\n\t\tlet workspaceEditMetadata: vscode.WorkspaceEditEntryMetadata | undefined;\n\n\t\tif (NotebookRange.isNotebookRange(startOrRange) && NotebookCellData.isNotebookCellDataArray(endOrCells) && !NotebookCellData.isNotebookCellDataArray(cellsOrMetadata)) {\n\t\t\tstart = startOrRange.start;\n\t\t\tend = startOrRange.end;\n\t\t\tcellData = endOrCells;\n\t\t\tworkspaceEditMetadata = cellsOrMetadata;\n\t\t} else if (typeof startOrRange === 'number' && typeof endOrCells === 'number' && NotebookCellData.isNotebookCellDataArray(cellsOrMetadata)) {\n\t\t\tstart = startOrRange;\n\t\t\tend = endOrCells;\n\t\t\tcellData = cellsOrMetadata;\n\t\t\tworkspaceEditMetadata = metadata;\n\t\t}\n\n\t\tif (start === undefined || end === undefined) {\n\t\t\tthrow new Error('Invalid arguments');\n\t\t}\n\n\t\tif (start !== end || cellData.length > 0) {\n\t\t\tthis._edits.push({ _type: FileEditType.CellReplace, uri, index: start, count: end - start, cells: cellData, metadata: workspaceEditMetadata });\n\t\t}\n\t}\n\n\treplaceNotebookCellMetadata(uri: URI, index: number, cellMetadata: Record<string, any>, metadata?: vscode.WorkspaceEditEntryMetadata): void {\n\t\tthis._edits.push({ _type: FileEditType.Cell, metadata, uri, edit: { editType: CellEditType.PartialMetadata, index, metadata: cellMetadata } });\n\t}\n\n\t// --- text\n\n\treplace(uri: URI, range: Range, newText: string | vscode.SnippetString, metadata?: vscode.WorkspaceEditEntryMetadata): void {\n\t\tif (typeof newText === 'string') {\n\t\t\tthis._edits.push({ _type: FileEditType.Text, uri, edit: new TextEdit(range, newText), metadata });\n\t\t} else {\n\t\t\tthis._edits.push({ _type: FileEditType.Snippet, uri, range, edit: newText, metadata });\n\t\t}\n\t}\n\n\tinsert(resource: URI, position: Position, newText: string, metadata?: vscode.WorkspaceEditEntryMetadata): void {\n\t\tthis.replace(resource, new Range(position, position), newText, metadata);\n\t}\n\n\tdelete(resource: URI, range: Range, metadata?: vscode.WorkspaceEditEntryMetadata): void {\n\t\tthis.replace(resource, range, '', metadata);\n\t}\n\n\t// --- text (Maplike)\n\n\thas(uri: URI): boolean {\n\t\treturn this._edits.some(edit => edit._type === FileEditType.Text && edit.uri.toString() === uri.toString());\n\t}\n\n\tset(uri: URI, edits: TextEdit[] | unknown): void {\n\t\tif (!edits) {\n\t\t\t// remove all text edits for `uri`\n\t\t\tfor (let i = 0; i < this._edits.length; i++) {\n\t\t\t\tconst element = this._edits[i];\n\t\t\t\tif (element._type === FileEditType.Text && element.uri.toString() === uri.toString()) {\n\t\t\t\t\tthis._edits[i] = undefined!; // will be coalesced down below\n\t\t\t\t}\n\t\t\t}\n\t\t\tcoalesceInPlace(this._edits);\n\t\t} else {\n\t\t\t// append edit to the end\n\t\t\tfor (const edit of edits as TextEdit[] | NotebookEdit[]) {\n\t\t\t\tif (edit) {\n\t\t\t\t\tif (NotebookEdit.isNotebookCellEdit(edit)) {\n\t\t\t\t\t\tif (edit.newCellMetadata) {\n\t\t\t\t\t\t\tthis.replaceNotebookCellMetadata(uri, edit.range.start, edit.newCellMetadata);\n\t\t\t\t\t\t} else if (edit.newNotebookMetadata) {\n\t\t\t\t\t\t\tthis.replaceNotebookMetadata(uri, edit.newNotebookMetadata);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.replaceNotebookCells(uri, edit.range, edit.newCells);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._edits.push({ _type: FileEditType.Text, uri, edit });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tget(uri: URI): TextEdit[] {\n\t\tconst res: TextEdit[] = [];\n\t\tfor (const candidate of this._edits) {\n\t\t\tif (candidate._type === FileEditType.Text && candidate.uri.toString() === uri.toString()) {\n\t\t\t\tres.push(candidate.edit);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}\n\n\tentries(): [URI, TextEdit[]][] {\n\t\tconst textEdits = new ResourceMap<[URI, TextEdit[]]>();\n\t\tfor (const candidate of this._edits) {\n\t\t\tif (candidate._type === FileEditType.Text) {\n\t\t\t\tlet textEdit = textEdits.get(candidate.uri);\n\t\t\t\tif (!textEdit) {\n\t\t\t\t\ttextEdit = [candidate.uri, []];\n\t\t\t\t\ttextEdits.set(candidate.uri, textEdit);\n\t\t\t\t}\n\t\t\t\ttextEdit[1].push(candidate.edit);\n\t\t\t}\n\t\t}\n\t\treturn [...textEdits.values()];\n\t}\n\n\tget size(): number {\n\t\treturn this.entries().length;\n\t}\n\n\ttoJSON(): any {\n\t\treturn this.entries();\n\t}\n}\n\n@es5ClassCompat\nexport class SnippetString {\n\n\tstatic isSnippetString(thing: any): thing is SnippetString {\n\t\tif (thing instanceof SnippetString) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<SnippetString>thing).value === 'string';\n\t}\n\n\tprivate static _escape(value: string): string {\n\t\treturn value.replace(/\\$|}|\\\\/g, '\\\\$&');\n\t}\n\n\tprivate _tabstop: number = 1;\n\n\tvalue: string;\n\n\tconstructor(value?: string) {\n\t\tthis.value = value || '';\n\t}\n\n\tappendText(string: string): SnippetString {\n\t\tthis.value += SnippetString._escape(string);\n\t\treturn this;\n\t}\n\n\tappendTabstop(number: number = this._tabstop++): SnippetString {\n\t\tthis.value += '$';\n\t\tthis.value += number;\n\t\treturn this;\n\t}\n\n\tappendPlaceholder(value: string | ((snippet: SnippetString) => any), number: number = this._tabstop++): SnippetString {\n\n\t\tif (typeof value === 'function') {\n\t\t\tconst nested = new SnippetString();\n\t\t\tnested._tabstop = this._tabstop;\n\t\t\tvalue(nested);\n\t\t\tthis._tabstop = nested._tabstop;\n\t\t\tvalue = nested.value;\n\t\t} else {\n\t\t\tvalue = SnippetString._escape(value);\n\t\t}\n\n\t\tthis.value += '${';\n\t\tthis.value += number;\n\t\tthis.value += ':';\n\t\tthis.value += value;\n\t\tthis.value += '}';\n\n\t\treturn this;\n\t}\n\n\tappendChoice(values: string[], number: number = this._tabstop++): SnippetString {\n\t\tconst value = values.map(s => s.replace(/\\$|}|\\\\|,/g, '\\\\$&')).join(',');\n\n\t\tthis.value += '${';\n\t\tthis.value += number;\n\t\tthis.value += '|';\n\t\tthis.value += value;\n\t\tthis.value += '|}';\n\n\t\treturn this;\n\t}\n\n\tappendVariable(name: string, defaultValue?: string | ((snippet: SnippetString) => any)): SnippetString {\n\n\t\tif (typeof defaultValue === 'function') {\n\t\t\tconst nested = new SnippetString();\n\t\t\tnested._tabstop = this._tabstop;\n\t\t\tdefaultValue(nested);\n\t\t\tthis._tabstop = nested._tabstop;\n\t\t\tdefaultValue = nested.value;\n\n\t\t} else if (typeof defaultValue === 'string') {\n\t\t\tdefaultValue = defaultValue.replace(/\\$|}/g, '\\\\$&');\n\t\t}\n\n\t\tthis.value += '${';\n\t\tthis.value += name;\n\t\tif (defaultValue) {\n\t\t\tthis.value += ':';\n\t\t\tthis.value += defaultValue;\n\t\t}\n\t\tthis.value += '}';\n\n\n\t\treturn this;\n\t}\n}\n\nexport enum DiagnosticTag {\n\tUnnecessary = 1,\n\tDeprecated = 2\n}\n\nexport enum DiagnosticSeverity {\n\tHint = 3,\n\tInformation = 2,\n\tWarning = 1,\n\tError = 0\n}\n\n@es5ClassCompat\nexport class Location {\n\n\tstatic isLocation(thing: any): thing is vscode.Location {\n\t\tif (thing instanceof Location) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn Range.isRange((<Location>thing).range)\n\t\t\t&& URI.isUri((<Location>thing).uri);\n\t}\n\n\turi: URI;\n\trange!: Range;\n\n\tconstructor(uri: URI, rangeOrPosition: Range | Position) {\n\t\tthis.uri = uri;\n\n\t\tif (!rangeOrPosition) {\n\t\t\t//that's OK\n\t\t} else if (Range.isRange(rangeOrPosition)) {\n\t\t\tthis.range = Range.of(rangeOrPosition);\n\t\t} else if (Position.isPosition(rangeOrPosition)) {\n\t\t\tthis.range = new Range(rangeOrPosition, rangeOrPosition);\n\t\t} else {\n\t\t\tthrow new Error('Illegal argument');\n\t\t}\n\t}\n\n\ttoJSON(): any {\n\t\treturn {\n\t\t\turi: this.uri,\n\t\t\trange: this.range\n\t\t};\n\t}\n}\n\n@es5ClassCompat\nexport class DiagnosticRelatedInformation {\n\n\tstatic is(thing: any): thing is DiagnosticRelatedInformation {\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<DiagnosticRelatedInformation>thing).message === 'string'\n\t\t\t&& (<DiagnosticRelatedInformation>thing).location\n\t\t\t&& Range.isRange((<DiagnosticRelatedInformation>thing).location.range)\n\t\t\t&& URI.isUri((<DiagnosticRelatedInformation>thing).location.uri);\n\t}\n\n\tlocation: Location;\n\tmessage: string;\n\n\tconstructor(location: Location, message: string) {\n\t\tthis.location = location;\n\t\tthis.message = message;\n\t}\n\n\tstatic isEqual(a: DiagnosticRelatedInformation, b: DiagnosticRelatedInformation): boolean {\n\t\tif (a === b) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!a || !b) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.message === b.message\n\t\t\t&& a.location.range.isEqual(b.location.range)\n\t\t\t&& a.location.uri.toString() === b.location.uri.toString();\n\t}\n}\n\n@es5ClassCompat\nexport class Diagnostic {\n\n\trange: Range;\n\tmessage: string;\n\tseverity: DiagnosticSeverity;\n\tsource?: string;\n\tcode?: string | number;\n\trelatedInformation?: DiagnosticRelatedInformation[];\n\ttags?: DiagnosticTag[];\n\n\tconstructor(range: Range, message: string, severity: DiagnosticSeverity = DiagnosticSeverity.Error) {\n\t\tif (!Range.isRange(range)) {\n\t\t\tthrow new TypeError('range must be set');\n\t\t}\n\t\tif (!message) {\n\t\t\tthrow new TypeError('message must be set');\n\t\t}\n\t\tthis.range = range;\n\t\tthis.message = message;\n\t\tthis.severity = severity;\n\t}\n\n\ttoJSON(): any {\n\t\treturn {\n\t\t\tseverity: DiagnosticSeverity[this.severity],\n\t\t\tmessage: this.message,\n\t\t\trange: this.range,\n\t\t\tsource: this.source,\n\t\t\tcode: this.code,\n\t\t};\n\t}\n\n\tstatic isEqual(a: Diagnostic | undefined, b: Diagnostic | undefined): boolean {\n\t\tif (a === b) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!a || !b) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.message === b.message\n\t\t\t&& a.severity === b.severity\n\t\t\t&& a.code === b.code\n\t\t\t&& a.severity === b.severity\n\t\t\t&& a.source === b.source\n\t\t\t&& a.range.isEqual(b.range)\n\t\t\t&& equals(a.tags, b.tags)\n\t\t\t&& equals(a.relatedInformation, b.relatedInformation, DiagnosticRelatedInformation.isEqual);\n\t}\n}\n\n@es5ClassCompat\nexport class Hover {\n\n\tpublic contents: (vscode.MarkdownString | vscode.MarkedString)[];\n\tpublic range: Range | undefined;\n\n\tconstructor(\n\t\tcontents: vscode.MarkdownString | vscode.MarkedString | (vscode.MarkdownString | vscode.MarkedString)[],\n\t\trange?: Range\n\t) {\n\t\tif (!contents) {\n\t\t\tthrow new Error('Illegal argument, contents must be defined');\n\t\t}\n\t\tif (Array.isArray(contents)) {\n\t\t\tthis.contents = contents;\n\t\t} else {\n\t\t\tthis.contents = [contents];\n\t\t}\n\t\tthis.range = range;\n\t}\n}\n\nexport enum DocumentHighlightKind {\n\tText = 0,\n\tRead = 1,\n\tWrite = 2\n}\n\n@es5ClassCompat\nexport class DocumentHighlight {\n\n\trange: Range;\n\tkind: DocumentHighlightKind;\n\n\tconstructor(range: Range, kind: DocumentHighlightKind = DocumentHighlightKind.Text) {\n\t\tthis.range = range;\n\t\tthis.kind = kind;\n\t}\n\n\ttoJSON(): any {\n\t\treturn {\n\t\t\trange: this.range,\n\t\t\tkind: DocumentHighlightKind[this.kind]\n\t\t};\n\t}\n}\n\nexport enum SymbolKind {\n\tFile = 0,\n\tModule = 1,\n\tNamespace = 2,\n\tPackage = 3,\n\tClass = 4,\n\tMethod = 5,\n\tProperty = 6,\n\tField = 7,\n\tConstructor = 8,\n\tEnum = 9,\n\tInterface = 10,\n\tFunction = 11,\n\tVariable = 12,\n\tConstant = 13,\n\tString = 14,\n\tNumber = 15,\n\tBoolean = 16,\n\tArray = 17,\n\tObject = 18,\n\tKey = 19,\n\tNull = 20,\n\tEnumMember = 21,\n\tStruct = 22,\n\tEvent = 23,\n\tOperator = 24,\n\tTypeParameter = 25\n}\n\nexport enum SymbolTag {\n\tDeprecated = 1,\n}\n\n@es5ClassCompat\nexport class SymbolInformation {\n\n\tstatic validate(candidate: SymbolInformation): void {\n\t\tif (!candidate.name) {\n\t\t\tthrow new Error('name must not be falsy');\n\t\t}\n\t}\n\n\tname: string;\n\tlocation!: Location;\n\tkind: SymbolKind;\n\ttags?: SymbolTag[];\n\tcontainerName: string | undefined;\n\n\tconstructor(name: string, kind: SymbolKind, containerName: string | undefined, location: Location);\n\tconstructor(name: string, kind: SymbolKind, range: Range, uri?: URI, containerName?: string);\n\tconstructor(name: string, kind: SymbolKind, rangeOrContainer: string | undefined | Range, locationOrUri?: Location | URI, containerName?: string) {\n\t\tthis.name = name;\n\t\tthis.kind = kind;\n\t\tthis.containerName = containerName;\n\n\t\tif (typeof rangeOrContainer === 'string') {\n\t\t\tthis.containerName = rangeOrContainer;\n\t\t}\n\n\t\tif (locationOrUri instanceof Location) {\n\t\t\tthis.location = locationOrUri;\n\t\t} else if (rangeOrContainer instanceof Range) {\n\t\t\tthis.location = new Location(locationOrUri!, rangeOrContainer);\n\t\t}\n\n\t\tSymbolInformation.validate(this);\n\t}\n\n\ttoJSON(): any {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tkind: SymbolKind[this.kind],\n\t\t\tlocation: this.location,\n\t\t\tcontainerName: this.containerName\n\t\t};\n\t}\n}\n\n@es5ClassCompat\nexport class DocumentSymbol {\n\n\tstatic validate(candidate: DocumentSymbol): void {\n\t\tif (!candidate.name) {\n\t\t\tthrow new Error('name must not be falsy');\n\t\t}\n\t\tif (!candidate.range.contains(candidate.selectionRange)) {\n\t\t\tthrow new Error('selectionRange must be contained in fullRange');\n\t\t}\n\t\tcandidate.children?.forEach(DocumentSymbol.validate);\n\t}\n\n\tname: string;\n\tdetail: string;\n\tkind: SymbolKind;\n\ttags?: SymbolTag[];\n\trange: Range;\n\tselectionRange: Range;\n\tchildren: DocumentSymbol[];\n\n\tconstructor(name: string, detail: string, kind: SymbolKind, range: Range, selectionRange: Range) {\n\t\tthis.name = name;\n\t\tthis.detail = detail;\n\t\tthis.kind = kind;\n\t\tthis.range = range;\n\t\tthis.selectionRange = selectionRange;\n\t\tthis.children = [];\n\n\t\tDocumentSymbol.validate(this);\n\t}\n}\n\n\nexport enum CodeActionTriggerKind {\n\tInvoke = 1,\n\tAutomatic = 2,\n}\n\n@es5ClassCompat\nexport class CodeAction {\n\ttitle: string;\n\n\tcommand?: vscode.Command;\n\n\tedit?: WorkspaceEdit;\n\n\tdiagnostics?: Diagnostic[];\n\n\tkind?: CodeActionKind;\n\n\tisPreferred?: boolean;\n\n\tconstructor(title: string, kind?: CodeActionKind) {\n\t\tthis.title = title;\n\t\tthis.kind = kind;\n\t}\n}\n\n\n@es5ClassCompat\nexport class CodeActionKind {\n\tprivate static readonly sep = '.';\n\n\tpublic static Empty: CodeActionKind;\n\tpublic static QuickFix: CodeActionKind;\n\tpublic static Refactor: CodeActionKind;\n\tpublic static RefactorExtract: CodeActionKind;\n\tpublic static RefactorInline: CodeActionKind;\n\tpublic static RefactorRewrite: CodeActionKind;\n\tpublic static Source: CodeActionKind;\n\tpublic static SourceOrganizeImports: CodeActionKind;\n\tpublic static SourceFixAll: CodeActionKind;\n\n\tconstructor(\n\t\tpublic readonly value: string\n\t) { }\n\n\tpublic append(parts: string): CodeActionKind {\n\t\treturn new CodeActionKind(this.value ? this.value + CodeActionKind.sep + parts : parts);\n\t}\n\n\tpublic intersects(other: CodeActionKind): boolean {\n\t\treturn this.contains(other) || other.contains(this);\n\t}\n\n\tpublic contains(other: CodeActionKind): boolean {\n\t\treturn this.value === other.value || other.value.startsWith(this.value + CodeActionKind.sep);\n\t}\n}\nCodeActionKind.Empty = new CodeActionKind('');\nCodeActionKind.QuickFix = CodeActionKind.Empty.append('quickfix');\nCodeActionKind.Refactor = CodeActionKind.Empty.append('refactor');\nCodeActionKind.RefactorExtract = CodeActionKind.Refactor.append('extract');\nCodeActionKind.RefactorInline = CodeActionKind.Refactor.append('inline');\nCodeActionKind.RefactorRewrite = CodeActionKind.Refactor.append('rewrite');\nCodeActionKind.Source = CodeActionKind.Empty.append('source');\nCodeActionKind.SourceOrganizeImports = CodeActionKind.Source.append('organizeImports');\nCodeActionKind.SourceFixAll = CodeActionKind.Source.append('fixAll');\n\n@es5ClassCompat\nexport class SelectionRange {\n\n\trange: Range;\n\tparent?: SelectionRange;\n\n\tconstructor(range: Range, parent?: SelectionRange) {\n\t\tthis.range = range;\n\t\tthis.parent = parent;\n\n\t\tif (parent && !parent.range.contains(this.range)) {\n\t\t\tthrow new Error('Invalid argument: parent must contain this range');\n\t\t}\n\t}\n}\n\nexport class CallHierarchyItem {\n\n\t_sessionId?: string;\n\t_itemId?: string;\n\n\tkind: SymbolKind;\n\ttags?: SymbolTag[];\n\tname: string;\n\tdetail?: string;\n\turi: URI;\n\trange: Range;\n\tselectionRange: Range;\n\n\tconstructor(kind: SymbolKind, name: string, detail: string, uri: URI, range: Range, selectionRange: Range) {\n\t\tthis.kind = kind;\n\t\tthis.name = name;\n\t\tthis.detail = detail;\n\t\tthis.uri = uri;\n\t\tthis.range = range;\n\t\tthis.selectionRange = selectionRange;\n\t}\n}\n\nexport class CallHierarchyIncomingCall {\n\n\tfrom: vscode.CallHierarchyItem;\n\tfromRanges: vscode.Range[];\n\n\tconstructor(item: vscode.CallHierarchyItem, fromRanges: vscode.Range[]) {\n\t\tthis.fromRanges = fromRanges;\n\t\tthis.from = item;\n\t}\n}\nexport class CallHierarchyOutgoingCall {\n\n\tto: vscode.CallHierarchyItem;\n\tfromRanges: vscode.Range[];\n\n\tconstructor(item: vscode.CallHierarchyItem, fromRanges: vscode.Range[]) {\n\t\tthis.fromRanges = fromRanges;\n\t\tthis.to = item;\n\t}\n}\n\nexport enum LanguageStatusSeverity {\n\tInformation = 0,\n\tWarning = 1,\n\tError = 2\n}\n\n\n@es5ClassCompat\nexport class CodeLens {\n\n\trange: Range;\n\n\tcommand: vscode.Command | undefined;\n\n\tconstructor(range: Range, command?: vscode.Command) {\n\t\tthis.range = range;\n\t\tthis.command = command;\n\t}\n\n\tget isResolved(): boolean {\n\t\treturn !!this.command;\n\t}\n}\n\n@es5ClassCompat\nexport class MarkdownString implements vscode.MarkdownString {\n\n\treadonly #delegate: BaseMarkdownString;\n\n\tstatic isMarkdownString(thing: any): thing is vscode.MarkdownString {\n\t\tif (thing instanceof MarkdownString) {\n\t\t\treturn true;\n\t\t}\n\t\treturn thing && thing.appendCodeblock && thing.appendMarkdown && thing.appendText && (thing.value !== undefined);\n\t}\n\n\tconstructor(value?: string, supportThemeIcons: boolean = false) {\n\t\tthis.#delegate = new BaseMarkdownString(value, { supportThemeIcons });\n\t}\n\n\tget value(): string {\n\t\treturn this.#delegate.value;\n\t}\n\tset value(value: string) {\n\t\tthis.#delegate.value = value;\n\t}\n\n\tget isTrusted(): boolean | undefined {\n\t\treturn this.#delegate.isTrusted;\n\t}\n\n\tset isTrusted(value: boolean | undefined) {\n\t\tthis.#delegate.isTrusted = value;\n\t}\n\n\tget supportThemeIcons(): boolean | undefined {\n\t\treturn this.#delegate.supportThemeIcons;\n\t}\n\n\tset supportThemeIcons(value: boolean | undefined) {\n\t\tthis.#delegate.supportThemeIcons = value;\n\t}\n\n\tget supportHtml(): boolean | undefined {\n\t\treturn this.#delegate.supportHtml;\n\t}\n\n\tset supportHtml(value: boolean | undefined) {\n\t\tthis.#delegate.supportHtml = value;\n\t}\n\n\tget baseUri(): vscode.Uri | undefined {\n\t\treturn this.#delegate.baseUri;\n\t}\n\n\tset baseUri(value: vscode.Uri | undefined) {\n\t\tthis.#delegate.baseUri = value;\n\t}\n\n\tappendText(value: string): vscode.MarkdownString {\n\t\tthis.#delegate.appendText(value);\n\t\treturn this;\n\t}\n\n\tappendMarkdown(value: string): vscode.MarkdownString {\n\t\tthis.#delegate.appendMarkdown(value);\n\t\treturn this;\n\t}\n\n\tappendCodeblock(value: string, language?: string): vscode.MarkdownString {\n\t\tthis.#delegate.appendCodeblock(language ?? '', value);\n\t\treturn this;\n\t}\n}\n\n@es5ClassCompat\nexport class ParameterInformation {\n\n\tlabel: string | [number, number];\n\tdocumentation?: string | vscode.MarkdownString;\n\n\tconstructor(label: string | [number, number], documentation?: string | vscode.MarkdownString) {\n\t\tthis.label = label;\n\t\tthis.documentation = documentation;\n\t}\n}\n\n@es5ClassCompat\nexport class SignatureInformation {\n\n\tlabel: string;\n\tdocumentation?: string | vscode.MarkdownString;\n\tparameters: ParameterInformation[];\n\tactiveParameter?: number;\n\n\tconstructor(label: string, documentation?: string | vscode.MarkdownString) {\n\t\tthis.label = label;\n\t\tthis.documentation = documentation;\n\t\tthis.parameters = [];\n\t}\n}\n\n@es5ClassCompat\nexport class SignatureHelp {\n\n\tsignatures: SignatureInformation[];\n\tactiveSignature: number = 0;\n\tactiveParameter: number = 0;\n\n\tconstructor() {\n\t\tthis.signatures = [];\n\t}\n}\n\nexport enum SignatureHelpTriggerKind {\n\tInvoke = 1,\n\tTriggerCharacter = 2,\n\tContentChange = 3,\n}\n\n\nexport enum InlayHintKind {\n\tType = 1,\n\tParameter = 2,\n}\n\n@es5ClassCompat\nexport class InlayHintLabelPart {\n\n\tvalue: string;\n\ttooltip?: string | vscode.MarkdownString;\n\tlocation?: Location;\n\tcommand?: vscode.Command;\n\n\tconstructor(value: string) {\n\t\tthis.value = value;\n\t}\n}\n\n@es5ClassCompat\nexport class InlayHint implements vscode.InlayHint {\n\n\tlabel: string | InlayHintLabelPart[];\n\ttooltip?: string | vscode.MarkdownString;\n\tposition: Position;\n\ttextEdits?: TextEdit[];\n\tkind?: vscode.InlayHintKind;\n\tpaddingLeft?: boolean;\n\tpaddingRight?: boolean;\n\n\tconstructor(position: Position, label: string | InlayHintLabelPart[], kind?: vscode.InlayHintKind) {\n\t\tthis.position = position;\n\t\tthis.label = label;\n\t\tthis.kind = kind;\n\t}\n}\n\nexport enum CompletionTriggerKind {\n\tInvoke = 0,\n\tTriggerCharacter = 1,\n\tTriggerForIncompleteCompletions = 2\n}\n\nexport interface CompletionContext {\n\treadonly triggerKind: CompletionTriggerKind;\n\treadonly triggerCharacter: string | undefined;\n}\n\nexport enum CompletionItemKind {\n\tText = 0,\n\tMethod = 1,\n\tFunction = 2,\n\tConstructor = 3,\n\tField = 4,\n\tVariable = 5,\n\tClass = 6,\n\tInterface = 7,\n\tModule = 8,\n\tProperty = 9,\n\tUnit = 10,\n\tValue = 11,\n\tEnum = 12,\n\tKeyword = 13,\n\tSnippet = 14,\n\tColor = 15,\n\tFile = 16,\n\tReference = 17,\n\tFolder = 18,\n\tEnumMember = 19,\n\tConstant = 20,\n\tStruct = 21,\n\tEvent = 22,\n\tOperator = 23,\n\tTypeParameter = 24,\n\tUser = 25,\n\tIssue = 26\n}\n\nexport enum CompletionItemTag {\n\tDeprecated = 1,\n}\n\nexport interface CompletionItemLabel {\n\tlabel: string;\n\tdetail?: string;\n\tdescription?: string;\n}\n\n@es5ClassCompat\nexport class CompletionItem implements vscode.CompletionItem {\n\n\tlabel: string | CompletionItemLabel;\n\tkind?: CompletionItemKind;\n\ttags?: CompletionItemTag[];\n\tdetail?: string;\n\tdocumentation?: string | vscode.MarkdownString;\n\tsortText?: string;\n\tfilterText?: string;\n\tpreselect?: boolean;\n\tinsertText?: string | SnippetString;\n\tkeepWhitespace?: boolean;\n\trange?: Range | { inserting: Range; replacing: Range };\n\tcommitCharacters?: string[];\n\ttextEdit?: TextEdit;\n\tadditionalTextEdits?: TextEdit[];\n\tcommand?: vscode.Command;\n\n\tconstructor(label: string | CompletionItemLabel, kind?: CompletionItemKind) {\n\t\tthis.label = label;\n\t\tthis.kind = kind;\n\t}\n\n\ttoJSON(): any {\n\t\treturn {\n\t\t\tlabel: this.label,\n\t\t\tkind: this.kind && CompletionItemKind[this.kind],\n\t\t\tdetail: this.detail,\n\t\t\tdocumentation: this.documentation,\n\t\t\tsortText: this.sortText,\n\t\t\tfilterText: this.filterText,\n\t\t\tpreselect: this.preselect,\n\t\t\tinsertText: this.insertText,\n\t\t\ttextEdit: this.textEdit\n\t\t};\n\t}\n}\n\n@es5ClassCompat\nexport class CompletionList {\n\n\tisIncomplete?: boolean;\n\titems: vscode.CompletionItem[];\n\n\tconstructor(items: vscode.CompletionItem[] = [], isIncomplete: boolean = false) {\n\t\tthis.items = items;\n\t\tthis.isIncomplete = isIncomplete;\n\t}\n}\n\n@es5ClassCompat\nexport class InlineSuggestion implements vscode.InlineCompletionItem {\n\n\tfilterText?: string;\n\tinsertText: string;\n\trange?: Range;\n\tcommand?: vscode.Command;\n\n\tconstructor(insertText: string, range?: Range, command?: vscode.Command) {\n\t\tthis.insertText = insertText;\n\t\tthis.range = range;\n\t\tthis.command = command;\n\t}\n}\n\n@es5ClassCompat\nexport class InlineSuggestionList implements vscode.InlineCompletionList {\n\titems: vscode.InlineCompletionItemNew[];\n\n\tcommands: vscode.Command[] | undefined = undefined;\n\n\tconstructor(items: vscode.InlineCompletionItemNew[]) {\n\t\tthis.items = items;\n\t}\n}\n\n@es5ClassCompat\nexport class InlineSuggestionNew implements vscode.InlineCompletionItemNew {\n\tinsertText: string;\n\trange?: Range;\n\tcommand?: vscode.Command;\n\n\tconstructor(insertText: string, range?: Range, command?: vscode.Command) {\n\t\tthis.insertText = insertText;\n\t\tthis.range = range;\n\t\tthis.command = command;\n\t}\n}\n\n@es5ClassCompat\nexport class InlineSuggestionsNew implements vscode.InlineCompletionListNew {\n\titems: vscode.InlineCompletionItemNew[];\n\n\tcommands: vscode.Command[] | undefined;\n\n\tconstructor(items: vscode.InlineCompletionItemNew[], commands?: vscode.Command[]) {\n\t\tthis.items = items;\n\t\tthis.commands = commands;\n\t}\n}\n\nexport enum ViewColumn {\n\tActive = -1,\n\tBeside = -2,\n\tOne = 1,\n\tTwo = 2,\n\tThree = 3,\n\tFour = 4,\n\tFive = 5,\n\tSix = 6,\n\tSeven = 7,\n\tEight = 8,\n\tNine = 9\n}\n\nexport enum StatusBarAlignment {\n\tLeft = 1,\n\tRight = 2\n}\n\nexport enum TextEditorLineNumbersStyle {\n\tOff = 0,\n\tOn = 1,\n\tRelative = 2\n}\n\nexport enum TextDocumentSaveReason {\n\tManual = 1,\n\tAfterDelay = 2,\n\tFocusOut = 3\n}\n\nexport enum TextEditorRevealType {\n\tDefault = 0,\n\tInCenter = 1,\n\tInCenterIfOutsideViewport = 2,\n\tAtTop = 3\n}\n\nexport enum TextEditorSelectionChangeKind {\n\tKeyboard = 1,\n\tMouse = 2,\n\tCommand = 3\n}\n\nexport enum TextDocumentChangeReason {\n\tUndo = 1,\n\tRedo = 2,\n}\n\n/**\n * These values match very carefully the values of `TrackedRangeStickiness`\n */\nexport enum DecorationRangeBehavior {\n\t/**\n\t * TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges\n\t */\n\tOpenOpen = 0,\n\t/**\n\t * TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\n\t */\n\tClosedClosed = 1,\n\t/**\n\t * TrackedRangeStickiness.GrowsOnlyWhenTypingBefore\n\t */\n\tOpenClosed = 2,\n\t/**\n\t * TrackedRangeStickiness.GrowsOnlyWhenTypingAfter\n\t */\n\tClosedOpen = 3\n}\n\nexport namespace TextEditorSelectionChangeKind {\n\texport function fromValue(s: string | undefined) {\n\t\tswitch (s) {\n\t\t\tcase 'keyboard': return TextEditorSelectionChangeKind.Keyboard;\n\t\t\tcase 'mouse': return TextEditorSelectionChangeKind.Mouse;\n\t\t\tcase 'api': return TextEditorSelectionChangeKind.Command;\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\n@es5ClassCompat\nexport class DocumentLink {\n\n\trange: Range;\n\n\ttarget?: URI;\n\n\ttooltip?: string;\n\n\tconstructor(range: Range, target: URI | undefined) {\n\t\tif (target && !(URI.isUri(target))) {\n\t\t\tthrow illegalArgument('target');\n\t\t}\n\t\tif (!Range.isRange(range) || range.isEmpty) {\n\t\t\tthrow illegalArgument('range');\n\t\t}\n\t\tthis.range = range;\n\t\tthis.target = target;\n\t}\n}\n\n@es5ClassCompat\nexport class Color {\n\treadonly red: number;\n\treadonly green: number;\n\treadonly blue: number;\n\treadonly alpha: number;\n\n\tconstructor(red: number, green: number, blue: number, alpha: number) {\n\t\tthis.red = red;\n\t\tthis.green = green;\n\t\tthis.blue = blue;\n\t\tthis.alpha = alpha;\n\t}\n}\n\nexport type IColorFormat = string | { opaque: string; transparent: string };\n\n@es5ClassCompat\nexport class ColorInformation {\n\trange: Range;\n\n\tcolor: Color;\n\n\tconstructor(range: Range, color: Color) {\n\t\tif (color && !(color instanceof Color)) {\n\t\t\tthrow illegalArgument('color');\n\t\t}\n\t\tif (!Range.isRange(range) || range.isEmpty) {\n\t\t\tthrow illegalArgument('range');\n\t\t}\n\t\tthis.range = range;\n\t\tthis.color = color;\n\t}\n}\n\n@es5ClassCompat\nexport class ColorPresentation {\n\tlabel: string;\n\ttextEdit?: TextEdit;\n\tadditionalTextEdits?: TextEdit[];\n\n\tconstructor(label: string) {\n\t\tif (!label || typeof label !== 'string') {\n\t\t\tthrow illegalArgument('label');\n\t\t}\n\t\tthis.label = label;\n\t}\n}\n\nexport enum ColorFormat {\n\tRGB = 0,\n\tHEX = 1,\n\tHSL = 2\n}\n\nexport enum SourceControlInputBoxValidationType {\n\tError = 0,\n\tWarning = 1,\n\tInformation = 2\n}\n\nexport enum TerminalExitReason {\n\tUnknown = 0,\n\tShutdown = 1,\n\tProcess = 2,\n\tUser = 3,\n\tExtension = 4\n}\n\nexport class TerminalLink implements vscode.TerminalLink {\n\tconstructor(\n\t\tpublic startIndex: number,\n\t\tpublic length: number,\n\t\tpublic tooltip?: string\n\t) {\n\t\tif (typeof startIndex !== 'number' || startIndex < 0) {\n\t\t\tthrow illegalArgument('startIndex');\n\t\t}\n\t\tif (typeof length !== 'number' || length < 1) {\n\t\t\tthrow illegalArgument('length');\n\t\t}\n\t\tif (tooltip !== undefined && typeof tooltip !== 'string') {\n\t\t\tthrow illegalArgument('tooltip');\n\t\t}\n\t}\n}\n\nexport enum TerminalLocation {\n\tPanel = 1,\n\tEditor = 2,\n}\n\nexport class TerminalProfile implements vscode.TerminalProfile {\n\tconstructor(\n\t\tpublic options: vscode.TerminalOptions | vscode.ExtensionTerminalOptions\n\t) {\n\t\tif (typeof options !== 'object') {\n\t\t\tthrow illegalArgument('options');\n\t\t}\n\t}\n}\n\nexport enum TaskRevealKind {\n\tAlways = 1,\n\n\tSilent = 2,\n\n\tNever = 3\n}\n\nexport enum TaskPanelKind {\n\tShared = 1,\n\n\tDedicated = 2,\n\n\tNew = 3\n}\n\n@es5ClassCompat\nexport class TaskGroup implements vscode.TaskGroup {\n\n\tisDefault: boolean | undefined;\n\tprivate _id: string;\n\n\tpublic static Clean: TaskGroup = new TaskGroup('clean', 'Clean');\n\n\tpublic static Build: TaskGroup = new TaskGroup('build', 'Build');\n\n\tpublic static Rebuild: TaskGroup = new TaskGroup('rebuild', 'Rebuild');\n\n\tpublic static Test: TaskGroup = new TaskGroup('test', 'Test');\n\n\tpublic static from(value: string) {\n\t\tswitch (value) {\n\t\t\tcase 'clean':\n\t\t\t\treturn TaskGroup.Clean;\n\t\t\tcase 'build':\n\t\t\t\treturn TaskGroup.Build;\n\t\t\tcase 'rebuild':\n\t\t\t\treturn TaskGroup.Rebuild;\n\t\t\tcase 'test':\n\t\t\t\treturn TaskGroup.Test;\n\t\t\tdefault:\n\t\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tconstructor(id: string, public readonly label: string) {\n\t\tif (typeof id !== 'string') {\n\t\t\tthrow illegalArgument('name');\n\t\t}\n\t\tif (typeof label !== 'string') {\n\t\t\tthrow illegalArgument('name');\n\t\t}\n\t\tthis._id = id;\n\t}\n\n\tget id(): string {\n\t\treturn this._id;\n\t}\n}\n\nfunction computeTaskExecutionId(values: string[]): string {\n\tlet id: string = '';\n\tfor (let i = 0; i < values.length; i++) {\n\t\tid += values[i].replace(/,/g, ',,') + ',';\n\t}\n\treturn id;\n}\n\n@es5ClassCompat\nexport class ProcessExecution implements vscode.ProcessExecution {\n\n\tprivate _process: string;\n\tprivate _args: string[];\n\tprivate _options: vscode.ProcessExecutionOptions | undefined;\n\n\tconstructor(process: string, options?: vscode.ProcessExecutionOptions);\n\tconstructor(process: string, args: string[], options?: vscode.ProcessExecutionOptions);\n\tconstructor(process: string, varg1?: string[] | vscode.ProcessExecutionOptions, varg2?: vscode.ProcessExecutionOptions) {\n\t\tif (typeof process !== 'string') {\n\t\t\tthrow illegalArgument('process');\n\t\t}\n\t\tthis._args = [];\n\t\tthis._process = process;\n\t\tif (varg1 !== undefined) {\n\t\t\tif (Array.isArray(varg1)) {\n\t\t\t\tthis._args = varg1;\n\t\t\t\tthis._options = varg2;\n\t\t\t} else {\n\t\t\t\tthis._options = varg1;\n\t\t\t}\n\t\t}\n\t}\n\n\n\tget process(): string {\n\t\treturn this._process;\n\t}\n\n\tset process(value: string) {\n\t\tif (typeof value !== 'string') {\n\t\t\tthrow illegalArgument('process');\n\t\t}\n\t\tthis._process = value;\n\t}\n\n\tget args(): string[] {\n\t\treturn this._args;\n\t}\n\n\tset args(value: string[]) {\n\t\tif (!Array.isArray(value)) {\n\t\t\tvalue = [];\n\t\t}\n\t\tthis._args = value;\n\t}\n\n\tget options(): vscode.ProcessExecutionOptions | undefined {\n\t\treturn this._options;\n\t}\n\n\tset options(value: vscode.ProcessExecutionOptions | undefined) {\n\t\tthis._options = value;\n\t}\n\n\tpublic computeId(): string {\n\t\tconst props: string[] = [];\n\t\tprops.push('process');\n\t\tif (this._process !== undefined) {\n\t\t\tprops.push(this._process);\n\t\t}\n\t\tif (this._args && this._args.length > 0) {\n\t\t\tfor (const arg of this._args) {\n\t\t\t\tprops.push(arg);\n\t\t\t}\n\t\t}\n\t\treturn computeTaskExecutionId(props);\n\t}\n}\n\n@es5ClassCompat\nexport class ShellExecution implements vscode.ShellExecution {\n\n\tprivate _commandLine: string | undefined;\n\tprivate _command: string | vscode.ShellQuotedString | undefined;\n\tprivate _args: (string | vscode.ShellQuotedString)[] = [];\n\tprivate _options: vscode.ShellExecutionOptions | undefined;\n\n\tconstructor(commandLine: string, options?: vscode.ShellExecutionOptions);\n\tconstructor(command: string | vscode.ShellQuotedString, args: (string | vscode.ShellQuotedString)[], options?: vscode.ShellExecutionOptions);\n\tconstructor(arg0: string | vscode.ShellQuotedString, arg1?: vscode.ShellExecutionOptions | (string | vscode.ShellQuotedString)[], arg2?: vscode.ShellExecutionOptions) {\n\t\tif (Array.isArray(arg1)) {\n\t\t\tif (!arg0) {\n\t\t\t\tthrow illegalArgument('command can\\'t be undefined or null');\n\t\t\t}\n\t\t\tif (typeof arg0 !== 'string' && typeof arg0.value !== 'string') {\n\t\t\t\tthrow illegalArgument('command');\n\t\t\t}\n\t\t\tthis._command = arg0;\n\t\t\tthis._args = arg1 as (string | vscode.ShellQuotedString)[];\n\t\t\tthis._options = arg2;\n\t\t} else {\n\t\t\tif (typeof arg0 !== 'string') {\n\t\t\t\tthrow illegalArgument('commandLine');\n\t\t\t}\n\t\t\tthis._commandLine = arg0;\n\t\t\tthis._options = arg1;\n\t\t}\n\t}\n\n\tget commandLine(): string | undefined {\n\t\treturn this._commandLine;\n\t}\n\n\tset commandLine(value: string | undefined) {\n\t\tif (typeof value !== 'string') {\n\t\t\tthrow illegalArgument('commandLine');\n\t\t}\n\t\tthis._commandLine = value;\n\t}\n\n\tget command(): string | vscode.ShellQuotedString {\n\t\treturn this._command ? this._command : '';\n\t}\n\n\tset command(value: string | vscode.ShellQuotedString) {\n\t\tif (typeof value !== 'string' && typeof value.value !== 'string') {\n\t\t\tthrow illegalArgument('command');\n\t\t}\n\t\tthis._command = value;\n\t}\n\n\tget args(): (string | vscode.ShellQuotedString)[] {\n\t\treturn this._args;\n\t}\n\n\tset args(value: (string | vscode.ShellQuotedString)[]) {\n\t\tthis._args = value || [];\n\t}\n\n\tget options(): vscode.ShellExecutionOptions | undefined {\n\t\treturn this._options;\n\t}\n\n\tset options(value: vscode.ShellExecutionOptions | undefined) {\n\t\tthis._options = value;\n\t}\n\n\tpublic computeId(): string {\n\t\tconst props: string[] = [];\n\t\tprops.push('shell');\n\t\tif (this._commandLine !== undefined) {\n\t\t\tprops.push(this._commandLine);\n\t\t}\n\t\tif (this._command !== undefined) {\n\t\t\tprops.push(typeof this._command === 'string' ? this._command : this._command.value);\n\t\t}\n\t\tif (this._args && this._args.length > 0) {\n\t\t\tfor (const arg of this._args) {\n\t\t\t\tprops.push(typeof arg === 'string' ? arg : arg.value);\n\t\t\t}\n\t\t}\n\t\treturn computeTaskExecutionId(props);\n\t}\n}\n\nexport enum ShellQuoting {\n\tEscape = 1,\n\tStrong = 2,\n\tWeak = 3\n}\n\nexport enum TaskScope {\n\tGlobal = 1,\n\tWorkspace = 2\n}\n\nexport class CustomExecution implements vscode.CustomExecution {\n\tprivate _callback: (resolvedDefinition: vscode.TaskDefinition) => Thenable<vscode.Pseudoterminal>;\n\tconstructor(callback: (resolvedDefinition: vscode.TaskDefinition) => Thenable<vscode.Pseudoterminal>) {\n\t\tthis._callback = callback;\n\t}\n\tpublic computeId(): string {\n\t\treturn 'customExecution' + generateUuid();\n\t}\n\n\tpublic set callback(value: (resolvedDefinition: vscode.TaskDefinition) => Thenable<vscode.Pseudoterminal>) {\n\t\tthis._callback = value;\n\t}\n\n\tpublic get callback(): ((resolvedDefinition: vscode.TaskDefinition) => Thenable<vscode.Pseudoterminal>) {\n\t\treturn this._callback;\n\t}\n}\n\n@es5ClassCompat\nexport class Task implements vscode.Task {\n\n\tprivate static ExtensionCallbackType: string = 'customExecution';\n\tprivate static ProcessType: string = 'process';\n\tprivate static ShellType: string = 'shell';\n\tprivate static EmptyType: string = '$empty';\n\n\tprivate __id: string | undefined;\n\tprivate __deprecated: boolean = false;\n\n\tprivate _definition: vscode.TaskDefinition;\n\tprivate _scope: vscode.TaskScope.Global | vscode.TaskScope.Workspace | vscode.WorkspaceFolder | undefined;\n\tprivate _name: string;\n\tprivate _execution: ProcessExecution | ShellExecution | CustomExecution | undefined;\n\tprivate _problemMatchers: string[];\n\tprivate _hasDefinedMatchers: boolean;\n\tprivate _isBackground: boolean;\n\tprivate _source: string;\n\tprivate _group: TaskGroup | undefined;\n\tprivate _presentationOptions: vscode.TaskPresentationOptions;\n\tprivate _runOptions: vscode.RunOptions;\n\tprivate _detail: string | undefined;\n\n\tconstructor(definition: vscode.TaskDefinition, name: string, source: string, execution?: ProcessExecution | ShellExecution | CustomExecution, problemMatchers?: string | string[]);\n\tconstructor(definition: vscode.TaskDefinition, scope: vscode.TaskScope.Global | vscode.TaskScope.Workspace | vscode.WorkspaceFolder, name: string, source: string, execution?: ProcessExecution | ShellExecution | CustomExecution, problemMatchers?: string | string[]);\n\tconstructor(definition: vscode.TaskDefinition, arg2: string | (vscode.TaskScope.Global | vscode.TaskScope.Workspace) | vscode.WorkspaceFolder, arg3: any, arg4?: any, arg5?: any, arg6?: any) {\n\t\tthis._definition = this.definition = definition;\n\t\tlet problemMatchers: string | string[];\n\t\tif (typeof arg2 === 'string') {\n\t\t\tthis._name = this.name = arg2;\n\t\t\tthis._source = this.source = arg3;\n\t\t\tthis.execution = arg4;\n\t\t\tproblemMatchers = arg5;\n\t\t\tthis.__deprecated = true;\n\t\t} else if (arg2 === TaskScope.Global || arg2 === TaskScope.Workspace) {\n\t\t\tthis.target = arg2;\n\t\t\tthis._name = this.name = arg3;\n\t\t\tthis._source = this.source = arg4;\n\t\t\tthis.execution = arg5;\n\t\t\tproblemMatchers = arg6;\n\t\t} else {\n\t\t\tthis.target = arg2;\n\t\t\tthis._name = this.name = arg3;\n\t\t\tthis._source = this.source = arg4;\n\t\t\tthis.execution = arg5;\n\t\t\tproblemMatchers = arg6;\n\t\t}\n\t\tif (typeof problemMatchers === 'string') {\n\t\t\tthis._problemMatchers = [problemMatchers];\n\t\t\tthis._hasDefinedMatchers = true;\n\t\t} else if (Array.isArray(problemMatchers)) {\n\t\t\tthis._problemMatchers = problemMatchers;\n\t\t\tthis._hasDefinedMatchers = true;\n\t\t} else {\n\t\t\tthis._problemMatchers = [];\n\t\t\tthis._hasDefinedMatchers = false;\n\t\t}\n\t\tthis._isBackground = false;\n\t\tthis._presentationOptions = Object.create(null);\n\t\tthis._runOptions = Object.create(null);\n\t}\n\n\tget _id(): string | undefined {\n\t\treturn this.__id;\n\t}\n\n\tset _id(value: string | undefined) {\n\t\tthis.__id = value;\n\t}\n\n\tget _deprecated(): boolean {\n\t\treturn this.__deprecated;\n\t}\n\n\tprivate clear(): void {\n\t\tif (this.__id === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tthis.__id = undefined;\n\t\tthis._scope = undefined;\n\t\tthis.computeDefinitionBasedOnExecution();\n\t}\n\n\tprivate computeDefinitionBasedOnExecution(): void {\n\t\tif (this._execution instanceof ProcessExecution) {\n\t\t\tthis._definition = {\n\t\t\t\ttype: Task.ProcessType,\n\t\t\t\tid: this._execution.computeId()\n\t\t\t};\n\t\t} else if (this._execution instanceof ShellExecution) {\n\t\t\tthis._definition = {\n\t\t\t\ttype: Task.ShellType,\n\t\t\t\tid: this._execution.computeId()\n\t\t\t};\n\t\t} else if (this._execution instanceof CustomExecution) {\n\t\t\tthis._definition = {\n\t\t\t\ttype: Task.ExtensionCallbackType,\n\t\t\t\tid: this._execution.computeId()\n\t\t\t};\n\t\t} else {\n\t\t\tthis._definition = {\n\t\t\t\ttype: Task.EmptyType,\n\t\t\t\tid: generateUuid()\n\t\t\t};\n\t\t}\n\t}\n\n\tget definition(): vscode.TaskDefinition {\n\t\treturn this._definition;\n\t}\n\n\tset definition(value: vscode.TaskDefinition) {\n\t\tif (value === undefined || value === null) {\n\t\t\tthrow illegalArgument('Kind can\\'t be undefined or null');\n\t\t}\n\t\tthis.clear();\n\t\tthis._definition = value;\n\t}\n\n\tget scope(): vscode.TaskScope.Global | vscode.TaskScope.Workspace | vscode.WorkspaceFolder | undefined {\n\t\treturn this._scope;\n\t}\n\n\tset target(value: vscode.TaskScope.Global | vscode.TaskScope.Workspace | vscode.WorkspaceFolder) {\n\t\tthis.clear();\n\t\tthis._scope = value;\n\t}\n\n\tget name(): string {\n\t\treturn this._name;\n\t}\n\n\tset name(value: string) {\n\t\tif (typeof value !== 'string') {\n\t\t\tthrow illegalArgument('name');\n\t\t}\n\t\tthis.clear();\n\t\tthis._name = value;\n\t}\n\n\tget execution(): ProcessExecution | ShellExecution | CustomExecution | undefined {\n\t\treturn this._execution;\n\t}\n\n\tset execution(value: ProcessExecution | ShellExecution | CustomExecution | undefined) {\n\t\tif (value === null) {\n\t\t\tvalue = undefined;\n\t\t}\n\t\tthis.clear();\n\t\tthis._execution = value;\n\t\tconst type = this._definition.type;\n\t\tif (Task.EmptyType === type || Task.ProcessType === type || Task.ShellType === type || Task.ExtensionCallbackType === type) {\n\t\t\tthis.computeDefinitionBasedOnExecution();\n\t\t}\n\t}\n\n\tget problemMatchers(): string[] {\n\t\treturn this._problemMatchers;\n\t}\n\n\tset problemMatchers(value: string[]) {\n\t\tif (!Array.isArray(value)) {\n\t\t\tthis.clear();\n\t\t\tthis._problemMatchers = [];\n\t\t\tthis._hasDefinedMatchers = false;\n\t\t\treturn;\n\t\t} else {\n\t\t\tthis.clear();\n\t\t\tthis._problemMatchers = value;\n\t\t\tthis._hasDefinedMatchers = true;\n\t\t}\n\t}\n\n\tget hasDefinedMatchers(): boolean {\n\t\treturn this._hasDefinedMatchers;\n\t}\n\n\tget isBackground(): boolean {\n\t\treturn this._isBackground;\n\t}\n\n\tset isBackground(value: boolean) {\n\t\tif (value !== true && value !== false) {\n\t\t\tvalue = false;\n\t\t}\n\t\tthis.clear();\n\t\tthis._isBackground = value;\n\t}\n\n\tget source(): string {\n\t\treturn this._source;\n\t}\n\n\tset source(value: string) {\n\t\tif (typeof value !== 'string' || value.length === 0) {\n\t\t\tthrow illegalArgument('source must be a string of length > 0');\n\t\t}\n\t\tthis.clear();\n\t\tthis._source = value;\n\t}\n\n\tget group(): TaskGroup | undefined {\n\t\treturn this._group;\n\t}\n\n\tset group(value: TaskGroup | undefined) {\n\t\tif (value === null) {\n\t\t\tvalue = undefined;\n\t\t}\n\t\tthis.clear();\n\t\tthis._group = value;\n\t}\n\n\tget detail(): string | undefined {\n\t\treturn this._detail;\n\t}\n\n\tset detail(value: string | undefined) {\n\t\tif (value === null) {\n\t\t\tvalue = undefined;\n\t\t}\n\t\tthis._detail = value;\n\t}\n\n\tget presentationOptions(): vscode.TaskPresentationOptions {\n\t\treturn this._presentationOptions;\n\t}\n\n\tset presentationOptions(value: vscode.TaskPresentationOptions) {\n\t\tif (value === null || value === undefined) {\n\t\t\tvalue = Object.create(null);\n\t\t}\n\t\tthis.clear();\n\t\tthis._presentationOptions = value;\n\t}\n\n\tget runOptions(): vscode.RunOptions {\n\t\treturn this._runOptions;\n\t}\n\n\tset runOptions(value: vscode.RunOptions) {\n\t\tif (value === null || value === undefined) {\n\t\t\tvalue = Object.create(null);\n\t\t}\n\t\tthis.clear();\n\t\tthis._runOptions = value;\n\t}\n}\n\n\nexport enum ProgressLocation {\n\tSourceControl = 1,\n\tWindow = 10,\n\tNotification = 15\n}\n\n@es5ClassCompat\nexport class TreeItem {\n\n\tlabel?: string | vscode.TreeItemLabel;\n\tresourceUri?: URI;\n\ticonPath?: string | URI | { light: string | URI; dark: string | URI } | ThemeIcon;\n\tcommand?: vscode.Command;\n\tcontextValue?: string;\n\ttooltip?: string | vscode.MarkdownString;\n\n\tstatic isTreeItem(thing: any): thing is TreeItem {\n\t\tif (thing instanceof TreeItem) {\n\t\t\treturn true;\n\t\t}\n\t\tconst treeItemThing = thing as vscode.TreeItem;\n\t\tif (treeItemThing.label !== undefined && !isString(treeItemThing.label) && !(treeItemThing.label.label)) {\n\t\t\tconsole.log('INVALID tree item, invalid label', treeItemThing.label);\n\t\t\treturn false;\n\t\t}\n\t\tif ((treeItemThing.id !== undefined) && !isString(treeItemThing.id)) {\n\t\t\tconsole.log('INVALID tree item, invalid id', treeItemThing.id);\n\t\t\treturn false;\n\t\t}\n\t\tif ((treeItemThing.iconPath !== undefined) && !isString(treeItemThing.iconPath) && !URI.isUri(treeItemThing.iconPath) && !isString((treeItemThing.iconPath as vscode.ThemeIcon).id)) {\n\t\t\tconsole.log('INVALID tree item, invalid iconPath', treeItemThing.iconPath);\n\t\t\treturn false;\n\t\t}\n\t\tif ((treeItemThing.description !== undefined) && !isString(treeItemThing.description) && (typeof treeItemThing.description !== 'boolean')) {\n\t\t\tconsole.log('INVALID tree item, invalid description', treeItemThing.description);\n\t\t\treturn false;\n\t\t}\n\t\tif ((treeItemThing.resourceUri !== undefined) && !URI.isUri(treeItemThing.resourceUri)) {\n\t\t\tconsole.log('INVALID tree item, invalid resourceUri', treeItemThing.resourceUri);\n\t\t\treturn false;\n\t\t}\n\t\tif ((treeItemThing.tooltip !== undefined) && !isString(treeItemThing.tooltip) && !(treeItemThing.tooltip instanceof MarkdownString)) {\n\t\t\tconsole.log('INVALID tree item, invalid tooltip', treeItemThing.tooltip);\n\t\t\treturn false;\n\t\t}\n\t\tif ((treeItemThing.command !== undefined) && !treeItemThing.command.command) {\n\t\t\tconsole.log('INVALID tree item, invalid command', treeItemThing.command);\n\t\t\treturn false;\n\t\t}\n\t\tif ((treeItemThing.collapsibleState !== undefined) && (treeItemThing.collapsibleState < TreeItemCollapsibleState.None) && (treeItemThing.collapsibleState > TreeItemCollapsibleState.Expanded)) {\n\t\t\tconsole.log('INVALID tree item, invalid collapsibleState', treeItemThing.collapsibleState);\n\t\t\treturn false;\n\t\t}\n\t\tif ((treeItemThing.contextValue !== undefined) && !isString(treeItemThing.contextValue)) {\n\t\t\tconsole.log('INVALID tree item, invalid contextValue', treeItemThing.contextValue);\n\t\t\treturn false;\n\t\t}\n\t\tif ((treeItemThing.accessibilityInformation !== undefined) && !treeItemThing.accessibilityInformation.label) {\n\t\t\tconsole.log('INVALID tree item, invalid accessibilityInformation', treeItemThing.accessibilityInformation);\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tconstructor(label: string | vscode.TreeItemLabel, collapsibleState?: vscode.TreeItemCollapsibleState);\n\tconstructor(resourceUri: URI, collapsibleState?: vscode.TreeItemCollapsibleState);\n\tconstructor(arg1: string | vscode.TreeItemLabel | URI, public collapsibleState: vscode.TreeItemCollapsibleState = TreeItemCollapsibleState.None) {\n\t\tif (URI.isUri(arg1)) {\n\t\t\tthis.resourceUri = arg1;\n\t\t} else {\n\t\t\tthis.label = arg1;\n\t\t}\n\t}\n\n}\n\nexport enum TreeItemCollapsibleState {\n\tNone = 0,\n\tCollapsed = 1,\n\tExpanded = 2\n}\n\n@es5ClassCompat\nexport class DataTransferItem {\n\n\tasync asString(): Promise<string> {\n\t\treturn typeof this.value === 'string' ? this.value : JSON.stringify(this.value);\n\t}\n\n\tasFile(): undefined | vscode.DataTransferFile {\n\t\treturn undefined;\n\t}\n\n\tconstructor(public readonly value: any) { }\n}\n\n@es5ClassCompat\nexport class DataTransfer implements vscode.DataTransfer {\n\t#items = new Map<string, DataTransferItem[]>();\n\n\tconstructor(init?: Iterable<readonly [string, DataTransferItem]>) {\n\t\tfor (const [mime, item] of init ?? []) {\n\t\t\tconst existing = this.#items.get(mime);\n\t\t\tif (existing) {\n\t\t\t\texisting.push(item);\n\t\t\t} else {\n\t\t\t\tthis.#items.set(mime, [item]);\n\t\t\t}\n\t\t}\n\t}\n\n\tget(mimeType: string): DataTransferItem | undefined {\n\t\treturn this.#items.get(mimeType)?.[0];\n\t}\n\n\tset(mimeType: string, value: DataTransferItem): void {\n\t\t// This intentionally overwrites all entries for a given mimetype.\n\t\t// This is similar to how the DOM DataTransfer type works\n\t\tthis.#items.set(mimeType, [value]);\n\t}\n\n\tforEach(callbackfn: (value: DataTransferItem, key: string, dataTransfer: DataTransfer) => void, thisArg?: unknown): void {\n\t\tfor (const [mime, items] of this.#items) {\n\t\t\tfor (const item of items) {\n\t\t\t\tcallbackfn.call(thisArg, item, mime, this);\n\t\t\t}\n\t\t}\n\t}\n\n\t*[Symbol.iterator](): IterableIterator<[mimeType: string, item: vscode.DataTransferItem]> {\n\t\tfor (const [mime, items] of this.#items) {\n\t\t\tfor (const item of items) {\n\t\t\t\tyield [mime, item];\n\t\t\t}\n\t\t}\n\t}\n}\n\n@es5ClassCompat\nexport class DocumentDropEdit {\n\tinsertText: string | SnippetString;\n\n\tadditionalEdit?: WorkspaceEdit;\n\n\tconstructor(insertText: string | SnippetString) {\n\t\tthis.insertText = insertText;\n\t}\n}\n\n@es5ClassCompat\nexport class DocumentPasteEdit {\n\tinsertText: string | SnippetString;\n\n\tadditionalEdit?: WorkspaceEdit;\n\n\tconstructor(insertText: string | SnippetString) {\n\t\tthis.insertText = insertText;\n\t}\n}\n\n@es5ClassCompat\nexport class ThemeIcon {\n\n\tstatic File: ThemeIcon;\n\tstatic Folder: ThemeIcon;\n\n\treadonly id: string;\n\treadonly color?: ThemeColor;\n\n\tconstructor(id: string, color?: ThemeColor) {\n\t\tthis.id = id;\n\t\tthis.color = color;\n\t}\n}\nThemeIcon.File = new ThemeIcon('file');\nThemeIcon.Folder = new ThemeIcon('folder');\n\n\n@es5ClassCompat\nexport class ThemeColor {\n\tid: string;\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n}\n\nexport enum ConfigurationTarget {\n\tGlobal = 1,\n\n\tWorkspace = 2,\n\n\tWorkspaceFolder = 3\n}\n\n@es5ClassCompat\nexport class RelativePattern implements IRelativePattern {\n\n\tpattern: string;\n\n\tprivate _base!: string;\n\tget base(): string {\n\t\treturn this._base;\n\t}\n\tset base(base: string) {\n\t\tthis._base = base;\n\t\tthis._baseUri = URI.file(base);\n\t}\n\n\tprivate _baseUri!: URI;\n\tget baseUri(): URI {\n\t\treturn this._baseUri;\n\t}\n\tset baseUri(baseUri: URI) {\n\t\tthis._baseUri = baseUri;\n\t\tthis._base = baseUri.fsPath;\n\t}\n\n\tconstructor(base: vscode.WorkspaceFolder | URI | string, pattern: string) {\n\t\tif (typeof base !== 'string') {\n\t\t\tif (!base || !URI.isUri(base) && !URI.isUri(base.uri)) {\n\t\t\t\tthrow illegalArgument('base');\n\t\t\t}\n\t\t}\n\n\t\tif (typeof pattern !== 'string') {\n\t\t\tthrow illegalArgument('pattern');\n\t\t}\n\n\t\tif (typeof base === 'string') {\n\t\t\tthis.baseUri = URI.file(base);\n\t\t} else if (URI.isUri(base)) {\n\t\t\tthis.baseUri = base;\n\t\t} else {\n\t\t\tthis.baseUri = base.uri;\n\t\t}\n\n\t\tthis.pattern = pattern;\n\t}\n\n\ttoJSON(): IRelativePatternDto {\n\t\treturn {\n\t\t\tpattern: this.pattern,\n\t\t\tbase: this.base,\n\t\t\tbaseUri: this.baseUri.toJSON()\n\t\t};\n\t}\n}\n\n@es5ClassCompat\nexport class Breakpoint {\n\n\tprivate _id: string | undefined;\n\n\treadonly enabled: boolean;\n\treadonly condition?: string;\n\treadonly hitCondition?: string;\n\treadonly logMessage?: string;\n\n\tprotected constructor(enabled?: boolean, condition?: string, hitCondition?: string, logMessage?: string) {\n\t\tthis.enabled = typeof enabled === 'boolean' ? enabled : true;\n\t\tif (typeof condition === 'string') {\n\t\t\tthis.condition = condition;\n\t\t}\n\t\tif (typeof hitCondition === 'string') {\n\t\t\tthis.hitCondition = hitCondition;\n\t\t}\n\t\tif (typeof logMessage === 'string') {\n\t\t\tthis.logMessage = logMessage;\n\t\t}\n\t}\n\n\tget id(): string {\n\t\tif (!this._id) {\n\t\t\tthis._id = generateUuid();\n\t\t}\n\t\treturn this._id;\n\t}\n}\n\n@es5ClassCompat\nexport class SourceBreakpoint extends Breakpoint {\n\treadonly location: Location;\n\n\tconstructor(location: Location, enabled?: boolean, condition?: string, hitCondition?: string, logMessage?: string) {\n\t\tsuper(enabled, condition, hitCondition, logMessage);\n\t\tif (location === null) {\n\t\t\tthrow illegalArgument('location');\n\t\t}\n\t\tthis.location = location;\n\t}\n}\n\n@es5ClassCompat\nexport class FunctionBreakpoint extends Breakpoint {\n\treadonly functionName: string;\n\n\tconstructor(functionName: string, enabled?: boolean, condition?: string, hitCondition?: string, logMessage?: string) {\n\t\tsuper(enabled, condition, hitCondition, logMessage);\n\t\tthis.functionName = functionName;\n\t}\n}\n\n@es5ClassCompat\nexport class DataBreakpoint extends Breakpoint {\n\treadonly label: string;\n\treadonly dataId: string;\n\treadonly canPersist: boolean;\n\n\tconstructor(label: string, dataId: string, canPersist: boolean, enabled?: boolean, condition?: string, hitCondition?: string, logMessage?: string) {\n\t\tsuper(enabled, condition, hitCondition, logMessage);\n\t\tif (!dataId) {\n\t\t\tthrow illegalArgument('dataId');\n\t\t}\n\t\tthis.label = label;\n\t\tthis.dataId = dataId;\n\t\tthis.canPersist = canPersist;\n\t}\n}\n\n\n@es5ClassCompat\nexport class DebugAdapterExecutable implements vscode.DebugAdapterExecutable {\n\treadonly command: string;\n\treadonly args: string[];\n\treadonly options?: vscode.DebugAdapterExecutableOptions;\n\n\tconstructor(command: string, args: string[], options?: vscode.DebugAdapterExecutableOptions) {\n\t\tthis.command = command;\n\t\tthis.args = args || [];\n\t\tthis.options = options;\n\t}\n}\n\n@es5ClassCompat\nexport class DebugAdapterServer implements vscode.DebugAdapterServer {\n\treadonly port: number;\n\treadonly host?: string;\n\n\tconstructor(port: number, host?: string) {\n\t\tthis.port = port;\n\t\tthis.host = host;\n\t}\n}\n\n@es5ClassCompat\nexport class DebugAdapterNamedPipeServer implements vscode.DebugAdapterNamedPipeServer {\n\tconstructor(public readonly path: string) {\n\t}\n}\n\n@es5ClassCompat\nexport class DebugAdapterInlineImplementation implements vscode.DebugAdapterInlineImplementation {\n\treadonly implementation: vscode.DebugAdapter;\n\n\tconstructor(impl: vscode.DebugAdapter) {\n\t\tthis.implementation = impl;\n\t}\n}\n\n@es5ClassCompat\nexport class EvaluatableExpression implements vscode.EvaluatableExpression {\n\treadonly range: vscode.Range;\n\treadonly expression?: string;\n\n\tconstructor(range: vscode.Range, expression?: string) {\n\t\tthis.range = range;\n\t\tthis.expression = expression;\n\t}\n}\n\nexport enum InlineCompletionTriggerKind {\n\tInvoke = 0,\n\tAutomatic = 1,\n}\n\nexport enum InlineCompletionTriggerKindNew {\n\tInvoke = 0,\n\tAutomatic = 1,\n}\n\n@es5ClassCompat\nexport class InlineValueText implements vscode.InlineValueText {\n\treadonly range: Range;\n\treadonly text: string;\n\n\tconstructor(range: Range, text: string) {\n\t\tthis.range = range;\n\t\tthis.text = text;\n\t}\n}\n\n@es5ClassCompat\nexport class InlineValueVariableLookup implements vscode.InlineValueVariableLookup {\n\treadonly range: Range;\n\treadonly variableName?: string;\n\treadonly caseSensitiveLookup: boolean;\n\n\tconstructor(range: Range, variableName?: string, caseSensitiveLookup: boolean = true) {\n\t\tthis.range = range;\n\t\tthis.variableName = variableName;\n\t\tthis.caseSensitiveLookup = caseSensitiveLookup;\n\t}\n}\n\n@es5ClassCompat\nexport class InlineValueEvaluatableExpression implements vscode.InlineValueEvaluatableExpression {\n\treadonly range: Range;\n\treadonly expression?: string;\n\n\tconstructor(range: Range, expression?: string) {\n\t\tthis.range = range;\n\t\tthis.expression = expression;\n\t}\n}\n\n@es5ClassCompat\nexport class InlineValueContext implements vscode.InlineValueContext {\n\n\treadonly frameId: number;\n\treadonly stoppedLocation: vscode.Range;\n\n\tconstructor(frameId: number, range: vscode.Range) {\n\t\tthis.frameId = frameId;\n\t\tthis.stoppedLocation = range;\n\t}\n}\n\n//#region file api\n\nexport enum FileChangeType {\n\tChanged = 1,\n\tCreated = 2,\n\tDeleted = 3,\n}\n\n@es5ClassCompat\nexport class FileSystemError extends Error {\n\n\tstatic FileExists(messageOrUri?: string | URI): FileSystemError {\n\t\treturn new FileSystemError(messageOrUri, FileSystemProviderErrorCode.FileExists, FileSystemError.FileExists);\n\t}\n\tstatic FileNotFound(messageOrUri?: string | URI): FileSystemError {\n\t\treturn new FileSystemError(messageOrUri, FileSystemProviderErrorCode.FileNotFound, FileSystemError.FileNotFound);\n\t}\n\tstatic FileNotADirectory(messageOrUri?: string | URI): FileSystemError {\n\t\treturn new FileSystemError(messageOrUri, FileSystemProviderErrorCode.FileNotADirectory, FileSystemError.FileNotADirectory);\n\t}\n\tstatic FileIsADirectory(messageOrUri?: string | URI): FileSystemError {\n\t\treturn new FileSystemError(messageOrUri, FileSystemProviderErrorCode.FileIsADirectory, FileSystemError.FileIsADirectory);\n\t}\n\tstatic NoPermissions(messageOrUri?: string | URI): FileSystemError {\n\t\treturn new FileSystemError(messageOrUri, FileSystemProviderErrorCode.NoPermissions, FileSystemError.NoPermissions);\n\t}\n\tstatic Unavailable(messageOrUri?: string | URI): FileSystemError {\n\t\treturn new FileSystemError(messageOrUri, FileSystemProviderErrorCode.Unavailable, FileSystemError.Unavailable);\n\t}\n\n\treadonly code: string;\n\n\tconstructor(uriOrMessage?: string | URI, code: FileSystemProviderErrorCode = FileSystemProviderErrorCode.Unknown, terminator?: Function) {\n\t\tsuper(URI.isUri(uriOrMessage) ? uriOrMessage.toString(true) : uriOrMessage);\n\n\t\tthis.code = terminator?.name ?? 'Unknown';\n\n\t\t// mark the error as file system provider error so that\n\t\t// we can extract the error code on the receiving side\n\t\tmarkAsFileSystemProviderError(this, code);\n\n\t\t// workaround when extending builtin objects and when compiling to ES5, see:\n\t\t// https://github.com/microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n\t\tif (typeof (<any>Object).setPrototypeOf === 'function') {\n\t\t\t(<any>Object).setPrototypeOf(this, FileSystemError.prototype);\n\t\t}\n\n\t\tif (typeof Error.captureStackTrace === 'function' && typeof terminator === 'function') {\n\t\t\t// nice stack traces\n\t\t\tError.captureStackTrace(this, terminator);\n\t\t}\n\t}\n}\n\n//#endregion\n\n//#region folding api\n\n@es5ClassCompat\nexport class FoldingRange {\n\n\tstart: number;\n\n\tend: number;\n\n\tkind?: FoldingRangeKind;\n\n\tconstructor(start: number, end: number, kind?: FoldingRangeKind) {\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.kind = kind;\n\t}\n}\n\nexport enum FoldingRangeKind {\n\tComment = 1,\n\tImports = 2,\n\tRegion = 3\n}\n\n//#endregion\n\n//#region Comment\nexport enum CommentThreadCollapsibleState {\n\t/**\n\t * Determines an item is collapsed\n\t */\n\tCollapsed = 0,\n\t/**\n\t * Determines an item is expanded\n\t */\n\tExpanded = 1\n}\n\nexport enum CommentMode {\n\tEditing = 0,\n\tPreview = 1\n}\n\nexport enum CommentThreadState {\n\tUnresolved = 0,\n\tResolved = 1\n}\n\n//#endregion\n\n//#region Semantic Coloring\n\nexport class SemanticTokensLegend {\n\tpublic readonly tokenTypes: string[];\n\tpublic readonly tokenModifiers: string[];\n\n\tconstructor(tokenTypes: string[], tokenModifiers: string[] = []) {\n\t\tthis.tokenTypes = tokenTypes;\n\t\tthis.tokenModifiers = tokenModifiers;\n\t}\n}\n\nfunction isStrArrayOrUndefined(arg: any): arg is string[] | undefined {\n\treturn ((typeof arg === 'undefined') || isStringArray(arg));\n}\n\nexport class SemanticTokensBuilder {\n\n\tprivate _prevLine: number;\n\tprivate _prevChar: number;\n\tprivate _dataIsSortedAndDeltaEncoded: boolean;\n\tprivate _data: number[];\n\tprivate _dataLen: number;\n\tprivate _tokenTypeStrToInt: Map<string, number>;\n\tprivate _tokenModifierStrToInt: Map<string, number>;\n\tprivate _hasLegend: boolean;\n\n\tconstructor(legend?: vscode.SemanticTokensLegend) {\n\t\tthis._prevLine = 0;\n\t\tthis._prevChar = 0;\n\t\tthis._dataIsSortedAndDeltaEncoded = true;\n\t\tthis._data = [];\n\t\tthis._dataLen = 0;\n\t\tthis._tokenTypeStrToInt = new Map<string, number>();\n\t\tthis._tokenModifierStrToInt = new Map<string, number>();\n\t\tthis._hasLegend = false;\n\t\tif (legend) {\n\t\t\tthis._hasLegend = true;\n\t\t\tfor (let i = 0, len = legend.tokenTypes.length; i < len; i++) {\n\t\t\t\tthis._tokenTypeStrToInt.set(legend.tokenTypes[i], i);\n\t\t\t}\n\t\t\tfor (let i = 0, len = legend.tokenModifiers.length; i < len; i++) {\n\t\t\t\tthis._tokenModifierStrToInt.set(legend.tokenModifiers[i], i);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic push(line: number, char: number, length: number, tokenType: number, tokenModifiers?: number): void;\n\tpublic push(range: Range, tokenType: string, tokenModifiers?: string[]): void;\n\tpublic push(arg0: any, arg1: any, arg2: any, arg3?: any, arg4?: any): void {\n\t\tif (typeof arg0 === 'number' && typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'number' && (typeof arg4 === 'number' || typeof arg4 === 'undefined')) {\n\t\t\tif (typeof arg4 === 'undefined') {\n\t\t\t\targ4 = 0;\n\t\t\t}\n\t\t\t// 1st overload\n\t\t\treturn this._pushEncoded(arg0, arg1, arg2, arg3, arg4);\n\t\t}\n\t\tif (Range.isRange(arg0) && typeof arg1 === 'string' && isStrArrayOrUndefined(arg2)) {\n\t\t\t// 2nd overload\n\t\t\treturn this._push(arg0, arg1, arg2);\n\t\t}\n\t\tthrow illegalArgument();\n\t}\n\n\tprivate _push(range: vscode.Range, tokenType: string, tokenModifiers?: string[]): void {\n\t\tif (!this._hasLegend) {\n\t\t\tthrow new Error('Legend must be provided in constructor');\n\t\t}\n\t\tif (range.start.line !== range.end.line) {\n\t\t\tthrow new Error('`range` cannot span multiple lines');\n\t\t}\n\t\tif (!this._tokenTypeStrToInt.has(tokenType)) {\n\t\t\tthrow new Error('`tokenType` is not in the provided legend');\n\t\t}\n\t\tconst line = range.start.line;\n\t\tconst char = range.start.character;\n\t\tconst length = range.end.character - range.start.character;\n\t\tconst nTokenType = this._tokenTypeStrToInt.get(tokenType)!;\n\t\tlet nTokenModifiers = 0;\n\t\tif (tokenModifiers) {\n\t\t\tfor (const tokenModifier of tokenModifiers) {\n\t\t\t\tif (!this._tokenModifierStrToInt.has(tokenModifier)) {\n\t\t\t\t\tthrow new Error('`tokenModifier` is not in the provided legend');\n\t\t\t\t}\n\t\t\t\tconst nTokenModifier = this._tokenModifierStrToInt.get(tokenModifier)!;\n\t\t\t\tnTokenModifiers |= (1 << nTokenModifier) >>> 0;\n\t\t\t}\n\t\t}\n\t\tthis._pushEncoded(line, char, length, nTokenType, nTokenModifiers);\n\t}\n\n\tprivate _pushEncoded(line: number, char: number, length: number, tokenType: number, tokenModifiers: number): void {\n\t\tif (this._dataIsSortedAndDeltaEncoded && (line < this._prevLine || (line === this._prevLine && char < this._prevChar))) {\n\t\t\t// push calls were ordered and are no longer ordered\n\t\t\tthis._dataIsSortedAndDeltaEncoded = false;\n\n\t\t\t// Remove delta encoding from data\n\t\t\tconst tokenCount = (this._data.length / 5) | 0;\n\t\t\tlet prevLine = 0;\n\t\t\tlet prevChar = 0;\n\t\t\tfor (let i = 0; i < tokenCount; i++) {\n\t\t\t\tlet line = this._data[5 * i];\n\t\t\t\tlet char = this._data[5 * i + 1];\n\n\t\t\t\tif (line === 0) {\n\t\t\t\t\t// on the same line as previous token\n\t\t\t\t\tline = prevLine;\n\t\t\t\t\tchar += prevChar;\n\t\t\t\t} else {\n\t\t\t\t\t// on a different line than previous token\n\t\t\t\t\tline += prevLine;\n\t\t\t\t}\n\n\t\t\t\tthis._data[5 * i] = line;\n\t\t\t\tthis._data[5 * i + 1] = char;\n\n\t\t\t\tprevLine = line;\n\t\t\t\tprevChar = char;\n\t\t\t}\n\t\t}\n\n\t\tlet pushLine = line;\n\t\tlet pushChar = char;\n\t\tif (this._dataIsSortedAndDeltaEncoded && this._dataLen > 0) {\n\t\t\tpushLine -= this._prevLine;\n\t\t\tif (pushLine === 0) {\n\t\t\t\tpushChar -= this._prevChar;\n\t\t\t}\n\t\t}\n\n\t\tthis._data[this._dataLen++] = pushLine;\n\t\tthis._data[this._dataLen++] = pushChar;\n\t\tthis._data[this._dataLen++] = length;\n\t\tthis._data[this._dataLen++] = tokenType;\n\t\tthis._data[this._dataLen++] = tokenModifiers;\n\n\t\tthis._prevLine = line;\n\t\tthis._prevChar = char;\n\t}\n\n\tprivate static _sortAndDeltaEncode(data: number[]): Uint32Array {\n\t\tconst pos: number[] = [];\n\t\tconst tokenCount = (data.length / 5) | 0;\n\t\tfor (let i = 0; i < tokenCount; i++) {\n\t\t\tpos[i] = i;\n\t\t}\n\t\tpos.sort((a, b) => {\n\t\t\tconst aLine = data[5 * a];\n\t\t\tconst bLine = data[5 * b];\n\t\t\tif (aLine === bLine) {\n\t\t\t\tconst aChar = data[5 * a + 1];\n\t\t\t\tconst bChar = data[5 * b + 1];\n\t\t\t\treturn aChar - bChar;\n\t\t\t}\n\t\t\treturn aLine - bLine;\n\t\t});\n\t\tconst result = new Uint32Array(data.length);\n\t\tlet prevLine = 0;\n\t\tlet prevChar = 0;\n\t\tfor (let i = 0; i < tokenCount; i++) {\n\t\t\tconst srcOffset = 5 * pos[i];\n\t\t\tconst line = data[srcOffset + 0];\n\t\t\tconst char = data[srcOffset + 1];\n\t\t\tconst length = data[srcOffset + 2];\n\t\t\tconst tokenType = data[srcOffset + 3];\n\t\t\tconst tokenModifiers = data[srcOffset + 4];\n\n\t\t\tconst pushLine = line - prevLine;\n\t\t\tconst pushChar = (pushLine === 0 ? char - prevChar : char);\n\n\t\t\tconst dstOffset = 5 * i;\n\t\t\tresult[dstOffset + 0] = pushLine;\n\t\t\tresult[dstOffset + 1] = pushChar;\n\t\t\tresult[dstOffset + 2] = length;\n\t\t\tresult[dstOffset + 3] = tokenType;\n\t\t\tresult[dstOffset + 4] = tokenModifiers;\n\n\t\t\tprevLine = line;\n\t\t\tprevChar = char;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic build(resultId?: string): SemanticTokens {\n\t\tif (!this._dataIsSortedAndDeltaEncoded) {\n\t\t\treturn new SemanticTokens(SemanticTokensBuilder._sortAndDeltaEncode(this._data), resultId);\n\t\t}\n\t\treturn new SemanticTokens(new Uint32Array(this._data), resultId);\n\t}\n}\n\nexport class SemanticTokens {\n\treadonly resultId: string | undefined;\n\treadonly data: Uint32Array;\n\n\tconstructor(data: Uint32Array, resultId?: string) {\n\t\tthis.resultId = resultId;\n\t\tthis.data = data;\n\t}\n}\n\nexport class SemanticTokensEdit {\n\treadonly start: number;\n\treadonly deleteCount: number;\n\treadonly data: Uint32Array | undefined;\n\n\tconstructor(start: number, deleteCount: number, data?: Uint32Array) {\n\t\tthis.start = start;\n\t\tthis.deleteCount = deleteCount;\n\t\tthis.data = data;\n\t}\n}\n\nexport class SemanticTokensEdits {\n\treadonly resultId: string | undefined;\n\treadonly edits: SemanticTokensEdit[];\n\n\tconstructor(edits: SemanticTokensEdit[], resultId?: string) {\n\t\tthis.resultId = resultId;\n\t\tthis.edits = edits;\n\t}\n}\n\n//#endregion\n\n//#region debug\nexport enum DebugConsoleMode {\n\t/**\n\t * Debug session should have a separate debug console.\n\t */\n\tSeparate = 0,\n\n\t/**\n\t * Debug session should share debug console with its parent session.\n\t * This value has no effect for sessions which do not have a parent session.\n\t */\n\tMergeWithParent = 1\n}\n\n//#endregion\n\n@es5ClassCompat\nexport class QuickInputButtons {\n\n\tstatic readonly Back: vscode.QuickInputButton = { iconPath: new ThemeIcon('arrow-left') };\n\n\tprivate constructor() { }\n}\n\nexport enum QuickPickItemKind {\n\tSeparator = -1,\n\tDefault = 0,\n}\n\nexport enum InputBoxValidationSeverity {\n\tInfo = 1,\n\tWarning = 2,\n\tError = 3\n}\n\nexport enum ExtensionKind {\n\tUI = 1,\n\tWorkspace = 2\n}\n\nexport class FileDecoration {\n\n\tstatic validate(d: FileDecoration): boolean {\n\t\tif (d.badge) {\n\t\t\tlet len = nextCharLength(d.badge, 0);\n\t\t\tif (len < d.badge.length) {\n\t\t\t\tlen += nextCharLength(d.badge, len);\n\t\t\t}\n\t\t\tif (d.badge.length > len) {\n\t\t\t\tthrow new Error(`The 'badge'-property must be undefined or a short character`);\n\t\t\t}\n\t\t}\n\t\tif (!d.color && !d.badge && !d.tooltip) {\n\t\t\tthrow new Error(`The decoration is empty`);\n\t\t}\n\t\treturn true;\n\t}\n\n\tbadge?: string;\n\ttooltip?: string;\n\tcolor?: vscode.ThemeColor;\n\tpropagate?: boolean;\n\n\tconstructor(badge?: string, tooltip?: string, color?: ThemeColor) {\n\t\tthis.badge = badge;\n\t\tthis.tooltip = tooltip;\n\t\tthis.color = color;\n\t}\n}\n\n//#region Theming\n\n@es5ClassCompat\nexport class ColorTheme implements vscode.ColorTheme {\n\tconstructor(public readonly kind: ColorThemeKind) {\n\t}\n}\n\nexport enum ColorThemeKind {\n\tLight = 1,\n\tDark = 2,\n\tHighContrast = 3,\n\tHighContrastLight = 4\n}\n\n//#endregion Theming\n\n//#region Notebook\n\nexport class NotebookRange {\n\tstatic isNotebookRange(thing: any): thing is vscode.NotebookRange {\n\t\tif (thing instanceof NotebookRange) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<NotebookRange>thing).start === 'number'\n\t\t\t&& typeof (<NotebookRange>thing).end === 'number';\n\t}\n\n\tprivate _start: number;\n\tprivate _end: number;\n\n\tget start() {\n\t\treturn this._start;\n\t}\n\n\tget end() {\n\t\treturn this._end;\n\t}\n\n\tget isEmpty(): boolean {\n\t\treturn this._start === this._end;\n\t}\n\n\tconstructor(start: number, end: number) {\n\t\tif (start < 0) {\n\t\t\tthrow illegalArgument('start must be positive');\n\t\t}\n\t\tif (end < 0) {\n\t\t\tthrow illegalArgument('end must be positive');\n\t\t}\n\t\tif (start <= end) {\n\t\t\tthis._start = start;\n\t\t\tthis._end = end;\n\t\t} else {\n\t\t\tthis._start = end;\n\t\t\tthis._end = start;\n\t\t}\n\t}\n\n\twith(change: { start?: number; end?: number }): NotebookRange {\n\t\tlet start = this._start;\n\t\tlet end = this._end;\n\n\t\tif (change.start !== undefined) {\n\t\t\tstart = change.start;\n\t\t}\n\t\tif (change.end !== undefined) {\n\t\t\tend = change.end;\n\t\t}\n\t\tif (start === this._start && end === this._end) {\n\t\t\treturn this;\n\t\t}\n\t\treturn new NotebookRange(start, end);\n\t}\n}\n\nexport class NotebookCellData {\n\n\tstatic validate(data: NotebookCellData): void {\n\t\tif (typeof data.kind !== 'number') {\n\t\t\tthrow new Error('NotebookCellData MUST have \\'kind\\' property');\n\t\t}\n\t\tif (typeof data.value !== 'string') {\n\t\t\tthrow new Error('NotebookCellData MUST have \\'value\\' property');\n\t\t}\n\t\tif (typeof data.languageId !== 'string') {\n\t\t\tthrow new Error('NotebookCellData MUST have \\'languageId\\' property');\n\t\t}\n\t}\n\n\tstatic isNotebookCellDataArray(value: unknown): value is vscode.NotebookCellData[] {\n\t\treturn Array.isArray(value) && (<unknown[]>value).every(elem => NotebookCellData.isNotebookCellData(elem));\n\t}\n\n\tstatic isNotebookCellData(value: unknown): value is vscode.NotebookCellData {\n\t\t// return value instanceof NotebookCellData;\n\t\treturn true;\n\t}\n\n\tkind: NotebookCellKind;\n\tvalue: string;\n\tlanguageId: string;\n\tmime?: string;\n\toutputs?: vscode.NotebookCellOutput[];\n\tmetadata?: Record<string, any>;\n\texecutionSummary?: vscode.NotebookCellExecutionSummary;\n\n\tconstructor(kind: NotebookCellKind, value: string, languageId: string, mime?: string, outputs?: vscode.NotebookCellOutput[], metadata?: Record<string, any>, executionSummary?: vscode.NotebookCellExecutionSummary) {\n\t\tthis.kind = kind;\n\t\tthis.value = value;\n\t\tthis.languageId = languageId;\n\t\tthis.mime = mime;\n\t\tthis.outputs = outputs ?? [];\n\t\tthis.metadata = metadata;\n\t\tthis.executionSummary = executionSummary;\n\n\t\tNotebookCellData.validate(this);\n\t}\n}\n\nexport class NotebookData {\n\n\tcells: NotebookCellData[];\n\tmetadata?: { [key: string]: any };\n\n\tconstructor(cells: NotebookCellData[]) {\n\t\tthis.cells = cells;\n\t}\n}\n\n\nexport class NotebookCellOutputItem {\n\n\tstatic isNotebookCellOutputItem(obj: unknown): obj is vscode.NotebookCellOutputItem {\n\t\tif (obj instanceof NotebookCellOutputItem) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!obj) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<vscode.NotebookCellOutputItem>obj).mime === 'string'\n\t\t\t&& (<vscode.NotebookCellOutputItem>obj).data instanceof Uint8Array;\n\t}\n\n\tstatic error(err: Error | { name: string; message?: string; stack?: string }): NotebookCellOutputItem {\n\t\tconst obj = {\n\t\t\tname: err.name,\n\t\t\tmessage: err.message,\n\t\t\tstack: err.stack\n\t\t};\n\t\treturn NotebookCellOutputItem.json(obj, 'application/vnd.code.notebook.error');\n\t}\n\n\tstatic stdout(value: string): NotebookCellOutputItem {\n\t\treturn NotebookCellOutputItem.text(value, 'application/vnd.code.notebook.stdout');\n\t}\n\n\tstatic stderr(value: string): NotebookCellOutputItem {\n\t\treturn NotebookCellOutputItem.text(value, 'application/vnd.code.notebook.stderr');\n\t}\n\n\tstatic bytes(value: Uint8Array, mime: string = 'application/octet-stream'): NotebookCellOutputItem {\n\t\treturn new NotebookCellOutputItem(value, mime);\n\t}\n\n\tstatic #encoder = new TextEncoder();\n\n\tstatic text(value: string, mime: string = Mimes.text): NotebookCellOutputItem {\n\t\tconst bytes = NotebookCellOutputItem.#encoder.encode(String(value));\n\t\treturn new NotebookCellOutputItem(bytes, mime);\n\t}\n\n\tstatic json(value: any, mime: string = 'text/x-json'): NotebookCellOutputItem {\n\t\tconst rawStr = JSON.stringify(value, undefined, '\\t');\n\t\treturn NotebookCellOutputItem.text(rawStr, mime);\n\t}\n\n\tconstructor(\n\t\tpublic data: Uint8Array,\n\t\tpublic mime: string,\n\t) {\n\t\tconst mimeNormalized = normalizeMimeType(mime, true);\n\t\tif (!mimeNormalized) {\n\t\t\tthrow new Error(`INVALID mime type: ${mime}. Must be in the format \"type/subtype[;optionalparameter]\"`);\n\t\t}\n\t\tthis.mime = mimeNormalized;\n\t}\n}\n\nexport class NotebookCellOutput {\n\n\tstatic isNotebookCellOutput(candidate: any): candidate is vscode.NotebookCellOutput {\n\t\tif (candidate instanceof NotebookCellOutput) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!candidate || typeof candidate !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<NotebookCellOutput>candidate).id === 'string' && isArray((<NotebookCellOutput>candidate).items);\n\t}\n\n\tstatic ensureUniqueMimeTypes(items: NotebookCellOutputItem[], warn: boolean = false): NotebookCellOutputItem[] {\n\t\tconst seen = new Set<string>();\n\t\tconst removeIdx = new Set<number>();\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\tconst item = items[i];\n\t\t\tconst normalMime = normalizeMimeType(item.mime);\n\t\t\tif (!seen.has(normalMime)) {\n\t\t\t\tseen.add(normalMime);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// duplicated mime types... first has won\n\t\t\tremoveIdx.add(i);\n\t\t\tif (warn) {\n\t\t\t\tconsole.warn(`DUPLICATED mime type '${item.mime}' will be dropped`);\n\t\t\t}\n\t\t}\n\t\tif (removeIdx.size === 0) {\n\t\t\treturn items;\n\t\t}\n\t\treturn items.filter((_item, index) => !removeIdx.has(index));\n\t}\n\n\tid: string;\n\titems: NotebookCellOutputItem[];\n\tmetadata?: Record<string, any>;\n\n\tconstructor(\n\t\titems: NotebookCellOutputItem[],\n\t\tidOrMetadata?: string | Record<string, any>,\n\t\tmetadata?: Record<string, any>\n\t) {\n\t\tthis.items = NotebookCellOutput.ensureUniqueMimeTypes(items, true);\n\t\tif (typeof idOrMetadata === 'string') {\n\t\t\tthis.id = idOrMetadata;\n\t\t\tthis.metadata = metadata;\n\t\t} else {\n\t\t\tthis.id = generateUuid();\n\t\t\tthis.metadata = idOrMetadata ?? metadata;\n\t\t}\n\t}\n}\n\nexport enum NotebookCellKind {\n\tMarkup = 1,\n\tCode = 2\n}\n\nexport enum NotebookCellExecutionState {\n\tIdle = 1,\n\tPending = 2,\n\tExecuting = 3,\n}\n\nexport enum NotebookCellStatusBarAlignment {\n\tLeft = 1,\n\tRight = 2\n}\n\nexport enum NotebookEditorRevealType {\n\tDefault = 0,\n\tInCenter = 1,\n\tInCenterIfOutsideViewport = 2,\n\tAtTop = 3\n}\n\nexport class NotebookCellStatusBarItem {\n\tconstructor(\n\t\tpublic text: string,\n\t\tpublic alignment: NotebookCellStatusBarAlignment) { }\n}\n\n\nexport enum NotebookControllerAffinity {\n\tDefault = 1,\n\tPreferred = 2\n}\n\nexport class NotebookRendererScript {\n\n\tpublic provides: string[];\n\n\tconstructor(\n\t\tpublic uri: vscode.Uri,\n\t\tprovides: string | string[] = []\n\t) {\n\t\tthis.provides = asArray(provides);\n\t}\n}\n\n//#endregion\n\n//#region Timeline\n\n@es5ClassCompat\nexport class TimelineItem implements vscode.TimelineItem {\n\tconstructor(public label: string, public timestamp: number) { }\n}\n\n//#endregion Timeline\n\n//#region ExtensionContext\n\nexport enum ExtensionMode {\n\t/**\n\t * The extension is installed normally (for example, from the marketplace\n\t * or VSIX) in VS Code.\n\t */\n\tProduction = 1,\n\n\t/**\n\t * The extension is running from an `--extensionDevelopmentPath` provided\n\t * when launching VS Code.\n\t */\n\tDevelopment = 2,\n\n\t/**\n\t * The extension is running from an `--extensionDevelopmentPath` and\n\t * the extension host is running unit tests.\n\t */\n\tTest = 3,\n}\n\nexport enum ExtensionRuntime {\n\t/**\n\t * The extension is running in a NodeJS extension host. Runtime access to NodeJS APIs is available.\n\t */\n\tNode = 1,\n\t/**\n\t * The extension is running in a Webworker extension host. Runtime access is limited to Webworker APIs.\n\t */\n\tWebworker = 2\n}\n\n//#endregion ExtensionContext\n\nexport enum StandardTokenType {\n\tOther = 0,\n\tComment = 1,\n\tString = 2,\n\tRegEx = 3\n}\n\n\nexport class LinkedEditingRanges {\n\tconstructor(public readonly ranges: Range[], public readonly wordPattern?: RegExp) {\n\t}\n}\n\n//#region ports\nexport class PortAttributes {\n\tprivate _port: number;\n\tprivate _autoForwardAction: PortAutoForwardAction;\n\tconstructor(port: number, autoForwardAction: PortAutoForwardAction) {\n\t\tthis._port = port;\n\t\tthis._autoForwardAction = autoForwardAction;\n\t}\n\n\tget port(): number {\n\t\treturn this._port;\n\t}\n\n\tget autoForwardAction(): PortAutoForwardAction {\n\t\treturn this._autoForwardAction;\n\t}\n}\n//#endregion ports\n\n//#region Testing\nexport enum TestResultState {\n\tQueued = 1,\n\tRunning = 2,\n\tPassed = 3,\n\tFailed = 4,\n\tSkipped = 5,\n\tErrored = 6\n}\n\nexport enum TestRunProfileKind {\n\tRun = 1,\n\tDebug = 2,\n\tCoverage = 3,\n}\n\n@es5ClassCompat\nexport class TestRunRequest implements vscode.TestRunRequest {\n\tconstructor(\n\t\tpublic readonly include: vscode.TestItem[] | undefined = undefined,\n\t\tpublic readonly exclude: vscode.TestItem[] | undefined = undefined,\n\t\tpublic readonly profile: vscode.TestRunProfile | undefined = undefined,\n\t) { }\n}\n\n@es5ClassCompat\nexport class TestMessage implements vscode.TestMessage {\n\tpublic expectedOutput?: string;\n\tpublic actualOutput?: string;\n\tpublic location?: vscode.Location;\n\n\tpublic static diff(message: string | vscode.MarkdownString, expected: string, actual: string) {\n\t\tconst msg = new TestMessage(message);\n\t\tmsg.expectedOutput = expected;\n\t\tmsg.actualOutput = actual;\n\t\treturn msg;\n\t}\n\n\tconstructor(public message: string | vscode.MarkdownString) { }\n}\n\n@es5ClassCompat\nexport class TestTag implements vscode.TestTag {\n\tconstructor(public readonly id: string) { }\n}\n\n//#endregion\n\n//#region Test Coverage\n@es5ClassCompat\nexport class CoveredCount implements vscode.CoveredCount {\n\tconstructor(public covered: number, public total: number) { }\n}\n\n@es5ClassCompat\nexport class FileCoverage implements vscode.FileCoverage {\n\tpublic static fromDetails(uri: vscode.Uri, details: vscode.DetailedCoverage[]): vscode.FileCoverage {\n\t\tconst statements = new CoveredCount(0, 0);\n\t\tconst branches = new CoveredCount(0, 0);\n\t\tconst fn = new CoveredCount(0, 0);\n\n\t\tfor (const detail of details) {\n\t\t\tif ('branches' in detail) {\n\t\t\t\tstatements.total += 1;\n\t\t\t\tstatements.covered += detail.executionCount > 0 ? 1 : 0;\n\n\t\t\t\tfor (const branch of detail.branches) {\n\t\t\t\t\tbranches.total += 1;\n\t\t\t\t\tbranches.covered += branch.executionCount > 0 ? 1 : 0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfn.total += 1;\n\t\t\t\tfn.covered += detail.executionCount > 0 ? 1 : 0;\n\t\t\t}\n\t\t}\n\n\t\tconst coverage = new FileCoverage(\n\t\t\turi,\n\t\t\tstatements,\n\t\t\tbranches.total > 0 ? branches : undefined,\n\t\t\tfn.total > 0 ? fn : undefined,\n\t\t);\n\n\t\tcoverage.detailedCoverage = details;\n\n\t\treturn coverage;\n\t}\n\n\tdetailedCoverage?: vscode.DetailedCoverage[];\n\n\tconstructor(\n\t\tpublic readonly uri: vscode.Uri,\n\t\tpublic statementCoverage: vscode.CoveredCount,\n\t\tpublic branchCoverage?: vscode.CoveredCount,\n\t\tpublic functionCoverage?: vscode.CoveredCount,\n\t) { }\n}\n\n@es5ClassCompat\nexport class StatementCoverage implements vscode.StatementCoverage {\n\tconstructor(\n\t\tpublic executionCount: number,\n\t\tpublic location: Position | Range,\n\t\tpublic branches: vscode.BranchCoverage[] = [],\n\t) { }\n}\n\n@es5ClassCompat\nexport class BranchCoverage implements vscode.BranchCoverage {\n\tconstructor(\n\t\tpublic executionCount: number,\n\t\tpublic location: Position | Range,\n\t) { }\n}\n\n@es5ClassCompat\nexport class FunctionCoverage implements vscode.FunctionCoverage {\n\tconstructor(\n\t\tpublic executionCount: number,\n\t\tpublic location: Position | Range,\n\t) { }\n}\n//#endregion\n\nexport enum ExternalUriOpenerPriority {\n\tNone = 0,\n\tOption = 1,\n\tDefault = 2,\n\tPreferred = 3,\n}\n\nexport enum WorkspaceTrustState {\n\tUntrusted = 0,\n\tTrusted = 1,\n\tUnspecified = 2\n}\n\nexport enum PortAutoForwardAction {\n\tNotify = 1,\n\tOpenBrowser = 2,\n\tOpenPreview = 3,\n\tSilent = 4,\n\tIgnore = 5,\n\tOpenBrowserOnce = 6\n}\n\nexport class TypeHierarchyItem {\n\t_sessionId?: string;\n\t_itemId?: string;\n\n\tkind: SymbolKind;\n\ttags?: SymbolTag[];\n\tname: string;\n\tdetail?: string;\n\turi: URI;\n\trange: Range;\n\tselectionRange: Range;\n\n\tconstructor(kind: SymbolKind, name: string, detail: string, uri: URI, range: Range, selectionRange: Range) {\n\t\tthis.kind = kind;\n\t\tthis.name = name;\n\t\tthis.detail = detail;\n\t\tthis.uri = uri;\n\t\tthis.range = range;\n\t\tthis.selectionRange = selectionRange;\n\t}\n}\n\n//#region Tab Inputs\n\nexport class TextTabInput {\n\tconstructor(readonly uri: URI) { }\n}\n\nexport class TextDiffTabInput {\n\tconstructor(readonly original: URI, readonly modified: URI) { }\n}\n\nexport class TextMergeTabInput {\n\tconstructor(readonly base: URI, readonly input1: URI, readonly input2: URI, readonly result: URI) { }\n}\n\nexport class CustomEditorTabInput {\n\tconstructor(readonly uri: URI, readonly viewType: string) { }\n}\n\nexport class WebviewEditorTabInput {\n\tconstructor(readonly viewType: string) { }\n}\n\nexport class NotebookEditorTabInput {\n\tconstructor(readonly uri: URI, readonly notebookType: string) { }\n}\n\nexport class NotebookDiffEditorTabInput {\n\tconstructor(readonly original: URI, readonly modified: URI, readonly notebookType: string) { }\n}\n\nexport class TerminalEditorTabInput {\n\tconstructor() { }\n}\nexport class InteractiveWindowInput {\n\tconstructor(readonly uri: URI, readonly inputBoxUri: URI) { }\n}\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { UriParts, IRawURITransformer, URITransformer, IURITransformer } from 'vs/base/common/uriIpc';\n\n/**\n * ```\n * --------------------------------\n * |    UI SIDE    |  AGENT SIDE  |\n * |---------------|--------------|\n * | vscode-remote | file         |\n * | file          | vscode-local |\n * --------------------------------\n * ```\n */\nfunction createRawURITransformer(remoteAuthority: string): IRawURITransformer {\n\treturn {\n\t\ttransformIncoming: (uri: UriParts): UriParts => {\n\t\t\tif (uri.scheme === 'vscode-remote') {\n\t\t\t\treturn { scheme: 'file', path: uri.path, query: uri.query, fragment: uri.fragment };\n\t\t\t}\n\t\t\tif (uri.scheme === 'file') {\n\t\t\t\treturn { scheme: 'vscode-local', path: uri.path, query: uri.query, fragment: uri.fragment };\n\t\t\t}\n\t\t\treturn uri;\n\t\t},\n\t\ttransformOutgoing: (uri: UriParts): UriParts => {\n\t\t\tif (uri.scheme === 'file') {\n\t\t\t\treturn { scheme: 'vscode-remote', authority: remoteAuthority, path: uri.path, query: uri.query, fragment: uri.fragment };\n\t\t\t}\n\t\t\tif (uri.scheme === 'vscode-local') {\n\t\t\t\treturn { scheme: 'file', path: uri.path, query: uri.query, fragment: uri.fragment };\n\t\t\t}\n\t\t\treturn uri;\n\t\t},\n\t\ttransformOutgoingScheme: (scheme: string): string => {\n\t\t\tif (scheme === 'file') {\n\t\t\t\treturn 'vscode-remote';\n\t\t\t} else if (scheme === 'vscode-local') {\n\t\t\t\treturn 'file';\n\t\t\t}\n\t\t\treturn scheme;\n\t\t}\n\t};\n}\n\nexport function createURITransformer(remoteAuthority: string): IURITransformer {\n\treturn new URITransformer(createRawURITransformer(remoteAuthority));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from 'vs/base/common/event';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IURITransformer } from 'vs/base/common/uriIpc';\nimport { IFileChange } from 'vs/platform/files/common/files';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { createURITransformer } from 'vs/workbench/api/node/uriTransformer';\nimport { RemoteAgentConnectionContext } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { DiskFileSystemProvider } from 'vs/platform/files/node/diskFileSystemProvider';\nimport { posix, delimiter } from 'vs/base/common/path';\nimport { IServerEnvironmentService } from 'vs/server/node/serverEnvironmentService';\nimport { AbstractDiskFileSystemProviderChannel, AbstractSessionFileWatcher, ISessionFileWatcher } from 'vs/platform/files/node/diskFileSystemProviderServer';\nimport { IRecursiveWatcherOptions } from 'vs/platform/files/common/watcher';\n\nexport class RemoteAgentFileSystemProviderChannel extends AbstractDiskFileSystemProviderChannel<RemoteAgentConnectionContext> {\n\n\tprivate readonly uriTransformerCache = new Map<string, IURITransformer>();\n\n\tconstructor(\n\t\tlogService: ILogService,\n\t\tprivate readonly environmentService: IServerEnvironmentService\n\t) {\n\t\tsuper(new DiskFileSystemProvider(logService), logService);\n\n\t\tthis._register(this.provider);\n\t}\n\n\tprotected override getUriTransformer(ctx: RemoteAgentConnectionContext): IURITransformer {\n\t\tlet transformer = this.uriTransformerCache.get(ctx.remoteAuthority);\n\t\tif (!transformer) {\n\t\t\ttransformer = createURITransformer(ctx.remoteAuthority);\n\t\t\tthis.uriTransformerCache.set(ctx.remoteAuthority, transformer);\n\t\t}\n\n\t\treturn transformer;\n\t}\n\n\tprotected override transformIncoming(uriTransformer: IURITransformer, _resource: UriComponents, supportVSCodeResource = false): URI {\n\t\tif (supportVSCodeResource && _resource.path === '/vscode-resource' && _resource.query) {\n\t\t\tconst requestResourcePath = JSON.parse(_resource.query).requestResourcePath;\n\n\t\t\treturn URI.from({ scheme: 'file', path: requestResourcePath });\n\t\t}\n\n\t\treturn URI.revive(uriTransformer.transformIncoming(_resource));\n\t}\n\n\t//#region File Watching\n\n\tprotected createSessionFileWatcher(uriTransformer: IURITransformer, emitter: Emitter<IFileChange[] | string>): ISessionFileWatcher {\n\t\treturn new SessionFileWatcher(uriTransformer, emitter, this.logService, this.environmentService);\n\t}\n\n\t//#endregion\n}\n\nclass SessionFileWatcher extends AbstractSessionFileWatcher {\n\n\tconstructor(\n\t\turiTransformer: IURITransformer,\n\t\tsessionEmitter: Emitter<IFileChange[] | string>,\n\t\tlogService: ILogService,\n\t\tenvironmentService: IServerEnvironmentService\n\t) {\n\t\tsuper(uriTransformer, sessionEmitter, logService, environmentService);\n\t}\n\n\tprotected override getRecursiveWatcherOptions(environmentService: IServerEnvironmentService): IRecursiveWatcherOptions | undefined {\n\t\tconst fileWatcherPolling = environmentService.args['file-watcher-polling'];\n\t\tif (fileWatcherPolling) {\n\t\t\tconst segments = fileWatcherPolling.split(delimiter);\n\t\t\tconst pollingInterval = Number(segments[0]);\n\t\t\tif (pollingInterval > 0) {\n\t\t\t\tconst usePolling = segments.length > 1 ? segments.slice(1) : true;\n\t\t\t\treturn { usePolling, pollingInterval };\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprotected override getExtraExcludes(environmentService: IServerEnvironmentService): string[] | undefined {\n\t\tif (environmentService.extensionsPath) {\n\t\t\t// when opening the $HOME folder, we end up watching the extension folder\n\t\t\t// so simply exclude watching the extensions folder\n\t\t\treturn [posix.join(environmentService.extensionsPath, '**')];\n\t\t}\n\n\t\treturn undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { Event } from 'vs/base/common/event';\nimport { assertIsDefined } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { Disposable, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { ICodeEditorViewState, IDiffEditor, IDiffEditorViewState, IEditor, IEditorViewState } from 'vs/editor/common/editorCommon';\nimport { IEditorOptions, IResourceEditorInput, ITextResourceEditorInput, IBaseTextResourceEditorInput, IBaseUntypedEditorInput } from 'vs/platform/editor/common/editor';\nimport type { EditorInput } from 'vs/workbench/common/editor/editorInput';\nimport { IInstantiationService, IConstructorSignature, ServicesAccessor, BrandedService } from 'vs/platform/instantiation/common/instantiation';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IEncodingSupport, ILanguageSupport } from 'vs/workbench/services/textfile/common/textfiles';\nimport { IEditorGroup } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { ICompositeControl, IComposite } from 'vs/workbench/common/composite';\nimport { FileType, IFileService } from 'vs/platform/files/common/files';\nimport { IPathData } from 'vs/platform/window/common/window';\nimport { coalesce } from 'vs/base/common/arrays';\nimport { IExtUri } from 'vs/base/common/resources';\nimport { Schemas } from 'vs/base/common/network';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\n\n// Static values for editor contributions\nexport const EditorExtensions = {\n\tEditorPane: 'workbench.contributions.editors',\n\tEditorFactory: 'workbench.contributions.editor.inputFactories'\n};\n\n// Static information regarding the text editor\nexport const DEFAULT_EDITOR_ASSOCIATION = {\n\tid: 'default',\n\tdisplayName: localize('promptOpenWith.defaultEditor.displayName', \"Text Editor\"),\n\tproviderDisplayName: localize('builtinProviderDisplayName', \"Built-in\")\n};\n\n/**\n * Side by side editor id.\n */\nexport const SIDE_BY_SIDE_EDITOR_ID = 'workbench.editor.sidebysideEditor';\n\n/**\n * Text diff editor id.\n */\nexport const TEXT_DIFF_EDITOR_ID = 'workbench.editors.textDiffEditor';\n\n/**\n * Binary diff editor id.\n */\nexport const BINARY_DIFF_EDITOR_ID = 'workbench.editors.binaryResourceDiffEditor';\n\nexport interface IEditorDescriptor<T extends IEditorPane> {\n\n\t/**\n\t * The unique type identifier of the editor. All instances\n\t * of the same `IEditorPane` should have the same type\n\t * identifier.\n\t */\n\treadonly typeId: string;\n\n\t/**\n\t * The display name of the editor.\n\t */\n\treadonly name: string;\n\n\t/**\n\t * Instantiates the editor pane using the provided services.\n\t */\n\tinstantiate(instantiationService: IInstantiationService): T;\n\n\t/**\n\t * Whether the descriptor is for the provided editor pane.\n\t */\n\tdescribes(editorPane: T): boolean;\n}\n\n/**\n * The editor pane is the container for workbench editors.\n */\nexport interface IEditorPane extends IComposite {\n\n\t/**\n\t * An event to notify when the `IEditorControl` in this\n\t * editor pane changes.\n\t *\n\t * This can be used for editor panes that are a compound\n\t * of multiple editor controls to signal that the active\n\t * editor control has changed when the user clicks around.\n\t */\n\treadonly onDidChangeControl: Event<void>;\n\n\t/**\n\t * An optional event to notify when the selection inside the editor\n\t * pane changed in case the editor has a selection concept.\n\t *\n\t * For example, in a text editor pane, the selection changes whenever\n\t * the cursor is set to a new location.\n\t */\n\treadonly onDidChangeSelection?: Event<IEditorPaneSelectionChangeEvent>;\n\n\t/**\n\t * The assigned input of this editor.\n\t */\n\treadonly input: EditorInput | undefined;\n\n\t/**\n\t * The assigned options of the editor.\n\t */\n\treadonly options: IEditorOptions | undefined;\n\n\t/**\n\t * The assigned group this editor is showing in.\n\t */\n\treadonly group: IEditorGroup | undefined;\n\n\t/**\n\t * The minimum width of this editor.\n\t */\n\treadonly minimumWidth: number;\n\n\t/**\n\t * The maximum width of this editor.\n\t */\n\treadonly maximumWidth: number;\n\n\t/**\n\t * The minimum height of this editor.\n\t */\n\treadonly minimumHeight: number;\n\n\t/**\n\t * The maximum height of this editor.\n\t */\n\treadonly maximumHeight: number;\n\n\t/**\n\t * An event to notify whenever minimum/maximum width/height changes.\n\t */\n\treadonly onDidChangeSizeConstraints: Event<{ width: number; height: number } | undefined>;\n\n\t/**\n\t * The context key service for this editor. Should be overridden by\n\t * editors that have their own ScopedContextKeyService\n\t */\n\treadonly scopedContextKeyService: IContextKeyService | undefined;\n\n\t/**\n\t * Returns the underlying control of this editor. Callers need to cast\n\t * the control to a specific instance as needed, e.g. by using the\n\t * `isCodeEditor` helper method to access the text code editor.\n\t *\n\t * Use the `onDidChangeControl` event to track whenever the control\n\t * changes.\n\t */\n\tgetControl(): IEditorControl | undefined;\n\n\t/**\n\t * Returns the current view state of the editor if any.\n\t *\n\t * This method is optional to override for the editor pane\n\t * and should only be overridden when the pane can deal with\n\t * `IEditorOptions.viewState` to be applied when opening.\n\t */\n\tgetViewState(): object | undefined;\n\n\t/**\n\t * An optional method to return the current selection in\n\t * the editor pane in case the editor pane has a selection\n\t * concept.\n\t *\n\t * Clients of this method will typically react to the\n\t * `onDidChangeSelection` event to receive the current\n\t * selection as needed.\n\t */\n\tgetSelection?(): IEditorPaneSelection | undefined;\n\n\t/**\n\t * Finds out if this editor is visible or not.\n\t */\n\tisVisible(): boolean;\n}\n\nexport interface IEditorPaneSelectionChangeEvent {\n\n\t/**\n\t * More details for how the selection was made.\n\t */\n\treason: EditorPaneSelectionChangeReason;\n}\n\nexport const enum EditorPaneSelectionChangeReason {\n\n\t/**\n\t * The selection was changed as a result of a programmatic\n\t * method invocation.\n\t *\n\t * For a text editor pane, this for example can be a selection\n\t * being restored from previous view state automatically.\n\t */\n\tPROGRAMMATIC = 1,\n\n\t/**\n\t * The selection was changed by the user.\n\t *\n\t * This typically means the user changed the selection\n\t * with mouse or keyboard.\n\t */\n\tUSER,\n\n\t/**\n\t * The selection was changed as a result of editing in\n\t * the editor pane.\n\t *\n\t * For a text editor pane, this for example can be typing\n\t * in the text of the editor pane.\n\t */\n\tEDIT,\n\n\t/**\n\t * The selection was changed as a result of a navigation\n\t * action.\n\t *\n\t * For a text editor pane, this for example can be a result\n\t * of selecting an entry from a text outline view.\n\t */\n\tNAVIGATION,\n\n\t/**\n\t * The selection was changed as a result of a jump action\n\t * from within the editor pane.\n\t *\n\t * For a text editor pane, this for example can be a result\n\t * of invoking \"Go to definition\" from a symbol.\n\t */\n\tJUMP\n}\n\nexport interface IEditorPaneSelection {\n\n\t/**\n\t * Asks to compare this selection to another selection.\n\t */\n\tcompare(otherSelection: IEditorPaneSelection): EditorPaneSelectionCompareResult;\n\n\t/**\n\t * Asks to massage the provided `options` in a way\n\t * that the selection can be restored when the editor\n\t * is opened again.\n\t *\n\t * For a text editor this means to apply the selected\n\t * line and column as text editor options.\n\t */\n\trestore(options: IEditorOptions): IEditorOptions;\n\n\t/**\n\t * Only used for logging to print more info about the selection.\n\t */\n\tlog?(): string;\n}\n\nexport const enum EditorPaneSelectionCompareResult {\n\n\t/**\n\t * The selections are identical.\n\t */\n\tIDENTICAL = 1,\n\n\t/**\n\t * The selections are similar.\n\t *\n\t * For a text editor this can mean that the one\n\t * selection is in close proximity to the other\n\t * selection.\n\t *\n\t * Upstream clients may decide in this case to\n\t * not treat the selection different from the\n\t * previous one because it is not distinct enough.\n\t */\n\tSIMILAR = 2,\n\n\t/**\n\t * The selections are entirely different.\n\t */\n\tDIFFERENT = 3\n}\n\nexport interface IEditorPaneWithSelection extends IEditorPane {\n\n\treadonly onDidChangeSelection: Event<IEditorPaneSelectionChangeEvent>;\n\n\tgetSelection(): IEditorPaneSelection | undefined;\n}\n\nexport function isEditorPaneWithSelection(editorPane: IEditorPane | undefined): editorPane is IEditorPaneWithSelection {\n\tconst candidate = editorPane as IEditorPaneWithSelection | undefined;\n\n\treturn !!candidate && typeof candidate.getSelection === 'function' && !!candidate.onDidChangeSelection;\n}\n\n/**\n * Try to retrieve the view state for the editor pane that\n * has the provided editor input opened, if at all.\n *\n * This method will return `undefined` if the editor input\n * is not visible in any of the opened editor panes.\n */\nexport function findViewStateForEditor(input: EditorInput, group: GroupIdentifier, editorService: IEditorService): object | undefined {\n\tfor (const editorPane of editorService.visibleEditorPanes) {\n\t\tif (editorPane.group.id === group && input.matches(editorPane.input)) {\n\t\t\treturn editorPane.getViewState();\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\n/**\n * Overrides `IEditorPane` where `input` and `group` are known to be set.\n */\nexport interface IVisibleEditorPane extends IEditorPane {\n\treadonly input: EditorInput;\n\treadonly group: IEditorGroup;\n}\n\n/**\n * The text editor pane is the container for workbench text editors.\n */\nexport interface ITextEditorPane extends IEditorPane {\n\n\t/**\n\t * Returns the underlying text editor widget of this editor.\n\t */\n\tgetControl(): IEditor | undefined;\n}\n\n/**\n * The text editor pane is the container for workbench text diff editors.\n */\nexport interface ITextDiffEditorPane extends IEditorPane {\n\n\t/**\n\t * Returns the underlying text diff editor widget of this editor.\n\t */\n\tgetControl(): IDiffEditor | undefined;\n}\n\n/**\n * Marker interface for the control inside an editor pane. Callers\n * have to cast the control to work with it, e.g. via methods\n * such as `isCodeEditor(control)`.\n */\nexport interface IEditorControl extends ICompositeControl { }\n\nexport interface IFileEditorFactory {\n\n\t/**\n\t * The type identifier of the file editor.\n\t */\n\ttypeId: string;\n\n\t/**\n\t * Creates new new editor capable of showing files.\n\t */\n\tcreateFileEditor(resource: URI, preferredResource: URI | undefined, preferredName: string | undefined, preferredDescription: string | undefined, preferredEncoding: string | undefined, preferredLanguageId: string | undefined, preferredContents: string | undefined, instantiationService: IInstantiationService): IFileEditorInput;\n\n\t/**\n\t * Check if the provided object is a file editor.\n\t */\n\tisFileEditor(obj: unknown): obj is IFileEditorInput;\n}\n\nexport interface IEditorFactoryRegistry {\n\n\t/**\n\t * Registers the file editor factory to use for file editors.\n\t */\n\tregisterFileEditorFactory(factory: IFileEditorFactory): void;\n\n\t/**\n\t * Returns the file editor factory to use for file editors.\n\t */\n\tgetFileEditorFactory(): IFileEditorFactory;\n\n\t/**\n\t * Registers a editor serializer for the given editor to the registry.\n\t * An editor serializer is capable of serializing and deserializing editor\n\t * from string data.\n\t *\n\t * @param editorTypeId the type identifier of the editor\n\t * @param serializer the editor serializer for serialization/deserialization\n\t */\n\tregisterEditorSerializer<Services extends BrandedService[]>(editorTypeId: string, ctor: { new(...Services: Services): IEditorSerializer }): IDisposable;\n\n\t/**\n\t * Returns the editor serializer for the given editor.\n\t */\n\tgetEditorSerializer(editor: EditorInput): IEditorSerializer | undefined;\n\tgetEditorSerializer(editorTypeId: string): IEditorSerializer | undefined;\n\n\t/**\n\t * Starts the registry by providing the required services.\n\t */\n\tstart(accessor: ServicesAccessor): void;\n}\n\nexport interface IEditorSerializer {\n\n\t/**\n\t * Determines whether the given editor can be serialized by the serializer.\n\t */\n\tcanSerialize(editor: EditorInput): boolean;\n\n\t/**\n\t * Returns a string representation of the provided editor that contains enough information\n\t * to deserialize back to the original editor from the deserialize() method.\n\t */\n\tserialize(editor: EditorInput): string | undefined;\n\n\t/**\n\t * Returns an editor from the provided serialized form of the editor. This form matches\n\t * the value returned from the serialize() method.\n\t */\n\tdeserialize(instantiationService: IInstantiationService, serializedEditor: string): EditorInput | undefined;\n}\n\nexport interface IUntitledTextResourceEditorInput extends IBaseTextResourceEditorInput {\n\n\t/**\n\t * Optional resource for the untitled editor. Depending on the value, the editor:\n\t * - should get a unique name if `undefined` (for example `Untitled-1`)\n\t * - should use the resource directly if the scheme is `untitled:`\n\t * - should change the scheme to `untitled:` otherwise and assume an associated path\n\t *\n\t * Untitled editors with associated path behave slightly different from other untitled\n\t * editors:\n\t * - they are dirty right when opening\n\t * - they will not ask for a file path when saving but use the associated path\n\t */\n\treadonly resource: URI | undefined;\n}\n\n/**\n * A resource side by side editor input shows 2 editors side by side but\n * without highlighting any differences.\n *\n * Note: both sides will be resolved as editor individually. As such, it is\n * possible to show 2 different editors side by side.\n *\n * @see {@link IResourceDiffEditorInput} for a variant that compares 2 editors.\n */\nexport interface IResourceSideBySideEditorInput extends IBaseUntypedEditorInput {\n\n\t/**\n\t * The right hand side editor to open inside a side-by-side editor.\n\t */\n\treadonly primary: IResourceEditorInput | ITextResourceEditorInput | IUntitledTextResourceEditorInput;\n\n\t/**\n\t * The left hand side editor to open inside a side-by-side editor.\n\t */\n\treadonly secondary: IResourceEditorInput | ITextResourceEditorInput | IUntitledTextResourceEditorInput;\n}\n\n/**\n * A resource diff editor input compares 2 editors side by side\n * highlighting the differences.\n *\n * Note: both sides must be resolvable to the same editor, or\n * a text based presentation will be used as fallback.\n */\nexport interface IResourceDiffEditorInput extends IBaseUntypedEditorInput {\n\n\t/**\n\t * The left hand side editor to open inside a diff editor.\n\t */\n\treadonly original: IResourceEditorInput | ITextResourceEditorInput | IUntitledTextResourceEditorInput;\n\n\t/**\n\t * The right hand side editor to open inside a diff editor.\n\t */\n\treadonly modified: IResourceEditorInput | ITextResourceEditorInput | IUntitledTextResourceEditorInput;\n}\n\n/**\n * A resource merge editor input compares multiple editors\n * highlighting the differences for merging.\n *\n * Note: all sides must be resolvable to the same editor, or\n * a text based presentation will be used as fallback.\n */\nexport interface IResourceMergeEditorInput extends IBaseUntypedEditorInput {\n\n\t/**\n\t * The one changed version of the file.\n\t */\n\treadonly input1: IResourceEditorInput | ITextResourceEditorInput;\n\n\t/**\n\t * The second changed version of the file.\n\t */\n\treadonly input2: IResourceEditorInput | ITextResourceEditorInput;\n\n\t/**\n\t * The base common ancestor of the file to merge.\n\t */\n\treadonly base: IResourceEditorInput | ITextResourceEditorInput;\n\n\t/**\n\t * The resulting output of the merge.\n\t */\n\treadonly result: IResourceEditorInput | ITextResourceEditorInput;\n}\n\nexport function isResourceEditorInput(editor: unknown): editor is IResourceEditorInput {\n\tif (isEditorInput(editor)) {\n\t\treturn false; // make sure to not accidentally match on typed editor inputs\n\t}\n\n\tconst candidate = editor as IResourceEditorInput | undefined;\n\n\treturn URI.isUri(candidate?.resource);\n}\n\nexport function isResourceDiffEditorInput(editor: unknown): editor is IResourceDiffEditorInput {\n\tif (isEditorInput(editor)) {\n\t\treturn false; // make sure to not accidentally match on typed editor inputs\n\t}\n\n\tconst candidate = editor as IResourceDiffEditorInput | undefined;\n\n\treturn candidate?.original !== undefined && candidate.modified !== undefined;\n}\n\nexport function isResourceSideBySideEditorInput(editor: unknown): editor is IResourceSideBySideEditorInput {\n\tif (isEditorInput(editor)) {\n\t\treturn false; // make sure to not accidentally match on typed editor inputs\n\t}\n\n\tif (isResourceDiffEditorInput(editor)) {\n\t\treturn false; // make sure to not accidentally match on diff editors\n\t}\n\n\tconst candidate = editor as IResourceSideBySideEditorInput | undefined;\n\n\treturn candidate?.primary !== undefined && candidate.secondary !== undefined;\n}\n\nexport function isUntitledResourceEditorInput(editor: unknown): editor is IUntitledTextResourceEditorInput {\n\tif (isEditorInput(editor)) {\n\t\treturn false; // make sure to not accidentally match on typed editor inputs\n\t}\n\n\tconst candidate = editor as IUntitledTextResourceEditorInput | undefined;\n\tif (!candidate) {\n\t\treturn false;\n\t}\n\n\treturn candidate.resource === undefined || candidate.resource.scheme === Schemas.untitled || candidate.forceUntitled === true;\n}\n\nexport function isResourceMergeEditorInput(editor: unknown): editor is IResourceMergeEditorInput {\n\tif (isEditorInput(editor)) {\n\t\treturn false; // make sure to not accidentally match on typed editor inputs\n\t}\n\n\tconst candidate = editor as IResourceMergeEditorInput | undefined;\n\n\treturn URI.isUri(candidate?.base?.resource) && URI.isUri(candidate?.input1?.resource) && URI.isUri(candidate?.input2?.resource) && URI.isUri(candidate?.result?.resource);\n}\n\nexport const enum Verbosity {\n\tSHORT,\n\tMEDIUM,\n\tLONG\n}\n\nexport const enum SaveReason {\n\n\t/**\n\t * Explicit user gesture.\n\t */\n\tEXPLICIT = 1,\n\n\t/**\n\t * Auto save after a timeout.\n\t */\n\tAUTO = 2,\n\n\t/**\n\t * Auto save after editor focus change.\n\t */\n\tFOCUS_CHANGE = 3,\n\n\t/**\n\t * Auto save after window change.\n\t */\n\tWINDOW_CHANGE = 4\n}\n\nexport type SaveSource = string;\n\ninterface ISaveSourceDescriptor {\n\tsource: SaveSource;\n\tlabel: string;\n}\n\nclass SaveSourceFactory {\n\n\tprivate readonly mapIdToSaveSource = new Map<SaveSource, ISaveSourceDescriptor>();\n\n\t/**\n\t * Registers a `SaveSource` with an identifier and label\n\t * to the registry so that it can be used in save operations.\n\t */\n\tregisterSource(id: string, label: string): SaveSource {\n\t\tlet sourceDescriptor = this.mapIdToSaveSource.get(id);\n\t\tif (!sourceDescriptor) {\n\t\t\tsourceDescriptor = { source: id, label };\n\t\t\tthis.mapIdToSaveSource.set(id, sourceDescriptor);\n\t\t}\n\n\t\treturn sourceDescriptor.source;\n\t}\n\n\tgetSourceLabel(source: SaveSource): string {\n\t\treturn this.mapIdToSaveSource.get(source)?.label ?? source;\n\t}\n}\n\nexport const SaveSourceRegistry = new SaveSourceFactory();\n\nexport interface ISaveOptions {\n\n\t/**\n\t * An indicator how the save operation was triggered.\n\t */\n\treason?: SaveReason;\n\n\t/**\n\t * An indicator about the source of the save operation.\n\t *\n\t * Must use `SaveSourceRegistry.registerSource()` to obtain.\n\t */\n\treadonly source?: SaveSource;\n\n\t/**\n\t * Forces to save the contents of the working copy\n\t * again even if the working copy is not dirty.\n\t */\n\treadonly force?: boolean;\n\n\t/**\n\t * Instructs the save operation to skip any save participants.\n\t */\n\treadonly skipSaveParticipants?: boolean;\n\n\t/**\n\t * A hint as to which file systems should be available for saving.\n\t */\n\treadonly availableFileSystems?: string[];\n}\n\nexport interface IRevertOptions {\n\n\t/**\n\t * Forces to load the contents of the working copy\n\t * again even if the working copy is not dirty.\n\t */\n\treadonly force?: boolean;\n\n\t/**\n\t * A soft revert will clear dirty state of a working copy\n\t * but will not attempt to load it from its persisted state.\n\t *\n\t * This option may be used in scenarios where an editor is\n\t * closed and where we do not require to load the contents.\n\t */\n\treadonly soft?: boolean;\n}\n\nexport interface IMoveResult {\n\teditor: EditorInput | IUntypedEditorInput;\n\toptions?: IEditorOptions;\n}\n\nexport const enum EditorInputCapabilities {\n\n\t/**\n\t * Signals no specific capability for the input.\n\t */\n\tNone = 0,\n\n\t/**\n\t * Signals that the input is readonly.\n\t */\n\tReadonly = 1 << 1,\n\n\t/**\n\t * Signals that the input is untitled.\n\t */\n\tUntitled = 1 << 2,\n\n\t/**\n\t * Signals that the input can only be shown in one group\n\t * and not be split into multiple groups.\n\t */\n\tSingleton = 1 << 3,\n\n\t/**\n\t * Signals that the input requires workspace trust.\n\t */\n\tRequiresTrust = 1 << 4,\n\n\t/**\n\t * Signals that the editor can split into 2 in the same\n\t * editor group.\n\t */\n\tCanSplitInGroup = 1 << 5,\n\n\t/**\n\t * Signals that the editor wants it's description to be\n\t * visible when presented to the user. By default, a UI\n\t * component may decide to hide the description portion\n\t * for brevity.\n\t */\n\tForceDescription = 1 << 6,\n\n\t/**\n\t * Signals that the editor supports dropping into the\n\t * editor by holding shift.\n\t */\n\tCanDropIntoEditor = 1 << 7,\n\n\t/**\n\t * Signals that the editor is composed of multiple editors\n\t * within.\n\t */\n\tMultipleEditors = 1 << 8\n}\n\nexport type IUntypedEditorInput = IResourceEditorInput | ITextResourceEditorInput | IUntitledTextResourceEditorInput | IResourceDiffEditorInput | IResourceSideBySideEditorInput | IResourceMergeEditorInput;\n\nexport abstract class AbstractEditorInput extends Disposable {\n\t// Marker class for implementing `isEditorInput`\n}\n\nexport function isEditorInput(editor: unknown): editor is EditorInput {\n\treturn editor instanceof AbstractEditorInput;\n}\n\nexport interface EditorInputWithPreferredResource {\n\n\t/**\n\t * An editor may provide an additional preferred resource alongside\n\t * the `resource` property. While the `resource` property serves as\n\t * unique identifier of the editor that should be used whenever we\n\t * compare to other editors, the `preferredResource` should be used\n\t * in places where e.g. the resource is shown to the user.\n\t *\n\t * For example: on Windows and macOS, the same URI with different\n\t * casing may point to the same file. The editor may chose to\n\t * \"normalize\" the URIs so that only one editor opens for different\n\t * URIs. But when displaying the editor label to the user, the\n\t * preferred URI should be used.\n\t *\n\t * Not all editors have a `preferredResource`. The `EditorResourceAccessor`\n\t * utility can be used to always get the right resource without having\n\t * to do instanceof checks.\n\t */\n\treadonly preferredResource: URI;\n}\n\nfunction isEditorInputWithPreferredResource(editor: unknown): editor is EditorInputWithPreferredResource {\n\tconst candidate = editor as EditorInputWithPreferredResource | undefined;\n\n\treturn URI.isUri(candidate?.preferredResource);\n}\n\nexport interface ISideBySideEditorInput extends EditorInput {\n\n\t/**\n\t * The primary editor input is shown on the right hand side.\n\t */\n\tprimary: EditorInput;\n\n\t/**\n\t * The secondary editor input is shown on the left hand side.\n\t */\n\tsecondary: EditorInput;\n}\n\nexport function isSideBySideEditorInput(editor: unknown): editor is ISideBySideEditorInput {\n\tconst candidate = editor as ISideBySideEditorInput | undefined;\n\n\treturn isEditorInput(candidate?.primary) && isEditorInput(candidate?.secondary);\n}\n\nexport interface IDiffEditorInput extends EditorInput {\n\n\t/**\n\t * The modified (primary) editor input is shown on the right hand side.\n\t */\n\tmodified: EditorInput;\n\n\t/**\n\t * The original (secondary) editor input is shown on the left hand side.\n\t */\n\toriginal: EditorInput;\n}\n\nexport function isDiffEditorInput(editor: unknown): editor is IDiffEditorInput {\n\tconst candidate = editor as IDiffEditorInput | undefined;\n\n\treturn isEditorInput(candidate?.modified) && isEditorInput(candidate?.original);\n}\n\nexport interface IUntypedFileEditorInput extends ITextResourceEditorInput {\n\n\t/**\n\t * A marker to create a `IFileEditorInput` from this untyped input.\n\t */\n\tforceFile: true;\n}\n\n/**\n * This is a tagging interface to declare an editor input being capable of dealing with files. It is only used in the editor registry\n * to register this kind of input to the platform.\n */\nexport interface IFileEditorInput extends EditorInput, IEncodingSupport, ILanguageSupport, EditorInputWithPreferredResource {\n\n\t/**\n\t * Gets the resource this file input is about. This will always be the\n\t * canonical form of the resource, so it may differ from the original\n\t * resource that was provided to create the input. Use `preferredResource`\n\t * for the form as it was created.\n\t */\n\treadonly resource: URI;\n\n\t/**\n\t * Sets the preferred resource to use for this file input.\n\t */\n\tsetPreferredResource(preferredResource: URI): void;\n\n\t/**\n\t * Sets the preferred name to use for this file input.\n\t *\n\t * Note: for certain file schemes the input may decide to ignore this\n\t * name and use our standard naming. Specifically for schemes we own,\n\t * we do not let others override the name.\n\t */\n\tsetPreferredName(name: string): void;\n\n\t/**\n\t * Sets the preferred description to use for this file input.\n\t *\n\t * Note: for certain file schemes the input may decide to ignore this\n\t * description and use our standard naming. Specifically for schemes we own,\n\t * we do not let others override the description.\n\t */\n\tsetPreferredDescription(description: string): void;\n\n\t/**\n\t * Sets the preferred encoding to use for this file input.\n\t */\n\tsetPreferredEncoding(encoding: string): void;\n\n\t/**\n\t * Sets the preferred language id to use for this file input.\n\t */\n\tsetPreferredLanguageId(languageId: string): void;\n\n\t/**\n\t * Sets the preferred contents to use for this file input.\n\t */\n\tsetPreferredContents(contents: string): void;\n\n\t/**\n\t * Forces this file input to open as binary instead of text.\n\t */\n\tsetForceOpenAsBinary(): void;\n\n\t/**\n\t * Figure out if the file input has been resolved or not.\n\t */\n\tisResolved(): boolean;\n}\n\nexport interface EditorInputWithOptions {\n\teditor: EditorInput;\n\toptions?: IEditorOptions;\n}\n\nexport interface EditorInputWithOptionsAndGroup extends EditorInputWithOptions {\n\tgroup: IEditorGroup;\n}\n\nexport function isEditorInputWithOptions(editor: unknown): editor is EditorInputWithOptions {\n\tconst candidate = editor as EditorInputWithOptions | undefined;\n\n\treturn isEditorInput(candidate?.editor);\n}\n\nexport function isEditorInputWithOptionsAndGroup(editor: unknown): editor is EditorInputWithOptionsAndGroup {\n\tconst candidate = editor as EditorInputWithOptionsAndGroup | undefined;\n\n\treturn isEditorInputWithOptions(editor) && candidate?.group !== undefined;\n}\n\n/**\n * Context passed into `EditorPane#setInput` to give additional\n * context information around why the editor was opened.\n */\nexport interface IEditorOpenContext {\n\n\t/**\n\t * An indicator if the editor input is new for the group the editor is in.\n\t * An editor is new for a group if it was not part of the group before and\n\t * otherwise was already opened in the group and just became the active editor.\n\t *\n\t * This hint can e.g. be used to decide whether to restore view state or not.\n\t */\n\tnewInGroup?: boolean;\n}\n\nexport interface IEditorIdentifier {\n\tgroupId: GroupIdentifier;\n\teditor: EditorInput;\n}\n\nexport function isEditorIdentifier(identifier: unknown): identifier is IEditorIdentifier {\n\tconst candidate = identifier as IEditorIdentifier | undefined;\n\n\treturn typeof candidate?.groupId === 'number' && isEditorInput(candidate.editor);\n}\n\n/**\n * The editor commands context is used for editor commands (e.g. in the editor title)\n * and we must ensure that the context is serializable because it potentially travels\n * to the extension host!\n */\nexport interface IEditorCommandsContext {\n\tgroupId: GroupIdentifier;\n\teditorIndex?: number;\n\n\tpreserveFocus?: boolean;\n}\n\n/**\n * More information around why an editor was closed in the model.\n */\nexport enum EditorCloseContext {\n\n\t/**\n\t * No specific context for closing (e.g. explicit user gesture).\n\t */\n\tUNKNOWN,\n\n\t/**\n\t * The editor closed because it was replaced with another editor.\n\t * This can either happen via explicit replace call or when an\n\t * editor is in preview mode and another editor opens.\n\t */\n\tREPLACE,\n\n\t/**\n\t * The editor closed as a result of moving it to another group.\n\t */\n\tMOVE,\n\n\t/**\n\t * The editor closed because another editor turned into preview\n\t * and this used to be the preview editor before.\n\t */\n\tUNPIN\n}\n\nexport interface IEditorCloseEvent extends IEditorIdentifier {\n\n\t/**\n\t * More information around why the editor was closed.\n\t */\n\treadonly context: EditorCloseContext;\n\n\t/**\n\t * The index of the editor before closing.\n\t */\n\treadonly index: number;\n\n\t/**\n\t * Whether the editor was sticky or not.\n\t */\n\treadonly sticky: boolean;\n}\n\nexport interface IActiveEditorChangeEvent {\n\n\t/**\n\t * The new active editor or `undefined` if the group is empty.\n\t */\n\teditor: EditorInput | undefined;\n}\n\nexport interface IEditorWillMoveEvent extends IEditorIdentifier {\n\n\t/**\n\t * The target group of the move operation.\n\t */\n\treadonly target: GroupIdentifier;\n}\n\nexport interface IEditorWillOpenEvent extends IEditorIdentifier { }\n\nexport type GroupIdentifier = number;\n\nexport const enum GroupModelChangeKind {\n\n\t/* Group Changes */\n\tGROUP_ACTIVE,\n\tGROUP_INDEX,\n\tGROUP_LOCKED,\n\n\t/* Editor Changes */\n\tEDITOR_OPEN,\n\tEDITOR_CLOSE,\n\tEDITOR_MOVE,\n\tEDITOR_ACTIVE,\n\tEDITOR_LABEL,\n\tEDITOR_CAPABILITIES,\n\tEDITOR_PIN,\n\tEDITOR_STICKY,\n\tEDITOR_DIRTY,\n\tEDITOR_WILL_DISPOSE\n}\n\nexport interface IWorkbenchEditorConfiguration {\n\tworkbench?: {\n\t\teditor?: IEditorPartConfiguration;\n\t\ticonTheme?: string;\n\t};\n}\n\ninterface IEditorPartConfiguration {\n\tshowTabs?: boolean;\n\twrapTabs?: boolean;\n\tscrollToSwitchTabs?: boolean;\n\thighlightModifiedTabs?: boolean;\n\ttabCloseButton?: 'left' | 'right' | 'off';\n\ttabSizing?: 'fit' | 'shrink';\n\tpinnedTabSizing?: 'normal' | 'compact' | 'shrink';\n\ttitleScrollbarSizing?: 'default' | 'large';\n\tfocusRecentEditorAfterClose?: boolean;\n\tshowIcons?: boolean;\n\tenablePreview?: boolean;\n\tenablePreviewFromQuickOpen?: boolean;\n\tenablePreviewFromCodeNavigation?: boolean;\n\tcloseOnFileDelete?: boolean;\n\topenPositioning?: 'left' | 'right' | 'first' | 'last';\n\topenSideBySideDirection?: 'right' | 'down';\n\tcloseEmptyGroups?: boolean;\n\tautoLockGroups?: Set<string>;\n\trevealIfOpen?: boolean;\n\tmouseBackForwardToNavigate?: boolean;\n\tlabelFormat?: 'default' | 'short' | 'medium' | 'long';\n\trestoreViewState?: boolean;\n\tsplitInGroupLayout?: 'vertical' | 'horizontal';\n\tsplitSizing?: 'split' | 'distribute';\n\tsplitOnDragAndDrop?: boolean;\n\tlimit?: {\n\t\tenabled?: boolean;\n\t\texcludeDirty?: boolean;\n\t\tvalue?: number;\n\t\tperEditorGroup?: boolean;\n\t};\n\tdecorations?: {\n\t\tbadges?: boolean;\n\t\tcolors?: boolean;\n\t};\n}\n\nexport interface IEditorPartOptions extends IEditorPartConfiguration {\n\thasIcons?: boolean;\n}\n\nexport interface IEditorPartOptionsChangeEvent {\n\toldPartOptions: IEditorPartOptions;\n\tnewPartOptions: IEditorPartOptions;\n}\n\nexport enum SideBySideEditor {\n\tPRIMARY = 1,\n\tSECONDARY = 2,\n\tBOTH = 3,\n\tANY = 4\n}\n\nexport interface IFindEditorOptions {\n\n\t/**\n\t * Whether to consider any or both side by side editor as matching.\n\t * By default, side by side editors will not be considered\n\t * as matching, even if the editor is opened in one of the sides.\n\t */\n\tsupportSideBySide?: SideBySideEditor.PRIMARY | SideBySideEditor.SECONDARY | SideBySideEditor.ANY;\n}\n\nexport interface IMatchEditorOptions {\n\n\t/**\n\t * Whether to consider a side by side editor as matching.\n\t * By default, side by side editors will not be considered\n\t * as matching, even if the editor is opened in one of the sides.\n\t */\n\tsupportSideBySide?: SideBySideEditor.ANY | SideBySideEditor.BOTH;\n\n\t/**\n\t * Only consider an editor to match when the\n\t * `candidate === editor` but not when\n\t * `candidate.matches(editor)`.\n\t */\n\tstrictEquals?: boolean;\n}\n\nexport interface IEditorResourceAccessorOptions {\n\n\t/**\n\t * Allows to access the `resource(s)` of side by side editors. If not\n\t * specified, a `resource` for a side by side editor will always be\n\t * `undefined`.\n\t */\n\tsupportSideBySide?: SideBySideEditor;\n\n\t/**\n\t * Allows to filter the scheme to consider. A resource scheme that does\n\t * not match a filter will not be considered.\n\t */\n\tfilterByScheme?: string | string[];\n}\n\nclass EditorResourceAccessorImpl {\n\n\t/**\n\t * The original URI of an editor is the URI that was used originally to open\n\t * the editor and should be used whenever the URI is presented to the user,\n\t * e.g. as a label together with utility methods such as `ResourceLabel` or\n\t * `ILabelService` that can turn this original URI into the best form for\n\t * presenting.\n\t *\n\t * In contrast, the canonical URI (#getCanonicalUri) may be different and should\n\t * be used whenever the URI is used to e.g. compare with other editors or when\n\t * caching certain data based on the URI.\n\t *\n\t * For example: on Windows and macOS, the same file URI with different casing may\n\t * point to the same file. The editor may chose to \"normalize\" the URI into a canonical\n\t * form so that only one editor opens for same file URIs with different casing. As\n\t * such, the original URI and the canonical URI can be different.\n\t */\n\tgetOriginalUri(editor: EditorInput | IUntypedEditorInput | undefined | null): URI | undefined;\n\tgetOriginalUri(editor: EditorInput | IUntypedEditorInput | undefined | null, options: IEditorResourceAccessorOptions & { supportSideBySide?: SideBySideEditor.PRIMARY | SideBySideEditor.SECONDARY | SideBySideEditor.ANY }): URI | undefined;\n\tgetOriginalUri(editor: EditorInput | IUntypedEditorInput | undefined | null, options: IEditorResourceAccessorOptions & { supportSideBySide: SideBySideEditor.BOTH }): URI | { primary?: URI; secondary?: URI } | undefined;\n\tgetOriginalUri(editor: EditorInput | IUntypedEditorInput | undefined | null, options?: IEditorResourceAccessorOptions): URI | { primary?: URI; secondary?: URI } | undefined;\n\tgetOriginalUri(editor: EditorInput | IUntypedEditorInput | undefined | null, options?: IEditorResourceAccessorOptions): URI | { primary?: URI; secondary?: URI } | undefined {\n\t\tif (!editor) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Merge editors are handled with `merged` result editor\n\t\tif (isResourceMergeEditorInput(editor)) {\n\t\t\treturn EditorResourceAccessor.getOriginalUri(editor.result, options);\n\t\t}\n\n\t\t// Optionally support side-by-side editors\n\t\tif (options?.supportSideBySide) {\n\t\t\tconst { primary, secondary } = this.getSideEditors(editor);\n\t\t\tif (primary && secondary) {\n\t\t\t\tif (options?.supportSideBySide === SideBySideEditor.BOTH) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tprimary: this.getOriginalUri(primary, { filterByScheme: options.filterByScheme }),\n\t\t\t\t\t\tsecondary: this.getOriginalUri(secondary, { filterByScheme: options.filterByScheme })\n\t\t\t\t\t};\n\t\t\t\t} else if (options?.supportSideBySide === SideBySideEditor.ANY) {\n\t\t\t\t\treturn this.getOriginalUri(primary, { filterByScheme: options.filterByScheme }) ?? this.getOriginalUri(secondary, { filterByScheme: options.filterByScheme });\n\t\t\t\t}\n\n\t\t\t\teditor = options.supportSideBySide === SideBySideEditor.PRIMARY ? primary : secondary;\n\t\t\t}\n\t\t}\n\n\t\tif (isResourceDiffEditorInput(editor) || isResourceSideBySideEditorInput(editor) || isResourceMergeEditorInput(editor)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Original URI is the `preferredResource` of an editor if any\n\t\tconst originalResource = isEditorInputWithPreferredResource(editor) ? editor.preferredResource : editor.resource;\n\t\tif (!originalResource || !options || !options.filterByScheme) {\n\t\t\treturn originalResource;\n\t\t}\n\n\t\treturn this.filterUri(originalResource, options.filterByScheme);\n\t}\n\n\tprivate getSideEditors(editor: EditorInput | IUntypedEditorInput): { primary: EditorInput | IUntypedEditorInput | undefined; secondary: EditorInput | IUntypedEditorInput | undefined } {\n\t\tif (isSideBySideEditorInput(editor) || isResourceSideBySideEditorInput(editor)) {\n\t\t\treturn { primary: editor.primary, secondary: editor.secondary };\n\t\t}\n\n\t\tif (isDiffEditorInput(editor) || isResourceDiffEditorInput(editor)) {\n\t\t\treturn { primary: editor.modified, secondary: editor.original };\n\t\t}\n\n\t\treturn { primary: undefined, secondary: undefined };\n\t}\n\n\t/**\n\t * The canonical URI of an editor is the true unique identifier of the editor\n\t * and should be used whenever the URI is used e.g. to compare with other\n\t * editors or when caching certain data based on the URI.\n\t *\n\t * In contrast, the original URI (#getOriginalUri) may be different and should\n\t * be used whenever the URI is presented to the user, e.g. as a label.\n\t *\n\t * For example: on Windows and macOS, the same file URI with different casing may\n\t * point to the same file. The editor may chose to \"normalize\" the URI into a canonical\n\t * form so that only one editor opens for same file URIs with different casing. As\n\t * such, the original URI and the canonical URI can be different.\n\t */\n\tgetCanonicalUri(editor: EditorInput | IUntypedEditorInput | undefined | null): URI | undefined;\n\tgetCanonicalUri(editor: EditorInput | IUntypedEditorInput | undefined | null, options: IEditorResourceAccessorOptions & { supportSideBySide?: SideBySideEditor.PRIMARY | SideBySideEditor.SECONDARY | SideBySideEditor.ANY }): URI | undefined;\n\tgetCanonicalUri(editor: EditorInput | IUntypedEditorInput | undefined | null, options: IEditorResourceAccessorOptions & { supportSideBySide: SideBySideEditor.BOTH }): URI | { primary?: URI; secondary?: URI } | undefined;\n\tgetCanonicalUri(editor: EditorInput | IUntypedEditorInput | undefined | null, options?: IEditorResourceAccessorOptions): URI | { primary?: URI; secondary?: URI } | undefined;\n\tgetCanonicalUri(editor: EditorInput | IUntypedEditorInput | undefined | null, options?: IEditorResourceAccessorOptions): URI | { primary?: URI; secondary?: URI } | undefined {\n\t\tif (!editor) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Merge editors are handled with `merged` result editor\n\t\tif (isResourceMergeEditorInput(editor)) {\n\t\t\treturn EditorResourceAccessor.getCanonicalUri(editor.result, options);\n\t\t}\n\n\t\t// Optionally support side-by-side editors\n\t\tif (options?.supportSideBySide) {\n\t\t\tconst { primary, secondary } = this.getSideEditors(editor);\n\t\t\tif (primary && secondary) {\n\t\t\t\tif (options?.supportSideBySide === SideBySideEditor.BOTH) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tprimary: this.getCanonicalUri(primary, { filterByScheme: options.filterByScheme }),\n\t\t\t\t\t\tsecondary: this.getCanonicalUri(secondary, { filterByScheme: options.filterByScheme })\n\t\t\t\t\t};\n\t\t\t\t} else if (options?.supportSideBySide === SideBySideEditor.ANY) {\n\t\t\t\t\treturn this.getCanonicalUri(primary, { filterByScheme: options.filterByScheme }) ?? this.getCanonicalUri(secondary, { filterByScheme: options.filterByScheme });\n\t\t\t\t}\n\n\t\t\t\teditor = options.supportSideBySide === SideBySideEditor.PRIMARY ? primary : secondary;\n\t\t\t}\n\t\t}\n\n\t\tif (isResourceDiffEditorInput(editor) || isResourceSideBySideEditorInput(editor) || isResourceMergeEditorInput(editor)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Canonical URI is the `resource` of an editor\n\t\tconst canonicalResource = editor.resource;\n\t\tif (!canonicalResource || !options || !options.filterByScheme) {\n\t\t\treturn canonicalResource;\n\t\t}\n\n\t\treturn this.filterUri(canonicalResource, options.filterByScheme);\n\t}\n\n\tprivate filterUri(resource: URI, filter: string | string[]): URI | undefined {\n\n\t\t// Multiple scheme filter\n\t\tif (Array.isArray(filter)) {\n\t\t\tif (filter.some(scheme => resource.scheme === scheme)) {\n\t\t\t\treturn resource;\n\t\t\t}\n\t\t}\n\n\t\t// Single scheme filter\n\t\telse {\n\t\t\tif (filter === resource.scheme) {\n\t\t\t\treturn resource;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n}\n\nexport const EditorResourceAccessor = new EditorResourceAccessorImpl();\n\nexport const enum CloseDirection {\n\tLEFT,\n\tRIGHT\n}\n\nexport interface IEditorMemento<T> {\n\n\tsaveEditorState(group: IEditorGroup, resource: URI, state: T): void;\n\tsaveEditorState(group: IEditorGroup, editor: EditorInput, state: T): void;\n\n\tloadEditorState(group: IEditorGroup, resource: URI): T | undefined;\n\tloadEditorState(group: IEditorGroup, editor: EditorInput): T | undefined;\n\n\tclearEditorState(resource: URI, group?: IEditorGroup): void;\n\tclearEditorState(editor: EditorInput, group?: IEditorGroup): void;\n\n\tclearEditorStateOnDispose(resource: URI, editor: EditorInput): void;\n\n\tmoveEditorState(source: URI, target: URI, comparer: IExtUri): void;\n}\n\nclass EditorFactoryRegistry implements IEditorFactoryRegistry {\n\tprivate instantiationService: IInstantiationService | undefined;\n\n\tprivate fileEditorFactory: IFileEditorFactory | undefined;\n\n\tprivate readonly editorSerializerConstructors = new Map<string /* Type ID */, IConstructorSignature<IEditorSerializer>>();\n\tprivate readonly editorSerializerInstances = new Map<string /* Type ID */, IEditorSerializer>();\n\n\tstart(accessor: ServicesAccessor): void {\n\t\tconst instantiationService = this.instantiationService = accessor.get(IInstantiationService);\n\n\t\tfor (const [key, ctor] of this.editorSerializerConstructors) {\n\t\t\tthis.createEditorSerializer(key, ctor, instantiationService);\n\t\t}\n\n\t\tthis.editorSerializerConstructors.clear();\n\t}\n\n\tprivate createEditorSerializer(editorTypeId: string, ctor: IConstructorSignature<IEditorSerializer>, instantiationService: IInstantiationService): void {\n\t\tconst instance = instantiationService.createInstance(ctor);\n\t\tthis.editorSerializerInstances.set(editorTypeId, instance);\n\t}\n\n\tregisterFileEditorFactory(factory: IFileEditorFactory): void {\n\t\tif (this.fileEditorFactory) {\n\t\t\tthrow new Error('Can only register one file editor factory.');\n\t\t}\n\n\t\tthis.fileEditorFactory = factory;\n\t}\n\n\tgetFileEditorFactory(): IFileEditorFactory {\n\t\treturn assertIsDefined(this.fileEditorFactory);\n\t}\n\n\tregisterEditorSerializer(editorTypeId: string, ctor: IConstructorSignature<IEditorSerializer>): IDisposable {\n\t\tif (this.editorSerializerConstructors.has(editorTypeId) || this.editorSerializerInstances.has(editorTypeId)) {\n\t\t\tthrow new Error(`A editor serializer with type ID '${editorTypeId}' was already registered.`);\n\t\t}\n\n\t\tif (!this.instantiationService) {\n\t\t\tthis.editorSerializerConstructors.set(editorTypeId, ctor);\n\t\t} else {\n\t\t\tthis.createEditorSerializer(editorTypeId, ctor, this.instantiationService);\n\t\t}\n\n\t\treturn toDisposable(() => {\n\t\t\tthis.editorSerializerConstructors.delete(editorTypeId);\n\t\t\tthis.editorSerializerInstances.delete(editorTypeId);\n\t\t});\n\t}\n\n\tgetEditorSerializer(editor: EditorInput): IEditorSerializer | undefined;\n\tgetEditorSerializer(editorTypeId: string): IEditorSerializer | undefined;\n\tgetEditorSerializer(arg1: string | EditorInput): IEditorSerializer | undefined {\n\t\treturn this.editorSerializerInstances.get(typeof arg1 === 'string' ? arg1 : arg1.typeId);\n\t}\n}\n\nRegistry.add(EditorExtensions.EditorFactory, new EditorFactoryRegistry());\n\nexport async function pathsToEditors(paths: IPathData[] | undefined, fileService: IFileService): Promise<(IResourceEditorInput | IUntitledTextResourceEditorInput)[]> {\n\tif (!paths || !paths.length) {\n\t\treturn [];\n\t}\n\n\tconst editors = await Promise.all(paths.map(async path => {\n\t\tconst resource = URI.revive(path.fileUri);\n\t\tif (!resource) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst canHandleResource = await fileService.canHandleResource(resource);\n\t\tif (!canHandleResource) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet exists = path.exists;\n\t\tlet type = path.type;\n\t\tif (typeof exists !== 'boolean' || typeof type !== 'number') {\n\t\t\ttry {\n\t\t\t\ttype = (await fileService.stat(resource)).isDirectory ? FileType.Directory : FileType.Unknown;\n\t\t\t\texists = true;\n\t\t\t} catch {\n\t\t\t\texists = false;\n\t\t\t}\n\t\t}\n\n\t\tif (!exists && path.openOnlyIfExists) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (type === FileType.Directory) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst options: IEditorOptions = {\n\t\t\t...path.options,\n\t\t\tpinned: true\n\t\t};\n\n\t\tlet input: IResourceEditorInput | IUntitledTextResourceEditorInput;\n\t\tif (!exists) {\n\t\t\tinput = { resource, options, forceUntitled: true };\n\t\t} else {\n\t\t\tinput = { resource, options };\n\t\t}\n\n\t\treturn input;\n\t}));\n\n\treturn coalesce(editors);\n}\n\nexport const enum EditorsOrder {\n\n\t/**\n\t * Editors sorted by most recent activity (most recent active first)\n\t */\n\tMOST_RECENTLY_ACTIVE,\n\n\t/**\n\t * Editors sorted by sequential order\n\t */\n\tSEQUENTIAL\n}\n\nexport function isTextEditorViewState(candidate: unknown): candidate is IEditorViewState {\n\tconst viewState = candidate as IEditorViewState | undefined;\n\tif (!viewState) {\n\t\treturn false;\n\t}\n\n\tconst diffEditorViewState = viewState as IDiffEditorViewState;\n\tif (diffEditorViewState.modified) {\n\t\treturn isTextEditorViewState(diffEditorViewState.modified);\n\t}\n\n\tconst codeEditorViewState = viewState as ICodeEditorViewState;\n\n\treturn !!(codeEditorViewState.contributionsState && codeEditorViewState.viewState && Array.isArray(codeEditorViewState.cursorState));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { decodeBase64, encodeBase64, VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IDiffResult } from 'vs/base/common/diff/diff';\nimport { Event } from 'vs/base/common/event';\nimport * as glob from 'vs/base/common/glob';\nimport { Iterable } from 'vs/base/common/iterator';\nimport { Mimes } from 'vs/base/common/mime';\nimport { Schemas } from 'vs/base/common/network';\nimport { basename } from 'vs/base/common/path';\nimport { isWindows } from 'vs/base/common/platform';\nimport { ISplice } from 'vs/base/common/sequence';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { ILineChange } from 'vs/editor/common/diff/diffComputer';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport { Command, WorkspaceEditMetadata } from 'vs/editor/common/languages';\nimport { IReadonlyTextBuffer } from 'vs/editor/common/model';\nimport { IAccessibilityInformation } from 'vs/platform/accessibility/common/accessibility';\nimport { RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { IEditorModel } from 'vs/platform/editor/common/editor';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { ThemeColor } from 'vs/platform/theme/common/themeService';\nimport { UndoRedoGroup } from 'vs/platform/undoRedo/common/undoRedo';\nimport { IRevertOptions, ISaveOptions, IUntypedEditorInput } from 'vs/workbench/common/editor';\nimport { NotebookTextModel } from 'vs/workbench/contrib/notebook/common/model/notebookTextModel';\nimport { ICellRange } from 'vs/workbench/contrib/notebook/common/notebookRange';\nimport { IWorkingCopyBackupMeta, IWorkingCopySaveEvent } from 'vs/workbench/services/workingCopy/common/workingCopy';\n\nexport const NOTEBOOK_EDITOR_ID = 'workbench.editor.notebook';\nexport const NOTEBOOK_DIFF_EDITOR_ID = 'workbench.editor.notebookTextDiffEditor';\n\n\nexport enum CellKind {\n\tMarkup = 1,\n\tCode = 2\n}\n\nexport const NOTEBOOK_DISPLAY_ORDER: readonly string[] = [\n\t'application/json',\n\t'application/javascript',\n\t'text/html',\n\t'image/svg+xml',\n\tMimes.latex,\n\tMimes.markdown,\n\t'image/png',\n\t'image/jpeg',\n\tMimes.text\n];\n\nexport const ACCESSIBLE_NOTEBOOK_DISPLAY_ORDER: readonly string[] = [\n\tMimes.latex,\n\tMimes.markdown,\n\t'application/json',\n\tMimes.text,\n\t'text/html',\n\t'image/svg+xml',\n\t'image/png',\n\t'image/jpeg',\n];\n\n/**\n * A mapping of extension IDs who contain renderers, to notebook ids who they\n * should be treated as the same in the renderer selection logic. This is used\n * to prefer the 1st party Jupyter renderers even though they're in a separate\n * extension, for instance. See #136247.\n */\nexport const RENDERER_EQUIVALENT_EXTENSIONS: ReadonlyMap<string, ReadonlySet<string>> = new Map([\n\t['ms-toolsai.jupyter', new Set(['jupyter-notebook', 'interactive'])],\n\t['ms-toolsai.jupyter-renderers', new Set(['jupyter-notebook', 'interactive'])],\n]);\n\nexport const RENDERER_NOT_AVAILABLE = '_notAvailable';\n\nexport type NotebookRendererEntrypoint = string | { readonly extends: string; readonly path: string };\n\nexport enum NotebookRunState {\n\tRunning = 1,\n\tIdle = 2\n}\n\nexport type NotebookDocumentMetadata = Record<string, unknown>;\n\nexport enum NotebookCellExecutionState {\n\tUnconfirmed = 1,\n\tPending = 2,\n\tExecuting = 3\n}\n\nexport interface INotebookCellPreviousExecutionResult {\n\texecutionOrder?: number;\n\tsuccess?: boolean;\n\tduration?: number;\n}\n\nexport interface NotebookCellMetadata {\n\t/**\n\t * custom metadata\n\t */\n\t[key: string]: unknown;\n}\n\nexport interface NotebookCellInternalMetadata {\n\texecutionOrder?: number;\n\tlastRunSuccess?: boolean;\n\trunStartTime?: number;\n\trunStartTimeAdjustment?: number;\n\trunEndTime?: number;\n}\n\nexport interface NotebookCellCollapseState {\n\tinputCollapsed?: boolean;\n\toutputCollapsed?: boolean;\n}\n\nexport interface NotebookCellDefaultCollapseConfig {\n\tcodeCell?: NotebookCellCollapseState;\n\tmarkupCell?: NotebookCellCollapseState;\n}\n\nexport type InteractiveWindowCollapseCodeCells = 'always' | 'never' | 'fromEditor';\n\nexport type TransientCellMetadata = { [K in keyof NotebookCellMetadata]?: boolean };\nexport type TransientDocumentMetadata = { [K in keyof NotebookDocumentMetadata]?: boolean };\n\nexport interface TransientOptions {\n\ttransientOutputs: boolean;\n\ttransientCellMetadata: TransientCellMetadata;\n\ttransientDocumentMetadata: TransientDocumentMetadata;\n}\n\n/** Note: enum values are used for sorting */\nexport const enum NotebookRendererMatch {\n\t/** Renderer has a hard dependency on an available kernel */\n\tWithHardKernelDependency = 0,\n\t/** Renderer works better with an available kernel */\n\tWithOptionalKernelDependency = 1,\n\t/** Renderer is kernel-agnostic */\n\tPure = 2,\n\t/** Renderer is for a different mimeType or has a hard dependency which is unsatisfied */\n\tNever = 3,\n}\n\n/**\n * Renderer messaging requirement. While this allows for 'optional' messaging,\n * VS Code effectively treats it the same as true right now. \"Partial\n * activation\" of extensions is a very tricky problem, which could allow\n * solving this. But for now, optional is mostly only honored for aznb.\n */\nexport const enum RendererMessagingSpec {\n\tAlways = 'always',\n\tNever = 'never',\n\tOptional = 'optional',\n}\n\nexport interface INotebookRendererInfo {\n\tid: string;\n\tdisplayName: string;\n\textends?: string;\n\tentrypoint: URI;\n\tpreloads: ReadonlyArray<URI>;\n\textensionLocation: URI;\n\textensionId: ExtensionIdentifier;\n\tmessaging: RendererMessagingSpec;\n\n\treadonly mimeTypes: readonly string[];\n\n\treadonly dependencies: readonly string[];\n\n\treadonly isBuiltin: boolean;\n\n\tmatchesWithoutKernel(mimeType: string): NotebookRendererMatch;\n\tmatches(mimeType: string, kernelProvides: ReadonlyArray<string>): NotebookRendererMatch;\n}\n\n\nexport interface IOrderedMimeType {\n\tmimeType: string;\n\trendererId: string;\n\tisTrusted: boolean;\n}\n\nexport interface IOutputItemDto {\n\treadonly mime: string;\n\treadonly data: VSBuffer;\n}\n\nexport interface IOutputDto {\n\toutputs: IOutputItemDto[];\n\toutputId: string;\n\tmetadata?: Record<string, any>;\n}\n\nexport interface ICellOutput {\n\toutputs: IOutputItemDto[];\n\tmetadata?: Record<string, any>;\n\toutputId: string;\n\tonDidChangeData: Event<void>;\n\treplaceData(items: IOutputItemDto[]): void;\n\tappendData(items: IOutputItemDto[]): void;\n}\n\nexport interface CellInternalMetadataChangedEvent {\n\treadonly lastRunSuccessChanged?: boolean;\n}\n\nexport interface ICell {\n\treadonly uri: URI;\n\thandle: number;\n\tlanguage: string;\n\tcellKind: CellKind;\n\toutputs: ICellOutput[];\n\tmetadata: NotebookCellMetadata;\n\tinternalMetadata: NotebookCellInternalMetadata;\n\tgetHashValue(): number;\n\ttextBuffer: IReadonlyTextBuffer;\n\tonDidChangeOutputs?: Event<NotebookCellOutputsSplice>;\n\tonDidChangeOutputItems?: Event<void>;\n\tonDidChangeLanguage: Event<string>;\n\tonDidChangeMetadata: Event<void>;\n\tonDidChangeInternalMetadata: Event<CellInternalMetadataChangedEvent>;\n}\n\nexport interface INotebookTextModel {\n\treadonly viewType: string;\n\tmetadata: NotebookDocumentMetadata;\n\treadonly transientOptions: TransientOptions;\n\treadonly uri: URI;\n\treadonly versionId: number;\n\treadonly length: number;\n\treadonly cells: readonly ICell[];\n\treset(cells: ICellDto2[], metadata: NotebookDocumentMetadata, transientOptions: TransientOptions): void;\n\tapplyEdits(rawEdits: ICellEditOperation[], synchronous: boolean, beginSelectionState: ISelectionState | undefined, endSelectionsComputer: () => ISelectionState | undefined, undoRedoGroup: UndoRedoGroup | undefined, computeUndoRedo?: boolean): boolean;\n\tonDidChangeContent: Event<NotebookTextModelChangedEvent>;\n\tonWillDispose: Event<void>;\n}\n\nexport type NotebookCellTextModelSplice<T> = [\n\tstart: number,\n\tdeleteCount: number,\n\tnewItems: T[]\n];\n\nexport type NotebookCellOutputsSplice = {\n\tstart: number /* start */;\n\tdeleteCount: number /* delete count */;\n\tnewOutputs: ICellOutput[];\n};\n\nexport interface IMainCellDto {\n\thandle: number;\n\turi: UriComponents;\n\tsource: string[];\n\teol: string;\n\tlanguage: string;\n\tcellKind: CellKind;\n\toutputs: IOutputDto[];\n\tmetadata?: NotebookCellMetadata;\n\tinternalMetadata?: NotebookCellInternalMetadata;\n}\n\nexport enum NotebookCellsChangeType {\n\tModelChange = 1,\n\tMove = 2,\n\tChangeCellLanguage = 5,\n\tInitialize = 6,\n\tChangeCellMetadata = 7,\n\tOutput = 8,\n\tOutputItem = 9,\n\tChangeCellContent = 10,\n\tChangeDocumentMetadata = 11,\n\tChangeCellInternalMetadata = 12,\n\tChangeCellMime = 13,\n\tUnknown = 100\n}\n\nexport interface NotebookCellsInitializeEvent<T> {\n\treadonly kind: NotebookCellsChangeType.Initialize;\n\treadonly changes: NotebookCellTextModelSplice<T>[];\n}\n\nexport interface NotebookCellContentChangeEvent {\n\treadonly kind: NotebookCellsChangeType.ChangeCellContent;\n\treadonly index: number;\n}\n\nexport interface NotebookCellsModelChangedEvent<T> {\n\treadonly kind: NotebookCellsChangeType.ModelChange;\n\treadonly changes: NotebookCellTextModelSplice<T>[];\n}\n\nexport interface NotebookCellsModelMoveEvent<T> {\n\treadonly kind: NotebookCellsChangeType.Move;\n\treadonly index: number;\n\treadonly length: number;\n\treadonly newIdx: number;\n\treadonly cells: T[];\n}\n\nexport interface NotebookOutputChangedEvent {\n\treadonly kind: NotebookCellsChangeType.Output;\n\treadonly index: number;\n\treadonly outputs: IOutputDto[];\n\treadonly append: boolean;\n}\n\nexport interface NotebookOutputItemChangedEvent {\n\treadonly kind: NotebookCellsChangeType.OutputItem;\n\treadonly index: number;\n\treadonly outputId: string;\n\treadonly outputItems: IOutputItemDto[];\n\treadonly append: boolean;\n}\n\nexport interface NotebookCellsChangeLanguageEvent {\n\treadonly kind: NotebookCellsChangeType.ChangeCellLanguage;\n\treadonly index: number;\n\treadonly language: string;\n}\n\nexport interface NotebookCellsChangeMimeEvent {\n\treadonly kind: NotebookCellsChangeType.ChangeCellMime;\n\treadonly index: number;\n\treadonly mime: string | undefined;\n}\n\nexport interface NotebookCellsChangeMetadataEvent {\n\treadonly kind: NotebookCellsChangeType.ChangeCellMetadata;\n\treadonly index: number;\n\treadonly metadata: NotebookCellMetadata;\n}\n\nexport interface NotebookCellsChangeInternalMetadataEvent {\n\treadonly kind: NotebookCellsChangeType.ChangeCellInternalMetadata;\n\treadonly index: number;\n\treadonly internalMetadata: NotebookCellInternalMetadata;\n}\n\nexport interface NotebookDocumentChangeMetadataEvent {\n\treadonly kind: NotebookCellsChangeType.ChangeDocumentMetadata;\n\treadonly metadata: NotebookDocumentMetadata;\n}\n\nexport interface NotebookDocumentUnknownChangeEvent {\n\treadonly kind: NotebookCellsChangeType.Unknown;\n}\n\nexport type NotebookRawContentEventDto = NotebookCellsInitializeEvent<IMainCellDto> | NotebookDocumentChangeMetadataEvent | NotebookCellContentChangeEvent | NotebookCellsModelChangedEvent<IMainCellDto> | NotebookCellsModelMoveEvent<IMainCellDto> | NotebookOutputChangedEvent | NotebookOutputItemChangedEvent | NotebookCellsChangeLanguageEvent | NotebookCellsChangeMimeEvent | NotebookCellsChangeMetadataEvent | NotebookCellsChangeInternalMetadataEvent | NotebookDocumentUnknownChangeEvent;\n\nexport type NotebookCellsChangedEventDto = {\n\treadonly rawEvents: NotebookRawContentEventDto[];\n\treadonly versionId: number;\n};\n\nexport type NotebookRawContentEvent = (NotebookCellsInitializeEvent<ICell> | NotebookDocumentChangeMetadataEvent | NotebookCellContentChangeEvent | NotebookCellsModelChangedEvent<ICell> | NotebookCellsModelMoveEvent<ICell> | NotebookOutputChangedEvent | NotebookOutputItemChangedEvent | NotebookCellsChangeLanguageEvent | NotebookCellsChangeMimeEvent | NotebookCellsChangeMetadataEvent | NotebookCellsChangeInternalMetadataEvent | NotebookDocumentUnknownChangeEvent) & { transient: boolean };\n\nexport enum SelectionStateType {\n\tHandle = 0,\n\tIndex = 1\n}\n\nexport interface ISelectionHandleState {\n\tkind: SelectionStateType.Handle;\n\tprimary: number | null;\n\tselections: number[];\n}\n\nexport interface ISelectionIndexState {\n\tkind: SelectionStateType.Index;\n\tfocus: ICellRange;\n\tselections: ICellRange[];\n}\n\nexport type ISelectionState = ISelectionHandleState | ISelectionIndexState;\n\nexport type NotebookTextModelChangedEvent = {\n\treadonly rawEvents: NotebookRawContentEvent[];\n\treadonly versionId: number;\n\treadonly synchronous: boolean | undefined;\n\treadonly endSelectionState: ISelectionState | undefined;\n};\n\nexport type NotebookTextModelWillAddRemoveEvent = {\n\treadonly rawEvent: NotebookCellsModelChangedEvent<ICell>;\n};\n\nexport const enum CellEditType {\n\tReplace = 1,\n\tOutput = 2,\n\tMetadata = 3,\n\tCellLanguage = 4,\n\tDocumentMetadata = 5,\n\tMove = 6,\n\tOutputItems = 7,\n\tPartialMetadata = 8,\n\tPartialInternalMetadata = 9,\n}\n\nexport interface ICellDto2 {\n\tsource: string;\n\tlanguage: string;\n\tmime: string | undefined;\n\tcellKind: CellKind;\n\toutputs: IOutputDto[];\n\tmetadata?: NotebookCellMetadata;\n\tinternalMetadata?: NotebookCellInternalMetadata;\n\tcollapseState?: NotebookCellCollapseState;\n}\n\nexport interface ICellReplaceEdit {\n\teditType: CellEditType.Replace;\n\tindex: number;\n\tcount: number;\n\tcells: ICellDto2[];\n}\n\nexport interface ICellOutputEdit {\n\teditType: CellEditType.Output;\n\tindex: number;\n\toutputs: IOutputDto[];\n\tappend?: boolean;\n}\n\nexport interface ICellOutputEditByHandle {\n\teditType: CellEditType.Output;\n\thandle: number;\n\toutputs: IOutputDto[];\n\tappend?: boolean;\n}\n\nexport interface ICellOutputItemEdit {\n\teditType: CellEditType.OutputItems;\n\toutputId: string;\n\titems: IOutputItemDto[];\n\tappend?: boolean;\n}\n\nexport interface ICellMetadataEdit {\n\teditType: CellEditType.Metadata;\n\tindex: number;\n\tmetadata: NotebookCellMetadata;\n}\n\n// These types are nullable because we need to use 'null' on the EH side so it is JSON-stringified\nexport type NullablePartialNotebookCellMetadata = {\n\t[Key in keyof Partial<NotebookCellMetadata>]: NotebookCellMetadata[Key] | null\n};\n\nexport interface ICellPartialMetadataEdit {\n\teditType: CellEditType.PartialMetadata;\n\tindex: number;\n\tmetadata: NullablePartialNotebookCellMetadata;\n}\n\nexport interface ICellPartialMetadataEditByHandle {\n\teditType: CellEditType.PartialMetadata;\n\thandle: number;\n\tmetadata: NullablePartialNotebookCellMetadata;\n}\n\nexport type NullablePartialNotebookCellInternalMetadata = {\n\t[Key in keyof Partial<NotebookCellInternalMetadata>]: NotebookCellInternalMetadata[Key] | null\n};\nexport interface ICellPartialInternalMetadataEdit {\n\teditType: CellEditType.PartialInternalMetadata;\n\tindex: number;\n\tinternalMetadata: NullablePartialNotebookCellInternalMetadata;\n}\n\nexport interface ICellPartialInternalMetadataEditByHandle {\n\teditType: CellEditType.PartialInternalMetadata;\n\thandle: number;\n\tinternalMetadata: NullablePartialNotebookCellInternalMetadata;\n}\n\nexport interface ICellLanguageEdit {\n\teditType: CellEditType.CellLanguage;\n\tindex: number;\n\tlanguage: string;\n}\n\nexport interface IDocumentMetadataEdit {\n\teditType: CellEditType.DocumentMetadata;\n\tmetadata: NotebookDocumentMetadata;\n}\n\nexport interface ICellMoveEdit {\n\teditType: CellEditType.Move;\n\tindex: number;\n\tlength: number;\n\tnewIdx: number;\n}\n\nexport type IImmediateCellEditOperation = ICellOutputEditByHandle | ICellPartialMetadataEditByHandle | ICellOutputItemEdit | ICellPartialInternalMetadataEdit | ICellPartialInternalMetadataEditByHandle | ICellPartialMetadataEdit;\nexport type ICellEditOperation = IImmediateCellEditOperation | ICellReplaceEdit | ICellOutputEdit | ICellMetadataEdit | ICellPartialMetadataEdit | ICellPartialInternalMetadataEdit | IDocumentMetadataEdit | ICellMoveEdit | ICellOutputItemEdit | ICellLanguageEdit;\n\n\nexport interface IWorkspaceNotebookCellEdit {\n\tmetadata?: WorkspaceEditMetadata;\n\tresource: URI;\n\tnotebookVersionId: number | undefined;\n\tcellEdit: ICellPartialMetadataEdit | IDocumentMetadataEdit | ICellReplaceEdit;\n}\n\nexport interface NotebookData {\n\treadonly cells: ICellDto2[];\n\treadonly metadata: NotebookDocumentMetadata;\n}\n\n\nexport interface INotebookContributionData {\n\textension?: ExtensionIdentifier;\n\tproviderDisplayName: string;\n\tdisplayName: string;\n\tfilenamePattern: (string | glob.IRelativePattern | INotebookExclusiveDocumentFilter)[];\n\texclusive: boolean;\n}\n\n\nexport namespace CellUri {\n\n\texport const scheme = Schemas.vscodeNotebookCell;\n\n\n\tconst _lengths = ['W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f'];\n\tconst _padRegexp = new RegExp(`^[${_lengths.join('')}]+`);\n\tconst _radix = 7;\n\n\texport function generate(notebook: URI, handle: number): URI {\n\n\t\tconst s = handle.toString(_radix);\n\t\tconst p = s.length < _lengths.length ? _lengths[s.length - 1] : 'z';\n\n\t\tconst fragment = `${p}${s}s${encodeBase64(VSBuffer.fromString(notebook.scheme), true, true)}`;\n\t\treturn notebook.with({ scheme, fragment });\n\t}\n\n\texport function parse(cell: URI): { notebook: URI; handle: number } | undefined {\n\t\tif (cell.scheme !== scheme) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst idx = cell.fragment.indexOf('s');\n\t\tif (idx < 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst handle = parseInt(cell.fragment.substring(0, idx).replace(_padRegexp, ''), _radix);\n\t\tconst _scheme = decodeBase64(cell.fragment.substring(idx + 1)).toString();\n\n\t\tif (isNaN(handle)) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn {\n\t\t\thandle,\n\t\t\tnotebook: cell.with({ scheme: _scheme, fragment: null })\n\t\t};\n\t}\n\n\n\tconst _regex = /^(\\d{8,})(\\w[\\w\\d+.-]*)$/;\n\n\texport function generateCellOutputUri(notebook: URI, outputId?: string) {\n\t\treturn notebook.with({\n\t\t\tscheme: Schemas.vscodeNotebookCellOutput,\n\t\t\tfragment: `op${outputId ?? ''},${notebook.scheme !== Schemas.file ? notebook.scheme : ''}`\n\t\t});\n\t}\n\n\texport function parseCellOutputUri(uri: URI): { notebook: URI; outputId?: string } | undefined {\n\t\tif (uri.scheme !== Schemas.vscodeNotebookCellOutput) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst match = /^op([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})?\\,(.*)$/i.exec(uri.fragment);\n\t\tif (!match) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst outputId = (match[1] && match[1] !== '') ? match[1] : undefined;\n\t\tconst scheme = match[2];\n\t\treturn {\n\t\t\toutputId,\n\t\t\tnotebook: uri.with({\n\t\t\t\tscheme: scheme || Schemas.file,\n\t\t\t\tfragment: null\n\t\t\t})\n\t\t};\n\t}\n\n\texport function generateCellUri(notebook: URI, handle: number, scheme: string): URI {\n\t\treturn notebook.with({\n\t\t\tscheme: scheme,\n\t\t\tfragment: `ch${handle.toString().padStart(7, '0')}${notebook.scheme !== Schemas.file ? notebook.scheme : ''}`\n\t\t});\n\t}\n\n\texport function parseCellUri(metadata: URI, scheme: string) {\n\t\tif (metadata.scheme !== scheme) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst match = _regex.exec(metadata.fragment);\n\t\tif (!match) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst handle = Number(match[1]);\n\t\treturn {\n\t\t\thandle,\n\t\t\tnotebook: metadata.with({\n\t\t\t\tscheme: metadata.fragment.substring(match[0].length) || Schemas.file,\n\t\t\t\tfragment: null\n\t\t\t})\n\t\t};\n\t}\n}\n\nconst normalizeSlashes = (str: string) => isWindows ? str.replace(/\\//g, '\\\\') : str;\n\ninterface IMimeTypeWithMatcher {\n\tpattern: string;\n\tmatches: glob.ParsedPattern;\n}\n\nexport class MimeTypeDisplayOrder {\n\tprivate readonly order: IMimeTypeWithMatcher[];\n\n\tconstructor(\n\t\tinitialValue: readonly string[] = [],\n\t\tprivate readonly defaultOrder = NOTEBOOK_DISPLAY_ORDER,\n\t) {\n\t\tthis.order = [...new Set(initialValue)].map(pattern => ({\n\t\t\tpattern,\n\t\t\tmatches: glob.parse(normalizeSlashes(pattern))\n\t\t}));\n\t}\n\n\t/**\n\t * Returns a sorted array of the input mimetypes.\n\t */\n\tpublic sort(mimetypes: Iterable<string>): string[] {\n\t\tconst remaining = new Map(Iterable.map(mimetypes, m => [m, normalizeSlashes(m)]));\n\t\tlet sorted: string[] = [];\n\n\t\tfor (const { matches } of this.order) {\n\t\t\tfor (const [original, normalized] of remaining) {\n\t\t\t\tif (matches(normalized)) {\n\t\t\t\t\tsorted.push(original);\n\t\t\t\t\tremaining.delete(original);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (remaining.size) {\n\t\t\tsorted = sorted.concat([...remaining.keys()].sort(\n\t\t\t\t(a, b) => this.defaultOrder.indexOf(a) - this.defaultOrder.indexOf(b),\n\t\t\t));\n\t\t}\n\n\t\treturn sorted;\n\t}\n\n\t/**\n\t * Records that the user selected the given mimetype over the other\n\t * possible mimetypes, prioritizing it for future reference.\n\t */\n\tpublic prioritize(chosenMimetype: string, otherMimetypes: readonly string[]) {\n\t\tconst chosenIndex = this.findIndex(chosenMimetype);\n\t\tif (chosenIndex === -1) {\n\t\t\t// always first, nothing more to do\n\t\t\tthis.order.unshift({ pattern: chosenMimetype, matches: glob.parse(normalizeSlashes(chosenMimetype)) });\n\t\t\treturn;\n\t\t}\n\n\t\t// Get the other mimetypes that are before the chosenMimetype. Then, move\n\t\t// them after it, retaining order.\n\t\tconst uniqueIndicies = new Set(otherMimetypes.map(m => this.findIndex(m, chosenIndex)));\n\t\tuniqueIndicies.delete(-1);\n\t\tconst otherIndices = Array.from(uniqueIndicies).sort();\n\t\tthis.order.splice(chosenIndex + 1, 0, ...otherIndices.map(i => this.order[i]));\n\n\t\tfor (let oi = otherIndices.length - 1; oi >= 0; oi--) {\n\t\t\tthis.order.splice(otherIndices[oi], 1);\n\t\t}\n\t}\n\n\t/**\n\t * Gets an array of in-order mimetype preferences.\n\t */\n\tpublic toArray() {\n\t\treturn this.order.map(o => o.pattern);\n\t}\n\n\tprivate findIndex(mimeType: string, maxIndex = this.order.length) {\n\t\tconst normalized = normalizeSlashes(mimeType);\n\t\tfor (let i = 0; i < maxIndex; i++) {\n\t\t\tif (this.order[i].matches(normalized)) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t\treturn -1;\n\t}\n}\n\ninterface IMutableSplice<T> extends ISplice<T> {\n\tdeleteCount: number;\n}\n\nexport function diff<T>(before: T[], after: T[], contains: (a: T) => boolean, equal: (a: T, b: T) => boolean = (a: T, b: T) => a === b): ISplice<T>[] {\n\tconst result: IMutableSplice<T>[] = [];\n\n\tfunction pushSplice(start: number, deleteCount: number, toInsert: T[]): void {\n\t\tif (deleteCount === 0 && toInsert.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst latest = result[result.length - 1];\n\n\t\tif (latest && latest.start + latest.deleteCount === start) {\n\t\t\tlatest.deleteCount += deleteCount;\n\t\t\tlatest.toInsert.push(...toInsert);\n\t\t} else {\n\t\t\tresult.push({ start, deleteCount, toInsert });\n\t\t}\n\t}\n\n\tlet beforeIdx = 0;\n\tlet afterIdx = 0;\n\n\twhile (true) {\n\t\tif (beforeIdx === before.length) {\n\t\t\tpushSplice(beforeIdx, 0, after.slice(afterIdx));\n\t\t\tbreak;\n\t\t}\n\n\t\tif (afterIdx === after.length) {\n\t\t\tpushSplice(beforeIdx, before.length - beforeIdx, []);\n\t\t\tbreak;\n\t\t}\n\n\t\tconst beforeElement = before[beforeIdx];\n\t\tconst afterElement = after[afterIdx];\n\n\t\tif (equal(beforeElement, afterElement)) {\n\t\t\t// equal\n\t\t\tbeforeIdx += 1;\n\t\t\tafterIdx += 1;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (contains(afterElement)) {\n\t\t\t// `afterElement` exists before, which means some elements before `afterElement` are deleted\n\t\t\tpushSplice(beforeIdx, 1, []);\n\t\t\tbeforeIdx += 1;\n\t\t} else {\n\t\t\t// `afterElement` added\n\t\t\tpushSplice(beforeIdx, 0, [afterElement]);\n\t\t\tafterIdx += 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport interface ICellEditorViewState {\n\tselections: editorCommon.ICursorState[];\n}\n\nexport const NOTEBOOK_EDITOR_CURSOR_BOUNDARY = new RawContextKey<'none' | 'top' | 'bottom' | 'both'>('notebookEditorCursorAtBoundary', 'none');\n\n\nexport interface INotebookLoadOptions {\n\t/**\n\t * Go to disk bypassing any cache of the model if any.\n\t */\n\tforceReadFromFile?: boolean;\n}\n\nexport interface IResolvedNotebookEditorModel extends INotebookEditorModel {\n\tnotebook: NotebookTextModel;\n}\n\nexport interface INotebookEditorModel extends IEditorModel {\n\treadonly onDidChangeDirty: Event<void>;\n\treadonly onDidSave: Event<IWorkingCopySaveEvent>;\n\treadonly onDidChangeOrphaned: Event<void>;\n\treadonly onDidChangeReadonly: Event<void>;\n\treadonly resource: URI;\n\treadonly viewType: string;\n\treadonly notebook: INotebookTextModel | undefined;\n\tisResolved(): this is IResolvedNotebookEditorModel;\n\tisDirty(): boolean;\n\tisReadonly(): boolean;\n\tisOrphaned(): boolean;\n\thasAssociatedFilePath(): boolean;\n\tload(options?: INotebookLoadOptions): Promise<IResolvedNotebookEditorModel>;\n\tsave(options?: ISaveOptions): Promise<boolean>;\n\tsaveAs(target: URI): Promise<IUntypedEditorInput | undefined>;\n\trevert(options?: IRevertOptions): Promise<void>;\n}\n\nexport interface INotebookDiffEditorModel extends IEditorModel {\n\toriginal: IResolvedNotebookEditorModel;\n\tmodified: IResolvedNotebookEditorModel;\n}\n\nexport interface NotebookDocumentBackupData extends IWorkingCopyBackupMeta {\n\treadonly viewType: string;\n\treadonly backupId?: string;\n\treadonly mtime?: number;\n}\n\nexport enum NotebookEditorPriority {\n\tdefault = 'default',\n\toption = 'option',\n}\n\nexport interface INotebookSearchOptions {\n\tregex?: boolean;\n\twholeWord?: boolean;\n\tcaseSensitive?: boolean;\n\twordSeparators?: string;\n\tincludeMarkupInput?: boolean;\n\tincludeMarkupPreview?: boolean;\n\tincludeCodeInput?: boolean;\n\tincludeOutput?: boolean;\n}\n\nexport interface INotebookExclusiveDocumentFilter {\n\tinclude?: string | glob.IRelativePattern;\n\texclude?: string | glob.IRelativePattern;\n}\n\nexport interface INotebookDocumentFilter {\n\tviewType?: string | string[];\n\tfilenamePattern?: string | glob.IRelativePattern | INotebookExclusiveDocumentFilter;\n}\n\n//TODO@rebornix test\n\nexport function isDocumentExcludePattern(filenamePattern: string | glob.IRelativePattern | INotebookExclusiveDocumentFilter): filenamePattern is { include: string | glob.IRelativePattern; exclude: string | glob.IRelativePattern } {\n\tconst arg = filenamePattern as INotebookExclusiveDocumentFilter;\n\n\tif ((typeof arg.include === 'string' || glob.isRelativePattern(arg.include))\n\t\t&& (typeof arg.exclude === 'string' || glob.isRelativePattern(arg.exclude))) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\nexport function notebookDocumentFilterMatch(filter: INotebookDocumentFilter, viewType: string, resource: URI): boolean {\n\tif (Array.isArray(filter.viewType) && filter.viewType.indexOf(viewType) >= 0) {\n\t\treturn true;\n\t}\n\n\tif (filter.viewType === viewType) {\n\t\treturn true;\n\t}\n\n\tif (filter.filenamePattern) {\n\t\tconst filenamePattern = isDocumentExcludePattern(filter.filenamePattern) ? filter.filenamePattern.include : (filter.filenamePattern as string | glob.IRelativePattern);\n\t\tconst excludeFilenamePattern = isDocumentExcludePattern(filter.filenamePattern) ? filter.filenamePattern.exclude : undefined;\n\n\t\tif (glob.match(filenamePattern, basename(resource.fsPath).toLowerCase())) {\n\t\t\tif (excludeFilenamePattern) {\n\t\t\t\tif (glob.match(excludeFilenamePattern, basename(resource.fsPath).toLowerCase())) {\n\t\t\t\t\t// should exclude\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport interface INotebookCellStatusBarItemProvider {\n\tviewType: string;\n\tonDidChangeStatusBarItems?: Event<void>;\n\tprovideCellStatusBarItems(uri: URI, index: number, token: CancellationToken): Promise<INotebookCellStatusBarItemList | undefined>;\n}\n\n\nexport interface INotebookDiffResult {\n\tcellsDiff: IDiffResult;\n\tlinesDiff?: { originalCellhandle: number; modifiedCellhandle: number; lineChanges: ILineChange[] }[];\n}\n\nexport interface INotebookCellStatusBarItem {\n\treadonly alignment: CellStatusbarAlignment;\n\treadonly priority?: number;\n\treadonly text: string;\n\treadonly color?: string | ThemeColor;\n\treadonly backgroundColor?: string | ThemeColor;\n\treadonly tooltip?: string;\n\treadonly command?: string | Command;\n\treadonly accessibilityInformation?: IAccessibilityInformation;\n\treadonly opacity?: string;\n\treadonly onlyShowWhenActive?: boolean;\n}\n\nexport interface INotebookCellStatusBarItemList {\n\titems: INotebookCellStatusBarItem[];\n\tdispose?(): void;\n}\n\nexport type ShowCellStatusBarType = 'hidden' | 'visible' | 'visibleAfterExecute';\n\nexport const NotebookSetting = {\n\tdisplayOrder: 'notebook.displayOrder',\n\tcellToolbarLocation: 'notebook.cellToolbarLocation',\n\tcellToolbarVisibility: 'notebook.cellToolbarVisibility',\n\tshowCellStatusBar: 'notebook.showCellStatusBar',\n\ttextDiffEditorPreview: 'notebook.diff.enablePreview',\n\texperimentalInsertToolbarAlignment: 'notebook.experimental.insertToolbarAlignment',\n\tcompactView: 'notebook.compactView',\n\tfocusIndicator: 'notebook.cellFocusIndicator',\n\tinsertToolbarLocation: 'notebook.insertToolbarLocation',\n\tglobalToolbar: 'notebook.globalToolbar',\n\tundoRedoPerCell: 'notebook.undoRedoPerCell',\n\tconsolidatedOutputButton: 'notebook.consolidatedOutputButton',\n\tshowFoldingControls: 'notebook.showFoldingControls',\n\tdragAndDropEnabled: 'notebook.dragAndDropEnabled',\n\tcellEditorOptionsCustomizations: 'notebook.editorOptionsCustomizations',\n\tconsolidatedRunButton: 'notebook.consolidatedRunButton',\n\topenGettingStarted: 'notebook.experimental.openGettingStarted',\n\ttextOutputLineLimit: 'notebook.output.textLineLimit',\n\tglobalToolbarShowLabel: 'notebook.globalToolbarShowLabel',\n\tmarkupFontSize: 'notebook.markup.fontSize',\n\tinteractiveWindowCollapseCodeCells: 'interactiveWindow.collapseCellInputCode',\n\toutputLineHeight: 'notebook.outputLineHeight',\n\toutputFontSize: 'notebook.outputFontSize',\n\toutputFontFamily: 'notebook.outputFontFamily'\n} as const;\n\nexport const enum CellStatusbarAlignment {\n\tLeft = 1,\n\tRight = 2\n}\n\nexport class NotebookWorkingCopyTypeIdentifier {\n\n\tprivate static _prefix = 'notebook/';\n\n\tstatic create(viewType: string): string {\n\t\treturn `${NotebookWorkingCopyTypeIdentifier._prefix}${viewType}`;\n\t}\n\n\tstatic parse(candidate: string): string | undefined {\n\t\tif (candidate.startsWith(NotebookWorkingCopyTypeIdentifier._prefix)) {\n\t\t\treturn candidate.substring(NotebookWorkingCopyTypeIdentifier._prefix.length);\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\nexport interface NotebookExtensionDescription {\n\treadonly id: ExtensionIdentifier;\n\treadonly location: UriComponents | undefined;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\nimport { IProcessEnvironment } from 'vs/base/common/platform';\nimport { ThemeIcon } from 'vs/platform/theme/common/themeService';\nimport { VariableResolver } from 'vs/workbench/contrib/terminal/common/terminalEnvironment';\n\nexport const IEnvironmentVariableService = createDecorator<IEnvironmentVariableService>('environmentVariableService');\n\nexport enum EnvironmentVariableMutatorType {\n\tReplace = 1,\n\tAppend = 2,\n\tPrepend = 3\n}\n\nexport interface IEnvironmentVariableMutator {\n\treadonly value: string;\n\treadonly type: EnvironmentVariableMutatorType;\n}\n\nexport interface IExtensionOwnedEnvironmentVariableMutator extends IEnvironmentVariableMutator {\n\treadonly extensionIdentifier: string;\n}\n\nexport interface IEnvironmentVariableCollection {\n\treadonly map: ReadonlyMap<string, IEnvironmentVariableMutator>;\n}\n\nexport interface IEnvironmentVariableCollectionWithPersistence extends IEnvironmentVariableCollection {\n\treadonly persistent: boolean;\n}\n\nexport interface IMergedEnvironmentVariableCollectionDiff {\n\tadded: ReadonlyMap<string, IExtensionOwnedEnvironmentVariableMutator[]>;\n\tchanged: ReadonlyMap<string, IExtensionOwnedEnvironmentVariableMutator[]>;\n\tremoved: ReadonlyMap<string, IExtensionOwnedEnvironmentVariableMutator[]>;\n}\n\n/**\n * Represents an environment variable collection that results from merging several collections\n * together.\n */\nexport interface IMergedEnvironmentVariableCollection {\n\treadonly collections: ReadonlyMap<string, IEnvironmentVariableCollection>;\n\treadonly map: ReadonlyMap<string, IExtensionOwnedEnvironmentVariableMutator[]>;\n\n\t/**\n\t * Applies this collection to a process environment.\n\t * @param variableResolver An optional function to use to resolve variables within the\n\t * environment values.\n\t */\n\tapplyToProcessEnvironment(env: IProcessEnvironment, variableResolver?: VariableResolver): Promise<void>;\n\n\t/**\n\t * Generates a diff of this connection against another. Returns undefined if the collections are\n\t * the same.\n\t */\n\tdiff(other: IMergedEnvironmentVariableCollection): IMergedEnvironmentVariableCollectionDiff | undefined;\n}\n\n/**\n * Tracks and persists environment variable collections as defined by extensions.\n */\nexport interface IEnvironmentVariableService {\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Gets a single collection constructed by merging all environment variable collections into\n\t * one.\n\t */\n\treadonly collections: ReadonlyMap<string, IEnvironmentVariableCollection>;\n\n\t/**\n\t * Gets a single collection constructed by merging all environment variable collections into\n\t * one.\n\t */\n\treadonly mergedCollection: IMergedEnvironmentVariableCollection;\n\n\t/**\n\t * An event that is fired when an extension's environment variable collection changes, the event\n\t * provides the new merged collection.\n\t */\n\tonDidChangeCollections: Event<IMergedEnvironmentVariableCollection>;\n\n\t/**\n\t * Sets an extension's environment variable collection.\n\t */\n\tset(extensionIdentifier: string, collection: IEnvironmentVariableCollection): void;\n\n\t/**\n\t * Deletes an extension's environment variable collection.\n\t */\n\tdelete(extensionIdentifier: string): void;\n}\n\n/** [variable, mutator] */\nexport type ISerializableEnvironmentVariableCollection = [string, IEnvironmentVariableMutator][];\n\n/** [extension, collection] */\nexport type ISerializableEnvironmentVariableCollections = [string, ISerializableEnvironmentVariableCollection][];\n\nexport interface IEnvironmentVariableInfo {\n\treadonly requiresAction: boolean;\n\tgetInfo(): string;\n\tgetIcon(): ThemeIcon;\n\tgetActions?(): {\n\t\tlabel: string;\n\t\tcommandId: string;\n\t\ticonClass?: string;\n\t\trun(target: any): void;\n\t}[];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IProcessEnvironment, isWindows } from 'vs/base/common/platform';\nimport { EnvironmentVariableMutatorType, IEnvironmentVariableCollection, IExtensionOwnedEnvironmentVariableMutator, IMergedEnvironmentVariableCollection, IMergedEnvironmentVariableCollectionDiff } from 'vs/workbench/contrib/terminal/common/environmentVariable';\nimport { VariableResolver } from 'vs/workbench/contrib/terminal/common/terminalEnvironment';\n\nexport class MergedEnvironmentVariableCollection implements IMergedEnvironmentVariableCollection {\n\treadonly map: Map<string, IExtensionOwnedEnvironmentVariableMutator[]> = new Map();\n\n\tconstructor(\n\t\treadonly collections: ReadonlyMap<string, IEnvironmentVariableCollection>\n\t) {\n\t\tcollections.forEach((collection, extensionIdentifier) => {\n\t\t\tconst it = collection.map.entries();\n\t\t\tlet next = it.next();\n\t\t\twhile (!next.done) {\n\t\t\t\tconst variable = next.value[0];\n\t\t\t\tlet entry = this.map.get(variable);\n\t\t\t\tif (!entry) {\n\t\t\t\t\tentry = [];\n\t\t\t\t\tthis.map.set(variable, entry);\n\t\t\t\t}\n\n\t\t\t\t// If the first item in the entry is replace ignore any other entries as they would\n\t\t\t\t// just get replaced by this one.\n\t\t\t\tif (entry.length > 0 && entry[0].type === EnvironmentVariableMutatorType.Replace) {\n\t\t\t\t\tnext = it.next();\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Mutators get applied in the reverse order than they are created\n\t\t\t\tconst mutator = next.value[1];\n\t\t\t\tentry.unshift({\n\t\t\t\t\textensionIdentifier,\n\t\t\t\t\tvalue: mutator.value,\n\t\t\t\t\ttype: mutator.type\n\t\t\t\t});\n\n\t\t\t\tnext = it.next();\n\t\t\t}\n\t\t});\n\t}\n\n\tasync applyToProcessEnvironment(env: IProcessEnvironment, variableResolver?: VariableResolver): Promise<void> {\n\t\tlet lowerToActualVariableNames: { [lowerKey: string]: string | undefined } | undefined;\n\t\tif (isWindows) {\n\t\t\tlowerToActualVariableNames = {};\n\t\t\tObject.keys(env).forEach(e => lowerToActualVariableNames![e.toLowerCase()] = e);\n\t\t}\n\t\tfor (const [variable, mutators] of this.map) {\n\t\t\tconst actualVariable = isWindows ? lowerToActualVariableNames![variable.toLowerCase()] || variable : variable;\n\t\t\tfor (const mutator of mutators) {\n\t\t\t\tconst value = variableResolver ? await variableResolver(mutator.value) : mutator.value;\n\t\t\t\tswitch (mutator.type) {\n\t\t\t\t\tcase EnvironmentVariableMutatorType.Append:\n\t\t\t\t\t\tenv[actualVariable] = (env[actualVariable] || '') + value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase EnvironmentVariableMutatorType.Prepend:\n\t\t\t\t\t\tenv[actualVariable] = value + (env[actualVariable] || '');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase EnvironmentVariableMutatorType.Replace:\n\t\t\t\t\t\tenv[actualVariable] = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdiff(other: IMergedEnvironmentVariableCollection): IMergedEnvironmentVariableCollectionDiff | undefined {\n\t\tconst added: Map<string, IExtensionOwnedEnvironmentVariableMutator[]> = new Map();\n\t\tconst changed: Map<string, IExtensionOwnedEnvironmentVariableMutator[]> = new Map();\n\t\tconst removed: Map<string, IExtensionOwnedEnvironmentVariableMutator[]> = new Map();\n\n\t\t// Find added\n\t\tother.map.forEach((otherMutators, variable) => {\n\t\t\tconst currentMutators = this.map.get(variable);\n\t\t\tconst result = getMissingMutatorsFromArray(otherMutators, currentMutators);\n\t\t\tif (result) {\n\t\t\t\tadded.set(variable, result);\n\t\t\t}\n\t\t});\n\n\t\t// Find removed\n\t\tthis.map.forEach((currentMutators, variable) => {\n\t\t\tconst otherMutators = other.map.get(variable);\n\t\t\tconst result = getMissingMutatorsFromArray(currentMutators, otherMutators);\n\t\t\tif (result) {\n\t\t\t\tremoved.set(variable, result);\n\t\t\t}\n\t\t});\n\n\t\t// Find changed\n\t\tthis.map.forEach((currentMutators, variable) => {\n\t\t\tconst otherMutators = other.map.get(variable);\n\t\t\tconst result = getChangedMutatorsFromArray(currentMutators, otherMutators);\n\t\t\tif (result) {\n\t\t\t\tchanged.set(variable, result);\n\t\t\t}\n\t\t});\n\n\t\tif (added.size === 0 && changed.size === 0 && removed.size === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn { added, changed, removed };\n\t}\n}\n\nfunction getMissingMutatorsFromArray(\n\tcurrent: IExtensionOwnedEnvironmentVariableMutator[],\n\tother: IExtensionOwnedEnvironmentVariableMutator[] | undefined\n): IExtensionOwnedEnvironmentVariableMutator[] | undefined {\n\t// If it doesn't exist, all are removed\n\tif (!other) {\n\t\treturn current;\n\t}\n\n\t// Create a map to help\n\tconst otherMutatorExtensions = new Set<string>();\n\tother.forEach(m => otherMutatorExtensions.add(m.extensionIdentifier));\n\n\t// Find entries removed from other\n\tconst result: IExtensionOwnedEnvironmentVariableMutator[] = [];\n\tcurrent.forEach(mutator => {\n\t\tif (!otherMutatorExtensions.has(mutator.extensionIdentifier)) {\n\t\t\tresult.push(mutator);\n\t\t}\n\t});\n\n\treturn result.length === 0 ? undefined : result;\n}\n\nfunction getChangedMutatorsFromArray(\n\tcurrent: IExtensionOwnedEnvironmentVariableMutator[],\n\tother: IExtensionOwnedEnvironmentVariableMutator[] | undefined\n): IExtensionOwnedEnvironmentVariableMutator[] | undefined {\n\t// If it doesn't exist, none are changed (they are removed)\n\tif (!other) {\n\t\treturn undefined;\n\t}\n\n\t// Create a map to help\n\tconst otherMutatorExtensions = new Map<string, IExtensionOwnedEnvironmentVariableMutator>();\n\tother.forEach(m => otherMutatorExtensions.set(m.extensionIdentifier, m));\n\n\t// Find entries that exist in both but are not equal\n\tconst result: IExtensionOwnedEnvironmentVariableMutator[] = [];\n\tcurrent.forEach(mutator => {\n\t\tconst otherMutator = otherMutatorExtensions.get(mutator.extensionIdentifier);\n\t\tif (otherMutator && (mutator.type !== otherMutator.type || mutator.value !== otherMutator.value)) {\n\t\t\t// Return the new result, not the old one\n\t\t\tresult.push(otherMutator);\n\t\t}\n\t});\n\n\treturn result.length === 0 ? undefined : result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IEnvironmentVariableCollection, IEnvironmentVariableMutator, ISerializableEnvironmentVariableCollection, ISerializableEnvironmentVariableCollections } from 'vs/workbench/contrib/terminal/common/environmentVariable';\n\n// This file is shared between the renderer and extension host\n\nexport function serializeEnvironmentVariableCollection(collection: ReadonlyMap<string, IEnvironmentVariableMutator>): ISerializableEnvironmentVariableCollection {\n\treturn [...collection.entries()];\n}\n\nexport function deserializeEnvironmentVariableCollection(\n\tserializedCollection: ISerializableEnvironmentVariableCollection\n): Map<string, IEnvironmentVariableMutator> {\n\treturn new Map<string, IEnvironmentVariableMutator>(serializedCollection);\n}\n\nexport function serializeEnvironmentVariableCollections(collections: ReadonlyMap<string, IEnvironmentVariableCollection>): ISerializableEnvironmentVariableCollections {\n\treturn Array.from(collections.entries()).map(e => {\n\t\treturn [e[0], serializeEnvironmentVariableCollection(e[1].map)];\n\t});\n}\n\nexport function deserializeEnvironmentVariableCollections(\n\tserializedCollection: ISerializableEnvironmentVariableCollections\n): Map<string, IEnvironmentVariableCollection> {\n\treturn new Map<string, IEnvironmentVariableCollection>(serializedCollection.map(e => {\n\t\treturn [e[0], { map: deserializeEnvironmentVariableCollection(e[1]) }];\n\t}));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * This module contains utility functions related to the environment, cwd and paths.\n */\n\nimport * as path from 'vs/base/common/path';\nimport { URI as Uri } from 'vs/base/common/uri';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { IConfigurationResolverService } from 'vs/workbench/services/configurationResolver/common/configurationResolver';\nimport { sanitizeProcessEnvironment } from 'vs/base/common/processes';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IShellLaunchConfig, ITerminalEnvironment, TerminalSettingId, TerminalSettingPrefix } from 'vs/platform/terminal/common/terminal';\nimport { IProcessEnvironment, isWindows, locale, OperatingSystem, OS, platform, Platform } from 'vs/base/common/platform';\n\nexport function mergeEnvironments(parent: IProcessEnvironment, other: ITerminalEnvironment | undefined): void {\n\tif (!other) {\n\t\treturn;\n\t}\n\n\t// On Windows apply the new values ignoring case, while still retaining\n\t// the case of the original key.\n\tif (isWindows) {\n\t\tfor (const configKey in other) {\n\t\t\tlet actualKey = configKey;\n\t\t\tfor (const envKey in parent) {\n\t\t\t\tif (configKey.toLowerCase() === envKey.toLowerCase()) {\n\t\t\t\t\tactualKey = envKey;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst value = other[configKey];\n\t\t\tif (value !== undefined) {\n\t\t\t\t_mergeEnvironmentValue(parent, actualKey, value);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tObject.keys(other).forEach((key) => {\n\t\t\tconst value = other[key];\n\t\t\tif (value !== undefined) {\n\t\t\t\t_mergeEnvironmentValue(parent, key, value);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction _mergeEnvironmentValue(env: ITerminalEnvironment, key: string, value: string | null): void {\n\tif (typeof value === 'string') {\n\t\tenv[key] = value;\n\t} else {\n\t\tdelete env[key];\n\t}\n}\n\nexport function addTerminalEnvironmentKeys(env: IProcessEnvironment, version: string | undefined, locale: string | undefined, detectLocale: 'auto' | 'off' | 'on'): void {\n\tenv['TERM_PROGRAM'] = 'vscode';\n\tif (version) {\n\t\tenv['TERM_PROGRAM_VERSION'] = version;\n\t}\n\tif (shouldSetLangEnvVariable(env, detectLocale)) {\n\t\tenv['LANG'] = getLangEnvVariable(locale);\n\t}\n\tenv['COLORTERM'] = 'truecolor';\n}\n\nfunction mergeNonNullKeys(env: IProcessEnvironment, other: ITerminalEnvironment | undefined) {\n\tif (!other) {\n\t\treturn;\n\t}\n\tfor (const key of Object.keys(other)) {\n\t\tconst value = other[key];\n\t\tif (value) {\n\t\t\tenv[key] = value;\n\t\t}\n\t}\n}\n\nasync function resolveConfigurationVariables(variableResolver: VariableResolver, env: ITerminalEnvironment): Promise<ITerminalEnvironment> {\n\tawait Promise.all(Object.entries(env).map(async ([key, value]) => {\n\t\tif (typeof value === 'string') {\n\t\t\ttry {\n\t\t\t\tenv[key] = await variableResolver(value);\n\t\t\t} catch (e) {\n\t\t\t\tenv[key] = value;\n\t\t\t}\n\t\t}\n\t}));\n\n\treturn env;\n}\n\nexport function shouldSetLangEnvVariable(env: IProcessEnvironment, detectLocale: 'auto' | 'off' | 'on'): boolean {\n\tif (detectLocale === 'on') {\n\t\treturn true;\n\t}\n\tif (detectLocale === 'auto') {\n\t\tconst lang = env['LANG'];\n\t\treturn !lang || (lang.search(/\\.UTF\\-8$/) === -1 && lang.search(/\\.utf8$/) === -1 && lang.search(/\\.euc.+/) === -1);\n\t}\n\treturn false; // 'off'\n}\n\nexport function getLangEnvVariable(locale?: string): string {\n\tconst parts = locale ? locale.split('-') : [];\n\tconst n = parts.length;\n\tif (n === 0) {\n\t\t// Fallback to en_US if the locale is unknown\n\t\treturn 'en_US.UTF-8';\n\t}\n\tif (n === 1) {\n\t\t// The local may only contain the language, not the variant, if this is the case guess the\n\t\t// variant such that it can be used as a valid $LANG variable. The language variant chosen\n\t\t// is the original and/or most prominent with help from\n\t\t// https://stackoverflow.com/a/2502675/1156119\n\t\t// The list of locales was generated by running `locale -a` on macOS\n\t\tconst languageVariants: { [key: string]: string } = {\n\t\t\taf: 'ZA',\n\t\t\tam: 'ET',\n\t\t\tbe: 'BY',\n\t\t\tbg: 'BG',\n\t\t\tca: 'ES',\n\t\t\tcs: 'CZ',\n\t\t\tda: 'DK',\n\t\t\t// de: 'AT',\n\t\t\t// de: 'CH',\n\t\t\tde: 'DE',\n\t\t\tel: 'GR',\n\t\t\t// en: 'AU',\n\t\t\t// en: 'CA',\n\t\t\t// en: 'GB',\n\t\t\t// en: 'IE',\n\t\t\t// en: 'NZ',\n\t\t\ten: 'US',\n\t\t\tes: 'ES',\n\t\t\tet: 'EE',\n\t\t\teu: 'ES',\n\t\t\tfi: 'FI',\n\t\t\t// fr: 'BE',\n\t\t\t// fr: 'CA',\n\t\t\t// fr: 'CH',\n\t\t\tfr: 'FR',\n\t\t\the: 'IL',\n\t\t\thr: 'HR',\n\t\t\thu: 'HU',\n\t\t\thy: 'AM',\n\t\t\tis: 'IS',\n\t\t\t// it: 'CH',\n\t\t\tit: 'IT',\n\t\t\tja: 'JP',\n\t\t\tkk: 'KZ',\n\t\t\tko: 'KR',\n\t\t\tlt: 'LT',\n\t\t\t// nl: 'BE',\n\t\t\tnl: 'NL',\n\t\t\tno: 'NO',\n\t\t\tpl: 'PL',\n\t\t\tpt: 'BR',\n\t\t\t// pt: 'PT',\n\t\t\tro: 'RO',\n\t\t\tru: 'RU',\n\t\t\tsk: 'SK',\n\t\t\tsl: 'SI',\n\t\t\tsr: 'YU',\n\t\t\tsv: 'SE',\n\t\t\ttr: 'TR',\n\t\t\tuk: 'UA',\n\t\t\tzh: 'CN',\n\t\t};\n\t\tif (parts[0] in languageVariants) {\n\t\t\tparts.push(languageVariants[parts[0]]);\n\t\t}\n\t} else {\n\t\t// Ensure the variant is uppercase to be a valid $LANG\n\t\tparts[1] = parts[1].toUpperCase();\n\t}\n\treturn parts.join('_') + '.UTF-8';\n}\n\nexport async function getCwd(\n\tshell: IShellLaunchConfig,\n\tuserHome: string | undefined,\n\tvariableResolver: VariableResolver | undefined,\n\troot: Uri | undefined,\n\tcustomCwd: string | undefined,\n\tlogService?: ILogService\n): Promise<string> {\n\tif (shell.cwd) {\n\t\tconst unresolved = (typeof shell.cwd === 'object') ? shell.cwd.fsPath : shell.cwd;\n\t\tconst resolved = await _resolveCwd(unresolved, variableResolver);\n\t\treturn _sanitizeCwd(resolved || unresolved);\n\t}\n\n\tlet cwd: string | undefined;\n\n\tif (!shell.ignoreConfigurationCwd && customCwd) {\n\t\tif (variableResolver) {\n\t\t\tcustomCwd = await _resolveCwd(customCwd, variableResolver, logService);\n\t\t}\n\t\tif (customCwd) {\n\t\t\tif (path.isAbsolute(customCwd)) {\n\t\t\t\tcwd = customCwd;\n\t\t\t} else if (root) {\n\t\t\t\tcwd = path.join(root.fsPath, customCwd);\n\t\t\t}\n\t\t}\n\t}\n\n\t// If there was no custom cwd or it was relative with no workspace\n\tif (!cwd) {\n\t\tcwd = root ? root.fsPath : userHome || '';\n\t}\n\n\treturn _sanitizeCwd(cwd);\n}\n\nasync function _resolveCwd(cwd: string, variableResolver: VariableResolver | undefined, logService?: ILogService): Promise<string | undefined> {\n\tif (variableResolver) {\n\t\ttry {\n\t\t\treturn await variableResolver(cwd);\n\t\t} catch (e) {\n\t\t\tlogService?.error('Could not resolve terminal cwd', e);\n\t\t\treturn undefined;\n\t\t}\n\t}\n\treturn cwd;\n}\n\nfunction _sanitizeCwd(cwd: string): string {\n\t// Make the drive letter uppercase on Windows (see #9448)\n\tif (OS === OperatingSystem.Windows && cwd && cwd[1] === ':') {\n\t\treturn cwd[0].toUpperCase() + cwd.substr(1);\n\t}\n\treturn cwd;\n}\n\nexport type TerminalShellSetting = (\n\tTerminalSettingId.AutomationShellWindows\n\t| TerminalSettingId.AutomationShellMacOs\n\t| TerminalSettingId.AutomationShellLinux\n\t| TerminalSettingId.ShellWindows\n\t| TerminalSettingId.ShellMacOs\n\t| TerminalSettingId.ShellLinux\n);\n\nexport type TerminalShellArgsSetting = (\n\tTerminalSettingId.ShellArgsWindows\n\t| TerminalSettingId.ShellArgsMacOs\n\t| TerminalSettingId.ShellArgsLinux\n);\n\nexport type VariableResolver = (str: string) => Promise<string>;\n\nexport function createVariableResolver(lastActiveWorkspace: IWorkspaceFolder | undefined, env: IProcessEnvironment, configurationResolverService: IConfigurationResolverService | undefined): VariableResolver | undefined {\n\tif (!configurationResolverService) {\n\t\treturn undefined;\n\t}\n\treturn (str) => configurationResolverService.resolveWithEnvironment(env, lastActiveWorkspace, str);\n}\n\n/**\n * @deprecated Use ITerminalProfileResolverService\n */\nexport async function getDefaultShell(\n\tfetchSetting: (key: TerminalShellSetting) => string | undefined,\n\tdefaultShell: string,\n\tisWoW64: boolean,\n\twindir: string | undefined,\n\tvariableResolver: VariableResolver | undefined,\n\tlogService: ILogService,\n\tuseAutomationShell: boolean,\n\tplatformOverride: Platform = platform\n): Promise<string> {\n\tlet maybeExecutable: string | undefined;\n\tif (useAutomationShell) {\n\t\t// If automationShell is specified, this should override the normal setting\n\t\tmaybeExecutable = getShellSetting(fetchSetting, 'automationShell', platformOverride) as string | undefined;\n\t}\n\tif (!maybeExecutable) {\n\t\tmaybeExecutable = getShellSetting(fetchSetting, 'shell', platformOverride) as string | undefined;\n\t}\n\tlet executable: string = maybeExecutable || defaultShell;\n\n\t// Change Sysnative to System32 if the OS is Windows but NOT WoW64. It's\n\t// safe to assume that this was used by accident as Sysnative does not\n\t// exist and will break the terminal in non-WoW64 environments.\n\tif ((platformOverride === Platform.Windows) && !isWoW64 && windir) {\n\t\tconst sysnativePath = path.join(windir, 'Sysnative').replace(/\\//g, '\\\\').toLowerCase();\n\t\tif (executable && executable.toLowerCase().indexOf(sysnativePath) === 0) {\n\t\t\texecutable = path.join(windir, 'System32', executable.substr(sysnativePath.length + 1));\n\t\t}\n\t}\n\n\t// Convert / to \\ on Windows for convenience\n\tif (executable && platformOverride === Platform.Windows) {\n\t\texecutable = executable.replace(/\\//g, '\\\\');\n\t}\n\n\tif (variableResolver) {\n\t\ttry {\n\t\t\texecutable = await variableResolver(executable);\n\t\t} catch (e) {\n\t\t\tlogService.error(`Could not resolve shell`, e);\n\t\t}\n\t}\n\n\treturn executable;\n}\n\n/**\n * @deprecated Use ITerminalProfileResolverService\n */\nexport async function getDefaultShellArgs(\n\tfetchSetting: (key: TerminalShellSetting | TerminalShellArgsSetting) => string | string[] | undefined,\n\tuseAutomationShell: boolean,\n\tvariableResolver: VariableResolver | undefined,\n\tlogService: ILogService,\n\tplatformOverride: Platform = platform,\n): Promise<string | string[]> {\n\tif (useAutomationShell) {\n\t\tif (!!getShellSetting(fetchSetting, 'automationShell', platformOverride)) {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tconst platformKey = platformOverride === Platform.Windows ? 'windows' : platformOverride === Platform.Mac ? 'osx' : 'linux';\n\tlet args = fetchSetting(<TerminalShellArgsSetting>`${TerminalSettingPrefix.ShellArgs}${platformKey}`);\n\tif (!args) {\n\t\treturn [];\n\t}\n\tif (typeof args === 'string' && platformOverride === Platform.Windows) {\n\t\treturn variableResolver ? await variableResolver(args) : args;\n\t}\n\tif (variableResolver) {\n\t\tconst resolvedArgs: string[] = [];\n\t\tfor (const arg of args) {\n\t\t\ttry {\n\t\t\t\tresolvedArgs.push(await variableResolver(arg));\n\t\t\t} catch (e) {\n\t\t\t\tlogService.error(`Could not resolve ${TerminalSettingPrefix.ShellArgs}${platformKey}`, e);\n\t\t\t\tresolvedArgs.push(arg);\n\t\t\t}\n\t\t}\n\t\targs = resolvedArgs;\n\t}\n\treturn args;\n}\n\nfunction getShellSetting(\n\tfetchSetting: (key: TerminalShellSetting) => string | string[] | undefined,\n\ttype: 'automationShell' | 'shell',\n\tplatformOverride: Platform = platform,\n): string | string[] | undefined {\n\tconst platformKey = platformOverride === Platform.Windows ? 'windows' : platformOverride === Platform.Mac ? 'osx' : 'linux';\n\treturn fetchSetting(<TerminalShellSetting>`terminal.integrated.${type}.${platformKey}`);\n}\n\nexport async function createTerminalEnvironment(\n\tshellLaunchConfig: IShellLaunchConfig,\n\tenvFromConfig: ITerminalEnvironment | undefined,\n\tvariableResolver: VariableResolver | undefined,\n\tversion: string | undefined,\n\tdetectLocale: 'auto' | 'off' | 'on',\n\tbaseEnv: IProcessEnvironment\n): Promise<IProcessEnvironment> {\n\t// Create a terminal environment based on settings, launch config and permissions\n\tconst env: IProcessEnvironment = {};\n\tif (shellLaunchConfig.strictEnv) {\n\t\t// strictEnv is true, only use the requested env (ignoring null entries)\n\t\tmergeNonNullKeys(env, shellLaunchConfig.env);\n\t} else {\n\t\t// Merge process env with the env from config and from shellLaunchConfig\n\t\tmergeNonNullKeys(env, baseEnv);\n\n\t\tconst allowedEnvFromConfig = { ...envFromConfig };\n\n\t\t// Resolve env vars from config and shell\n\t\tif (variableResolver) {\n\t\t\tif (allowedEnvFromConfig) {\n\t\t\t\tawait resolveConfigurationVariables(variableResolver, allowedEnvFromConfig);\n\t\t\t}\n\t\t\tif (shellLaunchConfig.env) {\n\t\t\t\tawait resolveConfigurationVariables(variableResolver, shellLaunchConfig.env);\n\t\t\t}\n\t\t}\n\n\t\t// Sanitize the environment, removing any undesirable VS Code and Electron environment\n\t\t// variables\n\t\tsanitizeProcessEnvironment(env, 'VSCODE_IPC_HOOK_CLI', 'VSCODE_PROXY_URI');\n\n\t\t// Merge config (settings) and ShellLaunchConfig environments\n\t\tmergeEnvironments(env, allowedEnvFromConfig);\n\t\tmergeEnvironments(env, shellLaunchConfig.env);\n\n\t\t// Adding other env keys necessary to create the process\n\t\taddTerminalEnvironmentKeys(env, version, locale, detectLocale);\n\t}\n\treturn env;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const enum TestIdPathParts {\n\t/** Delimiter for path parts in test IDs */\n\tDelimiter = '\\0',\n}\n\n/**\n * Enum for describing relative positions of tests. Similar to\n * `node.compareDocumentPosition` in the DOM.\n */\nexport const enum TestPosition {\n\t/** a === b */\n\tIsSame,\n\t/** Neither a nor b are a child of one another. They may share a common parent, though. */\n\tDisconnected,\n\t/** b is a child of a */\n\tIsChild,\n\t/** b is a parent of a */\n\tIsParent,\n}\n\ntype TestItemLike = { id: string; parent?: TestItemLike };\n\n/**\n * The test ID is a stringifiable client that\n */\nexport class TestId {\n\tprivate stringifed?: string;\n\n\t/**\n\t * Creates a test ID from an ext host test item.\n\t */\n\tpublic static fromExtHostTestItem(item: TestItemLike, rootId: string, parent = item.parent) {\n\t\tif (item.id === rootId) {\n\t\t\treturn new TestId([rootId]);\n\t\t}\n\n\t\tconst path = [item.id];\n\t\tfor (let i = parent; i && i.id !== rootId; i = i.parent) {\n\t\t\tpath.push(i.id);\n\t\t}\n\t\tpath.push(rootId);\n\n\t\treturn new TestId(path.reverse());\n\t}\n\n\t/**\n\t * Cheaply ets whether the ID refers to the root .\n\t */\n\tpublic static isRoot(idString: string) {\n\t\treturn !idString.includes(TestIdPathParts.Delimiter);\n\t}\n\n\t/**\n\t * Cheaply ets whether the ID refers to the root .\n\t */\n\tpublic static root(idString: string) {\n\t\tconst idx = idString.indexOf(TestIdPathParts.Delimiter);\n\t\treturn idx === -1 ? idString : idString.slice(0, idx);\n\t}\n\n\t/**\n\t * Creates a test ID from a serialized TestId instance.\n\t */\n\tpublic static fromString(idString: string) {\n\t\treturn new TestId(idString.split(TestIdPathParts.Delimiter));\n\t}\n\n\t/**\n\t * Gets the ID resulting from adding b to the base ID.\n\t */\n\tpublic static join(base: TestId, b: string) {\n\t\treturn new TestId([...base.path, b]);\n\t}\n\n\t/**\n\t * Gets the string ID resulting from adding b to the base ID.\n\t */\n\tpublic static joinToString(base: string | TestId, b: string) {\n\t\treturn base.toString() + TestIdPathParts.Delimiter + b;\n\t}\n\n\t/**\n\t * Compares the position of the two ID strings.\n\t */\n\tpublic static compare(a: string, b: string) {\n\t\tif (a === b) {\n\t\t\treturn TestPosition.IsSame;\n\t\t}\n\n\t\tif (b.startsWith(a + TestIdPathParts.Delimiter)) {\n\t\t\treturn TestPosition.IsChild;\n\t\t}\n\n\t\tif (a.startsWith(b + TestIdPathParts.Delimiter)) {\n\t\t\treturn TestPosition.IsParent;\n\t\t}\n\n\t\treturn TestPosition.Disconnected;\n\t}\n\n\tconstructor(\n\t\tpublic readonly path: readonly string[],\n\t\tprivate readonly viewEnd = path.length,\n\t) {\n\t\tif (path.length === 0 || viewEnd < 1) {\n\t\t\tthrow new Error('cannot create test with empty path');\n\t\t}\n\t}\n\n\t/**\n\t * Gets the ID of the parent test.\n\t */\n\tpublic get parentId(): TestId {\n\t\treturn this.viewEnd > 1 ? new TestId(this.path, this.viewEnd - 1) : this;\n\t}\n\n\t/**\n\t * Gets the local ID of the current full test ID.\n\t */\n\tpublic get localId() {\n\t\treturn this.path[this.viewEnd - 1];\n\t}\n\n\t/**\n\t * Gets whether this ID refers to the root.\n\t */\n\tpublic get controllerId() {\n\t\treturn this.path[0];\n\t}\n\n\t/**\n\t * Gets whether this ID refers to the root.\n\t */\n\tpublic get isRoot() {\n\t\treturn this.viewEnd === 1;\n\t}\n\n\t/**\n\t * Returns an iterable that yields IDs of all parent items down to and\n\t * including the current item.\n\t */\n\tpublic *idsFromRoot() {\n\t\tfor (let i = 1; i <= this.viewEnd; i++) {\n\t\t\tyield new TestId(this.path, i);\n\t\t}\n\t}\n\n\t/**\n\t * Compares the other test ID with this one.\n\t */\n\tpublic compare(other: TestId | string) {\n\t\tif (typeof other === 'string') {\n\t\t\treturn TestId.compare(this.toString(), other);\n\t\t}\n\n\t\tfor (let i = 0; i < other.viewEnd && i < this.viewEnd; i++) {\n\t\t\tif (other.path[i] !== this.path[i]) {\n\t\t\t\treturn TestPosition.Disconnected;\n\t\t\t}\n\t\t}\n\n\t\tif (other.viewEnd > this.viewEnd) {\n\t\t\treturn TestPosition.IsChild;\n\t\t}\n\n\t\tif (other.viewEnd < this.viewEnd) {\n\t\t\treturn TestPosition.IsParent;\n\t\t}\n\n\t\treturn TestPosition.IsSame;\n\t}\n\n\t/**\n\t * Serializes the ID.\n\t */\n\tpublic toJSON() {\n\t\treturn this.toString();\n\t}\n\n\t/**\n\t * Serializes the ID to a string.\n\t */\n\tpublic toString() {\n\t\tif (!this.stringifed) {\n\t\t\tthis.stringifed = this.path[0];\n\t\t\tfor (let i = 1; i < this.viewEnd; i++) {\n\t\t\t\tthis.stringifed += TestIdPathParts.Delimiter;\n\t\t\t\tthis.stringifed += this.path[i];\n\t\t\t}\n\t\t}\n\n\t\treturn this.stringifed;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IMarkdownString } from 'vs/base/common/htmlContent';\nimport { MarshalledId } from 'vs/base/common/marshallingIds';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IPosition } from 'vs/editor/common/core/position';\nimport { IRange, Range } from 'vs/editor/common/core/range';\n\nexport const enum TestResultState {\n\tUnset = 0,\n\tQueued = 1,\n\tRunning = 2,\n\tPassed = 3,\n\tFailed = 4,\n\tSkipped = 5,\n\tErrored = 6\n}\n\nexport const enum TestRunProfileBitset {\n\tRun = 1 << 1,\n\tDebug = 1 << 2,\n\tCoverage = 1 << 3,\n\tHasNonDefaultProfile = 1 << 4,\n\tHasConfigurable = 1 << 5,\n}\n\n/**\n * List of all test run profile bitset values.\n */\nexport const testRunProfileBitsetList = [\n\tTestRunProfileBitset.Run,\n\tTestRunProfileBitset.Debug,\n\tTestRunProfileBitset.Coverage,\n\tTestRunProfileBitset.HasNonDefaultProfile,\n];\n\n/**\n * DTO for a controller's run profiles.\n */\nexport interface ITestRunProfile {\n\tcontrollerId: string;\n\tprofileId: number;\n\tlabel: string;\n\tgroup: TestRunProfileBitset;\n\tisDefault: boolean;\n\ttag: string | null;\n\thasConfigurationHandler: boolean;\n}\n\n/**\n * A fully-resolved request to run tests, passsed between the main thread\n * and extension host.\n */\nexport interface ResolvedTestRunRequest {\n\ttargets: {\n\t\ttestIds: string[];\n\t\tcontrollerId: string;\n\t\tprofileGroup: TestRunProfileBitset;\n\t\tprofileId: number;\n\t}[];\n\texclude?: string[];\n\tisAutoRun?: boolean;\n\t/** Whether this was trigged by a user action in UI. Default=true */\n\tisUiTriggered?: boolean;\n}\n\n/**\n * Request to the main thread to run a set of tests.\n */\nexport interface ExtensionRunTestsRequest {\n\tid: string;\n\tinclude: string[];\n\texclude: string[];\n\tcontrollerId: string;\n\tprofile?: { group: TestRunProfileBitset; id: number };\n\tpersist: boolean;\n}\n\n/**\n * Request from the main thread to run tests for a single controller.\n */\nexport interface RunTestForControllerRequest {\n\trunId: string;\n\tcontrollerId: string;\n\tprofileId: number;\n\texcludeExtIds: string[];\n\ttestIds: string[];\n}\n\n/**\n * Location with a fully-instantiated Range and URI.\n */\nexport interface IRichLocation {\n\trange: Range;\n\turi: URI;\n}\n\nexport namespace IRichLocation {\n\texport interface Serialize {\n\t\trange: IRange;\n\t\turi: UriComponents;\n\t}\n\n\texport const serialize = (location: IRichLocation): Serialize => ({\n\t\trange: location.range.toJSON(),\n\t\turi: location.uri.toJSON(),\n\t});\n\n\texport const deserialize = (location: Serialize): IRichLocation => ({\n\t\trange: Range.lift(location.range),\n\t\turi: URI.revive(location.uri),\n\t});\n}\n\nexport const enum TestMessageType {\n\tError,\n\tOutput\n}\n\nexport interface ITestErrorMessage {\n\tmessage: string | IMarkdownString;\n\ttype: TestMessageType.Error;\n\texpected: string | undefined;\n\tactual: string | undefined;\n\tlocation: IRichLocation | undefined;\n}\n\nexport namespace ITestErrorMessage {\n\texport interface Serialized {\n\t\tmessage: string | IMarkdownString;\n\t\ttype: TestMessageType.Error;\n\t\texpected: string | undefined;\n\t\tactual: string | undefined;\n\t\tlocation: IRichLocation.Serialize | undefined;\n\t}\n\n\texport const serialize = (message: ITestErrorMessage): Serialized => ({\n\t\tmessage: message.message,\n\t\ttype: TestMessageType.Error,\n\t\texpected: message.expected,\n\t\tactual: message.actual,\n\t\tlocation: message.location && IRichLocation.serialize(message.location),\n\t});\n\n\texport const deserialize = (message: Serialized): ITestErrorMessage => ({\n\t\tmessage: message.message,\n\t\ttype: TestMessageType.Error,\n\t\texpected: message.expected,\n\t\tactual: message.actual,\n\t\tlocation: message.location && IRichLocation.deserialize(message.location),\n\t});\n}\n\nexport interface ITestOutputMessage {\n\tmessage: string;\n\ttype: TestMessageType.Output;\n\toffset: number;\n\tlocation: IRichLocation | undefined;\n}\n\nexport namespace ITestOutputMessage {\n\texport interface Serialized {\n\t\tmessage: string;\n\t\toffset: number;\n\t\ttype: TestMessageType.Output;\n\t\tlocation: IRichLocation.Serialize | undefined;\n\t}\n\n\texport const serialize = (message: ITestOutputMessage): Serialized => ({\n\t\tmessage: message.message,\n\t\ttype: TestMessageType.Output,\n\t\toffset: message.offset,\n\t\tlocation: message.location && IRichLocation.serialize(message.location),\n\t});\n\n\texport const deserialize = (message: Serialized): ITestOutputMessage => ({\n\t\tmessage: message.message,\n\t\ttype: TestMessageType.Output,\n\t\toffset: message.offset,\n\t\tlocation: message.location && IRichLocation.deserialize(message.location),\n\t});\n}\n\nexport type ITestMessage = ITestErrorMessage | ITestOutputMessage;\n\nexport namespace ITestMessage {\n\texport type Serialized = ITestErrorMessage.Serialized | ITestOutputMessage.Serialized;\n\n\texport const serialize = (message: ITestMessage): Serialized =>\n\t\tmessage.type === TestMessageType.Error ? ITestErrorMessage.serialize(message) : ITestOutputMessage.serialize(message);\n\n\texport const deserialize = (message: Serialized): ITestMessage =>\n\t\tmessage.type === TestMessageType.Error ? ITestErrorMessage.deserialize(message) : ITestOutputMessage.deserialize(message);\n}\n\nexport interface ITestTaskState {\n\tstate: TestResultState;\n\tduration: number | undefined;\n\tmessages: ITestMessage[];\n}\n\nexport namespace ITestTaskState {\n\texport interface Serialized {\n\t\tstate: TestResultState;\n\t\tduration: number | undefined;\n\t\tmessages: ITestMessage.Serialized[];\n\t}\n\n\texport const serialize = (state: ITestTaskState): Serialized => ({\n\t\tstate: state.state,\n\t\tduration: state.duration,\n\t\tmessages: state.messages.map(ITestMessage.serialize),\n\t});\n\n\texport const deserialize = (state: Serialized): ITestTaskState => ({\n\t\tstate: state.state,\n\t\tduration: state.duration,\n\t\tmessages: state.messages.map(ITestMessage.deserialize),\n\t});\n}\n\nexport interface ITestRunTask {\n\tid: string;\n\tname: string | undefined;\n\trunning: boolean;\n}\n\nexport interface ITestTag {\n\treadonly id: string;\n}\n\nconst testTagDelimiter = '\\0';\n\nexport const namespaceTestTag =\n\t(ctrlId: string, tagId: string) => ctrlId + testTagDelimiter + tagId;\n\nexport const denamespaceTestTag = (namespaced: string) => {\n\tconst index = namespaced.indexOf(testTagDelimiter);\n\treturn { ctrlId: namespaced.slice(0, index), tagId: namespaced.slice(index + 1) };\n};\n\nexport interface ITestTagDisplayInfo {\n\tid: string;\n}\n\n/**\n * The TestItem from .d.ts, as a plain object without children.\n */\nexport interface ITestItem {\n\t/** ID of the test given by the test controller */\n\textId: string;\n\tlabel: string;\n\ttags: string[];\n\tbusy: boolean;\n\tchildren?: never;\n\turi: URI | undefined;\n\trange: Range | null;\n\tdescription: string | null;\n\terror: string | IMarkdownString | null;\n\tsortText: string | null;\n}\n\nexport namespace ITestItem {\n\texport interface Serialized {\n\t\textId: string;\n\t\tlabel: string;\n\t\ttags: string[];\n\t\tbusy: boolean;\n\t\tchildren?: never;\n\t\turi: UriComponents | undefined;\n\t\trange: IRange | null;\n\t\tdescription: string | null;\n\t\terror: string | IMarkdownString | null;\n\t\tsortText: string | null;\n\t}\n\n\texport const serialize = (item: ITestItem): Serialized => ({\n\t\textId: item.extId,\n\t\tlabel: item.label,\n\t\ttags: item.tags,\n\t\tbusy: item.busy,\n\t\tchildren: undefined,\n\t\turi: item.uri?.toJSON(),\n\t\trange: item.range?.toJSON() || null,\n\t\tdescription: item.description,\n\t\terror: item.error,\n\t\tsortText: item.sortText\n\t});\n\n\texport const deserialize = (serialized: Serialized): ITestItem => ({\n\t\textId: serialized.extId,\n\t\tlabel: serialized.label,\n\t\ttags: serialized.tags,\n\t\tbusy: serialized.busy,\n\t\tchildren: undefined,\n\t\turi: serialized.uri ? URI.revive(serialized.uri) : undefined,\n\t\trange: serialized.range ? Range.lift(serialized.range) : null,\n\t\tdescription: serialized.description,\n\t\terror: serialized.error,\n\t\tsortText: serialized.sortText\n\t});\n}\n\nexport const enum TestItemExpandState {\n\tNotExpandable,\n\tExpandable,\n\tBusyExpanding,\n\tExpanded,\n}\n\n/**\n * TestItem-like shape, butm with an ID and children as strings.\n */\nexport interface InternalTestItem {\n\t/** Controller ID from whence this test came */\n\tcontrollerId: string;\n\t/** Expandability state */\n\texpand: TestItemExpandState;\n\t/** Parent ID, if any */\n\tparent: string | null;\n\t/** Raw test item properties */\n\titem: ITestItem;\n}\n\nexport namespace InternalTestItem {\n\texport interface Serialized {\n\t\tcontrollerId: string;\n\t\texpand: TestItemExpandState;\n\t\tparent: string | null;\n\t\titem: ITestItem.Serialized;\n\t}\n\n\texport const serialize = (item: InternalTestItem): Serialized => ({\n\t\tcontrollerId: item.controllerId,\n\t\texpand: item.expand,\n\t\tparent: item.parent,\n\t\titem: ITestItem.serialize(item.item)\n\t});\n\n\texport const deserialize = (serialized: Serialized): InternalTestItem => ({\n\t\tcontrollerId: serialized.controllerId,\n\t\texpand: serialized.expand,\n\t\tparent: serialized.parent,\n\t\titem: ITestItem.deserialize(serialized.item)\n\t});\n}\n\n/**\n * A partial update made to an existing InternalTestItem.\n */\nexport interface ITestItemUpdate {\n\textId: string;\n\texpand?: TestItemExpandState;\n\titem?: Partial<ITestItem>;\n}\n\nexport namespace ITestItemUpdate {\n\texport interface Serialized {\n\t\textId: string;\n\t\texpand?: TestItemExpandState;\n\t\titem?: Partial<ITestItem.Serialized>;\n\t}\n\n\texport const serialize = (u: ITestItemUpdate): Serialized => {\n\t\tlet item: Partial<ITestItem.Serialized> | undefined;\n\t\tif (u.item) {\n\t\t\titem = {};\n\t\t\tif (u.item.label !== undefined) { item.label = u.item.label; }\n\t\t\tif (u.item.tags !== undefined) { item.tags = u.item.tags; }\n\t\t\tif (u.item.busy !== undefined) { item.busy = u.item.busy; }\n\t\t\tif (u.item.uri !== undefined) { item.uri = u.item.uri?.toJSON(); }\n\t\t\tif (u.item.range !== undefined) { item.range = u.item.range?.toJSON(); }\n\t\t\tif (u.item.description !== undefined) { item.description = u.item.description; }\n\t\t\tif (u.item.error !== undefined) { item.error = u.item.error; }\n\t\t\tif (u.item.sortText !== undefined) { item.sortText = u.item.sortText; }\n\t\t}\n\n\t\treturn { extId: u.extId, expand: u.expand, item };\n\t};\n\n\texport const deserialize = (u: Serialized): ITestItemUpdate => {\n\t\tlet item: Partial<ITestItem> | undefined;\n\t\tif (u.item) {\n\t\t\titem = {};\n\t\t\tif (u.item.label !== undefined) { item.label = u.item.label; }\n\t\t\tif (u.item.tags !== undefined) { item.tags = u.item.tags; }\n\t\t\tif (u.item.busy !== undefined) { item.busy = u.item.busy; }\n\t\t\tif (u.item.range !== undefined) { item.range = u.item.range ? Range.lift(u.item.range) : null; }\n\t\t\tif (u.item.description !== undefined) { item.description = u.item.description; }\n\t\t\tif (u.item.error !== undefined) { item.error = u.item.error; }\n\t\t\tif (u.item.sortText !== undefined) { item.sortText = u.item.sortText; }\n\t\t}\n\n\t\treturn { extId: u.extId, expand: u.expand, item };\n\t};\n\n}\n\nexport const applyTestItemUpdate = (internal: InternalTestItem | ITestItemUpdate, patch: ITestItemUpdate) => {\n\tif (patch.expand !== undefined) {\n\t\tinternal.expand = patch.expand;\n\t}\n\tif (patch.item !== undefined) {\n\t\tinternal.item = internal.item ? Object.assign(internal.item, patch.item) : patch.item;\n\t}\n};\n\n/**\n * Test result item used in the main thread.\n */\nexport interface TestResultItem extends InternalTestItem {\n\t/** State of this test in various tasks */\n\ttasks: ITestTaskState[];\n\t/** State of this test as a computation of its tasks */\n\townComputedState: TestResultState;\n\t/** Computed state based on children */\n\tcomputedState: TestResultState;\n\t/** Max duration of the item's tasks (if run directly) */\n\townDuration?: number;\n}\n\nexport namespace TestResultItem {\n\t/** Serialized version of the TestResultItem */\n\texport interface Serialized extends InternalTestItem.Serialized {\n\t\tchildren: string[];\n\t\ttasks: ITestTaskState.Serialized[];\n\t\townComputedState: TestResultState;\n\t\tcomputedState: TestResultState;\n\t}\n\n\texport const serialize = (original: TestResultItem, children: string[]): Serialized => ({\n\t\t...InternalTestItem.serialize(original),\n\t\tchildren,\n\t\townComputedState: original.ownComputedState,\n\t\tcomputedState: original.computedState,\n\t\ttasks: original.tasks.map(ITestTaskState.serialize),\n\t});\n}\n\nexport interface ISerializedTestResults {\n\t/** ID of these test results */\n\tid: string;\n\t/** Time the results were compelted */\n\tcompletedAt: number;\n\t/** Subset of test result items */\n\titems: TestResultItem.Serialized[];\n\t/** Tasks involved in the run. */\n\ttasks: { id: string; name: string | undefined; messages: ITestOutputMessage.Serialized[] }[];\n\t/** Human-readable name of the test run. */\n\tname: string;\n\t/** Test trigger informaton */\n\trequest: ResolvedTestRunRequest;\n}\n\nexport interface ITestCoverage {\n\tfiles: IFileCoverage[];\n}\n\nexport interface ICoveredCount {\n\tcovered: number;\n\ttotal: number;\n}\n\nexport interface IFileCoverage {\n\turi: URI;\n\tstatement: ICoveredCount;\n\tbranch?: ICoveredCount;\n\tfunction?: ICoveredCount;\n\tdetails?: CoverageDetails[];\n}\n\nexport const enum DetailType {\n\tFunction,\n\tStatement,\n}\n\nexport type CoverageDetails = IFunctionCoverage | IStatementCoverage;\n\nexport interface IBranchCoverage {\n\tcount: number;\n\tlocation?: IRange | IPosition;\n}\n\nexport interface IFunctionCoverage {\n\ttype: DetailType.Function;\n\tcount: number;\n\tlocation?: IRange | IPosition;\n}\n\nexport interface IStatementCoverage {\n\ttype: DetailType.Statement;\n\tcount: number;\n\tlocation: IRange | IPosition;\n\tbranches?: IBranchCoverage[];\n}\n\nexport const enum TestDiffOpType {\n\t/** Adds a new test (with children) */\n\tAdd,\n\t/** Shallow-updates an existing test */\n\tUpdate,\n\t/** Removes a test (and all its children) */\n\tRemove,\n\t/** Changes the number of controllers who are yet to publish their collection roots. */\n\tIncrementPendingExtHosts,\n\t/** Retires a test/result */\n\tRetire,\n\t/** Add a new test tag */\n\tAddTag,\n\t/** Remove a test tag */\n\tRemoveTag,\n}\n\nexport type TestsDiffOp =\n\t| { op: TestDiffOpType.Add; item: InternalTestItem }\n\t| { op: TestDiffOpType.Update; item: ITestItemUpdate }\n\t| { op: TestDiffOpType.Remove; itemId: string }\n\t| { op: TestDiffOpType.Retire; itemId: string }\n\t| { op: TestDiffOpType.IncrementPendingExtHosts; amount: number }\n\t| { op: TestDiffOpType.AddTag; tag: ITestTagDisplayInfo }\n\t| { op: TestDiffOpType.RemoveTag; id: string };\n\nexport namespace TestsDiffOp {\n\texport type Serialized =\n\t\t| { op: TestDiffOpType.Add; item: InternalTestItem.Serialized }\n\t\t| { op: TestDiffOpType.Update; item: ITestItemUpdate.Serialized }\n\t\t| { op: TestDiffOpType.Remove; itemId: string }\n\t\t| { op: TestDiffOpType.Retire; itemId: string }\n\t\t| { op: TestDiffOpType.IncrementPendingExtHosts; amount: number }\n\t\t| { op: TestDiffOpType.AddTag; tag: ITestTagDisplayInfo }\n\t\t| { op: TestDiffOpType.RemoveTag; id: string };\n\n\texport const deserialize = (u: Serialized): TestsDiffOp => {\n\t\tif (u.op === TestDiffOpType.Add) {\n\t\t\treturn { op: u.op, item: InternalTestItem.deserialize(u.item) };\n\t\t} else if (u.op === TestDiffOpType.Update) {\n\t\t\treturn { op: u.op, item: ITestItemUpdate.deserialize(u.item) };\n\t\t} else {\n\t\t\treturn u;\n\t\t}\n\t};\n\n\texport const serialize = (u: TestsDiffOp): Serialized => {\n\t\tif (u.op === TestDiffOpType.Add) {\n\t\t\treturn { op: u.op, item: InternalTestItem.serialize(u.item) };\n\t\t} else if (u.op === TestDiffOpType.Update) {\n\t\t\treturn { op: u.op, item: ITestItemUpdate.serialize(u.item) };\n\t\t} else {\n\t\t\treturn u;\n\t\t}\n\t};\n}\n\n/**\n * Context for actions taken in the test explorer view.\n */\nexport interface ITestItemContext {\n\t/** Marshalling marker */\n\t$mid: MarshalledId.TestItemContext;\n\t/** Tests and parents from the root to the current items */\n\ttests: InternalTestItem.Serialized[];\n}\n\n/**\n * Request from the ext host or main thread to indicate that tests have\n * changed. It's assumed that any item upserted *must* have its children\n * previously also upserted, or upserted as part of the same operation.\n * Children that no longer exist in an upserted item will be removed.\n */\nexport type TestsDiff = TestsDiffOp[];\n\n/**\n * @private\n */\nexport interface IncrementalTestCollectionItem extends InternalTestItem {\n\tchildren: Set<string>;\n}\n\n/**\n * The IncrementalChangeCollector is used in the IncrementalTestCollection\n * and called with diff changes as they're applied. This is used in the\n * ext host to create a cohesive change event from a diff.\n */\nexport class IncrementalChangeCollector<T> {\n\t/**\n\t * A node was added.\n\t */\n\tpublic add(node: T): void { }\n\n\t/**\n\t * A node in the collection was updated.\n\t */\n\tpublic update(node: T): void { }\n\n\t/**\n\t * A node was removed.\n\t */\n\tpublic remove(node: T, isNestedOperation: boolean): void { }\n\n\t/**\n\t * Called when the diff has been applied.\n\t */\n\tpublic complete(): void { }\n}\n\n/**\n * Maintains tests in this extension host sent from the main thread.\n */\nexport abstract class AbstractIncrementalTestCollection<T extends IncrementalTestCollectionItem>  {\n\tprivate readonly _tags = new Map<string, ITestTagDisplayInfo>();\n\n\t/**\n\t * Map of item IDs to test item objects.\n\t */\n\tprotected readonly items = new Map<string, T>();\n\n\t/**\n\t * ID of test root items.\n\t */\n\tprotected readonly roots = new Set<T>();\n\n\t/**\n\t * Number of 'busy' controllers.\n\t */\n\tprotected busyControllerCount = 0;\n\n\t/**\n\t * Number of pending roots.\n\t */\n\tprotected pendingRootCount = 0;\n\n\t/**\n\t * Known test tags.\n\t */\n\tpublic readonly tags: ReadonlyMap<string, ITestTagDisplayInfo> = this._tags;\n\n\t/**\n\t * Applies the diff to the collection.\n\t */\n\tpublic apply(diff: TestsDiff) {\n\t\tconst changes = this.createChangeCollector();\n\n\t\tfor (const op of diff) {\n\t\t\tswitch (op.op) {\n\t\t\t\tcase TestDiffOpType.Add: {\n\t\t\t\t\tconst internalTest = InternalTestItem.deserialize(op.item);\n\t\t\t\t\tif (!internalTest.parent) {\n\t\t\t\t\t\tconst created = this.createItem(internalTest);\n\t\t\t\t\t\tthis.roots.add(created);\n\t\t\t\t\t\tthis.items.set(internalTest.item.extId, created);\n\t\t\t\t\t\tchanges.add(created);\n\t\t\t\t\t} else if (this.items.has(internalTest.parent)) {\n\t\t\t\t\t\tconst parent = this.items.get(internalTest.parent)!;\n\t\t\t\t\t\tparent.children.add(internalTest.item.extId);\n\t\t\t\t\t\tconst created = this.createItem(internalTest, parent);\n\t\t\t\t\t\tthis.items.set(internalTest.item.extId, created);\n\t\t\t\t\t\tchanges.add(created);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (internalTest.expand === TestItemExpandState.BusyExpanding) {\n\t\t\t\t\t\tthis.busyControllerCount++;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase TestDiffOpType.Update: {\n\t\t\t\t\tconst patch = ITestItemUpdate.deserialize(op.item);\n\t\t\t\t\tconst existing = this.items.get(patch.extId);\n\t\t\t\t\tif (!existing) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (patch.expand !== undefined) {\n\t\t\t\t\t\tif (existing.expand === TestItemExpandState.BusyExpanding) {\n\t\t\t\t\t\t\tthis.busyControllerCount--;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (patch.expand === TestItemExpandState.BusyExpanding) {\n\t\t\t\t\t\t\tthis.busyControllerCount++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tapplyTestItemUpdate(existing, patch);\n\t\t\t\t\tchanges.update(existing);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase TestDiffOpType.Remove: {\n\t\t\t\t\tconst toRemove = this.items.get(op.itemId);\n\t\t\t\t\tif (!toRemove) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (toRemove.parent) {\n\t\t\t\t\t\tconst parent = this.items.get(toRemove.parent)!;\n\t\t\t\t\t\tparent.children.delete(toRemove.item.extId);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.roots.delete(toRemove);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst queue: Iterable<string>[] = [[op.itemId]];\n\t\t\t\t\twhile (queue.length) {\n\t\t\t\t\t\tfor (const itemId of queue.pop()!) {\n\t\t\t\t\t\t\tconst existing = this.items.get(itemId);\n\t\t\t\t\t\t\tif (existing) {\n\t\t\t\t\t\t\t\tqueue.push(existing.children);\n\t\t\t\t\t\t\t\tthis.items.delete(itemId);\n\t\t\t\t\t\t\t\tchanges.remove(existing, existing !== toRemove);\n\n\t\t\t\t\t\t\t\tif (existing.expand === TestItemExpandState.BusyExpanding) {\n\t\t\t\t\t\t\t\t\tthis.busyControllerCount--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase TestDiffOpType.Retire:\n\t\t\t\t\tthis.retireTest(op.itemId);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TestDiffOpType.IncrementPendingExtHosts:\n\t\t\t\t\tthis.updatePendingRoots(op.amount);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TestDiffOpType.AddTag:\n\t\t\t\t\tthis._tags.set(op.tag.id, op.tag);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TestDiffOpType.RemoveTag:\n\t\t\t\t\tthis._tags.delete(op.id);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tchanges.complete();\n\t}\n\n\t/**\n\t * Called when the extension signals a test result should be retired.\n\t */\n\tprotected retireTest(testId: string) {\n\t\t// no-op\n\t}\n\n\t/**\n\t * Updates the number of test root sources who are yet to report. When\n\t * the total pending test roots reaches 0, the roots for all controllers\n\t * will exist in the collection.\n\t */\n\tpublic updatePendingRoots(delta: number) {\n\t\tthis.pendingRootCount += delta;\n\t}\n\n\t/**\n\t * Called before a diff is applied to create a new change collector.\n\t */\n\tprotected createChangeCollector() {\n\t\treturn new IncrementalChangeCollector<T>();\n\t}\n\n\t/**\n\t * Creates a new item for the collection from the internal test item.\n\t */\n\tprotected abstract createItem(internal: InternalTestItem, parent?: T): T;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Barrier, isThenable, RunOnceScheduler } from 'vs/base/common/async';\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { assertNever } from 'vs/base/common/types';\nimport { applyTestItemUpdate, ITestItem, ITestTag, namespaceTestTag, TestDiffOpType, TestItemExpandState, TestsDiff, TestsDiffOp } from 'vs/workbench/contrib/testing/common/testTypes';\nimport { TestId } from 'vs/workbench/contrib/testing/common/testId';\n\n/**\n * @private\n */\ninterface CollectionItem<T> {\n\treadonly fullId: TestId;\n\treadonly parent: TestId | null;\n\tactual: T;\n\texpand: TestItemExpandState;\n\t/**\n\t * Number of levels of items below this one that are expanded. May be infinite.\n\t */\n\texpandLevels?: number;\n\tresolveBarrier?: Barrier;\n}\n\nexport const enum TestItemEventOp {\n\tUpsert,\n\tSetTags,\n\tUpdateCanResolveChildren,\n\tRemoveChild,\n\tSetProp,\n\tBulk,\n}\n\nexport interface ITestItemUpsertChild {\n\top: TestItemEventOp.Upsert;\n\titem: ITestItemLike;\n}\n\nexport interface ITestItemUpdateCanResolveChildren {\n\top: TestItemEventOp.UpdateCanResolveChildren;\n\tstate: boolean;\n}\n\nexport interface ITestItemSetTags {\n\top: TestItemEventOp.SetTags;\n\tnew: ITestTag[];\n\told: ITestTag[];\n}\n\nexport interface ITestItemRemoveChild {\n\top: TestItemEventOp.RemoveChild;\n\tid: string;\n}\n\nexport interface ITestItemSetProp {\n\top: TestItemEventOp.SetProp;\n\tupdate: Partial<ITestItem>;\n}\nexport interface ITestItemBulkReplace {\n\top: TestItemEventOp.Bulk;\n\tops: (ITestItemUpsertChild | ITestItemRemoveChild)[];\n}\n\nexport type ExtHostTestItemEvent =\n\t| ITestItemSetTags\n\t| ITestItemUpsertChild\n\t| ITestItemRemoveChild\n\t| ITestItemUpdateCanResolveChildren\n\t| ITestItemSetProp\n\t| ITestItemBulkReplace;\n\nexport interface ITestItemApi<T> {\n\tcontrollerId: string;\n\tparent?: T;\n\tlistener?: (evt: ExtHostTestItemEvent) => void;\n}\n\nexport interface ITestItemCollectionOptions<T> {\n\t/** Controller ID to use to prefix these test items. */\n\tcontrollerId: string;\n\n\t/** Gets API for the given test item, used to listen for events and set parents. */\n\tgetApiFor(item: T): ITestItemApi<T>;\n\n\t/** Converts the full test item to the common interface. */\n\ttoITestItem(item: T): ITestItem;\n\n\t/** Gets children for the item. */\n\tgetChildren(item: T): ITestChildrenLike<T>;\n\n\t/** Root to use for the new test collection. */\n\troot: T;\n}\n\nconst strictEqualComparator = <T>(a: T, b: T) => a === b;\nconst diffableProps: { [K in keyof ITestItem]?: (a: ITestItem[K], b: ITestItem[K]) => boolean } = {\n\trange: (a, b) => {\n\t\tif (a === b) { return true; }\n\t\tif (!a || !b) { return false; }\n\t\treturn a.equalsRange(b);\n\t},\n\tbusy: strictEqualComparator,\n\tlabel: strictEqualComparator,\n\tdescription: strictEqualComparator,\n\terror: strictEqualComparator,\n\ttags: (a, b) => {\n\t\tif (a.length !== b.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (a.some(t1 => !b.includes(t1))) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n};\n\nconst diffTestItems = (a: ITestItem, b: ITestItem) => {\n\tlet output: Record<string, unknown> | undefined;\n\tfor (const [key, cmp] of Object.entries(diffableProps) as [keyof ITestItem, (a: any, b: any) => boolean][]) {\n\t\tif (!cmp(a[key], b[key])) {\n\t\t\tif (output) {\n\t\t\t\toutput[key] = b[key];\n\t\t\t} else {\n\t\t\t\toutput = { [key]: b[key] };\n\t\t\t}\n\t\t}\n\t}\n\n\treturn output as Partial<ITestItem> | undefined;\n};\n\nexport interface ITestChildrenLike<T> extends Iterable<[string, T]> {\n\tget(id: string): T | undefined;\n\tdelete(id: string): void;\n}\n\nexport interface ITestItemLike {\n\tid: string;\n\ttags: readonly ITestTag[];\n\tcanResolveChildren: boolean;\n}\n\n/**\n * Maintains a collection of test items for a single controller.\n */\nexport class TestItemCollection<T extends ITestItemLike> extends Disposable {\n\tprivate readonly debounceSendDiff = this._register(new RunOnceScheduler(() => this.flushDiff(), 200));\n\tprivate readonly diffOpEmitter = this._register(new Emitter<TestsDiff>());\n\tprivate _resolveHandler?: (item: T | undefined) => Promise<void> | void;\n\n\tpublic get root() {\n\t\treturn this.options.root;\n\t}\n\n\tpublic readonly tree = new Map</* full test id */string, CollectionItem<T>>();\n\tprivate readonly tags = new Map<string, { label?: string; refCount: number }>();\n\n\tprotected diff: TestsDiff = [];\n\n\tconstructor(private readonly options: ITestItemCollectionOptions<T>) {\n\t\tsuper();\n\t\tthis.root.canResolveChildren = true;\n\t\tthis.upsertItem(this.root, undefined);\n\t}\n\n\t/**\n\t * Handler used for expanding test items.\n\t */\n\tpublic set resolveHandler(handler: undefined | ((item: T | undefined) => void)) {\n\t\tthis._resolveHandler = handler;\n\t\tfor (const test of this.tree.values()) {\n\t\t\tthis.updateExpandability(test);\n\t\t}\n\t}\n\n\t/**\n\t * Fires when an operation happens that should result in a diff.\n\t */\n\tpublic readonly onDidGenerateDiff = this.diffOpEmitter.event;\n\n\t/**\n\t * Gets a diff of all changes that have been made, and clears the diff queue.\n\t */\n\tpublic collectDiff() {\n\t\tconst diff = this.diff;\n\t\tthis.diff = [];\n\t\treturn diff;\n\t}\n\n\t/**\n\t * Pushes a new diff entry onto the collected diff list.\n\t */\n\tpublic pushDiff(diff: TestsDiffOp) {\n\t\t// Try to merge updates, since they're invoked per-property\n\t\tconst last = this.diff[this.diff.length - 1];\n\t\tif (last && diff.op === TestDiffOpType.Update) {\n\t\t\tif (last.op === TestDiffOpType.Update && last.item.extId === diff.item.extId) {\n\t\t\t\tapplyTestItemUpdate(last.item, diff.item);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (last.op === TestDiffOpType.Add && last.item.item.extId === diff.item.extId) {\n\t\t\t\tapplyTestItemUpdate(last.item, diff.item);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.diff.push(diff);\n\n\t\tif (!this.debounceSendDiff.isScheduled()) {\n\t\t\tthis.debounceSendDiff.schedule();\n\t\t}\n\t}\n\n\t/**\n\t * Expands the test and the given number of `levels` of children. If levels\n\t * is < 0, then all children will be expanded. If it's 0, then only this\n\t * item will be expanded.\n\t */\n\tpublic expand(testId: string, levels: number): Promise<void> | void {\n\t\tconst internal = this.tree.get(testId);\n\t\tif (!internal) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (internal.expandLevels === undefined || levels > internal.expandLevels) {\n\t\t\tinternal.expandLevels = levels;\n\t\t}\n\n\t\t// try to avoid awaiting things if the provider returns synchronously in\n\t\t// order to keep everything in a single diff and DOM update.\n\t\tif (internal.expand === TestItemExpandState.Expandable) {\n\t\t\tconst r = this.resolveChildren(internal);\n\t\t\treturn !r.isOpen()\n\t\t\t\t? r.wait().then(() => this.expandChildren(internal, levels - 1))\n\t\t\t\t: this.expandChildren(internal, levels - 1);\n\t\t} else if (internal.expand === TestItemExpandState.Expanded) {\n\t\t\treturn internal.resolveBarrier?.isOpen() === false\n\t\t\t\t? internal.resolveBarrier.wait().then(() => this.expandChildren(internal, levels - 1))\n\t\t\t\t: this.expandChildren(internal, levels - 1);\n\t\t}\n\t}\n\n\tpublic override dispose() {\n\t\tfor (const item of this.tree.values()) {\n\t\t\tthis.options.getApiFor(item.actual).listener = undefined;\n\t\t}\n\n\t\tthis.tree.clear();\n\t\tthis.diff = [];\n\t\tsuper.dispose();\n\t}\n\n\tprivate onTestItemEvent(internal: CollectionItem<T>, evt: ExtHostTestItemEvent) {\n\t\tswitch (evt.op) {\n\t\t\tcase TestItemEventOp.RemoveChild:\n\t\t\t\tthis.removeItem(TestId.joinToString(internal.fullId, evt.id));\n\t\t\t\tbreak;\n\n\t\t\tcase TestItemEventOp.Upsert:\n\t\t\t\tthis.upsertItem(evt.item as T, internal);\n\t\t\t\tbreak;\n\n\t\t\tcase TestItemEventOp.Bulk:\n\t\t\t\tfor (const op of evt.ops) {\n\t\t\t\t\tthis.onTestItemEvent(internal, op);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase TestItemEventOp.SetTags:\n\t\t\t\tthis.diffTagRefs(evt.new, evt.old, internal.fullId.toString());\n\t\t\t\tbreak;\n\n\t\t\tcase TestItemEventOp.UpdateCanResolveChildren:\n\t\t\t\tthis.updateExpandability(internal);\n\t\t\t\tbreak;\n\n\t\t\tcase TestItemEventOp.SetProp:\n\t\t\t\tthis.pushDiff({\n\t\t\t\t\top: TestDiffOpType.Update,\n\t\t\t\t\titem: { extId: internal.fullId.toString(), item: evt.update }\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tassertNever(evt);\n\t\t}\n\t}\n\n\tprivate upsertItem(actual: T, parent: CollectionItem<T> | undefined) {\n\t\tconst fullId = TestId.fromExtHostTestItem(actual, this.root.id, parent?.actual);\n\n\t\t// If this test item exists elsewhere in the tree already (exists at an\n\t\t// old ID with an existing parent), remove that old item.\n\t\tconst privateApi = this.options.getApiFor(actual);\n\t\tif (privateApi.parent && privateApi.parent !== parent?.actual) {\n\t\t\tthis.options.getChildren(privateApi.parent).delete(actual.id);\n\t\t}\n\n\t\tlet internal = this.tree.get(fullId.toString());\n\t\t// Case 1: a brand new item\n\t\tif (!internal) {\n\t\t\tinternal = {\n\t\t\t\tfullId,\n\t\t\t\tactual,\n\t\t\t\tparent: parent ? fullId.parentId : null,\n\t\t\t\texpandLevels: parent?.expandLevels /* intentionally undefined or 0 */ ? parent.expandLevels - 1 : undefined,\n\t\t\t\texpand: TestItemExpandState.NotExpandable, // updated by `connectItemAndChildren`\n\t\t\t};\n\n\t\t\tactual.tags.forEach(this.incrementTagRefs, this);\n\t\t\tthis.tree.set(internal.fullId.toString(), internal);\n\t\t\tthis.setItemParent(actual, parent);\n\t\t\tthis.pushDiff({\n\t\t\t\top: TestDiffOpType.Add,\n\t\t\t\titem: {\n\t\t\t\t\tparent: internal.parent && internal.parent.toString(),\n\t\t\t\t\tcontrollerId: this.options.controllerId,\n\t\t\t\t\texpand: internal.expand,\n\t\t\t\t\titem: this.options.toITestItem(actual),\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tthis.connectItemAndChildren(actual, internal, parent);\n\t\t\treturn;\n\t\t}\n\n\t\t// Case 2: re-insertion of an existing item, no-op\n\t\tif (internal.actual === actual) {\n\t\t\tthis.connectItem(actual, internal, parent); // re-connect in case the parent changed\n\t\t\treturn; // no-op\n\t\t}\n\n\t\t// Case 3: upsert of an existing item by ID, with a new instance\n\t\tconst oldChildren = this.options.getChildren(internal.actual);\n\t\tconst oldActual = internal.actual;\n\t\tconst update = diffTestItems(this.options.toITestItem(oldActual), this.options.toITestItem(actual));\n\t\tthis.options.getApiFor(oldActual).listener = undefined;\n\n\t\tinternal.actual = actual;\n\t\tinternal.expand = TestItemExpandState.NotExpandable; // updated by `connectItemAndChildren`\n\n\t\tif (update) {\n\t\t\t// tags are handled in a special way\n\t\t\tif (update.hasOwnProperty('tags')) {\n\t\t\t\tthis.diffTagRefs(actual.tags, oldActual.tags, fullId.toString());\n\t\t\t\tdelete update.tags;\n\t\t\t}\n\t\t\tthis.onTestItemEvent(internal, { op: TestItemEventOp.SetProp, update });\n\t\t}\n\n\t\tthis.connectItemAndChildren(actual, internal, parent);\n\n\t\t// Remove any orphaned children.\n\t\tfor (const [_, child] of oldChildren) {\n\t\t\tif (!this.options.getChildren(actual).get(child.id)) {\n\t\t\t\tthis.removeItem(TestId.joinToString(fullId, child.id));\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate diffTagRefs(newTags: readonly ITestTag[], oldTags: readonly ITestTag[], extId: string) {\n\t\tconst toDelete = new Set(oldTags.map(t => t.id));\n\t\tfor (const tag of newTags) {\n\t\t\tif (!toDelete.delete(tag.id)) {\n\t\t\t\tthis.incrementTagRefs(tag);\n\t\t\t}\n\t\t}\n\n\t\tthis.pushDiff({\n\t\t\top: TestDiffOpType.Update,\n\t\t\titem: { extId, item: { tags: newTags.map(v => namespaceTestTag(this.options.controllerId, v.id)) } }\n\t\t});\n\n\t\ttoDelete.forEach(this.decrementTagRefs, this);\n\t}\n\n\tprivate incrementTagRefs(tag: ITestTag) {\n\t\tconst existing = this.tags.get(tag.id);\n\t\tif (existing) {\n\t\t\texisting.refCount++;\n\t\t} else {\n\t\t\tthis.tags.set(tag.id, { refCount: 1 });\n\t\t\tthis.pushDiff({\n\t\t\t\top: TestDiffOpType.AddTag, tag: {\n\t\t\t\t\tid: namespaceTestTag(this.options.controllerId, tag.id),\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate decrementTagRefs(tagId: string) {\n\t\tconst existing = this.tags.get(tagId);\n\t\tif (existing && !--existing.refCount) {\n\t\t\tthis.tags.delete(tagId);\n\t\t\tthis.pushDiff({ op: TestDiffOpType.RemoveTag, id: namespaceTestTag(this.options.controllerId, tagId) });\n\t\t}\n\t}\n\n\tprivate setItemParent(actual: T, parent: CollectionItem<T> | undefined) {\n\t\tthis.options.getApiFor(actual).parent = parent && parent.actual !== this.root ? parent.actual : undefined;\n\t}\n\n\tprivate connectItem(actual: T, internal: CollectionItem<T>, parent: CollectionItem<T> | undefined) {\n\t\tthis.setItemParent(actual, parent);\n\t\tconst api = this.options.getApiFor(actual);\n\t\tapi.parent = parent?.actual;\n\t\tapi.listener = evt => this.onTestItemEvent(internal, evt);\n\t\tthis.updateExpandability(internal);\n\t}\n\n\tprivate connectItemAndChildren(actual: T, internal: CollectionItem<T>, parent: CollectionItem<T> | undefined) {\n\t\tthis.connectItem(actual, internal, parent);\n\n\t\t// Discover any existing children that might have already been added\n\t\tfor (const [_, child] of this.options.getChildren(actual)) {\n\t\t\tthis.upsertItem(child, internal);\n\t\t}\n\t}\n\n\t/**\n\t * Updates the `expand` state of the item. Should be called whenever the\n\t * resolved state of the item changes. Can automatically expand the item\n\t * if requested by a consumer.\n\t */\n\tprivate updateExpandability(internal: CollectionItem<T>) {\n\t\tlet newState: TestItemExpandState;\n\t\tif (!this._resolveHandler) {\n\t\t\tnewState = TestItemExpandState.NotExpandable;\n\t\t} else if (internal.resolveBarrier) {\n\t\t\tnewState = internal.resolveBarrier.isOpen()\n\t\t\t\t? TestItemExpandState.Expanded\n\t\t\t\t: TestItemExpandState.BusyExpanding;\n\t\t} else {\n\t\t\tnewState = internal.actual.canResolveChildren\n\t\t\t\t? TestItemExpandState.Expandable\n\t\t\t\t: TestItemExpandState.NotExpandable;\n\t\t}\n\n\t\tif (newState === internal.expand) {\n\t\t\treturn;\n\t\t}\n\n\t\tinternal.expand = newState;\n\t\tthis.pushDiff({ op: TestDiffOpType.Update, item: { extId: internal.fullId.toString(), expand: newState } });\n\n\t\tif (newState === TestItemExpandState.Expandable && internal.expandLevels !== undefined) {\n\t\t\tthis.resolveChildren(internal);\n\t\t}\n\t}\n\n\t/**\n\t * Expands all children of the item, \"levels\" deep. If levels is 0, only\n\t * the children will be expanded. If it's 1, the children and their children\n\t * will be expanded. If it's <0, it's a no-op.\n\t */\n\tprivate expandChildren(internal: CollectionItem<T>, levels: number): Promise<void> | void {\n\t\tif (levels < 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst expandRequests: Promise<void>[] = [];\n\t\tfor (const [_, child] of this.options.getChildren(internal.actual)) {\n\t\t\tconst promise = this.expand(TestId.joinToString(internal.fullId, child.id), levels);\n\t\t\tif (isThenable(promise)) {\n\t\t\t\texpandRequests.push(promise);\n\t\t\t}\n\t\t}\n\n\t\tif (expandRequests.length) {\n\t\t\treturn Promise.all(expandRequests).then(() => { });\n\t\t}\n\t}\n\n\t/**\n\t * Calls `discoverChildren` on the item, refreshing all its tests.\n\t */\n\tprivate resolveChildren(internal: CollectionItem<T>) {\n\t\tif (internal.resolveBarrier) {\n\t\t\treturn internal.resolveBarrier;\n\t\t}\n\n\t\tif (!this._resolveHandler) {\n\t\t\tconst b = new Barrier();\n\t\t\tb.open();\n\t\t\treturn b;\n\t\t}\n\n\t\tinternal.expand = TestItemExpandState.BusyExpanding;\n\t\tthis.pushExpandStateUpdate(internal);\n\n\t\tconst barrier = internal.resolveBarrier = new Barrier();\n\t\tconst applyError = (err: Error) => {\n\t\t\tconsole.error(`Unhandled error in resolveHandler of test controller \"${this.options.controllerId}\"`, err);\n\t\t};\n\n\t\tlet r: Thenable<void> | void;\n\t\ttry {\n\t\t\tr = this._resolveHandler(internal.actual === this.root ? undefined : internal.actual);\n\t\t} catch (err) {\n\t\t\tapplyError(err);\n\t\t}\n\n\t\tif (isThenable(r)) {\n\t\t\tr.catch(applyError).then(() => {\n\t\t\t\tbarrier.open();\n\t\t\t\tthis.updateExpandability(internal);\n\t\t\t});\n\t\t} else {\n\t\t\tbarrier.open();\n\t\t\tthis.updateExpandability(internal);\n\t\t}\n\n\t\treturn internal.resolveBarrier;\n\t}\n\n\tprivate pushExpandStateUpdate(internal: CollectionItem<T>) {\n\t\tthis.pushDiff({ op: TestDiffOpType.Update, item: { extId: internal.fullId.toString(), expand: internal.expand } });\n\t}\n\n\tprivate removeItem(childId: string) {\n\t\tconst childItem = this.tree.get(childId);\n\t\tif (!childItem) {\n\t\t\tthrow new Error('attempting to remove non-existent child');\n\t\t}\n\n\t\tthis.pushDiff({ op: TestDiffOpType.Remove, itemId: childId });\n\n\t\tconst queue: (CollectionItem<T> | undefined)[] = [childItem];\n\t\twhile (queue.length) {\n\t\t\tconst item = queue.pop();\n\t\t\tif (!item) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tthis.options.getApiFor(item.actual).listener = undefined;\n\n\t\t\tfor (const tag of item.actual.tags) {\n\t\t\t\tthis.decrementTagRefs(tag.id);\n\t\t\t}\n\n\t\t\tthis.tree.delete(item.fullId.toString());\n\t\t\tfor (const [_, child] of this.options.getChildren(item.actual)) {\n\t\t\t\tqueue.push(this.tree.get(TestId.joinToString(item.fullId, child.id)));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Immediately emits any pending diffs on the collection.\n\t */\n\tpublic flushDiff() {\n\t\tconst diff = this.collectDiff();\n\t\tif (diff.length) {\n\t\t\tthis.diffOpEmitter.fire(diff);\n\t\t}\n\t}\n}\n\n/** Implementation of vscode.TestItemCollection */\nexport interface ITestItemChildren<T extends ITestItemLike> extends Iterable<[string, T]> {\n\treadonly size: number;\n\treplace(items: readonly T[]): void;\n\tforEach(callback: (item: T, collection: this) => unknown, thisArg?: unknown): void;\n\tadd(item: T): void;\n\tdelete(itemId: string): void;\n\tget(itemId: string): T | undefined;\n\n\ttoJSON(): readonly T[];\n}\n\nexport class DuplicateTestItemError extends Error {\n\tconstructor(id: string) {\n\t\tsuper(`Attempted to insert a duplicate test item ID ${id}`);\n\t}\n}\n\nexport class InvalidTestItemError extends Error {\n\tconstructor(id: string) {\n\t\tsuper(`TestItem with ID \"${id}\" is invalid. Make sure to create it from the createTestItem method.`);\n\t}\n}\n\nexport class MixedTestItemController extends Error {\n\tconstructor(id: string, ctrlA: string, ctrlB: string) {\n\t\tsuper(`TestItem with ID \"${id}\" is from controller \"${ctrlA}\" and cannot be added as a child of an item from controller \"${ctrlB}\".`);\n\t}\n}\n\nexport const createTestItemChildren = <T extends ITestItemLike>(api: ITestItemApi<T>, getApi: (item: T) => ITestItemApi<T>, checkCtor: Function): ITestItemChildren<T> => {\n\tlet mapped = new Map<string, T>();\n\n\treturn {\n\t\t/** @inheritdoc */\n\t\tget size() {\n\t\t\treturn mapped.size;\n\t\t},\n\n\t\t/** @inheritdoc */\n\t\tforEach(callback: (item: T, collection: ITestItemChildren<T>) => unknown, thisArg?: unknown) {\n\t\t\tfor (const item of mapped.values()) {\n\t\t\t\tcallback.call(thisArg, item, this);\n\t\t\t}\n\t\t},\n\n\t\t/** @inheritdoc */\n\t\t[Symbol.iterator](): IterableIterator<[string, T]> {\n\t\t\treturn mapped.entries();\n\t\t},\n\n\t\t/** @inheritdoc */\n\t\treplace(items: Iterable<T>) {\n\t\t\tconst newMapped = new Map<string, T>();\n\t\t\tconst toDelete = new Set(mapped.keys());\n\t\t\tconst bulk: ITestItemBulkReplace = { op: TestItemEventOp.Bulk, ops: [] };\n\n\t\t\tfor (const item of items) {\n\t\t\t\tif (!(item instanceof checkCtor)) {\n\t\t\t\t\tthrow new InvalidTestItemError(item.id);\n\t\t\t\t}\n\n\t\t\t\tconst itemController = getApi(item).controllerId;\n\t\t\t\tif (itemController !== api.controllerId) {\n\t\t\t\t\tthrow new MixedTestItemController(item.id, itemController, api.controllerId);\n\t\t\t\t}\n\n\t\t\t\tif (newMapped.has(item.id)) {\n\t\t\t\t\tthrow new DuplicateTestItemError(item.id);\n\t\t\t\t}\n\n\t\t\t\tnewMapped.set(item.id, item);\n\t\t\t\ttoDelete.delete(item.id);\n\t\t\t\tbulk.ops.push({ op: TestItemEventOp.Upsert, item });\n\t\t\t}\n\n\t\t\tfor (const id of toDelete.keys()) {\n\t\t\t\tbulk.ops.push({ op: TestItemEventOp.RemoveChild, id });\n\t\t\t}\n\n\t\t\tapi.listener?.(bulk);\n\n\t\t\t// important mutations come after firing, so if an error happens no\n\t\t\t// changes will be \"saved\":\n\t\t\tmapped = newMapped;\n\t\t},\n\n\n\t\t/** @inheritdoc */\n\t\tadd(item: T) {\n\t\t\tif (!(item instanceof checkCtor)) {\n\t\t\t\tthrow new InvalidTestItemError(item.id);\n\t\t\t}\n\n\t\t\tmapped.set(item.id, item);\n\t\t\tapi.listener?.({ op: TestItemEventOp.Upsert, item });\n\t\t},\n\n\t\t/** @inheritdoc */\n\t\tdelete(id: string) {\n\t\t\tif (mapped.delete(id)) {\n\t\t\t\tapi.listener?.({ op: TestItemEventOp.RemoveChild, id });\n\t\t\t}\n\t\t},\n\n\t\t/** @inheritdoc */\n\t\tget(itemId: string) {\n\t\t\treturn mapped.get(itemId);\n\t\t},\n\n\t\t/** JSON serialization function. */\n\t\ttoJSON() {\n\t\t\treturn Array.from(mapped.values());\n\t\t},\n\t};\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ExtHostTestItemEvent, InvalidTestItemError } from 'vs/workbench/contrib/testing/common/testItemCollection';\nimport * as vscode from 'vscode';\n\nexport interface IExtHostTestItemApi {\n\tcontrollerId: string;\n\tparent?: vscode.TestItem;\n\tlistener?: (evt: ExtHostTestItemEvent) => void;\n}\n\nconst eventPrivateApis = new WeakMap<vscode.TestItem, IExtHostTestItemApi>();\n\nexport const createPrivateApiFor = (impl: vscode.TestItem, controllerId: string) => {\n\tconst api: IExtHostTestItemApi = { controllerId };\n\teventPrivateApis.set(impl, api);\n\treturn api;\n};\n\n/**\n * Gets the private API for a test item implementation. This implementation\n * is a managed object, but we keep a weakmap to avoid exposing any of the\n * internals to extensions.\n */\nexport const getPrivateApiFor = (impl: vscode.TestItem) => {\n\tconst api = eventPrivateApis.get(impl);\n\tif (!api) {\n\t\tthrow new InvalidTestItemError(impl?.id || '<unknown>');\n\t}\n\n\treturn api;\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ConfigurationScope } from 'vs/platform/configuration/common/configurationRegistry';\nimport { URI } from 'vs/base/common/uri';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { refineServiceDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { IAnyWorkspaceIdentifier } from 'vs/platform/workspace/common/workspace';\n\nexport const FOLDER_CONFIG_FOLDER_NAME = '.vscode';\nexport const FOLDER_SETTINGS_NAME = 'settings';\nexport const FOLDER_SETTINGS_PATH = `${FOLDER_CONFIG_FOLDER_NAME}/${FOLDER_SETTINGS_NAME}.json`;\n\nexport const defaultSettingsSchemaId = 'vscode://schemas/settings/default';\nexport const userSettingsSchemaId = 'vscode://schemas/settings/user';\nexport const profileSettingsSchemaId = 'vscode://schemas/settings/profile';\nexport const machineSettingsSchemaId = 'vscode://schemas/settings/machine';\nexport const workspaceSettingsSchemaId = 'vscode://schemas/settings/workspace';\nexport const folderSettingsSchemaId = 'vscode://schemas/settings/folder';\nexport const launchSchemaId = 'vscode://schemas/launch';\nexport const tasksSchemaId = 'vscode://schemas/tasks';\n\nexport const APPLICATION_SCOPES = [ConfigurationScope.APPLICATION];\nexport const PROFILE_SCOPES = [ConfigurationScope.MACHINE, ConfigurationScope.WINDOW, ConfigurationScope.RESOURCE, ConfigurationScope.LANGUAGE_OVERRIDABLE];\nexport const LOCAL_MACHINE_PROFILE_SCOPES = [ConfigurationScope.WINDOW, ConfigurationScope.RESOURCE, ConfigurationScope.LANGUAGE_OVERRIDABLE];\nexport const LOCAL_MACHINE_SCOPES = [ConfigurationScope.APPLICATION, ...LOCAL_MACHINE_PROFILE_SCOPES];\nexport const REMOTE_MACHINE_SCOPES = [ConfigurationScope.MACHINE, ConfigurationScope.WINDOW, ConfigurationScope.RESOURCE, ConfigurationScope.LANGUAGE_OVERRIDABLE, ConfigurationScope.MACHINE_OVERRIDABLE];\nexport const WORKSPACE_SCOPES = [ConfigurationScope.WINDOW, ConfigurationScope.RESOURCE, ConfigurationScope.LANGUAGE_OVERRIDABLE, ConfigurationScope.MACHINE_OVERRIDABLE];\nexport const FOLDER_SCOPES = [ConfigurationScope.RESOURCE, ConfigurationScope.LANGUAGE_OVERRIDABLE, ConfigurationScope.MACHINE_OVERRIDABLE];\n\nexport const TASKS_CONFIGURATION_KEY = 'tasks';\nexport const LAUNCH_CONFIGURATION_KEY = 'launch';\n\nexport const WORKSPACE_STANDALONE_CONFIGURATIONS = Object.create(null);\nWORKSPACE_STANDALONE_CONFIGURATIONS[TASKS_CONFIGURATION_KEY] = `${FOLDER_CONFIG_FOLDER_NAME}/${TASKS_CONFIGURATION_KEY}.json`;\nWORKSPACE_STANDALONE_CONFIGURATIONS[LAUNCH_CONFIGURATION_KEY] = `${FOLDER_CONFIG_FOLDER_NAME}/${LAUNCH_CONFIGURATION_KEY}.json`;\nexport const USER_STANDALONE_CONFIGURATIONS = Object.create(null);\nUSER_STANDALONE_CONFIGURATIONS[TASKS_CONFIGURATION_KEY] = `${TASKS_CONFIGURATION_KEY}.json`;\n\nexport type ConfigurationKey = { type: 'defaults' | 'user' | 'workspaces' | 'folder'; key: string };\n\nexport interface IConfigurationCache {\n\n\tneedsCaching(resource: URI): boolean;\n\tread(key: ConfigurationKey): Promise<string>;\n\twrite(key: ConfigurationKey, content: string): Promise<void>;\n\tremove(key: ConfigurationKey): Promise<void>;\n\n}\n\nexport type RestrictedSettings = {\n\tdefault: ReadonlyArray<string>;\n\tapplication?: ReadonlyArray<string>;\n\tuserLocal?: ReadonlyArray<string>;\n\tuserRemote?: ReadonlyArray<string>;\n\tworkspace?: ReadonlyArray<string>;\n\tworkspaceFolder?: ResourceMap<ReadonlyArray<string>>;\n};\n\nexport const IWorkbenchConfigurationService = refineServiceDecorator<IConfigurationService, IWorkbenchConfigurationService>(IConfigurationService);\nexport interface IWorkbenchConfigurationService extends IConfigurationService {\n\t/**\n\t * Restricted settings defined in each configuration target\n\t */\n\treadonly restrictedSettings: RestrictedSettings;\n\n\t/**\n\t * Event that triggers when the restricted settings changes\n\t */\n\treadonly onDidChangeRestrictedSettings: Event<RestrictedSettings>;\n\n\t/**\n\t * A promise that resolves when the remote configuration is loaded in a remote window.\n\t * The promise is resolved immediately if the window is not remote.\n\t */\n\twhenRemoteConfigurationLoaded(): Promise<void>;\n\n\t/**\n\t * Initialize configuration service for the given workspace\n\t * @param arg workspace Identifier\n\t */\n\tinitialize(arg: IAnyWorkspaceIdentifier): Promise<void>;\n}\n\nexport const TASKS_DEFAULT = '{\\n\\t\\\"version\\\": \\\"2.0.0\\\",\\n\\t\\\"tasks\\\": []\\n}';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { ConfigurationTarget } from 'vs/platform/configuration/common/configuration';\nimport { IProcessEnvironment } from 'vs/base/common/platform';\n\nexport const IConfigurationResolverService = createDecorator<IConfigurationResolverService>('configurationResolverService');\n\nexport interface IConfigurationResolverService {\n\treadonly _serviceBrand: undefined;\n\n\tresolveWithEnvironment(environment: IProcessEnvironment, folder: IWorkspaceFolder | undefined, value: string): Promise<string>;\n\n\tresolveAsync(folder: IWorkspaceFolder | undefined, value: string): Promise<string>;\n\tresolveAsync(folder: IWorkspaceFolder | undefined, value: string[]): Promise<string[]>;\n\tresolveAsync(folder: IWorkspaceFolder | undefined, value: IStringDictionary<string>): Promise<IStringDictionary<string>>;\n\n\t/**\n\t * Recursively resolves all variables in the given config and returns a copy of it with substituted values.\n\t * Command variables are only substituted if a \"commandValueMapping\" dictionary is given and if it contains an entry for the command.\n\t */\n\tresolveAnyAsync(folder: IWorkspaceFolder | undefined, config: any, commandValueMapping?: IStringDictionary<string>): Promise<any>;\n\n\t/**\n\t * Recursively resolves all variables in the given config.\n\t * Returns a copy of it with substituted values and a map of variables and their resolution.\n\t * Keys in the map will be of the format input:variableName or command:variableName.\n\t */\n\tresolveAnyMap(folder: IWorkspaceFolder | undefined, config: any, commandValueMapping?: IStringDictionary<string>): Promise<{ newConfig: any; resolvedVariables: Map<string, string> }>;\n\n\t/**\n\t * Recursively resolves all variables (including commands and user input) in the given config and returns a copy of it with substituted values.\n\t * If a \"variables\" dictionary (with names -> command ids) is given, command variables are first mapped through it before being resolved.\n\t *\n\t * @param section For example, 'tasks' or 'debug'. Used for resolving inputs.\n\t * @param variables Aliases for commands.\n\t */\n\tresolveWithInteractionReplace(folder: IWorkspaceFolder | undefined, config: any, section?: string, variables?: IStringDictionary<string>, target?: ConfigurationTarget): Promise<any>;\n\n\t/**\n\t * Similar to resolveWithInteractionReplace, except without the replace. Returns a map of variables and their resolution.\n\t * Keys in the map will be of the format input:variableName or command:variableName.\n\t */\n\tresolveWithInteraction(folder: IWorkspaceFolder | undefined, config: any, section?: string, variables?: IStringDictionary<string>, target?: ConfigurationTarget): Promise<Map<string, string> | undefined>;\n\n\t/**\n\t * Contributes a variable that can be resolved later. Consumers that use resolveAny, resolveWithInteraction,\n\t * and resolveWithInteractionReplace will have contributed variables resolved.\n\t */\n\tcontributeVariable(variable: string, resolution: () => Promise<string | undefined>): void;\n}\n\nexport interface PromptStringInputInfo {\n\tid: string;\n\ttype: 'promptString';\n\tdescription: string;\n\tdefault?: string;\n\tpassword?: boolean;\n}\n\nexport interface PickStringInputInfo {\n\tid: string;\n\ttype: 'pickString';\n\tdescription: string;\n\toptions: (string | { value: string; label?: string })[];\n\tdefault?: string;\n}\n\nexport interface CommandInputInfo {\n\tid: string;\n\ttype: 'command';\n\tcommand: string;\n\targs?: any;\n}\n\nexport type ConfiguredInput = PromptStringInputInfo | PickStringInputInfo | CommandInputInfo;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as paths from 'vs/base/common/path';\nimport * as process from 'vs/base/common/process';\nimport * as types from 'vs/base/common/types';\nimport * as objects from 'vs/base/common/objects';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { IProcessEnvironment, isWindows, isMacintosh, isLinux } from 'vs/base/common/platform';\nimport { normalizeDriveLetter } from 'vs/base/common/labels';\nimport { localize } from 'vs/nls';\nimport { URI as uri } from 'vs/base/common/uri';\nimport { IConfigurationResolverService } from 'vs/workbench/services/configurationResolver/common/configurationResolver';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { replaceAsync } from 'vs/base/common/strings';\n\nexport interface IVariableResolveContext {\n\tgetFolderUri(folderName: string): uri | undefined;\n\tgetWorkspaceFolderCount(): number;\n\tgetConfigurationValue(folderUri: uri | undefined, section: string): string | undefined;\n\tgetAppRoot(): string | undefined;\n\tgetExecPath(): string | undefined;\n\tgetFilePath(): string | undefined;\n\tgetWorkspaceFolderPathForFile?(): string | undefined;\n\tgetSelectedText(): string | undefined;\n\tgetLineNumber(): string | undefined;\n\tgetExtension(id: string): Promise<{ readonly extensionLocation: uri } | undefined>;\n}\n\ntype Environment = { env: IProcessEnvironment | undefined; userHome: string | undefined };\n\nexport class AbstractVariableResolverService implements IConfigurationResolverService {\n\n\tstatic readonly VARIABLE_LHS = '${';\n\tstatic readonly VARIABLE_REGEXP = /\\$\\{(.*?)\\}/g;\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _context: IVariableResolveContext;\n\tprivate _labelService?: ILabelService;\n\tprivate _envVariablesPromise?: Promise<IProcessEnvironment>;\n\tprivate _userHomePromise?: Promise<string>;\n\tprotected _contributedVariables: Map<string, () => Promise<string | undefined>> = new Map();\n\n\tconstructor(_context: IVariableResolveContext, _labelService?: ILabelService, _userHomePromise?: Promise<string>, _envVariablesPromise?: Promise<IProcessEnvironment>) {\n\t\tthis._context = _context;\n\t\tthis._labelService = _labelService;\n\t\tthis._userHomePromise = _userHomePromise;\n\t\tif (_envVariablesPromise) {\n\t\t\tthis._envVariablesPromise = _envVariablesPromise.then(envVariables => {\n\t\t\t\treturn this.prepareEnv(envVariables);\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate prepareEnv(envVariables: IProcessEnvironment): IProcessEnvironment {\n\t\t// windows env variables are case insensitive\n\t\tif (isWindows) {\n\t\t\tconst ev: IProcessEnvironment = Object.create(null);\n\t\t\tObject.keys(envVariables).forEach(key => {\n\t\t\t\tev[key.toLowerCase()] = envVariables[key];\n\t\t\t});\n\t\t\treturn ev;\n\t\t}\n\t\treturn envVariables;\n\t}\n\n\tpublic resolveWithEnvironment(environment: IProcessEnvironment, root: IWorkspaceFolder | undefined, value: string): Promise<string> {\n\t\treturn this.recursiveResolve({ env: this.prepareEnv(environment), userHome: undefined }, root ? root.uri : undefined, value);\n\t}\n\n\tpublic async resolveAsync(root: IWorkspaceFolder | undefined, value: string): Promise<string>;\n\tpublic async resolveAsync(root: IWorkspaceFolder | undefined, value: string[]): Promise<string[]>;\n\tpublic async resolveAsync(root: IWorkspaceFolder | undefined, value: IStringDictionary<string>): Promise<IStringDictionary<string>>;\n\tpublic async resolveAsync(root: IWorkspaceFolder | undefined, value: any): Promise<any> {\n\t\tconst environment: Environment = {\n\t\t\tenv: await this._envVariablesPromise,\n\t\t\tuserHome: await this._userHomePromise\n\t\t};\n\t\treturn this.recursiveResolve(environment, root ? root.uri : undefined, value);\n\t}\n\n\tprivate async resolveAnyBase(workspaceFolder: IWorkspaceFolder | undefined, config: any, commandValueMapping?: IStringDictionary<string>, resolvedVariables?: Map<string, string>): Promise<any> {\n\n\t\tconst result = objects.deepClone(config) as any;\n\n\t\t// hoist platform specific attributes to top level\n\t\tif (isWindows && result.windows) {\n\t\t\tObject.keys(result.windows).forEach(key => result[key] = result.windows[key]);\n\t\t} else if (isMacintosh && result.osx) {\n\t\t\tObject.keys(result.osx).forEach(key => result[key] = result.osx[key]);\n\t\t} else if (isLinux && result.linux) {\n\t\t\tObject.keys(result.linux).forEach(key => result[key] = result.linux[key]);\n\t\t}\n\n\t\t// delete all platform specific sections\n\t\tdelete result.windows;\n\t\tdelete result.osx;\n\t\tdelete result.linux;\n\n\t\t// substitute all variables recursively in string values\n\t\tconst environmentPromises: Environment = {\n\t\t\tenv: await this._envVariablesPromise,\n\t\t\tuserHome: await this._userHomePromise\n\t\t};\n\t\treturn this.recursiveResolve(environmentPromises, workspaceFolder ? workspaceFolder.uri : undefined, result, commandValueMapping, resolvedVariables);\n\t}\n\n\tpublic async resolveAnyAsync(workspaceFolder: IWorkspaceFolder | undefined, config: any, commandValueMapping?: IStringDictionary<string>): Promise<any> {\n\t\treturn this.resolveAnyBase(workspaceFolder, config, commandValueMapping);\n\t}\n\n\tpublic async resolveAnyMap(workspaceFolder: IWorkspaceFolder | undefined, config: any, commandValueMapping?: IStringDictionary<string>): Promise<{ newConfig: any; resolvedVariables: Map<string, string> }> {\n\t\tconst resolvedVariables = new Map<string, string>();\n\t\tconst newConfig = await this.resolveAnyBase(workspaceFolder, config, commandValueMapping, resolvedVariables);\n\t\treturn { newConfig, resolvedVariables };\n\t}\n\n\tpublic resolveWithInteractionReplace(folder: IWorkspaceFolder | undefined, config: any, section?: string, variables?: IStringDictionary<string>): Promise<any> {\n\t\tthrow new Error('resolveWithInteractionReplace not implemented.');\n\t}\n\n\tpublic resolveWithInteraction(folder: IWorkspaceFolder | undefined, config: any, section?: string, variables?: IStringDictionary<string>): Promise<Map<string, string> | undefined> {\n\t\tthrow new Error('resolveWithInteraction not implemented.');\n\t}\n\n\tpublic contributeVariable(variable: string, resolution: () => Promise<string | undefined>): void {\n\t\tif (this._contributedVariables.has(variable)) {\n\t\t\tthrow new Error('Variable ' + variable + ' is contributed twice.');\n\t\t} else {\n\t\t\tthis._contributedVariables.set(variable, resolution);\n\t\t}\n\t}\n\n\tprivate async recursiveResolve(environment: Environment, folderUri: uri | undefined, value: any, commandValueMapping?: IStringDictionary<string>, resolvedVariables?: Map<string, string>): Promise<any> {\n\t\tif (types.isString(value)) {\n\t\t\treturn this.resolveString(environment, folderUri, value, commandValueMapping, resolvedVariables);\n\t\t} else if (types.isArray(value)) {\n\t\t\treturn Promise.all(value.map(s => this.recursiveResolve(environment, folderUri, s, commandValueMapping, resolvedVariables)));\n\t\t} else if (types.isObject(value)) {\n\t\t\tconst result: IStringDictionary<string | IStringDictionary<string> | string[]> = Object.create(null);\n\t\t\tconst replaced = await Promise.all(Object.keys(value).map(async key => {\n\t\t\t\tconst replaced = await this.resolveString(environment, folderUri, key, commandValueMapping, resolvedVariables);\n\t\t\t\treturn [replaced, await this.recursiveResolve(environment, folderUri, value[key], commandValueMapping, resolvedVariables)] as const;\n\t\t\t}));\n\t\t\t// two step process to preserve object key order\n\t\t\tfor (const [key, value] of replaced) {\n\t\t\t\tresult[key] = value;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\treturn value;\n\t}\n\n\tprivate resolveString(environment: Environment, folderUri: uri | undefined, value: string, commandValueMapping: IStringDictionary<string> | undefined, resolvedVariables?: Map<string, string>): Promise<string> {\n\t\t// loop through all variables occurrences in 'value'\n\t\treturn replaceAsync(value, AbstractVariableResolverService.VARIABLE_REGEXP, async (match: string, variable: string) => {\n\t\t\t// disallow attempted nesting, see #77289. This doesn't exclude variables that resolve to other variables.\n\t\t\tif (variable.includes(AbstractVariableResolverService.VARIABLE_LHS)) {\n\t\t\t\treturn match;\n\t\t\t}\n\n\t\t\tlet resolvedValue = await this.evaluateSingleVariable(environment, match, variable, folderUri, commandValueMapping);\n\n\t\t\tresolvedVariables?.set(variable, resolvedValue);\n\n\t\t\tif ((resolvedValue !== match) && types.isString(resolvedValue) && resolvedValue.match(AbstractVariableResolverService.VARIABLE_REGEXP)) {\n\t\t\t\tresolvedValue = await this.resolveString(environment, folderUri, resolvedValue, commandValueMapping, resolvedVariables);\n\t\t\t}\n\n\t\t\treturn resolvedValue;\n\t\t});\n\t}\n\n\tprivate fsPath(displayUri: uri): string {\n\t\treturn this._labelService ? this._labelService.getUriLabel(displayUri, { noPrefix: true }) : displayUri.fsPath;\n\t}\n\n\tprivate async evaluateSingleVariable(environment: Environment, match: string, variable: string, folderUri: uri | undefined, commandValueMapping: IStringDictionary<string> | undefined): Promise<string> {\n\n\t\t// try to separate variable arguments from variable name\n\t\tlet argument: string | undefined;\n\t\tconst parts = variable.split(':');\n\t\tif (parts.length > 1) {\n\t\t\tvariable = parts[0];\n\t\t\targument = parts[1];\n\t\t}\n\n\t\t// common error handling for all variables that require an open editor\n\t\tconst getFilePath = (): string => {\n\n\t\t\tconst filePath = this._context.getFilePath();\n\t\t\tif (filePath) {\n\t\t\t\treturn filePath;\n\t\t\t}\n\t\t\tthrow new Error(localize('canNotResolveFile', \"Variable {0} can not be resolved. Please open an editor.\", match));\n\t\t};\n\n\t\t// common error handling for all variables that require an open editor\n\t\tconst getFolderPathForFile = (): string => {\n\n\t\t\tconst filePath = getFilePath();\t\t// throws error if no editor open\n\t\t\tif (this._context.getWorkspaceFolderPathForFile) {\n\t\t\t\tconst folderPath = this._context.getWorkspaceFolderPathForFile();\n\t\t\t\tif (folderPath) {\n\t\t\t\t\treturn folderPath;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow new Error(localize('canNotResolveFolderForFile', \"Variable {0}: can not find workspace folder of '{1}'.\", match, paths.basename(filePath)));\n\t\t};\n\n\t\t// common error handling for all variables that require an open folder and accept a folder name argument\n\t\tconst getFolderUri = (): uri => {\n\n\t\t\tif (argument) {\n\t\t\t\tconst folder = this._context.getFolderUri(argument);\n\t\t\t\tif (folder) {\n\t\t\t\t\treturn folder;\n\t\t\t\t}\n\t\t\t\tthrow new Error(localize('canNotFindFolder', \"Variable {0} can not be resolved. No such folder '{1}'.\", match, argument));\n\t\t\t}\n\n\t\t\tif (folderUri) {\n\t\t\t\treturn folderUri;\n\t\t\t}\n\n\t\t\tif (this._context.getWorkspaceFolderCount() > 1) {\n\t\t\t\tthrow new Error(localize('canNotResolveWorkspaceFolderMultiRoot', \"Variable {0} can not be resolved in a multi folder workspace. Scope this variable using ':' and a workspace folder name.\", match));\n\t\t\t}\n\t\t\tthrow new Error(localize('canNotResolveWorkspaceFolder', \"Variable {0} can not be resolved. Please open a folder.\", match));\n\t\t};\n\n\n\t\tswitch (variable) {\n\n\t\t\tcase 'env':\n\t\t\t\tif (argument) {\n\t\t\t\t\tif (environment.env) {\n\t\t\t\t\t\t// Depending on the source of the environment, on Windows, the values may all be lowercase.\n\t\t\t\t\t\tconst env = environment.env[isWindows ? argument.toLowerCase() : argument];\n\t\t\t\t\t\tif (types.isString(env)) {\n\t\t\t\t\t\t\treturn env;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// For `env` we should do the same as a normal shell does - evaluates undefined envs to an empty string #46436\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t\tthrow new Error(localize('missingEnvVarName', \"Variable {0} can not be resolved because no environment variable name is given.\", match));\n\n\t\t\tcase 'config':\n\t\t\t\tif (argument) {\n\t\t\t\t\tconst config = this._context.getConfigurationValue(folderUri, argument);\n\t\t\t\t\tif (types.isUndefinedOrNull(config)) {\n\t\t\t\t\t\tthrow new Error(localize('configNotFound', \"Variable {0} can not be resolved because setting '{1}' not found.\", match, argument));\n\t\t\t\t\t}\n\t\t\t\t\tif (types.isObject(config)) {\n\t\t\t\t\t\tthrow new Error(localize('configNoString', \"Variable {0} can not be resolved because '{1}' is a structured value.\", match, argument));\n\t\t\t\t\t}\n\t\t\t\t\treturn config;\n\t\t\t\t}\n\t\t\t\tthrow new Error(localize('missingConfigName', \"Variable {0} can not be resolved because no settings name is given.\", match));\n\n\t\t\tcase 'command':\n\t\t\t\treturn this.resolveFromMap(match, argument, commandValueMapping, 'command');\n\n\t\t\tcase 'input':\n\t\t\t\treturn this.resolveFromMap(match, argument, commandValueMapping, 'input');\n\n\t\t\tcase 'extensionInstallFolder':\n\t\t\t\tif (argument) {\n\t\t\t\t\tconst ext = await this._context.getExtension(argument);\n\t\t\t\t\tif (!ext) {\n\t\t\t\t\t\tthrow new Error(localize('extensionNotInstalled', \"Variable {0} can not be resolved because the extension {1} is not installed.\", match, argument));\n\t\t\t\t\t}\n\t\t\t\t\treturn this.fsPath(ext.extensionLocation);\n\t\t\t\t}\n\t\t\t\tthrow new Error(localize('missingExtensionName', \"Variable {0} can not be resolved because no extension name is given.\", match));\n\n\t\t\tdefault: {\n\n\t\t\t\tswitch (variable) {\n\t\t\t\t\tcase 'workspaceRoot':\n\t\t\t\t\tcase 'workspaceFolder':\n\t\t\t\t\t\treturn normalizeDriveLetter(this.fsPath(getFolderUri()));\n\n\t\t\t\t\tcase 'cwd':\n\t\t\t\t\t\treturn ((folderUri || argument) ? normalizeDriveLetter(this.fsPath(getFolderUri())) : process.cwd());\n\n\t\t\t\t\tcase 'workspaceRootFolderName':\n\t\t\t\t\tcase 'workspaceFolderBasename':\n\t\t\t\t\t\treturn paths.basename(this.fsPath(getFolderUri()));\n\n\t\t\t\t\tcase 'userHome': {\n\t\t\t\t\t\tif (environment.userHome) {\n\t\t\t\t\t\t\treturn environment.userHome;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow new Error(localize('canNotResolveUserHome', \"Variable {0} can not be resolved. UserHome path is not defined\", match));\n\t\t\t\t\t}\n\n\t\t\t\t\tcase 'lineNumber': {\n\t\t\t\t\t\tconst lineNumber = this._context.getLineNumber();\n\t\t\t\t\t\tif (lineNumber) {\n\t\t\t\t\t\t\treturn lineNumber;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow new Error(localize('canNotResolveLineNumber', \"Variable {0} can not be resolved. Make sure to have a line selected in the active editor.\", match));\n\t\t\t\t\t}\n\t\t\t\t\tcase 'selectedText': {\n\t\t\t\t\t\tconst selectedText = this._context.getSelectedText();\n\t\t\t\t\t\tif (selectedText) {\n\t\t\t\t\t\t\treturn selectedText;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow new Error(localize('canNotResolveSelectedText', \"Variable {0} can not be resolved. Make sure to have some text selected in the active editor.\", match));\n\t\t\t\t\t}\n\t\t\t\t\tcase 'file':\n\t\t\t\t\t\treturn getFilePath();\n\n\t\t\t\t\tcase 'fileWorkspaceFolder':\n\t\t\t\t\t\treturn getFolderPathForFile();\n\n\t\t\t\t\tcase 'relativeFile':\n\t\t\t\t\t\tif (folderUri || argument) {\n\t\t\t\t\t\t\treturn paths.relative(this.fsPath(getFolderUri()), getFilePath());\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn getFilePath();\n\n\t\t\t\t\tcase 'relativeFileDirname': {\n\t\t\t\t\t\tconst dirname = paths.dirname(getFilePath());\n\t\t\t\t\t\tif (folderUri || argument) {\n\t\t\t\t\t\t\tconst relative = paths.relative(this.fsPath(getFolderUri()), dirname);\n\t\t\t\t\t\t\treturn relative.length === 0 ? '.' : relative;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn dirname;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'fileDirname':\n\t\t\t\t\t\treturn paths.dirname(getFilePath());\n\n\t\t\t\t\tcase 'fileExtname':\n\t\t\t\t\t\treturn paths.extname(getFilePath());\n\n\t\t\t\t\tcase 'fileBasename':\n\t\t\t\t\t\treturn paths.basename(getFilePath());\n\n\t\t\t\t\tcase 'fileBasenameNoExtension': {\n\t\t\t\t\t\tconst basename = paths.basename(getFilePath());\n\t\t\t\t\t\treturn (basename.slice(0, basename.length - paths.extname(basename).length));\n\t\t\t\t\t}\n\t\t\t\t\tcase 'fileDirnameBasename':\n\t\t\t\t\t\treturn paths.basename(paths.dirname(getFilePath()));\n\n\t\t\t\t\tcase 'execPath': {\n\t\t\t\t\t\tconst ep = this._context.getExecPath();\n\t\t\t\t\t\tif (ep) {\n\t\t\t\t\t\t\treturn ep;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn match;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'execInstallFolder': {\n\t\t\t\t\t\tconst ar = this._context.getAppRoot();\n\t\t\t\t\t\tif (ar) {\n\t\t\t\t\t\t\treturn ar;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn match;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'pathSeparator':\n\t\t\t\t\t\treturn paths.sep;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst key = argument ? `${variable}:${argument}` : variable;\n\t\t\t\t\t\t\treturn this.resolveFromMap(match, key, commandValueMapping, undefined);\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\treturn match;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate resolveFromMap(match: string, argument: string | undefined, commandValueMapping: IStringDictionary<string> | undefined, prefix: string | undefined): string {\n\t\tif (argument && commandValueMapping) {\n\t\t\tconst v = (prefix === undefined) ? commandValueMapping[argument] : commandValueMapping[prefix + ':' + argument];\n\t\t\tif (typeof v === 'string') {\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\tthrow new Error(localize('noValueForCommand', \"Variable {0} can not be resolved because the command has no value.\", match));\n\t\t}\n\t\treturn match;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IEditorPane, GroupIdentifier, EditorInputWithOptions, CloseDirection, IEditorPartOptions, IEditorPartOptionsChangeEvent, EditorsOrder, IVisibleEditorPane, IEditorCloseEvent, IUntypedEditorInput, isEditorInput, IEditorWillMoveEvent, IEditorWillOpenEvent, IMatchEditorOptions, IActiveEditorChangeEvent, IFindEditorOptions } from 'vs/workbench/common/editor';\nimport { EditorInput } from 'vs/workbench/common/editor/editorInput';\nimport { IEditorOptions } from 'vs/platform/editor/common/editor';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IDimension } from 'vs/editor/common/core/dimension';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { URI } from 'vs/base/common/uri';\nimport { IGroupModelChangeEvent } from 'vs/workbench/common/editor/editorGroupModel';\n\nexport const IEditorGroupsService = createDecorator<IEditorGroupsService>('editorGroupsService');\n\nexport const enum GroupDirection {\n\tUP,\n\tDOWN,\n\tLEFT,\n\tRIGHT\n}\n\nexport const enum GroupOrientation {\n\tHORIZONTAL,\n\tVERTICAL\n}\n\nexport const enum GroupLocation {\n\tFIRST,\n\tLAST,\n\tNEXT,\n\tPREVIOUS\n}\n\nexport interface IFindGroupScope {\n\tdirection?: GroupDirection;\n\tlocation?: GroupLocation;\n}\n\nexport const enum GroupsArrangement {\n\n\t/**\n\t * Make the current active group consume the maximum\n\t * amount of space possible.\n\t */\n\tMAXIMIZE,\n\n\t/**\n\t * Size all groups evenly.\n\t */\n\tEVEN,\n\n\t/**\n\t * Will behave like MINIMIZE_OTHERS if the active\n\t * group is not already maximized and EVEN otherwise\n\t */\n\tTOGGLE\n}\n\nexport interface GroupLayoutArgument {\n\tsize?: number;\n\tgroups?: GroupLayoutArgument[];\n}\n\nexport interface EditorGroupLayout {\n\torientation: GroupOrientation;\n\tgroups: GroupLayoutArgument[];\n}\n\nexport interface IAddGroupOptions {\n\tactivate?: boolean;\n}\n\nexport const enum MergeGroupMode {\n\tCOPY_EDITORS,\n\tMOVE_EDITORS\n}\n\nexport interface IMergeGroupOptions {\n\tmode?: MergeGroupMode;\n\tindex?: number;\n}\n\nexport interface ICloseEditorOptions {\n\tpreserveFocus?: boolean;\n}\n\nexport type ICloseEditorsFilter = {\n\texcept?: EditorInput;\n\tdirection?: CloseDirection;\n\tsavedOnly?: boolean;\n\texcludeSticky?: boolean;\n};\n\nexport interface ICloseAllEditorsOptions {\n\texcludeSticky?: boolean;\n}\n\nexport interface IEditorReplacement {\n\teditor: EditorInput;\n\treplacement: EditorInput;\n\toptions?: IEditorOptions;\n\n\t/**\n\t * Skips asking the user for confirmation and doesn't\n\t * save the document. Only use this if you really need to!\n\t */\n\tforceReplaceDirty?: boolean;\n}\n\nexport function isEditorReplacement(replacement: unknown): replacement is IEditorReplacement {\n\tconst candidate = replacement as IEditorReplacement | undefined;\n\n\treturn isEditorInput(candidate?.editor) && isEditorInput(candidate?.replacement);\n}\n\nexport const enum GroupsOrder {\n\n\t/**\n\t * Groups sorted by creation order (oldest one first)\n\t */\n\tCREATION_TIME,\n\n\t/**\n\t * Groups sorted by most recent activity (most recent active first)\n\t */\n\tMOST_RECENTLY_ACTIVE,\n\n\t/**\n\t * Groups sorted by grid widget order\n\t */\n\tGRID_APPEARANCE\n}\n\nexport interface IEditorSideGroup {\n\n\t/**\n\t * Open an editor in this group.\n\t *\n\t * @returns a promise that resolves around an IEditor instance unless\n\t * the call failed, or the editor was not opened as active editor.\n\t */\n\topenEditor(editor: EditorInput, options?: IEditorOptions): Promise<IEditorPane | undefined>;\n}\n\nexport interface IEditorGroupsService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * An event for when the active editor group changes. The active editor\n\t * group is the default location for new editors to open.\n\t */\n\treadonly onDidChangeActiveGroup: Event<IEditorGroup>;\n\n\t/**\n\t * An event for when a new group was added.\n\t */\n\treadonly onDidAddGroup: Event<IEditorGroup>;\n\n\t/**\n\t * An event for when a group was removed.\n\t */\n\treadonly onDidRemoveGroup: Event<IEditorGroup>;\n\n\t/**\n\t * An event for when a group was moved.\n\t */\n\treadonly onDidMoveGroup: Event<IEditorGroup>;\n\n\t/**\n\t * An event for when a group gets activated.\n\t */\n\treadonly onDidActivateGroup: Event<IEditorGroup>;\n\n\t/**\n\t * An event for when the group container is layed out.\n\t */\n\treadonly onDidLayout: Event<IDimension>;\n\n\t/**\n\t * An event for when the group container is scrolled.\n\t */\n\treadonly onDidScroll: Event<void>;\n\n\t/**\n\t * An event for when the index of a group changes.\n\t */\n\treadonly onDidChangeGroupIndex: Event<IEditorGroup>;\n\n\t/**\n\t * An event for when the locked state of a group changes.\n\t */\n\treadonly onDidChangeGroupLocked: Event<IEditorGroup>;\n\n\t/**\n\t * The size of the editor groups area.\n\t */\n\treadonly contentDimension: IDimension;\n\n\t/**\n\t * An active group is the default location for new editors to open.\n\t */\n\treadonly activeGroup: IEditorGroup;\n\n\t/**\n\t * A side group allows a subset of methods on a group that is either\n\t * created to the side or picked if already there.\n\t */\n\treadonly sideGroup: IEditorSideGroup;\n\n\t/**\n\t * All groups that are currently visible in the editor area in the\n\t * order of their creation (oldest first).\n\t */\n\treadonly groups: readonly IEditorGroup[];\n\n\t/**\n\t * The number of editor groups that are currently opened.\n\t */\n\treadonly count: number;\n\n\t/**\n\t * The current layout orientation of the root group.\n\t */\n\treadonly orientation: GroupOrientation;\n\n\t/**\n\t * A property that indicates when groups have been created\n\t * and are ready to be used.\n\t */\n\treadonly isReady: boolean;\n\n\t/**\n\t * A promise that resolves when groups have been created\n\t * and are ready to be used.\n\t *\n\t * Await this promise to safely work on the editor groups model\n\t * (for example, install editor group listeners).\n\t *\n\t * Use the `whenRestored` property to await visible editors\n\t * having fully resolved.\n\t */\n\treadonly whenReady: Promise<void>;\n\n\t/**\n\t * A promise that resolves when groups have been restored.\n\t *\n\t * For groups with active editor, the promise will resolve\n\t * when the visible editor has finished to resolve.\n\t *\n\t * Use the `whenReady` property to not await editors to\n\t * resolve.\n\t */\n\treadonly whenRestored: Promise<void>;\n\n\t/**\n\t * Find out if the editor group service has UI state to restore\n\t * from a previous session.\n\t */\n\treadonly hasRestorableState: boolean;\n\n\t/**\n\t * Get all groups that are currently visible in the editor area.\n\t *\n\t * @param order the order of the editors to use\n\t */\n\tgetGroups(order: GroupsOrder): readonly IEditorGroup[];\n\n\t/**\n\t * Allows to convert a group identifier to a group.\n\t */\n\tgetGroup(identifier: GroupIdentifier): IEditorGroup | undefined;\n\n\t/**\n\t * Set a group as active. An active group is the default location for new editors to open.\n\t */\n\tactivateGroup(group: IEditorGroup | GroupIdentifier): IEditorGroup;\n\n\t/**\n\t * Returns the size of a group.\n\t */\n\tgetSize(group: IEditorGroup | GroupIdentifier): { width: number; height: number };\n\n\t/**\n\t * Sets the size of a group.\n\t */\n\tsetSize(group: IEditorGroup | GroupIdentifier, size: { width: number; height: number }): void;\n\n\t/**\n\t * Arrange all groups according to the provided arrangement.\n\t */\n\tarrangeGroups(arrangement: GroupsArrangement): void;\n\n\t/**\n\t * Applies the provided layout by either moving existing groups or creating new groups.\n\t */\n\tapplyLayout(layout: EditorGroupLayout): void;\n\n\t/**\n\t * Enable or disable centered editor layout.\n\t */\n\tcenterLayout(active: boolean): void;\n\n\t/**\n\t * Find out if the editor layout is currently centered.\n\t */\n\tisLayoutCentered(): boolean;\n\n\t/**\n\t * Sets the orientation of the root group to be either vertical or horizontal.\n\t */\n\tsetGroupOrientation(orientation: GroupOrientation): void;\n\n\t/**\n\t * Find a groupd in a specific scope:\n\t * * `GroupLocation.FIRST`: the first group\n\t * * `GroupLocation.LAST`: the last group\n\t * * `GroupLocation.NEXT`: the next group from either the active one or `source`\n\t * * `GroupLocation.PREVIOUS`: the previous group from either the active one or `source`\n\t * * `GroupDirection.UP`: the next group above the active one or `source`\n\t * * `GroupDirection.DOWN`: the next group below the active one or `source`\n\t * * `GroupDirection.LEFT`: the next group to the left of the active one or `source`\n\t * * `GroupDirection.RIGHT`: the next group to the right of the active one or `source`\n\t *\n\t * @param scope the scope of the group to search in\n\t * @param source optional source to search from\n\t * @param wrap optionally wrap around if reaching the edge of groups\n\t */\n\tfindGroup(scope: IFindGroupScope, source?: IEditorGroup | GroupIdentifier, wrap?: boolean): IEditorGroup | undefined;\n\n\t/**\n\t * Add a new group to the editor area. A new group is added by splitting a provided one in\n\t * one of the four directions.\n\t *\n\t * @param location the group from which to split to add a new group\n\t * @param direction the direction of where to split to\n\t * @param options configure the newly group with options\n\t */\n\taddGroup(location: IEditorGroup | GroupIdentifier, direction: GroupDirection, options?: IAddGroupOptions): IEditorGroup;\n\n\t/**\n\t * Remove a group from the editor area.\n\t */\n\tremoveGroup(group: IEditorGroup | GroupIdentifier): void;\n\n\t/**\n\t * Move a group to a new group in the editor area.\n\t *\n\t * @param group the group to move\n\t * @param location the group from which to split to add the moved group\n\t * @param direction the direction of where to split to\n\t */\n\tmoveGroup(group: IEditorGroup | GroupIdentifier, location: IEditorGroup | GroupIdentifier, direction: GroupDirection): IEditorGroup;\n\n\t/**\n\t * Merge the editors of a group into a target group. By default, all editors will\n\t * move and the source group will close. This behaviour can be configured via the\n\t * `IMergeGroupOptions` options.\n\t *\n\t * @param group the group to merge\n\t * @param target the target group to merge into\n\t * @param options controls how the merge should be performed. by default all editors\n\t * will be moved over to the target and the source group will close. Configure to\n\t * `MOVE_EDITORS_KEEP_GROUP` to prevent the source group from closing. Set to\n\t * `COPY_EDITORS` to copy the editors into the target instead of moding them.\n\t */\n\tmergeGroup(group: IEditorGroup | GroupIdentifier, target: IEditorGroup | GroupIdentifier, options?: IMergeGroupOptions): IEditorGroup;\n\n\t/**\n\t * Merge all editor groups into the active one.\n\t */\n\tmergeAllGroups(): IEditorGroup;\n\n\t/**\n\t * Copy a group to a new group in the editor area.\n\t *\n\t * @param group the group to copy\n\t * @param location the group from which to split to add the copied group\n\t * @param direction the direction of where to split to\n\t */\n\tcopyGroup(group: IEditorGroup | GroupIdentifier, location: IEditorGroup | GroupIdentifier, direction: GroupDirection): IEditorGroup;\n\n\t/**\n\t * Access the options of the editor part.\n\t */\n\treadonly partOptions: IEditorPartOptions;\n\n\t/**\n\t * An event that notifies when editor part options change.\n\t */\n\treadonly onDidChangeEditorPartOptions: Event<IEditorPartOptionsChangeEvent>;\n\n\t/**\n\t * Enforce editor part options temporarily.\n\t */\n\tenforcePartOptions(options: IEditorPartOptions): IDisposable;\n}\n\nexport const enum OpenEditorContext {\n\tNEW_EDITOR = 1,\n\tMOVE_EDITOR = 2,\n\tCOPY_EDITOR = 3\n}\n\nexport interface IEditorGroup {\n\n\t/**\n\t * An event which fires whenever the underlying group model changes.\n\t */\n\treadonly onDidModelChange: Event<IGroupModelChangeEvent>;\n\n\t/**\n\t * An event that is fired when the group gets disposed.\n\t */\n\treadonly onWillDispose: Event<void>;\n\n\t/**\n\t * An event that is fired when the active editor in the group changed.\n\t */\n\treadonly onDidActiveEditorChange: Event<IActiveEditorChangeEvent>;\n\n\t/**\n\t * An event that is fired when an editor is about to close.\n\t */\n\treadonly onWillCloseEditor: Event<IEditorCloseEvent>;\n\n\t/**\n\t * An event that is fired when an editor is closed.\n\t */\n\treadonly onDidCloseEditor: Event<IEditorCloseEvent>;\n\n\t/**\n\t * An event that is fired when an editor is about to move to\n\t * a different group.\n\t */\n\treadonly onWillMoveEditor: Event<IEditorWillMoveEvent>;\n\n\t/**\n\t * An event that is fired when an editor is about to be opened\n\t * in the group.\n\t */\n\treadonly onWillOpenEditor: Event<IEditorWillOpenEvent>;\n\n\t/**\n\t * A unique identifier of this group that remains identical even if the\n\t * group is moved to different locations.\n\t */\n\treadonly id: GroupIdentifier;\n\n\t/**\n\t * A number that indicates the position of this group in the visual\n\t * order of groups from left to right and top to bottom. The lowest\n\t * index will likely be top-left while the largest index in most\n\t * cases should be bottom-right, but that depends on the grid.\n\t */\n\treadonly index: number;\n\n\t/**\n\t * A human readable label for the group. This label can change depending\n\t * on the layout of all editor groups. Clients should listen on the\n\t * `onDidGroupModelChange` event to react to that.\n\t */\n\treadonly label: string;\n\n\t/**\n\t * A human readable label for the group to be used by screen readers.\n\t */\n\treadonly ariaLabel: string;\n\n\t/**\n\t * The active editor pane is the currently visible editor pane of the group.\n\t */\n\treadonly activeEditorPane: IVisibleEditorPane | undefined;\n\n\t/**\n\t * The active editor is the currently visible editor of the group\n\t * within the current active editor pane.\n\t */\n\treadonly activeEditor: EditorInput | null;\n\n\t/**\n\t * The editor in the group that is in preview mode if any. There can\n\t * only ever be one editor in preview mode.\n\t */\n\treadonly previewEditor: EditorInput | null;\n\n\t/**\n\t * The number of opened editors in this group.\n\t */\n\treadonly count: number;\n\n\t/**\n\t * Whether the group has editors or not.\n\t */\n\treadonly isEmpty: boolean;\n\n\t/**\n\t * Whether this editor group is locked or not. Locked editor groups\n\t * will only be considered for editors to open in when the group is\n\t * explicitly provided for the editor.\n\t *\n\t * Note: editor group locking only applies when more than one group\n\t * is opened.\n\t */\n\treadonly isLocked: boolean;\n\n\t/**\n\t * The number of sticky editors in this group.\n\t */\n\treadonly stickyCount: number;\n\n\t/**\n\t * All opened editors in the group in sequential order of their appearance.\n\t */\n\treadonly editors: readonly EditorInput[];\n\n\t/**\n\t * The scoped context key service for this group.\n\t */\n\treadonly scopedContextKeyService: IContextKeyService;\n\n\t/**\n\t * Get all editors that are currently opened in the group.\n\t *\n\t * @param order the order of the editors to use\n\t * @param options options to select only specific editors as instructed\n\t */\n\tgetEditors(order: EditorsOrder, options?: { excludeSticky?: boolean }): readonly EditorInput[];\n\n\t/**\n\t * Finds all editors for the given resource that are currently\n\t * opened in the group. This method will return an entry for\n\t * each editor that reports a `resource` that matches the\n\t * provided one.\n\t *\n\t * @param resource the resource of the editor to find\n\t * @param options whether to support side by side editors or not\n\t */\n\tfindEditors(resource: URI, options?: IFindEditorOptions): readonly EditorInput[];\n\n\t/**\n\t * Returns the editor at a specific index of the group.\n\t */\n\tgetEditorByIndex(index: number): EditorInput | undefined;\n\n\t/**\n\t * Returns the index of the editor in the group or -1 if not opened.\n\t */\n\tgetIndexOfEditor(editor: EditorInput): number;\n\n\t/**\n\t * Whether the editor is the first in the group.\n\t */\n\tisFirst(editor: EditorInput): boolean;\n\n\t/**\n\t * Whether the editor is the last in the group.\n\t */\n\tisLast(editor: EditorInput): boolean;\n\n\t/**\n\t * Open an editor in this group.\n\t *\n\t * @returns a promise that resolves around an IEditor instance unless\n\t * the call failed, or the editor was not opened as active editor.\n\t */\n\topenEditor(editor: EditorInput, options?: IEditorOptions): Promise<IEditorPane | undefined>;\n\n\t/**\n\t * Opens editors in this group.\n\t *\n\t * @returns a promise that resolves around an IEditor instance unless\n\t * the call failed, or the editor was not opened as active editor. Since\n\t * a group can only ever have one active editor, even if many editors are\n\t * opened, the result will only be one editor.\n\t */\n\topenEditors(editors: EditorInputWithOptions[]): Promise<IEditorPane | undefined>;\n\n\t/**\n\t * Find out if the provided editor is pinned in the group.\n\t */\n\tisPinned(editorOrIndex: EditorInput | number): boolean;\n\n\t/**\n\t * Find out if the provided editor or index of editor is sticky in the group.\n\t */\n\tisSticky(editorOrIndex: EditorInput | number): boolean;\n\n\t/**\n\t * Find out if the provided editor is active in the group.\n\t */\n\tisActive(editor: EditorInput | IUntypedEditorInput): boolean;\n\n\t/**\n\t * Find out if a certain editor is included in the group.\n\t *\n\t * @param candidate the editor to find\n\t * @param options fine tune how to match editors\n\t */\n\tcontains(candidate: EditorInput | IUntypedEditorInput, options?: IMatchEditorOptions): boolean;\n\n\t/**\n\t * Move an editor from this group either within this group or to another group.\n\t */\n\tmoveEditor(editor: EditorInput, target: IEditorGroup, options?: IEditorOptions): void;\n\n\t/**\n\t * Move editors from this group either within this group or to another group.\n\t */\n\tmoveEditors(editors: EditorInputWithOptions[], target: IEditorGroup): void;\n\n\t/**\n\t * Copy an editor from this group to another group.\n\t *\n\t * Note: It is currently not supported to show the same editor more than once in the same group.\n\t */\n\tcopyEditor(editor: EditorInput, target: IEditorGroup, options?: IEditorOptions): void;\n\n\t/**\n\t * Copy editors from this group to another group.\n\t *\n\t * Note: It is currently not supported to show the same editor more than once in the same group.\n\t */\n\tcopyEditors(editors: EditorInputWithOptions[], target: IEditorGroup): void;\n\n\t/**\n\t * Close an editor from the group. This may trigger a confirmation dialog if\n\t * the editor is dirty and thus returns a promise as value.\n\t *\n\t * @param editor the editor to close, or the currently active editor\n\t * if unspecified.\n\t *\n\t * @returns a promise when the editor is closed or not. If `true`, the editor\n\t * is closed and if `false` there was a veto closing the editor, e.g. when it\n\t * is dirty.\n\t */\n\tcloseEditor(editor?: EditorInput, options?: ICloseEditorOptions): Promise<boolean>;\n\n\t/**\n\t * Closes specific editors in this group. This may trigger a confirmation dialog if\n\t * there are dirty editors and thus returns a promise as value.\n\t *\n\t * @returns a promise whether the editors were closed or not. If `true`, the editors\n\t * were closed and if `false` there was a veto closing the editors, e.g. when one\n\t * is dirty.\n\t */\n\tcloseEditors(editors: EditorInput[] | ICloseEditorsFilter, options?: ICloseEditorOptions): Promise<boolean>;\n\n\t/**\n\t * Closes all editors from the group. This may trigger a confirmation dialog if\n\t * there are dirty editors and thus returns a promise as value.\n\t *\n\t * @returns a promise when all editors are closed.\n\t */\n\tcloseAllEditors(options?: ICloseAllEditorsOptions): Promise<boolean>;\n\n\t/**\n\t * Replaces editors in this group with the provided replacement.\n\t *\n\t * @param editors the editors to replace\n\t *\n\t * @returns a promise that is resolved when the replaced active\n\t * editor (if any) has finished loading.\n\t */\n\treplaceEditors(editors: IEditorReplacement[]): Promise<void>;\n\n\t/**\n\t * Set an editor to be pinned. A pinned editor is not replaced\n\t * when another editor opens at the same location.\n\t *\n\t * @param editor the editor to pin, or the currently active editor\n\t * if unspecified.\n\t */\n\tpinEditor(editor?: EditorInput): void;\n\n\t/**\n\t * Set an editor to be sticky. A sticky editor is showing in the beginning\n\t * of the tab stripe and will not be impacted by close operations.\n\t *\n\t * @param editor the editor to make sticky, or the currently active editor\n\t * if unspecified.\n\t */\n\tstickEditor(editor?: EditorInput): void;\n\n\t/**\n\t * Set an editor to be non-sticky and thus moves back to a location after\n\t * sticky editors and can be closed normally.\n\t *\n\t * @param editor the editor to make unsticky, or the currently active editor\n\t * if unspecified.\n\t */\n\tunstickEditor(editor?: EditorInput): void;\n\n\t/**\n\t * Whether this editor group should be locked or not.\n\t *\n\t * See {@linkcode IEditorGroup.isLocked `isLocked`}\n\t */\n\tlock(locked: boolean): void;\n\n\t/**\n\t * Move keyboard focus into the group.\n\t */\n\tfocus(): void;\n}\n\nexport function isEditorGroup(obj: unknown): obj is IEditorGroup {\n\tconst group = obj as IEditorGroup | undefined;\n\n\treturn !!group && typeof group.id === 'number' && Array.isArray(group.editors);\n}\n\n//#region Editor Group Helpers\n\nexport function preferredSideBySideGroupDirection(configurationService: IConfigurationService): GroupDirection.DOWN | GroupDirection.RIGHT {\n\tconst openSideBySideDirection = configurationService.getValue('workbench.editor.openSideBySideDirection');\n\n\tif (openSideBySideDirection === 'down') {\n\t\treturn GroupDirection.DOWN;\n\t}\n\n\treturn GroupDirection.RIGHT;\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IResourceEditorInput, IEditorOptions, IResourceEditorInputIdentifier, ITextResourceEditorInput } from 'vs/platform/editor/common/editor';\nimport { IEditorPane, GroupIdentifier, IUntitledTextResourceEditorInput, IResourceDiffEditorInput, ITextDiffEditorPane, IEditorIdentifier, ISaveOptions, IRevertOptions, EditorsOrder, IVisibleEditorPane, IEditorCloseEvent, IUntypedEditorInput, IFindEditorOptions } from 'vs/workbench/common/editor';\nimport { EditorInput } from 'vs/workbench/common/editor/editorInput';\nimport { Event } from 'vs/base/common/event';\nimport { IEditor, IDiffEditor } from 'vs/editor/common/editorCommon';\nimport { ICloseEditorOptions, IEditorGroup, isEditorGroup } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { URI } from 'vs/base/common/uri';\nimport { IGroupModelChangeEvent } from 'vs/workbench/common/editor/editorGroupModel';\n\nexport const IEditorService = createDecorator<IEditorService>('editorService');\n\n/**\n * Open an editor in the currently active group.\n */\nexport const ACTIVE_GROUP = -1;\nexport type ACTIVE_GROUP_TYPE = typeof ACTIVE_GROUP;\n\n/**\n * Open an editor to the side of the active group.\n */\nexport const SIDE_GROUP = -2;\nexport type SIDE_GROUP_TYPE = typeof SIDE_GROUP;\n\nexport type PreferredGroup = IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE;\n\nexport function isPreferredGroup(obj: unknown): obj is PreferredGroup {\n\tconst candidate = obj as PreferredGroup | undefined;\n\n\treturn typeof obj === 'number' || isEditorGroup(candidate);\n}\n\nexport interface ISaveEditorsOptions extends ISaveOptions {\n\n\t/**\n\t * If true, will ask for a location of the editor to save to.\n\t */\n\treadonly saveAs?: boolean;\n}\n\nexport interface IUntypedEditorReplacement {\n\n\t/**\n\t * The editor to replace.\n\t */\n\treadonly editor: EditorInput;\n\n\t/**\n\t * The replacement for the editor.\n\t */\n\treadonly replacement: IUntypedEditorInput;\n\n\t/**\n\t * Skips asking the user for confirmation and doesn't\n\t * save the document. Only use this if you really need to!\n\t*/\n\tforceReplaceDirty?: boolean;\n}\n\nexport interface IBaseSaveRevertAllEditorOptions {\n\n\t/**\n\t * Whether to include untitled editors as well.\n\t */\n\treadonly includeUntitled?: boolean;\n\n\t/**\n\t * Whether to exclude sticky editors.\n\t */\n\treadonly excludeSticky?: boolean;\n}\n\nexport interface ISaveAllEditorsOptions extends ISaveEditorsOptions, IBaseSaveRevertAllEditorOptions { }\n\nexport interface IRevertAllEditorsOptions extends IRevertOptions, IBaseSaveRevertAllEditorOptions { }\n\nexport interface IOpenEditorsOptions {\n\n\t/**\n\t * Whether to validate trust when opening editors\n\t * that are potentially not inside the workspace.\n\t */\n\treadonly validateTrust?: boolean;\n}\n\nexport interface IEditorsChangeEvent {\n\t/**\n\t * The group which had the editor change\n\t */\n\tgroupId: GroupIdentifier;\n\t/*\n\t * The event fired from the model\n\t */\n\tevent: IGroupModelChangeEvent;\n}\n\nexport interface IEditorService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Emitted when the currently active editor changes.\n\t *\n\t * @see {@link IEditorService.activeEditorPane}\n\t */\n\treadonly onDidActiveEditorChange: Event<void>;\n\n\t/**\n\t * Emitted when any of the current visible editors changes.\n\t *\n\t * @see {@link IEditorService.visibleEditorPanes}\n\t */\n\treadonly onDidVisibleEditorsChange: Event<void>;\n\n\t/**\n\t * An aggregated event for any change to any editor across\n\t * all groups.\n\t */\n\treadonly onDidEditorsChange: Event<IEditorsChangeEvent>;\n\n\t/**\n\t * Emitted when an editor is closed.\n\t */\n\treadonly onDidCloseEditor: Event<IEditorCloseEvent>;\n\n\t/**\n\t * The currently active editor pane or `undefined` if none. The editor pane is\n\t * the workbench container for editors of any kind.\n\t *\n\t * @see {@link IEditorService.activeEditor} for access to the active editor input\n\t */\n\treadonly activeEditorPane: IVisibleEditorPane | undefined;\n\n\t/**\n\t * The currently active editor or `undefined` if none. An editor is active when it is\n\t * located in the currently active editor group. It will be `undefined` if the active\n\t * editor group has no editors open.\n\t */\n\treadonly activeEditor: EditorInput | undefined;\n\n\t/**\n\t * The currently active text editor control or `undefined` if there is currently no active\n\t * editor or the active editor widget is neither a text nor a diff editor.\n\t *\n\t * @see {@link IEditorService.activeEditor}\n\t */\n\treadonly activeTextEditorControl: IEditor | IDiffEditor | undefined;\n\n\t/**\n\t * The currently active text editor language id or `undefined` if there is currently no active\n\t * editor or the active editor control is neither a text nor a diff editor. If the active\n\t * editor is a diff editor, the modified side's language id will be taken.\n\t */\n\treadonly activeTextEditorLanguageId: string | undefined;\n\n\t/**\n\t * All editor panes that are currently visible across all editor groups.\n\t *\n\t * @see {@link IEditorService.visibleEditors} for access to the visible editor inputs\n\t */\n\treadonly visibleEditorPanes: readonly IVisibleEditorPane[];\n\n\t/**\n\t * All editors that are currently visible. An editor is visible when it is opened in an\n\t * editor group and active in that group. Multiple editor groups can be opened at the same time.\n\t */\n\treadonly visibleEditors: readonly EditorInput[];\n\n\t/**\n\t * All text editor widgets that are currently visible across all editor groups. A text editor\n\t * widget is either a text or a diff editor.\n\t */\n\treadonly visibleTextEditorControls: readonly (IEditor | IDiffEditor)[];\n\n\t/**\n\t * All editors that are opened across all editor groups in sequential order\n\t * of appearance.\n\t *\n\t * This includes active as well as inactive editors in each editor group.\n\t */\n\treadonly editors: readonly EditorInput[];\n\n\t/**\n\t * The total number of editors that are opened either inactive or active.\n\t */\n\treadonly count: number;\n\n\t/**\n\t * All editors that are opened across all editor groups with their group\n\t * identifier.\n\t *\n\t * @param order the order of the editors to use\n\t * @param options whether to exclude sticky editors or not\n\t */\n\tgetEditors(order: EditorsOrder, options?: { excludeSticky?: boolean }): readonly IEditorIdentifier[];\n\n\t/**\n\t * Open an editor in an editor group.\n\t *\n\t * @param editor the editor to open\n\t * @param options the options to use for the editor\n\t * @param group the target group. If unspecified, the editor will open in the currently\n\t * active group. Use `SIDE_GROUP_TYPE` to open the editor in a new editor group to the side\n\t * of the currently active group.\n\t *\n\t * @returns the editor that opened or `undefined` if the operation failed or the editor was not\n\t * opened to be active.\n\t */\n\topenEditor(editor: IResourceEditorInput, group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<IEditorPane | undefined>;\n\topenEditor(editor: ITextResourceEditorInput | IUntitledTextResourceEditorInput, group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<IEditorPane | undefined>;\n\topenEditor(editor: IResourceDiffEditorInput, group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<ITextDiffEditorPane | undefined>;\n\topenEditor(editor: IUntypedEditorInput, group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<IEditorPane | undefined>;\n\n\t/**\n\t * @deprecated using this method is a sign that your editor has not adopted the editor\n\t * resolver yet. Please use `IEditorResolverService.registerEditor` to make your editor\n\t * known to the workbench and then use untyped editor inputs for opening:\n\t *\n\t * ```ts\n\t * editorService.openEditor({ resource });\n\t * ```\n\t *\n\t * If you already have an `EditorInput` in hand and must use it for opening, use `group.openEditor`\n\t * instead, via `IEditorGroupService`.\n\t */\n\topenEditor(editor: EditorInput, options?: IEditorOptions, group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<IEditorPane | undefined>;\n\n\t/**\n\t * Open editors in an editor group.\n\t *\n\t * @param editors the editors to open with associated options\n\t * @param group the target group. If unspecified, the editor will open in the currently\n\t * active group. Use `SIDE_GROUP_TYPE` to open the editor in a new editor group to the side\n\t * of the currently active group.\n\t *\n\t * @returns the editors that opened. The array can be empty or have less elements for editors\n\t * that failed to open or were instructed to open as inactive.\n\t */\n\topenEditors(editors: IUntypedEditorInput[], group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE, options?: IOpenEditorsOptions): Promise<readonly IEditorPane[]>;\n\n\t/**\n\t * Replaces editors in an editor group with the provided replacement.\n\t *\n\t * @param replacements the editors to replace\n\t * @param group the editor group\n\t *\n\t * @returns a promise that is resolved when the replaced active\n\t * editor (if any) has finished loading.\n\t */\n\treplaceEditors(replacements: IUntypedEditorReplacement[], group: IEditorGroup | GroupIdentifier): Promise<void>;\n\n\t/**\n\t * Find out if the provided editor is opened in any editor group.\n\t *\n\t * Note: An editor can be opened but not actively visible.\n\t *\n\t * Note: This method will return `true` if a side by side editor\n\t * is opened where the `primary` editor matches too.\n\t */\n\tisOpened(editor: IResourceEditorInputIdentifier): boolean;\n\n\t/**\n\t * Find out if the provided editor is visible in any editor group.\n\t */\n\tisVisible(editor: EditorInput): boolean;\n\n\t/**\n\t * Close an editor in a specific editor group.\n\t */\n\tcloseEditor(editor: IEditorIdentifier, options?: ICloseEditorOptions): Promise<void>;\n\n\t/**\n\t * Close multiple editors in specific editor groups.\n\t */\n\tcloseEditors(editors: readonly IEditorIdentifier[], options?: ICloseEditorOptions): Promise<void>;\n\n\t/**\n\t * This method will return an entry for each editor that reports\n\t * a `resource` that matches the provided one in the group or\n\t * across all groups.\n\t *\n\t * It is possible that multiple editors are returned in case the\n\t * same resource is opened in different editors. To find the specific\n\t * editor, use the `IResourceEditorInputIdentifier` as input.\n\t */\n\tfindEditors(resource: URI, options?: IFindEditorOptions): readonly IEditorIdentifier[];\n\tfindEditors(editor: IResourceEditorInputIdentifier, options?: IFindEditorOptions): readonly IEditorIdentifier[];\n\n\t/**\n\t * Save the provided list of editors.\n\t *\n\t * @returns `true` if all editors saved and `false` otherwise.\n\t */\n\tsave(editors: IEditorIdentifier | IEditorIdentifier[], options?: ISaveEditorsOptions): Promise<boolean>;\n\n\t/**\n\t * Save all editors.\n\t *\n\t * @returns `true` if all editors saved and `false` otherwise.\n\t */\n\tsaveAll(options?: ISaveAllEditorsOptions): Promise<boolean>;\n\n\t/**\n\t * Reverts the provided list of editors.\n\t *\n\t * @returns `true` if all editors reverted and `false` otherwise.\n\t */\n\trevert(editors: IEditorIdentifier | IEditorIdentifier[], options?: IRevertOptions): Promise<boolean>;\n\n\t/**\n\t * Reverts all editors.\n\t *\n\t * @returns `true` if all editors reverted and `false` otherwise.\n\t */\n\trevertAll(options?: IRevertAllEditorsOptions): Promise<boolean>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { asArray, coalesce, isNonEmptyArray } from 'vs/base/common/arrays';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport * as htmlContent from 'vs/base/common/htmlContent';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { ResourceSet } from 'vs/base/common/map';\nimport { marked } from 'vs/base/common/marked/marked';\nimport { parse } from 'vs/base/common/marshalling';\nimport { cloneAndChange } from 'vs/base/common/objects';\nimport { isDefined, isEmptyObject, isNumber, isString, isUndefinedOrNull, withNullAsUndefined } from 'vs/base/common/types';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IURITransformer } from 'vs/base/common/uriIpc';\nimport { RenderLineNumbersType } from 'vs/editor/common/config/editorOptions';\nimport { IPosition } from 'vs/editor/common/core/position';\nimport * as editorRange from 'vs/editor/common/core/range';\nimport { ISelection } from 'vs/editor/common/core/selection';\nimport { IContentDecorationRenderOptions, IDecorationOptions, IDecorationRenderOptions, IThemeDecorationRenderOptions } from 'vs/editor/common/editorCommon';\nimport * as languages from 'vs/editor/common/languages';\nimport * as encodedTokenAttributes from 'vs/editor/common/encodedTokenAttributes';\nimport * as languageSelector from 'vs/editor/common/languageSelector';\nimport { EndOfLineSequence, TrackedRangeStickiness } from 'vs/editor/common/model';\nimport { EditorResolution, ITextEditorOptions } from 'vs/platform/editor/common/editor';\nimport { IMarkerData, IRelatedInformation, MarkerSeverity, MarkerTag } from 'vs/platform/markers/common/markers';\nimport { ProgressLocation as MainProgressLocation } from 'vs/platform/progress/common/progress';\nimport * as extHostProtocol from 'vs/workbench/api/common/extHost.protocol';\nimport { getPrivateApiFor } from 'vs/workbench/api/common/extHostTestingPrivateApi';\nimport { SaveReason } from 'vs/workbench/common/editor';\nimport { IViewBadge } from 'vs/workbench/common/views';\nimport * as notebooks from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { ICellRange } from 'vs/workbench/contrib/notebook/common/notebookRange';\nimport * as search from 'vs/workbench/contrib/search/common/search';\nimport { TestId } from 'vs/workbench/contrib/testing/common/testId';\nimport { CoverageDetails, denamespaceTestTag, DetailType, ICoveredCount, IFileCoverage, ISerializedTestResults, ITestErrorMessage, ITestItem, ITestTag, namespaceTestTag, TestMessageType, TestResultItem } from 'vs/workbench/contrib/testing/common/testTypes';\nimport { EditorGroupColumn } from 'vs/workbench/services/editor/common/editorGroupColumn';\nimport { ACTIVE_GROUP, SIDE_GROUP } from 'vs/workbench/services/editor/common/editorService';\nimport type * as vscode from 'vscode';\nimport * as types from './extHostTypes';\nimport { once } from 'vs/base/common/functional';\nimport { VSDataTransfer } from 'vs/base/common/dataTransfer';\n\nexport namespace Command {\n\n\texport interface ICommandsConverter {\n\t\tfromInternal(command: extHostProtocol.ICommandDto): vscode.Command | undefined;\n\t\ttoInternal(command: vscode.Command | undefined, disposables: DisposableStore): extHostProtocol.ICommandDto | undefined;\n\t}\n}\n\nexport interface PositionLike {\n\tline: number;\n\tcharacter: number;\n}\n\nexport interface RangeLike {\n\tstart: PositionLike;\n\tend: PositionLike;\n}\n\nexport interface SelectionLike extends RangeLike {\n\tanchor: PositionLike;\n\tactive: PositionLike;\n}\nexport namespace Selection {\n\n\texport function to(selection: ISelection): types.Selection {\n\t\tconst { selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn } = selection;\n\t\tconst start = new types.Position(selectionStartLineNumber - 1, selectionStartColumn - 1);\n\t\tconst end = new types.Position(positionLineNumber - 1, positionColumn - 1);\n\t\treturn new types.Selection(start, end);\n\t}\n\n\texport function from(selection: SelectionLike): ISelection {\n\t\tconst { anchor, active } = selection;\n\t\treturn {\n\t\t\tselectionStartLineNumber: anchor.line + 1,\n\t\t\tselectionStartColumn: anchor.character + 1,\n\t\t\tpositionLineNumber: active.line + 1,\n\t\t\tpositionColumn: active.character + 1\n\t\t};\n\t}\n}\nexport namespace Range {\n\n\texport function from(range: undefined): undefined;\n\texport function from(range: RangeLike): editorRange.IRange;\n\texport function from(range: RangeLike | undefined): editorRange.IRange | undefined;\n\texport function from(range: RangeLike | undefined): editorRange.IRange | undefined {\n\t\tif (!range) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst { start, end } = range;\n\t\treturn {\n\t\t\tstartLineNumber: start.line + 1,\n\t\t\tstartColumn: start.character + 1,\n\t\t\tendLineNumber: end.line + 1,\n\t\t\tendColumn: end.character + 1\n\t\t};\n\t}\n\n\texport function to(range: undefined): types.Range;\n\texport function to(range: editorRange.IRange): types.Range;\n\texport function to(range: editorRange.IRange | undefined): types.Range | undefined;\n\texport function to(range: editorRange.IRange | undefined): types.Range | undefined {\n\t\tif (!range) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst { startLineNumber, startColumn, endLineNumber, endColumn } = range;\n\t\treturn new types.Range(startLineNumber - 1, startColumn - 1, endLineNumber - 1, endColumn - 1);\n\t}\n}\n\nexport namespace TokenType {\n\texport function to(type: encodedTokenAttributes.StandardTokenType): types.StandardTokenType {\n\t\tswitch (type) {\n\t\t\tcase encodedTokenAttributes.StandardTokenType.Comment: return types.StandardTokenType.Comment;\n\t\t\tcase encodedTokenAttributes.StandardTokenType.Other: return types.StandardTokenType.Other;\n\t\t\tcase encodedTokenAttributes.StandardTokenType.RegEx: return types.StandardTokenType.RegEx;\n\t\t\tcase encodedTokenAttributes.StandardTokenType.String: return types.StandardTokenType.String;\n\t\t}\n\t}\n}\n\nexport namespace Position {\n\texport function to(position: IPosition): types.Position {\n\t\treturn new types.Position(position.lineNumber - 1, position.column - 1);\n\t}\n\texport function from(position: types.Position | vscode.Position): IPosition {\n\t\treturn { lineNumber: position.line + 1, column: position.character + 1 };\n\t}\n}\n\nexport namespace DocumentSelector {\n\n\texport function from(value: vscode.DocumentSelector, uriTransformer?: IURITransformer): extHostProtocol.IDocumentFilterDto[] {\n\t\treturn coalesce(asArray(value).map(sel => _doTransformDocumentSelector(sel, uriTransformer)));\n\t}\n\n\tfunction _doTransformDocumentSelector(selector: string | vscode.DocumentFilter, uriTransformer: IURITransformer | undefined): extHostProtocol.IDocumentFilterDto | undefined {\n\t\tif (typeof selector === 'string') {\n\t\t\treturn {\n\t\t\t\t$serialized: true,\n\t\t\t\tlanguage: selector\n\t\t\t};\n\t\t}\n\n\t\tif (selector) {\n\t\t\treturn {\n\t\t\t\t$serialized: true,\n\t\t\t\tlanguage: selector.language,\n\t\t\t\tscheme: _transformScheme(selector.scheme, uriTransformer),\n\t\t\t\tpattern: GlobPattern.from(selector.pattern) ?? undefined,\n\t\t\t\texclusive: selector.exclusive,\n\t\t\t\tnotebookType: selector.notebookType\n\t\t\t};\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tfunction _transformScheme(scheme: string | undefined, uriTransformer: IURITransformer | undefined): string | undefined {\n\t\tif (uriTransformer && typeof scheme === 'string') {\n\t\t\treturn uriTransformer.transformOutgoingScheme(scheme);\n\t\t}\n\t\treturn scheme;\n\t}\n}\n\nexport namespace DiagnosticTag {\n\texport function from(value: vscode.DiagnosticTag): MarkerTag | undefined {\n\t\tswitch (value) {\n\t\t\tcase types.DiagnosticTag.Unnecessary:\n\t\t\t\treturn MarkerTag.Unnecessary;\n\t\t\tcase types.DiagnosticTag.Deprecated:\n\t\t\t\treturn MarkerTag.Deprecated;\n\t\t}\n\t\treturn undefined;\n\t}\n\texport function to(value: MarkerTag): vscode.DiagnosticTag | undefined {\n\t\tswitch (value) {\n\t\t\tcase MarkerTag.Unnecessary:\n\t\t\t\treturn types.DiagnosticTag.Unnecessary;\n\t\t\tcase MarkerTag.Deprecated:\n\t\t\t\treturn types.DiagnosticTag.Deprecated;\n\t\t\tdefault:\n\t\t\t\treturn undefined;\n\t\t}\n\t}\n}\n\nexport namespace Diagnostic {\n\texport function from(value: vscode.Diagnostic): IMarkerData {\n\t\tlet code: string | { value: string; target: URI } | undefined;\n\n\t\tif (value.code) {\n\t\t\tif (isString(value.code) || isNumber(value.code)) {\n\t\t\t\tcode = String(value.code);\n\t\t\t} else {\n\t\t\t\tcode = {\n\t\t\t\t\tvalue: String(value.code.value),\n\t\t\t\t\ttarget: value.code.target,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\t...Range.from(value.range),\n\t\t\tmessage: value.message,\n\t\t\tsource: value.source,\n\t\t\tcode,\n\t\t\tseverity: DiagnosticSeverity.from(value.severity),\n\t\t\trelatedInformation: value.relatedInformation && value.relatedInformation.map(DiagnosticRelatedInformation.from),\n\t\t\ttags: Array.isArray(value.tags) ? coalesce(value.tags.map(DiagnosticTag.from)) : undefined,\n\t\t};\n\t}\n\n\texport function to(value: IMarkerData): vscode.Diagnostic {\n\t\tconst res = new types.Diagnostic(Range.to(value), value.message, DiagnosticSeverity.to(value.severity));\n\t\tres.source = value.source;\n\t\tres.code = isString(value.code) ? value.code : value.code?.value;\n\t\tres.relatedInformation = value.relatedInformation && value.relatedInformation.map(DiagnosticRelatedInformation.to);\n\t\tres.tags = value.tags && coalesce(value.tags.map(DiagnosticTag.to));\n\t\treturn res;\n\t}\n}\n\nexport namespace DiagnosticRelatedInformation {\n\texport function from(value: vscode.DiagnosticRelatedInformation): IRelatedInformation {\n\t\treturn {\n\t\t\t...Range.from(value.location.range),\n\t\t\tmessage: value.message,\n\t\t\tresource: value.location.uri\n\t\t};\n\t}\n\texport function to(value: IRelatedInformation): types.DiagnosticRelatedInformation {\n\t\treturn new types.DiagnosticRelatedInformation(new types.Location(value.resource, Range.to(value)), value.message);\n\t}\n}\nexport namespace DiagnosticSeverity {\n\n\texport function from(value: number): MarkerSeverity {\n\t\tswitch (value) {\n\t\t\tcase types.DiagnosticSeverity.Error:\n\t\t\t\treturn MarkerSeverity.Error;\n\t\t\tcase types.DiagnosticSeverity.Warning:\n\t\t\t\treturn MarkerSeverity.Warning;\n\t\t\tcase types.DiagnosticSeverity.Information:\n\t\t\t\treturn MarkerSeverity.Info;\n\t\t\tcase types.DiagnosticSeverity.Hint:\n\t\t\t\treturn MarkerSeverity.Hint;\n\t\t}\n\t\treturn MarkerSeverity.Error;\n\t}\n\n\texport function to(value: MarkerSeverity): types.DiagnosticSeverity {\n\t\tswitch (value) {\n\t\t\tcase MarkerSeverity.Info:\n\t\t\t\treturn types.DiagnosticSeverity.Information;\n\t\t\tcase MarkerSeverity.Warning:\n\t\t\t\treturn types.DiagnosticSeverity.Warning;\n\t\t\tcase MarkerSeverity.Error:\n\t\t\t\treturn types.DiagnosticSeverity.Error;\n\t\t\tcase MarkerSeverity.Hint:\n\t\t\t\treturn types.DiagnosticSeverity.Hint;\n\t\t\tdefault:\n\t\t\t\treturn types.DiagnosticSeverity.Error;\n\t\t}\n\t}\n}\n\nexport namespace ViewColumn {\n\texport function from(column?: vscode.ViewColumn): EditorGroupColumn {\n\t\tif (typeof column === 'number' && column >= types.ViewColumn.One) {\n\t\t\treturn column - 1; // adjust zero index (ViewColumn.ONE => 0)\n\t\t}\n\n\t\tif (column === types.ViewColumn.Beside) {\n\t\t\treturn SIDE_GROUP;\n\t\t}\n\n\t\treturn ACTIVE_GROUP; // default is always the active group\n\t}\n\n\texport function to(position: EditorGroupColumn): vscode.ViewColumn {\n\t\tif (typeof position === 'number' && position >= 0) {\n\t\t\treturn position + 1; // adjust to index (ViewColumn.ONE => 1)\n\t\t}\n\n\t\tthrow new Error(`invalid 'EditorGroupColumn'`);\n\t}\n}\n\nfunction isDecorationOptions(something: any): something is vscode.DecorationOptions {\n\treturn (typeof something.range !== 'undefined');\n}\n\nexport function isDecorationOptionsArr(something: vscode.Range[] | vscode.DecorationOptions[]): something is vscode.DecorationOptions[] {\n\tif (something.length === 0) {\n\t\treturn true;\n\t}\n\treturn isDecorationOptions(something[0]) ? true : false;\n}\n\nexport namespace MarkdownString {\n\n\texport function fromMany(markup: (vscode.MarkdownString | vscode.MarkedString)[]): htmlContent.IMarkdownString[] {\n\t\treturn markup.map(MarkdownString.from);\n\t}\n\n\tinterface Codeblock {\n\t\tlanguage: string;\n\t\tvalue: string;\n\t}\n\n\tfunction isCodeblock(thing: any): thing is Codeblock {\n\t\treturn thing && typeof thing === 'object'\n\t\t\t&& typeof (<Codeblock>thing).language === 'string'\n\t\t\t&& typeof (<Codeblock>thing).value === 'string';\n\t}\n\n\texport function from(markup: vscode.MarkdownString | vscode.MarkedString): htmlContent.IMarkdownString {\n\t\tlet res: htmlContent.IMarkdownString;\n\t\tif (isCodeblock(markup)) {\n\t\t\tconst { language, value } = markup;\n\t\t\tres = { value: '```' + language + '\\n' + value + '\\n```\\n' };\n\t\t} else if (types.MarkdownString.isMarkdownString(markup)) {\n\t\t\tres = { value: markup.value, isTrusted: markup.isTrusted, supportThemeIcons: markup.supportThemeIcons, supportHtml: markup.supportHtml, baseUri: markup.baseUri };\n\t\t} else if (typeof markup === 'string') {\n\t\t\tres = { value: markup };\n\t\t} else {\n\t\t\tres = { value: '' };\n\t\t}\n\n\t\t// extract uris into a separate object\n\t\tconst resUris: { [href: string]: UriComponents } = Object.create(null);\n\t\tres.uris = resUris;\n\n\t\tconst collectUri = (href: string): string => {\n\t\t\ttry {\n\t\t\t\tlet uri = URI.parse(href, true);\n\t\t\t\turi = uri.with({ query: _uriMassage(uri.query, resUris) });\n\t\t\t\tresUris[href] = uri;\n\t\t\t} catch (e) {\n\t\t\t\t// ignore\n\t\t\t}\n\t\t\treturn '';\n\t\t};\n\t\tconst renderer = new marked.Renderer();\n\t\trenderer.link = collectUri;\n\t\trenderer.image = href => typeof href === 'string' ? collectUri(htmlContent.parseHrefAndDimensions(href).href) : '';\n\n\t\tmarked(res.value, { renderer });\n\n\t\treturn res;\n\t}\n\n\tfunction _uriMassage(part: string, bucket: { [n: string]: UriComponents }): string {\n\t\tif (!part) {\n\t\t\treturn part;\n\t\t}\n\t\tlet data: any;\n\t\ttry {\n\t\t\tdata = parse(part);\n\t\t} catch (e) {\n\t\t\t// ignore\n\t\t}\n\t\tif (!data) {\n\t\t\treturn part;\n\t\t}\n\t\tlet changed = false;\n\t\tdata = cloneAndChange(data, value => {\n\t\t\tif (URI.isUri(value)) {\n\t\t\t\tconst key = `__uri_${Math.random().toString(16).slice(2, 8)}`;\n\t\t\t\tbucket[key] = value;\n\t\t\t\tchanged = true;\n\t\t\t\treturn key;\n\t\t\t} else {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t});\n\n\t\tif (!changed) {\n\t\t\treturn part;\n\t\t}\n\n\t\treturn JSON.stringify(data);\n\t}\n\n\texport function to(value: htmlContent.IMarkdownString): vscode.MarkdownString {\n\t\tconst result = new types.MarkdownString(value.value, value.supportThemeIcons);\n\t\tresult.isTrusted = value.isTrusted;\n\t\tresult.supportHtml = value.supportHtml;\n\t\tresult.baseUri = value.baseUri ? URI.from(value.baseUri) : undefined;\n\t\treturn result;\n\t}\n\n\texport function fromStrict(value: string | vscode.MarkdownString | undefined | null): undefined | string | htmlContent.IMarkdownString {\n\t\tif (!value) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn typeof value === 'string' ? value : MarkdownString.from(value);\n\t}\n}\n\nexport function fromRangeOrRangeWithMessage(ranges: vscode.Range[] | vscode.DecorationOptions[]): IDecorationOptions[] {\n\tif (isDecorationOptionsArr(ranges)) {\n\t\treturn ranges.map((r): IDecorationOptions => {\n\t\t\treturn {\n\t\t\t\trange: Range.from(r.range),\n\t\t\t\thoverMessage: Array.isArray(r.hoverMessage)\n\t\t\t\t\t? MarkdownString.fromMany(r.hoverMessage)\n\t\t\t\t\t: (r.hoverMessage ? MarkdownString.from(r.hoverMessage) : undefined),\n\t\t\t\trenderOptions: <any> /* URI vs Uri */r.renderOptions\n\t\t\t};\n\t\t});\n\t} else {\n\t\treturn ranges.map((r): IDecorationOptions => {\n\t\t\treturn {\n\t\t\t\trange: Range.from(r)\n\t\t\t};\n\t\t});\n\t}\n}\n\nexport function pathOrURIToURI(value: string | URI): URI {\n\tif (typeof value === 'undefined') {\n\t\treturn value;\n\t}\n\tif (typeof value === 'string') {\n\t\treturn URI.file(value);\n\t} else {\n\t\treturn value;\n\t}\n}\n\nexport namespace ThemableDecorationAttachmentRenderOptions {\n\texport function from(options: vscode.ThemableDecorationAttachmentRenderOptions): IContentDecorationRenderOptions {\n\t\tif (typeof options === 'undefined') {\n\t\t\treturn options;\n\t\t}\n\t\treturn {\n\t\t\tcontentText: options.contentText,\n\t\t\tcontentIconPath: options.contentIconPath ? pathOrURIToURI(options.contentIconPath) : undefined,\n\t\t\tborder: options.border,\n\t\t\tborderColor: <string | types.ThemeColor>options.borderColor,\n\t\t\tfontStyle: options.fontStyle,\n\t\t\tfontWeight: options.fontWeight,\n\t\t\ttextDecoration: options.textDecoration,\n\t\t\tcolor: <string | types.ThemeColor>options.color,\n\t\t\tbackgroundColor: <string | types.ThemeColor>options.backgroundColor,\n\t\t\tmargin: options.margin,\n\t\t\twidth: options.width,\n\t\t\theight: options.height,\n\t\t};\n\t}\n}\n\nexport namespace ThemableDecorationRenderOptions {\n\texport function from(options: vscode.ThemableDecorationRenderOptions): IThemeDecorationRenderOptions {\n\t\tif (typeof options === 'undefined') {\n\t\t\treturn options;\n\t\t}\n\t\treturn {\n\t\t\tbackgroundColor: <string | types.ThemeColor>options.backgroundColor,\n\t\t\toutline: options.outline,\n\t\t\toutlineColor: <string | types.ThemeColor>options.outlineColor,\n\t\t\toutlineStyle: options.outlineStyle,\n\t\t\toutlineWidth: options.outlineWidth,\n\t\t\tborder: options.border,\n\t\t\tborderColor: <string | types.ThemeColor>options.borderColor,\n\t\t\tborderRadius: options.borderRadius,\n\t\t\tborderSpacing: options.borderSpacing,\n\t\t\tborderStyle: options.borderStyle,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\tfontStyle: options.fontStyle,\n\t\t\tfontWeight: options.fontWeight,\n\t\t\ttextDecoration: options.textDecoration,\n\t\t\tcursor: options.cursor,\n\t\t\tcolor: <string | types.ThemeColor>options.color,\n\t\t\topacity: options.opacity,\n\t\t\tletterSpacing: options.letterSpacing,\n\t\t\tgutterIconPath: options.gutterIconPath ? pathOrURIToURI(options.gutterIconPath) : undefined,\n\t\t\tgutterIconSize: options.gutterIconSize,\n\t\t\toverviewRulerColor: <string | types.ThemeColor>options.overviewRulerColor,\n\t\t\tbefore: options.before ? ThemableDecorationAttachmentRenderOptions.from(options.before) : undefined,\n\t\t\tafter: options.after ? ThemableDecorationAttachmentRenderOptions.from(options.after) : undefined,\n\t\t};\n\t}\n}\n\nexport namespace DecorationRangeBehavior {\n\texport function from(value: types.DecorationRangeBehavior): TrackedRangeStickiness {\n\t\tif (typeof value === 'undefined') {\n\t\t\treturn value;\n\t\t}\n\t\tswitch (value) {\n\t\t\tcase types.DecorationRangeBehavior.OpenOpen:\n\t\t\t\treturn TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges;\n\t\t\tcase types.DecorationRangeBehavior.ClosedClosed:\n\t\t\t\treturn TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges;\n\t\t\tcase types.DecorationRangeBehavior.OpenClosed:\n\t\t\t\treturn TrackedRangeStickiness.GrowsOnlyWhenTypingBefore;\n\t\t\tcase types.DecorationRangeBehavior.ClosedOpen:\n\t\t\t\treturn TrackedRangeStickiness.GrowsOnlyWhenTypingAfter;\n\t\t}\n\t}\n}\n\nexport namespace DecorationRenderOptions {\n\texport function from(options: vscode.DecorationRenderOptions): IDecorationRenderOptions {\n\t\treturn {\n\t\t\tisWholeLine: options.isWholeLine,\n\t\t\trangeBehavior: options.rangeBehavior ? DecorationRangeBehavior.from(options.rangeBehavior) : undefined,\n\t\t\toverviewRulerLane: options.overviewRulerLane,\n\t\t\tlight: options.light ? ThemableDecorationRenderOptions.from(options.light) : undefined,\n\t\t\tdark: options.dark ? ThemableDecorationRenderOptions.from(options.dark) : undefined,\n\n\t\t\tbackgroundColor: <string | types.ThemeColor>options.backgroundColor,\n\t\t\toutline: options.outline,\n\t\t\toutlineColor: <string | types.ThemeColor>options.outlineColor,\n\t\t\toutlineStyle: options.outlineStyle,\n\t\t\toutlineWidth: options.outlineWidth,\n\t\t\tborder: options.border,\n\t\t\tborderColor: <string | types.ThemeColor>options.borderColor,\n\t\t\tborderRadius: options.borderRadius,\n\t\t\tborderSpacing: options.borderSpacing,\n\t\t\tborderStyle: options.borderStyle,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\tfontStyle: options.fontStyle,\n\t\t\tfontWeight: options.fontWeight,\n\t\t\ttextDecoration: options.textDecoration,\n\t\t\tcursor: options.cursor,\n\t\t\tcolor: <string | types.ThemeColor>options.color,\n\t\t\topacity: options.opacity,\n\t\t\tletterSpacing: options.letterSpacing,\n\t\t\tgutterIconPath: options.gutterIconPath ? pathOrURIToURI(options.gutterIconPath) : undefined,\n\t\t\tgutterIconSize: options.gutterIconSize,\n\t\t\toverviewRulerColor: <string | types.ThemeColor>options.overviewRulerColor,\n\t\t\tbefore: options.before ? ThemableDecorationAttachmentRenderOptions.from(options.before) : undefined,\n\t\t\tafter: options.after ? ThemableDecorationAttachmentRenderOptions.from(options.after) : undefined,\n\t\t};\n\t}\n}\n\nexport namespace TextEdit {\n\n\texport function from(edit: vscode.TextEdit): languages.TextEdit {\n\t\treturn <languages.TextEdit>{\n\t\t\ttext: edit.newText,\n\t\t\teol: edit.newEol && EndOfLine.from(edit.newEol),\n\t\t\trange: Range.from(edit.range)\n\t\t};\n\t}\n\n\texport function to(edit: languages.TextEdit): types.TextEdit {\n\t\tconst result = new types.TextEdit(Range.to(edit.range), edit.text);\n\t\tresult.newEol = (typeof edit.eol === 'undefined' ? undefined : EndOfLine.to(edit.eol))!;\n\t\treturn result;\n\t}\n}\n\nexport namespace WorkspaceEdit {\n\n\texport interface IVersionInformationProvider {\n\t\tgetTextDocumentVersion(uri: URI): number | undefined;\n\t\tgetNotebookDocumentVersion(uri: URI): number | undefined;\n\t}\n\n\texport function from(value: vscode.WorkspaceEdit, versionInfo?: IVersionInformationProvider, allowSnippetTextEdit?: boolean): extHostProtocol.IWorkspaceEditDto {\n\t\tconst result: extHostProtocol.IWorkspaceEditDto = {\n\t\t\tedits: []\n\t\t};\n\n\t\tif (value instanceof types.WorkspaceEdit) {\n\n\t\t\t// collect all files that are to be created so that their version\n\t\t\t// information (in case they exist as text model already) can be ignored\n\t\t\tconst toCreate = new ResourceSet();\n\t\t\tfor (const entry of value._allEntries()) {\n\t\t\t\tif (entry._type === types.FileEditType.File && URI.isUri(entry.to) && entry.from === undefined) {\n\t\t\t\t\ttoCreate.add(entry.to);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const entry of value._allEntries()) {\n\n\t\t\t\tif (entry._type === types.FileEditType.File) {\n\t\t\t\t\t// file operation\n\t\t\t\t\tresult.edits.push(<languages.IWorkspaceFileEdit>{\n\t\t\t\t\t\toldResource: entry.from,\n\t\t\t\t\t\tnewResource: entry.to,\n\t\t\t\t\t\toptions: entry.options,\n\t\t\t\t\t\tmetadata: entry.metadata\n\t\t\t\t\t});\n\n\t\t\t\t} else if (entry._type === types.FileEditType.Text) {\n\t\t\t\t\t// text edits\n\t\t\t\t\tresult.edits.push(<languages.IWorkspaceTextEdit>{\n\t\t\t\t\t\tresource: entry.uri,\n\t\t\t\t\t\ttextEdit: TextEdit.from(entry.edit),\n\t\t\t\t\t\tversionId: !toCreate.has(entry.uri) ? versionInfo?.getTextDocumentVersion(entry.uri) : undefined,\n\t\t\t\t\t\tmetadata: entry.metadata\n\t\t\t\t\t});\n\t\t\t\t} else if (entry._type === types.FileEditType.Snippet) {\n\t\t\t\t\t// snippet text edits\n\t\t\t\t\tif (!allowSnippetTextEdit) {\n\t\t\t\t\t\tconsole.warn(`DROPPING snippet text edit because proposal IS NOT ENABLED`, entry);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tresult.edits.push(<languages.IWorkspaceTextEdit>{\n\t\t\t\t\t\tresource: entry.uri,\n\t\t\t\t\t\ttextEdit: {\n\t\t\t\t\t\t\trange: Range.from(entry.range),\n\t\t\t\t\t\t\ttext: entry.edit.value,\n\t\t\t\t\t\t\tinsertAsSnippet: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\tversionId: !toCreate.has(entry.uri) ? versionInfo?.getTextDocumentVersion(entry.uri) : undefined,\n\t\t\t\t\t\tmetadata: entry.metadata\n\t\t\t\t\t});\n\n\t\t\t\t} else if (entry._type === types.FileEditType.Cell) {\n\t\t\t\t\t// cell edit\n\t\t\t\t\tresult.edits.push(<notebooks.IWorkspaceNotebookCellEdit>{\n\t\t\t\t\t\tmetadata: entry.metadata,\n\t\t\t\t\t\tresource: entry.uri,\n\t\t\t\t\t\tcellEdit: entry.edit,\n\t\t\t\t\t\tnotebookMetadata: entry.notebookMetadata,\n\t\t\t\t\t\tnotebookVersionId: versionInfo?.getNotebookDocumentVersion(entry.uri)\n\t\t\t\t\t});\n\n\t\t\t\t} else if (entry._type === types.FileEditType.CellReplace) {\n\t\t\t\t\t// cell replace\n\t\t\t\t\tresult.edits.push(<extHostProtocol.IWorkspaceCellEditDto>{\n\t\t\t\t\t\tmetadata: entry.metadata,\n\t\t\t\t\t\tresource: entry.uri,\n\t\t\t\t\t\tnotebookVersionId: versionInfo?.getNotebookDocumentVersion(entry.uri),\n\t\t\t\t\t\tcellEdit: {\n\t\t\t\t\t\t\teditType: notebooks.CellEditType.Replace,\n\t\t\t\t\t\t\tindex: entry.index,\n\t\t\t\t\t\t\tcount: entry.count,\n\t\t\t\t\t\t\tcells: entry.cells.map(NotebookCellData.from)\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\texport function to(value: extHostProtocol.IWorkspaceEditDto) {\n\t\tconst result = new types.WorkspaceEdit();\n\t\tfor (const edit of value.edits) {\n\t\t\tif ((<extHostProtocol.IWorkspaceTextEditDto>edit).textEdit) {\n\t\t\t\tresult.replace(\n\t\t\t\t\tURI.revive((<extHostProtocol.IWorkspaceTextEditDto>edit).resource),\n\t\t\t\t\tRange.to((<extHostProtocol.IWorkspaceTextEditDto>edit).textEdit.range),\n\t\t\t\t\t(<extHostProtocol.IWorkspaceTextEditDto>edit).textEdit.text\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tresult.renameFile(\n\t\t\t\t\tURI.revive((<extHostProtocol.IWorkspaceFileEditDto>edit).oldResource!),\n\t\t\t\t\tURI.revive((<extHostProtocol.IWorkspaceFileEditDto>edit).newResource!),\n\t\t\t\t\t(<extHostProtocol.IWorkspaceFileEditDto>edit).options\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n\n\nexport namespace SymbolKind {\n\n\tconst _fromMapping: { [kind: number]: languages.SymbolKind } = Object.create(null);\n\t_fromMapping[types.SymbolKind.File] = languages.SymbolKind.File;\n\t_fromMapping[types.SymbolKind.Module] = languages.SymbolKind.Module;\n\t_fromMapping[types.SymbolKind.Namespace] = languages.SymbolKind.Namespace;\n\t_fromMapping[types.SymbolKind.Package] = languages.SymbolKind.Package;\n\t_fromMapping[types.SymbolKind.Class] = languages.SymbolKind.Class;\n\t_fromMapping[types.SymbolKind.Method] = languages.SymbolKind.Method;\n\t_fromMapping[types.SymbolKind.Property] = languages.SymbolKind.Property;\n\t_fromMapping[types.SymbolKind.Field] = languages.SymbolKind.Field;\n\t_fromMapping[types.SymbolKind.Constructor] = languages.SymbolKind.Constructor;\n\t_fromMapping[types.SymbolKind.Enum] = languages.SymbolKind.Enum;\n\t_fromMapping[types.SymbolKind.Interface] = languages.SymbolKind.Interface;\n\t_fromMapping[types.SymbolKind.Function] = languages.SymbolKind.Function;\n\t_fromMapping[types.SymbolKind.Variable] = languages.SymbolKind.Variable;\n\t_fromMapping[types.SymbolKind.Constant] = languages.SymbolKind.Constant;\n\t_fromMapping[types.SymbolKind.String] = languages.SymbolKind.String;\n\t_fromMapping[types.SymbolKind.Number] = languages.SymbolKind.Number;\n\t_fromMapping[types.SymbolKind.Boolean] = languages.SymbolKind.Boolean;\n\t_fromMapping[types.SymbolKind.Array] = languages.SymbolKind.Array;\n\t_fromMapping[types.SymbolKind.Object] = languages.SymbolKind.Object;\n\t_fromMapping[types.SymbolKind.Key] = languages.SymbolKind.Key;\n\t_fromMapping[types.SymbolKind.Null] = languages.SymbolKind.Null;\n\t_fromMapping[types.SymbolKind.EnumMember] = languages.SymbolKind.EnumMember;\n\t_fromMapping[types.SymbolKind.Struct] = languages.SymbolKind.Struct;\n\t_fromMapping[types.SymbolKind.Event] = languages.SymbolKind.Event;\n\t_fromMapping[types.SymbolKind.Operator] = languages.SymbolKind.Operator;\n\t_fromMapping[types.SymbolKind.TypeParameter] = languages.SymbolKind.TypeParameter;\n\n\texport function from(kind: vscode.SymbolKind): languages.SymbolKind {\n\t\treturn typeof _fromMapping[kind] === 'number' ? _fromMapping[kind] : languages.SymbolKind.Property;\n\t}\n\n\texport function to(kind: languages.SymbolKind): vscode.SymbolKind {\n\t\tfor (const k in _fromMapping) {\n\t\t\tif (_fromMapping[k] === kind) {\n\t\t\t\treturn Number(k);\n\t\t\t}\n\t\t}\n\t\treturn types.SymbolKind.Property;\n\t}\n}\n\nexport namespace SymbolTag {\n\n\texport function from(kind: types.SymbolTag): languages.SymbolTag {\n\t\tswitch (kind) {\n\t\t\tcase types.SymbolTag.Deprecated: return languages.SymbolTag.Deprecated;\n\t\t}\n\t}\n\n\texport function to(kind: languages.SymbolTag): types.SymbolTag {\n\t\tswitch (kind) {\n\t\t\tcase languages.SymbolTag.Deprecated: return types.SymbolTag.Deprecated;\n\t\t}\n\t}\n}\n\nexport namespace WorkspaceSymbol {\n\texport function from(info: vscode.SymbolInformation): search.IWorkspaceSymbol {\n\t\treturn <search.IWorkspaceSymbol>{\n\t\t\tname: info.name,\n\t\t\tkind: SymbolKind.from(info.kind),\n\t\t\ttags: info.tags && info.tags.map(SymbolTag.from),\n\t\t\tcontainerName: info.containerName,\n\t\t\tlocation: location.from(info.location)\n\t\t};\n\t}\n\texport function to(info: search.IWorkspaceSymbol): types.SymbolInformation {\n\t\tconst result = new types.SymbolInformation(\n\t\t\tinfo.name,\n\t\t\tSymbolKind.to(info.kind),\n\t\t\tinfo.containerName,\n\t\t\tlocation.to(info.location)\n\t\t);\n\t\tresult.tags = info.tags && info.tags.map(SymbolTag.to);\n\t\treturn result;\n\t}\n}\n\nexport namespace DocumentSymbol {\n\texport function from(info: vscode.DocumentSymbol): languages.DocumentSymbol {\n\t\tconst result: languages.DocumentSymbol = {\n\t\t\tname: info.name || '!!MISSING: name!!',\n\t\t\tdetail: info.detail,\n\t\t\trange: Range.from(info.range),\n\t\t\tselectionRange: Range.from(info.selectionRange),\n\t\t\tkind: SymbolKind.from(info.kind),\n\t\t\ttags: info.tags?.map(SymbolTag.from) ?? []\n\t\t};\n\t\tif (info.children) {\n\t\t\tresult.children = info.children.map(from);\n\t\t}\n\t\treturn result;\n\t}\n\texport function to(info: languages.DocumentSymbol): vscode.DocumentSymbol {\n\t\tconst result = new types.DocumentSymbol(\n\t\t\tinfo.name,\n\t\t\tinfo.detail,\n\t\t\tSymbolKind.to(info.kind),\n\t\t\tRange.to(info.range),\n\t\t\tRange.to(info.selectionRange),\n\t\t);\n\t\tif (isNonEmptyArray(info.tags)) {\n\t\t\tresult.tags = info.tags.map(SymbolTag.to);\n\t\t}\n\t\tif (info.children) {\n\t\t\tresult.children = info.children.map(to) as any;\n\t\t}\n\t\treturn result;\n\t}\n}\n\nexport namespace CallHierarchyItem {\n\n\texport function to(item: extHostProtocol.ICallHierarchyItemDto): types.CallHierarchyItem {\n\t\tconst result = new types.CallHierarchyItem(\n\t\t\tSymbolKind.to(item.kind),\n\t\t\titem.name,\n\t\t\titem.detail || '',\n\t\t\tURI.revive(item.uri),\n\t\t\tRange.to(item.range),\n\t\t\tRange.to(item.selectionRange)\n\t\t);\n\n\t\tresult._sessionId = item._sessionId;\n\t\tresult._itemId = item._itemId;\n\n\t\treturn result;\n\t}\n\n\texport function from(item: vscode.CallHierarchyItem, sessionId?: string, itemId?: string): extHostProtocol.ICallHierarchyItemDto {\n\n\t\tsessionId = sessionId ?? (<types.CallHierarchyItem>item)._sessionId;\n\t\titemId = itemId ?? (<types.CallHierarchyItem>item)._itemId;\n\n\t\tif (sessionId === undefined || itemId === undefined) {\n\t\t\tthrow new Error('invalid item');\n\t\t}\n\n\t\treturn {\n\t\t\t_sessionId: sessionId,\n\t\t\t_itemId: itemId,\n\t\t\tname: item.name,\n\t\t\tdetail: item.detail,\n\t\t\tkind: SymbolKind.from(item.kind),\n\t\t\turi: item.uri,\n\t\t\trange: Range.from(item.range),\n\t\t\tselectionRange: Range.from(item.selectionRange),\n\t\t\ttags: item.tags?.map(SymbolTag.from)\n\t\t};\n\t}\n}\n\nexport namespace CallHierarchyIncomingCall {\n\n\texport function to(item: extHostProtocol.IIncomingCallDto): types.CallHierarchyIncomingCall {\n\t\treturn new types.CallHierarchyIncomingCall(\n\t\t\tCallHierarchyItem.to(item.from),\n\t\t\titem.fromRanges.map(r => Range.to(r))\n\t\t);\n\t}\n}\n\nexport namespace CallHierarchyOutgoingCall {\n\n\texport function to(item: extHostProtocol.IOutgoingCallDto): types.CallHierarchyOutgoingCall {\n\t\treturn new types.CallHierarchyOutgoingCall(\n\t\t\tCallHierarchyItem.to(item.to),\n\t\t\titem.fromRanges.map(r => Range.to(r))\n\t\t);\n\t}\n}\n\n\nexport namespace location {\n\texport function from(value: vscode.Location): languages.Location {\n\t\treturn {\n\t\t\trange: value.range && Range.from(value.range),\n\t\t\turi: value.uri\n\t\t};\n\t}\n\n\texport function to(value: extHostProtocol.ILocationDto): types.Location {\n\t\treturn new types.Location(URI.revive(value.uri), Range.to(value.range));\n\t}\n}\n\nexport namespace DefinitionLink {\n\texport function from(value: vscode.Location | vscode.DefinitionLink): languages.LocationLink {\n\t\tconst definitionLink = <vscode.DefinitionLink>value;\n\t\tconst location = <vscode.Location>value;\n\t\treturn {\n\t\t\toriginSelectionRange: definitionLink.originSelectionRange\n\t\t\t\t? Range.from(definitionLink.originSelectionRange)\n\t\t\t\t: undefined,\n\t\t\turi: definitionLink.targetUri ? definitionLink.targetUri : location.uri,\n\t\t\trange: Range.from(definitionLink.targetRange ? definitionLink.targetRange : location.range),\n\t\t\ttargetSelectionRange: definitionLink.targetSelectionRange\n\t\t\t\t? Range.from(definitionLink.targetSelectionRange)\n\t\t\t\t: undefined,\n\t\t};\n\t}\n\texport function to(value: extHostProtocol.ILocationLinkDto): vscode.LocationLink {\n\t\treturn {\n\t\t\ttargetUri: URI.revive(value.uri),\n\t\t\ttargetRange: Range.to(value.range),\n\t\t\ttargetSelectionRange: value.targetSelectionRange\n\t\t\t\t? Range.to(value.targetSelectionRange)\n\t\t\t\t: undefined,\n\t\t\toriginSelectionRange: value.originSelectionRange\n\t\t\t\t? Range.to(value.originSelectionRange)\n\t\t\t\t: undefined\n\t\t};\n\t}\n}\n\nexport namespace Hover {\n\texport function from(hover: vscode.Hover): languages.Hover {\n\t\treturn <languages.Hover>{\n\t\t\trange: Range.from(hover.range),\n\t\t\tcontents: MarkdownString.fromMany(hover.contents)\n\t\t};\n\t}\n\n\texport function to(info: languages.Hover): types.Hover {\n\t\treturn new types.Hover(info.contents.map(MarkdownString.to), Range.to(info.range));\n\t}\n}\n\nexport namespace EvaluatableExpression {\n\texport function from(expression: vscode.EvaluatableExpression): languages.EvaluatableExpression {\n\t\treturn <languages.EvaluatableExpression>{\n\t\t\trange: Range.from(expression.range),\n\t\t\texpression: expression.expression\n\t\t};\n\t}\n\n\texport function to(info: languages.EvaluatableExpression): types.EvaluatableExpression {\n\t\treturn new types.EvaluatableExpression(Range.to(info.range), info.expression);\n\t}\n}\n\nexport namespace InlineValue {\n\texport function from(inlineValue: vscode.InlineValue): languages.InlineValue {\n\t\tif (inlineValue instanceof types.InlineValueText) {\n\t\t\treturn <languages.InlineValueText>{\n\t\t\t\ttype: 'text',\n\t\t\t\trange: Range.from(inlineValue.range),\n\t\t\t\ttext: inlineValue.text\n\t\t\t};\n\t\t} else if (inlineValue instanceof types.InlineValueVariableLookup) {\n\t\t\treturn <languages.InlineValueVariableLookup>{\n\t\t\t\ttype: 'variable',\n\t\t\t\trange: Range.from(inlineValue.range),\n\t\t\t\tvariableName: inlineValue.variableName,\n\t\t\t\tcaseSensitiveLookup: inlineValue.caseSensitiveLookup\n\t\t\t};\n\t\t} else if (inlineValue instanceof types.InlineValueEvaluatableExpression) {\n\t\t\treturn <languages.InlineValueExpression>{\n\t\t\t\ttype: 'expression',\n\t\t\t\trange: Range.from(inlineValue.range),\n\t\t\t\texpression: inlineValue.expression\n\t\t\t};\n\t\t} else {\n\t\t\tthrow new Error(`Unknown 'InlineValue' type`);\n\t\t}\n\t}\n\n\texport function to(inlineValue: languages.InlineValue): vscode.InlineValue {\n\t\tswitch (inlineValue.type) {\n\t\t\tcase 'text':\n\t\t\t\treturn <vscode.InlineValueText>{\n\t\t\t\t\trange: Range.to(inlineValue.range),\n\t\t\t\t\ttext: inlineValue.text\n\t\t\t\t};\n\t\t\tcase 'variable':\n\t\t\t\treturn <vscode.InlineValueVariableLookup>{\n\t\t\t\t\trange: Range.to(inlineValue.range),\n\t\t\t\t\tvariableName: inlineValue.variableName,\n\t\t\t\t\tcaseSensitiveLookup: inlineValue.caseSensitiveLookup\n\t\t\t\t};\n\t\t\tcase 'expression':\n\t\t\t\treturn <vscode.InlineValueEvaluatableExpression>{\n\t\t\t\t\trange: Range.to(inlineValue.range),\n\t\t\t\t\texpression: inlineValue.expression\n\t\t\t\t};\n\t\t}\n\t}\n}\n\nexport namespace InlineValueContext {\n\texport function from(inlineValueContext: vscode.InlineValueContext): extHostProtocol.IInlineValueContextDto {\n\t\treturn <extHostProtocol.IInlineValueContextDto>{\n\t\t\tframeId: inlineValueContext.frameId,\n\t\t\tstoppedLocation: Range.from(inlineValueContext.stoppedLocation)\n\t\t};\n\t}\n\n\texport function to(inlineValueContext: extHostProtocol.IInlineValueContextDto): types.InlineValueContext {\n\t\treturn new types.InlineValueContext(inlineValueContext.frameId, Range.to(inlineValueContext.stoppedLocation));\n\t}\n}\n\nexport namespace DocumentHighlight {\n\texport function from(documentHighlight: vscode.DocumentHighlight): languages.DocumentHighlight {\n\t\treturn {\n\t\t\trange: Range.from(documentHighlight.range),\n\t\t\tkind: documentHighlight.kind\n\t\t};\n\t}\n\texport function to(occurrence: languages.DocumentHighlight): types.DocumentHighlight {\n\t\treturn new types.DocumentHighlight(Range.to(occurrence.range), occurrence.kind);\n\t}\n}\n\nexport namespace CompletionTriggerKind {\n\texport function to(kind: languages.CompletionTriggerKind) {\n\t\tswitch (kind) {\n\t\t\tcase languages.CompletionTriggerKind.TriggerCharacter:\n\t\t\t\treturn types.CompletionTriggerKind.TriggerCharacter;\n\t\t\tcase languages.CompletionTriggerKind.TriggerForIncompleteCompletions:\n\t\t\t\treturn types.CompletionTriggerKind.TriggerForIncompleteCompletions;\n\t\t\tcase languages.CompletionTriggerKind.Invoke:\n\t\t\tdefault:\n\t\t\t\treturn types.CompletionTriggerKind.Invoke;\n\t\t}\n\t}\n}\n\nexport namespace CompletionContext {\n\texport function to(context: languages.CompletionContext): types.CompletionContext {\n\t\treturn {\n\t\t\ttriggerKind: CompletionTriggerKind.to(context.triggerKind),\n\t\t\ttriggerCharacter: context.triggerCharacter\n\t\t};\n\t}\n}\n\nexport namespace CompletionItemTag {\n\n\texport function from(kind: types.CompletionItemTag): languages.CompletionItemTag {\n\t\tswitch (kind) {\n\t\t\tcase types.CompletionItemTag.Deprecated: return languages.CompletionItemTag.Deprecated;\n\t\t}\n\t}\n\n\texport function to(kind: languages.CompletionItemTag): types.CompletionItemTag {\n\t\tswitch (kind) {\n\t\t\tcase languages.CompletionItemTag.Deprecated: return types.CompletionItemTag.Deprecated;\n\t\t}\n\t}\n}\n\nexport namespace CompletionItemKind {\n\n\tconst _from = new Map<types.CompletionItemKind, languages.CompletionItemKind>([\n\t\t[types.CompletionItemKind.Method, languages.CompletionItemKind.Method],\n\t\t[types.CompletionItemKind.Function, languages.CompletionItemKind.Function],\n\t\t[types.CompletionItemKind.Constructor, languages.CompletionItemKind.Constructor],\n\t\t[types.CompletionItemKind.Field, languages.CompletionItemKind.Field],\n\t\t[types.CompletionItemKind.Variable, languages.CompletionItemKind.Variable],\n\t\t[types.CompletionItemKind.Class, languages.CompletionItemKind.Class],\n\t\t[types.CompletionItemKind.Interface, languages.CompletionItemKind.Interface],\n\t\t[types.CompletionItemKind.Struct, languages.CompletionItemKind.Struct],\n\t\t[types.CompletionItemKind.Module, languages.CompletionItemKind.Module],\n\t\t[types.CompletionItemKind.Property, languages.CompletionItemKind.Property],\n\t\t[types.CompletionItemKind.Unit, languages.CompletionItemKind.Unit],\n\t\t[types.CompletionItemKind.Value, languages.CompletionItemKind.Value],\n\t\t[types.CompletionItemKind.Constant, languages.CompletionItemKind.Constant],\n\t\t[types.CompletionItemKind.Enum, languages.CompletionItemKind.Enum],\n\t\t[types.CompletionItemKind.EnumMember, languages.CompletionItemKind.EnumMember],\n\t\t[types.CompletionItemKind.Keyword, languages.CompletionItemKind.Keyword],\n\t\t[types.CompletionItemKind.Snippet, languages.CompletionItemKind.Snippet],\n\t\t[types.CompletionItemKind.Text, languages.CompletionItemKind.Text],\n\t\t[types.CompletionItemKind.Color, languages.CompletionItemKind.Color],\n\t\t[types.CompletionItemKind.File, languages.CompletionItemKind.File],\n\t\t[types.CompletionItemKind.Reference, languages.CompletionItemKind.Reference],\n\t\t[types.CompletionItemKind.Folder, languages.CompletionItemKind.Folder],\n\t\t[types.CompletionItemKind.Event, languages.CompletionItemKind.Event],\n\t\t[types.CompletionItemKind.Operator, languages.CompletionItemKind.Operator],\n\t\t[types.CompletionItemKind.TypeParameter, languages.CompletionItemKind.TypeParameter],\n\t\t[types.CompletionItemKind.Issue, languages.CompletionItemKind.Issue],\n\t\t[types.CompletionItemKind.User, languages.CompletionItemKind.User],\n\t]);\n\n\texport function from(kind: types.CompletionItemKind): languages.CompletionItemKind {\n\t\treturn _from.get(kind) ?? languages.CompletionItemKind.Property;\n\t}\n\n\tconst _to = new Map<languages.CompletionItemKind, types.CompletionItemKind>([\n\t\t[languages.CompletionItemKind.Method, types.CompletionItemKind.Method],\n\t\t[languages.CompletionItemKind.Function, types.CompletionItemKind.Function],\n\t\t[languages.CompletionItemKind.Constructor, types.CompletionItemKind.Constructor],\n\t\t[languages.CompletionItemKind.Field, types.CompletionItemKind.Field],\n\t\t[languages.CompletionItemKind.Variable, types.CompletionItemKind.Variable],\n\t\t[languages.CompletionItemKind.Class, types.CompletionItemKind.Class],\n\t\t[languages.CompletionItemKind.Interface, types.CompletionItemKind.Interface],\n\t\t[languages.CompletionItemKind.Struct, types.CompletionItemKind.Struct],\n\t\t[languages.CompletionItemKind.Module, types.CompletionItemKind.Module],\n\t\t[languages.CompletionItemKind.Property, types.CompletionItemKind.Property],\n\t\t[languages.CompletionItemKind.Unit, types.CompletionItemKind.Unit],\n\t\t[languages.CompletionItemKind.Value, types.CompletionItemKind.Value],\n\t\t[languages.CompletionItemKind.Constant, types.CompletionItemKind.Constant],\n\t\t[languages.CompletionItemKind.Enum, types.CompletionItemKind.Enum],\n\t\t[languages.CompletionItemKind.EnumMember, types.CompletionItemKind.EnumMember],\n\t\t[languages.CompletionItemKind.Keyword, types.CompletionItemKind.Keyword],\n\t\t[languages.CompletionItemKind.Snippet, types.CompletionItemKind.Snippet],\n\t\t[languages.CompletionItemKind.Text, types.CompletionItemKind.Text],\n\t\t[languages.CompletionItemKind.Color, types.CompletionItemKind.Color],\n\t\t[languages.CompletionItemKind.File, types.CompletionItemKind.File],\n\t\t[languages.CompletionItemKind.Reference, types.CompletionItemKind.Reference],\n\t\t[languages.CompletionItemKind.Folder, types.CompletionItemKind.Folder],\n\t\t[languages.CompletionItemKind.Event, types.CompletionItemKind.Event],\n\t\t[languages.CompletionItemKind.Operator, types.CompletionItemKind.Operator],\n\t\t[languages.CompletionItemKind.TypeParameter, types.CompletionItemKind.TypeParameter],\n\t\t[languages.CompletionItemKind.User, types.CompletionItemKind.User],\n\t\t[languages.CompletionItemKind.Issue, types.CompletionItemKind.Issue],\n\t]);\n\n\texport function to(kind: languages.CompletionItemKind): types.CompletionItemKind {\n\t\treturn _to.get(kind) ?? types.CompletionItemKind.Property;\n\t}\n}\n\nexport namespace CompletionItem {\n\n\texport function to(suggestion: languages.CompletionItem, converter?: Command.ICommandsConverter): types.CompletionItem {\n\n\t\tconst result = new types.CompletionItem(suggestion.label);\n\t\tresult.insertText = suggestion.insertText;\n\t\tresult.kind = CompletionItemKind.to(suggestion.kind);\n\t\tresult.tags = suggestion.tags?.map(CompletionItemTag.to);\n\t\tresult.detail = suggestion.detail;\n\t\tresult.documentation = htmlContent.isMarkdownString(suggestion.documentation) ? MarkdownString.to(suggestion.documentation) : suggestion.documentation;\n\t\tresult.sortText = suggestion.sortText;\n\t\tresult.filterText = suggestion.filterText;\n\t\tresult.preselect = suggestion.preselect;\n\t\tresult.commitCharacters = suggestion.commitCharacters;\n\n\t\t// range\n\t\tif (editorRange.Range.isIRange(suggestion.range)) {\n\t\t\tresult.range = Range.to(suggestion.range);\n\t\t} else if (typeof suggestion.range === 'object') {\n\t\t\tresult.range = { inserting: Range.to(suggestion.range.insert), replacing: Range.to(suggestion.range.replace) };\n\t\t}\n\n\t\tresult.keepWhitespace = typeof suggestion.insertTextRules === 'undefined' ? false : Boolean(suggestion.insertTextRules & languages.CompletionItemInsertTextRule.KeepWhitespace);\n\t\t// 'insertText'-logic\n\t\tif (typeof suggestion.insertTextRules !== 'undefined' && suggestion.insertTextRules & languages.CompletionItemInsertTextRule.InsertAsSnippet) {\n\t\t\tresult.insertText = new types.SnippetString(suggestion.insertText);\n\t\t} else {\n\t\t\tresult.insertText = suggestion.insertText;\n\t\t\tresult.textEdit = result.range instanceof types.Range ? new types.TextEdit(result.range, result.insertText) : undefined;\n\t\t}\n\t\tif (suggestion.additionalTextEdits && suggestion.additionalTextEdits.length > 0) {\n\t\t\tresult.additionalTextEdits = suggestion.additionalTextEdits.map(e => TextEdit.to(e as languages.TextEdit));\n\t\t}\n\t\tresult.command = converter && suggestion.command ? converter.fromInternal(suggestion.command) : undefined;\n\n\t\treturn result;\n\t}\n}\n\nexport namespace ParameterInformation {\n\texport function from(info: types.ParameterInformation): languages.ParameterInformation {\n\t\treturn {\n\t\t\tlabel: info.label,\n\t\t\tdocumentation: MarkdownString.fromStrict(info.documentation)\n\t\t};\n\t}\n\texport function to(info: languages.ParameterInformation): types.ParameterInformation {\n\t\treturn {\n\t\t\tlabel: info.label,\n\t\t\tdocumentation: htmlContent.isMarkdownString(info.documentation) ? MarkdownString.to(info.documentation) : info.documentation\n\t\t};\n\t}\n}\n\nexport namespace SignatureInformation {\n\n\texport function from(info: types.SignatureInformation): languages.SignatureInformation {\n\t\treturn {\n\t\t\tlabel: info.label,\n\t\t\tdocumentation: MarkdownString.fromStrict(info.documentation),\n\t\t\tparameters: Array.isArray(info.parameters) ? info.parameters.map(ParameterInformation.from) : [],\n\t\t\tactiveParameter: info.activeParameter,\n\t\t};\n\t}\n\n\texport function to(info: languages.SignatureInformation): types.SignatureInformation {\n\t\treturn {\n\t\t\tlabel: info.label,\n\t\t\tdocumentation: htmlContent.isMarkdownString(info.documentation) ? MarkdownString.to(info.documentation) : info.documentation,\n\t\t\tparameters: Array.isArray(info.parameters) ? info.parameters.map(ParameterInformation.to) : [],\n\t\t\tactiveParameter: info.activeParameter,\n\t\t};\n\t}\n}\n\nexport namespace SignatureHelp {\n\n\texport function from(help: types.SignatureHelp): languages.SignatureHelp {\n\t\treturn {\n\t\t\tactiveSignature: help.activeSignature,\n\t\t\tactiveParameter: help.activeParameter,\n\t\t\tsignatures: Array.isArray(help.signatures) ? help.signatures.map(SignatureInformation.from) : [],\n\t\t};\n\t}\n\n\texport function to(help: languages.SignatureHelp): types.SignatureHelp {\n\t\treturn {\n\t\t\tactiveSignature: help.activeSignature,\n\t\t\tactiveParameter: help.activeParameter,\n\t\t\tsignatures: Array.isArray(help.signatures) ? help.signatures.map(SignatureInformation.to) : [],\n\t\t};\n\t}\n}\n\nexport namespace InlayHint {\n\n\texport function to(converter: Command.ICommandsConverter, hint: languages.InlayHint): vscode.InlayHint {\n\t\tconst res = new types.InlayHint(\n\t\t\tPosition.to(hint.position),\n\t\t\ttypeof hint.label === 'string' ? hint.label : hint.label.map(InlayHintLabelPart.to.bind(undefined, converter)),\n\t\t\thint.kind && InlayHintKind.to(hint.kind)\n\t\t);\n\t\tres.textEdits = hint.textEdits && hint.textEdits.map(TextEdit.to);\n\t\tres.tooltip = htmlContent.isMarkdownString(hint.tooltip) ? MarkdownString.to(hint.tooltip) : hint.tooltip;\n\t\tres.paddingLeft = hint.paddingLeft;\n\t\tres.paddingRight = hint.paddingRight;\n\t\treturn res;\n\t}\n}\n\nexport namespace InlayHintLabelPart {\n\n\texport function to(converter: Command.ICommandsConverter, part: languages.InlayHintLabelPart): types.InlayHintLabelPart {\n\t\tconst result = new types.InlayHintLabelPart(part.label);\n\t\tresult.tooltip = htmlContent.isMarkdownString(part.tooltip)\n\t\t\t? MarkdownString.to(part.tooltip)\n\t\t\t: part.tooltip;\n\t\tif (languages.Command.is(part.command)) {\n\t\t\tresult.command = converter.fromInternal(part.command);\n\t\t}\n\t\tif (part.location) {\n\t\t\tresult.location = location.to(part.location);\n\t\t}\n\t\treturn result;\n\t}\n}\n\nexport namespace InlayHintKind {\n\texport function from(kind: vscode.InlayHintKind): languages.InlayHintKind {\n\t\treturn kind;\n\t}\n\texport function to(kind: languages.InlayHintKind): vscode.InlayHintKind {\n\t\treturn kind;\n\t}\n}\n\nexport namespace DocumentLink {\n\n\texport function from(link: vscode.DocumentLink): languages.ILink {\n\t\treturn {\n\t\t\trange: Range.from(link.range),\n\t\t\turl: link.target,\n\t\t\ttooltip: link.tooltip\n\t\t};\n\t}\n\n\texport function to(link: languages.ILink): vscode.DocumentLink {\n\t\tlet target: URI | undefined = undefined;\n\t\tif (link.url) {\n\t\t\ttry {\n\t\t\t\ttarget = typeof link.url === 'string' ? URI.parse(link.url, true) : URI.revive(link.url);\n\t\t\t} catch (err) {\n\t\t\t\t// ignore\n\t\t\t}\n\t\t}\n\t\treturn new types.DocumentLink(Range.to(link.range), target);\n\t}\n}\n\nexport namespace ColorPresentation {\n\texport function to(colorPresentation: languages.IColorPresentation): types.ColorPresentation {\n\t\tconst cp = new types.ColorPresentation(colorPresentation.label);\n\t\tif (colorPresentation.textEdit) {\n\t\t\tcp.textEdit = TextEdit.to(colorPresentation.textEdit);\n\t\t}\n\t\tif (colorPresentation.additionalTextEdits) {\n\t\t\tcp.additionalTextEdits = colorPresentation.additionalTextEdits.map(value => TextEdit.to(value));\n\t\t}\n\t\treturn cp;\n\t}\n\n\texport function from(colorPresentation: vscode.ColorPresentation): languages.IColorPresentation {\n\t\treturn {\n\t\t\tlabel: colorPresentation.label,\n\t\t\ttextEdit: colorPresentation.textEdit ? TextEdit.from(colorPresentation.textEdit) : undefined,\n\t\t\tadditionalTextEdits: colorPresentation.additionalTextEdits ? colorPresentation.additionalTextEdits.map(value => TextEdit.from(value)) : undefined\n\t\t};\n\t}\n}\n\nexport namespace Color {\n\texport function to(c: [number, number, number, number]): types.Color {\n\t\treturn new types.Color(c[0], c[1], c[2], c[3]);\n\t}\n\texport function from(color: types.Color): [number, number, number, number] {\n\t\treturn [color.red, color.green, color.blue, color.alpha];\n\t}\n}\n\n\nexport namespace SelectionRange {\n\texport function from(obj: vscode.SelectionRange): languages.SelectionRange {\n\t\treturn { range: Range.from(obj.range) };\n\t}\n\n\texport function to(obj: languages.SelectionRange): vscode.SelectionRange {\n\t\treturn new types.SelectionRange(Range.to(obj.range));\n\t}\n}\n\nexport namespace TextDocumentSaveReason {\n\n\texport function to(reason: SaveReason): vscode.TextDocumentSaveReason {\n\t\tswitch (reason) {\n\t\t\tcase SaveReason.AUTO:\n\t\t\t\treturn types.TextDocumentSaveReason.AfterDelay;\n\t\t\tcase SaveReason.EXPLICIT:\n\t\t\t\treturn types.TextDocumentSaveReason.Manual;\n\t\t\tcase SaveReason.FOCUS_CHANGE:\n\t\t\tcase SaveReason.WINDOW_CHANGE:\n\t\t\t\treturn types.TextDocumentSaveReason.FocusOut;\n\t\t}\n\t}\n}\n\nexport namespace TextEditorLineNumbersStyle {\n\texport function from(style: vscode.TextEditorLineNumbersStyle): RenderLineNumbersType {\n\t\tswitch (style) {\n\t\t\tcase types.TextEditorLineNumbersStyle.Off:\n\t\t\t\treturn RenderLineNumbersType.Off;\n\t\t\tcase types.TextEditorLineNumbersStyle.Relative:\n\t\t\t\treturn RenderLineNumbersType.Relative;\n\t\t\tcase types.TextEditorLineNumbersStyle.On:\n\t\t\tdefault:\n\t\t\t\treturn RenderLineNumbersType.On;\n\t\t}\n\t}\n\texport function to(style: RenderLineNumbersType): vscode.TextEditorLineNumbersStyle {\n\t\tswitch (style) {\n\t\t\tcase RenderLineNumbersType.Off:\n\t\t\t\treturn types.TextEditorLineNumbersStyle.Off;\n\t\t\tcase RenderLineNumbersType.Relative:\n\t\t\t\treturn types.TextEditorLineNumbersStyle.Relative;\n\t\t\tcase RenderLineNumbersType.On:\n\t\t\tdefault:\n\t\t\t\treturn types.TextEditorLineNumbersStyle.On;\n\t\t}\n\t}\n}\n\nexport namespace EndOfLine {\n\n\texport function from(eol: vscode.EndOfLine): EndOfLineSequence | undefined {\n\t\tif (eol === types.EndOfLine.CRLF) {\n\t\t\treturn EndOfLineSequence.CRLF;\n\t\t} else if (eol === types.EndOfLine.LF) {\n\t\t\treturn EndOfLineSequence.LF;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\texport function to(eol: EndOfLineSequence): vscode.EndOfLine | undefined {\n\t\tif (eol === EndOfLineSequence.CRLF) {\n\t\t\treturn types.EndOfLine.CRLF;\n\t\t} else if (eol === EndOfLineSequence.LF) {\n\t\t\treturn types.EndOfLine.LF;\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\nexport namespace ProgressLocation {\n\texport function from(loc: vscode.ProgressLocation | { viewId: string }): MainProgressLocation | string {\n\t\tif (typeof loc === 'object') {\n\t\t\treturn loc.viewId;\n\t\t}\n\n\t\tswitch (loc) {\n\t\t\tcase types.ProgressLocation.SourceControl: return MainProgressLocation.Scm;\n\t\t\tcase types.ProgressLocation.Window: return MainProgressLocation.Window;\n\t\t\tcase types.ProgressLocation.Notification: return MainProgressLocation.Notification;\n\t\t}\n\t\tthrow new Error(`Unknown 'ProgressLocation'`);\n\t}\n}\n\nexport namespace FoldingRange {\n\texport function from(r: vscode.FoldingRange): languages.FoldingRange {\n\t\tconst range: languages.FoldingRange = { start: r.start + 1, end: r.end + 1 };\n\t\tif (r.kind) {\n\t\t\trange.kind = FoldingRangeKind.from(r.kind);\n\t\t}\n\t\treturn range;\n\t}\n}\n\nexport namespace FoldingRangeKind {\n\texport function from(kind: vscode.FoldingRangeKind | undefined): languages.FoldingRangeKind | undefined {\n\t\tif (kind) {\n\t\t\tswitch (kind) {\n\t\t\t\tcase types.FoldingRangeKind.Comment:\n\t\t\t\t\treturn languages.FoldingRangeKind.Comment;\n\t\t\t\tcase types.FoldingRangeKind.Imports:\n\t\t\t\t\treturn languages.FoldingRangeKind.Imports;\n\t\t\t\tcase types.FoldingRangeKind.Region:\n\t\t\t\t\treturn languages.FoldingRangeKind.Region;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\nexport interface TextEditorOpenOptions extends vscode.TextDocumentShowOptions {\n\tbackground?: boolean;\n\toverride?: boolean;\n}\n\nexport namespace TextEditorOpenOptions {\n\n\texport function from(options?: TextEditorOpenOptions): ITextEditorOptions | undefined {\n\t\tif (options) {\n\t\t\treturn {\n\t\t\t\tpinned: typeof options.preview === 'boolean' ? !options.preview : undefined,\n\t\t\t\tinactive: options.background,\n\t\t\t\tpreserveFocus: options.preserveFocus,\n\t\t\t\tselection: typeof options.selection === 'object' ? Range.from(options.selection) : undefined,\n\t\t\t\toverride: typeof options.override === 'boolean' ? EditorResolution.DISABLED : undefined\n\t\t\t};\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n}\n\nexport namespace GlobPattern {\n\n\texport function from(pattern: vscode.GlobPattern): string | extHostProtocol.IRelativePatternDto;\n\texport function from(pattern: undefined): undefined;\n\texport function from(pattern: null): null;\n\texport function from(pattern: vscode.GlobPattern | undefined | null): string | extHostProtocol.IRelativePatternDto | undefined | null;\n\texport function from(pattern: vscode.GlobPattern | undefined | null): string | extHostProtocol.IRelativePatternDto | undefined | null {\n\t\tif (pattern instanceof types.RelativePattern) {\n\t\t\treturn pattern.toJSON();\n\t\t}\n\n\t\tif (typeof pattern === 'string') {\n\t\t\treturn pattern;\n\t\t}\n\n\t\t// This is slightly bogus because we declare this method to accept\n\t\t// `vscode.GlobPattern` which can be `vscode.RelativePattern` class,\n\t\t// but given we cannot enforce classes from our vscode.d.ts, we have\n\t\t// to probe for objects too\n\t\t// Refs: https://github.com/microsoft/vscode/issues/140771\n\t\tif (isRelativePatternShape(pattern) || isLegacyRelativePatternShape(pattern)) {\n\t\t\treturn new types.RelativePattern(pattern.baseUri ?? pattern.base, pattern.pattern).toJSON();\n\t\t}\n\n\t\treturn pattern; // preserve `undefined` and `null`\n\t}\n\n\tfunction isRelativePatternShape(obj: unknown): obj is { base: string; baseUri: URI; pattern: string } {\n\t\tconst rp = obj as { base: string; baseUri: URI; pattern: string } | undefined | null;\n\t\tif (!rp) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn URI.isUri(rp.baseUri) && typeof rp.pattern === 'string';\n\t}\n\n\tfunction isLegacyRelativePatternShape(obj: unknown): obj is { base: string; pattern: string } {\n\n\t\t// Before 1.64.x, `RelativePattern` did not have any `baseUri: Uri`\n\t\t// property. To preserve backwards compatibility with older extensions\n\t\t// we allow this old format when creating the `vscode.RelativePattern`.\n\n\t\tconst rp = obj as { base: string; pattern: string } | undefined | null;\n\t\tif (!rp) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn typeof rp.base === 'string' && typeof rp.pattern === 'string';\n\t}\n\n\texport function to(pattern: string | extHostProtocol.IRelativePatternDto): vscode.GlobPattern {\n\t\tif (typeof pattern === 'string') {\n\t\t\treturn pattern;\n\t\t}\n\n\t\treturn new types.RelativePattern(URI.revive(pattern.baseUri), pattern.pattern);\n\t}\n}\n\nexport namespace LanguageSelector {\n\n\texport function from(selector: undefined): undefined;\n\texport function from(selector: vscode.DocumentSelector): languageSelector.LanguageSelector;\n\texport function from(selector: vscode.DocumentSelector | undefined): languageSelector.LanguageSelector | undefined;\n\texport function from(selector: vscode.DocumentSelector | undefined): languageSelector.LanguageSelector | undefined {\n\t\tif (!selector) {\n\t\t\treturn undefined;\n\t\t} else if (Array.isArray(selector)) {\n\t\t\treturn <languageSelector.LanguageSelector>selector.map(from);\n\t\t} else if (typeof selector === 'string') {\n\t\t\treturn selector;\n\t\t} else {\n\t\t\tconst filter = selector as vscode.DocumentFilter; // TODO: microsoft/TypeScript#42768\n\t\t\treturn <languageSelector.LanguageFilter>{\n\t\t\t\tlanguage: filter.language,\n\t\t\t\tscheme: filter.scheme,\n\t\t\t\tpattern: GlobPattern.from(filter.pattern),\n\t\t\t\texclusive: filter.exclusive,\n\t\t\t\tnotebookType: filter.notebookType\n\t\t\t};\n\t\t}\n\t}\n}\n\nexport namespace NotebookRange {\n\n\texport function from(range: vscode.NotebookRange): ICellRange {\n\t\treturn { start: range.start, end: range.end };\n\t}\n\n\texport function to(range: ICellRange): types.NotebookRange {\n\t\treturn new types.NotebookRange(range.start, range.end);\n\t}\n}\n\nexport namespace NotebookCellExecutionSummary {\n\texport function to(data: notebooks.NotebookCellInternalMetadata): vscode.NotebookCellExecutionSummary {\n\t\treturn {\n\t\t\ttiming: typeof data.runStartTime === 'number' && typeof data.runEndTime === 'number' ? { startTime: data.runStartTime, endTime: data.runEndTime } : undefined,\n\t\t\texecutionOrder: data.executionOrder,\n\t\t\tsuccess: data.lastRunSuccess\n\t\t};\n\t}\n\n\texport function from(data: vscode.NotebookCellExecutionSummary): Partial<notebooks.NotebookCellInternalMetadata> {\n\t\treturn {\n\t\t\tlastRunSuccess: data.success,\n\t\t\trunStartTime: data.timing?.startTime,\n\t\t\trunEndTime: data.timing?.endTime,\n\t\t\texecutionOrder: data.executionOrder\n\t\t};\n\t}\n}\n\nexport namespace NotebookCellExecutionState {\n\texport function to(state: notebooks.NotebookCellExecutionState): vscode.NotebookCellExecutionState {\n\t\tif (state === notebooks.NotebookCellExecutionState.Executing) {\n\t\t\treturn types.NotebookCellExecutionState.Executing;\n\t\t} else if (state === notebooks.NotebookCellExecutionState.Pending) {\n\t\t\treturn types.NotebookCellExecutionState.Pending;\n\t\t} else if (state === notebooks.NotebookCellExecutionState.Unconfirmed) {\n\t\t\treturn types.NotebookCellExecutionState.Pending;\n\t\t} else {\n\t\t\tthrow new Error(`Unknown state: ${state}`);\n\t\t}\n\t}\n}\n\nexport namespace NotebookCellKind {\n\texport function from(data: vscode.NotebookCellKind): notebooks.CellKind {\n\t\tswitch (data) {\n\t\t\tcase types.NotebookCellKind.Markup:\n\t\t\t\treturn notebooks.CellKind.Markup;\n\t\t\tcase types.NotebookCellKind.Code:\n\t\t\tdefault:\n\t\t\t\treturn notebooks.CellKind.Code;\n\t\t}\n\t}\n\n\texport function to(data: notebooks.CellKind): vscode.NotebookCellKind {\n\t\tswitch (data) {\n\t\t\tcase notebooks.CellKind.Markup:\n\t\t\t\treturn types.NotebookCellKind.Markup;\n\t\t\tcase notebooks.CellKind.Code:\n\t\t\tdefault:\n\t\t\t\treturn types.NotebookCellKind.Code;\n\t\t}\n\t}\n}\n\nexport namespace NotebookData {\n\n\texport function from(data: vscode.NotebookData): extHostProtocol.NotebookDataDto {\n\t\tconst res: extHostProtocol.NotebookDataDto = {\n\t\t\tmetadata: data.metadata ?? Object.create(null),\n\t\t\tcells: [],\n\t\t};\n\t\tfor (const cell of data.cells) {\n\t\t\ttypes.NotebookCellData.validate(cell);\n\t\t\tres.cells.push(NotebookCellData.from(cell));\n\t\t}\n\t\treturn res;\n\t}\n\n\texport function to(data: extHostProtocol.NotebookDataDto): vscode.NotebookData {\n\t\tconst res = new types.NotebookData(\n\t\t\tdata.cells.map(NotebookCellData.to),\n\t\t);\n\t\tif (!isEmptyObject(data.metadata)) {\n\t\t\tres.metadata = data.metadata;\n\t\t}\n\t\treturn res;\n\t}\n}\n\nexport namespace NotebookCellData {\n\n\texport function from(data: vscode.NotebookCellData): extHostProtocol.NotebookCellDataDto {\n\t\treturn {\n\t\t\tcellKind: NotebookCellKind.from(data.kind),\n\t\t\tlanguage: data.languageId,\n\t\t\tmime: data.mime,\n\t\t\tsource: data.value,\n\t\t\tmetadata: data.metadata,\n\t\t\tinternalMetadata: NotebookCellExecutionSummary.from(data.executionSummary ?? {}),\n\t\t\toutputs: data.outputs ? data.outputs.map(NotebookCellOutput.from) : []\n\t\t};\n\t}\n\n\texport function to(data: extHostProtocol.NotebookCellDataDto): vscode.NotebookCellData {\n\t\treturn new types.NotebookCellData(\n\t\t\tNotebookCellKind.to(data.cellKind),\n\t\t\tdata.source,\n\t\t\tdata.language,\n\t\t\tdata.mime,\n\t\t\tdata.outputs ? data.outputs.map(NotebookCellOutput.to) : undefined,\n\t\t\tdata.metadata,\n\t\t\tdata.internalMetadata ? NotebookCellExecutionSummary.to(data.internalMetadata) : undefined\n\t\t);\n\t}\n}\n\nexport namespace NotebookCellOutputItem {\n\texport function from(item: types.NotebookCellOutputItem): extHostProtocol.NotebookOutputItemDto {\n\t\treturn {\n\t\t\tmime: item.mime,\n\t\t\tvalueBytes: VSBuffer.wrap(item.data),\n\t\t};\n\t}\n\n\texport function to(item: extHostProtocol.NotebookOutputItemDto): types.NotebookCellOutputItem {\n\t\treturn new types.NotebookCellOutputItem(item.valueBytes.buffer, item.mime);\n\t}\n}\n\nexport namespace NotebookCellOutput {\n\texport function from(output: vscode.NotebookCellOutput): extHostProtocol.NotebookOutputDto {\n\t\treturn {\n\t\t\toutputId: output.id,\n\t\t\titems: output.items.map(NotebookCellOutputItem.from),\n\t\t\tmetadata: output.metadata\n\t\t};\n\t}\n\n\texport function to(output: extHostProtocol.NotebookOutputDto): vscode.NotebookCellOutput {\n\t\tconst items = output.items.map(NotebookCellOutputItem.to);\n\t\treturn new types.NotebookCellOutput(items, output.outputId, output.metadata);\n\t}\n}\n\n\nexport namespace NotebookExclusiveDocumentPattern {\n\texport function from(pattern: { include: vscode.GlobPattern | undefined; exclude: vscode.GlobPattern | undefined }): { include: string | extHostProtocol.IRelativePatternDto | undefined; exclude: string | extHostProtocol.IRelativePatternDto | undefined };\n\texport function from(pattern: vscode.GlobPattern): string | extHostProtocol.IRelativePatternDto;\n\texport function from(pattern: undefined): undefined;\n\texport function from(pattern: { include: vscode.GlobPattern | undefined | null; exclude: vscode.GlobPattern | undefined } | vscode.GlobPattern | undefined): string | extHostProtocol.IRelativePatternDto | { include: string | extHostProtocol.IRelativePatternDto | undefined; exclude: string | extHostProtocol.IRelativePatternDto | undefined } | undefined;\n\texport function from(pattern: { include: vscode.GlobPattern | undefined | null; exclude: vscode.GlobPattern | undefined } | vscode.GlobPattern | undefined): string | extHostProtocol.IRelativePatternDto | { include: string | extHostProtocol.IRelativePatternDto | undefined; exclude: string | extHostProtocol.IRelativePatternDto | undefined } | undefined {\n\t\tif (isExclusivePattern(pattern)) {\n\t\t\treturn {\n\t\t\t\tinclude: withNullAsUndefined(GlobPattern.from(pattern.include)),\n\t\t\t\texclude: withNullAsUndefined(GlobPattern.from(pattern.exclude))\n\t\t\t};\n\t\t}\n\n\t\treturn withNullAsUndefined(GlobPattern.from(pattern));\n\t}\n\n\texport function to(pattern: string | extHostProtocol.IRelativePatternDto | { include: string | extHostProtocol.IRelativePatternDto; exclude: string | extHostProtocol.IRelativePatternDto }): { include: vscode.GlobPattern; exclude: vscode.GlobPattern } | vscode.GlobPattern {\n\t\tif (isExclusivePattern(pattern)) {\n\t\t\treturn {\n\t\t\t\tinclude: GlobPattern.to(pattern.include),\n\t\t\t\texclude: GlobPattern.to(pattern.exclude)\n\t\t\t};\n\t\t}\n\n\t\treturn GlobPattern.to(pattern);\n\t}\n\n\tfunction isExclusivePattern<T>(obj: any): obj is { include?: T; exclude?: T } {\n\t\tconst ep = obj as { include?: T; exclude?: T } | undefined | null;\n\t\tif (!ep) {\n\t\t\treturn false;\n\t\t}\n\t\treturn !isUndefinedOrNull(ep.include) && !isUndefinedOrNull(ep.exclude);\n\t}\n}\n\nexport namespace NotebookStatusBarItem {\n\texport function from(item: vscode.NotebookCellStatusBarItem, commandsConverter: Command.ICommandsConverter, disposables: DisposableStore): notebooks.INotebookCellStatusBarItem {\n\t\tconst command = typeof item.command === 'string' ? { title: '', command: item.command } : item.command;\n\t\treturn {\n\t\t\talignment: item.alignment === types.NotebookCellStatusBarAlignment.Left ? notebooks.CellStatusbarAlignment.Left : notebooks.CellStatusbarAlignment.Right,\n\t\t\tcommand: commandsConverter.toInternal(command, disposables), // TODO@roblou\n\t\t\ttext: item.text,\n\t\t\ttooltip: item.tooltip,\n\t\t\taccessibilityInformation: item.accessibilityInformation,\n\t\t\tpriority: item.priority\n\t\t};\n\t}\n}\n\nexport namespace NotebookDocumentContentOptions {\n\texport function from(options: vscode.NotebookDocumentContentOptions | undefined): notebooks.TransientOptions {\n\t\treturn {\n\t\t\ttransientOutputs: options?.transientOutputs ?? false,\n\t\t\ttransientCellMetadata: options?.transientCellMetadata ?? {},\n\t\t\ttransientDocumentMetadata: options?.transientDocumentMetadata ?? {}\n\t\t};\n\t}\n}\n\nexport namespace NotebookRendererScript {\n\texport function from(preload: vscode.NotebookRendererScript): { uri: UriComponents; provides: string[] } {\n\t\treturn {\n\t\t\turi: preload.uri,\n\t\t\tprovides: preload.provides\n\t\t};\n\t}\n\texport function to(preload: { uri: UriComponents; provides: string[] }): vscode.NotebookRendererScript {\n\t\treturn new types.NotebookRendererScript(URI.revive(preload.uri), preload.provides);\n\t}\n}\n\nexport namespace TestMessage {\n\texport function from(message: vscode.TestMessage): ITestErrorMessage.Serialized {\n\t\treturn {\n\t\t\tmessage: MarkdownString.fromStrict(message.message) || '',\n\t\t\ttype: TestMessageType.Error,\n\t\t\texpected: message.expectedOutput,\n\t\t\tactual: message.actualOutput,\n\t\t\tlocation: message.location && ({ range: Range.from(message.location.range), uri: message.location.uri }),\n\t\t};\n\t}\n\n\texport function to(item: ITestErrorMessage.Serialized): vscode.TestMessage {\n\t\tconst message = new types.TestMessage(typeof item.message === 'string' ? item.message : MarkdownString.to(item.message));\n\t\tmessage.actualOutput = item.actual;\n\t\tmessage.expectedOutput = item.expected;\n\t\tmessage.location = item.location ? location.to(item.location) : undefined;\n\t\treturn message;\n\t}\n}\n\nexport namespace TestTag {\n\texport const namespace = namespaceTestTag;\n\n\texport const denamespace = denamespaceTestTag;\n}\n\nexport namespace TestItem {\n\texport type Raw = vscode.TestItem;\n\n\texport function from(item: vscode.TestItem): ITestItem {\n\t\tconst ctrlId = getPrivateApiFor(item).controllerId;\n\t\treturn {\n\t\t\textId: TestId.fromExtHostTestItem(item, ctrlId).toString(),\n\t\t\tlabel: item.label,\n\t\t\turi: URI.revive(item.uri),\n\t\t\tbusy: false,\n\t\t\ttags: item.tags.map(t => TestTag.namespace(ctrlId, t.id)),\n\t\t\trange: editorRange.Range.lift(Range.from(item.range)),\n\t\t\tdescription: item.description || null,\n\t\t\tsortText: item.sortText || null,\n\t\t\terror: item.error ? (MarkdownString.fromStrict(item.error) || null) : null,\n\t\t};\n\t}\n\n\texport function toPlain(item: ITestItem.Serialized): vscode.TestItem {\n\t\treturn {\n\t\t\tparent: undefined,\n\t\t\terror: undefined,\n\t\t\tid: TestId.fromString(item.extId).localId,\n\t\t\tlabel: item.label,\n\t\t\turi: URI.revive(item.uri),\n\t\t\ttags: (item.tags || []).map(t => {\n\t\t\t\tconst { tagId } = TestTag.denamespace(t);\n\t\t\t\treturn new types.TestTag(tagId);\n\t\t\t}),\n\t\t\tchildren: {\n\t\t\t\tadd: () => { },\n\t\t\t\tdelete: () => { },\n\t\t\t\tforEach: () => { },\n\t\t\t\t*[Symbol.iterator]() { },\n\t\t\t\tget: () => undefined,\n\t\t\t\treplace: () => { },\n\t\t\t\tsize: 0,\n\t\t\t},\n\t\t\trange: Range.to(item.range || undefined),\n\t\t\tcanResolveChildren: false,\n\t\t\tbusy: false,\n\t\t\tdescription: item.description || undefined,\n\t\t\tsortText: item.sortText || undefined,\n\t\t};\n\t}\n}\n\nexport namespace TestTag {\n\texport function from(tag: vscode.TestTag): ITestTag {\n\t\treturn { id: tag.id };\n\t}\n\n\texport function to(tag: ITestTag): vscode.TestTag {\n\t\treturn new types.TestTag(tag.id);\n\t}\n}\n\nexport namespace TestResults {\n\tconst convertTestResultItem = (item: TestResultItem.Serialized, byInternalId: Map<string, TestResultItem.Serialized>): vscode.TestResultSnapshot => {\n\t\tconst snapshot: vscode.TestResultSnapshot = ({\n\t\t\t...TestItem.toPlain(item.item),\n\t\t\tparent: undefined,\n\t\t\ttaskStates: item.tasks.map(t => ({\n\t\t\t\tstate: t.state as number as types.TestResultState,\n\t\t\t\tduration: t.duration,\n\t\t\t\tmessages: t.messages\n\t\t\t\t\t.filter((m): m is ITestErrorMessage.Serialized => m.type === TestMessageType.Error)\n\t\t\t\t\t.map(TestMessage.to),\n\t\t\t})),\n\t\t\tchildren: item.children\n\t\t\t\t.map(c => byInternalId.get(c))\n\t\t\t\t.filter(isDefined)\n\t\t\t\t.map(c => convertTestResultItem(c, byInternalId))\n\t\t});\n\n\t\tfor (const child of snapshot.children) {\n\t\t\t(child as any).parent = snapshot;\n\t\t}\n\n\t\treturn snapshot;\n\t};\n\n\texport function to(serialized: ISerializedTestResults): vscode.TestRunResult {\n\t\tconst roots: TestResultItem.Serialized[] = [];\n\t\tconst byInternalId = new Map<string, TestResultItem.Serialized>();\n\t\tfor (const item of serialized.items) {\n\t\t\tbyInternalId.set(item.item.extId, item);\n\t\t\tif (serialized.request.targets.some(t => t.controllerId === item.controllerId && t.testIds.includes(item.item.extId))) {\n\t\t\t\troots.push(item);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tcompletedAt: serialized.completedAt,\n\t\t\tresults: roots.map(r => convertTestResultItem(r, byInternalId)),\n\t\t};\n\t}\n}\n\nexport namespace TestCoverage {\n\tfunction fromCoveredCount(count: vscode.CoveredCount): ICoveredCount {\n\t\treturn { covered: count.covered, total: count.covered };\n\t}\n\n\tfunction fromLocation(location: vscode.Range | vscode.Position) {\n\t\treturn 'line' in location ? Position.from(location) : Range.from(location);\n\t}\n\n\texport function fromDetailed(coverage: vscode.DetailedCoverage): CoverageDetails {\n\t\tif ('branches' in coverage) {\n\t\t\treturn {\n\t\t\t\tcount: coverage.executionCount,\n\t\t\t\tlocation: fromLocation(coverage.location),\n\t\t\t\ttype: DetailType.Statement,\n\t\t\t\tbranches: coverage.branches.length\n\t\t\t\t\t? coverage.branches.map(b => ({ count: b.executionCount, location: b.location && fromLocation(b.location) }))\n\t\t\t\t\t: undefined,\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\ttype: DetailType.Function,\n\t\t\t\tcount: coverage.executionCount,\n\t\t\t\tlocation: fromLocation(coverage.location),\n\t\t\t};\n\t\t}\n\t}\n\n\texport function fromFile(coverage: vscode.FileCoverage): IFileCoverage {\n\t\treturn {\n\t\t\turi: coverage.uri,\n\t\t\tstatement: fromCoveredCount(coverage.statementCoverage),\n\t\t\tbranch: coverage.branchCoverage && fromCoveredCount(coverage.branchCoverage),\n\t\t\tfunction: coverage.functionCoverage && fromCoveredCount(coverage.functionCoverage),\n\t\t\tdetails: coverage.detailedCoverage?.map(fromDetailed),\n\t\t};\n\t}\n}\n\nexport namespace CodeActionTriggerKind {\n\n\texport function to(value: languages.CodeActionTriggerType): types.CodeActionTriggerKind {\n\t\tswitch (value) {\n\t\t\tcase languages.CodeActionTriggerType.Invoke:\n\t\t\t\treturn types.CodeActionTriggerKind.Invoke;\n\n\t\t\tcase languages.CodeActionTriggerType.Auto:\n\t\t\t\treturn types.CodeActionTriggerKind.Automatic;\n\t\t}\n\t}\n}\n\nexport namespace TypeHierarchyItem {\n\n\texport function to(item: extHostProtocol.ITypeHierarchyItemDto): types.TypeHierarchyItem {\n\t\tconst result = new types.TypeHierarchyItem(\n\t\t\tSymbolKind.to(item.kind),\n\t\t\titem.name,\n\t\t\titem.detail || '',\n\t\t\tURI.revive(item.uri),\n\t\t\tRange.to(item.range),\n\t\t\tRange.to(item.selectionRange)\n\t\t);\n\n\t\tresult._sessionId = item._sessionId;\n\t\tresult._itemId = item._itemId;\n\n\t\treturn result;\n\t}\n\n\texport function from(item: vscode.TypeHierarchyItem, sessionId?: string, itemId?: string): extHostProtocol.ITypeHierarchyItemDto {\n\n\t\tsessionId = sessionId ?? (<types.TypeHierarchyItem>item)._sessionId;\n\t\titemId = itemId ?? (<types.TypeHierarchyItem>item)._itemId;\n\n\t\tif (sessionId === undefined || itemId === undefined) {\n\t\t\tthrow new Error('invalid item');\n\t\t}\n\n\t\treturn {\n\t\t\t_sessionId: sessionId,\n\t\t\t_itemId: itemId,\n\t\t\tkind: SymbolKind.from(item.kind),\n\t\t\tname: item.name,\n\t\t\tdetail: item.detail ?? '',\n\t\t\turi: item.uri,\n\t\t\trange: Range.from(item.range),\n\t\t\tselectionRange: Range.from(item.selectionRange),\n\t\t\ttags: item.tags?.map(SymbolTag.from)\n\t\t};\n\t}\n}\n\nexport namespace ViewBadge {\n\texport function from(badge: vscode.ViewBadge | undefined): IViewBadge | undefined {\n\t\tif (!badge) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn {\n\t\t\tvalue: badge.value,\n\t\t\ttooltip: badge.tooltip\n\t\t};\n\t}\n}\n\nexport namespace DataTransferItem {\n\texport function toDataTransferItem(item: extHostProtocol.DataTransferItemDTO, resolveFileData: () => Promise<Uint8Array>): types.DataTransferItem {\n\t\tconst file = item.fileData;\n\t\tif (file) {\n\t\t\treturn new class extends types.DataTransferItem {\n\t\t\t\toverride asFile(): vscode.DataTransferFile {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: file.name,\n\t\t\t\t\t\turi: URI.revive(file.uri),\n\t\t\t\t\t\tdata: once(() => resolveFileData()),\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}('');\n\t\t} else {\n\t\t\treturn new types.DataTransferItem(item.asString);\n\t\t}\n\t}\n}\n\nexport namespace DataTransfer {\n\texport function toDataTransfer(value: extHostProtocol.DataTransferDTO, resolveFileData: (dataItemIndex: number) => Promise<Uint8Array>): types.DataTransfer {\n\t\tconst init = value.items.map(([type, item], index) => {\n\t\t\treturn [type, DataTransferItem.toDataTransferItem(item, () => resolveFileData(index))] as const;\n\t\t});\n\t\treturn new types.DataTransfer(init);\n\t}\n\n\texport async function toDataTransferDTO(value: vscode.DataTransfer | VSDataTransfer): Promise<extHostProtocol.DataTransferDTO> {\n\t\tconst newDTO: extHostProtocol.DataTransferDTO = { items: [] };\n\n\t\tconst promises: Promise<any>[] = [];\n\t\tvalue.forEach((value, key) => {\n\t\t\tpromises.push((async () => {\n\t\t\t\tconst stringValue = await value.asString();\n\t\t\t\tconst fileValue = value.asFile();\n\t\t\t\tnewDTO.items.push([key, {\n\t\t\t\t\tasString: stringValue,\n\t\t\t\t\tfileData: fileValue ? { name: fileValue.name, uri: fileValue.uri } : undefined,\n\t\t\t\t}]);\n\t\t\t})());\n\t\t});\n\n\t\tawait Promise.all(promises);\n\n\t\treturn newDTO;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as editorRange from 'vs/editor/common/core/range';\nimport { createPrivateApiFor, getPrivateApiFor, IExtHostTestItemApi } from 'vs/workbench/api/common/extHostTestingPrivateApi';\nimport { TestId, TestIdPathParts } from 'vs/workbench/contrib/testing/common/testId';\nimport { createTestItemChildren, ExtHostTestItemEvent, ITestChildrenLike, ITestItemApi, ITestItemChildren, TestItemCollection, TestItemEventOp } from 'vs/workbench/contrib/testing/common/testItemCollection';\nimport { denamespaceTestTag, ITestItem, ITestItemContext } from 'vs/workbench/contrib/testing/common/testTypes';\nimport type * as vscode from 'vscode';\nimport * as Convert from 'vs/workbench/api/common/extHostTypeConverters';\nimport { URI } from 'vs/base/common/uri';\n\nconst testItemPropAccessor = <K extends keyof vscode.TestItem>(\n\tapi: IExtHostTestItemApi,\n\tdefaultValue: vscode.TestItem[K],\n\tequals: (a: vscode.TestItem[K], b: vscode.TestItem[K]) => boolean,\n\ttoUpdate: (newValue: vscode.TestItem[K], oldValue: vscode.TestItem[K]) => ExtHostTestItemEvent,\n) => {\n\tlet value = defaultValue;\n\treturn {\n\t\tenumerable: true,\n\t\tconfigurable: false,\n\t\tget() {\n\t\t\treturn value;\n\t\t},\n\t\tset(newValue: vscode.TestItem[K]) {\n\t\t\tif (!equals(value, newValue)) {\n\t\t\t\tconst oldValue = value;\n\t\t\t\tvalue = newValue;\n\t\t\t\tapi.listener?.(toUpdate(newValue, oldValue));\n\t\t\t}\n\t\t},\n\t};\n};\n\ntype WritableProps = Pick<vscode.TestItem, 'range' | 'label' | 'description' | 'sortText' | 'canResolveChildren' | 'busy' | 'error' | 'tags'>;\n\nconst strictEqualComparator = <T>(a: T, b: T) => a === b;\n\nconst propComparators: { [K in keyof Required<WritableProps>]: (a: vscode.TestItem[K], b: vscode.TestItem[K]) => boolean } = {\n\trange: (a, b) => {\n\t\tif (a === b) { return true; }\n\t\tif (!a || !b) { return false; }\n\t\treturn a.isEqual(b);\n\t},\n\tlabel: strictEqualComparator,\n\tdescription: strictEqualComparator,\n\tsortText: strictEqualComparator,\n\tbusy: strictEqualComparator,\n\terror: strictEqualComparator,\n\tcanResolveChildren: strictEqualComparator,\n\ttags: (a, b) => {\n\t\tif (a.length !== b.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (a.some(t1 => !b.find(t2 => t1.id === t2.id))) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n};\n\nconst evSetProps = <T>(fn: (newValue: T) => Partial<ITestItem>): (newValue: T) => ExtHostTestItemEvent =>\n\tv => ({ op: TestItemEventOp.SetProp, update: fn(v) });\n\nconst makePropDescriptors = (api: IExtHostTestItemApi, label: string): { [K in keyof Required<WritableProps>]: PropertyDescriptor } => ({\n\trange: testItemPropAccessor<'range'>(api, undefined, propComparators.range, evSetProps(r => ({ range: editorRange.Range.lift(Convert.Range.from(r)) }))),\n\tlabel: testItemPropAccessor<'label'>(api, label, propComparators.label, evSetProps(label => ({ label }))),\n\tdescription: testItemPropAccessor<'description'>(api, undefined, propComparators.description, evSetProps(description => ({ description }))),\n\tsortText: testItemPropAccessor<'sortText'>(api, undefined, propComparators.sortText, evSetProps(sortText => ({ sortText }))),\n\tcanResolveChildren: testItemPropAccessor<'canResolveChildren'>(api, false, propComparators.canResolveChildren, state => ({\n\t\top: TestItemEventOp.UpdateCanResolveChildren,\n\t\tstate,\n\t})),\n\tbusy: testItemPropAccessor<'busy'>(api, false, propComparators.busy, evSetProps(busy => ({ busy }))),\n\terror: testItemPropAccessor<'error'>(api, undefined, propComparators.error, evSetProps(error => ({ error: Convert.MarkdownString.fromStrict(error) || null }))),\n\ttags: testItemPropAccessor<'tags'>(api, [], propComparators.tags, (current, previous) => ({\n\t\top: TestItemEventOp.SetTags,\n\t\tnew: current.map(Convert.TestTag.from),\n\t\told: previous.map(Convert.TestTag.from),\n\t})),\n});\n\nconst toItemFromPlain = (item: ITestItem.Serialized): TestItemImpl => {\n\tconst testId = TestId.fromString(item.extId);\n\tconst testItem = new TestItemImpl(testId.controllerId, testId.localId, item.label, URI.revive(item.uri) || undefined);\n\ttestItem.range = Convert.Range.to(item.range || undefined);\n\ttestItem.description = item.description || undefined;\n\ttestItem.sortText = item.sortText || undefined;\n\ttestItem.tags = item.tags.map(t => Convert.TestTag.to({ id: denamespaceTestTag(t).tagId }));\n\treturn testItem;\n};\n\nexport const toItemFromContext = (context: ITestItemContext): TestItemImpl => {\n\tlet node: TestItemImpl | undefined;\n\tfor (const test of context.tests) {\n\t\tconst next = toItemFromPlain(test.item);\n\t\tgetPrivateApiFor(next).parent = node;\n\t\tnode = next;\n\t}\n\n\treturn node!;\n};\n\nexport class TestItemImpl implements vscode.TestItem {\n\tpublic readonly id!: string;\n\tpublic readonly uri!: vscode.Uri | undefined;\n\tpublic readonly children!: ITestItemChildren<vscode.TestItem>;\n\tpublic readonly parent!: TestItemImpl | undefined;\n\n\tpublic range!: vscode.Range | undefined;\n\tpublic description!: string | undefined;\n\tpublic sortText!: string | undefined;\n\tpublic label!: string;\n\tpublic error!: string | vscode.MarkdownString;\n\tpublic busy!: boolean;\n\tpublic canResolveChildren!: boolean;\n\tpublic tags!: readonly vscode.TestTag[];\n\n\t/**\n\t * Note that data is deprecated and here for back-compat only\n\t */\n\tconstructor(controllerId: string, id: string, label: string, uri: vscode.Uri | undefined) {\n\t\tif (id.includes(TestIdPathParts.Delimiter)) {\n\t\t\tthrow new Error(`Test IDs may not include the ${JSON.stringify(id)} symbol`);\n\t\t}\n\n\t\tconst api = createPrivateApiFor(this, controllerId);\n\t\tObject.defineProperties(this, {\n\t\t\tid: {\n\t\t\t\tvalue: id,\n\t\t\t\tenumerable: true,\n\t\t\t\twritable: false,\n\t\t\t},\n\t\t\turi: {\n\t\t\t\tvalue: uri,\n\t\t\t\tenumerable: true,\n\t\t\t\twritable: false,\n\t\t\t},\n\t\t\tparent: {\n\t\t\t\tenumerable: false,\n\t\t\t\tget() {\n\t\t\t\t\treturn api.parent instanceof TestItemRootImpl ? undefined : api.parent;\n\t\t\t\t},\n\t\t\t},\n\t\t\tchildren: {\n\t\t\t\tvalue: createTestItemChildren(api, getPrivateApiFor, TestItemImpl),\n\t\t\t\tenumerable: true,\n\t\t\t\twritable: false,\n\t\t\t},\n\t\t\t...makePropDescriptors(api, label),\n\t\t});\n\t}\n}\n\nexport class TestItemRootImpl extends TestItemImpl {\n\tconstructor(controllerId: string, label: string) {\n\t\tsuper(controllerId, controllerId, label, undefined);\n\t}\n}\n\nexport class ExtHostTestItemCollection extends TestItemCollection<TestItemImpl> {\n\tconstructor(controllerId: string, controllerLabel: string) {\n\t\tsuper({\n\t\t\tcontrollerId,\n\t\t\tgetApiFor: getPrivateApiFor as (impl: TestItemImpl) => ITestItemApi<TestItemImpl>,\n\t\t\tgetChildren: (item) => item.children as ITestChildrenLike<TestItemImpl>,\n\t\t\troot: new TestItemRootImpl(controllerId, controllerLabel),\n\t\t\ttoITestItem: Convert.TestItem.from,\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { withNullAsUndefined } from 'vs/base/common/types';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IWorkbenchConfigurationService } from 'vs/workbench/services/configuration/common/configuration';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IRemoteAuthorityResolverService } from 'vs/platform/remote/common/remoteAuthorityResolver';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { serializeEnvironmentVariableCollection } from 'vs/workbench/contrib/terminal/common/environmentVariableShared';\nimport { IConfigurationResolverService } from 'vs/workbench/services/configurationResolver/common/configurationResolver';\nimport { SideBySideEditor, EditorResourceAccessor } from 'vs/workbench/common/editor';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { Schemas } from 'vs/base/common/network';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { IEnvironmentVariableService, ISerializableEnvironmentVariableCollection } from 'vs/workbench/contrib/terminal/common/environmentVariable';\nimport { IProcessDataEvent, IRequestResolveVariablesEvent, IShellLaunchConfigDto, ITerminalLaunchError, ITerminalProfile, ITerminalsLayoutInfo, ITerminalsLayoutInfoById, TerminalIcon, IProcessProperty, ProcessPropertyType, IProcessPropertyMap, TitleEventSource, ISerializedTerminalState, IPtyHostController, ITerminalProcessOptions } from 'vs/platform/terminal/common/terminal';\nimport { IGetTerminalLayoutInfoArgs, IProcessDetails, IPtyHostProcessReplayEvent, ISetTerminalLayoutInfoArgs } from 'vs/platform/terminal/common/terminalProcess';\nimport { IProcessEnvironment, OperatingSystem } from 'vs/base/common/platform';\nimport { ICompleteTerminalConfiguration } from 'vs/workbench/contrib/terminal/common/terminal';\n\nexport const REMOTE_TERMINAL_CHANNEL_NAME = 'remoteterminal';\n\nexport type ITerminalEnvironmentVariableCollections = [string, ISerializableEnvironmentVariableCollection][];\n\nexport interface IWorkspaceFolderData {\n\turi: UriComponents;\n\tname: string;\n\tindex: number;\n}\n\nexport interface ICreateTerminalProcessArguments {\n\tconfiguration: ICompleteTerminalConfiguration;\n\tresolvedVariables: { [name: string]: string };\n\tenvVariableCollections: ITerminalEnvironmentVariableCollections;\n\tshellLaunchConfig: IShellLaunchConfigDto;\n\tworkspaceId: string;\n\tworkspaceName: string;\n\tworkspaceFolders: IWorkspaceFolderData[];\n\tactiveWorkspaceFolder: IWorkspaceFolderData | null;\n\tactiveFileResource: UriComponents | undefined;\n\tshouldPersistTerminal: boolean;\n\toptions: ITerminalProcessOptions;\n\tcols: number;\n\trows: number;\n\tunicodeVersion: '6' | '11';\n\tresolverEnv: { [key: string]: string | null } | undefined;\n}\n\nexport interface ICreateTerminalProcessResult {\n\tpersistentTerminalId: number;\n\tresolvedShellLaunchConfig: IShellLaunchConfigDto;\n}\n\nexport class RemoteTerminalChannelClient implements IPtyHostController {\n\n\tget onPtyHostExit(): Event<number> {\n\t\treturn this._channel.listen<number>('$onPtyHostExitEvent');\n\t}\n\tget onPtyHostStart(): Event<void> {\n\t\treturn this._channel.listen<void>('$onPtyHostStartEvent');\n\t}\n\tget onPtyHostUnresponsive(): Event<void> {\n\t\treturn this._channel.listen<void>('$onPtyHostUnresponsiveEvent');\n\t}\n\tget onPtyHostResponsive(): Event<void> {\n\t\treturn this._channel.listen<void>('$onPtyHostResponsiveEvent');\n\t}\n\tget onPtyHostRequestResolveVariables(): Event<IRequestResolveVariablesEvent> {\n\t\treturn this._channel.listen<IRequestResolveVariablesEvent>('$onPtyHostRequestResolveVariablesEvent');\n\t}\n\tget onProcessData(): Event<{ id: number; event: IProcessDataEvent | string }> {\n\t\treturn this._channel.listen<{ id: number; event: IProcessDataEvent | string }>('$onProcessDataEvent');\n\t}\n\tget onProcessExit(): Event<{ id: number; event: number | undefined }> {\n\t\treturn this._channel.listen<{ id: number; event: number | undefined }>('$onProcessExitEvent');\n\t}\n\tget onProcessReady(): Event<{ id: number; event: { pid: number; cwd: string; requireWindowsMode?: boolean } }> {\n\t\treturn this._channel.listen<{ id: number; event: { pid: number; cwd: string; requiresWindowsMode?: boolean } }>('$onProcessReadyEvent');\n\t}\n\tget onProcessReplay(): Event<{ id: number; event: IPtyHostProcessReplayEvent }> {\n\t\treturn this._channel.listen<{ id: number; event: IPtyHostProcessReplayEvent }>('$onProcessReplayEvent');\n\t}\n\tget onProcessOrphanQuestion(): Event<{ id: number }> {\n\t\treturn this._channel.listen<{ id: number }>('$onProcessOrphanQuestion');\n\t}\n\tget onExecuteCommand(): Event<{ reqId: number; terminalId: number; commandId: string; commandArgs: any[] }> {\n\t\treturn this._channel.listen<{ reqId: number; terminalId: number; commandId: string; commandArgs: any[] }>('$onExecuteCommand');\n\t}\n\tget onDidRequestDetach(): Event<{ requestId: number; workspaceId: string; instanceId: number }> {\n\t\treturn this._channel.listen<{ requestId: number; workspaceId: string; instanceId: number }>('$onDidRequestDetach');\n\t}\n\tget onDidChangeProperty(): Event<{ id: number; property: IProcessProperty<any> }> {\n\t\treturn this._channel.listen<{ id: number; property: IProcessProperty<any> }>('$onDidChangeProperty');\n\t}\n\n\tconstructor(\n\t\tprivate readonly _remoteAuthority: string,\n\t\tprivate readonly _channel: IChannel,\n\t\t@IWorkbenchConfigurationService private readonly _configurationService: IWorkbenchConfigurationService,\n\t\t@IWorkspaceContextService private readonly _workspaceContextService: IWorkspaceContextService,\n\t\t@IConfigurationResolverService private readonly _resolverService: IConfigurationResolverService,\n\t\t@IEnvironmentVariableService private readonly _environmentVariableService: IEnvironmentVariableService,\n\t\t@IRemoteAuthorityResolverService private readonly _remoteAuthorityResolverService: IRemoteAuthorityResolverService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@ILabelService private readonly _labelService: ILabelService,\n\t) { }\n\n\trestartPtyHost(): Promise<void> {\n\t\treturn this._channel.call('$restartPtyHost', []);\n\t}\n\n\tasync createProcess(\n\t\tshellLaunchConfig: IShellLaunchConfigDto,\n\t\tconfiguration: ICompleteTerminalConfiguration,\n\t\tactiveWorkspaceRootUri: URI | undefined,\n\t\toptions: ITerminalProcessOptions,\n\t\tshouldPersistTerminal: boolean,\n\t\tcols: number,\n\t\trows: number,\n\t\tunicodeVersion: '6' | '11'\n\t): Promise<ICreateTerminalProcessResult> {\n\t\t// Be sure to first wait for the remote configuration\n\t\tawait this._configurationService.whenRemoteConfigurationLoaded();\n\n\t\t// We will use the resolver service to resolve all the variables in the config / launch config\n\t\t// But then we will keep only some variables, since the rest need to be resolved on the remote side\n\t\tconst resolvedVariables = Object.create(null);\n\t\tconst lastActiveWorkspace = activeWorkspaceRootUri ? withNullAsUndefined(this._workspaceContextService.getWorkspaceFolder(activeWorkspaceRootUri)) : undefined;\n\t\tlet allResolvedVariables: Map<string, string> | undefined = undefined;\n\t\ttry {\n\t\t\tallResolvedVariables = (await this._resolverService.resolveAnyMap(lastActiveWorkspace, {\n\t\t\t\tshellLaunchConfig,\n\t\t\t\tconfiguration\n\t\t\t})).resolvedVariables;\n\t\t} catch (err) {\n\t\t\tthis._logService.error(err);\n\t\t}\n\t\tif (allResolvedVariables) {\n\t\t\tfor (const [name, value] of allResolvedVariables.entries()) {\n\t\t\t\tif (/^config:/.test(name) || name === 'selectedText' || name === 'lineNumber') {\n\t\t\t\t\tresolvedVariables[name] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst envVariableCollections: ITerminalEnvironmentVariableCollections = [];\n\t\tfor (const [k, v] of this._environmentVariableService.collections.entries()) {\n\t\t\tenvVariableCollections.push([k, serializeEnvironmentVariableCollection(v.map)]);\n\t\t}\n\n\t\tconst resolverResult = await this._remoteAuthorityResolverService.resolveAuthority(this._remoteAuthority);\n\t\tconst resolverEnv = resolverResult.options && resolverResult.options.extensionHostEnv;\n\n\t\tconst workspace = this._workspaceContextService.getWorkspace();\n\t\tconst workspaceFolders = workspace.folders;\n\t\tconst activeWorkspaceFolder = activeWorkspaceRootUri ? this._workspaceContextService.getWorkspaceFolder(activeWorkspaceRootUri) : null;\n\n\t\tconst activeFileResource = EditorResourceAccessor.getOriginalUri(this._editorService.activeEditor, {\n\t\t\tsupportSideBySide: SideBySideEditor.PRIMARY,\n\t\t\tfilterByScheme: [Schemas.file, Schemas.vscodeUserData, Schemas.vscodeRemote]\n\t\t});\n\n\t\tconst args: ICreateTerminalProcessArguments = {\n\t\t\tconfiguration,\n\t\t\tresolvedVariables,\n\t\t\tenvVariableCollections,\n\t\t\tshellLaunchConfig,\n\t\t\tworkspaceId: workspace.id,\n\t\t\tworkspaceName: this._labelService.getWorkspaceLabel(workspace),\n\t\t\tworkspaceFolders,\n\t\t\tactiveWorkspaceFolder,\n\t\t\tactiveFileResource,\n\t\t\tshouldPersistTerminal,\n\t\t\toptions,\n\t\t\tcols,\n\t\t\trows,\n\t\t\tunicodeVersion,\n\t\t\tresolverEnv\n\t\t};\n\t\treturn await this._channel.call<ICreateTerminalProcessResult>('$createProcess', args);\n\t}\n\n\trequestDetachInstance(workspaceId: string, instanceId: number): Promise<IProcessDetails | undefined> {\n\t\treturn this._channel.call('$requestDetachInstance', [workspaceId, instanceId]);\n\t}\n\tacceptDetachInstanceReply(requestId: number, persistentProcessId: number): Promise<void> {\n\t\treturn this._channel.call('$acceptDetachInstanceReply', [requestId, persistentProcessId]);\n\t}\n\tattachToProcess(id: number): Promise<void> {\n\t\treturn this._channel.call('$attachToProcess', [id]);\n\t}\n\tdetachFromProcess(id: number): Promise<void> {\n\t\treturn this._channel.call('$detachFromProcess', [id]);\n\t}\n\tlistProcesses(): Promise<IProcessDetails[]> {\n\t\treturn this._channel.call('$listProcesses');\n\t}\n\treduceConnectionGraceTime(): Promise<void> {\n\t\treturn this._channel.call('$reduceConnectionGraceTime');\n\t}\n\tprocessBinary(id: number, data: string): Promise<void> {\n\t\treturn this._channel.call('$processBinary', [id, data]);\n\t}\n\tstart(id: number): Promise<ITerminalLaunchError | void> {\n\t\treturn this._channel.call('$start', [id]);\n\t}\n\tinput(id: number, data: string): Promise<void> {\n\t\treturn this._channel.call('$input', [id, data]);\n\t}\n\tacknowledgeDataEvent(id: number, charCount: number): Promise<void> {\n\t\treturn this._channel.call('$acknowledgeDataEvent', [id, charCount]);\n\t}\n\tsetUnicodeVersion(id: number, version: '6' | '11'): Promise<void> {\n\t\treturn this._channel.call('$setUnicodeVersion', [id, version]);\n\t}\n\tshutdown(id: number, immediate: boolean): Promise<void> {\n\t\treturn this._channel.call('$shutdown', [id, immediate]);\n\t}\n\tresize(id: number, cols: number, rows: number): Promise<void> {\n\t\treturn this._channel.call('$resize', [id, cols, rows]);\n\t}\n\tgetInitialCwd(id: number): Promise<string> {\n\t\treturn this._channel.call('$getInitialCwd', [id]);\n\t}\n\tgetCwd(id: number): Promise<string> {\n\t\treturn this._channel.call('$getCwd', [id]);\n\t}\n\torphanQuestionReply(id: number): Promise<void> {\n\t\treturn this._channel.call('$orphanQuestionReply', [id]);\n\t}\n\tsendCommandResult(reqId: number, isError: boolean, payload: any): Promise<void> {\n\t\treturn this._channel.call('$sendCommandResult', [reqId, isError, payload]);\n\t}\n\n\tinstallAutoReply(match: string, reply: string): Promise<void> {\n\t\treturn this._channel.call('$installAutoReply', [match, reply]);\n\t}\n\tuninstallAllAutoReplies(): Promise<void> {\n\t\treturn this._channel.call('$uninstallAllAutoReplies', []);\n\t}\n\tgetDefaultSystemShell(osOverride?: OperatingSystem): Promise<string> {\n\t\treturn this._channel.call('$getDefaultSystemShell', [osOverride]);\n\t}\n\tgetProfiles(profiles: unknown, defaultProfile: unknown, includeDetectedProfiles?: boolean): Promise<ITerminalProfile[]> {\n\t\treturn this._channel.call('$getProfiles', [this._workspaceContextService.getWorkspace().id, profiles, defaultProfile, includeDetectedProfiles]);\n\t}\n\tacceptPtyHostResolvedVariables(requestId: number, resolved: string[]): Promise<void> {\n\t\treturn this._channel.call('$acceptPtyHostResolvedVariables', [requestId, resolved]);\n\t}\n\n\tgetEnvironment(): Promise<IProcessEnvironment> {\n\t\treturn this._channel.call('$getEnvironment');\n\t}\n\n\tgetWslPath(original: string): Promise<string> {\n\t\treturn this._channel.call('$getWslPath', [original]);\n\t}\n\n\tsetTerminalLayoutInfo(layout?: ITerminalsLayoutInfoById): Promise<void> {\n\t\tconst workspace = this._workspaceContextService.getWorkspace();\n\t\tconst args: ISetTerminalLayoutInfoArgs = {\n\t\t\tworkspaceId: workspace.id,\n\t\t\ttabs: layout ? layout.tabs : []\n\t\t};\n\t\treturn this._channel.call<void>('$setTerminalLayoutInfo', args);\n\t}\n\n\tupdateTitle(id: number, title: string, titleSource: TitleEventSource): Promise<string> {\n\t\treturn this._channel.call('$updateTitle', [id, title, titleSource]);\n\t}\n\n\tupdateIcon(id: number, icon: TerminalIcon, color?: string): Promise<string> {\n\t\treturn this._channel.call('$updateIcon', [id, icon, color]);\n\t}\n\n\trefreshProperty<T extends ProcessPropertyType>(id: number, property: T): Promise<IProcessPropertyMap[T]> {\n\t\treturn this._channel.call('$refreshProperty', [id, property]);\n\t}\n\n\tupdateProperty<T extends ProcessPropertyType>(id: number, property: T, value: IProcessPropertyMap[T]): Promise<void> {\n\t\treturn this._channel.call('$updateProperty', [id, property, value]);\n\t}\n\n\tgetTerminalLayoutInfo(): Promise<ITerminalsLayoutInfo | undefined> {\n\t\tconst workspace = this._workspaceContextService.getWorkspace();\n\t\tconst args: IGetTerminalLayoutInfoArgs = {\n\t\t\tworkspaceId: workspace.id,\n\t\t};\n\t\treturn this._channel.call<ITerminalsLayoutInfo>('$getTerminalLayoutInfo', args);\n\t}\n\n\treviveTerminalProcesses(state: ISerializedTerminalState[], dateTimeFormatLocate: string): Promise<void> {\n\t\treturn this._channel.call('$reviveTerminalProcesses', [state, dateTimeFormatLocate]);\n\t}\n\n\tgetRevivedPtyNewId(id: number): Promise<number | undefined> {\n\t\treturn this._channel.call('$getRevivedPtyNewId', [id]);\n\t}\n\n\tserializeTerminalState(ids: number[]): Promise<string> {\n\t\treturn this._channel.call('$serializeTerminalState', [ids]);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IProcessEnvironment } from 'vs/base/common/platform';\n\nexport const enum ExtHostConnectionType {\n\tIPC = 1,\n\tSocket = 2,\n\tMessagePort = 3\n}\n\n/**\n * The extension host will connect via named pipe / domain socket to its renderer.\n */\nexport class IPCExtHostConnection {\n\tpublic static ENV_KEY = 'VSCODE_EXTHOST_IPC_HOOK';\n\n\tpublic readonly type = ExtHostConnectionType.IPC;\n\n\tconstructor(\n\t\tpublic readonly pipeName: string\n\t) { }\n\n\tpublic serialize(env: IProcessEnvironment): void {\n\t\tenv[IPCExtHostConnection.ENV_KEY] = this.pipeName;\n\t}\n}\n\n/**\n * The extension host will receive via nodejs IPC the socket to its renderer.\n */\nexport class SocketExtHostConnection {\n\tpublic static ENV_KEY = 'VSCODE_EXTHOST_WILL_SEND_SOCKET';\n\n\tpublic readonly type = ExtHostConnectionType.Socket;\n\n\tpublic serialize(env: IProcessEnvironment): void {\n\t\tenv[SocketExtHostConnection.ENV_KEY] = '1';\n\t}\n}\n\n/**\n * The extension host will receive via nodejs IPC the MessagePort to its renderer.\n */\nexport class MessagePortExtHostConnection {\n\tpublic static ENV_KEY = 'VSCODE_WILL_SEND_MESSAGE_PORT';\n\n\tpublic readonly type = ExtHostConnectionType.MessagePort;\n\n\tpublic serialize(env: IProcessEnvironment): void {\n\t\tenv[MessagePortExtHostConnection.ENV_KEY] = '1';\n\t}\n}\n\nexport type ExtHostConnection = IPCExtHostConnection | SocketExtHostConnection | MessagePortExtHostConnection;\n\nfunction clean(env: IProcessEnvironment): void {\n\tdelete env[IPCExtHostConnection.ENV_KEY];\n\tdelete env[SocketExtHostConnection.ENV_KEY];\n\tdelete env[MessagePortExtHostConnection.ENV_KEY];\n}\n\n/**\n * Write `connection` into `env` and clean up `env`.\n */\nexport function writeExtHostConnection(connection: ExtHostConnection, env: IProcessEnvironment): void {\n\t// Avoid having two different keys that might introduce amiguity or problems.\n\tclean(env);\n\tconnection.serialize(env);\n}\n\n/**\n * Read `connection` from `env` and clean up `env`.\n */\nexport function readExtHostConnection(env: IProcessEnvironment): ExtHostConnection {\n\tif (env[IPCExtHostConnection.ENV_KEY]) {\n\t\treturn cleanAndReturn(env, new IPCExtHostConnection(env[IPCExtHostConnection.ENV_KEY]!));\n\t}\n\tif (env[SocketExtHostConnection.ENV_KEY]) {\n\t\treturn cleanAndReturn(env, new SocketExtHostConnection());\n\t}\n\tif (env[MessagePortExtHostConnection.ENV_KEY]) {\n\t\treturn cleanAndReturn(env, new MessagePortExtHostConnection());\n\t}\n\tthrow new Error(`No connection information defined in environment!`);\n}\n\nfunction cleanAndReturn(env: IProcessEnvironment, result: ExtHostConnection): ExtHostConnection {\n\tclean(env);\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as cp from 'child_process';\nimport * as net from 'net';\nimport { getNLSConfiguration } from 'vs/server/node/remoteLanguagePacks';\nimport { FileAccess } from 'vs/base/common/network';\nimport { join, delimiter } from 'vs/base/common/path';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { createRandomIPCHandle, NodeSocket, WebSocketNodeSocket } from 'vs/base/parts/ipc/node/ipc.net';\nimport { getResolvedShellEnv } from 'vs/platform/shell/node/shellEnv';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IRemoteExtensionHostStartParams } from 'vs/platform/remote/common/remoteAgentConnection';\nimport { IExtHostReadyMessage, IExtHostSocketMessage, IExtHostReduceGraceTimeMessage } from 'vs/workbench/services/extensions/common/extensionHostProtocol';\nimport { IServerEnvironmentService } from 'vs/server/node/serverEnvironmentService';\nimport { IProcessEnvironment, isWindows } from 'vs/base/common/platform';\nimport { removeDangerousEnvVariables } from 'vs/base/common/processes';\nimport { IExtensionHostStatusService } from 'vs/server/node/extensionHostStatusService';\nimport { DisposableStore, toDisposable } from 'vs/base/common/lifecycle';\nimport { IPCExtHostConnection, writeExtHostConnection, SocketExtHostConnection } from 'vs/workbench/services/extensions/common/extensionHostEnv';\n\nexport async function buildUserEnvironment(startParamsEnv: { [key: string]: string | null } = {}, withUserShellEnvironment: boolean, language: string, environmentService: IServerEnvironmentService, logService: ILogService): Promise<IProcessEnvironment> {\n\tconst nlsConfig = await getNLSConfiguration(language, environmentService.userDataPath);\n\n\tlet userShellEnv: typeof process.env = {};\n\tif (withUserShellEnvironment) {\n\t\ttry {\n\t\t\tuserShellEnv = await getResolvedShellEnv(logService, environmentService.args, process.env);\n\t\t} catch (error) {\n\t\t\tlogService.error('ExtensionHostConnection#buildUserEnvironment resolving shell environment failed', error);\n\t\t}\n\t}\n\n\tconst processEnv = process.env;\n\n\tconst env: IProcessEnvironment = {\n\t\t...processEnv,\n\t\t...userShellEnv,\n\t\t...{\n\t\t\tVSCODE_AMD_ENTRYPOINT: 'vs/workbench/api/node/extensionHostProcess',\n\t\t\tVSCODE_HANDLES_UNCAUGHT_ERRORS: 'true',\n\t\t\tVSCODE_NLS_CONFIG: JSON.stringify(nlsConfig, undefined, 0)\n\t\t},\n\t\t...startParamsEnv\n\t};\n\n\tconst binFolder = environmentService.isBuilt ? join(environmentService.appRoot, 'bin') : join(environmentService.appRoot, 'resources', 'server', 'bin-dev');\n\tconst remoteCliBinFolder = join(binFolder, 'remote-cli'); // contains the `code` command that can talk to the remote server\n\n\tlet PATH = readCaseInsensitive(env, 'PATH');\n\tif (PATH) {\n\t\tPATH = remoteCliBinFolder + delimiter + PATH;\n\t} else {\n\t\tPATH = remoteCliBinFolder;\n\t}\n\tsetCaseInsensitive(env, 'PATH', PATH);\n\n\tif (!environmentService.args['without-browser-env-var']) {\n\t\tenv.BROWSER = join(binFolder, 'helpers', isWindows ? 'browser.cmd' : 'browser.sh'); // a command that opens a browser on the local machine\n\t}\n\n\tremoveNulls(env);\n\treturn env;\n}\n\nclass ConnectionData {\n\tconstructor(\n\t\tpublic readonly socket: NodeSocket | WebSocketNodeSocket,\n\t\tpublic readonly initialDataChunk: VSBuffer\n\t) { }\n\n\tpublic socketDrain(): Promise<void> {\n\t\treturn this.socket.drain();\n\t}\n\n\tpublic toIExtHostSocketMessage(): IExtHostSocketMessage {\n\n\t\tlet skipWebSocketFrames: boolean;\n\t\tlet permessageDeflate: boolean;\n\t\tlet inflateBytes: VSBuffer;\n\n\t\tif (this.socket instanceof NodeSocket) {\n\t\t\tskipWebSocketFrames = true;\n\t\t\tpermessageDeflate = false;\n\t\t\tinflateBytes = VSBuffer.alloc(0);\n\t\t} else {\n\t\t\tskipWebSocketFrames = false;\n\t\t\tpermessageDeflate = this.socket.permessageDeflate;\n\t\t\tinflateBytes = this.socket.recordedInflateBytes;\n\t\t}\n\n\t\treturn {\n\t\t\ttype: 'VSCODE_EXTHOST_IPC_SOCKET',\n\t\t\tinitialDataChunk: (<Buffer>this.initialDataChunk.buffer).toString('base64'),\n\t\t\tskipWebSocketFrames: skipWebSocketFrames,\n\t\t\tpermessageDeflate: permessageDeflate,\n\t\t\tinflateBytes: (<Buffer>inflateBytes.buffer).toString('base64'),\n\t\t};\n\t}\n}\n\nexport class ExtensionHostConnection {\n\n\tprivate _onClose = new Emitter<void>();\n\treadonly onClose: Event<void> = this._onClose.event;\n\n\tprivate readonly _canSendSocket: boolean;\n\tprivate _disposed: boolean;\n\tprivate _remoteAddress: string;\n\tprivate _extensionHostProcess: cp.ChildProcess | null;\n\tprivate _connectionData: ConnectionData | null;\n\n\tconstructor(\n\t\tprivate readonly _reconnectionToken: string,\n\t\tremoteAddress: string,\n\t\tsocket: NodeSocket | WebSocketNodeSocket,\n\t\tinitialDataChunk: VSBuffer,\n\t\t@IServerEnvironmentService private readonly _environmentService: IServerEnvironmentService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@IExtensionHostStatusService private readonly _extensionHostStatusService: IExtensionHostStatusService,\n\t) {\n\t\tthis._canSendSocket = (!isWindows || !this._environmentService.args['socket-path']);\n\t\tthis._disposed = false;\n\t\tthis._remoteAddress = remoteAddress;\n\t\tthis._extensionHostProcess = null;\n\t\tthis._connectionData = new ConnectionData(socket, initialDataChunk);\n\n\t\tthis._log(`New connection established.`);\n\t}\n\n\tprivate get _logPrefix(): string {\n\t\treturn `[${this._remoteAddress}][${this._reconnectionToken.substr(0, 8)}][ExtensionHostConnection] `;\n\t}\n\n\tprivate _log(_str: string): void {\n\t\tthis._logService.info(`${this._logPrefix}${_str}`);\n\t}\n\n\tprivate _logError(_str: string): void {\n\t\tthis._logService.error(`${this._logPrefix}${_str}`);\n\t}\n\n\tprivate async _pipeSockets(extHostSocket: net.Socket, connectionData: ConnectionData): Promise<void> {\n\n\t\tconst disposables = new DisposableStore();\n\t\tdisposables.add(connectionData.socket);\n\t\tdisposables.add(toDisposable(() => {\n\t\t\textHostSocket.destroy();\n\t\t}));\n\n\t\tconst stopAndCleanup = () => {\n\t\t\tdisposables.dispose();\n\t\t};\n\n\t\tdisposables.add(connectionData.socket.onEnd(stopAndCleanup));\n\t\tdisposables.add(connectionData.socket.onClose(stopAndCleanup));\n\n\t\tdisposables.add(Event.fromNodeEventEmitter<void>(extHostSocket, 'end')(stopAndCleanup));\n\t\tdisposables.add(Event.fromNodeEventEmitter<void>(extHostSocket, 'close')(stopAndCleanup));\n\t\tdisposables.add(Event.fromNodeEventEmitter<void>(extHostSocket, 'error')(stopAndCleanup));\n\n\t\tdisposables.add(connectionData.socket.onData((e) => extHostSocket.write(e.buffer)));\n\t\tdisposables.add(Event.fromNodeEventEmitter<Buffer>(extHostSocket, 'data')((e) => {\n\t\t\tconnectionData.socket.write(VSBuffer.wrap(e));\n\t\t}));\n\n\t\tif (connectionData.initialDataChunk.byteLength > 0) {\n\t\t\textHostSocket.write(connectionData.initialDataChunk.buffer);\n\t\t}\n\t}\n\n\tprivate async _sendSocketToExtensionHost(extensionHostProcess: cp.ChildProcess, connectionData: ConnectionData): Promise<void> {\n\t\t// Make sure all outstanding writes have been drained before sending the socket\n\t\tawait connectionData.socketDrain();\n\t\tconst msg = connectionData.toIExtHostSocketMessage();\n\t\tlet socket: net.Socket;\n\t\tif (connectionData.socket instanceof NodeSocket) {\n\t\t\tsocket = connectionData.socket.socket;\n\t\t} else {\n\t\t\tsocket = connectionData.socket.socket.socket;\n\t\t}\n\t\textensionHostProcess.send(msg, socket);\n\t}\n\n\tpublic shortenReconnectionGraceTimeIfNecessary(): void {\n\t\tif (!this._extensionHostProcess) {\n\t\t\treturn;\n\t\t}\n\t\tconst msg: IExtHostReduceGraceTimeMessage = {\n\t\t\ttype: 'VSCODE_EXTHOST_IPC_REDUCE_GRACE_TIME'\n\t\t};\n\t\tthis._extensionHostProcess.send(msg);\n\t}\n\n\tpublic acceptReconnection(remoteAddress: string, _socket: NodeSocket | WebSocketNodeSocket, initialDataChunk: VSBuffer): void {\n\t\tthis._remoteAddress = remoteAddress;\n\t\tthis._log(`The client has reconnected.`);\n\t\tconst connectionData = new ConnectionData(_socket, initialDataChunk);\n\n\t\tif (!this._extensionHostProcess) {\n\t\t\t// The extension host didn't even start up yet\n\t\t\tthis._connectionData = connectionData;\n\t\t\treturn;\n\t\t}\n\n\t\tthis._sendSocketToExtensionHost(this._extensionHostProcess, connectionData);\n\t}\n\n\tprivate _cleanResources(): void {\n\t\tif (this._disposed) {\n\t\t\t// already called\n\t\t\treturn;\n\t\t}\n\t\tthis._disposed = true;\n\t\tif (this._connectionData) {\n\t\t\tthis._connectionData.socket.end();\n\t\t\tthis._connectionData = null;\n\t\t}\n\t\tif (this._extensionHostProcess) {\n\t\t\tthis._extensionHostProcess.kill();\n\t\t\tthis._extensionHostProcess = null;\n\t\t}\n\t\tthis._onClose.fire(undefined);\n\t}\n\n\tpublic async start(startParams: IRemoteExtensionHostStartParams): Promise<void> {\n\t\ttry {\n\t\t\tlet execArgv: string[] = [];\n\t\t\tif (startParams.port && !(<any>process).pkg) {\n\t\t\t\texecArgv = [`--inspect${startParams.break ? '-brk' : ''}=${startParams.port}`];\n\t\t\t}\n\n\t\t\tconst env = await buildUserEnvironment(startParams.env, true, startParams.language, this._environmentService, this._logService);\n\t\t\tremoveDangerousEnvVariables(env);\n\n\t\t\tlet extHostNamedPipeServer: net.Server | null;\n\n\t\t\tif (this._canSendSocket) {\n\t\t\t\twriteExtHostConnection(new SocketExtHostConnection(), env);\n\t\t\t\textHostNamedPipeServer = null;\n\t\t\t} else {\n\t\t\t\tconst { namedPipeServer, pipeName } = await this._listenOnPipe();\n\t\t\t\twriteExtHostConnection(new IPCExtHostConnection(pipeName), env);\n\t\t\t\textHostNamedPipeServer = namedPipeServer;\n\t\t\t}\n\n\t\t\tconst opts = {\n\t\t\t\tenv,\n\t\t\t\texecArgv,\n\t\t\t\tsilent: true\n\t\t\t};\n\n\t\t\t// Run Extension Host as fork of current process\n\t\t\tconst args = ['--type=extensionHost', `--transformURIs`];\n\t\t\tconst useHostProxy = this._environmentService.args['use-host-proxy'];\n\t\t\targs.push(`--useHostProxy=${useHostProxy ? 'true' : 'false'}`);\n\t\t\tthis._extensionHostProcess = cp.fork(FileAccess.asFileUri('bootstrap-fork', require).fsPath, args, opts);\n\t\t\tconst pid = this._extensionHostProcess.pid;\n\t\t\tthis._log(`<${pid}> Launched Extension Host Process.`);\n\n\t\t\t// Catch all output coming from the extension host process\n\t\t\tthis._extensionHostProcess.stdout!.setEncoding('utf8');\n\t\t\tthis._extensionHostProcess.stderr!.setEncoding('utf8');\n\t\t\tconst onStdout = Event.fromNodeEventEmitter<string>(this._extensionHostProcess.stdout!, 'data');\n\t\t\tconst onStderr = Event.fromNodeEventEmitter<string>(this._extensionHostProcess.stderr!, 'data');\n\t\t\tonStdout((e) => this._log(`<${pid}> ${e}`));\n\t\t\tonStderr((e) => this._log(`<${pid}><stderr> ${e}`));\n\n\t\t\t// Lifecycle\n\t\t\tthis._extensionHostProcess.on('error', (err) => {\n\t\t\t\tthis._logError(`<${pid}> Extension Host Process had an error`);\n\t\t\t\tthis._logService.error(err);\n\t\t\t\tthis._cleanResources();\n\t\t\t});\n\n\t\t\tthis._extensionHostProcess.on('exit', (code: number, signal: string) => {\n\t\t\t\tthis._extensionHostStatusService.setExitInfo(this._reconnectionToken, { code, signal });\n\t\t\t\tthis._log(`<${pid}> Extension Host Process exited with code: ${code}, signal: ${signal}.`);\n\t\t\t\tthis._cleanResources();\n\t\t\t});\n\n\t\t\tif (extHostNamedPipeServer) {\n\t\t\t\textHostNamedPipeServer.on('connection', (socket) => {\n\t\t\t\t\textHostNamedPipeServer!.close();\n\t\t\t\t\tthis._pipeSockets(socket, this._connectionData!);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconst messageListener = (msg: IExtHostReadyMessage) => {\n\t\t\t\t\tif (msg.type === 'VSCODE_EXTHOST_IPC_READY') {\n\t\t\t\t\t\tthis._extensionHostProcess!.removeListener('message', messageListener);\n\t\t\t\t\t\tthis._sendSocketToExtensionHost(this._extensionHostProcess!, this._connectionData!);\n\t\t\t\t\t\tthis._connectionData = null;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tthis._extensionHostProcess.on('message', messageListener);\n\t\t\t}\n\n\t\t} catch (error) {\n\t\t\tconsole.error('ExtensionHostConnection errored');\n\t\t\tif (error) {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _listenOnPipe(): Promise<{ pipeName: string; namedPipeServer: net.Server }> {\n\t\treturn new Promise<{ pipeName: string; namedPipeServer: net.Server }>((resolve, reject) => {\n\t\t\tconst pipeName = createRandomIPCHandle();\n\n\t\t\tconst namedPipeServer = net.createServer();\n\t\t\tnamedPipeServer.on('error', reject);\n\t\t\tnamedPipeServer.listen(pipeName, () => {\n\t\t\t\tnamedPipeServer?.removeListener('error', reject);\n\t\t\t\tresolve({ pipeName, namedPipeServer });\n\t\t\t});\n\t\t});\n\t}\n}\n\nfunction readCaseInsensitive(env: { [key: string]: string | undefined }, key: string): string | undefined {\n\tconst pathKeys = Object.keys(env).filter(k => k.toLowerCase() === key.toLowerCase());\n\tconst pathKey = pathKeys.length > 0 ? pathKeys[0] : key;\n\treturn env[pathKey];\n}\n\nfunction setCaseInsensitive(env: { [key: string]: unknown }, key: string, value: string): void {\n\tconst pathKeys = Object.keys(env).filter(k => k.toLowerCase() === key.toLowerCase());\n\tconst pathKey = pathKeys.length > 0 ? pathKeys[0] : key;\n\tenv[pathKey] = value;\n}\n\nfunction removeNulls(env: { [key: string]: unknown | null }): void {\n\t// Don't delete while iterating the object itself\n\tfor (const key of Object.keys(env)) {\n\t\tif (env[key] === null) {\n\t\t\tdelete env[key];\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ExtensionIdentifier, IExtensionDescription, IRelaxedExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { localize } from 'vs/nls';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport * as semver from 'vs/base/common/semver/semver';\n\n// TODO: @sandy081 merge this with deduping in extensionsScannerService.ts\nexport function dedupExtensions(system: IExtensionDescription[], user: IExtensionDescription[], development: IExtensionDescription[], logService: ILogService): IExtensionDescription[] {\n\tconst result = new Map<string, IExtensionDescription>();\n\tsystem.forEach((systemExtension) => {\n\t\tconst extensionKey = ExtensionIdentifier.toKey(systemExtension.identifier);\n\t\tconst extension = result.get(extensionKey);\n\t\tif (extension) {\n\t\t\tlogService.warn(localize('overwritingExtension', \"Overwriting extension {0} with {1}.\", extension.extensionLocation.fsPath, systemExtension.extensionLocation.fsPath));\n\t\t}\n\t\tresult.set(extensionKey, systemExtension);\n\t});\n\tuser.forEach((userExtension) => {\n\t\tconst extensionKey = ExtensionIdentifier.toKey(userExtension.identifier);\n\t\tconst extension = result.get(extensionKey);\n\t\tif (extension) {\n\t\t\tif (extension.isBuiltin) {\n\t\t\t\tif (semver.gte(extension.version, userExtension.version)) {\n\t\t\t\t\tlogService.warn(`Skipping extension ${userExtension.extensionLocation.path} in favour of the builtin extension ${extension.extensionLocation.path}.`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// Overwriting a builtin extension inherits the `isBuiltin` property and it doesn't show a warning\n\t\t\t\t(<IRelaxedExtensionDescription>userExtension).isBuiltin = true;\n\t\t\t} else {\n\t\t\t\tlogService.warn(localize('overwritingExtension', \"Overwriting extension {0} with {1}.\", extension.extensionLocation.fsPath, userExtension.extensionLocation.fsPath));\n\t\t\t}\n\t\t} else if (userExtension.isBuiltin) {\n\t\t\tlogService.warn(`Skipping obsolete builtin extension ${userExtension.extensionLocation.path}`);\n\t\t\treturn;\n\t\t}\n\t\tresult.set(extensionKey, userExtension);\n\t});\n\tdevelopment.forEach(developedExtension => {\n\t\tlogService.info(localize('extensionUnderDevelopment', \"Loading development extension at {0}\", developedExtension.extensionLocation.fsPath));\n\t\tconst extensionKey = ExtensionIdentifier.toKey(developedExtension.identifier);\n\t\tconst extension = result.get(extensionKey);\n\t\tif (extension) {\n\t\t\tif (extension.isBuiltin) {\n\t\t\t\t// Overwriting a builtin extension inherits the `isBuiltin` property\n\t\t\t\t(<IRelaxedExtensionDescription>developedExtension).isBuiltin = true;\n\t\t\t}\n\t\t}\n\t\tresult.set(extensionKey, developedExtension);\n\t});\n\tconst r: IExtensionDescription[] = [];\n\tresult.forEach((value) => r.push(value));\n\treturn r;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport * as platform from 'vs/base/common/platform';\nimport * as performance from 'vs/base/common/performance';\nimport { URI } from 'vs/base/common/uri';\nimport { createURITransformer } from 'vs/workbench/api/node/uriTransformer';\nimport { IRemoteAgentEnvironmentDTO, IGetEnvironmentDataArguments, IScanExtensionsArguments, IScanSingleExtensionArguments, IGetExtensionHostExitInfoArguments } from 'vs/workbench/services/remote/common/remoteAgentEnvironmentChannel';\nimport { Schemas } from 'vs/base/common/network';\nimport { IServerEnvironmentService } from 'vs/server/node/serverEnvironmentService';\nimport { IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { ExtensionType, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { transformOutgoingURIs } from 'vs/base/common/uriIpc';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ContextKeyExpr, ContextKeyDefinedExpr, ContextKeyNotExpr, ContextKeyEqualsExpr, ContextKeyNotEqualsExpr, ContextKeyRegexExpr, IContextKeyExprMapper, ContextKeyExpression, ContextKeyInExpr, ContextKeyGreaterExpr, ContextKeyGreaterEqualsExpr, ContextKeySmallerExpr, ContextKeySmallerEqualsExpr, ContextKeyNotInExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { listProcesses } from 'vs/base/node/ps';\nimport { getMachineInfo, collectWorkspaceStats } from 'vs/platform/diagnostics/node/diagnosticsService';\nimport { IDiagnosticInfoOptions, IDiagnosticInfo } from 'vs/platform/diagnostics/common/diagnostics';\nimport { basename, isAbsolute, join, resolve } from 'vs/base/common/path';\nimport { ProcessItem } from 'vs/base/common/processes';\nimport { IExtensionManagementCLIService, InstallOptions } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { cwd } from 'vs/base/common/process';\nimport { ServerConnectionToken, ServerConnectionTokenType } from 'vs/server/node/serverConnectionToken';\nimport { IExtensionHostStatusService } from 'vs/server/node/extensionHostStatusService';\nimport { IExtensionsScannerService, toExtensionDescription } from 'vs/platform/extensionManagement/common/extensionsScannerService';\nimport { dedupExtensions } from 'vs/workbench/services/extensions/common/extensionsUtil';\nimport { IUserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\n\nexport class RemoteAgentEnvironmentChannel implements IServerChannel {\n\n\tprivate static _namePool = 1;\n\n\tprivate readonly whenExtensionsReady: Promise<void>;\n\n\tconstructor(\n\t\tprivate readonly _connectionToken: ServerConnectionToken,\n\t\tprivate readonly _environmentService: IServerEnvironmentService,\n\t\tprivate readonly _userDataProfilesService: IUserDataProfilesService,\n\t\textensionManagementCLIService: IExtensionManagementCLIService,\n\t\tprivate readonly _logService: ILogService,\n\t\tprivate readonly _extensionHostStatusService: IExtensionHostStatusService,\n\t\tprivate readonly _extensionsScannerService: IExtensionsScannerService,\n\t) {\n\t\tif (_environmentService.args['install-builtin-extension']) {\n\t\t\tconst installOptions: InstallOptions = { isMachineScoped: !!_environmentService.args['do-not-sync'], installPreReleaseVersion: !!_environmentService.args['pre-release'] };\n\t\t\tthis.whenExtensionsReady = extensionManagementCLIService.installExtensions([], _environmentService.args['install-builtin-extension'], installOptions, !!_environmentService.args['force'])\n\t\t\t\t.then(null, error => {\n\t\t\t\t\t_logService.error(error);\n\t\t\t\t});\n\t\t} else {\n\t\t\tthis.whenExtensionsReady = Promise.resolve();\n\t\t}\n\n\t\tconst extensionsToInstall = _environmentService.args['install-extension'];\n\t\tif (extensionsToInstall) {\n\t\t\tconst idsOrVSIX = extensionsToInstall.map(input => /\\.vsix$/i.test(input) ? URI.file(isAbsolute(input) ? input : join(cwd(), input)) : input);\n\t\t\tthis.whenExtensionsReady\n\t\t\t\t.then(() => extensionManagementCLIService.installExtensions(idsOrVSIX, [], { isMachineScoped: !!_environmentService.args['do-not-sync'], installPreReleaseVersion: !!_environmentService.args['pre-release'] }, !!_environmentService.args['force']))\n\t\t\t\t.then(null, error => {\n\t\t\t\t\t_logService.error(error);\n\t\t\t\t});\n\t\t}\n\t}\n\n\tasync call(_: any, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\n\t\t\tcase 'getEnvironmentData': {\n\t\t\t\tconst args = <IGetEnvironmentDataArguments>arg;\n\t\t\t\tconst uriTransformer = createURITransformer(args.remoteAuthority);\n\n\t\t\t\tlet environmentData = await this._getEnvironmentData();\n\t\t\t\tenvironmentData = transformOutgoingURIs(environmentData, uriTransformer);\n\n\t\t\t\treturn environmentData;\n\t\t\t}\n\n\t\t\tcase 'getExtensionHostExitInfo': {\n\t\t\t\tconst args = <IGetExtensionHostExitInfoArguments>arg;\n\t\t\t\treturn this._extensionHostStatusService.getExitInfo(args.reconnectionToken);\n\t\t\t}\n\n\t\t\tcase 'whenExtensionsReady': {\n\t\t\t\tawait this.whenExtensionsReady;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcase 'scanExtensions': {\n\t\t\t\tawait this.whenExtensionsReady;\n\t\t\t\tconst args = <IScanExtensionsArguments>arg;\n\t\t\t\tconst language = args.language;\n\t\t\t\tthis._logService.trace(`Scanning extensions using UI language: ${language}`);\n\t\t\t\tconst uriTransformer = createURITransformer(args.remoteAuthority);\n\n\t\t\t\tconst extensionDevelopmentLocations = args.extensionDevelopmentPath && args.extensionDevelopmentPath.map(url => URI.revive(uriTransformer.transformIncoming(url)));\n\t\t\t\tconst extensionDevelopmentPath = extensionDevelopmentLocations ? extensionDevelopmentLocations.filter(url => url.scheme === Schemas.file).map(url => url.fsPath) : undefined;\n\n\t\t\t\tlet extensions = await this._scanExtensions(language, extensionDevelopmentPath);\n\t\t\t\textensions = transformOutgoingURIs(extensions, uriTransformer);\n\n\t\t\t\tthis._logService.trace('Scanned Extensions', extensions);\n\t\t\t\tRemoteAgentEnvironmentChannel._massageWhenConditions(extensions);\n\n\t\t\t\treturn extensions;\n\t\t\t}\n\n\t\t\tcase 'scanSingleExtension': {\n\t\t\t\tawait this.whenExtensionsReady;\n\t\t\t\tconst args = <IScanSingleExtensionArguments>arg;\n\t\t\t\tconst language = args.language;\n\t\t\t\tconst isBuiltin = args.isBuiltin;\n\t\t\t\tconst uriTransformer = createURITransformer(args.remoteAuthority);\n\t\t\t\tconst extensionLocation = URI.revive(uriTransformer.transformIncoming(args.extensionLocation));\n\t\t\t\tconst extensionPath = extensionLocation.scheme === Schemas.file ? extensionLocation.fsPath : null;\n\n\t\t\t\tif (!extensionPath) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tlet extension = await this._scanSingleExtension(extensionPath, isBuiltin, language);\n\n\t\t\t\tif (!extension) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\textension = transformOutgoingURIs(extension, uriTransformer);\n\n\t\t\t\tRemoteAgentEnvironmentChannel._massageWhenConditions([extension]);\n\n\t\t\t\treturn extension;\n\t\t\t}\n\n\t\t\tcase 'getDiagnosticInfo': {\n\t\t\t\tconst options = <IDiagnosticInfoOptions>arg;\n\t\t\t\tconst diagnosticInfo: IDiagnosticInfo = {\n\t\t\t\t\tmachineInfo: getMachineInfo()\n\t\t\t\t};\n\n\t\t\t\tconst processesPromise: Promise<ProcessItem | void> = options.includeProcesses ? listProcesses(process.pid) : Promise.resolve();\n\n\t\t\t\tlet workspaceMetadataPromises: Promise<void>[] = [];\n\t\t\t\tconst workspaceMetadata: { [key: string]: any } = {};\n\t\t\t\tif (options.folders) {\n\t\t\t\t\t// only incoming paths are transformed, so remote authority is unneeded.\n\t\t\t\t\tconst uriTransformer = createURITransformer('');\n\t\t\t\t\tconst folderPaths = options.folders\n\t\t\t\t\t\t.map(folder => URI.revive(uriTransformer.transformIncoming(folder)))\n\t\t\t\t\t\t.filter(uri => uri.scheme === 'file');\n\n\t\t\t\t\tworkspaceMetadataPromises = folderPaths.map(folder => {\n\t\t\t\t\t\treturn collectWorkspaceStats(folder.fsPath, ['node_modules', '.git'])\n\t\t\t\t\t\t\t.then(stats => {\n\t\t\t\t\t\t\t\tworkspaceMetadata[basename(folder.fsPath)] = stats;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all([processesPromise, ...workspaceMetadataPromises]).then(([processes, _]) => {\n\t\t\t\t\tdiagnosticInfo.processes = processes || undefined;\n\t\t\t\t\tdiagnosticInfo.workspaceMetadata = options.folders ? workspaceMetadata : undefined;\n\t\t\t\t\treturn diagnosticInfo;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(`IPC Command ${command} not found`);\n\t}\n\n\tlisten(_: any, event: string, arg: any): Event<any> {\n\t\tthrow new Error('Not supported');\n\t}\n\n\tprivate static _massageWhenConditions(extensions: IExtensionDescription[]): void {\n\t\t// Massage \"when\" conditions which mention `resourceScheme`\n\n\t\tinterface WhenUser { when?: string }\n\n\t\tinterface LocWhenUser { [loc: string]: WhenUser[] }\n\n\t\tconst _mapResourceSchemeValue = (value: string, isRegex: boolean): string => {\n\t\t\t// console.log(`_mapResourceSchemeValue: ${value}, ${isRegex}`);\n\t\t\treturn value.replace(/file/g, 'vscode-remote');\n\t\t};\n\n\t\tconst _mapResourceRegExpValue = (value: RegExp): RegExp => {\n\t\t\tlet flags = '';\n\t\t\tflags += value.global ? 'g' : '';\n\t\t\tflags += value.ignoreCase ? 'i' : '';\n\t\t\tflags += value.multiline ? 'm' : '';\n\t\t\treturn new RegExp(_mapResourceSchemeValue(value.source, true), flags);\n\t\t};\n\n\t\tconst _exprKeyMapper = new class implements IContextKeyExprMapper {\n\t\t\tmapDefined(key: string): ContextKeyExpression {\n\t\t\t\treturn ContextKeyDefinedExpr.create(key);\n\t\t\t}\n\t\t\tmapNot(key: string): ContextKeyExpression {\n\t\t\t\treturn ContextKeyNotExpr.create(key);\n\t\t\t}\n\t\t\tmapEquals(key: string, value: any): ContextKeyExpression {\n\t\t\t\tif (key === 'resourceScheme' && typeof value === 'string') {\n\t\t\t\t\treturn ContextKeyEqualsExpr.create(key, _mapResourceSchemeValue(value, false));\n\t\t\t\t} else {\n\t\t\t\t\treturn ContextKeyEqualsExpr.create(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t\tmapNotEquals(key: string, value: any): ContextKeyExpression {\n\t\t\t\tif (key === 'resourceScheme' && typeof value === 'string') {\n\t\t\t\t\treturn ContextKeyNotEqualsExpr.create(key, _mapResourceSchemeValue(value, false));\n\t\t\t\t} else {\n\t\t\t\t\treturn ContextKeyNotEqualsExpr.create(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t\tmapGreater(key: string, value: any): ContextKeyExpression {\n\t\t\t\treturn ContextKeyGreaterExpr.create(key, value);\n\t\t\t}\n\t\t\tmapGreaterEquals(key: string, value: any): ContextKeyExpression {\n\t\t\t\treturn ContextKeyGreaterEqualsExpr.create(key, value);\n\t\t\t}\n\t\t\tmapSmaller(key: string, value: any): ContextKeyExpression {\n\t\t\t\treturn ContextKeySmallerExpr.create(key, value);\n\t\t\t}\n\t\t\tmapSmallerEquals(key: string, value: any): ContextKeyExpression {\n\t\t\t\treturn ContextKeySmallerEqualsExpr.create(key, value);\n\t\t\t}\n\t\t\tmapRegex(key: string, regexp: RegExp | null): ContextKeyRegexExpr {\n\t\t\t\tif (key === 'resourceScheme' && regexp) {\n\t\t\t\t\treturn ContextKeyRegexExpr.create(key, _mapResourceRegExpValue(regexp));\n\t\t\t\t} else {\n\t\t\t\t\treturn ContextKeyRegexExpr.create(key, regexp);\n\t\t\t\t}\n\t\t\t}\n\t\t\tmapIn(key: string, valueKey: string): ContextKeyInExpr {\n\t\t\t\treturn ContextKeyInExpr.create(key, valueKey);\n\t\t\t}\n\t\t\tmapNotIn(key: string, valueKey: string): ContextKeyNotInExpr {\n\t\t\t\treturn ContextKeyNotInExpr.create(key, valueKey);\n\t\t\t}\n\t\t};\n\n\t\tconst _massageWhenUser = (element: WhenUser) => {\n\t\t\tif (!element || !element.when || !/resourceScheme/.test(element.when)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst expr = ContextKeyExpr.deserialize(element.when);\n\t\t\tif (!expr) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst massaged = expr.map(_exprKeyMapper);\n\t\t\telement.when = massaged.serialize();\n\t\t};\n\n\t\tconst _massageWhenUserArr = (elements: WhenUser[] | WhenUser) => {\n\t\t\tif (Array.isArray(elements)) {\n\t\t\t\tfor (const element of elements) {\n\t\t\t\t\t_massageWhenUser(element);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t_massageWhenUser(elements);\n\t\t\t}\n\t\t};\n\n\t\tconst _massageLocWhenUser = (target: LocWhenUser) => {\n\t\t\tfor (const loc in target) {\n\t\t\t\t_massageWhenUserArr(target[loc]);\n\t\t\t}\n\t\t};\n\n\t\textensions.forEach((extension) => {\n\t\t\tif (extension.contributes) {\n\t\t\t\tif (extension.contributes.menus) {\n\t\t\t\t\t_massageLocWhenUser(<LocWhenUser>extension.contributes.menus);\n\t\t\t\t}\n\t\t\t\tif (extension.contributes.keybindings) {\n\t\t\t\t\t_massageWhenUserArr(<WhenUser | WhenUser[]>extension.contributes.keybindings);\n\t\t\t\t}\n\t\t\t\tif (extension.contributes.views) {\n\t\t\t\t\t_massageLocWhenUser(<LocWhenUser>extension.contributes.views);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async _getEnvironmentData(): Promise<IRemoteAgentEnvironmentDTO> {\n\t\treturn {\n\t\t\tpid: process.pid,\n\t\t\tconnectionToken: (this._connectionToken.type !== ServerConnectionTokenType.None ? this._connectionToken.value : ''),\n\t\t\tappRoot: URI.file(this._environmentService.appRoot),\n\t\t\tsettingsPath: this._environmentService.machineSettingsResource,\n\t\t\tlogsPath: URI.file(this._environmentService.logsPath),\n\t\t\textensionsPath: URI.file(this._environmentService.extensionsPath!),\n\t\t\textensionHostLogsPath: URI.file(join(this._environmentService.logsPath, `exthost${RemoteAgentEnvironmentChannel._namePool++}`)),\n\t\t\tglobalStorageHome: this._userDataProfilesService.defaultProfile.globalStorageHome,\n\t\t\tworkspaceStorageHome: this._environmentService.workspaceStorageHome,\n\t\t\tlocalHistoryHome: this._environmentService.localHistoryHome,\n\t\t\tuserHome: this._environmentService.userHome,\n\t\t\tos: platform.OS,\n\t\t\tarch: process.arch,\n\t\t\tmarks: performance.getMarks(),\n\t\t\tuseHostProxy: !!this._environmentService.args['use-host-proxy']\n\t\t};\n\t}\n\n\tprivate async _scanExtensions(language: string, extensionDevelopmentPath?: string[]): Promise<IExtensionDescription[]> {\n\t\t// Ensure that the language packs are available\n\n\t\tconst [builtinExtensions, installedExtensions, developedExtensions] = await Promise.all([\n\t\t\tthis._scanBuiltinExtensions(language),\n\t\t\tthis._scanInstalledExtensions(language),\n\t\t\tthis._scanDevelopedExtensions(language, extensionDevelopmentPath)\n\t\t]);\n\n\t\treturn dedupExtensions(builtinExtensions, installedExtensions, developedExtensions, this._logService);\n\t}\n\n\tprivate async _scanDevelopedExtensions(language: string, extensionDevelopmentPaths?: string[]): Promise<IExtensionDescription[]> {\n\t\tif (extensionDevelopmentPaths) {\n\t\t\treturn (await Promise.all(extensionDevelopmentPaths.map(extensionDevelopmentPath => this._extensionsScannerService.scanOneOrMultipleExtensions(URI.file(resolve(extensionDevelopmentPath)), ExtensionType.User, { language }))))\n\t\t\t\t.flat()\n\t\t\t\t.map(e => toExtensionDescription(e, true));\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate async _scanBuiltinExtensions(language: string): Promise<IExtensionDescription[]> {\n\t\tconst scannedExtensions = await this._extensionsScannerService.scanSystemExtensions({ language, useCache: true });\n\t\treturn scannedExtensions.map(e => toExtensionDescription(e, false));\n\t}\n\n\tprivate async _scanInstalledExtensions(language: string): Promise<IExtensionDescription[]> {\n\t\tconst scannedExtensions = await this._extensionsScannerService.scanUserExtensions({ language, useCache: true });\n\t\treturn scannedExtensions.map(e => toExtensionDescription(e, false));\n\t}\n\n\tprivate async _scanSingleExtension(extensionPath: string, isBuiltin: boolean, language: string): Promise<IExtensionDescription | null> {\n\t\tconst extensionLocation = URI.file(resolve(extensionPath));\n\t\tconst type = isBuiltin ? ExtensionType.System : ExtensionType.User;\n\t\tconst scannedExtension = await this._extensionsScannerService.scanExistingExtension(extensionLocation, type, { language });\n\t\treturn scannedExtension ? toExtensionDescription(scannedExtension, false) : null;\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { VSBuffer } from 'vs/base/common/buffer';\nimport type { CancellationToken } from 'vs/base/common/cancellation';\n\nexport interface IRPCProtocol {\n\t/**\n\t * Returns a proxy to an object addressable/named in the extension host process or in the renderer process.\n\t */\n\tgetProxy<T>(identifier: ProxyIdentifier<T>): Proxied<T>;\n\n\t/**\n\t * Register manually created instance.\n\t */\n\tset<T, R extends T>(identifier: ProxyIdentifier<T>, instance: R): R;\n\n\t/**\n\t * Assert these identifiers are already registered via `.set`.\n\t */\n\tassertRegistered(identifiers: ProxyIdentifier<any>[]): void;\n\n\t/**\n\t * Wait for the write buffer (if applicable) to become empty.\n\t */\n\tdrain(): Promise<void>;\n\n\tdispose(): void;\n}\n\nexport class ProxyIdentifier<T> {\n\tpublic static count = 0;\n\t_proxyIdentifierBrand: void = undefined;\n\n\tpublic readonly sid: string;\n\tpublic readonly nid: number;\n\n\tconstructor(sid: string) {\n\t\tthis.sid = sid;\n\t\tthis.nid = (++ProxyIdentifier.count);\n\t}\n}\n\nconst identifiers: ProxyIdentifier<any>[] = [];\n\nexport function createProxyIdentifier<T>(identifier: string): ProxyIdentifier<T> {\n\tconst result = new ProxyIdentifier<T>(identifier);\n\tidentifiers[result.nid] = result;\n\treturn result;\n}\n\n/**\n * Mapped-type that replaces all JSONable-types with their toJSON-result type\n */\nexport type Dto<T> = T extends { toJSON(): infer U }\n\t? U\n\t: T extends VSBuffer // VSBuffer is understood by rpc-logic\n\t? T\n\t: T extends CancellationToken // CancellationToken is understood by rpc-logic\n\t? T\n\t: T extends Function // functions are dropped during JSON-stringify\n\t? never\n\t: T extends object // recurse\n\t? { [k in keyof T]: Dto<T[k]>; }\n\t: T;\n\nexport type Proxied<T> = { [K in keyof T]: T[K] extends (...args: infer A) => infer R\n\t? (...args: { [K in keyof A]: Dto<A[K]> }) => Promise<Dto<Awaited<R>>>\n\t: never\n};\n\nexport function getStringIdentifierForProxy(nid: number): string {\n\treturn identifiers[nid].sid;\n}\n\n/**\n * Marks the object as containing buffers that should be serialized more efficiently.\n */\nexport class SerializableObjectWithBuffers<T> {\n\tconstructor(\n\t\tpublic readonly value: T\n\t) { }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IRemoteConsoleLog } from 'vs/base/common/console';\nimport { SerializedError } from 'vs/base/common/errors';\nimport { IRelativePattern } from 'vs/base/common/glob';\nimport { IMarkdownString } from 'vs/base/common/htmlContent';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { revive } from 'vs/base/common/marshalling';\nimport * as performance from 'vs/base/common/performance';\nimport Severity from 'vs/base/common/severity';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { RenderLineNumbersType, TextEditorCursorStyle } from 'vs/editor/common/config/editorOptions';\nimport { ISingleEditOperation } from 'vs/editor/common/core/editOperation';\nimport { IPosition } from 'vs/editor/common/core/position';\nimport { IRange } from 'vs/editor/common/core/range';\nimport { ISelection, Selection } from 'vs/editor/common/core/selection';\nimport { ILineChange } from 'vs/editor/common/diff/diffComputer';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport * as languages from 'vs/editor/common/languages';\nimport { StandardTokenType } from 'vs/editor/common/encodedTokenAttributes';\nimport { CharacterPair, CommentRule, EnterAction } from 'vs/editor/common/languages/languageConfiguration';\nimport { EndOfLineSequence } from 'vs/editor/common/model';\nimport { IModelChangedEvent } from 'vs/editor/common/model/mirrorTextModel';\nimport { IAccessibilityInformation } from 'vs/platform/accessibility/common/accessibility';\nimport { ConfigurationTarget, IConfigurationChange, IConfigurationData, IConfigurationOverrides } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationScope } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IExtensionIdWithVersion } from 'vs/platform/extensionManagement/common/extensionStorage';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport * as files from 'vs/platform/files/common/files';\nimport { ResourceLabelFormatter } from 'vs/platform/label/common/label';\nimport { ILoggerOptions, LogLevel } from 'vs/platform/log/common/log';\nimport { IMarkerData } from 'vs/platform/markers/common/markers';\nimport { IProgressOptions, IProgressStep } from 'vs/platform/progress/common/progress';\nimport * as quickInput from 'vs/platform/quickinput/common/quickInput';\nimport { IRemoteConnectionData, TunnelDescription } from 'vs/platform/remote/common/remoteAuthorityResolver';\nimport { ClassifiedEvent, GDPRClassification, StrictPropertyCheck } from 'vs/platform/telemetry/common/gdprTypings';\nimport { TelemetryLevel } from 'vs/platform/telemetry/common/telemetry';\nimport { ICreateContributedTerminalProfileOptions, IProcessProperty, IShellLaunchConfigDto, ITerminalEnvironment, ITerminalLaunchError, ITerminalProfile, TerminalExitReason, TerminalLocation } from 'vs/platform/terminal/common/terminal';\nimport { ThemeColor, ThemeIcon } from 'vs/platform/theme/common/themeService';\nimport { ProvidedPortAttributes, TunnelCreationOptions, TunnelOptions, TunnelPrivacyId, TunnelProviderFeatures } from 'vs/platform/tunnel/common/tunnel';\nimport { WorkspaceTrustRequestOptions } from 'vs/platform/workspace/common/workspaceTrust';\nimport * as tasks from 'vs/workbench/api/common/shared/tasks';\nimport { SaveReason } from 'vs/workbench/common/editor';\nimport { IRevealOptions, ITreeItem, IViewBadge } from 'vs/workbench/common/views';\nimport { CallHierarchyItem } from 'vs/workbench/contrib/callHierarchy/common/callHierarchy';\nimport { DebugConfigurationProviderTriggerKind, IAdapterDescriptor, IConfig, IDebugSessionReplMode } from 'vs/workbench/contrib/debug/common/debug';\nimport * as notebookCommon from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { CellExecutionUpdateType } from 'vs/workbench/contrib/notebook/common/notebookExecutionService';\nimport { ICellExecutionComplete, ICellExecutionStateUpdate } from 'vs/workbench/contrib/notebook/common/notebookExecutionStateService';\nimport { ICellRange } from 'vs/workbench/contrib/notebook/common/notebookRange';\nimport { OutputChannelUpdateMode } from 'vs/workbench/services/output/common/output';\nimport { InputValidationType } from 'vs/workbench/contrib/scm/common/scm';\nimport { IWorkspaceSymbol } from 'vs/workbench/contrib/search/common/search';\nimport { ISerializableEnvironmentVariableCollection } from 'vs/workbench/contrib/terminal/common/environmentVariable';\nimport { CoverageDetails, ExtensionRunTestsRequest, IFileCoverage, ISerializedTestResults, ITestItem, ITestMessage, ITestRunProfile, ITestRunTask, ResolvedTestRunRequest, RunTestForControllerRequest, TestResultState, TestsDiffOp } from 'vs/workbench/contrib/testing/common/testTypes';\nimport { Timeline, TimelineChangeEvent, TimelineOptions, TimelineProviderDescriptor } from 'vs/workbench/contrib/timeline/common/timeline';\nimport { TypeHierarchyItem } from 'vs/workbench/contrib/typeHierarchy/common/typeHierarchy';\nimport { AuthenticationProviderInformation, AuthenticationSession, AuthenticationSessionsChangeEvent } from 'vs/workbench/services/authentication/common/authentication';\nimport { EditorGroupColumn } from 'vs/workbench/services/editor/common/editorGroupColumn';\nimport { IExtensionDescriptionDelta, IStaticWorkspaceData } from 'vs/workbench/services/extensions/common/extensionHostProtocol';\nimport { IResolveAuthorityResult } from 'vs/workbench/services/extensions/common/extensionHostProxy';\nimport { ActivationKind, ExtensionActivationReason, MissingExtensionDependency } from 'vs/workbench/services/extensions/common/extensions';\nimport { createProxyIdentifier, Dto, IRPCProtocol, SerializableObjectWithBuffers } from 'vs/workbench/services/extensions/common/proxyIdentifier';\nimport { ILanguageStatus } from 'vs/workbench/services/languageStatus/common/languageStatusService';\nimport { CandidatePort } from 'vs/workbench/services/remote/common/remoteExplorerService';\nimport { ITextQueryBuilderOptions } from 'vs/workbench/services/search/common/queryBuilder';\nimport * as search from 'vs/workbench/services/search/common/search';\n\nexport interface IWorkspaceData extends IStaticWorkspaceData {\n\tfolders: { uri: UriComponents; name: string; index: number }[];\n}\n\nexport interface IConfigurationInitData extends IConfigurationData {\n\tconfigurationScopes: [string, ConfigurationScope | undefined][];\n}\n\nexport interface IMainContext extends IRPCProtocol {\n}\n\n// --- main thread\n\nexport interface MainThreadClipboardShape extends IDisposable {\n\t$readText(): Promise<string>;\n\t$writeText(value: string): Promise<void>;\n}\n\nexport interface MainThreadCommandsShape extends IDisposable {\n\t$registerCommand(id: string): void;\n\t$unregisterCommand(id: string): void;\n\t$fireCommandActivationEvent(id: string): void;\n\t$executeCommand(id: string, args: any[] | SerializableObjectWithBuffers<any[]>, retry: boolean): Promise<unknown | undefined>;\n\t$getCommands(): Promise<string[]>;\n}\n\nexport interface CommentProviderFeatures {\n\treactionGroup?: languages.CommentReaction[];\n\treactionHandler?: boolean;\n\toptions?: languages.CommentOptions;\n}\n\nexport interface CommentChanges {\n\treadonly uniqueIdInThread: number;\n\treadonly body: string | IMarkdownString;\n\treadonly userName: string;\n\treadonly userIconPath?: string;\n\treadonly contextValue?: string;\n\treadonly commentReactions?: languages.CommentReaction[];\n\treadonly label?: string;\n\treadonly mode?: languages.CommentMode;\n\treadonly timestamp?: string;\n}\n\nexport type CommentThreadChanges<T = IRange> = Partial<{\n\trange: T;\n\tlabel: string;\n\tcontextValue: string | null;\n\tcomments: CommentChanges[];\n\tcollapseState: languages.CommentThreadCollapsibleState;\n\tcanReply: boolean;\n\tstate: languages.CommentThreadState;\n\tisTemplate: boolean;\n}>;\n\nexport interface MainThreadCommentsShape extends IDisposable {\n\t$registerCommentController(handle: number, id: string, label: string): void;\n\t$unregisterCommentController(handle: number): void;\n\t$updateCommentControllerFeatures(handle: number, features: CommentProviderFeatures): void;\n\t$createCommentThread(handle: number, commentThreadHandle: number, threadId: string, resource: UriComponents, range: IRange | ICellRange, extensionId: ExtensionIdentifier, isTemplate: boolean): languages.CommentThread<IRange | ICellRange> | undefined;\n\t$updateCommentThread(handle: number, commentThreadHandle: number, threadId: string, resource: UriComponents, changes: CommentThreadChanges): void;\n\t$deleteCommentThread(handle: number, commentThreadHandle: number): void;\n\t$updateCommentingRanges(handle: number): void;\n}\n\nexport interface MainThreadAuthenticationShape extends IDisposable {\n\t$registerAuthenticationProvider(id: string, label: string, supportsMultipleAccounts: boolean): void;\n\t$unregisterAuthenticationProvider(id: string): void;\n\t$ensureProvider(id: string): Promise<void>;\n\t$sendDidChangeSessions(providerId: string, event: AuthenticationSessionsChangeEvent): void;\n\t$getSession(providerId: string, scopes: readonly string[], extensionId: string, extensionName: string, options: { createIfNone?: boolean; forceNewSession?: boolean | { detail: string }; clearSessionPreference?: boolean }): Promise<AuthenticationSession | undefined>;\n\t$removeSession(providerId: string, sessionId: string): Promise<void>;\n}\n\nexport interface MainThreadSecretStateShape extends IDisposable {\n\t$getPassword(extensionId: string, key: string): Promise<string | undefined>;\n\t$setPassword(extensionId: string, key: string, value: string): Promise<void>;\n\t$deletePassword(extensionId: string, key: string): Promise<void>;\n}\n\nexport interface MainThreadConfigurationShape extends IDisposable {\n\t$updateConfigurationOption(target: ConfigurationTarget | null, key: string, value: any, overrides: IConfigurationOverrides | undefined, scopeToLanguage: boolean | undefined): Promise<void>;\n\t$removeConfigurationOption(target: ConfigurationTarget | null, key: string, overrides: IConfigurationOverrides | undefined, scopeToLanguage: boolean | undefined): Promise<void>;\n}\n\nexport interface MainThreadDiagnosticsShape extends IDisposable {\n\t$changeMany(owner: string, entries: [UriComponents, IMarkerData[] | undefined][]): void;\n\t$clear(owner: string): void;\n}\n\nexport interface MainThreadDialogOpenOptions {\n\tdefaultUri?: UriComponents;\n\topenLabel?: string;\n\tcanSelectFiles?: boolean;\n\tcanSelectFolders?: boolean;\n\tcanSelectMany?: boolean;\n\tfilters?: { [name: string]: string[] };\n\ttitle?: string;\n}\n\nexport interface MainThreadDialogSaveOptions {\n\tdefaultUri?: UriComponents;\n\tsaveLabel?: string;\n\tfilters?: { [name: string]: string[] };\n\ttitle?: string;\n}\n\nexport interface MainThreadDiaglogsShape extends IDisposable {\n\t$showOpenDialog(options?: MainThreadDialogOpenOptions): Promise<UriComponents[] | undefined>;\n\t$showSaveDialog(options?: MainThreadDialogSaveOptions): Promise<UriComponents | undefined>;\n}\n\nexport interface MainThreadDecorationsShape extends IDisposable {\n\t$registerDecorationProvider(handle: number, label: string): void;\n\t$unregisterDecorationProvider(handle: number): void;\n\t$onDidChange(handle: number, resources: UriComponents[] | null): void;\n}\n\nexport interface MainThreadDocumentContentProvidersShape extends IDisposable {\n\t$registerTextContentProvider(handle: number, scheme: string): void;\n\t$unregisterTextContentProvider(handle: number): void;\n\t$onVirtualDocumentChange(uri: UriComponents, value: string): void;\n}\n\nexport interface MainThreadDocumentsShape extends IDisposable {\n\t$tryCreateDocument(options?: { language?: string; content?: string }): Promise<UriComponents>;\n\t$tryOpenDocument(uri: UriComponents): Promise<UriComponents>;\n\t$trySaveDocument(uri: UriComponents): Promise<boolean>;\n}\n\nexport interface ITextEditorConfigurationUpdate {\n\ttabSize?: number | 'auto';\n\tinsertSpaces?: boolean | 'auto';\n\tcursorStyle?: TextEditorCursorStyle;\n\tlineNumbers?: RenderLineNumbersType;\n}\n\nexport interface IResolvedTextEditorConfiguration {\n\ttabSize: number;\n\tinsertSpaces: boolean;\n\tcursorStyle: TextEditorCursorStyle;\n\tlineNumbers: RenderLineNumbersType;\n}\n\nexport enum TextEditorRevealType {\n\tDefault = 0,\n\tInCenter = 1,\n\tInCenterIfOutsideViewport = 2,\n\tAtTop = 3\n}\n\nexport interface IUndoStopOptions {\n\tundoStopBefore: boolean;\n\tundoStopAfter: boolean;\n}\n\nexport interface IApplyEditsOptions extends IUndoStopOptions {\n\tsetEndOfLine?: EndOfLineSequence;\n}\n\nexport interface ITextDocumentShowOptions {\n\tposition?: EditorGroupColumn;\n\tpreserveFocus?: boolean;\n\tpinned?: boolean;\n\tselection?: IRange;\n}\n\nexport interface MainThreadBulkEditsShape extends IDisposable {\n\t$tryApplyWorkspaceEdit(workspaceEditDto: IWorkspaceEditDto, undoRedoGroupId?: number): Promise<boolean>;\n}\n\nexport interface MainThreadTextEditorsShape extends IDisposable {\n\t$tryShowTextDocument(resource: UriComponents, options: ITextDocumentShowOptions): Promise<string | undefined>;\n\t$registerTextEditorDecorationType(extensionId: ExtensionIdentifier, key: string, options: editorCommon.IDecorationRenderOptions): void;\n\t$removeTextEditorDecorationType(key: string): void;\n\t$tryShowEditor(id: string, position: EditorGroupColumn): Promise<void>;\n\t$tryHideEditor(id: string): Promise<void>;\n\t$trySetOptions(id: string, options: ITextEditorConfigurationUpdate): Promise<void>;\n\t$trySetDecorations(id: string, key: string, ranges: editorCommon.IDecorationOptions[]): Promise<void>;\n\t$trySetDecorationsFast(id: string, key: string, ranges: number[]): Promise<void>;\n\t$tryRevealRange(id: string, range: IRange, revealType: TextEditorRevealType): Promise<void>;\n\t$trySetSelections(id: string, selections: ISelection[]): Promise<void>;\n\t$tryApplyEdits(id: string, modelVersionId: number, edits: ISingleEditOperation[], opts: IApplyEditsOptions): Promise<boolean>;\n\t$tryInsertSnippet(id: string, modelVersionId: number, template: string, selections: readonly IRange[], opts: IUndoStopOptions): Promise<boolean>;\n\t$getDiffInformation(id: string): Promise<ILineChange[]>;\n}\n\nexport interface MainThreadTreeViewsShape extends IDisposable {\n\t$registerTreeViewDataProvider(treeViewId: string, options: { showCollapseAll: boolean; canSelectMany: boolean; dropMimeTypes: readonly string[]; dragMimeTypes: readonly string[]; hasHandleDrag: boolean; hasHandleDrop: boolean }): Promise<void>;\n\t$refresh(treeViewId: string, itemsToRefresh?: { [treeItemHandle: string]: ITreeItem }): Promise<void>;\n\t$reveal(treeViewId: string, itemInfo: { item: ITreeItem; parentChain: ITreeItem[] } | undefined, options: IRevealOptions): Promise<void>;\n\t$setMessage(treeViewId: string, message: string): void;\n\t$setTitle(treeViewId: string, title: string, description: string | undefined): void;\n\t$setBadge(treeViewId: string, badge: IViewBadge | undefined): void;\n\t$resolveDropFileData(destinationViewId: string, requestId: number, dataItemIndex: number): Promise<VSBuffer>;\n}\n\nexport interface MainThreadDownloadServiceShape extends IDisposable {\n\t$download(uri: UriComponents, to: UriComponents): Promise<void>;\n}\n\nexport interface MainThreadErrorsShape extends IDisposable {\n\t$onUnexpectedError(err: any | SerializedError): void;\n}\n\nexport interface MainThreadConsoleShape extends IDisposable {\n\t$logExtensionHostMessage(msg: IRemoteConsoleLog): void;\n}\n\nexport interface MainThreadKeytarShape extends IDisposable {\n\t$getPassword(service: string, account: string): Promise<string | null>;\n\t$setPassword(service: string, account: string, password: string): Promise<void>;\n\t$deletePassword(service: string, account: string): Promise<boolean>;\n\t$findPassword(service: string): Promise<string | null>;\n\t$findCredentials(service: string): Promise<Array<{ account: string; password: string }>>;\n}\n\nexport interface IRegExpDto {\n\tpattern: string;\n\tflags?: string;\n}\nexport interface IIndentationRuleDto {\n\tdecreaseIndentPattern: IRegExpDto;\n\tincreaseIndentPattern: IRegExpDto;\n\tindentNextLinePattern?: IRegExpDto;\n\tunIndentedLinePattern?: IRegExpDto;\n}\nexport interface IOnEnterRuleDto {\n\tbeforeText: IRegExpDto;\n\tafterText?: IRegExpDto;\n\tpreviousLineText?: IRegExpDto;\n\taction: EnterAction;\n}\nexport interface ILanguageConfigurationDto {\n\tcomments?: CommentRule;\n\tbrackets?: CharacterPair[];\n\twordPattern?: IRegExpDto;\n\tindentationRules?: IIndentationRuleDto;\n\tonEnterRules?: IOnEnterRuleDto[];\n\t__electricCharacterSupport?: {\n\t\tbrackets?: any;\n\t\tdocComment?: {\n\t\t\tscope: string;\n\t\t\topen: string;\n\t\t\tlineStart: string;\n\t\t\tclose?: string;\n\t\t};\n\t};\n\t__characterPairSupport?: {\n\t\tautoClosingPairs: {\n\t\t\topen: string;\n\t\t\tclose: string;\n\t\t\tnotIn?: string[];\n\t\t}[];\n\t};\n}\n\nexport type GlobPattern = string | IRelativePattern;\n\nexport interface IRelativePatternDto extends IRelativePattern {\n\tbaseUri: UriComponents;\n}\n\nexport interface IDocumentFilterDto {\n\t$serialized: true;\n\tlanguage?: string;\n\tscheme?: string;\n\tpattern?: string | IRelativePattern;\n\texclusive?: boolean;\n\tnotebookType?: string;\n}\n\nexport interface ISignatureHelpProviderMetadataDto {\n\treadonly triggerCharacters: readonly string[];\n\treadonly retriggerCharacters: readonly string[];\n}\n\nexport interface IdentifiableInlineCompletions extends languages.InlineCompletions<IdentifiableInlineCompletion> {\n\tpid: number;\n}\n\nexport interface IdentifiableInlineCompletion extends languages.InlineCompletion {\n\tidx: number;\n}\n\nexport interface MainThreadLanguageFeaturesShape extends IDisposable {\n\t$unregister(handle: number): void;\n\t$registerDocumentSymbolProvider(handle: number, selector: IDocumentFilterDto[], label: string): void;\n\t$registerCodeLensSupport(handle: number, selector: IDocumentFilterDto[], eventHandle: number | undefined): void;\n\t$emitCodeLensEvent(eventHandle: number, event?: any): void;\n\t$registerDefinitionSupport(handle: number, selector: IDocumentFilterDto[]): void;\n\t$registerDeclarationSupport(handle: number, selector: IDocumentFilterDto[]): void;\n\t$registerImplementationSupport(handle: number, selector: IDocumentFilterDto[]): void;\n\t$registerTypeDefinitionSupport(handle: number, selector: IDocumentFilterDto[]): void;\n\t$registerHoverProvider(handle: number, selector: IDocumentFilterDto[]): void;\n\t$registerEvaluatableExpressionProvider(handle: number, selector: IDocumentFilterDto[]): void;\n\t$registerInlineValuesProvider(handle: number, selector: IDocumentFilterDto[], eventHandle: number | undefined): void;\n\t$emitInlineValuesEvent(eventHandle: number, event?: any): void;\n\t$registerDocumentHighlightProvider(handle: number, selector: IDocumentFilterDto[]): void;\n\t$registerLinkedEditingRangeProvider(handle: number, selector: IDocumentFilterDto[]): void;\n\t$registerReferenceSupport(handle: number, selector: IDocumentFilterDto[]): void;\n\t$registerQuickFixSupport(handle: number, selector: IDocumentFilterDto[], metadata: ICodeActionProviderMetadataDto, displayName: string, supportsResolve: boolean): void;\n\t$registerPasteEditProvider(handle: number, selector: IDocumentFilterDto[], supportsCopy: boolean, pasteMimeTypes: readonly string[]): void;\n\t$registerDocumentFormattingSupport(handle: number, selector: IDocumentFilterDto[], extensionId: ExtensionIdentifier, displayName: string): void;\n\t$registerRangeFormattingSupport(handle: number, selector: IDocumentFilterDto[], extensionId: ExtensionIdentifier, displayName: string): void;\n\t$registerOnTypeFormattingSupport(handle: number, selector: IDocumentFilterDto[], autoFormatTriggerCharacters: string[], extensionId: ExtensionIdentifier): void;\n\t$registerNavigateTypeSupport(handle: number, supportsResolve: boolean): void;\n\t$registerRenameSupport(handle: number, selector: IDocumentFilterDto[], supportsResolveInitialValues: boolean): void;\n\t$registerDocumentSemanticTokensProvider(handle: number, selector: IDocumentFilterDto[], legend: languages.SemanticTokensLegend, eventHandle: number | undefined): void;\n\t$emitDocumentSemanticTokensEvent(eventHandle: number): void;\n\t$registerDocumentRangeSemanticTokensProvider(handle: number, selector: IDocumentFilterDto[], legend: languages.SemanticTokensLegend): void;\n\t$registerCompletionsProvider(handle: number, selector: IDocumentFilterDto[], triggerCharacters: string[], supportsResolveDetails: boolean, displayName: string): void;\n\t$registerInlineCompletionsSupport(handle: number, selector: IDocumentFilterDto[], supportsHandleDidShowCompletionItem: boolean): void;\n\t$registerSignatureHelpProvider(handle: number, selector: IDocumentFilterDto[], metadata: ISignatureHelpProviderMetadataDto): void;\n\t$registerInlayHintsProvider(handle: number, selector: IDocumentFilterDto[], supportsResolve: boolean, eventHandle: number | undefined, displayName: string | undefined): void;\n\t$emitInlayHintsEvent(eventHandle: number): void;\n\t$registerDocumentLinkProvider(handle: number, selector: IDocumentFilterDto[], supportsResolve: boolean): void;\n\t$registerDocumentColorProvider(handle: number, selector: IDocumentFilterDto[]): void;\n\t$registerFoldingRangeProvider(handle: number, selector: IDocumentFilterDto[], eventHandle: number | undefined): void;\n\t$emitFoldingRangeEvent(eventHandle: number, event?: any): void;\n\t$registerSelectionRangeProvider(handle: number, selector: IDocumentFilterDto[]): void;\n\t$registerCallHierarchyProvider(handle: number, selector: IDocumentFilterDto[]): void;\n\t$registerTypeHierarchyProvider(handle: number, selector: IDocumentFilterDto[]): void;\n\t$registerDocumentOnDropEditProvider(handle: number, selector: IDocumentFilterDto[]): void;\n\t$resolvePasteFileData(handle: number, requestId: number, dataIndex: number): Promise<VSBuffer>;\n\t$resolveDocumentOnDropFileData(handle: number, requestId: number, dataIndex: number): Promise<VSBuffer>;\n\t$setLanguageConfiguration(handle: number, languageId: string, configuration: ILanguageConfigurationDto): void;\n}\n\nexport interface MainThreadLanguagesShape extends IDisposable {\n\t$changeLanguage(resource: UriComponents, languageId: string): Promise<void>;\n\t$tokensAtPosition(resource: UriComponents, position: IPosition): Promise<undefined | { type: StandardTokenType; range: IRange }>;\n\t$setLanguageStatus(handle: number, status: ILanguageStatus): void;\n\t$removeLanguageStatus(handle: number): void;\n}\n\nexport interface MainThreadMessageOptions {\n\tsource?: { identifier: ExtensionIdentifier; label: string };\n\tmodal?: boolean;\n\tdetail?: string;\n\tuseCustom?: boolean;\n}\n\nexport interface MainThreadMessageServiceShape extends IDisposable {\n\t$showMessage(severity: Severity, message: string, options: MainThreadMessageOptions, commands: { title: string; isCloseAffordance: boolean; handle: number }[]): Promise<number | undefined>;\n}\n\nexport interface MainThreadOutputServiceShape extends IDisposable {\n\t$register(label: string, log: boolean, file: UriComponents, languageId: string | undefined, extensionId: string): Promise<string>;\n\t$update(channelId: string, mode: OutputChannelUpdateMode, till?: number): Promise<void>;\n\t$reveal(channelId: string, preserveFocus: boolean): Promise<void>;\n\t$close(channelId: string): Promise<void>;\n\t$dispose(channelId: string): Promise<void>;\n}\n\nexport interface MainThreadProgressShape extends IDisposable {\n\n\t$startProgress(handle: number, options: IProgressOptions, extensionId?: string): Promise<void>;\n\t$progressReport(handle: number, message: IProgressStep): void;\n\t$progressEnd(handle: number): void;\n}\n\n/**\n * A terminal that is created on the extension host side is temporarily assigned\n * a UUID by the extension host that created it. Once the renderer side has assigned\n * a real numeric id, the numeric id will be used.\n *\n * All other terminals (that are not created on the extension host side) always\n * use the numeric id.\n */\nexport type ExtHostTerminalIdentifier = number | string;\n\nexport interface TerminalLaunchConfig {\n\tname?: string;\n\tshellPath?: string;\n\tshellArgs?: string[] | string;\n\tcwd?: string | UriComponents;\n\tenv?: ITerminalEnvironment;\n\ticon?: URI | { light: URI; dark: URI } | ThemeIcon;\n\tcolor?: string;\n\tinitialText?: string;\n\twaitOnExit?: boolean;\n\tstrictEnv?: boolean;\n\thideFromUser?: boolean;\n\tisExtensionCustomPtyTerminal?: boolean;\n\tisFeatureTerminal?: boolean;\n\tisExtensionOwnedTerminal?: boolean;\n\tuseShellEnvironment?: boolean;\n\tlocation?: TerminalLocation | { viewColumn: number; preserveFocus?: boolean } | { parentTerminal: ExtHostTerminalIdentifier } | { splitActiveTerminal: boolean };\n\tisTransient?: boolean;\n}\n\nexport interface MainThreadTerminalServiceShape extends IDisposable {\n\t$createTerminal(extHostTerminalId: string, config: TerminalLaunchConfig): Promise<void>;\n\t$dispose(id: ExtHostTerminalIdentifier): void;\n\t$hide(id: ExtHostTerminalIdentifier): void;\n\t$sendText(id: ExtHostTerminalIdentifier, text: string, addNewLine: boolean): void;\n\t$show(id: ExtHostTerminalIdentifier, preserveFocus: boolean): void;\n\t$startSendingDataEvents(): void;\n\t$stopSendingDataEvents(): void;\n\t$startLinkProvider(): void;\n\t$stopLinkProvider(): void;\n\t$registerProcessSupport(isSupported: boolean): void;\n\t$registerProfileProvider(id: string, extensionIdentifier: string): void;\n\t$unregisterProfileProvider(id: string): void;\n\t$setEnvironmentVariableCollection(extensionIdentifier: string, persistent: boolean, collection: ISerializableEnvironmentVariableCollection | undefined): void;\n\n\t// Process\n\t$sendProcessData(terminalId: number, data: string): void;\n\t$sendProcessReady(terminalId: number, pid: number, cwd: string): void;\n\t$sendProcessProperty(terminalId: number, property: IProcessProperty<any>): void;\n\t$sendProcessExit(terminalId: number, exitCode: number | undefined): void;\n}\n\nexport type TransferQuickPickItemOrSeparator = TransferQuickPickItem | quickInput.IQuickPickSeparator;\nexport interface TransferQuickPickItem {\n\thandle: number;\n\n\t// shared properties from IQuickPickItem\n\ttype?: 'item';\n\tlabel: string;\n\tdescription?: string;\n\tdetail?: string;\n\tpicked?: boolean;\n\talwaysShow?: boolean;\n\tbuttons?: TransferQuickInputButton[];\n}\n\nexport interface TransferQuickInputButton extends quickInput.IQuickInputButton {\n\thandle: number;\n}\n\nexport type TransferQuickInput = TransferQuickPick | TransferInputBox;\n\nexport interface BaseTransferQuickInput {\n\n\t[key: string]: any;\n\n\tid: number;\n\n\ttitle?: string;\n\n\ttype?: 'quickPick' | 'inputBox';\n\n\tenabled?: boolean;\n\n\tbusy?: boolean;\n\n\tvisible?: boolean;\n}\n\nexport interface TransferQuickPick extends BaseTransferQuickInput {\n\n\ttype?: 'quickPick';\n\n\tvalue?: string;\n\n\tplaceholder?: string;\n\n\tbuttons?: TransferQuickInputButton[];\n\n\titems?: TransferQuickPickItemOrSeparator[];\n\n\tactiveItems?: number[];\n\n\tselectedItems?: number[];\n\n\tcanSelectMany?: boolean;\n\n\tignoreFocusOut?: boolean;\n\n\tmatchOnDescription?: boolean;\n\n\tmatchOnDetail?: boolean;\n\n\tsortByLabel?: boolean;\n}\n\nexport interface TransferInputBox extends BaseTransferQuickInput {\n\n\ttype?: 'inputBox';\n\n\tvalue?: string;\n\n\tplaceholder?: string;\n\n\tpassword?: boolean;\n\n\tbuttons?: TransferQuickInputButton[];\n\n\tprompt?: string;\n\n\tvalidationMessage?: string;\n}\n\nexport interface IInputBoxOptions {\n\ttitle?: string;\n\tvalue?: string;\n\tvalueSelection?: [number, number];\n\tprompt?: string;\n\tplaceHolder?: string;\n\tpassword?: boolean;\n\tignoreFocusOut?: boolean;\n}\n\nexport interface MainThreadQuickOpenShape extends IDisposable {\n\t$show(instance: number, options: quickInput.IPickOptions<TransferQuickPickItem>, token: CancellationToken): Promise<number | number[] | undefined>;\n\t$setItems(instance: number, items: TransferQuickPickItemOrSeparator[]): Promise<void>;\n\t$setError(instance: number, error: Error): Promise<void>;\n\t$input(options: IInputBoxOptions | undefined, validateInput: boolean, token: CancellationToken): Promise<string | undefined>;\n\t$createOrUpdate(params: TransferQuickInput): Promise<void>;\n\t$dispose(id: number): Promise<void>;\n}\n\nexport interface MainThreadStatusBarShape extends IDisposable {\n\t$setEntry(id: number, statusId: string, statusName: string, text: string, tooltip: IMarkdownString | string | undefined, command: ICommandDto | undefined, color: string | ThemeColor | undefined, backgroundColor: string | ThemeColor | undefined, alignLeft: boolean, priority: number | undefined, accessibilityInformation: IAccessibilityInformation | undefined): void;\n\t$dispose(id: number): void;\n}\n\nexport interface MainThreadStorageShape extends IDisposable {\n\t$initializeExtensionStorage(shared: boolean, extensionId: string): Promise<object | undefined>;\n\t$setValue(shared: boolean, extensionId: string, value: object): Promise<void>;\n\t$registerExtensionStorageKeysToSync(extension: IExtensionIdWithVersion, keys: string[]): void;\n}\n\nexport interface MainThreadTelemetryShape extends IDisposable {\n\t$publicLog(eventName: string, data?: any): void;\n\t$publicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>): void;\n}\n\nexport interface MainThreadEditorInsetsShape extends IDisposable {\n\t$createEditorInset(handle: number, id: string, uri: UriComponents, line: number, height: number, options: IWebviewContentOptions, extensionId: ExtensionIdentifier, extensionLocation: UriComponents): Promise<void>;\n\t$disposeEditorInset(handle: number): void;\n\n\t$setHtml(handle: number, value: string): void;\n\t$setOptions(handle: number, options: IWebviewContentOptions): void;\n\t$postMessage(handle: number, value: any): Promise<boolean>;\n}\n\nexport interface ExtHostEditorInsetsShape {\n\t$onDidDispose(handle: number): void;\n\t$onDidReceiveMessage(handle: number, message: any): void;\n}\n\n//#region --- tabs model\n\nexport const enum TabInputKind {\n\tUnknownInput,\n\tTextInput,\n\tTextDiffInput,\n\tTextMergeInput,\n\tNotebookInput,\n\tNotebookDiffInput,\n\tCustomEditorInput,\n\tWebviewEditorInput,\n\tTerminalEditorInput,\n\tInteractiveEditorInput,\n}\n\nexport const enum TabModelOperationKind {\n\tTAB_OPEN,\n\tTAB_CLOSE,\n\tTAB_UPDATE,\n\tTAB_MOVE\n}\n\nexport interface UnknownInputDto {\n\tkind: TabInputKind.UnknownInput;\n}\n\nexport interface TextInputDto {\n\tkind: TabInputKind.TextInput;\n\turi: UriComponents;\n}\n\nexport interface TextDiffInputDto {\n\tkind: TabInputKind.TextDiffInput;\n\toriginal: UriComponents;\n\tmodified: UriComponents;\n}\n\nexport interface TextMergeInputDto {\n\tkind: TabInputKind.TextMergeInput;\n\tbase: UriComponents;\n\tinput1: UriComponents;\n\tinput2: UriComponents;\n\tresult: UriComponents;\n}\n\nexport interface NotebookInputDto {\n\tkind: TabInputKind.NotebookInput;\n\tnotebookType: string;\n\turi: UriComponents;\n}\n\nexport interface NotebookDiffInputDto {\n\tkind: TabInputKind.NotebookDiffInput;\n\tnotebookType: string;\n\toriginal: UriComponents;\n\tmodified: UriComponents;\n}\n\nexport interface CustomInputDto {\n\tkind: TabInputKind.CustomEditorInput;\n\tviewType: string;\n\turi: UriComponents;\n}\n\nexport interface WebviewInputDto {\n\tkind: TabInputKind.WebviewEditorInput;\n\tviewType: string;\n}\n\nexport interface InteractiveEditorInputDto {\n\tkind: TabInputKind.InteractiveEditorInput;\n\turi: UriComponents;\n\tinputBoxUri: UriComponents;\n}\n\nexport interface TabInputDto {\n\tkind: TabInputKind.TerminalEditorInput;\n}\n\nexport type AnyInputDto = UnknownInputDto | TextInputDto | TextDiffInputDto | TextMergeInputDto | NotebookInputDto | NotebookDiffInputDto | CustomInputDto | WebviewInputDto | InteractiveEditorInputDto | TabInputDto;\n\nexport interface MainThreadEditorTabsShape extends IDisposable {\n\t// manage tabs: move, close, rearrange etc\n\t$moveTab(tabId: string, index: number, viewColumn: EditorGroupColumn, preserveFocus?: boolean): void;\n\t$closeTab(tabIds: string[], preserveFocus?: boolean): Promise<boolean>;\n\t$closeGroup(groupIds: number[], preservceFocus?: boolean): Promise<boolean>;\n}\n\nexport interface IEditorTabGroupDto {\n\tisActive: boolean;\n\tviewColumn: EditorGroupColumn;\n\t// Decided not to go with simple index here due to opening and closing causing index shifts\n\t// This allows us to patch the model without having to do full rebuilds\n\ttabs: IEditorTabDto[];\n\tgroupId: number;\n}\n\nexport interface TabOperation {\n\treadonly kind: TabModelOperationKind.TAB_OPEN | TabModelOperationKind.TAB_CLOSE | TabModelOperationKind.TAB_UPDATE | TabModelOperationKind.TAB_MOVE;\n\t// TODO @lramos15 Possibly get rid of index for tab update, it's only needed for open and close\n\treadonly index: number;\n\treadonly tabDto: IEditorTabDto;\n\treadonly groupId: number;\n\treadonly oldIndex?: number;\n}\n\nexport interface IEditorTabDto {\n\tid: string;\n\tlabel: string;\n\tinput: AnyInputDto;\n\teditorId?: string;\n\tisActive: boolean;\n\tisPinned: boolean;\n\tisPreview: boolean;\n\tisDirty: boolean;\n}\n\nexport interface IExtHostEditorTabsShape {\n\t// Accepts a whole new model\n\t$acceptEditorTabModel(tabGroups: IEditorTabGroupDto[]): void;\n\t// Only when group property changes (not the tabs inside)\n\t$acceptTabGroupUpdate(groupDto: IEditorTabGroupDto): void;\n\t// When a tab is added, removed, or updated\n\t$acceptTabOperation(operation: TabOperation): void;\n}\n\n//#endregion\n\nexport type WebviewHandle = string;\n\nexport interface WebviewPanelShowOptions {\n\treadonly viewColumn?: EditorGroupColumn;\n\treadonly preserveFocus?: boolean;\n}\n\nexport interface WebviewExtensionDescription {\n\treadonly id: ExtensionIdentifier;\n\treadonly location: UriComponents;\n}\n\nexport enum WebviewEditorCapabilities {\n\tEditable,\n\tSupportsHotExit,\n}\n\nexport interface IWebviewPortMapping {\n\treadonly webviewPort: number;\n\treadonly extensionHostPort: number;\n}\n\nexport interface IWebviewContentOptions {\n\treadonly enableScripts?: boolean;\n\treadonly enableForms?: boolean;\n\treadonly enableCommandUris?: boolean;\n\treadonly localResourceRoots?: readonly UriComponents[];\n\treadonly portMapping?: readonly IWebviewPortMapping[];\n}\n\nexport interface IWebviewPanelOptions {\n\treadonly enableFindWidget?: boolean;\n\treadonly retainContextWhenHidden?: boolean;\n}\n\nexport interface CustomTextEditorCapabilities {\n\treadonly supportsMove?: boolean;\n}\n\nexport const enum WebviewMessageArrayBufferViewType {\n\tInt8Array = 1,\n\tUint8Array = 2,\n\tUint8ClampedArray = 3,\n\tInt16Array = 4,\n\tUint16Array = 5,\n\tInt32Array = 6,\n\tUint32Array = 7,\n\tFloat32Array = 8,\n\tFloat64Array = 9,\n\tBigInt64Array = 10,\n\tBigUint64Array = 11,\n}\n\nexport interface WebviewMessageArrayBufferReference {\n\treadonly $$vscode_array_buffer_reference$$: true;\n\n\treadonly index: number;\n\n\t/**\n\t * Tracks if the reference is to a view instead of directly to an ArrayBuffer.\n\t */\n\treadonly view?: {\n\t\treadonly type: WebviewMessageArrayBufferViewType;\n\t\treadonly byteLength: number;\n\t\treadonly byteOffset: number;\n\t};\n}\n\nexport interface MainThreadWebviewsShape extends IDisposable {\n\t$setHtml(handle: WebviewHandle, value: string): void;\n\t$setOptions(handle: WebviewHandle, options: IWebviewContentOptions): void;\n\t$postMessage(handle: WebviewHandle, value: string, ...buffers: VSBuffer[]): Promise<boolean>;\n}\n\nexport interface IWebviewIconPath {\n\treadonly light: UriComponents;\n\treadonly dark: UriComponents;\n}\n\nexport interface IWebviewInitData {\n\treadonly title: string;\n\treadonly webviewOptions: IWebviewContentOptions;\n\treadonly panelOptions: IWebviewPanelOptions;\n\treadonly serializeBuffersForPostMessage: boolean;\n}\n\nexport interface MainThreadWebviewPanelsShape extends IDisposable {\n\t$createWebviewPanel(\n\t\textension: WebviewExtensionDescription,\n\t\thandle: WebviewHandle,\n\t\tviewType: string,\n\t\tinitData: IWebviewInitData,\n\t\tshowOptions: WebviewPanelShowOptions,\n\t): void;\n\t$disposeWebview(handle: WebviewHandle): void;\n\t$reveal(handle: WebviewHandle, showOptions: WebviewPanelShowOptions): void;\n\t$setTitle(handle: WebviewHandle, value: string): void;\n\t$setIconPath(handle: WebviewHandle, value: IWebviewIconPath | undefined): void;\n\n\t$registerSerializer(viewType: string, options: { serializeBuffersForPostMessage: boolean }): void;\n\t$unregisterSerializer(viewType: string): void;\n}\n\nexport interface MainThreadCustomEditorsShape extends IDisposable {\n\t$registerTextEditorProvider(extension: WebviewExtensionDescription, viewType: string, options: IWebviewPanelOptions, capabilities: CustomTextEditorCapabilities, serializeBuffersForPostMessage: boolean): void;\n\t$registerCustomEditorProvider(extension: WebviewExtensionDescription, viewType: string, options: IWebviewPanelOptions, supportsMultipleEditorsPerDocument: boolean, serializeBuffersForPostMessage: boolean): void;\n\t$unregisterEditorProvider(viewType: string): void;\n\n\t$onDidEdit(resource: UriComponents, viewType: string, editId: number, label: string | undefined): void;\n\t$onContentChange(resource: UriComponents, viewType: string): void;\n}\n\nexport interface MainThreadWebviewViewsShape extends IDisposable {\n\t$registerWebviewViewProvider(extension: WebviewExtensionDescription, viewType: string, options: { retainContextWhenHidden?: boolean; serializeBuffersForPostMessage: boolean }): void;\n\t$unregisterWebviewViewProvider(viewType: string): void;\n\n\t$setWebviewViewTitle(handle: WebviewHandle, value: string | undefined): void;\n\t$setWebviewViewDescription(handle: WebviewHandle, value: string | undefined): void;\n\t$setWebviewViewBadge(handle: WebviewHandle, badge: IViewBadge | undefined): void;\n\n\t$show(handle: WebviewHandle, preserveFocus: boolean): void;\n}\n\nexport interface WebviewPanelViewStateData {\n\t[handle: string]: {\n\t\treadonly active: boolean;\n\t\treadonly visible: boolean;\n\t\treadonly position: EditorGroupColumn;\n\t};\n}\n\nexport interface ExtHostWebviewsShape {\n\t$onMessage(handle: WebviewHandle, jsonSerializedMessage: string, buffers: SerializableObjectWithBuffers<VSBuffer[]>): void;\n\t$onMissingCsp(handle: WebviewHandle, extensionId: string): void;\n}\n\nexport interface ExtHostWebviewPanelsShape {\n\t$onDidChangeWebviewPanelViewStates(newState: WebviewPanelViewStateData): void;\n\t$onDidDisposeWebviewPanel(handle: WebviewHandle): Promise<void>;\n\t$deserializeWebviewPanel(\n\t\tnewWebviewHandle: WebviewHandle,\n\t\tviewType: string,\n\t\tinitData: {\n\t\t\ttitle: string;\n\t\t\tstate: any;\n\t\t\twebviewOptions: IWebviewContentOptions;\n\t\t\tpanelOptions: IWebviewPanelOptions;\n\t\t\tactive: boolean;\n\t\t},\n\t\tposition: EditorGroupColumn,\n\t): Promise<void>;\n}\n\nexport interface ExtHostCustomEditorsShape {\n\t$resolveWebviewEditor(\n\t\tresource: UriComponents,\n\t\tnewWebviewHandle: WebviewHandle,\n\t\tviewType: string,\n\t\tinitData: {\n\t\t\ttitle: string;\n\t\t\twebviewOptions: IWebviewContentOptions;\n\t\t\tpanelOptions: IWebviewPanelOptions;\n\t\t},\n\t\tposition: EditorGroupColumn,\n\t\tcancellation: CancellationToken\n\t): Promise<void>;\n\t$createCustomDocument(resource: UriComponents, viewType: string, backupId: string | undefined, untitledDocumentData: VSBuffer | undefined, cancellation: CancellationToken): Promise<{ editable: boolean }>;\n\t$disposeCustomDocument(resource: UriComponents, viewType: string): Promise<void>;\n\n\t$undo(resource: UriComponents, viewType: string, editId: number, isDirty: boolean): Promise<void>;\n\t$redo(resource: UriComponents, viewType: string, editId: number, isDirty: boolean): Promise<void>;\n\t$revert(resource: UriComponents, viewType: string, cancellation: CancellationToken): Promise<void>;\n\t$disposeEdits(resourceComponents: UriComponents, viewType: string, editIds: number[]): void;\n\n\t$onSave(resource: UriComponents, viewType: string, cancellation: CancellationToken): Promise<void>;\n\t$onSaveAs(resource: UriComponents, viewType: string, targetResource: UriComponents, cancellation: CancellationToken): Promise<void>;\n\n\t$backup(resource: UriComponents, viewType: string, cancellation: CancellationToken): Promise<string>;\n\n\t$onMoveCustomEditor(handle: WebviewHandle, newResource: UriComponents, viewType: string): Promise<void>;\n}\n\nexport interface ExtHostWebviewViewsShape {\n\t$resolveWebviewView(webviewHandle: WebviewHandle, viewType: string, title: string | undefined, state: any, cancellation: CancellationToken): Promise<void>;\n\n\t$onDidChangeWebviewViewVisibility(webviewHandle: WebviewHandle, visible: boolean): void;\n\n\t$disposeWebviewView(webviewHandle: WebviewHandle): void;\n}\n\nexport enum CellOutputKind {\n\tText = 1,\n\tError = 2,\n\tRich = 3\n}\n\nexport enum NotebookEditorRevealType {\n\tDefault = 0,\n\tInCenter = 1,\n\tInCenterIfOutsideViewport = 2,\n\tAtTop = 3\n}\n\nexport interface INotebookDocumentShowOptions {\n\tposition?: EditorGroupColumn;\n\tpreserveFocus?: boolean;\n\tpinned?: boolean;\n\tselections?: ICellRange[];\n}\n\nexport type INotebookCellStatusBarEntryDto = Dto<notebookCommon.INotebookCellStatusBarItem>;\n\nexport interface INotebookCellStatusBarListDto {\n\titems: INotebookCellStatusBarEntryDto[];\n\tcacheId: number;\n}\n\nexport interface MainThreadNotebookShape extends IDisposable {\n\t$registerNotebookProvider(extension: notebookCommon.NotebookExtensionDescription, viewType: string, options: notebookCommon.TransientOptions, registration: notebookCommon.INotebookContributionData | undefined): Promise<void>;\n\t$updateNotebookProviderOptions(viewType: string, options?: { transientOutputs: boolean; transientCellMetadata: notebookCommon.TransientCellMetadata; transientDocumentMetadata: notebookCommon.TransientDocumentMetadata }): Promise<void>;\n\t$unregisterNotebookProvider(viewType: string): Promise<void>;\n\n\t$registerNotebookSerializer(handle: number, extension: notebookCommon.NotebookExtensionDescription, viewType: string, options: notebookCommon.TransientOptions, registration: notebookCommon.INotebookContributionData | undefined): void;\n\t$unregisterNotebookSerializer(handle: number): void;\n\n\t$registerNotebookCellStatusBarItemProvider(handle: number, eventHandle: number | undefined, viewType: string): Promise<void>;\n\t$unregisterNotebookCellStatusBarItemProvider(handle: number, eventHandle: number | undefined): Promise<void>;\n\t$emitCellStatusBarEvent(eventHandle: number): void;\n}\n\nexport interface MainThreadNotebookEditorsShape extends IDisposable {\n\t$tryShowNotebookDocument(uriComponents: UriComponents, viewType: string, options: INotebookDocumentShowOptions): Promise<string>;\n\t$tryRevealRange(id: string, range: ICellRange, revealType: NotebookEditorRevealType): Promise<void>;\n\t$trySetSelections(id: string, range: ICellRange[]): void;\n\t$tryApplyEdits(editorId: string, modelVersionId: number, cellEdits: ICellEditOperationDto[]): Promise<boolean>;\n}\n\nexport interface MainThreadNotebookDocumentsShape extends IDisposable {\n\t$tryCreateNotebook(options: { viewType: string; content?: NotebookDataDto }): Promise<UriComponents>;\n\t$tryOpenNotebook(uriComponents: UriComponents): Promise<UriComponents>;\n\t$trySaveNotebook(uri: UriComponents): Promise<boolean>;\n}\n\nexport interface INotebookKernelDto2 {\n\tid: string;\n\tnotebookType: string;\n\textensionId: ExtensionIdentifier;\n\textensionLocation: UriComponents;\n\tlabel: string;\n\tdetail?: string;\n\tdescription?: string;\n\tkind?: string;\n\tsupportedLanguages?: string[];\n\tsupportsInterrupt?: boolean;\n\tsupportsExecutionOrder?: boolean;\n\tpreloads?: { uri: UriComponents; provides: string[] }[];\n}\n\nexport interface INotebookProxyKernelDto {\n\tid: string;\n\tnotebookType: string;\n\textensionId: ExtensionIdentifier;\n\textensionLocation: UriComponents;\n\tlabel: string;\n\tdetail?: string;\n\tdescription?: string;\n\tkind?: string;\n}\n\nexport interface ICellExecuteOutputEditDto {\n\teditType: CellExecutionUpdateType.Output;\n\tcellHandle: number;\n\tappend?: boolean;\n\toutputs: NotebookOutputDto[];\n}\n\nexport interface ICellExecuteOutputItemEditDto {\n\teditType: CellExecutionUpdateType.OutputItems;\n\tappend?: boolean;\n\toutputId: string;\n\titems: NotebookOutputItemDto[];\n}\n\nexport interface ICellExecutionStateUpdateDto extends ICellExecutionStateUpdate {\n}\n\nexport interface ICellExecutionCompleteDto extends ICellExecutionComplete {\n}\n\nexport type ICellExecuteUpdateDto = ICellExecuteOutputEditDto | ICellExecuteOutputItemEditDto | ICellExecutionStateUpdateDto;\n\nexport interface MainThreadNotebookKernelsShape extends IDisposable {\n\t$postMessage(handle: number, editorId: string | undefined, message: any): Promise<boolean>;\n\t$addKernel(handle: number, data: INotebookKernelDto2): Promise<void>;\n\t$updateKernel(handle: number, data: Partial<INotebookKernelDto2>): void;\n\t$removeKernel(handle: number): void;\n\t$updateNotebookPriority(handle: number, uri: UriComponents, value: number | undefined): void;\n\n\t$createExecution(handle: number, controllerId: string, uri: UriComponents, cellHandle: number): void;\n\t$updateExecution(handle: number, data: SerializableObjectWithBuffers<ICellExecuteUpdateDto[]>): void;\n\t$completeExecution(handle: number, data: SerializableObjectWithBuffers<ICellExecutionCompleteDto>): void;\n}\n\nexport interface MainThreadNotebookRenderersShape extends IDisposable {\n\t$postMessage(editorId: string | undefined, rendererId: string, message: unknown): Promise<boolean>;\n}\n\nexport interface MainThreadInteractiveShape extends IDisposable {\n}\n\nexport interface MainThreadUrlsShape extends IDisposable {\n\t$registerUriHandler(handle: number, extensionId: ExtensionIdentifier): Promise<void>;\n\t$unregisterUriHandler(handle: number): Promise<void>;\n\t$createAppUri(uri: UriComponents): Promise<UriComponents>;\n}\n\nexport interface ExtHostUrlsShape {\n\t$handleExternalUri(handle: number, uri: UriComponents): Promise<void>;\n}\n\nexport interface MainThreadUriOpenersShape extends IDisposable {\n\t$registerUriOpener(id: string, schemes: readonly string[], extensionId: ExtensionIdentifier, label: string): Promise<void>;\n\t$unregisterUriOpener(id: string): Promise<void>;\n}\n\nexport interface ExtHostUriOpenersShape {\n\t$canOpenUri(id: string, uri: UriComponents, token: CancellationToken): Promise<languages.ExternalUriOpenerPriority>;\n\t$openUri(id: string, context: { resolvedUri: UriComponents; sourceUri: UriComponents }, token: CancellationToken): Promise<void>;\n}\n\nexport interface ITextSearchComplete {\n\tlimitHit?: boolean;\n}\n\nexport interface MainThreadWorkspaceShape extends IDisposable {\n\t$startFileSearch(includePattern: string | null, includeFolder: UriComponents | null, excludePatternOrDisregardExcludes: string | false | null, maxResults: number | null, token: CancellationToken): Promise<UriComponents[] | null>;\n\t$startTextSearch(query: search.IPatternInfo, folder: UriComponents | null, options: ITextQueryBuilderOptions, requestId: number, token: CancellationToken): Promise<ITextSearchComplete | null>;\n\t$checkExists(folders: readonly UriComponents[], includes: string[], token: CancellationToken): Promise<boolean>;\n\t$saveAll(includeUntitled?: boolean): Promise<boolean>;\n\t$updateWorkspaceFolders(extensionName: string, index: number, deleteCount: number, workspaceFoldersToAdd: { uri: UriComponents; name?: string }[]): Promise<void>;\n\t$resolveProxy(url: string): Promise<string | undefined>;\n\t$requestWorkspaceTrust(options?: WorkspaceTrustRequestOptions): Promise<boolean | undefined>;\n}\n\nexport interface IFileChangeDto {\n\tresource: UriComponents;\n\ttype: files.FileChangeType;\n}\n\nexport interface MainThreadFileSystemShape extends IDisposable {\n\t$registerFileSystemProvider(handle: number, scheme: string, capabilities: files.FileSystemProviderCapabilities): Promise<void>;\n\t$unregisterProvider(handle: number): void;\n\t$onFileSystemChange(handle: number, resource: IFileChangeDto[]): void;\n\n\t$stat(uri: UriComponents): Promise<files.IStat>;\n\t$readdir(resource: UriComponents): Promise<[string, files.FileType][]>;\n\t$readFile(resource: UriComponents): Promise<VSBuffer>;\n\t$writeFile(resource: UriComponents, content: VSBuffer): Promise<void>;\n\t$rename(resource: UriComponents, target: UriComponents, opts: files.IFileOverwriteOptions): Promise<void>;\n\t$copy(resource: UriComponents, target: UriComponents, opts: files.IFileOverwriteOptions): Promise<void>;\n\t$mkdir(resource: UriComponents): Promise<void>;\n\t$delete(resource: UriComponents, opts: files.IFileDeleteOptions): Promise<void>;\n\n\t$watch(extensionId: string, session: number, resource: UriComponents, opts: files.IWatchOptions): void;\n\t$unwatch(session: number): void;\n\n\t$ensureActivation(scheme: string): Promise<void>;\n}\n\nexport interface MainThreadLabelServiceShape extends IDisposable {\n\t$registerResourceLabelFormatter(handle: number, formatter: ResourceLabelFormatter): void;\n\t$unregisterResourceLabelFormatter(handle: number): void;\n}\n\nexport interface MainThreadSearchShape extends IDisposable {\n\t$registerFileSearchProvider(handle: number, scheme: string): void;\n\t$registerTextSearchProvider(handle: number, scheme: string): void;\n\t$unregisterProvider(handle: number): void;\n\t$handleFileMatch(handle: number, session: number, data: UriComponents[]): void;\n\t$handleTextMatch(handle: number, session: number, data: search.IRawFileMatch2[]): void;\n\t$handleTelemetry(eventName: string, data: any): void;\n}\n\nexport interface MainThreadTaskShape extends IDisposable {\n\t$createTaskId(task: tasks.ITaskDTO): Promise<string>;\n\t$registerTaskProvider(handle: number, type: string): Promise<void>;\n\t$unregisterTaskProvider(handle: number): Promise<void>;\n\t$fetchTasks(filter?: tasks.ITaskFilterDTO): Promise<tasks.ITaskDTO[]>;\n\t$getTaskExecution(value: tasks.ITaskHandleDTO | tasks.ITaskDTO): Promise<tasks.ITaskExecutionDTO>;\n\t$executeTask(task: tasks.ITaskHandleDTO | tasks.ITaskDTO): Promise<tasks.ITaskExecutionDTO>;\n\t$terminateTask(id: string): Promise<void>;\n\t$registerTaskSystem(scheme: string, info: tasks.ITaskSystemInfoDTO): void;\n\t$customExecutionComplete(id: string, result?: number): Promise<void>;\n\t$registerSupportedExecutions(custom?: boolean, shell?: boolean, process?: boolean): Promise<void>;\n}\n\nexport interface MainThreadExtensionServiceShape extends IDisposable {\n\t$getExtension(extensionId: string): Promise<Dto<IExtensionDescription> | undefined>;\n\t$activateExtension(extensionId: ExtensionIdentifier, reason: ExtensionActivationReason): Promise<void>;\n\t$onWillActivateExtension(extensionId: ExtensionIdentifier): Promise<void>;\n\t$onDidActivateExtension(extensionId: ExtensionIdentifier, codeLoadingTime: number, activateCallTime: number, activateResolvedTime: number, activationReason: ExtensionActivationReason): void;\n\t$onExtensionActivationError(extensionId: ExtensionIdentifier, error: SerializedError, missingExtensionDependency: MissingExtensionDependency | null): Promise<void>;\n\t$onExtensionRuntimeError(extensionId: ExtensionIdentifier, error: SerializedError): void;\n\t$setPerformanceMarks(marks: performance.PerformanceMark[]): Promise<void>;\n\t$asBrowserUri(uri: UriComponents): Promise<UriComponents>;\n}\n\nexport interface SCMProviderFeatures {\n\thasQuickDiffProvider?: boolean;\n\tcount?: number;\n\tcommitTemplate?: string;\n\tacceptInputCommand?: languages.Command;\n\tactionButton?: SCMActionButtonDto | null;\n\tstatusBarCommands?: ICommandDto[];\n}\n\nexport interface SCMActionButtonDto {\n\tcommand: ICommandDto;\n\tsecondaryCommands?: ICommandDto[][];\n\tdescription?: string;\n\tenabled: boolean;\n}\n\nexport interface SCMGroupFeatures {\n\thideWhenEmpty?: boolean;\n}\n\nexport type SCMRawResource = [\n\tnumber /*handle*/,\n\tUriComponents /*resourceUri*/,\n\t[UriComponents | ThemeIcon | undefined, UriComponents | ThemeIcon | undefined] /*icons: light, dark*/,\n\tstring /*tooltip*/,\n\tboolean /*strike through*/,\n\tboolean /*faded*/,\n\tstring /*context value*/,\n\tICommandDto | undefined /*command*/\n];\n\nexport type SCMRawResourceSplice = [\n\tnumber /* start */,\n\tnumber /* delete count */,\n\tSCMRawResource[]\n];\n\nexport type SCMRawResourceSplices = [\n\tnumber, /*handle*/\n\tSCMRawResourceSplice[]\n];\n\nexport interface MainThreadSCMShape extends IDisposable {\n\t$registerSourceControl(handle: number, id: string, label: string, rootUri: UriComponents | undefined): void;\n\t$updateSourceControl(handle: number, features: SCMProviderFeatures): void;\n\t$unregisterSourceControl(handle: number): void;\n\n\t$registerGroups(sourceControlHandle: number, groups: [number /*handle*/, string /*id*/, string /*label*/, SCMGroupFeatures][], splices: SCMRawResourceSplices[]): void;\n\t$updateGroup(sourceControlHandle: number, handle: number, features: SCMGroupFeatures): void;\n\t$updateGroupLabel(sourceControlHandle: number, handle: number, label: string): void;\n\t$unregisterGroup(sourceControlHandle: number, handle: number): void;\n\n\t$spliceResourceStates(sourceControlHandle: number, splices: SCMRawResourceSplices[]): void;\n\n\t$setInputBoxValue(sourceControlHandle: number, value: string): void;\n\t$setInputBoxPlaceholder(sourceControlHandle: number, placeholder: string): void;\n\t$setInputBoxEnablement(sourceControlHandle: number, enabled: boolean): void;\n\t$setInputBoxVisibility(sourceControlHandle: number, visible: boolean): void;\n\t$showValidationMessage(sourceControlHandle: number, message: string | IMarkdownString, type: InputValidationType): void;\n\t$setValidationProviderIsEnabled(sourceControlHandle: number, enabled: boolean): void;\n}\n\nexport type DebugSessionUUID = string;\n\nexport interface IDebugConfiguration {\n\ttype: string;\n\tname: string;\n\trequest: string;\n\t[key: string]: any;\n}\n\nexport interface IStartDebuggingOptions {\n\tparentSessionID?: DebugSessionUUID;\n\tlifecycleManagedByParent?: boolean;\n\trepl?: IDebugSessionReplMode;\n\tnoDebug?: boolean;\n\tcompact?: boolean;\n\tdebugUI?: {\n\t\tsimple?: boolean;\n\t};\n\tsuppressSaveBeforeStart?: boolean;\n}\n\nexport interface MainThreadDebugServiceShape extends IDisposable {\n\t$registerDebugTypes(debugTypes: string[]): void;\n\t$sessionCached(sessionID: string): void;\n\t$acceptDAMessage(handle: number, message: DebugProtocol.ProtocolMessage): void;\n\t$acceptDAError(handle: number, name: string, message: string, stack: string | undefined): void;\n\t$acceptDAExit(handle: number, code: number | undefined, signal: string | undefined): void;\n\t$registerDebugConfigurationProvider(type: string, triggerKind: DebugConfigurationProviderTriggerKind, hasProvideMethod: boolean, hasResolveMethod: boolean, hasResolve2Method: boolean, handle: number): Promise<void>;\n\t$registerDebugAdapterDescriptorFactory(type: string, handle: number): Promise<void>;\n\t$unregisterDebugConfigurationProvider(handle: number): void;\n\t$unregisterDebugAdapterDescriptorFactory(handle: number): void;\n\t$startDebugging(folder: UriComponents | undefined, nameOrConfig: string | IDebugConfiguration, options: IStartDebuggingOptions): Promise<boolean>;\n\t$stopDebugging(sessionId: DebugSessionUUID | undefined): Promise<void>;\n\t$setDebugSessionName(id: DebugSessionUUID, name: string): void;\n\t$customDebugAdapterRequest(id: DebugSessionUUID, command: string, args: any): Promise<any>;\n\t$getDebugProtocolBreakpoint(id: DebugSessionUUID, breakpoinId: string): Promise<DebugProtocol.Breakpoint | undefined>;\n\t$appendDebugConsole(value: string): void;\n\t$startBreakpointEvents(): void;\n\t$registerBreakpoints(breakpoints: Array<ISourceMultiBreakpointDto | IFunctionBreakpointDto | IDataBreakpointDto>): Promise<void>;\n\t$unregisterBreakpoints(breakpointIds: string[], functionBreakpointIds: string[], dataBreakpointIds: string[]): Promise<void>;\n}\n\nexport interface IOpenUriOptions {\n\treadonly allowTunneling?: boolean;\n\treadonly allowContributedOpeners?: boolean | string;\n}\n\nexport interface MainThreadWindowShape extends IDisposable {\n\t$getWindowVisibility(): Promise<boolean>;\n\t$openUri(uri: UriComponents, uriString: string | undefined, options: IOpenUriOptions): Promise<boolean>;\n\t$asExternalUri(uri: UriComponents, options: IOpenUriOptions): Promise<UriComponents>;\n}\n\nexport enum CandidatePortSource {\n\tNone = 0,\n\tProcess = 1,\n\tOutput = 2\n}\n\nexport interface PortAttributesProviderSelector {\n\tpid?: number;\n\tportRange?: [number, number];\n\tcommandMatcher?: RegExp;\n}\n\nexport interface MainThreadTunnelServiceShape extends IDisposable {\n\t$openTunnel(tunnelOptions: TunnelOptions, source: string | undefined): Promise<TunnelDto | undefined>;\n\t$closeTunnel(remote: { host: string; port: number }): Promise<void>;\n\t$getTunnels(): Promise<TunnelDescription[]>;\n\t$setTunnelProvider(features?: TunnelProviderFeatures): Promise<void>;\n\t$setRemoteTunnelService(processId: number): Promise<void>;\n\t$setCandidateFilter(): Promise<void>;\n\t$onFoundNewCandidates(candidates: CandidatePort[]): Promise<void>;\n\t$setCandidatePortSource(source: CandidatePortSource): Promise<void>;\n\t$registerPortsAttributesProvider(selector: PortAttributesProviderSelector, providerHandle: number): Promise<void>;\n\t$unregisterPortsAttributesProvider(providerHandle: number): Promise<void>;\n}\n\nexport interface MainThreadTimelineShape extends IDisposable {\n\t$registerTimelineProvider(provider: TimelineProviderDescriptor): void;\n\t$unregisterTimelineProvider(source: string): void;\n\t$emitTimelineChangeEvent(e: TimelineChangeEvent | undefined): void;\n}\n\n// -- extension host\n\nexport interface ICommandHandlerDescriptionDto {\n\treadonly description: string;\n\treadonly args: ReadonlyArray<{\n\t\treadonly name: string;\n\t\treadonly isOptional?: boolean;\n\t\treadonly description?: string;\n\t}>;\n\treadonly returns?: string;\n}\n\nexport interface ExtHostCommandsShape {\n\t$executeContributedCommand(id: string, ...args: any[]): Promise<unknown>;\n\t$getContributedCommandHandlerDescriptions(): Promise<{ [id: string]: string | ICommandHandlerDescriptionDto }>;\n}\n\nexport interface ExtHostConfigurationShape {\n\t$initializeConfiguration(data: IConfigurationInitData): void;\n\t$acceptConfigurationChanged(data: IConfigurationInitData, change: IConfigurationChange): void;\n}\n\nexport interface ExtHostDiagnosticsShape {\n\t$acceptMarkersChange(data: [UriComponents, IMarkerData[]][]): void;\n}\n\nexport interface ExtHostDocumentContentProvidersShape {\n\t$provideTextDocumentContent(handle: number, uri: UriComponents): Promise<string | null | undefined>;\n}\n\nexport interface IModelAddedData {\n\turi: UriComponents;\n\tversionId: number;\n\tlines: string[];\n\tEOL: string;\n\tlanguageId: string;\n\tisDirty: boolean;\n}\nexport interface ExtHostDocumentsShape {\n\t$acceptModelLanguageChanged(strURL: UriComponents, newLanguageId: string): void;\n\t$acceptModelSaved(strURL: UriComponents): void;\n\t$acceptDirtyStateChanged(strURL: UriComponents, isDirty: boolean): void;\n\t$acceptModelChanged(strURL: UriComponents, e: IModelChangedEvent, isDirty: boolean): void;\n}\n\nexport interface ExtHostDocumentSaveParticipantShape {\n\t$participateInSave(resource: UriComponents, reason: SaveReason): Promise<boolean[]>;\n}\n\nexport interface ITextEditorAddData {\n\tid: string;\n\tdocumentUri: UriComponents;\n\toptions: IResolvedTextEditorConfiguration;\n\tselections: ISelection[];\n\tvisibleRanges: IRange[];\n\teditorPosition: EditorGroupColumn | undefined;\n}\nexport interface ITextEditorPositionData {\n\t[id: string]: EditorGroupColumn;\n}\nexport interface IEditorPropertiesChangeData {\n\toptions: IResolvedTextEditorConfiguration | null;\n\tselections: ISelectionChangeEvent | null;\n\tvisibleRanges: IRange[] | null;\n}\nexport interface ISelectionChangeEvent {\n\tselections: Selection[];\n\tsource?: string;\n}\n\nexport interface ExtHostEditorsShape {\n\t$acceptEditorPropertiesChanged(id: string, props: IEditorPropertiesChangeData): void;\n\t$acceptEditorPositionData(data: ITextEditorPositionData): void;\n}\n\nexport interface IDocumentsAndEditorsDelta {\n\tremovedDocuments?: UriComponents[];\n\taddedDocuments?: IModelAddedData[];\n\tremovedEditors?: string[];\n\taddedEditors?: ITextEditorAddData[];\n\tnewActiveEditor?: string | null;\n}\n\nexport interface ExtHostDocumentsAndEditorsShape {\n\t$acceptDocumentsAndEditorsDelta(delta: IDocumentsAndEditorsDelta): void;\n}\n\nexport interface IDataTransferFileDTO {\n\treadonly name: string;\n\treadonly uri?: UriComponents;\n}\n\nexport interface DataTransferItemDTO {\n\treadonly asString: string;\n\treadonly fileData: IDataTransferFileDTO | undefined;\n}\n\nexport interface DataTransferDTO {\n\treadonly items: Array<[/* type */string, DataTransferItemDTO]>;\n}\n\nexport interface ExtHostTreeViewsShape {\n\t$getChildren(treeViewId: string, treeItemHandle?: string): Promise<ITreeItem[] | undefined>;\n\t$handleDrop(destinationViewId: string, requestId: number, treeDataTransfer: DataTransferDTO, targetHandle: string | undefined, token: CancellationToken, operationUuid?: string, sourceViewId?: string, sourceTreeItemHandles?: string[]): Promise<void>;\n\t$handleDrag(sourceViewId: string, sourceTreeItemHandles: string[], operationUuid: string, token: CancellationToken): Promise<DataTransferDTO | undefined>;\n\t$setExpanded(treeViewId: string, treeItemHandle: string, expanded: boolean): void;\n\t$setSelection(treeViewId: string, treeItemHandles: string[]): void;\n\t$setVisible(treeViewId: string, visible: boolean): void;\n\t$hasResolve(treeViewId: string): Promise<boolean>;\n\t$resolve(treeViewId: string, treeItemHandle: string, token: CancellationToken): Promise<ITreeItem | undefined>;\n}\n\nexport interface ExtHostWorkspaceShape {\n\t$initializeWorkspace(workspace: IWorkspaceData | null, trusted: boolean): void;\n\t$acceptWorkspaceData(workspace: IWorkspaceData | null): void;\n\t$handleTextSearchResult(result: search.IRawFileMatch2, requestId: number): void;\n\t$onDidGrantWorkspaceTrust(): void;\n}\n\nexport interface ExtHostFileSystemInfoShape {\n\t$acceptProviderInfos(uri: UriComponents, capabilities: number | null): void;\n}\n\nexport interface ExtHostFileSystemShape {\n\t$stat(handle: number, resource: UriComponents): Promise<files.IStat>;\n\t$readdir(handle: number, resource: UriComponents): Promise<[string, files.FileType][]>;\n\t$readFile(handle: number, resource: UriComponents): Promise<VSBuffer>;\n\t$writeFile(handle: number, resource: UriComponents, content: VSBuffer, opts: files.IFileWriteOptions): Promise<void>;\n\t$rename(handle: number, resource: UriComponents, target: UriComponents, opts: files.IFileOverwriteOptions): Promise<void>;\n\t$copy(handle: number, resource: UriComponents, target: UriComponents, opts: files.IFileOverwriteOptions): Promise<void>;\n\t$mkdir(handle: number, resource: UriComponents): Promise<void>;\n\t$delete(handle: number, resource: UriComponents, opts: files.IFileDeleteOptions): Promise<void>;\n\t$watch(handle: number, session: number, resource: UriComponents, opts: files.IWatchOptions): void;\n\t$unwatch(handle: number, session: number): void;\n\t$open(handle: number, resource: UriComponents, opts: files.IFileOpenOptions): Promise<number>;\n\t$close(handle: number, fd: number): Promise<void>;\n\t$read(handle: number, fd: number, pos: number, length: number): Promise<VSBuffer>;\n\t$write(handle: number, fd: number, pos: number, data: VSBuffer): Promise<number>;\n}\n\nexport interface ExtHostLabelServiceShape {\n\t$registerResourceLabelFormatter(formatter: ResourceLabelFormatter): IDisposable;\n}\n\nexport interface ExtHostAuthenticationShape {\n\t$getSessions(id: string, scopes?: string[]): Promise<ReadonlyArray<AuthenticationSession>>;\n\t$createSession(id: string, scopes: string[]): Promise<AuthenticationSession>;\n\t$removeSession(id: string, sessionId: string): Promise<void>;\n\t$onDidChangeAuthenticationSessions(id: string, label: string): Promise<void>;\n\t$setProviders(providers: AuthenticationProviderInformation[]): Promise<void>;\n}\n\nexport interface ExtHostSecretStateShape {\n\t$onDidChangePassword(e: { extensionId: string; key: string }): Promise<void>;\n}\n\nexport interface ExtHostSearchShape {\n\t$enableExtensionHostSearch(): void;\n\t$provideFileSearchResults(handle: number, session: number, query: search.IRawQuery, token: CancellationToken): Promise<search.ISearchCompleteStats>;\n\t$provideTextSearchResults(handle: number, session: number, query: search.IRawTextQuery, token: CancellationToken): Promise<search.ISearchCompleteStats>;\n\t$clearCache(cacheKey: string): Promise<void>;\n}\n\nexport interface ExtHostExtensionServiceShape {\n\t$resolveAuthority(remoteAuthority: string, resolveAttempt: number): Promise<IResolveAuthorityResult>;\n\t/**\n\t * Returns `null` if no resolver for `remoteAuthority` is found.\n\t */\n\t$getCanonicalURI(remoteAuthority: string, uri: UriComponents): Promise<UriComponents | null>;\n\t$startExtensionHost(extensionsDelta: IExtensionDescriptionDelta): Promise<void>;\n\t$extensionTestsExecute(): Promise<number>;\n\t$activateByEvent(activationEvent: string, activationKind: ActivationKind): Promise<void>;\n\t$activate(extensionId: ExtensionIdentifier, reason: ExtensionActivationReason): Promise<boolean>;\n\t$setRemoteEnvironment(env: { [key: string]: string | null }): Promise<void>;\n\t$updateRemoteConnectionData(connectionData: IRemoteConnectionData): Promise<void>;\n\n\t$deltaExtensions(extensionsDelta: IExtensionDescriptionDelta): Promise<void>;\n\n\t$test_latency(n: number): Promise<number>;\n\t$test_up(b: VSBuffer): Promise<number>;\n\t$test_down(size: number): Promise<VSBuffer>;\n}\n\nexport interface FileSystemEvents {\n\tcreated: UriComponents[];\n\tchanged: UriComponents[];\n\tdeleted: UriComponents[];\n}\n\nexport interface SourceTargetPair {\n\tsource?: UriComponents;\n\ttarget: UriComponents;\n}\n\nexport interface IWillRunFileOperationParticipation {\n\tedit: IWorkspaceEditDto;\n\textensionNames: string[];\n}\n\nexport interface ExtHostFileSystemEventServiceShape {\n\t$onFileEvent(events: FileSystemEvents): void;\n\t$onWillRunFileOperation(operation: files.FileOperation, files: readonly SourceTargetPair[], timeout: number, token: CancellationToken): Promise<IWillRunFileOperationParticipation | undefined>;\n\t$onDidRunFileOperation(operation: files.FileOperation, files: readonly SourceTargetPair[]): void;\n}\n\nexport interface ExtHostLanguagesShape {\n\t$acceptLanguageIds(ids: string[]): void;\n}\n\nexport interface ExtHostHeapServiceShape {\n\t$onGarbageCollection(ids: number[]): void;\n}\nexport interface IRawColorInfo {\n\tcolor: [number, number, number, number];\n\trange: IRange;\n}\n\nexport class IdObject {\n\t_id?: number;\n\tprivate static _n = 0;\n\tstatic mixin<T extends object>(object: T): T & IdObject {\n\t\t(<any>object)._id = IdObject._n++;\n\t\treturn <any>object;\n\t}\n}\n\nexport const enum ISuggestDataDtoField {\n\tlabel = 'a',\n\tkind = 'b',\n\tdetail = 'c',\n\tdocumentation = 'd',\n\tsortText = 'e',\n\tfilterText = 'f',\n\tpreselect = 'g',\n\tinsertText = 'h',\n\tinsertTextRules = 'i',\n\trange = 'j',\n\tcommitCharacters = 'k',\n\tadditionalTextEdits = 'l',\n\tcommand = 'm',\n\tkindModifier = 'n',\n}\n\nexport interface ISuggestDataDto {\n\t[ISuggestDataDtoField.label]: string | languages.CompletionItemLabel;\n\t[ISuggestDataDtoField.kind]?: languages.CompletionItemKind;\n\t[ISuggestDataDtoField.detail]?: string;\n\t[ISuggestDataDtoField.documentation]?: string | IMarkdownString;\n\t[ISuggestDataDtoField.sortText]?: string;\n\t[ISuggestDataDtoField.filterText]?: string;\n\t[ISuggestDataDtoField.preselect]?: true;\n\t[ISuggestDataDtoField.insertText]?: string;\n\t[ISuggestDataDtoField.insertTextRules]?: languages.CompletionItemInsertTextRule;\n\t[ISuggestDataDtoField.range]?: IRange | { insert: IRange; replace: IRange };\n\t[ISuggestDataDtoField.commitCharacters]?: string[];\n\t[ISuggestDataDtoField.additionalTextEdits]?: ISingleEditOperation[];\n\t[ISuggestDataDtoField.command]?: languages.Command;\n\t[ISuggestDataDtoField.kindModifier]?: languages.CompletionItemTag[];\n\t// not-standard\n\tx?: ChainedCacheId;\n}\n\nexport const enum ISuggestResultDtoField {\n\tdefaultRanges = 'a',\n\tcompletions = 'b',\n\tisIncomplete = 'c',\n\tduration = 'd',\n}\n\nexport interface ISuggestResultDto {\n\t[ISuggestResultDtoField.defaultRanges]: { insert: IRange; replace: IRange };\n\t[ISuggestResultDtoField.completions]: ISuggestDataDto[];\n\t[ISuggestResultDtoField.isIncomplete]: undefined | true;\n\t[ISuggestResultDtoField.duration]: number;\n\tx?: number;\n}\n\nexport interface ISignatureHelpDto {\n\tid: CacheId;\n\tsignatures: languages.SignatureInformation[];\n\tactiveSignature: number;\n\tactiveParameter: number;\n}\n\nexport interface ISignatureHelpContextDto {\n\treadonly triggerKind: languages.SignatureHelpTriggerKind;\n\treadonly triggerCharacter: string | undefined;\n\treadonly isRetrigger: boolean;\n\treadonly activeSignatureHelp: ISignatureHelpDto | undefined;\n}\n\nexport type IInlayHintDto = CachedSessionItem<Dto<languages.InlayHint>>;\n\nexport type IInlayHintsDto = CachedSession<{ hints: IInlayHintDto[] }>;\n\nexport type ILocationDto = Dto<languages.Location>;\nexport type ILocationLinkDto = Dto<languages.LocationLink>;\n\nexport type IWorkspaceSymbolDto = CachedSessionItem<Dto<IWorkspaceSymbol>>;\nexport type IWorkspaceSymbolsDto = CachedSession<{ symbols: IWorkspaceSymbolDto[] }>;\n\nexport interface IWorkspaceEditEntryMetadataDto {\n\tneedsConfirmation: boolean;\n\tlabel: string;\n\tdescription?: string;\n\ticonPath?: { id: string } | UriComponents | { light: UriComponents; dark: UriComponents };\n}\n\n\nexport type ICellEditOperationDto =\n\tnotebookCommon.ICellPartialMetadataEdit\n\t| notebookCommon.IDocumentMetadataEdit\n\t| {\n\t\teditType: notebookCommon.CellEditType.Replace;\n\t\tindex: number;\n\t\tcount: number;\n\t\tcells: NotebookCellDataDto[];\n\t};\n\nexport type IWorkspaceCellEditDto = Dto<Omit<notebookCommon.IWorkspaceNotebookCellEdit, 'cellEdit'>> & { cellEdit: ICellEditOperationDto };\n\nexport type IWorkspaceFileEditDto = Dto<languages.IWorkspaceFileEdit>;\n\nexport type IWorkspaceTextEditDto = Dto<languages.IWorkspaceTextEdit>;\n\nexport interface IWorkspaceEditDto {\n\tedits: Array<IWorkspaceFileEditDto | IWorkspaceTextEditDto | IWorkspaceCellEditDto>;\n}\n\nexport function reviveWorkspaceEditDto(data: IWorkspaceEditDto | undefined): languages.WorkspaceEdit | undefined {\n\tif (data && data.edits) {\n\t\trevive<languages.WorkspaceEdit>(data);\n\t}\n\treturn <languages.WorkspaceEdit>data;\n}\n\nexport type ICommandDto = { $ident?: number } & languages.Command;\n\nexport interface ICodeActionDto {\n\tcacheId?: ChainedCacheId;\n\ttitle: string;\n\tedit?: IWorkspaceEditDto;\n\tdiagnostics?: Dto<IMarkerData[]>;\n\tcommand?: ICommandDto;\n\tkind?: string;\n\tisPreferred?: boolean;\n\tdisabled?: string;\n}\n\nexport interface ICodeActionListDto {\n\tcacheId: CacheId;\n\tactions: ReadonlyArray<ICodeActionDto>;\n}\n\nexport interface ICodeActionProviderMetadataDto {\n\treadonly providedKinds?: readonly string[];\n\treadonly documentation?: ReadonlyArray<{ readonly kind: string; readonly command: ICommandDto }>;\n}\n\nexport type CacheId = number;\nexport type ChainedCacheId = [CacheId, CacheId];\n\ntype CachedSessionItem<T> = T & { cacheId?: ChainedCacheId };\ntype CachedSession<T> = T & { cacheId?: CacheId };\n\nexport type ILinksListDto = CachedSession<{ links: ILinkDto[] }>;\nexport type ILinkDto = CachedSessionItem<Dto<languages.ILink>>;\n\nexport type ICodeLensListDto = CachedSession<{ lenses: ICodeLensDto[] }>;\nexport type ICodeLensDto = CachedSessionItem<Dto<languages.CodeLens>>;\n\nexport type ICallHierarchyItemDto = Dto<CallHierarchyItem>;\n\nexport interface IIncomingCallDto {\n\tfrom: ICallHierarchyItemDto;\n\tfromRanges: IRange[];\n}\n\nexport interface IOutgoingCallDto {\n\tfromRanges: IRange[];\n\tto: ICallHierarchyItemDto;\n}\n\nexport interface ILanguageWordDefinitionDto {\n\tlanguageId: string;\n\tregexSource: string;\n\tregexFlags: string;\n}\n\nexport interface ILinkedEditingRangesDto {\n\tranges: IRange[];\n\twordPattern?: IRegExpDto;\n}\n\nexport interface IInlineValueContextDto {\n\tframeId: number;\n\tstoppedLocation: IRange;\n}\n\nexport type ITypeHierarchyItemDto = Dto<TypeHierarchyItem>;\n\nexport interface IPasteEditDto {\n\tinsertText: string | { snippet: string };\n\tadditionalEdit?: IWorkspaceEditDto;\n}\n\nexport interface IDocumentOnDropEditDto {\n\tinsertText: string | { snippet: string };\n\tadditionalEdit?: IWorkspaceEditDto;\n}\n\nexport interface ExtHostLanguageFeaturesShape {\n\t$provideDocumentSymbols(handle: number, resource: UriComponents, token: CancellationToken): Promise<languages.DocumentSymbol[] | undefined>;\n\t$provideCodeLenses(handle: number, resource: UriComponents, token: CancellationToken): Promise<ICodeLensListDto | undefined>;\n\t$resolveCodeLens(handle: number, symbol: ICodeLensDto, token: CancellationToken): Promise<ICodeLensDto | undefined>;\n\t$releaseCodeLenses(handle: number, id: number): void;\n\t$provideDefinition(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<ILocationLinkDto[]>;\n\t$provideDeclaration(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<ILocationLinkDto[]>;\n\t$provideImplementation(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<ILocationLinkDto[]>;\n\t$provideTypeDefinition(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<ILocationLinkDto[]>;\n\t$provideHover(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<languages.Hover | undefined>;\n\t$provideEvaluatableExpression(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<languages.EvaluatableExpression | undefined>;\n\t$provideInlineValues(handle: number, resource: UriComponents, range: IRange, context: languages.InlineValueContext, token: CancellationToken): Promise<languages.InlineValue[] | undefined>;\n\t$provideDocumentHighlights(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<languages.DocumentHighlight[] | undefined>;\n\t$provideLinkedEditingRanges(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<ILinkedEditingRangesDto | undefined>;\n\t$provideReferences(handle: number, resource: UriComponents, position: IPosition, context: languages.ReferenceContext, token: CancellationToken): Promise<ILocationDto[] | undefined>;\n\t$provideCodeActions(handle: number, resource: UriComponents, rangeOrSelection: IRange | ISelection, context: languages.CodeActionContext, token: CancellationToken): Promise<ICodeActionListDto | undefined>;\n\t$resolveCodeAction(handle: number, id: ChainedCacheId, token: CancellationToken): Promise<IWorkspaceEditDto | undefined>;\n\t$releaseCodeActions(handle: number, cacheId: number): void;\n\t$prepareDocumentPaste(handle: number, uri: UriComponents, ranges: readonly IRange[], dataTransfer: DataTransferDTO, token: CancellationToken): Promise<DataTransferDTO | undefined>;\n\t$providePasteEdits(handle: number, requestId: number, uri: UriComponents, ranges: IRange[], dataTransfer: DataTransferDTO, token: CancellationToken): Promise<IPasteEditDto | undefined>;\n\t$provideDocumentFormattingEdits(handle: number, resource: UriComponents, options: languages.FormattingOptions, token: CancellationToken): Promise<ISingleEditOperation[] | undefined>;\n\t$provideDocumentRangeFormattingEdits(handle: number, resource: UriComponents, range: IRange, options: languages.FormattingOptions, token: CancellationToken): Promise<ISingleEditOperation[] | undefined>;\n\t$provideOnTypeFormattingEdits(handle: number, resource: UriComponents, position: IPosition, ch: string, options: languages.FormattingOptions, token: CancellationToken): Promise<ISingleEditOperation[] | undefined>;\n\t$provideWorkspaceSymbols(handle: number, search: string, token: CancellationToken): Promise<IWorkspaceSymbolsDto>;\n\t$resolveWorkspaceSymbol(handle: number, symbol: IWorkspaceSymbolDto, token: CancellationToken): Promise<IWorkspaceSymbolDto | undefined>;\n\t$releaseWorkspaceSymbols(handle: number, id: number): void;\n\t$provideRenameEdits(handle: number, resource: UriComponents, position: IPosition, newName: string, token: CancellationToken): Promise<IWorkspaceEditDto & { rejectReason?: string } | undefined>;\n\t$resolveRenameLocation(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<languages.RenameLocation | undefined>;\n\t$provideDocumentSemanticTokens(handle: number, resource: UriComponents, previousResultId: number, token: CancellationToken): Promise<VSBuffer | null>;\n\t$releaseDocumentSemanticTokens(handle: number, semanticColoringResultId: number): void;\n\t$provideDocumentRangeSemanticTokens(handle: number, resource: UriComponents, range: IRange, token: CancellationToken): Promise<VSBuffer | null>;\n\t$provideCompletionItems(handle: number, resource: UriComponents, position: IPosition, context: languages.CompletionContext, token: CancellationToken): Promise<ISuggestResultDto | undefined>;\n\t$resolveCompletionItem(handle: number, id: ChainedCacheId, token: CancellationToken): Promise<ISuggestDataDto | undefined>;\n\t$releaseCompletionItems(handle: number, id: number): void;\n\t$provideInlineCompletions(handle: number, resource: UriComponents, position: IPosition, context: languages.InlineCompletionContext, token: CancellationToken): Promise<IdentifiableInlineCompletions | undefined>;\n\t$handleInlineCompletionDidShow(handle: number, pid: number, idx: number): void;\n\t$freeInlineCompletionsList(handle: number, pid: number): void;\n\t$provideSignatureHelp(handle: number, resource: UriComponents, position: IPosition, context: languages.SignatureHelpContext, token: CancellationToken): Promise<ISignatureHelpDto | undefined>;\n\t$releaseSignatureHelp(handle: number, id: number): void;\n\t$provideInlayHints(handle: number, resource: UriComponents, range: IRange, token: CancellationToken): Promise<IInlayHintsDto | undefined>;\n\t$resolveInlayHint(handle: number, id: ChainedCacheId, token: CancellationToken): Promise<IInlayHintDto | undefined>;\n\t$releaseInlayHints(handle: number, id: number): void;\n\t$provideDocumentLinks(handle: number, resource: UriComponents, token: CancellationToken): Promise<ILinksListDto | undefined>;\n\t$resolveDocumentLink(handle: number, id: ChainedCacheId, token: CancellationToken): Promise<ILinkDto | undefined>;\n\t$releaseDocumentLinks(handle: number, id: number): void;\n\t$provideDocumentColors(handle: number, resource: UriComponents, token: CancellationToken): Promise<IRawColorInfo[]>;\n\t$provideColorPresentations(handle: number, resource: UriComponents, colorInfo: IRawColorInfo, token: CancellationToken): Promise<languages.IColorPresentation[] | undefined>;\n\t$provideFoldingRanges(handle: number, resource: UriComponents, context: languages.FoldingContext, token: CancellationToken): Promise<languages.FoldingRange[] | undefined>;\n\t$provideSelectionRanges(handle: number, resource: UriComponents, positions: IPosition[], token: CancellationToken): Promise<languages.SelectionRange[][]>;\n\t$prepareCallHierarchy(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<ICallHierarchyItemDto[] | undefined>;\n\t$provideCallHierarchyIncomingCalls(handle: number, sessionId: string, itemId: string, token: CancellationToken): Promise<IIncomingCallDto[] | undefined>;\n\t$provideCallHierarchyOutgoingCalls(handle: number, sessionId: string, itemId: string, token: CancellationToken): Promise<IOutgoingCallDto[] | undefined>;\n\t$releaseCallHierarchy(handle: number, sessionId: string): void;\n\t$setWordDefinitions(wordDefinitions: ILanguageWordDefinitionDto[]): void;\n\t$prepareTypeHierarchy(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<ITypeHierarchyItemDto[] | undefined>;\n\t$provideTypeHierarchySupertypes(handle: number, sessionId: string, itemId: string, token: CancellationToken): Promise<ITypeHierarchyItemDto[] | undefined>;\n\t$provideTypeHierarchySubtypes(handle: number, sessionId: string, itemId: string, token: CancellationToken): Promise<ITypeHierarchyItemDto[] | undefined>;\n\t$releaseTypeHierarchy(handle: number, sessionId: string): void;\n\t$provideDocumentOnDropEdits(handle: number, requestId: number, resource: UriComponents, position: IPosition, dataTransferDto: DataTransferDTO, token: CancellationToken): Promise<IDocumentOnDropEditDto | undefined>;\n}\n\nexport interface ExtHostQuickOpenShape {\n\t$onItemSelected(handle: number): void;\n\t$validateInput(input: string): Promise<string | { content: string; severity: Severity } | null | undefined>;\n\t$onDidChangeActive(sessionId: number, handles: number[]): void;\n\t$onDidChangeSelection(sessionId: number, handles: number[]): void;\n\t$onDidAccept(sessionId: number): void;\n\t$onDidChangeValue(sessionId: number, value: string): void;\n\t$onDidTriggerButton(sessionId: number, handle: number): void;\n\t$onDidTriggerItemButton(sessionId: number, itemHandle: number, buttonHandle: number): void;\n\t$onDidHide(sessionId: number): void;\n}\n\nexport interface ExtHostTelemetryShape {\n\t$initializeTelemetryLevel(level: TelemetryLevel, productConfig?: { usage: boolean; error: boolean }): void;\n\t$onDidChangeTelemetryLevel(level: TelemetryLevel): void;\n}\n\nexport interface ITerminalLinkDto {\n\t/** The ID of the link to enable activation and disposal. */\n\tid: number;\n\t/** The startIndex of the link in the line. */\n\tstartIndex: number;\n\t/** The length of the link in the line. */\n\tlength: number;\n\t/** The descriptive label for what the link does when activated. */\n\tlabel?: string;\n}\n\nexport interface ITerminalDimensionsDto {\n\tcolumns: number;\n\trows: number;\n}\n\nexport interface ExtHostTerminalServiceShape {\n\t$acceptTerminalClosed(id: number, exitCode: number | undefined, exitReason: TerminalExitReason): void;\n\t$acceptTerminalOpened(id: number, extHostTerminalId: string | undefined, name: string, shellLaunchConfig: IShellLaunchConfigDto): void;\n\t$acceptActiveTerminalChanged(id: number | null): void;\n\t$acceptTerminalProcessId(id: number, processId: number): void;\n\t$acceptTerminalProcessData(id: number, data: string): void;\n\t$acceptTerminalTitleChange(id: number, name: string): void;\n\t$acceptTerminalDimensions(id: number, cols: number, rows: number): void;\n\t$acceptTerminalMaximumDimensions(id: number, cols: number, rows: number): void;\n\t$acceptTerminalInteraction(id: number): void;\n\t$startExtensionTerminal(id: number, initialDimensions: ITerminalDimensionsDto | undefined): Promise<ITerminalLaunchError | undefined>;\n\t$acceptProcessAckDataEvent(id: number, charCount: number): void;\n\t$acceptProcessInput(id: number, data: string): void;\n\t$acceptProcessResize(id: number, cols: number, rows: number): void;\n\t$acceptProcessShutdown(id: number, immediate: boolean): void;\n\t$acceptProcessRequestInitialCwd(id: number): void;\n\t$acceptProcessRequestCwd(id: number): void;\n\t$acceptProcessRequestLatency(id: number): Promise<number>;\n\t$provideLinks(id: number, line: string): Promise<ITerminalLinkDto[]>;\n\t$activateLink(id: number, linkId: number): void;\n\t$initEnvironmentVariableCollections(collections: [string, ISerializableEnvironmentVariableCollection][]): void;\n\t$acceptDefaultProfile(profile: ITerminalProfile, automationProfile: ITerminalProfile): void;\n\t$createContributedProfileTerminal(id: string, options: ICreateContributedTerminalProfileOptions): Promise<void>;\n}\n\nexport interface ExtHostSCMShape {\n\t$provideOriginalResource(sourceControlHandle: number, uri: UriComponents, token: CancellationToken): Promise<UriComponents | null>;\n\t$onInputBoxValueChange(sourceControlHandle: number, value: string): void;\n\t$executeResourceCommand(sourceControlHandle: number, groupHandle: number, handle: number, preserveFocus: boolean): Promise<void>;\n\t$validateInput(sourceControlHandle: number, value: string, cursorPosition: number): Promise<[string | IMarkdownString, number] | undefined>;\n\t$setSelectedSourceControl(selectedSourceControlHandle: number | undefined): Promise<void>;\n}\n\nexport interface ExtHostTaskShape {\n\t$provideTasks(handle: number, validTypes: { [key: string]: boolean }): Promise<tasks.ITaskSetDTO>;\n\t$resolveTask(handle: number, taskDTO: tasks.ITaskDTO): Promise<tasks.ITaskDTO | undefined>;\n\t$onDidStartTask(execution: tasks.ITaskExecutionDTO, terminalId: number, resolvedDefinition: tasks.ITaskDefinitionDTO): void;\n\t$onDidStartTaskProcess(value: tasks.ITaskProcessStartedDTO): void;\n\t$onDidEndTaskProcess(value: tasks.ITaskProcessEndedDTO): void;\n\t$OnDidEndTask(execution: tasks.ITaskExecutionDTO): void;\n\t$resolveVariables(workspaceFolder: UriComponents, toResolve: { process?: { name: string; cwd?: string }; variables: string[] }): Promise<{ process?: string; variables: { [key: string]: string } }>;\n\t$jsonTasksSupported(): Promise<boolean>;\n\t$findExecutable(command: string, cwd?: string, paths?: string[]): Promise<string | undefined>;\n}\n\nexport interface IBreakpointDto {\n\ttype: string;\n\tid?: string;\n\tenabled: boolean;\n\tcondition?: string;\n\thitCondition?: string;\n\tlogMessage?: string;\n}\n\nexport interface IFunctionBreakpointDto extends IBreakpointDto {\n\ttype: 'function';\n\tfunctionName: string;\n}\n\nexport interface IDataBreakpointDto extends IBreakpointDto {\n\ttype: 'data';\n\tdataId: string;\n\tcanPersist: boolean;\n\tlabel: string;\n\taccessTypes?: DebugProtocol.DataBreakpointAccessType[];\n\taccessType: DebugProtocol.DataBreakpointAccessType;\n}\n\nexport interface ISourceBreakpointDto extends IBreakpointDto {\n\ttype: 'source';\n\turi: UriComponents;\n\tline: number;\n\tcharacter: number;\n}\n\nexport interface IBreakpointsDeltaDto {\n\tadded?: Array<ISourceBreakpointDto | IFunctionBreakpointDto | IDataBreakpointDto>;\n\tremoved?: string[];\n\tchanged?: Array<ISourceBreakpointDto | IFunctionBreakpointDto | IDataBreakpointDto>;\n}\n\nexport interface ISourceMultiBreakpointDto {\n\ttype: 'sourceMulti';\n\turi: UriComponents;\n\tlines: {\n\t\tid: string;\n\t\tenabled: boolean;\n\t\tcondition?: string;\n\t\thitCondition?: string;\n\t\tlogMessage?: string;\n\t\tline: number;\n\t\tcharacter: number;\n\t}[];\n}\n\nexport interface IDebugSessionFullDto {\n\tid: DebugSessionUUID;\n\ttype: string;\n\tname: string;\n\tparent: DebugSessionUUID | undefined;\n\tfolderUri: UriComponents | undefined;\n\tconfiguration: IConfig;\n}\n\nexport type IDebugSessionDto = IDebugSessionFullDto | DebugSessionUUID;\n\nexport interface ExtHostDebugServiceShape {\n\t$substituteVariables(folder: UriComponents | undefined, config: IConfig): Promise<IConfig>;\n\t$runInTerminal(args: DebugProtocol.RunInTerminalRequestArguments, sessionId: string): Promise<number | undefined>;\n\t$startDASession(handle: number, session: IDebugSessionDto): Promise<void>;\n\t$stopDASession(handle: number): Promise<void>;\n\t$sendDAMessage(handle: number, message: DebugProtocol.ProtocolMessage): void;\n\t$resolveDebugConfiguration(handle: number, folder: UriComponents | undefined, debugConfiguration: IConfig, token: CancellationToken): Promise<IConfig | null | undefined>;\n\t$resolveDebugConfigurationWithSubstitutedVariables(handle: number, folder: UriComponents | undefined, debugConfiguration: IConfig, token: CancellationToken): Promise<IConfig | null | undefined>;\n\t$provideDebugConfigurations(handle: number, folder: UriComponents | undefined, token: CancellationToken): Promise<IConfig[]>;\n\t$provideDebugAdapter(handle: number, session: IDebugSessionDto): Promise<Dto<IAdapterDescriptor>>;\n\t$acceptDebugSessionStarted(session: IDebugSessionDto): void;\n\t$acceptDebugSessionTerminated(session: IDebugSessionDto): void;\n\t$acceptDebugSessionActiveChanged(session: IDebugSessionDto | undefined): void;\n\t$acceptDebugSessionCustomEvent(session: IDebugSessionDto, event: any): void;\n\t$acceptBreakpointsDelta(delta: IBreakpointsDeltaDto): void;\n\t$acceptDebugSessionNameChanged(session: IDebugSessionDto, name: string): void;\n}\n\n\nexport interface DecorationRequest {\n\treadonly id: number;\n\treadonly uri: UriComponents;\n}\n\nexport type DecorationData = [boolean, string, string, ThemeColor];\nexport type DecorationReply = { [id: number]: DecorationData };\n\nexport interface ExtHostDecorationsShape {\n\t$provideDecorations(handle: number, requests: DecorationRequest[], token: CancellationToken): Promise<DecorationReply>;\n}\n\nexport interface ExtHostWindowShape {\n\t$onDidChangeWindowFocus(value: boolean): void;\n}\n\nexport interface ExtHostLogLevelServiceShape {\n\t$setLevel(level: LogLevel): void;\n}\n\nexport interface MainThreadLoggerShape {\n\t$log(file: UriComponents, messages: [LogLevel, string][]): void;\n\t$createLogger(file: UriComponents, options?: ILoggerOptions): Promise<void>;\n}\n\nexport interface ExtHostOutputServiceShape {\n\t$setVisibleChannel(channelId: string | null): void;\n}\n\nexport interface ExtHostProgressShape {\n\t$acceptProgressCanceled(handle: number): void;\n}\n\nexport interface ExtHostCommentsShape {\n\t$createCommentThreadTemplate(commentControllerHandle: number, uriComponents: UriComponents, range: IRange): void;\n\t$updateCommentThreadTemplate(commentControllerHandle: number, threadHandle: number, range: IRange): Promise<void>;\n\t$deleteCommentThread(commentControllerHandle: number, commentThreadHandle: number): void;\n\t$provideCommentingRanges(commentControllerHandle: number, uriComponents: UriComponents, token: CancellationToken): Promise<IRange[] | undefined>;\n\t$toggleReaction(commentControllerHandle: number, threadHandle: number, uri: UriComponents, comment: languages.Comment, reaction: languages.CommentReaction): Promise<void>;\n}\n\nexport interface INotebookSelectionChangeEvent {\n\tselections: ICellRange[];\n}\n\nexport interface INotebookVisibleRangesEvent {\n\tranges: ICellRange[];\n}\n\nexport interface INotebookEditorPropertiesChangeData {\n\tvisibleRanges?: INotebookVisibleRangesEvent;\n\tselections?: INotebookSelectionChangeEvent;\n}\n\nexport interface INotebookDocumentPropertiesChangeData {\n\tmetadata?: notebookCommon.NotebookDocumentMetadata;\n}\n\nexport interface INotebookModelAddedData {\n\turi: UriComponents;\n\tversionId: number;\n\tcells: NotebookCellDto[];\n\tviewType: string;\n\tmetadata?: notebookCommon.NotebookDocumentMetadata;\n}\n\nexport interface INotebookEditorAddData {\n\tid: string;\n\tdocumentUri: UriComponents;\n\tselections: ICellRange[];\n\tvisibleRanges: ICellRange[];\n\tviewColumn?: number;\n}\n\nexport interface INotebookDocumentsAndEditorsDelta {\n\tremovedDocuments?: UriComponents[];\n\taddedDocuments?: INotebookModelAddedData[];\n\tremovedEditors?: string[];\n\taddedEditors?: INotebookEditorAddData[];\n\tnewActiveEditor?: string | null;\n\tvisibleEditors?: string[];\n}\n\nexport interface NotebookOutputItemDto {\n\treadonly mime: string;\n\treadonly valueBytes: VSBuffer;\n}\n\nexport interface NotebookOutputDto {\n\titems: NotebookOutputItemDto[];\n\toutputId: string;\n\tmetadata?: Record<string, any>;\n}\n\nexport interface NotebookCellDataDto {\n\tsource: string;\n\tlanguage: string;\n\tmime: string | undefined;\n\tcellKind: notebookCommon.CellKind;\n\toutputs: NotebookOutputDto[];\n\tmetadata?: notebookCommon.NotebookCellMetadata;\n\tinternalMetadata?: notebookCommon.NotebookCellInternalMetadata;\n}\n\nexport interface NotebookDataDto {\n\treadonly cells: NotebookCellDataDto[];\n\treadonly metadata: notebookCommon.NotebookDocumentMetadata;\n}\n\nexport interface NotebookCellDto {\n\thandle: number;\n\turi: UriComponents;\n\teol: string;\n\tsource: string[];\n\tlanguage: string;\n\tmime?: string;\n\tcellKind: notebookCommon.CellKind;\n\toutputs: NotebookOutputDto[];\n\tmetadata?: notebookCommon.NotebookCellMetadata;\n\tinternalMetadata?: notebookCommon.NotebookCellInternalMetadata;\n}\n\nexport interface ExtHostNotebookShape extends ExtHostNotebookDocumentsAndEditorsShape {\n\t$provideNotebookCellStatusBarItems(handle: number, uri: UriComponents, index: number, token: CancellationToken): Promise<INotebookCellStatusBarListDto | undefined>;\n\t$releaseNotebookCellStatusBarItems(id: number): void;\n\n\t$openNotebook(viewType: string, uri: UriComponents, backupId: string | undefined, untitledDocumentData: VSBuffer | undefined, token: CancellationToken): Promise<SerializableObjectWithBuffers<NotebookDataDto>>;\n\t$saveNotebook(viewType: string, uri: UriComponents, token: CancellationToken): Promise<boolean>;\n\t$saveNotebookAs(viewType: string, uri: UriComponents, target: UriComponents, token: CancellationToken): Promise<boolean>;\n\t$backupNotebook(viewType: string, uri: UriComponents, cancellation: CancellationToken): Promise<string>;\n\n\t$dataToNotebook(handle: number, data: VSBuffer, token: CancellationToken): Promise<SerializableObjectWithBuffers<NotebookDataDto>>;\n\t$notebookToData(handle: number, data: SerializableObjectWithBuffers<NotebookDataDto>, token: CancellationToken): Promise<VSBuffer>;\n}\n\nexport interface ExtHostNotebookRenderersShape {\n\t$postRendererMessage(editorId: string, rendererId: string, message: unknown): void;\n}\n\nexport interface ExtHostNotebookDocumentsAndEditorsShape {\n\t$acceptDocumentAndEditorsDelta(delta: SerializableObjectWithBuffers<INotebookDocumentsAndEditorsDelta>): void;\n}\n\nexport type NotebookRawContentEventDto =\n\t// notebookCommon.NotebookCellsInitializeEvent<NotebookCellDto>\n\t| {\n\n\t\treadonly kind: notebookCommon.NotebookCellsChangeType.ModelChange;\n\t\treadonly changes: notebookCommon.NotebookCellTextModelSplice<NotebookCellDto>[];\n\t}\n\t| {\n\t\treadonly kind: notebookCommon.NotebookCellsChangeType.Move;\n\t\treadonly index: number;\n\t\treadonly length: number;\n\t\treadonly newIdx: number;\n\t}\n\t| {\n\t\treadonly kind: notebookCommon.NotebookCellsChangeType.Output;\n\t\treadonly index: number;\n\t\treadonly outputs: NotebookOutputDto[];\n\t}\n\t| {\n\t\treadonly kind: notebookCommon.NotebookCellsChangeType.OutputItem;\n\t\treadonly index: number;\n\t\treadonly outputId: string;\n\t\treadonly outputItems: NotebookOutputItemDto[];\n\t\treadonly append: boolean;\n\t}\n\t| notebookCommon.NotebookCellsChangeLanguageEvent\n\t| notebookCommon.NotebookCellsChangeMimeEvent\n\t| notebookCommon.NotebookCellsChangeMetadataEvent\n\t| notebookCommon.NotebookCellsChangeInternalMetadataEvent\n\t// | notebookCommon.NotebookDocumentChangeMetadataEvent\n\t| notebookCommon.NotebookCellContentChangeEvent\n\t// | notebookCommon.NotebookDocumentUnknownChangeEvent\n\t;\n\nexport type NotebookCellsChangedEventDto = {\n\treadonly rawEvents: NotebookRawContentEventDto[];\n\treadonly versionId: number;\n};\n\nexport interface ExtHostNotebookDocumentsShape {\n\t$acceptModelChanged(uriComponents: UriComponents, event: SerializableObjectWithBuffers<NotebookCellsChangedEventDto>, isDirty: boolean, newMetadata?: notebookCommon.NotebookDocumentMetadata): void;\n\t$acceptDirtyStateChanged(uriComponents: UriComponents, isDirty: boolean): void;\n\t$acceptModelSaved(uriComponents: UriComponents): void;\n}\n\nexport type INotebookEditorViewColumnInfo = Record<string, number>;\n\nexport interface ExtHostNotebookEditorsShape {\n\t$acceptEditorPropertiesChanged(id: string, data: INotebookEditorPropertiesChangeData): void;\n\t$acceptEditorViewColumns(data: INotebookEditorViewColumnInfo): void;\n}\n\nexport interface ExtHostNotebookKernelsShape {\n\t$acceptNotebookAssociation(handle: number, uri: UriComponents, value: boolean): void;\n\t$executeCells(handle: number, uri: UriComponents, handles: number[]): Promise<void>;\n\t$cancelCells(handle: number, uri: UriComponents, handles: number[]): Promise<void>;\n\t$acceptKernelMessageFromRenderer(handle: number, editorId: string, message: any): void;\n\t$cellExecutionChanged(uri: UriComponents, cellHandle: number, state: notebookCommon.NotebookCellExecutionState | undefined): void;\n}\n\nexport interface ExtHostInteractiveShape {\n\t$willAddInteractiveDocument(uri: UriComponents, eol: string, languageId: string, notebookUri: UriComponents): void;\n\t$willRemoveInteractiveDocument(uri: UriComponents, notebookUri: UriComponents): void;\n}\n\nexport interface ExtHostStorageShape {\n\t$acceptValue(shared: boolean, extensionId: string, value: object | undefined): void;\n}\n\nexport interface ExtHostThemingShape {\n\t$onColorThemeChange(themeType: string): void;\n}\n\nexport interface MainThreadThemingShape extends IDisposable {\n}\n\nexport interface TunnelDto {\n\tremoteAddress: { port: number; host: string };\n\tlocalAddress: { port: number; host: string } | string;\n\tpublic: boolean;\n\tprivacy: TunnelPrivacyId | string;\n\tprotocol: string | undefined;\n}\n\n\nexport interface ExtHostTunnelServiceShape {\n\t$forwardPort(tunnelOptions: TunnelOptions, tunnelCreationOptions: TunnelCreationOptions): Promise<TunnelDto | undefined>;\n\t$closeTunnel(remote: { host: string; port: number }, silent?: boolean): Promise<void>;\n\t$onDidTunnelsChange(): Promise<void>;\n\t$registerCandidateFinder(enable: boolean): Promise<void>;\n\t$applyCandidateFilter(candidates: CandidatePort[]): Promise<CandidatePort[]>;\n\t$providePortAttributes(handles: number[], ports: number[], pid: number | undefined, commandline: string | undefined, cancellationToken: CancellationToken): Promise<ProvidedPortAttributes[]>;\n}\n\nexport interface ExtHostTimelineShape {\n\t$getTimeline(source: string, uri: UriComponents, options: TimelineOptions, token: CancellationToken): Promise<Dto<Timeline> | undefined>;\n}\n\nexport const enum ExtHostTestingResource {\n\tWorkspace,\n\tTextDocument\n}\n\nexport interface ExtHostTestingShape {\n\t$runControllerTests(req: RunTestForControllerRequest, token: CancellationToken): Promise<void>;\n\t$cancelExtensionTestRun(runId: string | undefined): void;\n\t/** Handles a diff of tests, as a result of a subscribeToDiffs() call */\n\t$acceptDiff(diff: TestsDiffOp.Serialized[]): void;\n\t/** Publishes that a test run finished. */\n\t$publishTestResults(results: ISerializedTestResults[]): void;\n\t/** Expands a test item's children, by the given number of levels. */\n\t$expandTest(testId: string, levels: number): Promise<void>;\n\t/** Requests file coverage for a test run. Errors if not available. */\n\t$provideFileCoverage(runId: string, taskId: string, token: CancellationToken): Promise<Dto<IFileCoverage[]>>;\n\t/**\n\t * Requests coverage details for the file index in coverage data for the run.\n\t * Requires file coverage to have been previously requested via $provideFileCoverage.\n\t */\n\t$resolveFileCoverage(runId: string, taskId: string, fileIndex: number, token: CancellationToken): Promise<CoverageDetails[]>;\n\t/** Configures a test run config. */\n\t$configureRunProfile(controllerId: string, configId: number): void;\n\t/** Asks the controller to refresh its tests */\n\t$refreshTests(controllerId: string, token: CancellationToken): Promise<void>;\n}\n\nexport interface ITestControllerPatch {\n\tlabel?: string;\n\tcanRefresh?: boolean;\n}\n\nexport interface MainThreadTestingShape {\n\t// --- test lifecycle:\n\n\t/** Registers that there's a test controller with the given ID */\n\t$registerTestController(controllerId: string, label: string, canRefresh: boolean): void;\n\t/** Updates the label of an existing test controller. */\n\t$updateController(controllerId: string, patch: ITestControllerPatch): void;\n\t/** Diposes of the test controller with the given ID */\n\t$unregisterTestController(controllerId: string): void;\n\t/** Requests tests published to VS Code. */\n\t$subscribeToDiffs(): void;\n\t/** Stops requesting tests published to VS Code. */\n\t$unsubscribeFromDiffs(): void;\n\t/** Publishes that new tests were available on the given source. */\n\t$publishDiff(controllerId: string, diff: TestsDiffOp.Serialized[]): void;\n\n\t// --- test run configurations:\n\n\t/** Called when a new test run configuration is available */\n\t$publishTestRunProfile(config: ITestRunProfile): void;\n\t/** Updates an existing test run configuration */\n\t$updateTestRunConfig(controllerId: string, configId: number, update: Partial<ITestRunProfile>): void;\n\t/** Removes a previously-published test run config */\n\t$removeTestProfile(controllerId: string, configId: number): void;\n\n\n\t// --- test run handling:\n\n\t/** Request by an extension to run tests. */\n\t$runTests(req: ResolvedTestRunRequest, token: CancellationToken): Promise<string>;\n\t/**\n\t * Adds tests to the run. The tests are given in descending depth. The first\n\t * item will be a previously-known test, or a test root.\n\t */\n\t$addTestsToRun(controllerId: string, runId: string, tests: ITestItem.Serialized[]): void;\n\t/** Updates the state of a test run in the given run. */\n\t$updateTestStateInRun(runId: string, taskId: string, testId: string, state: TestResultState, duration?: number): void;\n\t/** Appends a message to a test in the run. */\n\t$appendTestMessagesInRun(runId: string, taskId: string, testId: string, messages: ITestMessage.Serialized[]): void;\n\t/** Appends raw output to the test run.. */\n\t$appendOutputToRun(runId: string, taskId: string, output: VSBuffer, location?: ILocationDto, testId?: string): void;\n\t/** Triggered when coverage is added to test results. */\n\t$signalCoverageAvailable(runId: string, taskId: string): void;\n\t/** Signals a task in a test run started. */\n\t$startedTestRunTask(runId: string, task: ITestRunTask): void;\n\t/** Signals a task in a test run ended. */\n\t$finishedTestRunTask(runId: string, taskId: string): void;\n\t/** Start a new extension-provided test run. */\n\t$startedExtensionTestRun(req: ExtensionRunTestsRequest): void;\n\t/** Signals that an extension-provided test run finished. */\n\t$finishedExtensionTestRun(runId: string): void;\n}\n\n// --- proxy identifiers\n\nexport const MainContext = {\n\tMainThreadAuthentication: createProxyIdentifier<MainThreadAuthenticationShape>('MainThreadAuthentication'),\n\tMainThreadBulkEdits: createProxyIdentifier<MainThreadBulkEditsShape>('MainThreadBulkEdits'),\n\tMainThreadClipboard: createProxyIdentifier<MainThreadClipboardShape>('MainThreadClipboard'),\n\tMainThreadCommands: createProxyIdentifier<MainThreadCommandsShape>('MainThreadCommands'),\n\tMainThreadComments: createProxyIdentifier<MainThreadCommentsShape>('MainThreadComments'),\n\tMainThreadConfiguration: createProxyIdentifier<MainThreadConfigurationShape>('MainThreadConfiguration'),\n\tMainThreadConsole: createProxyIdentifier<MainThreadConsoleShape>('MainThreadConsole'),\n\tMainThreadDebugService: createProxyIdentifier<MainThreadDebugServiceShape>('MainThreadDebugService'),\n\tMainThreadDecorations: createProxyIdentifier<MainThreadDecorationsShape>('MainThreadDecorations'),\n\tMainThreadDiagnostics: createProxyIdentifier<MainThreadDiagnosticsShape>('MainThreadDiagnostics'),\n\tMainThreadDialogs: createProxyIdentifier<MainThreadDiaglogsShape>('MainThreadDiaglogs'),\n\tMainThreadDocuments: createProxyIdentifier<MainThreadDocumentsShape>('MainThreadDocuments'),\n\tMainThreadDocumentContentProviders: createProxyIdentifier<MainThreadDocumentContentProvidersShape>('MainThreadDocumentContentProviders'),\n\tMainThreadTextEditors: createProxyIdentifier<MainThreadTextEditorsShape>('MainThreadTextEditors'),\n\tMainThreadEditorInsets: createProxyIdentifier<MainThreadEditorInsetsShape>('MainThreadEditorInsets'),\n\tMainThreadEditorTabs: createProxyIdentifier<MainThreadEditorTabsShape>('MainThreadEditorTabs'),\n\tMainThreadErrors: createProxyIdentifier<MainThreadErrorsShape>('MainThreadErrors'),\n\tMainThreadTreeViews: createProxyIdentifier<MainThreadTreeViewsShape>('MainThreadTreeViews'),\n\tMainThreadDownloadService: createProxyIdentifier<MainThreadDownloadServiceShape>('MainThreadDownloadService'),\n\tMainThreadKeytar: createProxyIdentifier<MainThreadKeytarShape>('MainThreadKeytar'),\n\tMainThreadLanguageFeatures: createProxyIdentifier<MainThreadLanguageFeaturesShape>('MainThreadLanguageFeatures'),\n\tMainThreadLanguages: createProxyIdentifier<MainThreadLanguagesShape>('MainThreadLanguages'),\n\tMainThreadLogger: createProxyIdentifier<MainThreadLoggerShape>('MainThreadLogger'),\n\tMainThreadMessageService: createProxyIdentifier<MainThreadMessageServiceShape>('MainThreadMessageService'),\n\tMainThreadOutputService: createProxyIdentifier<MainThreadOutputServiceShape>('MainThreadOutputService'),\n\tMainThreadProgress: createProxyIdentifier<MainThreadProgressShape>('MainThreadProgress'),\n\tMainThreadQuickOpen: createProxyIdentifier<MainThreadQuickOpenShape>('MainThreadQuickOpen'),\n\tMainThreadStatusBar: createProxyIdentifier<MainThreadStatusBarShape>('MainThreadStatusBar'),\n\tMainThreadSecretState: createProxyIdentifier<MainThreadSecretStateShape>('MainThreadSecretState'),\n\tMainThreadStorage: createProxyIdentifier<MainThreadStorageShape>('MainThreadStorage'),\n\tMainThreadTelemetry: createProxyIdentifier<MainThreadTelemetryShape>('MainThreadTelemetry'),\n\tMainThreadTerminalService: createProxyIdentifier<MainThreadTerminalServiceShape>('MainThreadTerminalService'),\n\tMainThreadWebviews: createProxyIdentifier<MainThreadWebviewsShape>('MainThreadWebviews'),\n\tMainThreadWebviewPanels: createProxyIdentifier<MainThreadWebviewPanelsShape>('MainThreadWebviewPanels'),\n\tMainThreadWebviewViews: createProxyIdentifier<MainThreadWebviewViewsShape>('MainThreadWebviewViews'),\n\tMainThreadCustomEditors: createProxyIdentifier<MainThreadCustomEditorsShape>('MainThreadCustomEditors'),\n\tMainThreadUrls: createProxyIdentifier<MainThreadUrlsShape>('MainThreadUrls'),\n\tMainThreadUriOpeners: createProxyIdentifier<MainThreadUriOpenersShape>('MainThreadUriOpeners'),\n\tMainThreadWorkspace: createProxyIdentifier<MainThreadWorkspaceShape>('MainThreadWorkspace'),\n\tMainThreadFileSystem: createProxyIdentifier<MainThreadFileSystemShape>('MainThreadFileSystem'),\n\tMainThreadExtensionService: createProxyIdentifier<MainThreadExtensionServiceShape>('MainThreadExtensionService'),\n\tMainThreadSCM: createProxyIdentifier<MainThreadSCMShape>('MainThreadSCM'),\n\tMainThreadSearch: createProxyIdentifier<MainThreadSearchShape>('MainThreadSearch'),\n\tMainThreadTask: createProxyIdentifier<MainThreadTaskShape>('MainThreadTask'),\n\tMainThreadWindow: createProxyIdentifier<MainThreadWindowShape>('MainThreadWindow'),\n\tMainThreadLabelService: createProxyIdentifier<MainThreadLabelServiceShape>('MainThreadLabelService'),\n\tMainThreadNotebook: createProxyIdentifier<MainThreadNotebookShape>('MainThreadNotebook'),\n\tMainThreadNotebookDocuments: createProxyIdentifier<MainThreadNotebookDocumentsShape>('MainThreadNotebookDocumentsShape'),\n\tMainThreadNotebookEditors: createProxyIdentifier<MainThreadNotebookEditorsShape>('MainThreadNotebookEditorsShape'),\n\tMainThreadNotebookKernels: createProxyIdentifier<MainThreadNotebookKernelsShape>('MainThreadNotebookKernels'),\n\tMainThreadNotebookRenderers: createProxyIdentifier<MainThreadNotebookRenderersShape>('MainThreadNotebookRenderers'),\n\tMainThreadInteractive: createProxyIdentifier<MainThreadInteractiveShape>('MainThreadInteractive'),\n\tMainThreadTheming: createProxyIdentifier<MainThreadThemingShape>('MainThreadTheming'),\n\tMainThreadTunnelService: createProxyIdentifier<MainThreadTunnelServiceShape>('MainThreadTunnelService'),\n\tMainThreadTimeline: createProxyIdentifier<MainThreadTimelineShape>('MainThreadTimeline'),\n\tMainThreadTesting: createProxyIdentifier<MainThreadTestingShape>('MainThreadTesting'),\n};\n\nexport const ExtHostContext = {\n\tExtHostCommands: createProxyIdentifier<ExtHostCommandsShape>('ExtHostCommands'),\n\tExtHostConfiguration: createProxyIdentifier<ExtHostConfigurationShape>('ExtHostConfiguration'),\n\tExtHostDiagnostics: createProxyIdentifier<ExtHostDiagnosticsShape>('ExtHostDiagnostics'),\n\tExtHostDebugService: createProxyIdentifier<ExtHostDebugServiceShape>('ExtHostDebugService'),\n\tExtHostDecorations: createProxyIdentifier<ExtHostDecorationsShape>('ExtHostDecorations'),\n\tExtHostDocumentsAndEditors: createProxyIdentifier<ExtHostDocumentsAndEditorsShape>('ExtHostDocumentsAndEditors'),\n\tExtHostDocuments: createProxyIdentifier<ExtHostDocumentsShape>('ExtHostDocuments'),\n\tExtHostDocumentContentProviders: createProxyIdentifier<ExtHostDocumentContentProvidersShape>('ExtHostDocumentContentProviders'),\n\tExtHostDocumentSaveParticipant: createProxyIdentifier<ExtHostDocumentSaveParticipantShape>('ExtHostDocumentSaveParticipant'),\n\tExtHostEditors: createProxyIdentifier<ExtHostEditorsShape>('ExtHostEditors'),\n\tExtHostTreeViews: createProxyIdentifier<ExtHostTreeViewsShape>('ExtHostTreeViews'),\n\tExtHostFileSystem: createProxyIdentifier<ExtHostFileSystemShape>('ExtHostFileSystem'),\n\tExtHostFileSystemInfo: createProxyIdentifier<ExtHostFileSystemInfoShape>('ExtHostFileSystemInfo'),\n\tExtHostFileSystemEventService: createProxyIdentifier<ExtHostFileSystemEventServiceShape>('ExtHostFileSystemEventService'),\n\tExtHostLanguages: createProxyIdentifier<ExtHostLanguagesShape>('ExtHostLanguages'),\n\tExtHostLanguageFeatures: createProxyIdentifier<ExtHostLanguageFeaturesShape>('ExtHostLanguageFeatures'),\n\tExtHostQuickOpen: createProxyIdentifier<ExtHostQuickOpenShape>('ExtHostQuickOpen'),\n\tExtHostExtensionService: createProxyIdentifier<ExtHostExtensionServiceShape>('ExtHostExtensionService'),\n\tExtHostLogLevelServiceShape: createProxyIdentifier<ExtHostLogLevelServiceShape>('ExtHostLogLevelServiceShape'),\n\tExtHostTerminalService: createProxyIdentifier<ExtHostTerminalServiceShape>('ExtHostTerminalService'),\n\tExtHostSCM: createProxyIdentifier<ExtHostSCMShape>('ExtHostSCM'),\n\tExtHostSearch: createProxyIdentifier<ExtHostSearchShape>('ExtHostSearch'),\n\tExtHostTask: createProxyIdentifier<ExtHostTaskShape>('ExtHostTask'),\n\tExtHostWorkspace: createProxyIdentifier<ExtHostWorkspaceShape>('ExtHostWorkspace'),\n\tExtHostWindow: createProxyIdentifier<ExtHostWindowShape>('ExtHostWindow'),\n\tExtHostWebviews: createProxyIdentifier<ExtHostWebviewsShape>('ExtHostWebviews'),\n\tExtHostWebviewPanels: createProxyIdentifier<ExtHostWebviewPanelsShape>('ExtHostWebviewPanels'),\n\tExtHostCustomEditors: createProxyIdentifier<ExtHostCustomEditorsShape>('ExtHostCustomEditors'),\n\tExtHostWebviewViews: createProxyIdentifier<ExtHostWebviewViewsShape>('ExtHostWebviewViews'),\n\tExtHostEditorInsets: createProxyIdentifier<ExtHostEditorInsetsShape>('ExtHostEditorInsets'),\n\tExtHostEditorTabs: createProxyIdentifier<IExtHostEditorTabsShape>('ExtHostEditorTabs'),\n\tExtHostProgress: createProxyIdentifier<ExtHostProgressShape>('ExtHostProgress'),\n\tExtHostComments: createProxyIdentifier<ExtHostCommentsShape>('ExtHostComments'),\n\tExtHostSecretState: createProxyIdentifier<ExtHostSecretStateShape>('ExtHostSecretState'),\n\tExtHostStorage: createProxyIdentifier<ExtHostStorageShape>('ExtHostStorage'),\n\tExtHostUrls: createProxyIdentifier<ExtHostUrlsShape>('ExtHostUrls'),\n\tExtHostUriOpeners: createProxyIdentifier<ExtHostUriOpenersShape>('ExtHostUriOpeners'),\n\tExtHostOutputService: createProxyIdentifier<ExtHostOutputServiceShape>('ExtHostOutputService'),\n\tExtHosLabelService: createProxyIdentifier<ExtHostLabelServiceShape>('ExtHostLabelService'),\n\tExtHostNotebook: createProxyIdentifier<ExtHostNotebookShape>('ExtHostNotebook'),\n\tExtHostNotebookDocuments: createProxyIdentifier<ExtHostNotebookDocumentsShape>('ExtHostNotebookDocuments'),\n\tExtHostNotebookEditors: createProxyIdentifier<ExtHostNotebookEditorsShape>('ExtHostNotebookEditors'),\n\tExtHostNotebookKernels: createProxyIdentifier<ExtHostNotebookKernelsShape>('ExtHostNotebookKernels'),\n\tExtHostNotebookRenderers: createProxyIdentifier<ExtHostNotebookRenderersShape>('ExtHostNotebookRenderers'),\n\tExtHostInteractive: createProxyIdentifier<ExtHostInteractiveShape>('ExtHostInteractive'),\n\tExtHostTheming: createProxyIdentifier<ExtHostThemingShape>('ExtHostTheming'),\n\tExtHostTunnelService: createProxyIdentifier<ExtHostTunnelServiceShape>('ExtHostTunnelService'),\n\tExtHostAuthentication: createProxyIdentifier<ExtHostAuthenticationShape>('ExtHostAuthentication'),\n\tExtHostTimeline: createProxyIdentifier<ExtHostTimelineShape>('ExtHostTimeline'),\n\tExtHostTesting: createProxyIdentifier<ExtHostTestingShape>('ExtHostTesting'),\n\tExtHostTelemetry: createProxyIdentifier<ExtHostTelemetryShape>('ExtHostTelemetry'),\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { validateConstraint } from 'vs/base/common/types';\nimport { ICommandHandlerDescription } from 'vs/platform/commands/common/commands';\nimport * as extHostTypes from 'vs/workbench/api/common/extHostTypes';\nimport * as extHostTypeConverter from 'vs/workbench/api/common/extHostTypeConverters';\nimport { cloneAndChange } from 'vs/base/common/objects';\nimport { MainContext, MainThreadCommandsShape, ExtHostCommandsShape, ICommandDto, ICommandHandlerDescriptionDto, MainThreadTelemetryShape } from './extHost.protocol';\nimport { isNonEmptyArray } from 'vs/base/common/arrays';\nimport * as languages from 'vs/editor/common/languages';\nimport type * as vscode from 'vscode';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { revive } from 'vs/base/common/marshalling';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { IPosition, Position } from 'vs/editor/common/core/position';\nimport { URI } from 'vs/base/common/uri';\nimport { DisposableStore, toDisposable } from 'vs/base/common/lifecycle';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IExtHostRpcService } from 'vs/workbench/api/common/extHostRpcService';\nimport { ISelection } from 'vs/editor/common/core/selection';\nimport { TestItemImpl } from 'vs/workbench/api/common/extHostTestItem';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { SerializableObjectWithBuffers } from 'vs/workbench/services/extensions/common/proxyIdentifier';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { IExtensionDescription } from 'vs/platform/extensions/common/extensions';\n\ninterface CommandHandler {\n\tcallback: Function;\n\tthisArg: any;\n\tdescription?: ICommandHandlerDescription;\n\textension?: IExtensionDescription;\n}\n\nexport interface ArgumentProcessor {\n\tprocessArgument(arg: any): any;\n}\n\nexport class ExtHostCommands implements ExtHostCommandsShape {\n\n\treadonly _serviceBrand: undefined;\n\n\t#proxy: MainThreadCommandsShape;\n\n\tprivate readonly _commands = new Map<string, CommandHandler>();\n\tprivate readonly _apiCommands = new Map<string, ApiCommand>();\n\t#telemetry: MainThreadTelemetryShape;\n\n\tprivate readonly _logService: ILogService;\n\tprivate readonly _argumentProcessors: ArgumentProcessor[];\n\n\treadonly converter: CommandsConverter;\n\n\tconstructor(\n\t\t@IExtHostRpcService extHostRpc: IExtHostRpcService,\n\t\t@ILogService logService: ILogService\n\t) {\n\t\tthis.#proxy = extHostRpc.getProxy(MainContext.MainThreadCommands);\n\t\tthis._logService = logService;\n\t\tthis.#telemetry = extHostRpc.getProxy(MainContext.MainThreadTelemetry);\n\t\tthis.converter = new CommandsConverter(\n\t\t\tthis,\n\t\t\tid => {\n\t\t\t\t// API commands that have no return type (void) can be\n\t\t\t\t// converted to their internal command and don't need\n\t\t\t\t// any indirection commands\n\t\t\t\tconst candidate = this._apiCommands.get(id);\n\t\t\t\treturn candidate?.result === ApiCommandResult.Void\n\t\t\t\t\t? candidate : undefined;\n\t\t\t},\n\t\t\tlogService\n\t\t);\n\t\tthis._argumentProcessors = [\n\t\t\t{\n\t\t\t\tprocessArgument(a) {\n\t\t\t\t\t// URI, Regex\n\t\t\t\t\treturn revive(a);\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tprocessArgument(arg) {\n\t\t\t\t\treturn cloneAndChange(arg, function (obj) {\n\t\t\t\t\t\t// Reverse of https://github.com/microsoft/vscode/blob/1f28c5fc681f4c01226460b6d1c7e91b8acb4a5b/src/vs/workbench/api/node/extHostCommands.ts#L112-L127\n\t\t\t\t\t\tif (Range.isIRange(obj)) {\n\t\t\t\t\t\t\treturn extHostTypeConverter.Range.to(obj);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (Position.isIPosition(obj)) {\n\t\t\t\t\t\t\treturn extHostTypeConverter.Position.to(obj);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (Range.isIRange((obj as languages.Location).range) && URI.isUri((obj as languages.Location).uri)) {\n\t\t\t\t\t\t\treturn extHostTypeConverter.location.to(obj);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (obj instanceof VSBuffer) {\n\t\t\t\t\t\t\treturn obj.buffer.buffer;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!Array.isArray(obj)) {\n\t\t\t\t\t\t\treturn obj;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\t}\n\n\tregisterArgumentProcessor(processor: ArgumentProcessor): void {\n\t\tthis._argumentProcessors.push(processor);\n\t}\n\n\tregisterApiCommand(apiCommand: ApiCommand): extHostTypes.Disposable {\n\n\n\t\tconst registration = this.registerCommand(false, apiCommand.id, async (...apiArgs) => {\n\n\t\t\tconst internalArgs = apiCommand.args.map((arg, i) => {\n\t\t\t\tif (!arg.validate(apiArgs[i])) {\n\t\t\t\t\tthrow new Error(`Invalid argument '${arg.name}' when running '${apiCommand.id}', received: ${apiArgs[i]}`);\n\t\t\t\t}\n\t\t\t\treturn arg.convert(apiArgs[i]);\n\t\t\t});\n\n\t\t\tconst internalResult = await this.executeCommand(apiCommand.internalId, ...internalArgs);\n\t\t\treturn apiCommand.result.convert(internalResult, apiArgs, this.converter);\n\t\t}, undefined, {\n\t\t\tdescription: apiCommand.description,\n\t\t\targs: apiCommand.args,\n\t\t\treturns: apiCommand.result.description\n\t\t});\n\n\t\tthis._apiCommands.set(apiCommand.id, apiCommand);\n\n\t\treturn new extHostTypes.Disposable(() => {\n\t\t\tregistration.dispose();\n\t\t\tthis._apiCommands.delete(apiCommand.id);\n\t\t});\n\t}\n\n\tregisterCommand(global: boolean, id: string, callback: <T>(...args: any[]) => T | Thenable<T>, thisArg?: any, description?: ICommandHandlerDescription, extension?: IExtensionDescription): extHostTypes.Disposable {\n\t\tthis._logService.trace('ExtHostCommands#registerCommand', id);\n\n\t\tif (!id.trim().length) {\n\t\t\tthrow new Error('invalid id');\n\t\t}\n\n\t\tif (this._commands.has(id)) {\n\t\t\tthrow new Error(`command '${id}' already exists`);\n\t\t}\n\n\t\tthis._commands.set(id, { callback, thisArg, description, extension });\n\t\tif (global) {\n\t\t\tthis.#proxy.$registerCommand(id);\n\t\t}\n\n\t\treturn new extHostTypes.Disposable(() => {\n\t\t\tif (this._commands.delete(id)) {\n\t\t\t\tif (global) {\n\t\t\t\t\tthis.#proxy.$unregisterCommand(id);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\texecuteCommand<T>(id: string, ...args: any[]): Promise<T> {\n\t\tthis._logService.trace('ExtHostCommands#executeCommand', id);\n\t\treturn this._doExecuteCommand(id, args, true);\n\t}\n\n\tprivate async _doExecuteCommand<T>(id: string, args: any[], retry: boolean): Promise<T> {\n\n\t\tif (this._commands.has(id)) {\n\t\t\t// - We stay inside the extension host and support\n\t\t\t// \t to pass any kind of parameters around.\n\t\t\t// - We still emit the corresponding activation event\n\t\t\t//   BUT we don't await that event\n\t\t\tthis.#proxy.$fireCommandActivationEvent(id);\n\t\t\treturn this._executeContributedCommand<T>(id, args, false);\n\n\t\t} else {\n\t\t\t// automagically convert some argument types\n\t\t\tlet hasBuffers = false;\n\t\t\tconst toArgs = cloneAndChange(args, function (value) {\n\t\t\t\tif (value instanceof extHostTypes.Position) {\n\t\t\t\t\treturn extHostTypeConverter.Position.from(value);\n\t\t\t\t} else if (value instanceof extHostTypes.Range) {\n\t\t\t\t\treturn extHostTypeConverter.Range.from(value);\n\t\t\t\t} else if (value instanceof extHostTypes.Location) {\n\t\t\t\t\treturn extHostTypeConverter.location.from(value);\n\t\t\t\t} else if (extHostTypes.NotebookRange.isNotebookRange(value)) {\n\t\t\t\t\treturn extHostTypeConverter.NotebookRange.from(value);\n\t\t\t\t} else if (value instanceof ArrayBuffer) {\n\t\t\t\t\thasBuffers = true;\n\t\t\t\t\treturn VSBuffer.wrap(new Uint8Array(value));\n\t\t\t\t} else if (value instanceof Uint8Array) {\n\t\t\t\t\thasBuffers = true;\n\t\t\t\t\treturn VSBuffer.wrap(value);\n\t\t\t\t} else if (value instanceof VSBuffer) {\n\t\t\t\t\thasBuffers = true;\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t\tif (!Array.isArray(value)) {\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\ttry {\n\t\t\t\tconst result = await this.#proxy.$executeCommand(id, hasBuffers ? new SerializableObjectWithBuffers(toArgs) : toArgs, retry);\n\t\t\t\treturn revive<any>(result);\n\t\t\t} catch (e) {\n\t\t\t\t// Rerun the command when it wasn't known, had arguments, and when retry\n\t\t\t\t// is enabled. We do this because the command might be registered inside\n\t\t\t\t// the extension host now and can therefore accept the arguments as-is.\n\t\t\t\tif (e instanceof Error && e.message === '$executeCommand:retry') {\n\t\t\t\t\treturn this._doExecuteCommand(id, args, false);\n\t\t\t\t} else {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async _executeContributedCommand<T = unknown>(id: string, args: any[], annotateError: boolean): Promise<T> {\n\t\tconst command = this._commands.get(id);\n\t\tif (!command) {\n\t\t\tthrow new Error('Unknown command');\n\t\t}\n\t\tthis._reportTelemetry(command, id);\n\t\tconst { callback, thisArg, description } = command;\n\t\tif (description) {\n\t\t\tfor (let i = 0; i < description.args.length; i++) {\n\t\t\t\ttry {\n\t\t\t\t\tvalidateConstraint(args[i], description.args[i].constraint);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tthrow new Error(`Running the contributed command: '${id}' failed. Illegal argument '${description.args[i].name}' - ${description.args[i].description}`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\treturn await callback.apply(thisArg, args);\n\t\t} catch (err) {\n\t\t\t// The indirection-command from the converter can fail when invoking the actual\n\t\t\t// command and in that case it is better to blame the correct command\n\t\t\tif (id === this.converter.delegatingCommandId) {\n\t\t\t\tconst actual = this.converter.getActualCommand(...args);\n\t\t\t\tif (actual) {\n\t\t\t\t\tid = actual.command;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._logService.error(err, id, command.extension?.identifier);\n\n\t\t\tif (!annotateError) {\n\t\t\t\tthrow err;\n\t\t\t}\n\n\t\t\tthrow new class CommandError extends Error {\n\t\t\t\treadonly id = id;\n\t\t\t\treadonly source = command!.extension?.displayName ?? command!.extension?.name;\n\t\t\t\tconstructor() {\n\t\t\t\t\tsuper(toErrorMessage(err));\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\tprivate _reportTelemetry(command: CommandHandler, id: string) {\n\t\tif (!command.extension || command.extension.isBuiltin) {\n\t\t\treturn;\n\t\t}\n\t\ttype ExtensionActionTelemetry = {\n\t\t\textensionId: string;\n\t\t\tid: string;\n\t\t};\n\t\ttype ExtensionActionTelemetryMeta = {\n\t\t\textensionId: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'The id of the extension handling the command, informing which extensions provide most-used functionality.' };\n\t\t\tid: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'The id of the command, to understand which specific extension features are most popular.' };\n\t\t\towner: 'digitarald';\n\t\t\tcomment: 'Used to gain insight on the most popular commands used from extensions';\n\t\t};\n\t\tthis.#telemetry.$publicLog2<ExtensionActionTelemetry, ExtensionActionTelemetryMeta>('Extension:ActionExecuted', {\n\t\t\textensionId: command.extension.identifier.value,\n\t\t\tid: id,\n\t\t});\n\t}\n\n\t$executeContributedCommand(id: string, ...args: any[]): Promise<unknown> {\n\t\tthis._logService.trace('ExtHostCommands#$executeContributedCommand', id);\n\n\t\tif (!this._commands.has(id)) {\n\t\t\treturn Promise.reject(new Error(`Contributed command '${id}' does not exist.`));\n\t\t} else {\n\t\t\targs = args.map(arg => this._argumentProcessors.reduce((r, p) => p.processArgument(r), arg));\n\t\t\treturn this._executeContributedCommand(id, args, true);\n\t\t}\n\t}\n\n\tgetCommands(filterUnderscoreCommands: boolean = false): Promise<string[]> {\n\t\tthis._logService.trace('ExtHostCommands#getCommands', filterUnderscoreCommands);\n\n\t\treturn this.#proxy.$getCommands().then(result => {\n\t\t\tif (filterUnderscoreCommands) {\n\t\t\t\tresult = result.filter(command => command[0] !== '_');\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\t$getContributedCommandHandlerDescriptions(): Promise<{ [id: string]: string | ICommandHandlerDescriptionDto }> {\n\t\tconst result: { [id: string]: string | ICommandHandlerDescription } = Object.create(null);\n\t\tfor (const [id, command] of this._commands) {\n\t\t\tconst { description } = command;\n\t\t\tif (description) {\n\t\t\t\tresult[id] = description;\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve(result);\n\t}\n}\n\nexport interface IExtHostCommands extends ExtHostCommands { }\nexport const IExtHostCommands = createDecorator<IExtHostCommands>('IExtHostCommands');\n\nexport class CommandsConverter implements extHostTypeConverter.Command.ICommandsConverter {\n\n\treadonly delegatingCommandId: string = `_vscode_delegate_cmd_${Date.now().toString(36)}`;\n\tprivate readonly _cache = new Map<number, vscode.Command>();\n\tprivate _cachIdPool = 0;\n\n\t// --- conversion between internal and api commands\n\tconstructor(\n\t\tprivate readonly _commands: ExtHostCommands,\n\t\tprivate readonly _lookupApiCommand: (id: string) => ApiCommand | undefined,\n\t\tprivate readonly _logService: ILogService\n\t) {\n\t\tthis._commands.registerCommand(true, this.delegatingCommandId, this._executeConvertedCommand, this);\n\t}\n\n\ttoInternal(command: vscode.Command, disposables: DisposableStore): ICommandDto;\n\ttoInternal(command: vscode.Command | undefined, disposables: DisposableStore): ICommandDto | undefined;\n\ttoInternal(command: vscode.Command | undefined, disposables: DisposableStore): ICommandDto | undefined {\n\n\t\tif (!command) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst result: ICommandDto = {\n\t\t\t$ident: undefined,\n\t\t\tid: command.command,\n\t\t\ttitle: command.title,\n\t\t\ttooltip: command.tooltip\n\t\t};\n\n\t\tif (!command.command) {\n\t\t\t// falsy command id -> return converted command but don't attempt any\n\t\t\t// argument or API-command dance since this command won't run anyways\n\t\t\treturn result;\n\t\t}\n\n\t\tconst apiCommand = this._lookupApiCommand(command.command);\n\t\tif (apiCommand) {\n\t\t\t// API command with return-value can be converted inplace\n\t\t\tresult.id = apiCommand.internalId;\n\t\t\tresult.arguments = apiCommand.args.map((arg, i) => arg.convert(command.arguments && command.arguments[i]));\n\n\n\t\t} else if (isNonEmptyArray(command.arguments)) {\n\t\t\t// we have a contributed command with arguments. that\n\t\t\t// means we don't want to send the arguments around\n\n\t\t\tconst id = ++this._cachIdPool;\n\t\t\tthis._cache.set(id, command);\n\t\t\tdisposables.add(toDisposable(() => {\n\t\t\t\tthis._cache.delete(id);\n\t\t\t\tthis._logService.trace('CommandsConverter#DISPOSE', id);\n\t\t\t}));\n\t\t\tresult.$ident = id;\n\n\t\t\tresult.id = this.delegatingCommandId;\n\t\t\tresult.arguments = [id];\n\n\t\t\tthis._logService.trace('CommandsConverter#CREATE', command.command, id);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tfromInternal(command: ICommandDto): vscode.Command | undefined {\n\n\t\tif (typeof command.$ident === 'number') {\n\t\t\treturn this._cache.get(command.$ident);\n\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tcommand: command.id,\n\t\t\t\ttitle: command.title,\n\t\t\t\targuments: command.arguments\n\t\t\t};\n\t\t}\n\t}\n\n\n\tgetActualCommand(...args: any[]): vscode.Command | undefined {\n\t\treturn this._cache.get(args[0]);\n\t}\n\n\tprivate _executeConvertedCommand<R>(...args: any[]): Promise<R> {\n\t\tconst actualCmd = this.getActualCommand(...args);\n\t\tthis._logService.trace('CommandsConverter#EXECUTE', args[0], actualCmd ? actualCmd.command : 'MISSING');\n\n\t\tif (!actualCmd) {\n\t\t\treturn Promise.reject('actual command NOT FOUND');\n\t\t}\n\t\treturn this._commands.executeCommand(actualCmd.command, ...(actualCmd.arguments || []));\n\t}\n\n}\n\n\nexport class ApiCommandArgument<V, O = V> {\n\n\tstatic readonly Uri = new ApiCommandArgument<URI>('uri', 'Uri of a text document', v => URI.isUri(v), v => v);\n\tstatic readonly Position = new ApiCommandArgument<extHostTypes.Position, IPosition>('position', 'A position in a text document', v => extHostTypes.Position.isPosition(v), extHostTypeConverter.Position.from);\n\tstatic readonly Range = new ApiCommandArgument<extHostTypes.Range, IRange>('range', 'A range in a text document', v => extHostTypes.Range.isRange(v), extHostTypeConverter.Range.from);\n\tstatic readonly Selection = new ApiCommandArgument<extHostTypes.Selection, ISelection>('selection', 'A selection in a text document', v => extHostTypes.Selection.isSelection(v), extHostTypeConverter.Selection.from);\n\tstatic readonly Number = new ApiCommandArgument<number>('number', '', v => typeof v === 'number', v => v);\n\tstatic readonly String = new ApiCommandArgument<string>('string', '', v => typeof v === 'string', v => v);\n\n\tstatic readonly CallHierarchyItem = new ApiCommandArgument('item', 'A call hierarchy item', v => v instanceof extHostTypes.CallHierarchyItem, extHostTypeConverter.CallHierarchyItem.from);\n\tstatic readonly TypeHierarchyItem = new ApiCommandArgument('item', 'A type hierarchy item', v => v instanceof extHostTypes.TypeHierarchyItem, extHostTypeConverter.TypeHierarchyItem.from);\n\tstatic readonly TestItem = new ApiCommandArgument('testItem', 'A VS Code TestItem', v => v instanceof TestItemImpl, extHostTypeConverter.TestItem.from);\n\n\tconstructor(\n\t\treadonly name: string,\n\t\treadonly description: string,\n\t\treadonly validate: (v: V) => boolean,\n\t\treadonly convert: (v: V) => O\n\t) { }\n\n\toptional(): ApiCommandArgument<V | undefined | null, O | undefined | null> {\n\t\treturn new ApiCommandArgument(\n\t\t\tthis.name, `(optional) ${this.description}`,\n\t\t\tvalue => value === undefined || value === null || this.validate(value),\n\t\t\tvalue => value === undefined ? undefined : value === null ? null : this.convert(value)\n\t\t);\n\t}\n\n\twith(name: string | undefined, description: string | undefined): ApiCommandArgument<V, O> {\n\t\treturn new ApiCommandArgument(name ?? this.name, description ?? this.description, this.validate, this.convert);\n\t}\n}\n\nexport class ApiCommandResult<V, O = V> {\n\n\tstatic readonly Void = new ApiCommandResult<void, void>('no result', v => v);\n\n\tconstructor(\n\t\treadonly description: string,\n\t\treadonly convert: (v: V, apiArgs: any[], cmdConverter: CommandsConverter) => O\n\t) { }\n}\n\nexport class ApiCommand {\n\n\tconstructor(\n\t\treadonly id: string,\n\t\treadonly internalId: string,\n\t\treadonly description: string,\n\t\treadonly args: ApiCommandArgument<any, any>[],\n\t\treadonly result: ApiCommandResult<any, any>\n\t) { }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createRandomIPCHandle } from 'vs/base/parts/ipc/node/ipc.net';\nimport * as http from 'http';\nimport * as fs from 'fs';\nimport { IExtHostCommands } from 'vs/workbench/api/common/extHostCommands';\nimport { IWindowOpenable, IOpenWindowOptions } from 'vs/platform/window/common/window';\nimport { URI } from 'vs/base/common/uri';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { hasWorkspaceFileExtension } from 'vs/platform/workspace/common/workspace';\n\nexport interface OpenCommandPipeArgs {\n\ttype: 'open';\n\tfileURIs?: string[];\n\tfolderURIs?: string[];\n\tforceNewWindow?: boolean;\n\tdiffMode?: boolean;\n\tmergeMode?: boolean;\n\taddMode?: boolean;\n\tgotoLineMode?: boolean;\n\tforceReuseWindow?: boolean;\n\twaitMarkerFilePath?: string;\n\tremoteAuthority?: string | null;\n}\n\nexport interface OpenExternalCommandPipeArgs {\n\ttype: 'openExternal';\n\turis: string[];\n}\n\nexport interface StatusPipeArgs {\n\ttype: 'status';\n}\n\nexport interface ExtensionManagementPipeArgs {\n\ttype: 'extensionManagement';\n\tlist?: { showVersions?: boolean; category?: string };\n\tinstall?: string[];\n\tuninstall?: string[];\n\tforce?: boolean;\n}\n\nexport type PipeCommand = OpenCommandPipeArgs | StatusPipeArgs | OpenExternalCommandPipeArgs | ExtensionManagementPipeArgs;\n\nexport interface ICommandsExecuter {\n\texecuteCommand<T>(id: string, ...args: any[]): Promise<T>;\n}\n\nexport class CLIServerBase {\n\tprivate readonly _server: http.Server;\n\n\tconstructor(\n\t\tprivate readonly _commands: ICommandsExecuter,\n\t\tprivate readonly logService: ILogService,\n\t\tprivate readonly _ipcHandlePath: string,\n\t) {\n\t\tthis._server = http.createServer((req, res) => this.onRequest(req, res));\n\t\tthis.setup().catch(err => {\n\t\t\tlogService.error(err);\n\t\t\treturn '';\n\t\t});\n\t}\n\n\tpublic get ipcHandlePath() {\n\t\treturn this._ipcHandlePath;\n\t}\n\n\tprivate async setup(): Promise<string> {\n\t\ttry {\n\t\t\tthis._server.listen(this.ipcHandlePath);\n\t\t\tthis._server.on('error', err => this.logService.error(err));\n\t\t} catch (err) {\n\t\t\tthis.logService.error('Could not start open from terminal server.');\n\t\t}\n\n\t\treturn this._ipcHandlePath;\n\t}\n\n\tprivate onRequest(req: http.IncomingMessage, res: http.ServerResponse): void {\n\t\tconst sendResponse = (statusCode: number, returnObj: any) => {\n\t\t\tres.writeHead(statusCode, { 'content-type': 'application/json' });\n\t\t\tres.end(JSON.stringify(returnObj || null), (err?: any) => err && this.logService.error(err));\n\t\t};\n\n\t\tconst chunks: string[] = [];\n\t\treq.setEncoding('utf8');\n\t\treq.on('data', (d: string) => chunks.push(d));\n\t\treq.on('end', async () => {\n\t\t\ttry {\n\t\t\t\tconst data: PipeCommand | any = JSON.parse(chunks.join(''));\n\t\t\t\tlet returnObj;\n\t\t\t\tswitch (data.type) {\n\t\t\t\t\tcase 'open':\n\t\t\t\t\t\treturnObj = await this.open(data);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'openExternal':\n\t\t\t\t\t\treturnObj = await this.openExternal(data);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'status':\n\t\t\t\t\t\treturnObj = await this.getStatus(data);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'extensionManagement':\n\t\t\t\t\t\treturnObj = await this.manageExtensions(data);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tsendResponse(404, `Unknown message type: ${data.type}`);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tsendResponse(200, returnObj);\n\t\t\t} catch (e) {\n\t\t\t\tconst message = e instanceof Error ? e.message : JSON.stringify(e);\n\t\t\t\tsendResponse(500, message);\n\t\t\t\tthis.logService.error('Error while processing pipe request', e);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async open(data: OpenCommandPipeArgs): Promise<string> {\n\t\tconst { fileURIs, folderURIs, forceNewWindow, diffMode, mergeMode, addMode, forceReuseWindow, gotoLineMode, waitMarkerFilePath, remoteAuthority } = data;\n\t\tconst urisToOpen: IWindowOpenable[] = [];\n\t\tif (Array.isArray(folderURIs)) {\n\t\t\tfor (const s of folderURIs) {\n\t\t\t\ttry {\n\t\t\t\t\turisToOpen.push({ folderUri: URI.parse(s) });\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// ignore\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (Array.isArray(fileURIs)) {\n\t\t\tfor (const s of fileURIs) {\n\t\t\t\ttry {\n\t\t\t\t\tif (hasWorkspaceFileExtension(s)) {\n\t\t\t\t\t\turisToOpen.push({ workspaceUri: URI.parse(s) });\n\t\t\t\t\t} else {\n\t\t\t\t\t\turisToOpen.push({ fileUri: URI.parse(s) });\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// ignore\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst waitMarkerFileURI = waitMarkerFilePath ? URI.file(waitMarkerFilePath) : undefined;\n\t\tconst preferNewWindow = !forceReuseWindow && !waitMarkerFileURI && !addMode;\n\t\tconst windowOpenArgs: IOpenWindowOptions = { forceNewWindow, diffMode, mergeMode, addMode, gotoLineMode, forceReuseWindow, preferNewWindow, waitMarkerFileURI, remoteAuthority };\n\t\tthis._commands.executeCommand('_remoteCLI.windowOpen', urisToOpen, windowOpenArgs);\n\n\t\treturn '';\n\t}\n\n\tprivate async openExternal(data: OpenExternalCommandPipeArgs): Promise<any> {\n\t\tfor (const uriString of data.uris) {\n\t\t\tconst uri = URI.parse(uriString);\n\t\t\tconst urioOpen = uri.scheme === 'file' ? uri : uriString; // workaround for #112577\n\t\t\tawait this._commands.executeCommand('_remoteCLI.openExternal', urioOpen);\n\t\t}\n\t}\n\n\tprivate async manageExtensions(data: ExtensionManagementPipeArgs): Promise<any> {\n\t\tconst toExtOrVSIX = (inputs: string[] | undefined) => inputs?.map(input => /\\.vsix$/i.test(input) ? URI.parse(input) : input);\n\t\tconst commandArgs = {\n\t\t\tlist: data.list,\n\t\t\tinstall: toExtOrVSIX(data.install),\n\t\t\tuninstall: toExtOrVSIX(data.uninstall),\n\t\t\tforce: data.force\n\t\t};\n\t\treturn await this._commands.executeCommand('_remoteCLI.manageExtensions', commandArgs);\n\t}\n\n\tprivate async getStatus(data: StatusPipeArgs) {\n\t\treturn await this._commands.executeCommand('_remoteCLI.getSystemStatus');\n\t}\n\n\tdispose(): void {\n\t\tthis._server.close();\n\n\t\tif (this._ipcHandlePath && process.platform !== 'win32' && fs.existsSync(this._ipcHandlePath)) {\n\t\t\tfs.unlinkSync(this._ipcHandlePath);\n\t\t}\n\t}\n}\n\nexport class CLIServer extends CLIServerBase {\n\tconstructor(\n\t\t@IExtHostCommands commands: IExtHostCommands,\n\t\t@ILogService logService: ILogService\n\t) {\n\t\tsuper(commands, logService, createRandomIPCHandle());\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as os from 'os';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { cloneAndChange } from 'vs/base/common/objects';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport * as path from 'vs/base/common/path';\nimport * as platform from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport { IURITransformer } from 'vs/base/common/uriIpc';\nimport { IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { createRandomIPCHandle } from 'vs/base/parts/ipc/node/ipc.net';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { RemoteAgentConnectionContext } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { IPtyService, IShellLaunchConfig, ITerminalProfile } from 'vs/platform/terminal/common/terminal';\nimport { IGetTerminalLayoutInfoArgs, ISetTerminalLayoutInfoArgs } from 'vs/platform/terminal/common/terminalProcess';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { createURITransformer } from 'vs/workbench/api/node/uriTransformer';\nimport { CLIServerBase, ICommandsExecuter } from 'vs/workbench/api/node/extHostCLIServer';\nimport { IEnvironmentVariableCollection } from 'vs/workbench/contrib/terminal/common/environmentVariable';\nimport { MergedEnvironmentVariableCollection } from 'vs/workbench/contrib/terminal/common/environmentVariableCollection';\nimport { deserializeEnvironmentVariableCollection } from 'vs/workbench/contrib/terminal/common/environmentVariableShared';\nimport { ICreateTerminalProcessArguments, ICreateTerminalProcessResult, IWorkspaceFolderData } from 'vs/workbench/contrib/terminal/common/remoteTerminalChannel';\nimport * as terminalEnvironment from 'vs/workbench/contrib/terminal/common/terminalEnvironment';\nimport { AbstractVariableResolverService } from 'vs/workbench/services/configurationResolver/common/variableResolver';\nimport { buildUserEnvironment } from 'vs/server/node/extensionHostConnection';\nimport { IServerEnvironmentService } from 'vs/server/node/serverEnvironmentService';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IExtensionManagementService } from 'vs/platform/extensionManagement/common/extensionManagement';\n\nclass CustomVariableResolver extends AbstractVariableResolverService {\n\tconstructor(\n\t\tenv: platform.IProcessEnvironment,\n\t\tworkspaceFolders: IWorkspaceFolder[],\n\t\tactiveFileResource: URI | undefined,\n\t\tresolvedVariables: { [name: string]: string },\n\t\textensionService: IExtensionManagementService,\n\t) {\n\t\tsuper({\n\t\t\tgetFolderUri: (folderName: string): URI | undefined => {\n\t\t\t\tconst found = workspaceFolders.filter(f => f.name === folderName);\n\t\t\t\tif (found && found.length > 0) {\n\t\t\t\t\treturn found[0].uri;\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tgetWorkspaceFolderCount: (): number => {\n\t\t\t\treturn workspaceFolders.length;\n\t\t\t},\n\t\t\tgetConfigurationValue: (folderUri: URI, section: string): string | undefined => {\n\t\t\t\treturn resolvedVariables[`config:${section}`];\n\t\t\t},\n\t\t\tgetExecPath: (): string | undefined => {\n\t\t\t\treturn env['VSCODE_EXEC_PATH'];\n\t\t\t},\n\t\t\tgetAppRoot: (): string | undefined => {\n\t\t\t\treturn env['VSCODE_CWD'];\n\t\t\t},\n\t\t\tgetFilePath: (): string | undefined => {\n\t\t\t\tif (activeFileResource) {\n\t\t\t\t\treturn path.normalize(activeFileResource.fsPath);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tgetSelectedText: (): string | undefined => {\n\t\t\t\treturn resolvedVariables['selectedText'];\n\t\t\t},\n\t\t\tgetLineNumber: (): string | undefined => {\n\t\t\t\treturn resolvedVariables['lineNumber'];\n\t\t\t},\n\t\t\tgetExtension: async id => {\n\t\t\t\tconst installed = await extensionService.getInstalled();\n\t\t\t\tconst found = installed.find(e => e.identifier.id === id);\n\t\t\t\treturn found && { extensionLocation: found.location };\n\t\t\t},\n\t\t}, undefined, Promise.resolve(os.homedir()), Promise.resolve(env));\n\t}\n}\n\nexport class RemoteTerminalChannel extends Disposable implements IServerChannel<RemoteAgentConnectionContext> {\n\n\tprivate _lastReqId = 0;\n\tprivate readonly _pendingCommands = new Map<number, {\n\t\tresolve: (data: any) => void;\n\t\treject: (err: any) => void;\n\t\turiTransformer: IURITransformer;\n\t}>();\n\n\tprivate readonly _onExecuteCommand = this._register(new Emitter<{ reqId: number; terminalId: number; commandId: string; commandArgs: any[] }>());\n\treadonly onExecuteCommand = this._onExecuteCommand.event;\n\n\tconstructor(\n\t\tprivate readonly _environmentService: IServerEnvironmentService,\n\t\tprivate readonly _logService: ILogService,\n\t\tprivate readonly _ptyService: IPtyService,\n\t\tprivate readonly _productService: IProductService,\n\t\tprivate readonly _extensionManagementService: IExtensionManagementService,\n\t) {\n\t\tsuper();\n\t}\n\n\tasync call(ctx: RemoteAgentConnectionContext, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase '$restartPtyHost': return this._ptyService.restartPtyHost?.apply(this._ptyService, args);\n\n\t\t\tcase '$createProcess': {\n\t\t\t\tconst uriTransformer = createURITransformer(ctx.remoteAuthority);\n\t\t\t\treturn this._createProcess(uriTransformer, <ICreateTerminalProcessArguments>args);\n\t\t\t}\n\t\t\tcase '$attachToProcess': return this._ptyService.attachToProcess.apply(this._ptyService, args);\n\t\t\tcase '$detachFromProcess': return this._ptyService.detachFromProcess.apply(this._ptyService, args);\n\n\t\t\tcase '$listProcesses': return this._ptyService.listProcesses.apply(this._ptyService, args);\n\t\t\tcase '$orphanQuestionReply': return this._ptyService.orphanQuestionReply.apply(this._ptyService, args);\n\t\t\tcase '$acceptPtyHostResolvedVariables': return this._ptyService.acceptPtyHostResolvedVariables?.apply(this._ptyService, args);\n\n\t\t\tcase '$start': return this._ptyService.start.apply(this._ptyService, args);\n\t\t\tcase '$input': return this._ptyService.input.apply(this._ptyService, args);\n\t\t\tcase '$acknowledgeDataEvent': return this._ptyService.acknowledgeDataEvent.apply(this._ptyService, args);\n\t\t\tcase '$shutdown': return this._ptyService.shutdown.apply(this._ptyService, args);\n\t\t\tcase '$resize': return this._ptyService.resize.apply(this._ptyService, args);\n\t\t\tcase '$getInitialCwd': return this._ptyService.getInitialCwd.apply(this._ptyService, args);\n\t\t\tcase '$getCwd': return this._ptyService.getCwd.apply(this._ptyService, args);\n\n\t\t\tcase '$processBinary': return this._ptyService.processBinary.apply(this._ptyService, args);\n\n\t\t\tcase '$sendCommandResult': return this._sendCommandResult(args[0], args[1], args[2]);\n\t\t\tcase '$installAutoReply': return this._ptyService.installAutoReply.apply(this._ptyService, args);\n\t\t\tcase '$uninstallAllAutoReplies': return this._ptyService.uninstallAllAutoReplies.apply(this._ptyService, args);\n\t\t\tcase '$getDefaultSystemShell': return this._getDefaultSystemShell.apply(this, args);\n\t\t\tcase '$getProfiles': return this._getProfiles.apply(this, args);\n\t\t\tcase '$getEnvironment': return this._getEnvironment();\n\t\t\tcase '$getWslPath': return this._getWslPath(args[0]);\n\t\t\tcase '$getTerminalLayoutInfo': return this._ptyService.getTerminalLayoutInfo(<IGetTerminalLayoutInfoArgs>args);\n\t\t\tcase '$setTerminalLayoutInfo': return this._ptyService.setTerminalLayoutInfo(<ISetTerminalLayoutInfoArgs>args);\n\t\t\tcase '$serializeTerminalState': return this._ptyService.serializeTerminalState.apply(this._ptyService, args);\n\t\t\tcase '$reviveTerminalProcesses': return this._ptyService.reviveTerminalProcesses.apply(this._ptyService, args);\n\t\t\tcase '$getRevivedPtyNewId': return this._ptyService.getRevivedPtyNewId.apply(this._ptyService, args);\n\t\t\tcase '$setUnicodeVersion': return this._ptyService.setUnicodeVersion.apply(this._ptyService, args);\n\t\t\tcase '$reduceConnectionGraceTime': return this._reduceConnectionGraceTime();\n\t\t\tcase '$updateIcon': return this._ptyService.updateIcon.apply(this._ptyService, args);\n\t\t\tcase '$updateTitle': return this._ptyService.updateTitle.apply(this._ptyService, args);\n\t\t\tcase '$updateProperty': return this._ptyService.updateProperty.apply(this._ptyService, args);\n\t\t\tcase '$refreshProperty': return this._ptyService.refreshProperty.apply(this._ptyService, args);\n\t\t\tcase '$requestDetachInstance': return this._ptyService.requestDetachInstance(args[0], args[1]);\n\t\t\tcase '$acceptDetachedInstance': return this._ptyService.acceptDetachInstanceReply(args[0], args[1]);\n\t\t}\n\n\t\tthrow new Error(`IPC Command ${command} not found`);\n\t}\n\n\tlisten(_: any, event: string, arg: any): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase '$onPtyHostExitEvent': return this._ptyService.onPtyHostExit || Event.None;\n\t\t\tcase '$onPtyHostStartEvent': return this._ptyService.onPtyHostStart || Event.None;\n\t\t\tcase '$onPtyHostUnresponsiveEvent': return this._ptyService.onPtyHostUnresponsive || Event.None;\n\t\t\tcase '$onPtyHostResponsiveEvent': return this._ptyService.onPtyHostResponsive || Event.None;\n\t\t\tcase '$onPtyHostRequestResolveVariablesEvent': return this._ptyService.onPtyHostRequestResolveVariables || Event.None;\n\t\t\tcase '$onProcessDataEvent': return this._ptyService.onProcessData;\n\t\t\tcase '$onProcessReadyEvent': return this._ptyService.onProcessReady;\n\t\t\tcase '$onProcessExitEvent': return this._ptyService.onProcessExit;\n\t\t\tcase '$onProcessReplayEvent': return this._ptyService.onProcessReplay;\n\t\t\tcase '$onProcessOrphanQuestion': return this._ptyService.onProcessOrphanQuestion;\n\t\t\tcase '$onExecuteCommand': return this.onExecuteCommand;\n\t\t\tcase '$onDidRequestDetach': return this._ptyService.onDidRequestDetach || Event.None;\n\t\t\tcase '$onDidChangeProperty': return this._ptyService.onDidChangeProperty;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthrow new Error('Not supported');\n\t}\n\n\tprivate async _createProcess(uriTransformer: IURITransformer, args: ICreateTerminalProcessArguments): Promise<ICreateTerminalProcessResult> {\n\t\tconst shellLaunchConfig: IShellLaunchConfig = {\n\t\t\tname: args.shellLaunchConfig.name,\n\t\t\texecutable: args.shellLaunchConfig.executable,\n\t\t\targs: args.shellLaunchConfig.args,\n\t\t\tcwd: (\n\t\t\t\ttypeof args.shellLaunchConfig.cwd === 'string' || typeof args.shellLaunchConfig.cwd === 'undefined'\n\t\t\t\t\t? args.shellLaunchConfig.cwd\n\t\t\t\t\t: URI.revive(uriTransformer.transformIncoming(args.shellLaunchConfig.cwd))\n\t\t\t),\n\t\t\tenv: args.shellLaunchConfig.env,\n\t\t\tuseShellEnvironment: args.shellLaunchConfig.useShellEnvironment\n\t\t};\n\n\n\t\tconst baseEnv = await buildUserEnvironment(args.resolverEnv, !!args.shellLaunchConfig.useShellEnvironment, platform.language, this._environmentService, this._logService);\n\t\tthis._logService.trace('baseEnv', baseEnv);\n\n\t\tconst reviveWorkspaceFolder = (workspaceData: IWorkspaceFolderData): IWorkspaceFolder => {\n\t\t\treturn {\n\t\t\t\turi: URI.revive(uriTransformer.transformIncoming(workspaceData.uri)),\n\t\t\t\tname: workspaceData.name,\n\t\t\t\tindex: workspaceData.index,\n\t\t\t\ttoResource: () => {\n\t\t\t\t\tthrow new Error('Not implemented');\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t\tconst workspaceFolders = args.workspaceFolders.map(reviveWorkspaceFolder);\n\t\tconst activeWorkspaceFolder = args.activeWorkspaceFolder ? reviveWorkspaceFolder(args.activeWorkspaceFolder) : undefined;\n\t\tconst activeFileResource = args.activeFileResource ? URI.revive(uriTransformer.transformIncoming(args.activeFileResource)) : undefined;\n\t\tconst customVariableResolver = new CustomVariableResolver(baseEnv, workspaceFolders, activeFileResource, args.resolvedVariables, this._extensionManagementService);\n\t\tconst variableResolver = terminalEnvironment.createVariableResolver(activeWorkspaceFolder, process.env, customVariableResolver);\n\n\t\t// Get the initial cwd\n\t\tconst initialCwd = await terminalEnvironment.getCwd(shellLaunchConfig, os.homedir(), variableResolver, activeWorkspaceFolder?.uri, args.configuration['terminal.integrated.cwd'], this._logService);\n\t\tshellLaunchConfig.cwd = initialCwd;\n\n\t\tconst envPlatformKey = platform.isWindows ? 'terminal.integrated.env.windows' : (platform.isMacintosh ? 'terminal.integrated.env.osx' : 'terminal.integrated.env.linux');\n\t\tconst envFromConfig = args.configuration[envPlatformKey];\n\t\tconst env = await terminalEnvironment.createTerminalEnvironment(\n\t\t\tshellLaunchConfig,\n\t\t\tenvFromConfig,\n\t\t\tvariableResolver,\n\t\t\tthis._productService.version,\n\t\t\targs.configuration['terminal.integrated.detectLocale'],\n\t\t\tbaseEnv\n\t\t);\n\n\t\t// Apply extension environment variable collections to the environment\n\t\tif (!shellLaunchConfig.strictEnv) {\n\t\t\tconst entries: [string, IEnvironmentVariableCollection][] = [];\n\t\t\tfor (const [k, v] of args.envVariableCollections) {\n\t\t\t\tentries.push([k, { map: deserializeEnvironmentVariableCollection(v) }]);\n\t\t\t}\n\t\t\tconst envVariableCollections = new Map<string, IEnvironmentVariableCollection>(entries);\n\t\t\tconst mergedCollection = new MergedEnvironmentVariableCollection(envVariableCollections);\n\t\t\tawait mergedCollection.applyToProcessEnvironment(env, variableResolver);\n\t\t}\n\n\t\t// Fork the process and listen for messages\n\t\tthis._logService.debug(`Terminal process launching on remote agent`, { shellLaunchConfig, initialCwd, cols: args.cols, rows: args.rows, env });\n\n\t\t// Setup the CLI server to support forwarding commands run from the CLI\n\t\tconst ipcHandlePath = createRandomIPCHandle();\n\t\tenv.VSCODE_IPC_HOOK_CLI = ipcHandlePath;\n\t\tconst commandsExecuter: ICommandsExecuter = {\n\t\t\texecuteCommand: <T>(commandId: string, ...args: any[]): Promise<T> => this._executeCommand(terminalId, commandId, args, uriTransformer)\n\t\t};\n\t\tconst cliServer = new CLIServerBase(commandsExecuter, this._logService, ipcHandlePath);\n\n\t\tconst terminalId = await this._ptyService.createProcess(shellLaunchConfig, initialCwd, args.cols, args.rows, args.unicodeVersion, env, baseEnv, args.options, args.shouldPersistTerminal, args.workspaceId, args.workspaceName);\n\t\tthis._ptyService.onProcessExit(e => e.id === terminalId && cliServer.dispose());\n\n\t\treturn {\n\t\t\tpersistentTerminalId: terminalId,\n\t\t\tresolvedShellLaunchConfig: shellLaunchConfig\n\t\t};\n\t}\n\n\tprivate _executeCommand<T>(terminalId: number, commandId: string, commandArgs: any[], uriTransformer: IURITransformer): Promise<T> {\n\t\tlet resolve!: (data: any) => void;\n\t\tlet reject!: (err: any) => void;\n\t\tconst result = new Promise<T>((_resolve, _reject) => {\n\t\t\tresolve = _resolve;\n\t\t\treject = _reject;\n\t\t});\n\n\t\tconst reqId = ++this._lastReqId;\n\t\tthis._pendingCommands.set(reqId, { resolve, reject, uriTransformer });\n\n\t\tconst serializedCommandArgs = cloneAndChange(commandArgs, (obj) => {\n\t\t\tif (obj && obj.$mid === 1) {\n\t\t\t\t// this is UriComponents\n\t\t\t\treturn uriTransformer.transformOutgoing(obj);\n\t\t\t}\n\t\t\tif (obj && obj instanceof URI) {\n\t\t\t\treturn uriTransformer.transformOutgoingURI(obj);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t\tthis._onExecuteCommand.fire({\n\t\t\treqId,\n\t\t\tterminalId,\n\t\t\tcommandId,\n\t\t\tcommandArgs: serializedCommandArgs\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tprivate _sendCommandResult(reqId: number, isError: boolean, serializedPayload: any): void {\n\t\tconst data = this._pendingCommands.get(reqId);\n\t\tif (!data) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pendingCommands.delete(reqId);\n\t\tconst payload = cloneAndChange(serializedPayload, (obj) => {\n\t\t\tif (obj && obj.$mid === 1) {\n\t\t\t\t// this is UriComponents\n\t\t\t\treturn data.uriTransformer.transformIncoming(obj);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t\tif (isError) {\n\t\t\tdata.reject(payload);\n\t\t} else {\n\t\t\tdata.resolve(payload);\n\t\t}\n\t}\n\n\tprivate _getDefaultSystemShell(osOverride?: platform.OperatingSystem): Promise<string> {\n\t\treturn this._ptyService.getDefaultSystemShell(osOverride);\n\t}\n\n\tprivate async _getProfiles(workspaceId: string, profiles: unknown, defaultProfile: unknown, includeDetectedProfiles?: boolean): Promise<ITerminalProfile[]> {\n\t\treturn this._ptyService.getProfiles?.(workspaceId, profiles, defaultProfile, includeDetectedProfiles) || [];\n\t}\n\n\tprivate _getEnvironment(): platform.IProcessEnvironment {\n\t\treturn { ...process.env };\n\t}\n\n\tprivate _getWslPath(original: string): Promise<string> {\n\t\treturn this._ptyService.getWslPath(original);\n\t}\n\n\n\tprivate _reduceConnectionGraceTime(): Promise<void> {\n\t\treturn this._ptyService.reduceConnectionGraceTime();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { RemoteAgentConnectionContext, IRemoteAgentEnvironment } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IDiagnosticInfoOptions, IDiagnosticInfo } from 'vs/platform/diagnostics/common/diagnostics';\nimport { Event } from 'vs/base/common/event';\nimport { PersistentConnectionEvent, ISocketFactory } from 'vs/platform/remote/common/remoteAgentConnection';\nimport { ITelemetryData, TelemetryLevel } from 'vs/platform/telemetry/common/telemetry';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { URI } from 'vs/base/common/uri';\n\nexport const RemoteExtensionLogFileName = 'remoteagent';\n\nexport const IRemoteAgentService = createDecorator<IRemoteAgentService>('remoteAgentService');\n\nexport interface IRemoteAgentService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly socketFactory: ISocketFactory;\n\n\tgetConnection(): IRemoteAgentConnection | null;\n\t/**\n\t * Get the remote environment. In case of an error, returns `null`.\n\t */\n\tgetEnvironment(): Promise<IRemoteAgentEnvironment | null>;\n\t/**\n\t * Get the remote environment. Can return an error.\n\t */\n\tgetRawEnvironment(): Promise<IRemoteAgentEnvironment | null>;\n\t/**\n\t * Get exit information for a remote extension host.\n\t */\n\tgetExtensionHostExitInfo(reconnectionToken: string): Promise<IExtensionHostExitInfo | null>;\n\n\t/**\n\t * Gets the round trip time from the remote extension host. Note that this\n\t * may be delayed if the extension host is busy.\n\t */\n\tgetRoundTripTime(): Promise<number | undefined>;\n\n\twhenExtensionsReady(): Promise<void>;\n\t/**\n\t * Scan remote extensions.\n\t */\n\tscanExtensions(skipExtensions?: ExtensionIdentifier[]): Promise<IExtensionDescription[]>;\n\t/**\n\t * Scan a single remote extension.\n\t */\n\tscanSingleExtension(extensionLocation: URI, isBuiltin: boolean): Promise<IExtensionDescription | null>;\n\tgetDiagnosticInfo(options: IDiagnosticInfoOptions): Promise<IDiagnosticInfo | undefined>;\n\tupdateTelemetryLevel(telemetryLevel: TelemetryLevel): Promise<void>;\n\tlogTelemetry(eventName: string, data?: ITelemetryData): Promise<void>;\n\tflushTelemetry(): Promise<void>;\n}\n\nexport interface IExtensionHostExitInfo {\n\tcode: number;\n\tsignal: string;\n}\n\nexport interface IRemoteAgentConnection {\n\treadonly remoteAuthority: string;\n\n\treadonly onReconnecting: Event<void>;\n\treadonly onDidStateChange: Event<PersistentConnectionEvent>;\n\n\tdispose(): void;\n\tgetChannel<T extends IChannel>(channelName: string): T;\n\twithChannel<T extends IChannel, R>(channelName: string, callback: (channel: T) => Promise<R>): Promise<R>;\n\tregisterChannel<T extends IServerChannel<RemoteAgentConnectionContext>>(channelName: string, channel: T): void;\n\tgetInitialConnectionTimeMs(): Promise<number>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getErrorMessage } from 'vs/base/common/errors';\nimport { Disposable, DisposableStore, IDisposable } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport { OperatingSystem } from 'vs/base/common/platform';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { DiskFileSystemProviderClient } from 'vs/platform/files/common/diskFileSystemProviderClient';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IRemoteAgentEnvironment } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { IRemoteAgentConnection, IRemoteAgentService } from 'vs/workbench/services/remote/common/remoteAgentService';\n\nexport const REMOTE_FILE_SYSTEM_CHANNEL_NAME = 'remoteFilesystem';\n\nexport class RemoteFileSystemProviderClient extends DiskFileSystemProviderClient {\n\n\tstatic register(remoteAgentService: IRemoteAgentService, fileService: IFileService, logService: ILogService): IDisposable {\n\t\tconst connection = remoteAgentService.getConnection();\n\t\tif (!connection) {\n\t\t\treturn Disposable.None;\n\t\t}\n\n\t\tconst disposables = new DisposableStore();\n\n\t\tconst environmentPromise = (async () => {\n\t\t\ttry {\n\t\t\t\tconst environment = await remoteAgentService.getRawEnvironment();\n\t\t\t\tif (environment) {\n\t\t\t\t\t// Register remote fsp even before it is asked to activate\n\t\t\t\t\t// because, some features (configuration) wait for its\n\t\t\t\t\t// registration before making fs calls.\n\t\t\t\t\tfileService.registerProvider(Schemas.vscodeRemote, disposables.add(new RemoteFileSystemProviderClient(environment, connection)));\n\t\t\t\t} else {\n\t\t\t\t\tlogService.error('Cannot register remote filesystem provider. Remote environment doesnot exist.');\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tlogService.error('Cannot register remote filesystem provider. Error while fetching remote environment.', getErrorMessage(error));\n\t\t\t}\n\t\t})();\n\n\t\tdisposables.add(fileService.onWillActivateFileSystemProvider(e => {\n\t\t\tif (e.scheme === Schemas.vscodeRemote) {\n\t\t\t\te.join(environmentPromise);\n\t\t\t}\n\t\t}));\n\n\t\treturn disposables;\n\t}\n\n\tprivate constructor(remoteAgentEnvironment: IRemoteAgentEnvironment, connection: IRemoteAgentConnection) {\n\t\tsuper(connection.getChannel(REMOTE_FILE_SYSTEM_CHANNEL_NAME), { pathCaseSensitive: remoteAgentEnvironment.os === OperatingSystem.Linux });\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createWriteStream, WriteStream } from 'fs';\nimport { Readable } from 'stream';\nimport { createCancelablePromise, Sequencer } from 'vs/base/common/async';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport * as path from 'vs/base/common/path';\nimport { assertIsDefined } from 'vs/base/common/types';\nimport { Promises } from 'vs/base/node/pfs';\nimport * as nls from 'vs/nls';\nimport { Entry, open as _openZip, ZipFile } from 'yauzl';\nimport * as yazl from 'yazl';\n\nexport interface IExtractOptions {\n\toverwrite?: boolean;\n\n\t/**\n\t * Source path within the ZIP archive. Only the files contained in this\n\t * path will be extracted.\n\t */\n\tsourcePath?: string;\n}\n\ninterface IOptions {\n\tsourcePathRegex: RegExp;\n}\n\nexport type ExtractErrorType = 'CorruptZip' | 'Incomplete';\n\nexport class ExtractError extends Error {\n\n\treadonly type?: ExtractErrorType;\n\treadonly cause: Error;\n\n\tconstructor(type: ExtractErrorType | undefined, cause: Error) {\n\t\tlet message = cause.message;\n\n\t\tswitch (type) {\n\t\t\tcase 'CorruptZip': message = `Corrupt ZIP: ${message}`; break;\n\t\t}\n\n\t\tsuper(message);\n\t\tthis.type = type;\n\t\tthis.cause = cause;\n\t}\n}\n\nfunction modeFromEntry(entry: Entry) {\n\tconst attr = entry.externalFileAttributes >> 16 || 33188;\n\n\treturn [448 /* S_IRWXU */, 56 /* S_IRWXG */, 7 /* S_IRWXO */]\n\t\t.map(mask => attr & mask)\n\t\t.reduce((a, b) => a + b, attr & 61440 /* S_IFMT */);\n}\n\nfunction toExtractError(err: Error): ExtractError {\n\tif (err instanceof ExtractError) {\n\t\treturn err;\n\t}\n\n\tlet type: ExtractErrorType | undefined = undefined;\n\n\tif (/end of central directory record signature not found/.test(err.message)) {\n\t\ttype = 'CorruptZip';\n\t}\n\n\treturn new ExtractError(type, err);\n}\n\nfunction extractEntry(stream: Readable, fileName: string, mode: number, targetPath: string, options: IOptions, token: CancellationToken): Promise<void> {\n\tconst dirName = path.dirname(fileName);\n\tconst targetDirName = path.join(targetPath, dirName);\n\tif (!targetDirName.startsWith(targetPath)) {\n\t\treturn Promise.reject(new Error(nls.localize('invalid file', \"Error extracting {0}. Invalid file.\", fileName)));\n\t}\n\tconst targetFileName = path.join(targetPath, fileName);\n\n\tlet istream: WriteStream;\n\n\ttoken.onCancellationRequested(() => {\n\t\tif (istream) {\n\t\t\tistream.destroy();\n\t\t}\n\t});\n\n\treturn Promise.resolve(Promises.mkdir(targetDirName, { recursive: true })).then(() => new Promise<void>((c, e) => {\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tistream = createWriteStream(targetFileName, { mode });\n\t\t\tistream.once('close', () => c());\n\t\t\tistream.once('error', e);\n\t\t\tstream.once('error', e);\n\t\t\tstream.pipe(istream);\n\t\t} catch (error) {\n\t\t\te(error);\n\t\t}\n\t}));\n}\n\nfunction extractZip(zipfile: ZipFile, targetPath: string, options: IOptions, token: CancellationToken): Promise<void> {\n\tlet last = createCancelablePromise<void>(() => Promise.resolve());\n\tlet extractedEntriesCount = 0;\n\n\ttoken.onCancellationRequested(() => {\n\t\tlast.cancel();\n\t\tzipfile.close();\n\t});\n\n\treturn new Promise((c, e) => {\n\t\tconst throttler = new Sequencer();\n\n\t\tconst readNextEntry = (token: CancellationToken) => {\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\textractedEntriesCount++;\n\t\t\tzipfile.readEntry();\n\t\t};\n\n\t\tzipfile.once('error', e);\n\t\tzipfile.once('close', () => last.then(() => {\n\t\t\tif (token.isCancellationRequested || zipfile.entryCount === extractedEntriesCount) {\n\t\t\t\tc();\n\t\t\t} else {\n\t\t\t\te(new ExtractError('Incomplete', new Error(nls.localize('incompleteExtract', \"Incomplete. Found {0} of {1} entries\", extractedEntriesCount, zipfile.entryCount))));\n\t\t\t}\n\t\t}, e));\n\t\tzipfile.readEntry();\n\t\tzipfile.on('entry', (entry: Entry) => {\n\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!options.sourcePathRegex.test(entry.fileName)) {\n\t\t\t\treadNextEntry(token);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst fileName = entry.fileName.replace(options.sourcePathRegex, '');\n\n\t\t\t// directory file names end with '/'\n\t\t\tif (/\\/$/.test(fileName)) {\n\t\t\t\tconst targetFileName = path.join(targetPath, fileName);\n\t\t\t\tlast = createCancelablePromise(token => Promises.mkdir(targetFileName, { recursive: true }).then(() => readNextEntry(token)).then(undefined, e));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst stream = openZipStream(zipfile, entry);\n\t\t\tconst mode = modeFromEntry(entry);\n\n\t\t\tlast = createCancelablePromise(token => throttler.queue(() => stream.then(stream => extractEntry(stream, fileName, mode, targetPath, options, token).then(() => readNextEntry(token)))).then(null, e));\n\t\t});\n\t});\n}\n\nfunction openZip(zipFile: string, lazy: boolean = false): Promise<ZipFile> {\n\treturn new Promise<ZipFile>((resolve, reject) => {\n\t\t_openZip(zipFile, lazy ? { lazyEntries: true } : undefined!, (error?: Error, zipfile?: ZipFile) => {\n\t\t\tif (error) {\n\t\t\t\treject(toExtractError(error));\n\t\t\t} else {\n\t\t\t\tresolve(assertIsDefined(zipfile));\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction openZipStream(zipFile: ZipFile, entry: Entry): Promise<Readable> {\n\treturn new Promise<Readable>((resolve, reject) => {\n\t\tzipFile.openReadStream(entry, (error?: Error, stream?: Readable) => {\n\t\t\tif (error) {\n\t\t\t\treject(toExtractError(error));\n\t\t\t} else {\n\t\t\t\tresolve(assertIsDefined(stream));\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport interface IFile {\n\tpath: string;\n\tcontents?: Buffer | string;\n\tlocalPath?: string;\n}\n\nexport function zip(zipPath: string, files: IFile[]): Promise<string> {\n\treturn new Promise<string>((c, e) => {\n\t\tconst zip = new yazl.ZipFile();\n\t\tfiles.forEach(f => {\n\t\t\tif (f.contents) {\n\t\t\t\tzip.addBuffer(typeof f.contents === 'string' ? Buffer.from(f.contents, 'utf8') : f.contents, f.path);\n\t\t\t} else if (f.localPath) {\n\t\t\t\tzip.addFile(f.localPath, f.path);\n\t\t\t}\n\t\t});\n\t\tzip.end();\n\n\t\tconst zipStream = createWriteStream(zipPath);\n\t\tzip.outputStream.pipe(zipStream);\n\n\t\tzip.outputStream.once('error', e);\n\t\tzipStream.once('error', e);\n\t\tzipStream.once('finish', () => c(zipPath));\n\t});\n}\n\nexport function extract(zipPath: string, targetPath: string, options: IExtractOptions = {}, token: CancellationToken): Promise<void> {\n\tconst sourcePathRegex = new RegExp(options.sourcePath ? `^${options.sourcePath}` : '');\n\n\tlet promise = openZip(zipPath, true);\n\n\tif (options.overwrite) {\n\t\tpromise = promise.then(zipfile => Promises.rm(targetPath).then(() => zipfile));\n\t}\n\n\treturn promise.then(zipfile => extractZip(zipfile, targetPath, { sourcePathRegex }, token));\n}\n\nfunction read(zipPath: string, filePath: string): Promise<Readable> {\n\treturn openZip(zipPath).then(zipfile => {\n\t\treturn new Promise<Readable>((c, e) => {\n\t\t\tzipfile.on('entry', (entry: Entry) => {\n\t\t\t\tif (entry.fileName === filePath) {\n\t\t\t\t\topenZipStream(zipfile, entry).then(stream => c(stream), err => e(err));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tzipfile.once('close', () => e(new Error(nls.localize('notFound', \"{0} not found inside zip.\", filePath))));\n\t\t});\n\t});\n}\n\nexport function buffer(zipPath: string, filePath: string): Promise<Buffer> {\n\treturn read(zipPath, filePath).then(stream => {\n\t\treturn new Promise<Buffer>((c, e) => {\n\t\t\tconst buffers: Buffer[] = [];\n\t\t\tstream.once('error', e);\n\t\t\tstream.on('data', (b: Buffer) => buffers.push(b));\n\t\t\tstream.on('end', () => c(Buffer.concat(buffers)));\n\t\t});\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { buffer } from 'vs/base/node/zip';\nimport { localize } from 'vs/nls';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\nexport function getManifest(vsix: string): Promise<IExtensionManifest> {\n\treturn buffer(vsix, 'extension/package.json')\n\t\t.then(buffer => {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString('utf8'));\n\t\t\t} catch (err) {\n\t\t\t\tthrow new Error(localize('invalidManifest', \"VSIX invalid: package.json is not a JSON file.\"));\n\t\t\t}\n\t\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Promises, Queue } from 'vs/base/common/async';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { getErrorMessage } from 'vs/base/common/errors';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport * as path from 'vs/base/common/path';\nimport { isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { joinPath } from 'vs/base/common/resources';\nimport * as semver from 'vs/base/common/semver/semver';\nimport { isBoolean, isUndefined } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport * as pfs from 'vs/base/node/pfs';\nimport { extract, ExtractError, IFile, zip } from 'vs/base/node/zip';\nimport * as nls from 'vs/nls';\nimport { IDownloadService } from 'vs/platform/download/common/download';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { AbstractExtensionManagementService, AbstractExtensionTask, IInstallExtensionTask, IUninstallExtensionTask, joinErrors } from 'vs/platform/extensionManagement/common/abstractExtensionManagementService';\nimport {\n\tExtensionManagementError, ExtensionManagementErrorCode, IExtensionGalleryService, IExtensionIdentifier, IGalleryExtension, IGalleryMetadata, ILocalExtension, InstallOperation,\n\tIServerExtensionManagementService,\n\tMetadata, ServerInstallOptions, ServerInstallVSIXOptions, ServerUninstallOptions\n} from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions, computeTargetPlatform, ExtensionKey, getGalleryExtensionId, groupByExtension } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { IExtensionsProfileScannerService } from 'vs/platform/extensionManagement/common/extensionsProfileScannerService';\nimport { IExtensionsScannerService, IScannedExtension, ScanOptions } from 'vs/platform/extensionManagement/common/extensionsScannerService';\nimport { ExtensionsDownloader } from 'vs/platform/extensionManagement/node/extensionDownloader';\nimport { ExtensionsLifecycle } from 'vs/platform/extensionManagement/node/extensionLifecycle';\nimport { getManifest } from 'vs/platform/extensionManagement/node/extensionManagementUtil';\nimport { ExtensionsManifestCache } from 'vs/platform/extensionManagement/node/extensionsManifestCache';\nimport { ExtensionsWatcher } from 'vs/platform/extensionManagement/node/extensionsWatcher';\nimport { ExtensionType, IExtensionManifest, isApplicationScopedExtension, TargetPlatform } from 'vs/platform/extensions/common/extensions';\nimport { isEngineValid } from 'vs/platform/extensions/common/extensionValidator';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IInstantiationService, refineServiceDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { IUserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\n\ninterface InstallableExtension {\n\tzipPath: string;\n\tkey: ExtensionKey;\n\tmetadata?: Metadata;\n}\n\nexport const INativeServerExtensionManagementService = refineServiceDecorator<IServerExtensionManagementService, INativeServerExtensionManagementService>(IServerExtensionManagementService);\nexport interface INativeServerExtensionManagementService extends IServerExtensionManagementService {\n\treadonly _serviceBrand: undefined;\n\tremoveUninstalledExtensions(removeOutdated: boolean): Promise<void>;\n\tgetAllUserInstalled(): Promise<ILocalExtension[]>;\n}\n\nexport class ExtensionManagementService extends AbstractExtensionManagementService implements INativeServerExtensionManagementService {\n\n\tprivate readonly extensionsScanner: ExtensionsScanner;\n\tprivate readonly manifestCache: ExtensionsManifestCache;\n\tprivate readonly extensionsDownloader: ExtensionsDownloader;\n\n\tprivate readonly installGalleryExtensionsTasks = new Map<string, InstallGalleryExtensionTask>();\n\n\tconstructor(\n\t\t@IExtensionGalleryService galleryService: IExtensionGalleryService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@ILogService logService: ILogService,\n\t\t@INativeEnvironmentService private readonly environmentService: INativeEnvironmentService,\n\t\t@IExtensionsScannerService private readonly extensionsScannerService: IExtensionsScannerService,\n\t\t@IExtensionsProfileScannerService private readonly extensionsProfileScannerService: IExtensionsProfileScannerService,\n\t\t@IDownloadService private downloadService: IDownloadService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IProductService productService: IProductService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t\t@IUserDataProfilesService userDataProfilesService: IUserDataProfilesService,\n\t) {\n\t\tsuper(galleryService, telemetryService, logService, productService, userDataProfilesService);\n\t\tconst extensionLifecycle = this._register(instantiationService.createInstance(ExtensionsLifecycle));\n\t\tthis.extensionsScanner = this._register(instantiationService.createInstance(ExtensionsScanner, extension => extensionLifecycle.postUninstall(extension)));\n\t\tthis.manifestCache = this._register(new ExtensionsManifestCache(environmentService, this));\n\t\tthis.extensionsDownloader = this._register(instantiationService.createInstance(ExtensionsDownloader));\n\t\tconst extensionsWatcher = this._register(new ExtensionsWatcher(this, fileService, environmentService, logService, uriIdentityService));\n\n\t\tthis._register(extensionsWatcher.onDidChangeExtensionsByAnotherSource(({ added, removed }) => {\n\t\t\tif (added.length) {\n\t\t\t\tthis._onDidInstallExtensions.fire(added.map(local => ({ identifier: local.identifier, operation: InstallOperation.None, local })));\n\t\t\t}\n\t\t\tremoved.forEach(extension => this._onDidUninstallExtension.fire({ identifier: extension }));\n\t\t}));\n\t}\n\n\tprivate _targetPlatformPromise: Promise<TargetPlatform> | undefined;\n\tgetTargetPlatform(): Promise<TargetPlatform> {\n\t\tif (!this._targetPlatformPromise) {\n\t\t\tthis._targetPlatformPromise = computeTargetPlatform(this.fileService, this.logService);\n\t\t}\n\t\treturn this._targetPlatformPromise;\n\t}\n\n\tasync zip(extension: ILocalExtension): Promise<URI> {\n\t\tthis.logService.trace('ExtensionManagementService#zip', extension.identifier.id);\n\t\tconst files = await this.collectFiles(extension);\n\t\tconst location = await zip(joinPath(this.environmentService.tmpDir, generateUuid()).fsPath, files);\n\t\treturn URI.file(location);\n\t}\n\n\tasync unzip(zipLocation: URI): Promise<IExtensionIdentifier> {\n\t\tthis.logService.trace('ExtensionManagementService#unzip', zipLocation.toString());\n\t\tconst local = await this.install(zipLocation);\n\t\treturn local.identifier;\n\t}\n\n\tasync getManifest(vsix: URI): Promise<IExtensionManifest> {\n\t\tconst downloadLocation = await this.downloadVsix(vsix);\n\t\tconst zipPath = path.resolve(downloadLocation.fsPath);\n\t\treturn getManifest(zipPath);\n\t}\n\n\tgetInstalled(type?: ExtensionType, profileLocation?: URI): Promise<ILocalExtension[]> {\n\t\treturn this.extensionsScanner.scanExtensions(type ?? null, profileLocation);\n\t}\n\n\tgetAllUserInstalled(): Promise<ILocalExtension[]> {\n\t\treturn this.extensionsScanner.scanUserExtensions(false);\n\t}\n\n\tasync install(vsix: URI, options: ServerInstallVSIXOptions = {}): Promise<ILocalExtension> {\n\t\tthis.logService.trace('ExtensionManagementService#install', vsix.toString());\n\n\t\tconst downloadLocation = await this.downloadVsix(vsix);\n\t\tconst manifest = await getManifest(path.resolve(downloadLocation.fsPath));\n\t\tif (manifest.engines && manifest.engines.vscode && !isEngineValid(manifest.engines.vscode, this.productService.version, this.productService.date)) {\n\t\t\tthrow new Error(nls.localize('incompatible', \"Unable to install extension '{0}' as it is not compatible with VS Code '{1}'.\", getGalleryExtensionId(manifest.publisher, manifest.name), this.productService.version));\n\t\t}\n\n\t\treturn this.installExtension(manifest, downloadLocation, options);\n\t}\n\n\tgetMetadata(extension: ILocalExtension): Promise<Metadata | undefined> {\n\t\treturn this.extensionsScannerService.scanMetadata(extension.location);\n\t}\n\n\tasync updateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension> {\n\t\tthis.logService.trace('ExtensionManagementService#updateMetadata', local.identifier.id);\n\t\tconst localMetadata: Metadata = { ...metadata };\n\t\tif (metadata.isPreReleaseVersion) {\n\t\t\tlocalMetadata.preRelease = true;\n\t\t}\n\t\tlocal = await this.extensionsScanner.updateMetadata(local, localMetadata);\n\t\tthis.manifestCache.invalidate();\n\t\treturn local;\n\t}\n\n\tasync updateExtensionScope(local: ILocalExtension, isMachineScoped: boolean): Promise<ILocalExtension> {\n\t\tthis.logService.trace('ExtensionManagementService#updateExtensionScope', local.identifier.id);\n\t\tlocal = await this.extensionsScanner.updateMetadata(local, { isMachineScoped });\n\t\tthis.manifestCache.invalidate();\n\t\treturn local;\n\t}\n\n\tremoveUninstalledExtensions(removeOutdated: boolean): Promise<void> {\n\t\treturn this.extensionsScanner.cleanUp(removeOutdated);\n\t}\n\n\tprivate async downloadVsix(vsix: URI): Promise<URI> {\n\t\tif (vsix.scheme === Schemas.file) {\n\t\t\treturn vsix;\n\t\t}\n\t\tconst downloadedLocation = joinPath(this.environmentService.tmpDir, generateUuid());\n\t\tawait this.downloadService.download(vsix, downloadedLocation);\n\t\treturn downloadedLocation;\n\t}\n\n\tprotected doCreateInstallExtensionTask(manifest: IExtensionManifest, extension: URI | IGalleryExtension, options: ServerInstallOptions & ServerInstallVSIXOptions): IInstallExtensionTask {\n\t\tlet installExtensionTask: IInstallExtensionTask | undefined;\n\t\tif (URI.isUri(extension)) {\n\t\t\tinstallExtensionTask = new InstallVSIXTask(manifest, extension, options, this.galleryService, this.extensionsScanner, this.logService);\n\t\t} else {\n\t\t\tconst key = ExtensionKey.create(extension).toString();\n\t\t\tinstallExtensionTask = this.installGalleryExtensionsTasks.get(key);\n\t\t\tif (!installExtensionTask) {\n\t\t\t\tthis.installGalleryExtensionsTasks.set(key, installExtensionTask = new InstallGalleryExtensionTask(manifest, extension, options, this.extensionsDownloader, this.extensionsScanner, this.logService));\n\t\t\t\tinstallExtensionTask.waitUntilTaskIsFinished().then(() => this.installGalleryExtensionsTasks.delete(key));\n\t\t\t}\n\t\t}\n\t\tif (options.profileLocation) {\n\t\t\treturn new InstallExtensionInProfileTask(installExtensionTask, options.profileLocation, this.extensionsProfileScannerService);\n\t\t}\n\t\treturn installExtensionTask;\n\t}\n\n\tprotected doCreateUninstallExtensionTask(extension: ILocalExtension, options: ServerUninstallOptions): IUninstallExtensionTask {\n\t\tif (options.profileLocation) {\n\t\t\treturn new UninstallExtensionFromProfileTask(extension, options.profileLocation, this.extensionsProfileScannerService);\n\t\t}\n\t\treturn new UninstallExtensionTask(extension, options, this.extensionsScanner);\n\t}\n\n\tprivate async collectFiles(extension: ILocalExtension): Promise<IFile[]> {\n\n\t\tconst collectFilesFromDirectory = async (dir: string): Promise<string[]> => {\n\t\t\tlet entries = await pfs.Promises.readdir(dir);\n\t\t\tentries = entries.map(e => path.join(dir, e));\n\t\t\tconst stats = await Promise.all(entries.map(e => pfs.Promises.stat(e)));\n\t\t\tlet promise: Promise<string[]> = Promise.resolve([]);\n\t\t\tstats.forEach((stat, index) => {\n\t\t\t\tconst entry = entries[index];\n\t\t\t\tif (stat.isFile()) {\n\t\t\t\t\tpromise = promise.then(result => ([...result, entry]));\n\t\t\t\t}\n\t\t\t\tif (stat.isDirectory()) {\n\t\t\t\t\tpromise = promise\n\t\t\t\t\t\t.then(result => collectFilesFromDirectory(entry)\n\t\t\t\t\t\t\t.then(files => ([...result, ...files])));\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn promise;\n\t\t};\n\n\t\tconst files = await collectFilesFromDirectory(extension.location.fsPath);\n\t\treturn files.map(f => (<IFile>{ path: `extension/${path.relative(extension.location.fsPath, f)}`, localPath: f }));\n\t}\n\n}\n\nclass ExtensionsScanner extends Disposable {\n\n\tprivate readonly uninstalledPath: string;\n\tprivate readonly uninstalledFileLimiter: Queue<any>;\n\n\tconstructor(\n\t\tprivate readonly beforeRemovingExtension: (e: ILocalExtension) => Promise<void>,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IExtensionsScannerService private readonly extensionsScannerService: IExtensionsScannerService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t\tsuper();\n\t\tthis.uninstalledPath = joinPath(this.extensionsScannerService.userExtensionsLocation, '.obsolete').fsPath;\n\t\tthis.uninstalledFileLimiter = new Queue();\n\t}\n\n\tasync cleanUp(removeOutdated: boolean): Promise<void> {\n\t\tawait this.removeUninstalledExtensions();\n\t\tif (removeOutdated) {\n\t\t\tawait this.removeOutdatedExtensions();\n\t\t}\n\t}\n\n\tasync scanExtensions(type: ExtensionType | null, profileLocation: URI | undefined): Promise<ILocalExtension[]> {\n\t\tconst userScanOptions: ScanOptions = { includeInvalid: true, profileLocation };\n\t\tlet scannedExtensions: IScannedExtension[] = [];\n\t\tif (type === null || type === ExtensionType.System) {\n\t\t\tscannedExtensions.push(...await this.extensionsScannerService.scanAllExtensions({ includeInvalid: true }, userScanOptions));\n\t\t} else if (type === ExtensionType.User) {\n\t\t\tscannedExtensions.push(...await this.extensionsScannerService.scanUserExtensions(userScanOptions));\n\t\t}\n\t\tscannedExtensions = type !== null ? scannedExtensions.filter(r => r.type === type) : scannedExtensions;\n\t\treturn Promise.all(scannedExtensions.map(extension => this.toLocalExtension(extension)));\n\t}\n\n\tasync scanUserExtensions(excludeOutdated: boolean): Promise<ILocalExtension[]> {\n\t\tconst scannedExtensions = await this.extensionsScannerService.scanUserExtensions({ includeAllVersions: !excludeOutdated, includeInvalid: true });\n\t\treturn Promise.all(scannedExtensions.map(extension => this.toLocalExtension(extension)));\n\t}\n\n\tasync extractUserExtension(extensionKey: ExtensionKey, zipPath: string, metadata: Metadata | undefined, token: CancellationToken): Promise<ILocalExtension> {\n\t\tconst folderName = extensionKey.toString();\n\t\tconst tempPath = path.join(this.extensionsScannerService.userExtensionsLocation.fsPath, `.${generateUuid()}`);\n\t\tconst extensionPath = path.join(this.extensionsScannerService.userExtensionsLocation.fsPath, folderName);\n\n\t\ttry {\n\t\t\tawait pfs.Promises.rm(extensionPath);\n\t\t} catch (error) {\n\t\t\tthrow new ExtensionManagementError(nls.localize('errorDeleting', \"Unable to delete the existing folder '{0}' while installing the extension '{1}'. Please delete the folder manually and try again\", extensionPath, extensionKey.id), ExtensionManagementErrorCode.Delete);\n\t\t}\n\n\t\tawait this.extractAtLocation(extensionKey, zipPath, tempPath, token);\n\t\tmetadata = { ...metadata, installedTimestamp: Date.now() };\n\t\tawait this.extensionsScannerService.updateMetadata(URI.file(tempPath), metadata);\n\n\t\ttry {\n\t\t\tawait this.rename(extensionKey, tempPath, extensionPath, Date.now() + (2 * 60 * 1000) /* Retry for 2 minutes */);\n\t\t\tthis.logService.info('Renamed to', extensionPath);\n\t\t} catch (error) {\n\t\t\ttry {\n\t\t\t\tawait pfs.Promises.rm(tempPath);\n\t\t\t} catch (e) { /* ignore */ }\n\t\t\tif (error.code === 'ENOTEMPTY') {\n\t\t\t\tthis.logService.info(`Rename failed because extension was installed by another source. So ignoring renaming.`, extensionKey.id);\n\t\t\t} else {\n\t\t\t\tthis.logService.info(`Rename failed because of ${getErrorMessage(error)}. Deleted from extracted location`, tempPath);\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\treturn this.scanLocalExtension(URI.file(extensionPath), ExtensionType.User);\n\t}\n\n\tasync updateMetadata(local: ILocalExtension, metadata: Partial<Metadata>): Promise<ILocalExtension> {\n\t\tawait this.extensionsScannerService.updateMetadata(local.location, metadata);\n\t\treturn this.scanLocalExtension(local.location, local.type);\n\t}\n\n\tgetUninstalledExtensions(): Promise<IStringDictionary<boolean>> {\n\t\treturn this.withUninstalledExtensions();\n\t}\n\n\tasync setUninstalled(...extensions: ILocalExtension[]): Promise<void> {\n\t\tconst extensionKeys: ExtensionKey[] = extensions.map(e => ExtensionKey.create(e));\n\t\tawait this.withUninstalledExtensions(uninstalled => {\n\t\t\textensionKeys.forEach(extensionKey => uninstalled[extensionKey.toString()] = true);\n\t\t});\n\t}\n\n\tasync setInstalled(extensionKey: ExtensionKey): Promise<ILocalExtension | null> {\n\t\tawait this.withUninstalledExtensions(uninstalled => delete uninstalled[extensionKey.toString()]);\n\t\tconst userExtensions = await this.scanUserExtensions(true);\n\t\tconst localExtension = userExtensions.find(i => ExtensionKey.create(i).equals(extensionKey)) || null;\n\t\tif (!localExtension) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.updateMetadata(localExtension, { installedTimestamp: Date.now() });\n\t}\n\n\tasync removeExtension(extension: ILocalExtension | IScannedExtension, type: string): Promise<void> {\n\t\tthis.logService.trace(`Deleting ${type} extension from disk`, extension.identifier.id, extension.location.fsPath);\n\t\tawait pfs.Promises.rm(extension.location.fsPath);\n\t\tthis.logService.info('Deleted from disk', extension.identifier.id, extension.location.fsPath);\n\t}\n\n\tasync removeUninstalledExtension(extension: ILocalExtension | IScannedExtension): Promise<void> {\n\t\tawait this.removeExtension(extension, 'uninstalled');\n\t\tawait this.withUninstalledExtensions(uninstalled => delete uninstalled[ExtensionKey.create(extension).toString()]);\n\t}\n\n\tprivate async withUninstalledExtensions(updateFn?: (uninstalled: IStringDictionary<boolean>) => void): Promise<IStringDictionary<boolean>> {\n\t\treturn this.uninstalledFileLimiter.queue(async () => {\n\t\t\tlet raw: string | undefined;\n\t\t\ttry {\n\t\t\t\traw = await pfs.Promises.readFile(this.uninstalledPath, 'utf8');\n\t\t\t} catch (err) {\n\t\t\t\tif (err.code !== 'ENOENT') {\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet uninstalled = {};\n\t\t\tif (raw) {\n\t\t\t\ttry {\n\t\t\t\t\tuninstalled = JSON.parse(raw);\n\t\t\t\t} catch (e) { /* ignore */ }\n\t\t\t}\n\n\t\t\tif (updateFn) {\n\t\t\t\tupdateFn(uninstalled);\n\t\t\t\tif (Object.keys(uninstalled).length) {\n\t\t\t\t\tawait pfs.Promises.writeFile(this.uninstalledPath, JSON.stringify(uninstalled));\n\t\t\t\t} else {\n\t\t\t\t\tawait pfs.Promises.rm(this.uninstalledPath);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn uninstalled;\n\t\t});\n\t}\n\n\tprivate async extractAtLocation(identifier: IExtensionIdentifier, zipPath: string, location: string, token: CancellationToken): Promise<void> {\n\t\tthis.logService.trace(`Started extracting the extension from ${zipPath} to ${location}`);\n\n\t\t// Clean the location\n\t\ttry {\n\t\t\tawait pfs.Promises.rm(location);\n\t\t} catch (e) {\n\t\t\tthrow new ExtensionManagementError(this.joinErrors(e).message, ExtensionManagementErrorCode.Delete);\n\t\t}\n\n\t\ttry {\n\t\t\tawait extract(zipPath, location, { sourcePath: 'extension', overwrite: true }, token);\n\t\t\tthis.logService.info(`Extracted extension to ${location}:`, identifier.id);\n\t\t} catch (e) {\n\t\t\ttry { await pfs.Promises.rm(location); } catch (e) { /* Ignore */ }\n\t\t\tlet errorCode = ExtensionManagementErrorCode.Extract;\n\t\t\tif (e instanceof ExtractError) {\n\t\t\t\tif (e.type === 'CorruptZip') {\n\t\t\t\t\terrorCode = ExtensionManagementErrorCode.CorruptZip;\n\t\t\t\t} else if (e.type === 'Incomplete') {\n\t\t\t\t\terrorCode = ExtensionManagementErrorCode.IncompleteZip;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow new ExtensionManagementError(e.message, errorCode);\n\t\t}\n\t}\n\n\tprivate async rename(identifier: IExtensionIdentifier, extractPath: string, renamePath: string, retryUntil: number): Promise<void> {\n\t\ttry {\n\t\t\tawait pfs.Promises.rename(extractPath, renamePath);\n\t\t} catch (error) {\n\t\t\tif (isWindows && error && error.code === 'EPERM' && Date.now() < retryUntil) {\n\t\t\t\tthis.logService.info(`Failed renaming ${extractPath} to ${renamePath} with 'EPERM' error. Trying again...`, identifier.id);\n\t\t\t\treturn this.rename(identifier, extractPath, renamePath, retryUntil);\n\t\t\t}\n\t\t\tthrow new ExtensionManagementError(error.message || nls.localize('renameError', \"Unknown error while renaming {0} to {1}\", extractPath, renamePath), error.code || ExtensionManagementErrorCode.Rename);\n\t\t}\n\t}\n\n\tprivate async scanLocalExtension(location: URI, type: ExtensionType): Promise<ILocalExtension> {\n\t\tconst scannedExtension = await this.extensionsScannerService.scanExistingExtension(location, type, { includeInvalid: true });\n\t\tif (scannedExtension) {\n\t\t\treturn this.toLocalExtension(scannedExtension);\n\t\t}\n\t\tthrow new Error(nls.localize('cannot read', \"Cannot read the extension from {0}\", location.path));\n\t}\n\n\tprivate async toLocalExtension(extension: IScannedExtension): Promise<ILocalExtension> {\n\t\tconst stat = await this.fileService.resolve(extension.location);\n\t\tlet readmeUrl: URI | undefined;\n\t\tlet changelogUrl: URI | undefined;\n\t\tif (stat.children) {\n\t\t\treadmeUrl = stat.children.find(({ name }) => /^readme(\\.txt|\\.md|)$/i.test(name))?.resource;\n\t\t\tchangelogUrl = stat.children.find(({ name }) => /^changelog(\\.txt|\\.md|)$/i.test(name))?.resource;\n\t\t}\n\t\treturn {\n\t\t\tidentifier: extension.identifier,\n\t\t\ttype: extension.type,\n\t\t\tisBuiltin: extension.isBuiltin || !!extension.metadata?.isBuiltin,\n\t\t\tlocation: extension.location,\n\t\t\tmanifest: extension.manifest,\n\t\t\ttargetPlatform: extension.targetPlatform,\n\t\t\tvalidations: extension.validations,\n\t\t\tisValid: extension.isValid,\n\t\t\treadmeUrl,\n\t\t\tchangelogUrl,\n\t\t\tpublisherDisplayName: extension.metadata?.publisherDisplayName || null,\n\t\t\tpublisherId: extension.metadata?.publisherId || null,\n\t\t\tisApplicationScoped: !!extension.metadata?.isApplicationScoped,\n\t\t\tisMachineScoped: !!extension.metadata?.isMachineScoped,\n\t\t\tisPreReleaseVersion: !!extension.metadata?.isPreReleaseVersion,\n\t\t\tpreRelease: !!extension.metadata?.preRelease,\n\t\t\tinstalledTimestamp: extension.metadata?.installedTimestamp,\n\t\t\tupdated: !!extension.metadata?.updated,\n\t\t};\n\t}\n\tprivate async removeUninstalledExtensions(): Promise<void> {\n\t\tconst uninstalled = await this.getUninstalledExtensions();\n\t\tconst extensions = await this.extensionsScannerService.scanUserExtensions({ includeAllVersions: true, includeUninstalled: true, includeInvalid: true }); // All user extensions\n\t\tconst installed: Set<string> = new Set<string>();\n\t\tfor (const e of extensions) {\n\t\t\tif (!uninstalled[ExtensionKey.create(e).toString()]) {\n\t\t\t\tinstalled.add(e.identifier.id.toLowerCase());\n\t\t\t}\n\t\t}\n\t\tconst byExtension = groupByExtension(extensions, e => e.identifier);\n\t\tawait Promises.settled(byExtension.map(async e => {\n\t\t\tconst latest = e.sort((a, b) => semver.rcompare(a.manifest.version, b.manifest.version))[0];\n\t\t\tif (!installed.has(latest.identifier.id.toLowerCase())) {\n\t\t\t\tawait this.beforeRemovingExtension(await this.toLocalExtension(latest));\n\t\t\t}\n\t\t}));\n\t\tconst toRemove = extensions.filter(e => uninstalled[ExtensionKey.create(e).toString()]);\n\t\tawait Promises.settled(toRemove.map(e => this.removeUninstalledExtension(e)));\n\t}\n\n\tprivate async removeOutdatedExtensions(): Promise<void> {\n\t\tconst systemExtensions = await this.extensionsScannerService.scanSystemExtensions({}); // System extensions\n\t\tconst extensions = await this.extensionsScannerService.scanUserExtensions({ includeAllVersions: true, includeUninstalled: true, includeInvalid: true }); // All user extensions\n\t\tconst toRemove: IScannedExtension[] = [];\n\n\t\t// Outdated extensions\n\t\tconst targetPlatform = await this.extensionsScannerService.getTargetPlatform();\n\t\tconst byExtension = groupByExtension(extensions, e => e.identifier);\n\t\tfor (const extensions of byExtension) {\n\t\t\tif (extensions.length > 1) {\n\t\t\t\ttoRemove.push(...extensions.sort((a, b) => {\n\t\t\t\t\tconst vcompare = semver.rcompare(a.manifest.version, b.manifest.version);\n\t\t\t\t\tif (vcompare !== 0) {\n\t\t\t\t\t\treturn vcompare;\n\t\t\t\t\t}\n\t\t\t\t\tif (a.targetPlatform === targetPlatform) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t\treturn 1;\n\t\t\t\t}).slice(1));\n\t\t\t}\n\t\t\tif (extensions[0].type === ExtensionType.System) {\n\t\t\t\tconst systemExtension = systemExtensions.find(e => areSameExtensions(e.identifier, extensions[0].identifier));\n\t\t\t\tif (!systemExtension || semver.gte(systemExtension.manifest.version, extensions[0].manifest.version)) {\n\t\t\t\t\ttoRemove.push(extensions[0]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tawait Promises.settled(toRemove.map(extension => this.removeExtension(extension, 'outdated')));\n\t}\n\n\tprivate joinErrors(errorOrErrors: (Error | string) | (Array<Error | string>)): Error {\n\t\tconst errors = Array.isArray(errorOrErrors) ? errorOrErrors : [errorOrErrors];\n\t\tif (errors.length === 1) {\n\t\t\treturn errors[0] instanceof Error ? <Error>errors[0] : new Error(<string>errors[0]);\n\t\t}\n\t\treturn errors.reduce<Error>((previousValue: Error, currentValue: Error | string) => {\n\t\t\treturn new Error(`${previousValue.message}${previousValue.message ? ',' : ''}${currentValue instanceof Error ? currentValue.message : currentValue}`);\n\t\t}, new Error(''));\n\t}\n\n}\n\nabstract class InstallExtensionTask extends AbstractExtensionTask<{ local: ILocalExtension; metadata: Metadata }> implements IInstallExtensionTask {\n\n\tprotected _operation = InstallOperation.Install;\n\tget operation() { return isUndefined(this.options.operation) ? this._operation : this.options.operation; }\n\n\tconstructor(\n\t\treadonly identifier: IExtensionIdentifier,\n\t\treadonly source: URI | IGalleryExtension,\n\t\tprotected readonly options: ServerInstallOptions,\n\t\tprotected readonly extensionsScanner: ExtensionsScanner,\n\t\tprotected readonly logService: ILogService,\n\t) {\n\t\tsuper();\n\t}\n\n\tprotected async installExtension(installableExtension: InstallableExtension, token: CancellationToken): Promise<ILocalExtension> {\n\t\ttry {\n\t\t\tconst local = await this.unsetUninstalledAndGetLocal(installableExtension.key);\n\t\t\tif (local) {\n\t\t\t\treturn installableExtension.metadata ? this.extensionsScanner.updateMetadata(local, installableExtension.metadata) : local;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tif (isMacintosh) {\n\t\t\t\tthrow new ExtensionManagementError(nls.localize('quitCode', \"Unable to install the extension. Please Quit and Start VS Code before reinstalling.\"), ExtensionManagementErrorCode.Internal);\n\t\t\t} else {\n\t\t\t\tthrow new ExtensionManagementError(nls.localize('exitCode', \"Unable to install the extension. Please Exit and Start VS Code before reinstalling.\"), ExtensionManagementErrorCode.Internal);\n\t\t\t}\n\t\t}\n\t\treturn this.extract(installableExtension, token);\n\t}\n\n\tprotected async unsetUninstalledAndGetLocal(extensionKey: ExtensionKey): Promise<ILocalExtension | null> {\n\t\tconst isUninstalled = await this.isUninstalled(extensionKey);\n\t\tif (!isUninstalled) {\n\t\t\treturn null;\n\t\t}\n\n\t\tthis.logService.trace('Removing the extension from uninstalled list:', extensionKey.id);\n\t\t// If the same version of extension is marked as uninstalled, remove it from there and return the local.\n\t\tconst local = await this.extensionsScanner.setInstalled(extensionKey);\n\t\tthis.logService.info('Removed the extension from uninstalled list:', extensionKey.id);\n\n\t\treturn local;\n\t}\n\n\tprivate async isUninstalled(extensionId: ExtensionKey): Promise<boolean> {\n\t\tconst uninstalled = await this.extensionsScanner.getUninstalledExtensions();\n\t\treturn !!uninstalled[extensionId.toString()];\n\t}\n\n\tprivate async extract({ zipPath, key, metadata }: InstallableExtension, token: CancellationToken): Promise<ILocalExtension> {\n\t\tconst local = await this.extensionsScanner.extractUserExtension(key, zipPath, metadata, token);\n\t\tthis.logService.info('Extracting completed.', key.id);\n\t\treturn local;\n\t}\n\n}\n\nclass InstallGalleryExtensionTask extends InstallExtensionTask {\n\n\tconstructor(\n\t\tprivate readonly manifest: IExtensionManifest,\n\t\tprivate readonly gallery: IGalleryExtension,\n\t\toptions: ServerInstallOptions,\n\t\tprivate readonly extensionsDownloader: ExtensionsDownloader,\n\t\textensionsScanner: ExtensionsScanner,\n\t\tlogService: ILogService,\n\t) {\n\t\tsuper(gallery.identifier, gallery, options, extensionsScanner, logService);\n\t}\n\n\tprotected async doRun(token: CancellationToken): Promise<{ local: ILocalExtension; metadata: Metadata }> {\n\t\tconst installed = await this.extensionsScanner.scanExtensions(null, undefined);\n\t\tconst existingExtension = installed.find(i => areSameExtensions(i.identifier, this.gallery.identifier));\n\n\t\tif (existingExtension) {\n\t\t\tthis._operation = InstallOperation.Update;\n\t\t}\n\n\t\tconst metadata: Metadata = {\n\t\t\tid: this.gallery.identifier.uuid,\n\t\t\tpublisherId: this.gallery.publisherId,\n\t\t\tpublisherDisplayName: this.gallery.publisherDisplayName,\n\t\t\ttargetPlatform: this.gallery.properties.targetPlatform,\n\t\t\tisApplicationScoped: isApplicationScopedExtension(this.manifest),\n\t\t\tisMachineScoped: this.options.isMachineScoped || existingExtension?.isMachineScoped,\n\t\t\tisBuiltin: this.options.isBuiltin || existingExtension?.isBuiltin,\n\t\t\tisSystem: existingExtension?.type === ExtensionType.System ? true : undefined,\n\t\t\tupdated: !!existingExtension,\n\t\t\tisPreReleaseVersion: this.gallery.properties.isPreReleaseVersion,\n\t\t\tpreRelease: this.gallery.properties.isPreReleaseVersion ||\n\t\t\t\t(isBoolean(this.options.installPreReleaseVersion)\n\t\t\t\t\t? this.options.installPreReleaseVersion /* Respect the passed flag */\n\t\t\t\t\t: existingExtension?.preRelease /* Respect the existing pre-release flag if it was set */)\n\t\t};\n\n\t\tif (existingExtension?.manifest.version === this.gallery.version) {\n\t\t\tconst local = await this.extensionsScanner.updateMetadata(existingExtension, metadata);\n\t\t\treturn { local, metadata };\n\t\t}\n\n\t\tconst zipPath = await this.downloadExtension(this.gallery, this._operation);\n\t\ttry {\n\t\t\tconst local = await this.installExtension({ zipPath, key: ExtensionKey.create(this.gallery), metadata }, token);\n\t\t\tif (existingExtension && !this.options.profileLocation && (existingExtension.targetPlatform !== local.targetPlatform || semver.neq(existingExtension.manifest.version, local.manifest.version))) {\n\t\t\t\tawait this.extensionsScanner.setUninstalled(existingExtension);\n\t\t\t}\n\t\t\treturn { local, metadata };\n\t\t} catch (error) {\n\t\t\tawait this.deleteDownloadedVSIX(zipPath);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate async deleteDownloadedVSIX(vsix: string): Promise<void> {\n\t\ttry {\n\t\t\tawait this.extensionsDownloader.delete(URI.file(vsix));\n\t\t} catch (error) {\n\t\t\t/* Ignore */\n\t\t\tthis.logService.warn('Error while deleting the downloaded vsix', vsix.toString(), getErrorMessage(error));\n\t\t}\n\t}\n\n\tprivate async downloadExtension(extension: IGalleryExtension, operation: InstallOperation): Promise<string> {\n\t\tlet zipPath: string | undefined;\n\t\ttry {\n\t\t\tthis.logService.trace('Started downloading extension:', extension.identifier.id);\n\t\t\tzipPath = (await this.extensionsDownloader.downloadExtension(extension, operation)).fsPath;\n\t\t\tthis.logService.info('Downloaded extension:', extension.identifier.id, zipPath);\n\t\t} catch (error) {\n\t\t\tthrow new ExtensionManagementError(joinErrors(error).message, ExtensionManagementErrorCode.Download);\n\t\t}\n\n\t\ttry {\n\t\t\tawait getManifest(zipPath);\n\t\t\treturn zipPath;\n\t\t} catch (error) {\n\t\t\tawait this.deleteDownloadedVSIX(zipPath);\n\t\t\tthrow new ExtensionManagementError(joinErrors(error).message, ExtensionManagementErrorCode.Invalid);\n\t\t}\n\t}\n}\n\nclass InstallVSIXTask extends InstallExtensionTask {\n\n\tconstructor(\n\t\tprivate readonly manifest: IExtensionManifest,\n\t\tprivate readonly location: URI,\n\t\toptions: ServerInstallOptions,\n\t\tprivate readonly galleryService: IExtensionGalleryService,\n\t\textensionsScanner: ExtensionsScanner,\n\t\tlogService: ILogService,\n\t) {\n\t\tsuper({ id: getGalleryExtensionId(manifest.publisher, manifest.name) }, location, options, extensionsScanner, logService);\n\t}\n\n\tprotected async doRun(token: CancellationToken): Promise<{ local: ILocalExtension; metadata: Metadata }> {\n\t\tconst extensionKey = new ExtensionKey(this.identifier, this.manifest.version);\n\t\tconst installedExtensions = await this.extensionsScanner.scanExtensions(ExtensionType.User, undefined);\n\t\tconst existing = installedExtensions.find(i => areSameExtensions(this.identifier, i.identifier));\n\t\tconst metadata = await this.getMetadata(this.identifier.id, this.manifest.version, token);\n\t\tmetadata.isApplicationScoped = isApplicationScopedExtension(this.manifest);\n\t\tmetadata.isMachineScoped = this.options.isMachineScoped || existing?.isMachineScoped;\n\t\tmetadata.isBuiltin = this.options.isBuiltin || existing?.isBuiltin;\n\n\t\tif (existing) {\n\t\t\tthis._operation = InstallOperation.Update;\n\t\t\tif (extensionKey.equals(new ExtensionKey(existing.identifier, existing.manifest.version))) {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.extensionsScanner.removeExtension(existing, 'existing');\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new Error(nls.localize('restartCode', \"Please restart VS Code before reinstalling {0}.\", this.manifest.displayName || this.manifest.name));\n\t\t\t\t}\n\t\t\t} else if (!this.options.profileLocation && semver.gt(existing.manifest.version, this.manifest.version)) {\n\t\t\t\tawait this.extensionsScanner.setUninstalled(existing);\n\t\t\t}\n\t\t} else {\n\t\t\t// Remove the extension with same version if it is already uninstalled.\n\t\t\t// Installing a VSIX extension shall replace the existing extension always.\n\t\t\tconst existing = await this.unsetUninstalledAndGetLocal(extensionKey);\n\t\t\tif (existing) {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.extensionsScanner.removeExtension(existing, 'existing');\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new Error(nls.localize('restartCode', \"Please restart VS Code before reinstalling {0}.\", this.manifest.displayName || this.manifest.name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst local = await this.installExtension({ zipPath: path.resolve(this.location.fsPath), key: extensionKey, metadata }, token);\n\t\treturn { local, metadata };\n\t}\n\n\tprivate async getMetadata(id: string, version: string, token: CancellationToken): Promise<Metadata> {\n\t\ttry {\n\t\t\tlet [galleryExtension] = await this.galleryService.getExtensions([{ id, version }], token);\n\t\t\tif (!galleryExtension) {\n\t\t\t\t[galleryExtension] = await this.galleryService.getExtensions([{ id }], token);\n\t\t\t}\n\t\t\tif (galleryExtension) {\n\t\t\t\treturn {\n\t\t\t\t\tid: galleryExtension.identifier.uuid,\n\t\t\t\t\tpublisherDisplayName: galleryExtension.publisherDisplayName,\n\t\t\t\t\tpublisherId: galleryExtension.publisherId,\n\t\t\t\t\tisPreReleaseVersion: galleryExtension.properties.isPreReleaseVersion,\n\t\t\t\t\tpreRelease: galleryExtension.properties.isPreReleaseVersion || this.options.installPreReleaseVersion\n\t\t\t\t};\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t/* Ignore Error */\n\t\t}\n\t\treturn {};\n\t}\n}\n\nclass InstallExtensionInProfileTask implements IInstallExtensionTask {\n\n\treadonly identifier = this.task.identifier;\n\treadonly source = this.task.source;\n\treadonly operation = this.task.operation;\n\n\tprivate readonly promise: Promise<{ local: ILocalExtension; metadata: Metadata }>;\n\n\tconstructor(\n\t\tprivate readonly task: IInstallExtensionTask,\n\t\tprivate readonly profileLocation: URI,\n\t\tprivate readonly extensionsProfileScannerService: IExtensionsProfileScannerService,\n\t) {\n\t\tthis.promise = this.waitAndAddExtensionToProfile();\n\t}\n\n\tprivate async waitAndAddExtensionToProfile(): Promise<{ local: ILocalExtension; metadata: Metadata }> {\n\t\tconst result = await this.task.waitUntilTaskIsFinished();\n\t\tawait this.extensionsProfileScannerService.addExtensionsToProfile([[result.local, result.metadata]], this.profileLocation);\n\t\treturn result;\n\t}\n\n\tasync run(): Promise<{ local: ILocalExtension; metadata: Metadata }> {\n\t\tawait this.task.run();\n\t\treturn this.promise;\n\t}\n\n\twaitUntilTaskIsFinished(): Promise<{ local: ILocalExtension; metadata: Metadata }> {\n\t\treturn this.promise;\n\t}\n\n\tcancel(): void {\n\t\treturn this.task.cancel();\n\t}\n}\n\nclass UninstallExtensionTask extends AbstractExtensionTask<void> implements IUninstallExtensionTask {\n\n\tconstructor(\n\t\treadonly extension: ILocalExtension,\n\t\tprivate readonly options: ServerUninstallOptions,\n\t\tprivate readonly extensionsScanner: ExtensionsScanner,\n\t) {\n\t\tsuper();\n\t}\n\n\tprotected async doRun(token: CancellationToken): Promise<void> {\n\t\tconst toUninstall: ILocalExtension[] = [];\n\t\tconst userExtensions = await this.extensionsScanner.scanUserExtensions(false);\n\t\tif (this.options.versionOnly) {\n\t\t\tconst extensionKey = ExtensionKey.create(this.extension);\n\t\t\ttoUninstall.push(...userExtensions.filter(u => extensionKey.equals(ExtensionKey.create(u))));\n\t\t} else {\n\t\t\ttoUninstall.push(...userExtensions.filter(u => areSameExtensions(u.identifier, this.extension.identifier)));\n\t\t}\n\n\t\tif (!toUninstall.length) {\n\t\t\tthrow new Error(nls.localize('notInstalled', \"Extension '{0}' is not installed.\", this.extension.manifest.displayName || this.extension.manifest.name));\n\t\t}\n\t\tawait this.extensionsScanner.setUninstalled(...toUninstall);\n\n\t\tif (this.options.remove) {\n\t\t\tfor (const extension of toUninstall) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!token.isCancellationRequested) {\n\t\t\t\t\t\tawait this.extensionsScanner.removeUninstalledExtension(extension);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new Error(nls.localize('removeError', \"Error while removing the extension: {0}. Please Quit and Start VS Code before trying again.\", toErrorMessage(e)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nclass UninstallExtensionFromProfileTask extends AbstractExtensionTask<void> implements IUninstallExtensionTask {\n\n\tconstructor(\n\t\treadonly extension: ILocalExtension,\n\t\tprivate readonly profileLocation: URI,\n\t\tprivate readonly extensionsProfileScannerService: IExtensionsProfileScannerService,\n\t) {\n\t\tsuper();\n\t}\n\n\tprotected async doRun(token: CancellationToken): Promise<void> {\n\t\tawait this.extensionsProfileScannerService.removeExtensionFromProfile(this.extension.identifier, this.profileLocation);\n\t}\n\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as http from 'http';\nimport * as https from 'https';\nimport { parse as parseUrl } from 'url';\nimport { Promises } from 'vs/base/common/async';\nimport { streamToBufferReadableStream } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { CancellationError } from 'vs/base/common/errors';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport * as streams from 'vs/base/common/stream';\nimport { isBoolean, isNumber } from 'vs/base/common/types';\nimport { IRequestContext, IRequestOptions } from 'vs/base/parts/request/common/request';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { getResolvedShellEnv } from 'vs/platform/shell/node/shellEnv';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IHTTPConfiguration, IRequestService } from 'vs/platform/request/common/request';\nimport { Agent, getProxyAgent } from 'vs/platform/request/node/proxy';\nimport { createGunzip } from 'zlib';\n\nexport interface IRawRequestFunction {\n\t(options: http.RequestOptions, callback?: (res: http.IncomingMessage) => void): http.ClientRequest;\n}\n\nexport interface NodeRequestOptions extends IRequestOptions {\n\tagent?: Agent;\n\tstrictSSL?: boolean;\n\tgetRawRequest?(options: IRequestOptions): IRawRequestFunction;\n}\n\n/**\n * This service exposes the `request` API, while using the global\n * or configured proxy settings.\n */\nexport class RequestService extends Disposable implements IRequestService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate proxyUrl?: string;\n\tprivate strictSSL: boolean | undefined;\n\tprivate authorization?: string;\n\tprivate shellEnvErrorLogged?: boolean;\n\n\tconstructor(\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@INativeEnvironmentService private readonly environmentService: INativeEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.configure(configurationService.getValue<IHTTPConfiguration>());\n\t\tthis._register(configurationService.onDidChangeConfiguration(() => this.configure(configurationService.getValue()), this));\n\t}\n\n\tprivate configure(config: IHTTPConfiguration) {\n\t\tthis.proxyUrl = config.http && config.http.proxy;\n\t\tthis.strictSSL = !!(config.http && config.http.proxyStrictSSL);\n\t\tthis.authorization = config.http && config.http.proxyAuthorization;\n\t}\n\n\tasync request(options: NodeRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\t\tthis.logService.trace('RequestService#request (node) - begin', options.url);\n\n\t\tconst { proxyUrl, strictSSL } = this;\n\n\t\tlet shellEnv: typeof process.env | undefined = undefined;\n\t\ttry {\n\t\t\tshellEnv = await getResolvedShellEnv(this.logService, this.environmentService.args, process.env);\n\t\t} catch (error) {\n\t\t\tif (!this.shellEnvErrorLogged) {\n\t\t\t\tthis.shellEnvErrorLogged = true;\n\t\t\t\tthis.logService.error('RequestService#request (node) resolving shell environment failed', error);\n\t\t\t}\n\t\t}\n\n\t\tconst env = {\n\t\t\t...process.env,\n\t\t\t...shellEnv\n\t\t};\n\t\tconst agent = options.agent ? options.agent : await getProxyAgent(options.url || '', env, { proxyUrl, strictSSL });\n\n\t\toptions.agent = agent;\n\t\toptions.strictSSL = strictSSL;\n\n\t\tif (this.authorization) {\n\t\t\toptions.headers = {\n\t\t\t\t...(options.headers || {}),\n\t\t\t\t'Proxy-Authorization': this.authorization\n\t\t\t};\n\t\t}\n\n\t\ttry {\n\t\t\tconst res = await this._request(options, token);\n\n\t\t\tthis.logService.trace('RequestService#request (node) - success', options.url);\n\n\t\t\treturn res;\n\t\t} catch (error) {\n\t\t\tthis.logService.trace('RequestService#request (node) - error', options.url, error);\n\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate async getNodeRequest(options: IRequestOptions): Promise<IRawRequestFunction> {\n\t\tconst endpoint = parseUrl(options.url!);\n\t\tconst module = endpoint.protocol === 'https:' ? await import('https') : await import('http');\n\t\treturn module.request;\n\t}\n\n\tprivate _request(options: NodeRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\n\t\treturn Promises.withAsyncBody<IRequestContext>(async (c, e) => {\n\n\t\t\tconst endpoint = parseUrl(options.url!);\n\t\t\tconst rawRequest = options.getRawRequest\n\t\t\t\t? options.getRawRequest(options)\n\t\t\t\t: await this.getNodeRequest(options);\n\n\t\t\tconst opts: https.RequestOptions = {\n\t\t\t\thostname: endpoint.hostname,\n\t\t\t\tport: endpoint.port ? parseInt(endpoint.port) : (endpoint.protocol === 'https:' ? 443 : 80),\n\t\t\t\tprotocol: endpoint.protocol,\n\t\t\t\tpath: endpoint.path,\n\t\t\t\tmethod: options.type || 'GET',\n\t\t\t\theaders: options.headers,\n\t\t\t\tagent: options.agent,\n\t\t\t\trejectUnauthorized: isBoolean(options.strictSSL) ? options.strictSSL : true\n\t\t\t};\n\n\t\t\tif (options.user && options.password) {\n\t\t\t\topts.auth = options.user + ':' + options.password;\n\t\t\t}\n\n\t\t\tconst req = rawRequest(opts, (res: http.IncomingMessage) => {\n\t\t\t\tconst followRedirects: number = isNumber(options.followRedirects) ? options.followRedirects : 3;\n\t\t\t\tif (res.statusCode && res.statusCode >= 300 && res.statusCode < 400 && followRedirects > 0 && res.headers['location']) {\n\t\t\t\t\tthis._request({\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\turl: res.headers['location'],\n\t\t\t\t\t\tfollowRedirects: followRedirects - 1\n\t\t\t\t\t}, token).then(c, e);\n\t\t\t\t} else {\n\t\t\t\t\tlet stream: streams.ReadableStreamEvents<Uint8Array> = res;\n\n\t\t\t\t\tif (res.headers['content-encoding'] === 'gzip') {\n\t\t\t\t\t\tstream = res.pipe(createGunzip());\n\t\t\t\t\t}\n\n\t\t\t\t\tc({ res, stream: streamToBufferReadableStream(stream) } as IRequestContext);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treq.on('error', e);\n\n\t\t\tif (options.timeout) {\n\t\t\t\treq.setTimeout(options.timeout);\n\t\t\t}\n\n\t\t\tif (options.data) {\n\t\t\t\tif (typeof options.data === 'string') {\n\t\t\t\t\treq.write(options.data);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treq.end();\n\n\t\t\ttoken.onCancellationRequested(() => {\n\t\t\t\treq.abort();\n\t\t\t\te(new CancellationError());\n\t\t\t});\n\t\t});\n\t}\n\n\tasync resolveProxy(url: string): Promise<string | undefined> {\n\t\treturn undefined; // currently not implemented in node\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { getLogLevel, ILogService, LogService } from 'vs/platform/log/common/log';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { ConfigurationService } from 'vs/platform/configuration/common/configurationService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { RequestService } from 'vs/platform/request/node/requestService';\nimport { NullTelemetryService } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IExtensionGalleryService, IExtensionManagementCLIService, InstallOptions } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionGalleryServiceWithNoStorageService } from 'vs/platform/extensionManagement/common/extensionGalleryService';\nimport { ExtensionManagementService, INativeServerExtensionManagementService } from 'vs/platform/extensionManagement/node/extensionManagementService';\nimport { InstantiationService } from 'vs/platform/instantiation/common/instantiationService';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport product from 'vs/platform/product/common/product';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { DiskFileSystemProvider } from 'vs/platform/files/node/diskFileSystemProvider';\nimport { Schemas } from 'vs/base/common/network';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { SpdLogLogger } from 'vs/platform/log/node/spdlogLog';\nimport { RemoteExtensionLogFileName } from 'vs/workbench/services/remote/common/remoteAgentService';\nimport { IServerEnvironmentService, ServerEnvironmentService, ServerParsedArgs } from 'vs/server/node/serverEnvironmentService';\nimport { ExtensionManagementCLIService } from 'vs/platform/extensionManagement/common/extensionManagementCLIService';\nimport { ILanguagePackService } from 'vs/platform/languagePacks/common/languagePacks';\nimport { NativeLanguagePackService } from 'vs/platform/languagePacks/node/languagePacks';\nimport { getErrorMessage } from 'vs/base/common/errors';\nimport { URI } from 'vs/base/common/uri';\nimport { isAbsolute, join } from 'vs/base/common/path';\nimport { cwd } from 'vs/base/common/process';\nimport { DownloadService } from 'vs/platform/download/common/downloadService';\nimport { IDownloadService } from 'vs/platform/download/common/download';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { UriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentityService';\nimport { buildHelpMessage, buildVersionMessage, OptionDescriptions } from 'vs/platform/environment/node/argv';\nimport { isWindows } from 'vs/base/common/platform';\nimport { IExtensionsScannerService } from 'vs/platform/extensionManagement/common/extensionsScannerService';\nimport { ExtensionsScannerService } from 'vs/server/node/extensionsScannerService';\nimport { IUserDataProfilesService, UserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\nimport { ExtensionsProfileScannerService, IExtensionsProfileScannerService } from 'vs/platform/extensionManagement/common/extensionsProfileScannerService';\nimport { NullPolicyService } from 'vs/platform/policy/common/policy';\n\nclass CliMain extends Disposable {\n\n\tconstructor(private readonly args: ServerParsedArgs, private readonly remoteDataFolder: string) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\t// Dispose on exit\n\t\tprocess.once('exit', () => this.dispose());\n\t}\n\n\tasync run(): Promise<void> {\n\t\tconst instantiationService = await this.initServices();\n\t\tawait instantiationService.invokeFunction(async accessor => {\n\t\t\tconst logService = accessor.get(ILogService);\n\t\t\tconst extensionManagementCLIService = accessor.get(IExtensionManagementCLIService);\n\t\t\ttry {\n\t\t\t\tawait this.doRun(extensionManagementCLIService);\n\t\t\t} catch (error) {\n\t\t\t\tlogService.error(error);\n\t\t\t\tconsole.error(getErrorMessage(error));\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async initServices(): Promise<IInstantiationService> {\n\t\tconst services = new ServiceCollection();\n\n\t\tconst productService = { _serviceBrand: undefined, ...product };\n\t\tservices.set(IProductService, productService);\n\n\t\tconst environmentService = new ServerEnvironmentService(this.args, productService);\n\t\tservices.set(IServerEnvironmentService, environmentService);\n\t\tconst logService: ILogService = new LogService(new SpdLogLogger(RemoteExtensionLogFileName, join(environmentService.logsPath, `${RemoteExtensionLogFileName}.log`), true, false, getLogLevel(environmentService)));\n\t\tservices.set(ILogService, logService);\n\t\tlogService.trace(`Remote configuration data at ${this.remoteDataFolder}`);\n\t\tlogService.trace('process arguments:', this.args);\n\n\n\t\t// Files\n\t\tconst fileService = this._register(new FileService(logService));\n\t\tservices.set(IFileService, fileService);\n\t\tfileService.registerProvider(Schemas.file, this._register(new DiskFileSystemProvider(logService)));\n\n\t\tconst uriIdentityService = new UriIdentityService(fileService);\n\t\tservices.set(IUriIdentityService, uriIdentityService);\n\n\t\t// User Data Profiles\n\t\tconst userDataProfilesService = this._register(new UserDataProfilesService(environmentService, fileService, uriIdentityService, logService));\n\t\tservices.set(IUserDataProfilesService, userDataProfilesService);\n\n\t\t// Configuration\n\t\tconst configurationService = this._register(new ConfigurationService(userDataProfilesService.defaultProfile.settingsResource, fileService, new NullPolicyService(), logService));\n\t\tawait configurationService.initialize();\n\t\tservices.set(IConfigurationService, configurationService);\n\n\t\tservices.set(IRequestService, new SyncDescriptor(RequestService));\n\t\tservices.set(IDownloadService, new SyncDescriptor(DownloadService));\n\t\tservices.set(ITelemetryService, NullTelemetryService);\n\t\tservices.set(IExtensionGalleryService, new SyncDescriptor(ExtensionGalleryServiceWithNoStorageService));\n\t\tservices.set(IExtensionsProfileScannerService, new SyncDescriptor(ExtensionsProfileScannerService));\n\t\tservices.set(IExtensionsScannerService, new SyncDescriptor(ExtensionsScannerService));\n\t\tservices.set(INativeServerExtensionManagementService, new SyncDescriptor(ExtensionManagementService));\n\t\tservices.set(IExtensionManagementCLIService, new SyncDescriptor(ExtensionManagementCLIService));\n\t\tservices.set(ILanguagePackService, new SyncDescriptor(NativeLanguagePackService));\n\n\t\treturn new InstantiationService(services);\n\t}\n\n\tprivate async doRun(extensionManagementCLIService: IExtensionManagementCLIService): Promise<void> {\n\n\t\t// List Extensions\n\t\tif (this.args['list-extensions']) {\n\t\t\treturn extensionManagementCLIService.listExtensions(!!this.args['show-versions'], this.args['category']);\n\t\t}\n\n\t\t// Install Extension\n\t\telse if (this.args['install-extension'] || this.args['install-builtin-extension']) {\n\t\t\tconst installOptions: InstallOptions = { isMachineScoped: !!this.args['do-not-sync'], installPreReleaseVersion: !!this.args['pre-release'] };\n\t\t\treturn extensionManagementCLIService.installExtensions(this.asExtensionIdOrVSIX(this.args['install-extension'] || []), this.args['install-builtin-extension'] || [], installOptions, !!this.args['force']);\n\t\t}\n\n\t\t// Uninstall Extension\n\t\telse if (this.args['uninstall-extension']) {\n\t\t\treturn extensionManagementCLIService.uninstallExtensions(this.asExtensionIdOrVSIX(this.args['uninstall-extension']), !!this.args['force']);\n\t\t}\n\n\t\t// Locate Extension\n\t\telse if (this.args['locate-extension']) {\n\t\t\treturn extensionManagementCLIService.locateExtension(this.args['locate-extension']);\n\t\t}\n\t}\n\n\tprivate asExtensionIdOrVSIX(inputs: string[]): (string | URI)[] {\n\t\treturn inputs.map(input => /\\.vsix$/i.test(input) ? URI.file(isAbsolute(input) ? input : join(cwd(), input)) : input);\n\t}\n}\n\nfunction eventuallyExit(code: number): void {\n\tsetTimeout(() => process.exit(code), 0);\n}\n\nexport async function run(args: ServerParsedArgs, REMOTE_DATA_FOLDER: string, optionDescriptions: OptionDescriptions<ServerParsedArgs>): Promise<void> {\n\tif (args.help) {\n\t\tconst executable = product.serverApplicationName + (isWindows ? '.cmd' : '');\n\t\tconsole.log(buildHelpMessage(product.nameLong, executable, product.version, optionDescriptions, { noInputFiles: true, noPipe: true }));\n\t\treturn;\n\t}\n\t// Version Info\n\tif (args.version) {\n\t\tconsole.log(buildVersionMessage(product.version, product.commit));\n\t\treturn;\n\t}\n\n\n\tconst cliMain = new CliMain(args, REMOTE_DATA_FOLDER);\n\ttry {\n\t\tawait cliMain.run();\n\t\teventuallyExit(0);\n\t} catch (err) {\n\t\teventuallyExit(1);\n\t} finally {\n\t\tcliMain.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { hostname, release } from 'os';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { DisposableStore, toDisposable } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport * as path from 'vs/base/common/path';\nimport { IURITransformer } from 'vs/base/common/uriIpc';\nimport { getMachineId } from 'vs/base/node/id';\nimport { Promises } from 'vs/base/node/pfs';\nimport { ClientConnectionEvent, IMessagePassingProtocol, IPCServer, ProxyChannel, StaticRouter } from 'vs/base/parts/ipc/common/ipc';\nimport { ProtocolConstants } from 'vs/base/parts/ipc/common/ipc.net';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationService } from 'vs/platform/configuration/common/configurationService';\nimport { ICredentialsMainService } from 'vs/platform/credentials/common/credentials';\nimport { CredentialsWebMainService } from 'vs/platform/credentials/node/credentialsMainService';\nimport { ExtensionHostDebugBroadcastChannel } from 'vs/platform/debug/common/extensionHostDebugIpc';\nimport { IDownloadService } from 'vs/platform/download/common/download';\nimport { DownloadServiceChannelClient } from 'vs/platform/download/common/downloadIpc';\nimport { IEncryptionMainService } from 'vs/platform/encryption/common/encryptionService';\nimport { EncryptionMainService } from 'vs/platform/encryption/node/encryptionMainService';\nimport { IEnvironmentService, INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ExtensionGalleryServiceWithNoStorageService } from 'vs/platform/extensionManagement/common/extensionGalleryService';\nimport { IExtensionGalleryService, IExtensionManagementCLIService } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionManagementCLIService } from 'vs/platform/extensionManagement/common/extensionManagementCLIService';\nimport { ExtensionManagementChannel } from 'vs/platform/extensionManagement/common/extensionManagementIpc';\nimport { ExtensionManagementService, INativeServerExtensionManagementService } from 'vs/platform/extensionManagement/node/extensionManagementService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { DiskFileSystemProvider } from 'vs/platform/files/node/diskFileSystemProvider';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { InstantiationService } from 'vs/platform/instantiation/common/instantiationService';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { ILanguagePackService } from 'vs/platform/languagePacks/common/languagePacks';\nimport { NativeLanguagePackService } from 'vs/platform/languagePacks/node/languagePacks';\nimport { AbstractLogger, DEFAULT_LOG_LEVEL, getLogLevel, ILogService, LogLevel, LogService, MultiplexLogService } from 'vs/platform/log/common/log';\nimport { LogLevelChannel } from 'vs/platform/log/common/logIpc';\nimport { SpdLogLogger } from 'vs/platform/log/node/spdlogLog';\nimport product from 'vs/platform/product/common/product';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { RemoteAgentConnectionContext } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { RequestChannel } from 'vs/platform/request/common/requestIpc';\nimport { RequestService } from 'vs/platform/request/node/requestService';\nimport { resolveCommonProperties } from 'vs/platform/telemetry/common/commonProperties';\nimport { ITelemetryService, TelemetryLevel } from 'vs/platform/telemetry/common/telemetry';\nimport { ITelemetryServiceConfig } from 'vs/platform/telemetry/common/telemetryService';\nimport { getPiiPathsFromEnvironment, isInternalTelemetry, ITelemetryAppender, NullAppender, supportsTelemetry } from 'vs/platform/telemetry/common/telemetryUtils';\nimport ErrorTelemetry from 'vs/platform/telemetry/node/errorTelemetry';\nimport { IPtyService, TerminalSettingId } from 'vs/platform/terminal/common/terminal';\nimport { PtyHostService } from 'vs/platform/terminal/node/ptyHostService';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { UriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentityService';\nimport { RemoteAgentEnvironmentChannel } from 'vs/server/node/remoteAgentEnvironmentImpl';\nimport { RemoteAgentFileSystemProviderChannel } from 'vs/server/node/remoteFileSystemProviderServer';\nimport { ServerTelemetryChannel } from 'vs/platform/telemetry/common/remoteTelemetryChannel';\nimport { IServerTelemetryService, ServerNullTelemetryService, ServerTelemetryService } from 'vs/platform/telemetry/common/serverTelemetryService';\nimport { RemoteTerminalChannel } from 'vs/server/node/remoteTerminalChannel';\nimport { createURITransformer } from 'vs/workbench/api/node/uriTransformer';\nimport { ServerConnectionToken } from 'vs/server/node/serverConnectionToken';\nimport { ServerEnvironmentService, ServerParsedArgs } from 'vs/server/node/serverEnvironmentService';\nimport { REMOTE_TERMINAL_CHANNEL_NAME } from 'vs/workbench/contrib/terminal/common/remoteTerminalChannel';\nimport { RemoteExtensionLogFileName } from 'vs/workbench/services/remote/common/remoteAgentService';\nimport { REMOTE_FILE_SYSTEM_CHANNEL_NAME } from 'vs/workbench/services/remote/common/remoteFileSystemProviderClient';\nimport { ExtensionHostStatusService, IExtensionHostStatusService } from 'vs/server/node/extensionHostStatusService';\nimport { IExtensionsScannerService } from 'vs/platform/extensionManagement/common/extensionsScannerService';\nimport { ExtensionsScannerService } from 'vs/server/node/extensionsScannerService';\nimport { ExtensionsProfileScannerService, IExtensionsProfileScannerService } from 'vs/platform/extensionManagement/common/extensionsProfileScannerService';\nimport { IUserDataProfilesService, UserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\nimport { TelemetryClient } from \"vs/server/node/telemetryClient\";\nimport { NullPolicyService } from 'vs/platform/policy/common/policy';\nimport { OneDataSystemAppender } from 'vs/platform/telemetry/node/1dsAppender';\n\nconst eventPrefix = 'monacoworkbench';\n\nexport async function setupServerServices(connectionToken: ServerConnectionToken, args: ServerParsedArgs, REMOTE_DATA_FOLDER: string, disposables: DisposableStore) {\n\tconst services = new ServiceCollection();\n\tconst socketServer = new SocketServer<RemoteAgentConnectionContext>();\n\n\tconst productService: IProductService = { _serviceBrand: undefined, ...product };\n\tservices.set(IProductService, productService);\n\n\tconst environmentService = new ServerEnvironmentService(args, productService);\n\tservices.set(IEnvironmentService, environmentService);\n\tservices.set(INativeEnvironmentService, environmentService);\n\n\tconst spdLogService = new LogService(new SpdLogLogger(RemoteExtensionLogFileName, path.join(environmentService.logsPath, `${RemoteExtensionLogFileName}.log`), true, false, getLogLevel(environmentService)));\n\tconst logService = new MultiplexLogService([new ServerLogService(getLogLevel(environmentService)), spdLogService]);\n\tservices.set(ILogService, logService);\n\tsetTimeout(() => cleanupOlderLogs(environmentService.logsPath).then(null, err => logService.error(err)), 10000);\n\n\tlogService.trace(`Remote configuration data at ${REMOTE_DATA_FOLDER}`);\n\tlogService.trace('process arguments:', environmentService.args);\n\tif (Array.isArray(productService.serverGreeting)) {\n\t\tspdLogService.info(`\\n\\n${productService.serverGreeting.join('\\n')}\\n\\n`);\n\t}\n\n\t// ExtensionHost Debug broadcast service\n\tsocketServer.registerChannel(ExtensionHostDebugBroadcastChannel.ChannelName, new ExtensionHostDebugBroadcastChannel());\n\n\t// TODO: @Sandy @Joao need dynamic context based router\n\tconst router = new StaticRouter<RemoteAgentConnectionContext>(ctx => ctx.clientId === 'renderer');\n\tsocketServer.registerChannel('logger', new LogLevelChannel(logService));\n\n\t// Files\n\tconst fileService = disposables.add(new FileService(logService));\n\tservices.set(IFileService, fileService);\n\tfileService.registerProvider(Schemas.file, disposables.add(new DiskFileSystemProvider(logService)));\n\n\t// URI Identity\n\tconst uriIdentityService = new UriIdentityService(fileService);\n\tservices.set(IUriIdentityService, uriIdentityService);\n\n\t// User Data Profiles\n\tconst userDataProfilesService = new UserDataProfilesService(environmentService, fileService, uriIdentityService, logService);\n\tservices.set(IUserDataProfilesService, userDataProfilesService);\n\n\t// Configuration\n\tconst configurationService = new ConfigurationService(environmentService.machineSettingsResource, fileService, new NullPolicyService(), logService);\n\tservices.set(IConfigurationService, configurationService);\n\tawait configurationService.initialize();\n\n\tconst extensionHostStatusService = new ExtensionHostStatusService();\n\tservices.set(IExtensionHostStatusService, extensionHostStatusService);\n\n\t// Request\n\tservices.set(IRequestService, new SyncDescriptor(RequestService));\n\n\tlet oneDsAppender: ITelemetryAppender = NullAppender;\n\tconst machineId = await getMachineId();\n\tconst isInternal = isInternalTelemetry(productService, configurationService);\n\tif (supportsTelemetry(productService, environmentService)) {\n\t\tconst telemetryEndpoint = process.env.CS_TELEMETRY_URL || \"https://v1.telemetry.coder.com/track\";\n\t\tif (telemetryEndpoint) {\n\t\t\toneDsAppender = new OneDataSystemAppender(false, eventPrefix, null, () => new TelemetryClient(telemetryEndpoint));\n\t\t} else if (productService.aiConfig && productService.aiConfig.ariaKey) {\n\t\t\toneDsAppender = new OneDataSystemAppender(isInternal, eventPrefix, null, productService.aiConfig.ariaKey);\n\t\t}\n\t\tdisposables.add(toDisposable(() => oneDsAppender?.flush())); // Ensure the AI appender is disposed so that it flushes remaining data\n\n\t\tconst config: ITelemetryServiceConfig = {\n\t\t\tappenders: [oneDsAppender],\n\t\t\tcommonProperties: resolveCommonProperties(fileService, release(), hostname(), process.arch, productService.commit, productService.version + '-remote', machineId, isInternal, environmentService.installSourcePath, 'remoteAgent'),\n\t\t\tpiiPaths: getPiiPathsFromEnvironment(environmentService)\n\t\t};\n\t\tconst initialTelemetryLevelArg = environmentService.args['telemetry-level'];\n\t\tlet injectedTelemetryLevel: TelemetryLevel = TelemetryLevel.USAGE;\n\t\t// Convert the passed in CLI argument into a telemetry level for the telemetry service\n\t\tif (initialTelemetryLevelArg === 'all') {\n\t\t\tinjectedTelemetryLevel = TelemetryLevel.USAGE;\n\t\t} else if (initialTelemetryLevelArg === 'error') {\n\t\t\tinjectedTelemetryLevel = TelemetryLevel.ERROR;\n\t\t} else if (initialTelemetryLevelArg === 'crash') {\n\t\t\tinjectedTelemetryLevel = TelemetryLevel.CRASH;\n\t\t} else if (initialTelemetryLevelArg !== undefined) {\n\t\t\tinjectedTelemetryLevel = TelemetryLevel.NONE;\n\t\t}\n\t\tservices.set(IServerTelemetryService, new SyncDescriptor(ServerTelemetryService, [config, injectedTelemetryLevel]));\n\t} else {\n\t\tservices.set(IServerTelemetryService, ServerNullTelemetryService);\n\t}\n\n\tservices.set(IExtensionGalleryService, new SyncDescriptor(ExtensionGalleryServiceWithNoStorageService));\n\n\tconst downloadChannel = socketServer.getChannel('download', router);\n\tservices.set(IDownloadService, new DownloadServiceChannelClient(downloadChannel, () => getUriTransformer('renderer') /* TODO: @Sandy @Joao need dynamic context based router */));\n\n\tservices.set(IExtensionsProfileScannerService, new SyncDescriptor(ExtensionsProfileScannerService));\n\tservices.set(IExtensionsScannerService, new SyncDescriptor(ExtensionsScannerService));\n\tservices.set(INativeServerExtensionManagementService, new SyncDescriptor(ExtensionManagementService));\n\n\tconst instantiationService: IInstantiationService = new InstantiationService(services);\n\tservices.set(ILanguagePackService, instantiationService.createInstance(NativeLanguagePackService));\n\n\tconst extensionManagementCLIService = instantiationService.createInstance(ExtensionManagementCLIService);\n\tservices.set(IExtensionManagementCLIService, extensionManagementCLIService);\n\n\tconst ptyService = instantiationService.createInstance(\n\t\tPtyHostService,\n\t\t{\n\t\t\tgraceTime: ProtocolConstants.ReconnectionGraceTime,\n\t\t\tshortGraceTime: ProtocolConstants.ReconnectionShortGraceTime,\n\t\t\tscrollback: configurationService.getValue<number>(TerminalSettingId.PersistentSessionScrollback) ?? 100\n\t\t}\n\t);\n\tservices.set(IPtyService, ptyService);\n\n\tservices.set(IEncryptionMainService, new SyncDescriptor(EncryptionMainService, [machineId]));\n\n\tservices.set(ICredentialsMainService, new SyncDescriptor(CredentialsWebMainService));\n\n\tinstantiationService.invokeFunction(accessor => {\n\t\tconst extensionManagementService = accessor.get(INativeServerExtensionManagementService);\n\t\tconst extensionsScannerService = accessor.get(IExtensionsScannerService);\n\t\tconst remoteExtensionEnvironmentChannel = new RemoteAgentEnvironmentChannel(connectionToken, environmentService, userDataProfilesService, extensionManagementCLIService, logService, extensionHostStatusService, extensionsScannerService);\n\t\tsocketServer.registerChannel('remoteextensionsenvironment', remoteExtensionEnvironmentChannel);\n\n\t\tconst telemetryChannel = new ServerTelemetryChannel(accessor.get(IServerTelemetryService), oneDsAppender);\n\t\tsocketServer.registerChannel('telemetry', telemetryChannel);\n\n\t\tsocketServer.registerChannel(REMOTE_TERMINAL_CHANNEL_NAME, new RemoteTerminalChannel(environmentService, logService, ptyService, productService, extensionManagementService));\n\n\t\tconst remoteFileSystemChannel = new RemoteAgentFileSystemProviderChannel(logService, environmentService);\n\t\tsocketServer.registerChannel(REMOTE_FILE_SYSTEM_CHANNEL_NAME, remoteFileSystemChannel);\n\n\t\tsocketServer.registerChannel('request', new RequestChannel(accessor.get(IRequestService)));\n\n\t\tconst channel = new ExtensionManagementChannel(extensionManagementService, (ctx: RemoteAgentConnectionContext) => getUriTransformer(ctx.remoteAuthority));\n\t\tsocketServer.registerChannel('extensions', channel);\n\n\t\tconst languagePackChannel = ProxyChannel.fromService<RemoteAgentConnectionContext>(accessor.get(ILanguagePackService));\n\t\tsocketServer.registerChannel('languagePacks', languagePackChannel);\n\n\t\tconst encryptionChannel = ProxyChannel.fromService<RemoteAgentConnectionContext>(accessor.get(IEncryptionMainService));\n\t\tsocketServer.registerChannel('encryption', encryptionChannel);\n\n\t\tconst credentialsChannel = ProxyChannel.fromService<RemoteAgentConnectionContext>(accessor.get(ICredentialsMainService));\n\t\tsocketServer.registerChannel('credentials', credentialsChannel);\n\n\t\t// clean up deprecated extensions\n\t\textensionManagementService.removeUninstalledExtensions(true);\n\n\t\tdisposables.add(new ErrorTelemetry(accessor.get(ITelemetryService)));\n\n\t\treturn {\n\t\t\ttelemetryService: accessor.get(ITelemetryService)\n\t\t};\n\t});\n\n\treturn { socketServer, instantiationService };\n}\n\nconst _uriTransformerCache: { [remoteAuthority: string]: IURITransformer } = Object.create(null);\n\nfunction getUriTransformer(remoteAuthority: string): IURITransformer {\n\tif (!_uriTransformerCache[remoteAuthority]) {\n\t\t_uriTransformerCache[remoteAuthority] = createURITransformer(remoteAuthority);\n\t}\n\treturn _uriTransformerCache[remoteAuthority];\n}\n\nexport class SocketServer<TContext = string> extends IPCServer<TContext> {\n\n\tprivate _onDidConnectEmitter: Emitter<ClientConnectionEvent>;\n\n\tconstructor() {\n\t\tconst emitter = new Emitter<ClientConnectionEvent>();\n\t\tsuper(emitter.event);\n\t\tthis._onDidConnectEmitter = emitter;\n\t}\n\n\tpublic acceptConnection(protocol: IMessagePassingProtocol, onDidClientDisconnect: Event<void>): void {\n\t\tthis._onDidConnectEmitter.fire({ protocol, onDidClientDisconnect });\n\t}\n}\n\nclass ServerLogService extends AbstractLogger implements ILogService {\n\t_serviceBrand: undefined;\n\tprivate useColors: boolean;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t\tthis.useColors = Boolean(process.stdout.isTTY);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.warn(`\\x1b[93m[${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`[${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[91m[${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[90m[${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n}\n\nfunction now(): string {\n\tconst date = new Date();\n\treturn `${twodigits(date.getHours())}:${twodigits(date.getMinutes())}:${twodigits(date.getSeconds())}`;\n}\n\nfunction twodigits(n: number): string {\n\tif (n < 10) {\n\t\treturn `0${n}`;\n\t}\n\treturn String(n);\n}\n\n/**\n * Cleans up older logs, while keeping the 10 most recent ones.\n */\nasync function cleanupOlderLogs(logsPath: string): Promise<void> {\n\tconst currentLog = path.basename(logsPath);\n\tconst logsRoot = path.dirname(logsPath);\n\tconst children = await Promises.readdir(logsRoot);\n\tconst allSessions = children.filter(name => /^\\d{8}T\\d{6}$/.test(name));\n\tconst oldSessions = allSessions.sort().filter((d) => d !== currentLog);\n\tconst toDelete = oldSessions.slice(0, Math.max(0, oldSessions.length - 9));\n\n\tawait Promise.all(toDelete.map(name => Promises.rm(path.join(logsRoot, name))));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as crypto from 'crypto';\nimport * as fs from 'fs';\nimport * as http from 'http';\nimport * as net from 'net';\nimport { performance } from 'perf_hooks';\nimport * as url from 'url';\nimport { LoaderStats } from 'vs/base/common/amd';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { onUnexpectedError, setUnexpectedErrorHandler } from 'vs/base/common/errors';\nimport { isEqualOrParent } from 'vs/base/common/extpath';\nimport { Disposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { connectionTokenQueryName, FileAccess, Schemas } from 'vs/base/common/network';\nimport { dirname, join } from 'vs/base/common/path';\nimport * as perf from 'vs/base/common/performance';\nimport * as platform from 'vs/base/common/platform';\nimport { createRegExp, escapeRegExpCharacters } from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { findFreePort } from 'vs/base/node/ports';\nimport { PersistentProtocol } from 'vs/base/parts/ipc/common/ipc.net';\nimport { NodeSocket, WebSocketNodeSocket } from 'vs/base/parts/ipc/node/ipc.net';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ConnectionType, ConnectionTypeRequest, ErrorMessage, HandshakeMessage, IRemoteExtensionHostStartParams, ITunnelConnectionStartParams, SignRequest } from 'vs/platform/remote/common/remoteAgentConnection';\nimport { RemoteAgentConnectionContext } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { getRemoteServerRootPath } from 'vs/platform/remote/common/remoteHosts';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { ExtensionHostConnection } from 'vs/server/node/extensionHostConnection';\nimport { ManagementConnection } from 'vs/server/node/remoteExtensionManagement';\nimport { determineServerConnectionToken, requestHasValidConnectionToken as httpRequestHasValidConnectionToken, ServerConnectionToken, ServerConnectionTokenParseError, ServerConnectionTokenType } from 'vs/server/node/serverConnectionToken';\nimport { IServerEnvironmentService, ServerParsedArgs } from 'vs/server/node/serverEnvironmentService';\nimport { setupServerServices, SocketServer } from 'vs/server/node/serverServices';\nimport { CacheControl, serveError, serveFile, WebClientServer } from 'vs/server/node/webClientServer';\n\nconst SHUTDOWN_TIMEOUT = 5 * 60 * 1000;\n\ndeclare module vsda {\n\t// the signer is a native module that for historical reasons uses a lower case class name\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\texport class signer {\n\t\tsign(arg: string): string;\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\texport class validator {\n\t\tcreateNewMessage(arg: string): string;\n\t\tvalidate(arg: string): 'ok' | 'error';\n\t}\n}\n\nexport class RemoteExtensionHostAgentServer extends Disposable implements IServerAPI {\n\n\tprivate readonly _extHostConnections: { [reconnectionToken: string]: ExtensionHostConnection };\n\tprivate readonly _managementConnections: { [reconnectionToken: string]: ManagementConnection };\n\tprivate readonly _allReconnectionTokens: Set<string>;\n\tprivate readonly _webClientServer: WebClientServer | null;\n\tprivate readonly _webEndpointOriginChecker = WebEndpointOriginChecker.create(this._productService);\n\n\tprivate readonly _serverRootPath: string;\n\n\tprivate shutdownTimer: NodeJS.Timer | undefined;\n\n\tconstructor(\n\t\tprivate readonly _socketServer: SocketServer<RemoteAgentConnectionContext>,\n\t\tprivate readonly _connectionToken: ServerConnectionToken,\n\t\tprivate readonly _vsdaMod: typeof vsda | null,\n\t\thasWebClient: boolean,\n\t\t@IServerEnvironmentService private readonly _environmentService: IServerEnvironmentService,\n\t\t@IProductService private readonly _productService: IProductService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tthis._serverRootPath = getRemoteServerRootPath(_productService);\n\t\tthis._extHostConnections = Object.create(null);\n\t\tthis._managementConnections = Object.create(null);\n\t\tthis._allReconnectionTokens = new Set<string>();\n\t\tthis._webClientServer = (\n\t\t\thasWebClient\n\t\t\t\t? this._instantiationService.createInstance(WebClientServer, this._connectionToken)\n\t\t\t\t: null\n\t\t);\n\t\tthis._logService.info(`Extension host agent started.`);\n\t}\n\n\tpublic async handleRequest(req: http.IncomingMessage, res: http.ServerResponse) {\n\t\t// Only serve GET requests\n\t\tif (req.method !== 'GET') {\n\t\t\treturn serveError(req, res, 405, `Unsupported method ${req.method}`);\n\t\t}\n\n\t\tif (!req.url) {\n\t\t\treturn serveError(req, res, 400, `Bad request.`);\n\t\t}\n\n\t\tconst parsedUrl = url.parse(req.url, true);\n\t\tlet pathname = parsedUrl.pathname;\n\n\t\tif (!pathname) {\n\t\t\treturn serveError(req, res, 400, `Bad request.`);\n\t\t}\n\n\t\t// for now accept all paths, with or without server root path\n\t\tif (pathname.startsWith(this._serverRootPath) && pathname.charCodeAt(this._serverRootPath.length) === CharCode.Slash) {\n\t\t\tpathname = pathname.substring(this._serverRootPath.length);\n\t\t}\n\n\t\t// Version\n\t\tif (pathname === '/version') {\n\t\t\tres.writeHead(200, { 'Content-Type': 'text/plain' });\n\t\t\treturn res.end(this._productService.commit || '');\n\t\t}\n\n\t\t// Delay shutdown\n\t\tif (pathname === '/delay-shutdown') {\n\t\t\tthis._delayShutdown();\n\t\t\tres.writeHead(200);\n\t\t\treturn res.end('OK');\n\t\t}\n\n\t\tif (!httpRequestHasValidConnectionToken(this._connectionToken, req, parsedUrl)) {\n\t\t\t// invalid connection token\n\t\t\treturn serveError(req, res, 403, `Forbidden.`);\n\t\t}\n\n\t\tif (pathname === '/vscode-remote-resource') {\n\t\t\t// Handle HTTP requests for resources rendered in the rich client (images, fonts, etc.)\n\t\t\t// These resources could be files shipped with extensions or even workspace files.\n\t\t\tconst desiredPath = parsedUrl.query['path'];\n\t\t\tif (typeof desiredPath !== 'string') {\n\t\t\t\treturn serveError(req, res, 400, `Bad request.`);\n\t\t\t}\n\n\t\t\tlet filePath: string;\n\t\t\ttry {\n\t\t\t\tfilePath = URI.from({ scheme: Schemas.file, path: desiredPath }).fsPath;\n\t\t\t} catch (err) {\n\t\t\t\treturn serveError(req, res, 400, `Bad request.`);\n\t\t\t}\n\n\t\t\tconst responseHeaders: Record<string, string> = Object.create(null);\n\t\t\tif (this._environmentService.isBuilt) {\n\t\t\t\tif (isEqualOrParent(filePath, this._environmentService.builtinExtensionsPath, !platform.isLinux)\n\t\t\t\t\t|| isEqualOrParent(filePath, this._environmentService.extensionsPath, !platform.isLinux)\n\t\t\t\t) {\n\t\t\t\t\tresponseHeaders['Cache-Control'] = 'public, max-age=31536000';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Allow cross origin requests from the web worker extension host\n\t\t\tresponseHeaders['Vary'] = 'Origin';\n\t\t\tconst requestOrigin = req.headers['origin'];\n\t\t\tif (requestOrigin && this._webEndpointOriginChecker.matches(requestOrigin)) {\n\t\t\t\tresponseHeaders['Access-Control-Allow-Origin'] = requestOrigin;\n\t\t\t}\n\t\t\treturn serveFile(filePath, CacheControl.ETAG, this._logService, req, res, responseHeaders);\n\t\t}\n\n\t\t// workbench web UI\n\t\tif (this._webClientServer) {\n\t\t\tthis._webClientServer.handle(req, res, parsedUrl);\n\t\t\treturn;\n\t\t}\n\n\t\tres.writeHead(404, { 'Content-Type': 'text/plain' });\n\t\treturn res.end('Not found');\n\t}\n\n\tpublic handleUpgrade(req: http.IncomingMessage, socket: net.Socket) {\n\t\tlet reconnectionToken = generateUuid();\n\t\tlet isReconnection = false;\n\t\tlet skipWebSocketFrames = false;\n\n\t\tif (req.url) {\n\t\t\tconst query = url.parse(req.url, true).query;\n\t\t\tif (typeof query.reconnectionToken === 'string') {\n\t\t\t\treconnectionToken = query.reconnectionToken;\n\t\t\t}\n\t\t\tif (query.reconnection === 'true') {\n\t\t\t\tisReconnection = true;\n\t\t\t}\n\t\t\tif (query.skipWebSocketFrames === 'true') {\n\t\t\t\tskipWebSocketFrames = true;\n\t\t\t}\n\t\t}\n\n\t\tif (req.headers['upgrade'] === undefined || req.headers['upgrade'].toLowerCase() !== 'websocket') {\n\t\t\tsocket.end('HTTP/1.1 400 Bad Request');\n\t\t\treturn;\n\t\t}\n\n\t\t// https://tools.ietf.org/html/rfc6455#section-4\n\t\tconst requestNonce = req.headers['sec-websocket-key'];\n\t\tconst hash = crypto.createHash('sha1');\n\t\thash.update(requestNonce + '258EAFA5-E914-47DA-95CA-C5AB0DC85B11');\n\t\tconst responseNonce = hash.digest('base64');\n\n\t\tconst responseHeaders = [\n\t\t\t`HTTP/1.1 101 Switching Protocols`,\n\t\t\t`Upgrade: websocket`,\n\t\t\t`Connection: Upgrade`,\n\t\t\t`Sec-WebSocket-Accept: ${responseNonce}`\n\t\t];\n\n\t\t// See https://tools.ietf.org/html/rfc7692#page-12\n\t\tlet permessageDeflate = false;\n\t\tif (!skipWebSocketFrames && !this._environmentService.args['disable-websocket-compression'] && req.headers['sec-websocket-extensions']) {\n\t\t\tconst websocketExtensionOptions = Array.isArray(req.headers['sec-websocket-extensions']) ? req.headers['sec-websocket-extensions'] : [req.headers['sec-websocket-extensions']];\n\t\t\tfor (const websocketExtensionOption of websocketExtensionOptions) {\n\t\t\t\tif (/\\b((server_max_window_bits)|(server_no_context_takeover)|(client_no_context_takeover))\\b/.test(websocketExtensionOption)) {\n\t\t\t\t\t// sorry, the server does not support zlib parameter tweaks\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (/\\b(permessage-deflate)\\b/.test(websocketExtensionOption)) {\n\t\t\t\t\tpermessageDeflate = true;\n\t\t\t\t\tresponseHeaders.push(`Sec-WebSocket-Extensions: permessage-deflate`);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (/\\b(x-webkit-deflate-frame)\\b/.test(websocketExtensionOption)) {\n\t\t\t\t\tpermessageDeflate = true;\n\t\t\t\t\tresponseHeaders.push(`Sec-WebSocket-Extensions: x-webkit-deflate-frame`);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tsocket.write(responseHeaders.join('\\r\\n') + '\\r\\n\\r\\n');\n\n\t\t// Never timeout this socket due to inactivity!\n\t\tsocket.setTimeout(0);\n\t\t// Disable Nagle's algorithm\n\t\tsocket.setNoDelay(true);\n\t\t// Finally!\n\n\t\tif (skipWebSocketFrames) {\n\t\t\tthis._handleWebSocketConnection(new NodeSocket(socket, `server-connection-${reconnectionToken}`), isReconnection, reconnectionToken);\n\t\t} else {\n\t\t\tthis._handleWebSocketConnection(new WebSocketNodeSocket(new NodeSocket(socket, `server-connection-${reconnectionToken}`), permessageDeflate, null, true), isReconnection, reconnectionToken);\n\t\t}\n\t}\n\n\tpublic handleServerError(err: Error): void {\n\t\tthis._logService.error(`Error occurred in server`);\n\t\tthis._logService.error(err);\n\t}\n\n\t// Eventually cleanup\n\n\tprivate _getRemoteAddress(socket: NodeSocket | WebSocketNodeSocket): string {\n\t\tlet _socket: net.Socket;\n\t\tif (socket instanceof NodeSocket) {\n\t\t\t_socket = socket.socket;\n\t\t} else {\n\t\t\t_socket = socket.socket.socket;\n\t\t}\n\t\treturn _socket.remoteAddress || `<unknown>`;\n\t}\n\n\tprivate async _rejectWebSocketConnection(logPrefix: string, protocol: PersistentProtocol, reason: string): Promise<void> {\n\t\tconst socket = protocol.getSocket();\n\t\tthis._logService.error(`${logPrefix} ${reason}.`);\n\t\tconst errMessage: ErrorMessage = {\n\t\t\ttype: 'error',\n\t\t\treason: reason\n\t\t};\n\t\tprotocol.sendControl(VSBuffer.fromString(JSON.stringify(errMessage)));\n\t\tprotocol.dispose();\n\t\tawait socket.drain();\n\t\tsocket.dispose();\n\t}\n\n\t/**\n\t * NOTE: Avoid using await in this method!\n\t * The problem is that await introduces a process.nextTick due to the implicit Promise.then\n\t * This can lead to some bytes being interpreted and a control message being emitted before the next listener has a chance to be registered.\n\t */\n\tprivate _handleWebSocketConnection(socket: NodeSocket | WebSocketNodeSocket, isReconnection: boolean, reconnectionToken: string): void {\n\t\tconst remoteAddress = this._getRemoteAddress(socket);\n\t\tconst logPrefix = `[${remoteAddress}][${reconnectionToken.substr(0, 8)}]`;\n\t\tconst protocol = new PersistentProtocol(socket);\n\n\t\tconst validator = this._vsdaMod ? new this._vsdaMod.validator() : null;\n\t\tconst signer = this._vsdaMod ? new this._vsdaMod.signer() : null;\n\n\t\tconst enum State {\n\t\t\tWaitingForAuth,\n\t\t\tWaitingForConnectionType,\n\t\t\tDone,\n\t\t\tError\n\t\t}\n\t\tlet state = State.WaitingForAuth;\n\n\t\tconst rejectWebSocketConnection = (msg: string) => {\n\t\t\tstate = State.Error;\n\t\t\tlistener.dispose();\n\t\t\tthis._rejectWebSocketConnection(logPrefix, protocol, msg);\n\t\t};\n\n\t\tconst listener = protocol.onControlMessage((raw) => {\n\t\t\tif (state === State.WaitingForAuth) {\n\t\t\t\tlet msg1: HandshakeMessage;\n\t\t\t\ttry {\n\t\t\t\t\tmsg1 = <HandshakeMessage>JSON.parse(raw.toString());\n\t\t\t\t} catch (err) {\n\t\t\t\t\treturn rejectWebSocketConnection(`Malformed first message`);\n\t\t\t\t}\n\t\t\t\tif (msg1.type !== 'auth') {\n\t\t\t\t\treturn rejectWebSocketConnection(`Invalid first message`);\n\t\t\t\t}\n\n\t\t\t\tif (this._connectionToken.type === ServerConnectionTokenType.Mandatory && !this._connectionToken.validate(msg1.auth)) {\n\t\t\t\t\treturn rejectWebSocketConnection(`Unauthorized client refused: auth mismatch`);\n\t\t\t\t}\n\n\t\t\t\t// Send `sign` request\n\t\t\t\tlet signedData = generateUuid();\n\t\t\t\tif (signer) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tsignedData = signer.sign(msg1.data);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet someText = generateUuid();\n\t\t\t\tif (validator) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tsomeText = validator.createNewMessage(someText);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst signRequest: SignRequest = {\n\t\t\t\t\ttype: 'sign',\n\t\t\t\t\tdata: someText,\n\t\t\t\t\tsignedData: signedData\n\t\t\t\t};\n\t\t\t\tprotocol.sendControl(VSBuffer.fromString(JSON.stringify(signRequest)));\n\n\t\t\t\tstate = State.WaitingForConnectionType;\n\n\t\t\t} else if (state === State.WaitingForConnectionType) {\n\n\t\t\t\tlet msg2: HandshakeMessage;\n\t\t\t\ttry {\n\t\t\t\t\tmsg2 = <HandshakeMessage>JSON.parse(raw.toString());\n\t\t\t\t} catch (err) {\n\t\t\t\t\treturn rejectWebSocketConnection(`Malformed second message`);\n\t\t\t\t}\n\t\t\t\tif (msg2.type !== 'connectionType') {\n\t\t\t\t\treturn rejectWebSocketConnection(`Invalid second message`);\n\t\t\t\t}\n\t\t\t\tif (typeof msg2.signedData !== 'string') {\n\t\t\t\t\treturn rejectWebSocketConnection(`Invalid second message field type`);\n\t\t\t\t}\n\n\t\t\t\tconst rendererCommit = msg2.commit;\n\t\t\t\tconst myCommit = this._productService.commit;\n\t\t\t\tif (rendererCommit && myCommit) {\n\t\t\t\t\t// Running in the built version where commits are defined\n\t\t\t\t\tif (rendererCommit !== myCommit) {\n\t\t\t\t\t\treturn rejectWebSocketConnection(`Client refused: version mismatch`);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet valid = false;\n\t\t\t\tif (!validator) {\n\t\t\t\t\tvalid = true;\n\t\t\t\t} else if (this._connectionToken.validate(msg2.signedData)) {\n\t\t\t\t\t// web client\n\t\t\t\t\tvalid = true;\n\t\t\t\t} else {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvalid = validator.validate(msg2.signedData) === 'ok';\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!valid) {\n\t\t\t\t\tif (this._environmentService.isBuilt) {\n\t\t\t\t\t\treturn rejectWebSocketConnection(`Unauthorized client refused`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._logService.error(`${logPrefix} Unauthorized client handshake failed but we proceed because of dev mode.`);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// We have received a new connection.\n\t\t\t\t// This indicates that the server owner has connectivity.\n\t\t\t\t// Therefore we will shorten the reconnection grace period for disconnected connections!\n\t\t\t\tfor (const key in this._managementConnections) {\n\t\t\t\t\tconst managementConnection = this._managementConnections[key];\n\t\t\t\t\tmanagementConnection.shortenReconnectionGraceTimeIfNecessary();\n\t\t\t\t}\n\t\t\t\tfor (const key in this._extHostConnections) {\n\t\t\t\t\tconst extHostConnection = this._extHostConnections[key];\n\t\t\t\t\textHostConnection.shortenReconnectionGraceTimeIfNecessary();\n\t\t\t\t}\n\n\t\t\t\tstate = State.Done;\n\t\t\t\tlistener.dispose();\n\t\t\t\tthis._handleConnectionType(remoteAddress, logPrefix, protocol, socket, isReconnection, reconnectionToken, msg2);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async _handleConnectionType(remoteAddress: string, _logPrefix: string, protocol: PersistentProtocol, socket: NodeSocket | WebSocketNodeSocket, isReconnection: boolean, reconnectionToken: string, msg: ConnectionTypeRequest): Promise<void> {\n\t\tconst logPrefix = (\n\t\t\tmsg.desiredConnectionType === ConnectionType.Management\n\t\t\t\t? `${_logPrefix}[ManagementConnection]`\n\t\t\t\t: msg.desiredConnectionType === ConnectionType.ExtensionHost\n\t\t\t\t\t? `${_logPrefix}[ExtensionHostConnection]`\n\t\t\t\t\t: _logPrefix\n\t\t);\n\n\t\tif (msg.desiredConnectionType === ConnectionType.Management) {\n\t\t\t// This should become a management connection\n\n\t\t\tif (isReconnection) {\n\t\t\t\t// This is a reconnection\n\t\t\t\tif (!this._managementConnections[reconnectionToken]) {\n\t\t\t\t\tif (!this._allReconnectionTokens.has(reconnectionToken)) {\n\t\t\t\t\t\t// This is an unknown reconnection token\n\t\t\t\t\t\treturn this._rejectWebSocketConnection(logPrefix, protocol, `Unknown reconnection token (never seen)`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// This is a connection that was seen in the past, but is no longer valid\n\t\t\t\t\t\treturn this._rejectWebSocketConnection(logPrefix, protocol, `Unknown reconnection token (seen before)`);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tprotocol.sendControl(VSBuffer.fromString(JSON.stringify({ type: 'ok' })));\n\t\t\t\tconst dataChunk = protocol.readEntireBuffer();\n\t\t\t\tprotocol.dispose();\n\t\t\t\tthis._managementConnections[reconnectionToken].acceptReconnection(remoteAddress, socket, dataChunk);\n\n\t\t\t} else {\n\t\t\t\t// This is a fresh connection\n\t\t\t\tif (this._managementConnections[reconnectionToken]) {\n\t\t\t\t\t// Cannot have two concurrent connections using the same reconnection token\n\t\t\t\t\treturn this._rejectWebSocketConnection(logPrefix, protocol, `Duplicate reconnection token`);\n\t\t\t\t}\n\n\t\t\t\tprotocol.sendControl(VSBuffer.fromString(JSON.stringify({ type: 'ok' })));\n\t\t\t\tconst con = new ManagementConnection(this._logService, reconnectionToken, remoteAddress, protocol);\n\t\t\t\tthis._socketServer.acceptConnection(con.protocol, con.onClose);\n\t\t\t\tthis._managementConnections[reconnectionToken] = con;\n\t\t\t\tthis._allReconnectionTokens.add(reconnectionToken);\n\t\t\t\tcon.onClose(() => {\n\t\t\t\t\tdelete this._managementConnections[reconnectionToken];\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t} else if (msg.desiredConnectionType === ConnectionType.ExtensionHost) {\n\n\t\t\t// This should become an extension host connection\n\t\t\tconst startParams0 = <IRemoteExtensionHostStartParams>msg.args || { language: 'en' };\n\t\t\tconst startParams = await this._updateWithFreeDebugPort(startParams0);\n\n\t\t\tif (startParams.port) {\n\t\t\t\tthis._logService.trace(`${logPrefix} - startParams debug port ${startParams.port}`);\n\t\t\t}\n\t\t\tthis._logService.trace(`${logPrefix} - startParams language: ${startParams.language}`);\n\t\t\tthis._logService.trace(`${logPrefix} - startParams env: ${JSON.stringify(startParams.env)}`);\n\n\t\t\tif (isReconnection) {\n\t\t\t\t// This is a reconnection\n\t\t\t\tif (!this._extHostConnections[reconnectionToken]) {\n\t\t\t\t\tif (!this._allReconnectionTokens.has(reconnectionToken)) {\n\t\t\t\t\t\t// This is an unknown reconnection token\n\t\t\t\t\t\treturn this._rejectWebSocketConnection(logPrefix, protocol, `Unknown reconnection token (never seen)`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// This is a connection that was seen in the past, but is no longer valid\n\t\t\t\t\t\treturn this._rejectWebSocketConnection(logPrefix, protocol, `Unknown reconnection token (seen before)`);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tprotocol.sendPause();\n\t\t\t\tprotocol.sendControl(VSBuffer.fromString(JSON.stringify(startParams.port ? { debugPort: startParams.port } : {})));\n\t\t\t\tconst dataChunk = protocol.readEntireBuffer();\n\t\t\t\tprotocol.dispose();\n\t\t\t\tthis._extHostConnections[reconnectionToken].acceptReconnection(remoteAddress, socket, dataChunk);\n\n\t\t\t} else {\n\t\t\t\t// This is a fresh connection\n\t\t\t\tif (this._extHostConnections[reconnectionToken]) {\n\t\t\t\t\t// Cannot have two concurrent connections using the same reconnection token\n\t\t\t\t\treturn this._rejectWebSocketConnection(logPrefix, protocol, `Duplicate reconnection token`);\n\t\t\t\t}\n\n\t\t\t\tprotocol.sendPause();\n\t\t\t\tprotocol.sendControl(VSBuffer.fromString(JSON.stringify(startParams.port ? { debugPort: startParams.port } : {})));\n\t\t\t\tconst dataChunk = protocol.readEntireBuffer();\n\t\t\t\tprotocol.dispose();\n\t\t\t\tconst con = this._instantiationService.createInstance(ExtensionHostConnection, reconnectionToken, remoteAddress, socket, dataChunk);\n\t\t\t\tthis._extHostConnections[reconnectionToken] = con;\n\t\t\t\tthis._allReconnectionTokens.add(reconnectionToken);\n\t\t\t\tcon.onClose(() => {\n\t\t\t\t\tdelete this._extHostConnections[reconnectionToken];\n\t\t\t\t\tthis._onDidCloseExtHostConnection();\n\t\t\t\t});\n\t\t\t\tcon.start(startParams);\n\t\t\t}\n\n\t\t} else if (msg.desiredConnectionType === ConnectionType.Tunnel) {\n\n\t\t\tconst tunnelStartParams = <ITunnelConnectionStartParams>msg.args;\n\t\t\tthis._createTunnel(protocol, tunnelStartParams);\n\n\t\t} else {\n\n\t\t\treturn this._rejectWebSocketConnection(logPrefix, protocol, `Unknown initial data received`);\n\n\t\t}\n\t}\n\n\tprivate async _createTunnel(protocol: PersistentProtocol, tunnelStartParams: ITunnelConnectionStartParams): Promise<void> {\n\t\tconst remoteSocket = (<NodeSocket>protocol.getSocket()).socket;\n\t\tconst dataChunk = protocol.readEntireBuffer();\n\t\tprotocol.dispose();\n\n\t\tremoteSocket.pause();\n\t\tconst localSocket = await this._connectTunnelSocket(tunnelStartParams.host, tunnelStartParams.port);\n\n\t\tif (dataChunk.byteLength > 0) {\n\t\t\tlocalSocket.write(dataChunk.buffer);\n\t\t}\n\n\t\tlocalSocket.on('end', () => remoteSocket.end());\n\t\tlocalSocket.on('close', () => remoteSocket.end());\n\t\tlocalSocket.on('error', () => remoteSocket.destroy());\n\t\tremoteSocket.on('end', () => localSocket.end());\n\t\tremoteSocket.on('close', () => localSocket.end());\n\t\tremoteSocket.on('error', () => localSocket.destroy());\n\n\t\tlocalSocket.pipe(remoteSocket);\n\t\tremoteSocket.pipe(localSocket);\n\t}\n\n\tprivate _connectTunnelSocket(host: string, port: number): Promise<net.Socket> {\n\t\treturn new Promise<net.Socket>((c, e) => {\n\t\t\tconst socket = net.createConnection(\n\t\t\t\t{\n\t\t\t\t\thost: host,\n\t\t\t\t\tport: port\n\t\t\t\t}, () => {\n\t\t\t\t\tsocket.removeListener('error', e);\n\t\t\t\t\tsocket.pause();\n\t\t\t\t\tc(socket);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tsocket.once('error', e);\n\t\t});\n\t}\n\n\tprivate _updateWithFreeDebugPort(startParams: IRemoteExtensionHostStartParams): Thenable<IRemoteExtensionHostStartParams> {\n\t\tif (typeof startParams.port === 'number') {\n\t\t\treturn findFreePort(startParams.port, 10 /* try 10 ports */, 5000 /* try up to 5 seconds */).then(freePort => {\n\t\t\t\tstartParams.port = freePort;\n\t\t\t\treturn startParams;\n\t\t\t});\n\t\t}\n\t\t// No port clear debug configuration.\n\t\tstartParams.debugId = undefined;\n\t\tstartParams.port = undefined;\n\t\tstartParams.break = undefined;\n\t\treturn Promise.resolve(startParams);\n\t}\n\n\tprivate async _onDidCloseExtHostConnection(): Promise<void> {\n\t\tif (!this._environmentService.args['enable-remote-auto-shutdown']) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._cancelShutdown();\n\n\t\tconst hasActiveExtHosts = !!Object.keys(this._extHostConnections).length;\n\t\tif (!hasActiveExtHosts) {\n\t\t\tconsole.log('Last EH closed, waiting before shutting down');\n\t\t\tthis._logService.info('Last EH closed, waiting before shutting down');\n\t\t\tthis._waitThenShutdown();\n\t\t}\n\t}\n\n\tprivate _waitThenShutdown(): void {\n\t\tif (!this._environmentService.args['enable-remote-auto-shutdown']) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._environmentService.args['remote-auto-shutdown-without-delay']) {\n\t\t\tthis._shutdown();\n\t\t} else {\n\t\t\tthis.shutdownTimer = setTimeout(() => {\n\t\t\t\tthis.shutdownTimer = undefined;\n\n\t\t\t\tthis._shutdown();\n\t\t\t}, SHUTDOWN_TIMEOUT);\n\t\t}\n\t}\n\n\tprivate _shutdown(): void {\n\t\tconst hasActiveExtHosts = !!Object.keys(this._extHostConnections).length;\n\t\tif (hasActiveExtHosts) {\n\t\t\tconsole.log('New EH opened, aborting shutdown');\n\t\t\tthis._logService.info('New EH opened, aborting shutdown');\n\t\t\treturn;\n\t\t} else {\n\t\t\tconsole.log('Last EH closed, shutting down');\n\t\t\tthis._logService.info('Last EH closed, shutting down');\n\t\t\tthis.dispose();\n\t\t\tprocess.exit(0);\n\t\t}\n\t}\n\n\t/**\n\t * If the server is in a shutdown timeout, cancel it and start over\n\t */\n\tprivate _delayShutdown(): void {\n\t\tif (this.shutdownTimer) {\n\t\t\tconsole.log('Got delay-shutdown request while in shutdown timeout, delaying');\n\t\t\tthis._logService.info('Got delay-shutdown request while in shutdown timeout, delaying');\n\t\t\tthis._cancelShutdown();\n\t\t\tthis._waitThenShutdown();\n\t\t}\n\t}\n\n\tprivate _cancelShutdown(): void {\n\t\tif (this.shutdownTimer) {\n\t\t\tconsole.log('Cancelling previous shutdown timeout');\n\t\t\tthis._logService.info('Cancelling previous shutdown timeout');\n\t\t\tclearTimeout(this.shutdownTimer);\n\t\t\tthis.shutdownTimer = undefined;\n\t\t}\n\t}\n}\n\nexport interface IServerAPI {\n\t/**\n\t * Do not remove!!. Called from server-main.js\n\t */\n\thandleRequest(req: http.IncomingMessage, res: http.ServerResponse): Promise<void>;\n\t/**\n\t * Do not remove!!. Called from server-main.js\n\t */\n\thandleUpgrade(req: http.IncomingMessage, socket: net.Socket): void;\n\t/**\n\t * Do not remove!!. Called from server-main.js\n\t */\n\thandleServerError(err: Error): void;\n\t/**\n\t * Do not remove!!. Called from server-main.js\n\t */\n\tdispose(): void;\n}\n\nexport async function createServer(address: string | net.AddressInfo | null, args: ServerParsedArgs, REMOTE_DATA_FOLDER: string): Promise<IServerAPI> {\n\tconst connectionToken = await determineServerConnectionToken(args);\n\tif (connectionToken instanceof ServerConnectionTokenParseError) {\n\t\tconsole.warn(connectionToken.message);\n\t\tprocess.exit(1);\n\t}\n\tconst disposables = new DisposableStore();\n\tconst { socketServer, instantiationService } = await setupServerServices(connectionToken, args, REMOTE_DATA_FOLDER, disposables);\n\n\t// Set the unexpected error handler after the services have been initialized, to avoid having\n\t// the telemetry service overwrite our handler\n\tinstantiationService.invokeFunction((accessor) => {\n\t\tconst logService = accessor.get(ILogService);\n\t\tsetUnexpectedErrorHandler(err => {\n\t\t\t// See https://github.com/microsoft/vscode-remote-release/issues/6481\n\t\t\t// In some circumstances, console.error will throw an asynchronous error. This asynchronous error\n\t\t\t// will end up here, and then it will be logged again, thus creating an endless asynchronous loop.\n\t\t\t// Here we try to break the loop by ignoring EPIPE errors that include our own unexpected error handler in the stack.\n\t\t\tif (err && err.code === 'EPIPE' && err.syscall === 'write' && err.stack && /unexpectedErrorHandler/.test(err.stack)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlogService.error(err);\n\t\t});\n\t\tprocess.on('SIGPIPE', () => {\n\t\t\t// See https://github.com/microsoft/vscode-remote-release/issues/6543\n\t\t\t// We would normally install a SIGPIPE listener in bootstrap.js\n\t\t\t// But in certain situations, the console itself can be in a broken pipe state\n\t\t\t// so logging SIGPIPE to the console will cause an infinite async loop\n\t\t\tonUnexpectedError(new Error(`Unexpected SIGPIPE`));\n\t\t});\n\t});\n\n\t//\n\t// On Windows, exit early with warning message to users about potential security issue\n\t// if there is node_modules folder under home drive or Users folder.\n\t//\n\tinstantiationService.invokeFunction((accessor) => {\n\t\tconst logService = accessor.get(ILogService);\n\n\t\tif (process.platform === 'win32' && process.env.HOMEDRIVE && process.env.HOMEPATH) {\n\t\t\tconst homeDirModulesPath = join(process.env.HOMEDRIVE, 'node_modules');\n\t\t\tconst userDir = dirname(join(process.env.HOMEDRIVE, process.env.HOMEPATH));\n\t\t\tconst userDirModulesPath = join(userDir, 'node_modules');\n\t\t\tif (fs.existsSync(homeDirModulesPath) || fs.existsSync(userDirModulesPath)) {\n\t\t\t\tconst message = `\n\n*\n* !!!! Server terminated due to presence of CVE-2020-1416 !!!!\n*\n* Please remove the following directories and re-try\n* ${homeDirModulesPath}\n* ${userDirModulesPath}\n*\n* For more information on the vulnerability https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1416\n*\n\n`;\n\t\t\t\tlogService.warn(message);\n\t\t\t\tconsole.warn(message);\n\t\t\t\tprocess.exit(0);\n\t\t\t}\n\t\t}\n\t});\n\n\tconst vsdaMod = instantiationService.invokeFunction((accessor) => {\n\t\tconst logService = accessor.get(ILogService);\n\t\tconst hasVSDA = fs.existsSync(join(FileAccess.asFileUri('', require).fsPath, '../node_modules/vsda'));\n\t\tif (hasVSDA) {\n\t\t\ttry {\n\t\t\t\treturn <typeof vsda>require.__$__nodeRequire('vsda');\n\t\t\t} catch (err) {\n\t\t\t\tlogService.error(err);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t});\n\n\tconst hasWebClient = fs.existsSync(FileAccess.asFileUri('vs/code/browser/workbench/workbench.html', require).fsPath);\n\n\tif (hasWebClient && address && typeof address !== 'string') {\n\t\t// ships the web ui!\n\t\tconst queryPart = (connectionToken.type !== ServerConnectionTokenType.None ? `?${connectionTokenQueryName}=${connectionToken.value}` : '');\n\t\tconsole.log(`Web UI available at http://localhost${address.port === 80 ? '' : `:${address.port}`}/${queryPart}`);\n\t}\n\n\tconst remoteExtensionHostAgentServer = instantiationService.createInstance(RemoteExtensionHostAgentServer, socketServer, connectionToken, vsdaMod, hasWebClient);\n\n\tperf.mark('code/server/ready');\n\tconst currentTime = performance.now();\n\tconst vscodeServerStartTime: number = (<any>global).vscodeServerStartTime;\n\tconst vscodeServerListenTime: number = (<any>global).vscodeServerListenTime;\n\tconst vscodeServerCodeLoadedTime: number = (<any>global).vscodeServerCodeLoadedTime;\n\n\tinstantiationService.invokeFunction((accessor) => {\n\t\tconst telemetryService = accessor.get(ITelemetryService);\n\n\t\ttype ServerStartClassification = {\n\t\t\towner: 'alexdima';\n\t\t\tcomment: 'The server has started up';\n\t\t\tstartTime: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'The time the server started at.' };\n\t\t\tstartedTime: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'The time the server began listening for connections.' };\n\t\t\tcodeLoadedTime: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'The time which the code loaded on the server' };\n\t\t\treadyTime: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'The time when the server was completely ready' };\n\t\t};\n\t\ttype ServerStartEvent = {\n\t\t\tstartTime: number;\n\t\t\tstartedTime: number;\n\t\t\tcodeLoadedTime: number;\n\t\t\treadyTime: number;\n\t\t};\n\t\ttelemetryService.publicLog2<ServerStartEvent, ServerStartClassification>('serverStart', {\n\t\t\tstartTime: vscodeServerStartTime,\n\t\t\tstartedTime: vscodeServerListenTime,\n\t\t\tcodeLoadedTime: vscodeServerCodeLoadedTime,\n\t\t\treadyTime: currentTime\n\t\t});\n\t});\n\n\tif (args['print-startup-performance']) {\n\t\tconst stats = LoaderStats.get();\n\t\tlet output = '';\n\t\toutput += '\\n\\n### Load AMD-module\\n';\n\t\toutput += LoaderStats.toMarkdownTable(['Module', 'Duration'], stats.amdLoad);\n\t\toutput += '\\n\\n### Load commonjs-module\\n';\n\t\toutput += LoaderStats.toMarkdownTable(['Module', 'Duration'], stats.nodeRequire);\n\t\toutput += '\\n\\n### Invoke AMD-module factory\\n';\n\t\toutput += LoaderStats.toMarkdownTable(['Module', 'Duration'], stats.amdInvoke);\n\t\toutput += '\\n\\n### Invoke commonjs-module\\n';\n\t\toutput += LoaderStats.toMarkdownTable(['Module', 'Duration'], stats.nodeEval);\n\t\toutput += `Start-up time: ${vscodeServerListenTime - vscodeServerStartTime}\\n`;\n\t\toutput += `Code loading time: ${vscodeServerCodeLoadedTime - vscodeServerStartTime}\\n`;\n\t\toutput += `Initialized time: ${currentTime - vscodeServerStartTime}\\n`;\n\t\toutput += `\\n`;\n\t\tconsole.log(output);\n\t}\n\treturn remoteExtensionHostAgentServer;\n}\n\nclass WebEndpointOriginChecker {\n\n\tpublic static create(productService: IProductService): WebEndpointOriginChecker {\n\t\tconst webEndpointUrlTemplate = productService.webEndpointUrlTemplate;\n\t\tconst commit = productService.commit;\n\t\tconst quality = productService.quality;\n\t\tif (!webEndpointUrlTemplate || !commit || !quality) {\n\t\t\treturn new WebEndpointOriginChecker(null);\n\t\t}\n\n\t\tconst uuid = generateUuid();\n\t\tconst exampleUrl = new URL(\n\t\t\twebEndpointUrlTemplate\n\t\t\t\t.replace('{{uuid}}', uuid)\n\t\t\t\t.replace('{{commit}}', commit)\n\t\t\t\t.replace('{{quality}}', quality)\n\t\t);\n\t\tconst exampleOrigin = exampleUrl.origin;\n\t\tconst originRegExpSource = (\n\t\t\tescapeRegExpCharacters(exampleOrigin)\n\t\t\t\t.replace(uuid, '[a-zA-Z0-9\\\\-]+')\n\t\t);\n\t\ttry {\n\t\t\tconst originRegExp = createRegExp(`^${originRegExpSource}$`, true, { matchCase: false });\n\t\t\treturn new WebEndpointOriginChecker(originRegExp);\n\t\t} catch (err) {\n\t\t\treturn new WebEndpointOriginChecker(null);\n\t\t}\n\t}\n\n\tconstructor(\n\t\tprivate readonly _originRegExp: RegExp | null\n\t) { }\n\n\tpublic matches(origin: string): boolean {\n\t\tif (!this._originRegExp) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this._originRegExp.test(origin);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as os from 'os';\nimport * as fs from 'fs';\nimport * as net from 'net';\nimport { FileAccess } from 'vs/base/common/network';\nimport { run as runCli } from 'vs/server/node/remoteExtensionHostAgentCli';\nimport { createServer as doCreateServer, IServerAPI } from 'vs/server/node/remoteExtensionHostAgentServer';\nimport { parseArgs, ErrorReporter } from 'vs/platform/environment/node/argv';\nimport { join, dirname } from 'vs/base/common/path';\nimport { performance } from 'perf_hooks';\nimport { serverOptions, ServerParsedArgs } from 'vs/server/node/serverEnvironmentService';\nimport product from 'vs/platform/product/common/product';\nimport * as perf from 'vs/base/common/performance';\n\nperf.mark('code/server/codeLoaded');\n(<any>global).vscodeServerCodeLoadedTime = performance.now();\n\nconst errorReporter: ErrorReporter = {\n\tonMultipleValues: (id: string, usedValue: string) => {\n\t\tconsole.error(`Option '${id}' can only be defined once. Using value ${usedValue}.`);\n\t},\n\tonEmptyValue: (id) => {\n\t\tconsole.error(`Ignoring option '${id}': Value must not be empty.`);\n\t},\n\tonUnknownOption: (id: string) => {\n\t\tconsole.error(`Ignoring option '${id}': not supported for server.`);\n\t},\n\tonDeprecatedOption: (deprecatedOption: string, message) => {\n\t\tconsole.warn(`Option '${deprecatedOption}' is deprecated: ${message}`);\n\t}\n};\n\nfunction parse(): ServerParsedArgs {\n\treturn parseArgs(process.argv.slice(2), serverOptions, errorReporter);\n}\n\nfunction createDirs(args: ServerParsedArgs): string {\n\tconst REMOTE_DATA_FOLDER = args['server-data-dir'] || args['user-data-dir'] || process.env['VSCODE_AGENT_FOLDER'] || join(os.homedir(), product.serverDataFolderName || '.vscode-remote');\n\tconst USER_DATA_PATH = args['user-data-dir'] || join(REMOTE_DATA_FOLDER, 'data');\n\tconst APP_SETTINGS_HOME = join(USER_DATA_PATH, 'User');\n\tconst GLOBAL_STORAGE_HOME = join(APP_SETTINGS_HOME, 'globalStorage');\n\tconst LOCAL_HISTORY_HOME = join(APP_SETTINGS_HOME, 'History');\n\tconst MACHINE_SETTINGS_HOME = join(USER_DATA_PATH, 'Machine');\n\targs['user-data-dir'] = USER_DATA_PATH;\n\tconst APP_ROOT = dirname(FileAccess.asFileUri('', require).fsPath);\n\tconst BUILTIN_EXTENSIONS_FOLDER_PATH = args['builtin-extensions-dir'] || join(APP_ROOT, 'extensions');\n\targs['builtin-extensions-dir'] = BUILTIN_EXTENSIONS_FOLDER_PATH;\n\targs['extensions-dir'] = args['extensions-dir'] || join(REMOTE_DATA_FOLDER, 'extensions');\n\n\t[REMOTE_DATA_FOLDER, args['extensions-dir'], USER_DATA_PATH, APP_SETTINGS_HOME, MACHINE_SETTINGS_HOME, GLOBAL_STORAGE_HOME, LOCAL_HISTORY_HOME].forEach(f => {\n\t\ttry {\n\t\t\tif (!fs.existsSync(f)) {\n\t\t\t\tfs.mkdirSync(f, { mode: 0o700 });\n\t\t\t}\n\t\t} catch (err) { console.error(err); }\n\t});\n\treturn REMOTE_DATA_FOLDER;\n}\n\n/**\n * invoked by server-main.js\n */\nexport function spawnCli(args = parse()): Promise<void> {\n\treturn runCli(args, createDirs(args), serverOptions);\n}\n\n/**\n * invoked by server-main.js\n */\nexport function createServer(address: string | net.AddressInfo | null, args = parse()): Promise<IServerAPI> {\n\treturn doCreateServer(address, args, createDirs(args));\n}\n"],"mappings":"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","names":[],"file":"server.main.js"}