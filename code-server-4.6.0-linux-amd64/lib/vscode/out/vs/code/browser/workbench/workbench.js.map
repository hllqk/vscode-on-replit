{"version":3,"sources":["out-vscode-reh-web/vs/code/browser/workbench/fake","out-vscode-reh-web/vs/code/browser/workbench/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/code/browser/workbench/workbench.ts"],"sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isStandalone } from 'vs/base/browser/browser';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { parse } from 'vs/base/common/marshalling';\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport { isEqual } from 'vs/base/common/resources';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { request } from 'vs/base/parts/request/browser/request';\nimport product from 'vs/platform/product/common/product';\nimport { isFolderToOpen, isWorkspaceToOpen } from 'vs/platform/window/common/window';\nimport { create, ICredentialsProvider, IURLCallbackProvider, IWorkbenchConstructionOptions, IWorkspace, IWorkspaceProvider } from 'vs/workbench/workbench.web.main';\nimport { posix } from 'vs/base/common/path';\nimport { ltrim } from 'vs/base/common/strings';\n\ninterface ICredential {\n\tservice: string;\n\taccount: string;\n\tpassword: string;\n}\n\nclass LocalStorageCredentialsProvider implements ICredentialsProvider {\n\n\tprivate static readonly CREDENTIALS_STORAGE_KEY = 'credentials.provider';\n\n\tprivate readonly authService: string | undefined;\n\n\tconstructor() {\n\t\tlet authSessionInfo: { readonly id: string; readonly accessToken: string; readonly providerId: string; readonly canSignOut?: boolean; readonly scopes: string[][] } | undefined;\n\t\tconst authSessionElement = document.getElementById('vscode-workbench-auth-session');\n\t\tconst authSessionElementAttribute = authSessionElement ? authSessionElement.getAttribute('data-settings') : undefined;\n\t\tif (authSessionElementAttribute) {\n\t\t\ttry {\n\t\t\t\tauthSessionInfo = JSON.parse(authSessionElementAttribute);\n\t\t\t} catch (error) { /* Invalid session is passed. Ignore. */ }\n\t\t}\n\n\t\tif (authSessionInfo) {\n\t\t\t// Settings Sync Entry\n\t\t\tthis.setPassword(`${product.urlProtocol}.login`, 'account', JSON.stringify(authSessionInfo));\n\n\t\t\t// Auth extension Entry\n\t\t\tthis.authService = `${product.urlProtocol}-${authSessionInfo.providerId}.login`;\n\t\t\tthis.setPassword(this.authService, 'account', JSON.stringify(authSessionInfo.scopes.map(scopes => ({\n\t\t\t\tid: authSessionInfo!.id,\n\t\t\t\tscopes,\n\t\t\t\taccessToken: authSessionInfo!.accessToken\n\t\t\t}))));\n\t\t}\n\t}\n\n\tprivate _credentials: ICredential[] | undefined;\n\tprivate get credentials(): ICredential[] {\n\t\tif (!this._credentials) {\n\t\t\ttry {\n\t\t\t\tconst serializedCredentials = window.localStorage.getItem(LocalStorageCredentialsProvider.CREDENTIALS_STORAGE_KEY);\n\t\t\t\tif (serializedCredentials) {\n\t\t\t\t\tthis._credentials = JSON.parse(serializedCredentials);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\t// ignore\n\t\t\t}\n\n\t\t\tif (!Array.isArray(this._credentials)) {\n\t\t\t\tthis._credentials = [];\n\t\t\t}\n\t\t}\n\n\t\treturn this._credentials;\n\t}\n\n\tprivate save(): void {\n\t\twindow.localStorage.setItem(LocalStorageCredentialsProvider.CREDENTIALS_STORAGE_KEY, JSON.stringify(this.credentials));\n\t}\n\n\tasync getPassword(service: string, account: string): Promise<string | null> {\n\t\treturn this.doGetPassword(service, account);\n\t}\n\n\tprivate async doGetPassword(service: string, account?: string): Promise<string | null> {\n\t\tfor (const credential of this.credentials) {\n\t\t\tif (credential.service === service) {\n\t\t\t\tif (typeof account !== 'string' || account === credential.account) {\n\t\t\t\t\treturn credential.password;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tasync setPassword(service: string, account: string, password: string): Promise<void> {\n\t\tthis.doDeletePassword(service, account);\n\n\t\tthis.credentials.push({ service, account, password });\n\n\t\tthis.save();\n\n\t\ttry {\n\t\t\tif (password && service === this.authService) {\n\t\t\t\tconst value = JSON.parse(password);\n\t\t\t\tif (Array.isArray(value) && value.length === 0) {\n\t\t\t\t\tawait this.logout(service);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\n\tasync deletePassword(service: string, account: string): Promise<boolean> {\n\t\tconst result = await this.doDeletePassword(service, account);\n\n\t\tif (result && service === this.authService) {\n\t\t\ttry {\n\t\t\t\tawait this.logout(service);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate async doDeletePassword(service: string, account: string): Promise<boolean> {\n\t\tlet found = false;\n\n\t\tthis._credentials = this.credentials.filter(credential => {\n\t\t\tif (credential.service === service && credential.account === account) {\n\t\t\t\tfound = true;\n\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\n\t\tif (found) {\n\t\t\tthis.save();\n\t\t}\n\n\t\treturn found;\n\t}\n\n\tasync findPassword(service: string): Promise<string | null> {\n\t\treturn this.doGetPassword(service);\n\t}\n\n\tasync findCredentials(service: string): Promise<Array<{ account: string; password: string }>> {\n\t\treturn this.credentials\n\t\t\t.filter(credential => credential.service === service)\n\t\t\t.map(({ account, password }) => ({ account, password }));\n\t}\n\n\tprivate async logout(service: string): Promise<void> {\n\t\tconst queryValues: Map<string, string> = new Map();\n\t\tqueryValues.set('logout', String(true));\n\t\tqueryValues.set('service', service);\n\n\t\tawait request({\n\t\t\turl: doCreateUri('/auth/logout', queryValues).toString(true)\n\t\t}, CancellationToken.None);\n\t}\n\n\tasync clear(): Promise<void> {\n\t\twindow.localStorage.removeItem(LocalStorageCredentialsProvider.CREDENTIALS_STORAGE_KEY);\n\t}\n}\n\nclass LocalStorageURLCallbackProvider extends Disposable implements IURLCallbackProvider {\n\n\tprivate static REQUEST_ID = 0;\n\n\tprivate static QUERY_KEYS: ('scheme' | 'authority' | 'path' | 'query' | 'fragment')[] = [\n\t\t'scheme',\n\t\t'authority',\n\t\t'path',\n\t\t'query',\n\t\t'fragment'\n\t];\n\n\tprivate readonly _onCallback = this._register(new Emitter<URI>());\n\treadonly onCallback = this._onCallback.event;\n\n\tprivate pendingCallbacks = new Set<number>();\n\tprivate lastTimeChecked = Date.now();\n\tprivate checkCallbacksTimeout: unknown | undefined = undefined;\n\tprivate onDidChangeLocalStorageDisposable: IDisposable | undefined;\n\n\tconstructor(private readonly _callbackRoute: string) {\n\t\tsuper();\n\t}\n\n\tcreate(options: Partial<UriComponents> = {}): URI {\n\t\tconst id = ++LocalStorageURLCallbackProvider.REQUEST_ID;\n\t\tconst queryParams: string[] = [`vscode-reqid=${id}`];\n\n\t\tfor (const key of LocalStorageURLCallbackProvider.QUERY_KEYS) {\n\t\t\tconst value = options[key];\n\n\t\t\tif (value) {\n\t\t\t\tqueryParams.push(`vscode-${key}=${encodeURIComponent(value)}`);\n\t\t\t}\n\t\t}\n\n\t\t// TODO@joao remove eventually\n\t\t// https://github.com/microsoft/vscode-dev/issues/62\n\t\t// https://github.com/microsoft/vscode/blob/159479eb5ae451a66b5dac3c12d564f32f454796/extensions/github-authentication/src/githubServer.ts#L50-L50\n\t\tif (!(options.authority === 'vscode.github-authentication' && options.path === '/dummy')) {\n\t\t\tconst key = `vscode-web.url-callbacks[${id}]`;\n\t\t\twindow.localStorage.removeItem(key);\n\n\t\t\tthis.pendingCallbacks.add(id);\n\t\t\tthis.startListening();\n\t\t}\n\n\t\treturn URI.parse(window.location.href).with({ path: this._callbackRoute, query: queryParams.join('&') });\n\t}\n\n\tprivate startListening(): void {\n\t\tif (this.onDidChangeLocalStorageDisposable) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst fn = () => this.onDidChangeLocalStorage();\n\t\twindow.addEventListener('storage', fn);\n\t\tthis.onDidChangeLocalStorageDisposable = { dispose: () => window.removeEventListener('storage', fn) };\n\t}\n\n\tprivate stopListening(): void {\n\t\tthis.onDidChangeLocalStorageDisposable?.dispose();\n\t\tthis.onDidChangeLocalStorageDisposable = undefined;\n\t}\n\n\t// this fires every time local storage changes, but we\n\t// don't want to check more often than once a second\n\tprivate async onDidChangeLocalStorage(): Promise<void> {\n\t\tconst ellapsed = Date.now() - this.lastTimeChecked;\n\n\t\tif (ellapsed > 1000) {\n\t\t\tthis.checkCallbacks();\n\t\t} else if (this.checkCallbacksTimeout === undefined) {\n\t\t\tthis.checkCallbacksTimeout = setTimeout(() => {\n\t\t\t\tthis.checkCallbacksTimeout = undefined;\n\t\t\t\tthis.checkCallbacks();\n\t\t\t}, 1000 - ellapsed);\n\t\t}\n\t}\n\n\tprivate checkCallbacks(): void {\n\t\tlet pendingCallbacks: Set<number> | undefined;\n\n\t\tfor (const id of this.pendingCallbacks) {\n\t\t\tconst key = `vscode-web.url-callbacks[${id}]`;\n\t\t\tconst result = window.localStorage.getItem(key);\n\n\t\t\tif (result !== null) {\n\t\t\t\ttry {\n\t\t\t\t\tthis._onCallback.fire(URI.revive(JSON.parse(result)));\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t}\n\n\t\t\t\tpendingCallbacks = pendingCallbacks ?? new Set(this.pendingCallbacks);\n\t\t\t\tpendingCallbacks.delete(id);\n\t\t\t\twindow.localStorage.removeItem(key);\n\t\t\t}\n\t\t}\n\n\t\tif (pendingCallbacks) {\n\t\t\tthis.pendingCallbacks = pendingCallbacks;\n\n\t\t\tif (this.pendingCallbacks.size === 0) {\n\t\t\t\tthis.stopListening();\n\t\t\t}\n\t\t}\n\n\t\tthis.lastTimeChecked = Date.now();\n\t}\n}\n\nclass WorkspaceProvider implements IWorkspaceProvider {\n\n\tprivate static QUERY_PARAM_EMPTY_WINDOW = 'ew';\n\tprivate static QUERY_PARAM_FOLDER = 'folder';\n\tprivate static QUERY_PARAM_WORKSPACE = 'workspace';\n\n\tprivate static QUERY_PARAM_PAYLOAD = 'payload';\n\n\tstatic create(config: IWorkbenchConstructionOptions & { folderUri?: UriComponents; workspaceUri?: UriComponents }) {\n\t\tlet foundWorkspace = false;\n\t\tlet workspace: IWorkspace;\n\t\tlet payload = Object.create(null);\n\n\t\tconst query = new URL(document.location.href).searchParams;\n\t\tquery.forEach((value, key) => {\n\t\t\tswitch (key) {\n\n\t\t\t\t// Folder\n\t\t\t\tcase WorkspaceProvider.QUERY_PARAM_FOLDER:\n\t\t\t\t\tif (config.remoteAuthority && value.startsWith(posix.sep)) {\n\t\t\t\t\t\t// when connected to a remote and having a value\n\t\t\t\t\t\t// that is a path (begins with a `/`), assume this\n\t\t\t\t\t\t// is a vscode-remote resource as simplified URL.\n\t\t\t\t\t\tworkspace = { folderUri: URI.from({ scheme: Schemas.vscodeRemote, path: value, authority: config.remoteAuthority }) };\n\t\t\t\t\t} else {\n\t\t\t\t\t\tworkspace = { folderUri: URI.parse(value) };\n\t\t\t\t\t}\n\t\t\t\t\tfoundWorkspace = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t// Workspace\n\t\t\t\tcase WorkspaceProvider.QUERY_PARAM_WORKSPACE:\n\t\t\t\t\tif (config.remoteAuthority && value.startsWith(posix.sep)) {\n\t\t\t\t\t\t// when connected to a remote and having a value\n\t\t\t\t\t\t// that is a path (begins with a `/`), assume this\n\t\t\t\t\t\t// is a vscode-remote resource as simplified URL.\n\t\t\t\t\t\tworkspace = { workspaceUri: URI.from({ scheme: Schemas.vscodeRemote, path: value, authority: config.remoteAuthority }) };\n\t\t\t\t\t} else {\n\t\t\t\t\t\tworkspace = { workspaceUri: URI.parse(value) };\n\t\t\t\t\t}\n\t\t\t\t\tfoundWorkspace = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t// Empty\n\t\t\t\tcase WorkspaceProvider.QUERY_PARAM_EMPTY_WINDOW:\n\t\t\t\t\tworkspace = undefined;\n\t\t\t\t\tfoundWorkspace = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t// Payload\n\t\t\t\tcase WorkspaceProvider.QUERY_PARAM_PAYLOAD:\n\t\t\t\t\ttry {\n\t\t\t\t\t\tpayload = parse(value); // use marshalling#parse() to revive potential URIs\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.error(error); // possible invalid JSON\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\t// If no workspace is provided through the URL, check for config\n\t\t// attribute from server\n\t\tif (!foundWorkspace) {\n\t\t\tif (config.folderUri) {\n\t\t\t\tworkspace = { folderUri: URI.revive(config.folderUri) };\n\t\t\t} else if (config.workspaceUri) {\n\t\t\t\tworkspace = { workspaceUri: URI.revive(config.workspaceUri) };\n\t\t\t}\n\t\t}\n\n\t\treturn new WorkspaceProvider(workspace, payload, config);\n\t}\n\n\treadonly trusted = true;\n\n\tprivate constructor(\n\t\treadonly workspace: IWorkspace,\n\t\treadonly payload: object,\n\t\tprivate readonly config: IWorkbenchConstructionOptions\n\t) {\n\t}\n\n\tasync open(workspace: IWorkspace, options?: { reuse?: boolean; payload?: object }): Promise<boolean> {\n\t\tif (options?.reuse && !options.payload && this.isSame(this.workspace, workspace)) {\n\t\t\treturn true; // return early if workspace and environment is not changing and we are reusing window\n\t\t}\n\n\t\tconst targetHref = this.createTargetUrl(workspace, options);\n\t\tif (targetHref) {\n\t\t\tif (options?.reuse) {\n\t\t\t\twindow.location.href = targetHref;\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tlet result;\n\t\t\t\tif (isStandalone()) {\n\t\t\t\t\tresult = window.open(targetHref, '_blank', 'toolbar=no'); // ensures to open another 'standalone' window!\n\t\t\t\t} else {\n\t\t\t\t\tresult = window.open(targetHref);\n\t\t\t\t}\n\n\t\t\t\treturn !!result;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate createTargetUrl(workspace: IWorkspace, options?: { reuse?: boolean; payload?: object }): string | undefined {\n\n\t\t// Empty\n\t\tlet targetHref: string | undefined = undefined;\n\t\tif (!workspace) {\n\t\t\ttargetHref = `${document.location.origin}${document.location.pathname}?${WorkspaceProvider.QUERY_PARAM_EMPTY_WINDOW}=true`;\n\t\t}\n\n\t\t// Folder\n\t\telse if (isFolderToOpen(workspace)) {\n\t\t\tlet queryParamFolder: string;\n\t\t\tif (this.config.remoteAuthority && workspace.folderUri.scheme === Schemas.vscodeRemote) {\n\t\t\t\t// when connected to a remote and having a folder\n\t\t\t\t// for that remote, only use the path as query\n\t\t\t\t// value to form shorter, nicer URLs.\n\t\t\t\t// ensure paths are absolute (begin with `/`)\n\t\t\t\t// clipboard: ltrim(workspace.folderUri.path, posix.sep)\n\t\t\t\tqueryParamFolder = `${posix.sep}${ltrim(workspace.folderUri.path, posix.sep)}`;\n\t\t\t} else {\n\t\t\t\tqueryParamFolder = encodeURIComponent(workspace.folderUri.toString(true));\n\t\t\t}\n\n\t\t\ttargetHref = `${document.location.origin}${document.location.pathname}?${WorkspaceProvider.QUERY_PARAM_FOLDER}=${queryParamFolder}`;\n\t\t}\n\n\t\t// Workspace\n\t\telse if (isWorkspaceToOpen(workspace)) {\n\t\t\tlet queryParamWorkspace: string;\n\t\t\tif (this.config.remoteAuthority && workspace.workspaceUri.scheme === Schemas.vscodeRemote) {\n\t\t\t\t// when connected to a remote and having a workspace\n\t\t\t\t// for that remote, only use the path as query\n\t\t\t\t// value to form shorter, nicer URLs.\n\t\t\t\t// ensure paths are absolute (begin with `/`)\n\t\t\t\tqueryParamWorkspace = `${posix.sep}${ltrim(workspace.workspaceUri.path, posix.sep)}`;\n\t\t\t} else {\n\t\t\t\tqueryParamWorkspace = encodeURIComponent(workspace.workspaceUri.toString(true));\n\t\t\t}\n\n\t\t\ttargetHref = `${document.location.origin}${document.location.pathname}?${WorkspaceProvider.QUERY_PARAM_WORKSPACE}=${queryParamWorkspace}`;\n\t\t}\n\n\t\t// Append payload if any\n\t\tif (options?.payload) {\n\t\t\ttargetHref += `&${WorkspaceProvider.QUERY_PARAM_PAYLOAD}=${encodeURIComponent(JSON.stringify(options.payload))}`;\n\t\t}\n\n\t\treturn targetHref;\n\t}\n\n\tprivate isSame(workspaceA: IWorkspace, workspaceB: IWorkspace): boolean {\n\t\tif (!workspaceA || !workspaceB) {\n\t\t\treturn workspaceA === workspaceB; // both empty\n\t\t}\n\n\t\tif (isFolderToOpen(workspaceA) && isFolderToOpen(workspaceB)) {\n\t\t\treturn isEqual(workspaceA.folderUri, workspaceB.folderUri); // same workspace\n\t\t}\n\n\t\tif (isWorkspaceToOpen(workspaceA) && isWorkspaceToOpen(workspaceB)) {\n\t\t\treturn isEqual(workspaceA.workspaceUri, workspaceB.workspaceUri); // same workspace\n\t\t}\n\n\t\treturn false;\n\t}\n\n\thasRemote(): boolean {\n\t\tif (this.workspace) {\n\t\t\tif (isFolderToOpen(this.workspace)) {\n\t\t\t\treturn this.workspace.folderUri.scheme === Schemas.vscodeRemote;\n\t\t\t}\n\n\t\t\tif (isWorkspaceToOpen(this.workspace)) {\n\t\t\t\treturn this.workspace.workspaceUri.scheme === Schemas.vscodeRemote;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n}\n\nfunction doCreateUri(path: string, queryValues: Map<string, string>): URI {\n\tlet query: string | undefined = undefined;\n\n\tif (queryValues) {\n\t\tlet index = 0;\n\t\tqueryValues.forEach((value, key) => {\n\t\t\tif (!query) {\n\t\t\t\tquery = '';\n\t\t\t}\n\n\t\t\tconst prefix = (index++ === 0) ? '' : '&';\n\t\t\tquery += `${prefix}${key}=${encodeURIComponent(value)}`;\n\t\t});\n\t}\n\n\tpath = (window.location.pathname + \"/\" + path).replace(/\\/\\/+/g, \"/\")\n\treturn URI.parse(window.location.href).with({ path, query });\n}\n\n(function () {\n\n\t// Find config by checking for DOM\n\tconst configElement = document.getElementById('vscode-workbench-web-configuration');\n\tconst configElementAttribute = configElement ? configElement.getAttribute('data-settings') : undefined;\n\tif (!configElement || !configElementAttribute) {\n\t\tthrow new Error('Missing web configuration element');\n\t}\n\tconst config: IWorkbenchConstructionOptions & { folderUri?: UriComponents; workspaceUri?: UriComponents; callbackRoute: string } = { ...JSON.parse(configElementAttribute), remoteAuthority: location.host }\n\n\t// Create workbench\n\tcreate(document.body, {\n\t\t...config,\n\t\tsettingsSyncOptions: config.settingsSyncOptions ? {\n\t\t\tenabled: config.settingsSyncOptions.enabled,\n\t\t} : undefined,\n\t\tworkspaceProvider: WorkspaceProvider.create(config),\n\t\turlCallbackProvider: new LocalStorageURLCallbackProvider(config.callbackRoute),\n\t\tcredentialsProvider: config.remoteAuthority ? undefined : new LocalStorageCredentialsProvider() // with a remote, we don't use a local credentials provider\n\t});\n})();\n"],"mappings":"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","names":[],"file":"workbench.js"}